---

title: Secure and efficient communication through an intermediary
abstract: Techniques are disclosed for secure and efficient communication from a source to a destination through an intermediary. The disclosed techniques employ a source-to-intermediary encryption algorithm to encrypt the communication from the source to the intermediary. The disclosed techniques also employ an intermediary-to-destination encryption algorithm to encrypt the communication from the intermediary to the destination. Thus, a more optimal encryption algorithm may be employed for communication between the intermediary and the destination, even if the more optimal encryption algorithm is not supported by the source. Also, a more optimal encryption algorithm may be employed for communication between the source and the intermediary, even if the more optimal encryption algorithm is not supported by the destination.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09185088&OS=09185088&RS=09185088
owner: Amazon Technologies, Inc.
number: 09185088
owner_city: Seattle
owner_country: US
publication_date: 20130219
---
Many conventional communications systems employ an intermediary to improve efficiency of communications between a source and a destination. As a common example a load balancer may be employed as an intermediary to evenly distribute a communications traffic load across a number of destination components. In addition to employing such intermediaries another increasingly common characteristic of conventional communications systems is that such systems may often employ end to end encryption techniques which require that data transmitted from a source to a destination remain encrypted throughout its complete path from the source to the destination. In particular if an intermediary is employed end to end encryption may require encryption of a communication both from the source to the intermediary and from the intermediary to the destination. Some conventional techniques accomplish such end to end encryption by employing a single encryption technique supported by both the source and the destination. The single encryption technique is used across the complete communications path from the source to the destination through the intermediary.

In general this disclosure describes techniques for secure and efficient communication from a source to a destination through an intermediary. The disclosed techniques employ a source to intermediary encryption algorithm to encrypt the communication from the source to the intermediary. The disclosed techniques also employ an intermediary to destination encryption algorithm to encrypt the communication from the intermediary to the destination. The source to intermediary encryption algorithm may be different from the intermediary to destination encryption algorithm. Thus the disclosed techniques may enable a more optimal encryption algorithm to be employed for communication between the intermediary and the destination even if the more optimal encryption algorithm is not supported by the source. On the other hand the disclosed techniques may also enable a more optimal encryption algorithm to be employed for communication between the source and the intermediary even if the more optimal encryption algorithm is not supported by the destination.

Many communications systems in accordance with the present disclosure may include large quantities of source components initiating large quantities of communications with the destination components. In such high volume systems and in other systems it may be particularly important to ensure that the communications load is evenly distributed across each of the destination components. Thus one example function of intermediary may be to balance the communications load across each of destination components A D. Intermediary may also direct incoming communications to a selected destination component based on other factors. For example if the destination components include differing attributes or capabilities the intermediary may direct the communications by determining a particular destination component that is best suited to handle or process the communications. Additionally intermediary may direct a request to particular destination components based on factors such as time of day geographic location and any number of other relevant factors. For example incoming communications may be more heavily routed to destination components in the United States during typical United States business hours while incoming communications may be more heavily routed to destination components in India during typical Indian business hours.

The system depicted in may employ any number of various cryptographic protocols and other techniques to secure communication between various components. For example for Internet based communications commonly employed cryptographic protocols may include Transport Layer Security TLS and Secure Sockets Layer SSL which are commonly referred to collectively as TLS SSL. Many of these cryptographic protocols and other security techniques involve the use of one or more encryption algorithms to encrypt data communicated between devices or components. The term encryption algorithm as used herein refers to any cipher code or other technique used to encrypt communications. Such encryption algorithms may include for example Advanced Encryption Standard AES Data Encryption Standard DES RC4 Blowfish and many others.

The use of many conventional encryption algorithms requires significant computer processing power. To help reduce the required processing power many newer systems have implemented certain encryption algorithms in hardware allowing the total processing time to be reduced by an order of magnitude. However not all systems are capable of implementing the same or even any encryption algorithms in hardware. Additionally due to other limitations many systems may not be as efficient as others with respect to performing various encryption algorithms. For example certain systems may not include software or processing power required to efficiently support certain encryption algorithms. Additionally many systems simply may not be privy to the codes and or algorithms required to perform various encryption algorithms. As an analogy many French speakers likely have the intellectual capability required to also speak Spanish but may not be capable of speaking Spanish because they have never been trained to do so. Thus for these and various other reasons certain components or devices are simply more efficient or capable than others with respect to performing certain encryption algorithms.

One way in which the present disclosure provides enhanced efficiency for secure communications is by employing a source to intermediary encryption algorithm for use between source and intermediary and an intermediary to destination encryption algorithm for communications between intermediary and destination . The source to intermediary encryption algorithm may be different from the intermediary to destination encryption algorithm . Thus the disclosed techniques may enable a more optimal encryption algorithm to be employed for communication between the intermediary and the destination even if the more optimal encryption algorithm is not supported by the source . On the other hand the disclosed techniques may also enable a more optimal encryption algorithm to be employed for communication between the source and the intermediary even if the more optimal encryption algorithm is not supported by the destination .

Before describing some example techniques for encryption algorithm selection some specific examples of the more generalized system depicted in will now be described in . As should be appreciated any number of additional or alternative system configurations other than those depicted in may also be employed in accordance with the present disclosure. illustrates one example embodiment of a secure Internet based client server communications system in accordance with the present disclosure. In the source is client and the destination components are web servers A D. The intermediary is load balancer . Load balancer may be for example a load balancer proxy component. Load balancer operates to generally evenly distribute the communications load across web servers A D though as discussed above there are many circumstances in which an even distribution may be undesirable. In the example of Client and load balancer may communicate via for example a wide area network WAN such as the Internet or a local area network LAN or other network. Load balancer and web servers A D may be located in local physical proximity to one another or may be remote from one another. If local to one another load balancer and web servers A D may for example communicate via a LAN. If remote from one another load balancer and web servers A D may for example communicate via a WAN such as the Internet.

In the example of client load balancer and web servers A D may for example communicate using TLS SSL protocol. Additional or alternative communication protocols may also be employed. In response to receiving a communications request for the source the load balancer may select a particular web server A D to handle the communications from the source. The particular web server may be selected based on load balancing and any number of additional factors. The load balancer may select a client to load balancer encryption algorithm to encrypt communications between client and load balancer . The load balancer may also select a load balancer to web server encryption algorithm to encrypt communications between load balancer and web servers A D. The encryption algorithms and may be selected according to one or more of the encryption algorithm selection techniques that will be described in detail below.

Another example system in which the disclosed techniques may be employed is depicted in . In particular illustrates one example embodiment of a secure virtual communications system in accordance with the present disclosure. In the destination components are guest operating systems OS s A D and the intermediary is virtual machine manager VMM . Guest OS s A D may form or be referred to as one or more virtual machines. VMM may be for example a hypervisor or any other component that serves to manage execution of virtual machines and or guest OS s on a virtualized device . The source may be an external source A which is external to virtualized device or an internal source B which is internal to virtualized device . Internal source B may be for example a component executing within a host OS or possibly even within another Guest OS A D. External source A and virtualized device may be located in local physical proximity to one another or may be remote from one another. If local to one another external source A and virtualized device may for example communicate via a LAN. If remote from one another external source A and virtualized device may for example communicate via a WAN such as the Internet.

In some cases in response to receiving a communications request from a source the VMM may select a particular Guest OS A D to handle the communications from the source. In some cases however the communications may be pre directed by the source to a particular Guest OS . Additionally in some cases only a single Guest OS may be capable of handling the communications. The VMM may select a source to VMM encryption algorithm to encrypt communications between source and VMM . The VMM may also select a VMM to Guest OS encryption algorithm to encrypt communications between VMM and a selected Guest OS . The encryption algorithms and may be selected according to one or more of the encryption algorithm selection techniques that will be described in detail below.

Each of the supported encryption algorithm lists and may indicate an order of preference associated with each of the encryption algorithms. The order of preference of each encryption algorithm may be determined based upon any number of factors with a variety of respective weights. Such factors may include for example a measured and or expected efficiency speed cost bandwidth and processing power associated with employing each of the encryption algorithms by the respective components or devices. Such factors may also include for example a measured and or expected cost difficulty and time required by an unauthorized party to neutralize each encryption algorithm and access the encrypted communications. As an example in some cases techniques that are expected to require the least amount of processing power while also requiring the most difficulty to decrypt may tend to be the most preferred techniques. The factors and associated weights used to determine the order of preference may be the same or different for each of the lists and .

Each of the supported encryption algorithm lists and may be generated by or generated based on information provided by any or all of source intermediary and destination . Additionally or alternatively each of the supported encryption algorithm lists and may be generated by or generated based on information provided by additional services components or devices with any relevant information that can be used to generate such lists. As another example in some cases the source or destination or another component may simply identify hardware components included within or associated with the source or the destination and one or more of the lists and may be compiled by the intermediary or another component based on this hardware information. For example the intermediary or another component may have access to information that specifies which encryption algorithms are best suited for use with various hardware components. Similarly a destination component can run a benchmarking procedure that tests the component s ability to encrypt and or decrypt data using different encryption algorithms and use the results of the procedure to generate its list. In an example embodiment the component could run such a benchmark when it comes online according to a schedule or in response to a request to run a benchmark from another component such as the intermediary .

Each of the supported encryption algorithm lists and may be organized according to any desired format or order. For example each of the supported encryption algorithm lists and may be ordered such that the most preferred encryption algorithm is placed at the top of the list with the remaining encryption algorithms listed from the top down according to their respective order of preference.

In addition to supported encryption algorithm lists and also depicts a communication request which is a request that may be issued by source in order to initiate communications with the destination . In the example of the request includes the source supported algorithms list . The request may also include other information about the desired communications. For example the request may identify the desired destination and in some cases may even identify a selected destination component A D. The request may also for example provide indications of the size type format urgency and or any other attribute of the data to be communicated to the destination.

While the source supported algorithms list may be sent to the intermediary by way of the communications request different techniques may be employed to deliver the destination supported algorithms list to intermediary . For example in one embodiment upon receiving the communications request the destination supported algorithms list may be generated on the fly by having the intermediary request the supported encryption algorithm information from one or more destination components A D.

In another embodiment the destination supported algorithm list may be a pre existing list that is stored and maintained by intermediary . In some cases information for such a pre existing list may be pulled by intermediary by having the intermediary request the information from the destination . In other cases information for a pre existing list may be pushed to intermediary by having the destination provide the information to the intermediary without being triggered by the intermediary . In yet other cases a combination of both pushing and pulling techniques may be used to compile and maintain a pre existing list.

A pre existing list may be generated by the intermediary whenever it becomes connected to one or more destination components. Specifically upon being connected the intermediary may request a list of supported encryption algorithms from each connected destination component. Additionally a pre existing list may be updated whenever a destination component is connected to or disconnected from the intermediary . A pre existing list may also be updated periodically by receiving updates from the destination components A D using pushing and or pulling techniques. The periodic updates may be at regular or varying intervals.

Furthermore a destination component A D may notify the intermediary whenever the destination component detects that a change to the destination supported algorithm list may be necessary. For example this may occur when the destination component A D becomes capable of supporting a new algorithm or loses the capability to support an algorithm. This may also occur when for example the destination component A D changes its preferences for support of one or more algorithms.

Referring back to upon receiving communications request from source intermediary may if necessary select a particular destination component A D to which to direct the requested communications. The intermediary may also select source to intermediary and intermediary to destination encryption algorithms with which to encrypt the requested communications. As will be described in detail below depending upon various priorities the destination component A D may be selected before after or simultaneously with the selection of the encryption techniques.

For example in some cases a destination component A D may be selected first and the encryption techniques may then be selected based on the encryption algorithms supported by the selected destination component. In these cases the destination component may be selected based on factors other than supported encryption algorithms. These other factors may include factors set forth above such as load balancing. As another example in some other cases the encryption algorithms that are supported by each destination component may be evaluated and used to simultaneously select both a destination component and the encryption techniques for use with the selected destination component.

Some example techniques for source to intermediary and intermediary to destination encryption algorithm selection will now be described in detail. In general the encryption algorithms may be selected based on an evaluation of supported algorithm lists and . Once again depending upon varying priorities the source to intermediary encryption algorithm may be selected before after or simultaneously with the intermediary to destination encryption algorithm. Some example techniques for selection of the source to intermediary encryption algorithm will be described first. In some rare cases source and intermediary may not have any common supported encryption algorithms. In these cases intermediary may respond to the communications request from source by sending an error message back to source or by otherwise informing source that source and intermediary have no common supported encryption algorithms. In other cases source and intermediary may have only a single common supported encryption algorithm. In such cases the single common supported encryption algorithm may be selected with no or minimal required decisions.

In other scenarios however there may be two or more common supported encryption algorithms available for use between source and intermediary . In such cases the decision of which common supported encryption algorithm to employ as the source to intermediary encryption algorithm may be based on any number of relevant priorities with various possible respective weights. Some such priorities may include for example selecting an encryption technique that is more preferred by the source selecting an encryption technique that is more preferred by the intermediary and selecting an encryption technique that is more preferred across the source and the intermediary together i.e. lowest average rank . In some circumstances the encryption algorithms supported by the destination may also be given at least some priority in selecting the source to intermediary encryption algorithm.

Some example techniques for selection of the intermediary to destination encryption algorithm will now be described. In some rare cases intermediary and destination may not have any common supported encryption algorithms. In these cases intermediary may respond to the communications request from source by sending an error message back to source or by otherwise informing source that the intermediary and the destination have no common supported encryption algorithms. In other cases intermediary and a selected destination component A D may have only a single common supported encryption algorithm. In such cases the single common supported encryption algorithm may be selected with no or minimal required decisions.

In other scenarios however there may be two or more common supported encryption algorithms available for use between source and a selected destination component A D. In such cases the decision of which common supported encryption algorithm to employ as the intermediary to destination encryption algorithm may be based on any number of relevant priorities with various possible respective weights. Such priorities and weights may be the same as or different from the priorities and weights used to select the source to intermediary encryption algorithm. Such priorities may include for example selecting an encryption technique that is more preferred by the destination selecting an encryption technique that is more preferred by the intermediary and selecting an encryption technique that is more preferred across the intermediary and destination together i.e. lowest average rank . In some circumstances the encryption algorithms supported by the source may also be given at least some priority in selecting the source to intermediary encryption algorithm.

A number of example scenarios for encryption algorithm selection are depicted in . It should be emphasized that the scenarios depicted in are intended for example purposes only and that in practice the disclosed techniques may be employed in connection with any number of additional or alternative scenarios with varying levels of complexity. It should also be emphasized that the selected priorities depicted in and their corresponding application are also intended for example purposes only and any number of additional or alternative selection priorities and corresponding applications may also be employed with varying levels of complexity in accordance with the present disclosure.

Referring first to an example source supported encryption algorithm list intermediary supported encryption algorithm list and destination supported encryption algorithm list are depicted. Each such list includes the encryption algorithms supported by each respective device or component. As shown depicts an example scenario in which the source supports two encryption algorithms S and X while the intermediary and the destination both support five encryption algorithms S A B I and D . Each of the lists and ranks the supported encryption algorithms in order of preference from the top down. For example algorithm S is the most preferred algorithm by the source algorithm I is the most preferred algorithm by the intermediary and algorithm D is the most preferred algorithm by the destination.

In the example of as shown in selected source to intermediary encryption algorithm box algorithm S is chosen as the selected source to intermediary encryption algorithm as it is the only common algorithm supported by both the source and the intermediary. In this example however there are multiple common algorithms supported by both the intermediary and the destination each with differing orders of preference. Thus a decision must be made of which of the common algorithms to choose as the selected intermediary to destination algorithm.

There are a number of trade offs associated with this decision. For example employing algorithm D as the selected intermediary to destination algorithm may be beneficial because it is the algorithm most preferred by the destination. This may for example reduce processing power required by the destination. As another example employing algorithm I as the selected intermediary to destination algorithm may be beneficial because it is the algorithm most preferred by the intermediary. This may for example reduce processing power required by the intermediary.

As another example employing algorithm A as the selected intermediary to destination algorithm may be beneficial because it has the lowest total ranking across both the intermediary and the destination. Thus although algorithm A is not most preferred by any particular single component it may be the most efficient algorithm for the intermediary and destination to employ collectively.

As yet another example employing algorithm S as the selected intermediary to destination algorithm may be beneficial because it is also being used as the selected source to intermediary algorithm. Thus if algorithm S were also to be used as the intermediary to destination algorithm this might allow the communication to pass through the intermediary without needing to be decrypted from algorithm S and then re encrypted using algorithm D. Thus algorithm S may be the most efficient component for the source intermediary and destination to employ collectively.

In the particular example of as shown in priorities box a priority has been set for choosing the intermediary to destination encryption algorithm based on the preferred destination algorithm. Thus as shown in selected intermediary to destination encryption algorithm box algorithm D is chosen as the selected intermediary to destination encryption algorithm because it is most preferred algorithm by the destination.

In the particular example of the load on components A B and D is heavy while the load on component D is light. Additionally depicts the example scenario in which there are two selection priorities shown in their order of importance. Load balancing is listed as the top priority. Also the preferred destination algorithm is listed as the second priority. In this case component C has the lightest load. Thus because load balancing is top priority component C is chosen as the selected destination component as indicated in box . Additionally encryption algorithm C is the algorithm that is most preferred by component C. Thus because the preferred destination algorithm is the next priority algorithm C is selected as the intermediary to destination encryption algorithm as shown in box .

At operation one or more encryption algorithms supported by both the source and the intermediary are determined. This determination may for example be made by examining and comparing a source supported algorithms list which specifies encryption algorithms supported by the source and an intermediary supported algorithms list which specifies encryption algorithms supported by the intermediary. The source supported algorithms list may for example be provided as part of the communications request received at operation while the intermediary supported algorithms list may for example be stored and maintained by the intermediary.

At operation a source to intermediary encryption algorithm is selected. The source to intermediary encryption algorithm may be selected from one of the common algorithms supported by both the source and destination determined at operation . As set forth in detail above the source to intermediary encryption algorithm may be selected based on factors such as for example a determination of which encryption algorithms are best supported by the source and the intermediary collectively or individually. The selection may also be based upon any other relevant factors with any appropriate respective weights. For example a determination of which encryption algorithms are best supported by the destination may also be considered.

At operation a selected destination component is determined to receive the communications from the source. As set forth in detail above the selected destination component may be determined based on factors such as load balancing or any number of other relevant factors with any appropriate respective weights. In some cases a selection may be unnecessary such as when the destination includes only a single component or when a particular destination is pre selected by the source and identified in the communications request.

At operation one or more encryption algorithms supported by both the intermediary and the selected destination component are determined. This determination may for example be made by examining and comparing an intermediary supported algorithms list which specifies encryption algorithms supported by the intermediary and a destination supported algorithms list which specifies encryption algorithms supported by the selected destination component. As set forth above the destination supported algorithms list may for example be generated on the fly in response to receiving the communications request or may for example be a pre compiled stored list that may be maintained by the intermediary using techniques such as the examples set forth above.

At operation an intermediary to destination encryption algorithm is selected. The intermediary to destination encryption algorithm may be selected before after or simultaneously with the source to intermediary encryption algorithm. The intermediary to destination encryption algorithm may be the same as or different from the source to intermediary encryption algorithm. The source to intermediary encryption algorithm may be selected based on factors such as for example a determination of which encryption algorithms are best supported by the intermediary and the destination collectively or individually. The selection may also be based upon any other relevant factors with any appropriate respective weights. For example a determination of which encryption algorithms are best supported by the source may also be considered.

The destination component selection of operation may be performed before after or simultaneously with the encryption algorithm related operations and . As set forth in detail above in some cases the destination component may even be selected based upon a determination of which encryption algorithms are supported by the source intermediary and destination.

At operation one or more notifications of the selections made during any or all of operations and are issued. Such notifications may include for example notifying the source of the selected source to destination encryption algorithm. Additionally for example the selected destination component may be notified of its selection to receive communications from the source and also the selected intermediary to destination encryption algorithm. The notifications may be made directly or indirectly through intermediate components. For example in some cases the intermediary may send separate notifications to the source and the destination. In other cases the intermediary may send a single notification to the destination and the destination may then forward any necessary notifications to the source.

After performance of selection techniques such as those depicted in the requested encrypted communications may then be performed. In particular is a flowchart depicting an example procedure for performing encrypted communications in accordance with the present disclosure. At operation the intermediary receives the requested encrypted communication from the source. The communication will be encrypted using the selected source to intermediary encryption algorithm. At operation it is determined whether the selected intermediary to destination encryption technique for the received communication is the same as or different from the source to intermediary encryption algorithm. If the selected encryption algorithms are the same then at operation the intermediary transmits the incoming communication along to the selected destination component without changing the encryption algorithm.

If on the other hand selected encryption algorithms are different then at operation the intermediary decrypts the incoming communication from the source. Then at operation the intermediary re encrypts the communication using the selected intermediary to destination encryption algorithm. Finally at operation the intermediary transmits the incoming communication along to the selected destination component using the selected intermediary to destination encryption algorithm.

Each type or configuration of computing resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Customers may choose to allocate a number of small processing resources as Web servers and or one large processing resource as a database server for example.

Data center may include servers which may be referred herein singularly as a server or in the plural as the servers that provide computing resources available as virtual machine instances which may be referred herein singularly as a virtual machine instance or in the plural as the virtual machine instances . The virtual machine instances may be configured to execute applications including Web servers application servers media servers database servers and the like. Other resources that may be provided include data storage resources not shown and may include file storage devices block storage devices and the like.

The availability of virtualization technologies for computing hardware has provided benefits for providing large scale computing resources for customers and allowing computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies such as those provided by VMW or other virtualization systems may allow a physical computing device to be shared among multiple users by providing each user with one or more virtual machine instances hosted by the physical computing device. A virtual machine instance may be a software emulation of a particular physical computing system that acts as a distinct logical computing system. Such a virtual machine instance provides isolation among multiple operating systems sharing a given physical computing resource. Furthermore some virtualization technologies may provide virtual resources that span one or more physical resources such as a single virtual machine instance with multiple virtual processors that spans multiple distinct physical computing systems.

Referring to communications network may for example be a publicly accessible network of linked networks and possibly operated by various distinct parties such as the Internet. In other embodiments communications network may be a private network such as for example a corporate or university network that is wholly or partially inaccessible to non privileged users. In still other embodiments communications network may include one or more private networks with access to and or from the Internet.

Communication network may provide access to computers . User computers may be computers utilized by users or other customers of data center . For instance user computer or may be a server a desktop or laptop personal computer a tablet computer a wireless telephone a personal digital assistant PDA an e book reader a game console a set top box or any other computing device capable of accessing data center . User computer or may connect directly to the Internet e.g. via a cable modem or a Digital Subscriber Line DSL . Although only two user computers and are depicted it should be appreciated that there may be multiple user computers.

User computers may also be utilized to configure aspects of the computing resources provided by data center . In this regard data center might provide a Web interface through which aspects of its operation may be configured through the use of a Web browser application program executing on user computer . Alternatively a stand alone application program executing on user computer might access an application programming interface API exposed by data center for performing the configuration operations. Other mechanisms for configuring the operation of the data center including deploying updates to an application might also be utilized.

Servers shown in may be standard servers configured appropriately for providing the computing resources described above and may provide computing resources for executing one or more applications. In one embodiment the computing resources may be virtual machine instances . In the example of virtual machine instances each of the servers may be configured to execute an instance manager or which may be referred herein singularly as an instance manager or in the plural as the instance managers capable of executing the virtual machine instances . The instance managers may be a virtual machine monitor VMM or another type of program configured to enable the execution of virtual machine instances on server for example. As discussed above each of the virtual machine instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed above discuss the context of virtual machine instances other types of implementations can be utilized with the concepts and technologies disclosed herein. For example the embodiments disclosed herein might also be utilized with computing systems that do not utilize virtual machine instances.

In the example data center shown in a router may be utilized to interconnect the servers and . Router may also be connected to gateway which is connected to communications network . Router may manage communications within networks in data center for example by forwarding packets or other data communications as appropriate based on characteristics of such communications e.g. header information including source and or destination addresses protocol identifiers etc. and or the characteristics of the private network e.g. routes based on network topology etc. . It will be appreciated that for the sake of simplicity various aspects of the computing systems and other devices of this example are illustrated without showing certain conventional details. Additional computing systems and other devices may be interconnected in other embodiments and may be interconnected in different ways.

It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that data center described in is merely illustrative and that other implementations might be utilized. Additionally it should be appreciated that the functionality disclosed herein might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing device may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

Each of the processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and subcombinations are intended to fall within the scope of this disclosure. In addition certain methods or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

