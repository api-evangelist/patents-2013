---

title: Integrated display of data metrics from different data sources
abstract: Systems and methods for are disclosed for providing integrated display of data metrics from different data sources. In some embodiments, an icon representing a de-limited data file can be positioned on a graphical interface that displays first metrics data for a first time period. An integration module can respond to the positioning of the icon by determining that the de-limited data file includes second metrics data for a second time period at least partially overlapping with the first time period. The integration module can update the graphical interface to display at least some of the second metrics data from the delimited data file with the first metrics data. The first metrics data and the second metrics data can be displayed for at least an overlapping portion between the first and second time periods.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09418347&OS=09418347&RS=09418347
owner: Adobe Systems Incorporated
number: 09418347
owner_city: San Jose
owner_country: US
publication_date: 20130801
---
This disclosure relates generally to computer implemented methods and systems and more particularly relates to integrated display of data metrics from different data sources.

Various computing applications allow companies or other entities to analyze marketing campaigns revenue trends and or other business functions. Companies or other entities use business data from multiple sources such as analytics vendors advertising agencies search vendors display vendors email vendors stores inventory financial logs etc. In these contexts it may be desirable to compare different sources of data.

Prior solutions for combining organizing and or comparing data from different sources may involve downloading data from multiple sources into one or more combined spreadsheets. The data from the different sources may be combined into a database. Complex query processes may be used to extract specific subsets of information from the database. Other solutions may involve uploading data from such spreadsheets into a common system. These prior solutions may involve significant configuration and formatting requirements to map data obtained from different sources to a format used by the common system in order to view integrated data in the common system. Prior solutions for combining offline and online data may therefore involve complicated uploading methods and increased processing time.

It is desirable to provide simplified solutions for integrating business metrics and other data from multiple data sources.

One embodiment involves positioning an icon representing a de limited data file on a graphical interface. The graphical interface displays first metrics data for a first time period. The first metrics data and the de limited data file are obtained from different data sources. The embodiment further involves responding to the positioning of the icon by determining that the de limited data file includes second metrics data for a second time period at least partially overlapping with the first time period. The embodiment further involves updating the graphical interface to display at least some of the second metrics data from the delimited data file with the first metrics data for at least an overlapping portion between the first and second time periods.

These illustrative embodiments are mentioned not to limit or define the disclosure but to provide examples to aid understanding thereof. Additional embodiments are discussed in the Detailed Description and further description is provided there.

Computer implemented systems and methods are disclosed for integrated display of data metrics from different data sources such as online data from a server displayed via a website and offline data from a spreadsheet file stored locally at a computing device accessing the website. Automatically integrating the display of data metrics from different data sources can provide real time data integration. Automatically integrating the display of data metrics from different data sources can also decrease or eliminate tasks associated with configuring an online data source to import offline data.

The following non limiting example is provided to help introduce the general subject matter of certain embodiments. A delimited data file such as but not limited to a spreadsheet or a data file including comma separated or tab separated values may be stored at a computing device. The delimited data file can store data in pivot table format that includes a header row with multiple column headers and data rows with respective values for the column headers. The computing device can access a website or other online data source to display metrics data that is similar to the data from the delimited data file. For example the delimited data file may include data describing store based sales of a product and the website may be used to access and display business metrics describing web based sales of the product. An icon representing the delimited data file may be dragged and dropped onto a chart presented by the website for displaying the web based sales metrics. The web browser can include an integration module or other client side code for integrating data from the delimited data file and the online metrics data for display via the chart presented by the website. The data from the delimited data file can thus be displayed for comparison with the data from the online data source.

An icon representing a delimited data file can thus be positioned on a graphical interface via a drag and drop operation. The associated delimited data can be automatically integrated with metrics data presented via the graphical interface without using a plug in or other software module that is specifically designed for importing the delimited data into the application used to generate the metrics data. Automatically integrating the display of data metrics from different data sources using a drag and drop or other placement operation can reduce or eliminate the need to upload offline data separately from a browser application using a file transfer protocol application or other file transfer application.

In accordance with some embodiments an integration module executed by a processor can integrate data from different data sources such as online data and offline data. An icon representing a delimited data file can be positioned on a graphical interface that displays metrics data for a time period. For example an icon representing a spreadsheet file can be dragged and dropped onto a graphical interface presented in a web browser. The metrics displayed in the graphical interface and the delimited data file can be obtained from different data sources. For example the delimited data file may be obtained from the local memory of a computing device e.g. a computer accessing a website and the metrics may be retrieved or otherwise obtained from a data source over the Internet e.g. a server system accessible via the website . An integration module included in a web browser or other application can determine that the delimited data file includes data identifying multiple time intervals that at least partially overlap with the time period displayed in the graphical interface. For example the graphical interface may display business metrics from several months of a year and the delimited data file may include data associated with various time periods including the same months of the same year. The integration module can update the graphical interface to display both data for the metrics and data from the delimited data file that describes at least one additional metric. The data describing the metrics and the additional metric can be displayed for the overlapping time period. For example the graphical interface may be updated to display both online data describing web based sales metrics for a given year along with data obtained from the delimited data file that describes store based sales for the same year.

As used herein the term delimited data file is used to refer to a data file in which data is organized into multi dimensional arrays of data having one or more data values designated as a delimiter for specifying boundaries between different entries in an array. Non limiting examples of a delimited data file include a spreadsheet a data file having comma separated values a data file having tab separated values a data file having colon separated values etc. Non limiting examples of data arrays can include rows corresponding to records and or columns corresponding to fields in records. In some embodiments one or more arrays of a delimited data file can include headers such as but not limited to column headers identifying a category or other attribute common to multiple data values in a column from multiple records.

As used herein the term metrics is used to refer to data describing measures of performance for an organization or other entity. For example business metrics can include data describing a number of sales an amount of revenue a number of orders etc.

As used herein the term integration module is used to refer to executable code configured for performing one or more operations for providing integrated display of data metrics from different data sources. An integration module can include a plug in or other code included in or accessible by a browser application or other suitable application. In some embodiments the integration module can integrate data from different data sources without performing one or more steps involved in manually mapping data fields for the first data source to data fields for the second data source.

As used herein the term online data is used to refer to data retrievable from a data source such as but not limited to a web server that is accessible via a data network such as but not limited to the Internet . For example a website accessed by a computing system can display online data retrieved from a web server system during a session established with the website by the first computing system.

As used herein the term offline data is used to refer to data that is stored to a data source that is inaccessible via a data network or that is otherwise restricted from being accessed via the data network. In some embodiments data may be offline i.e. inaccessible via the network even though a system at which the data is stored is accessible via a network. For example offline data may be stored in a memory location or secure directory that is configured to be inaccessible to one or more entities via the data network by restricting the sharing of the memory location or directory and or restricting access rights with respect to the memory location or secure directory.

In some embodiments the integration module can allow sharing of offline data via an online forum. For example a spreadsheet or other delimited data file can be dragged and dropped into a feed or other graphical interface displayed by a website. The spreadsheet or other delimited data file can be positioned adjacent to related data in the feed or other graphical interface. The integration module can respond to the drag and drop operation by rendering a graph table or other suitable object for displaying data from the spreadsheet or other delimited data file in a portion of the graphical interface indicated by the drag and drop operation. In some embodiments the spreadsheet or other delimited data file can be stored in an online data source for downloading via the website by other users having access to the feed or other graphical interface in the website.

In additional or alternative embodiments the integration module can allow comparison of offline data with online data via an online forum. For example a spreadsheet or other delimited data file can be dragged and dropped into a chart graph or other display object in a graphical interface provided by a website for presenting online data. The online data can be organized by date or time. The integration module can automatically map date or time values in the spreadsheet with date or time values of the online data. The integration module can update the graphical interface to display data from the spreadsheet in the same chart graph or other display object. The integrated display of the online data and the data from the spreadsheet can allow for real time comparison correlation or other analysis of the online data and offline data in a common graphical interface.

In additional or alternative embodiments the integration module can allow storage of the offline data to an online data source. For example a spreadsheet or other delimited data file can be dragged and dropped into a graphical interface provided by a website for accessing an online data source. The integration module can automatically map and upload the offline data for storage with other online data in the online data source. The results of the automated uploading process can be displayed in the graphical interface. The integration module can reduce or eliminate the use of a complicated wizard used for data mapping purposes in uploading offline data to an online data source.

In some embodiments a simple graphical interface can be used to refine mapping of the offline data to the online data source. For example the integration module can provide a graphical interface listing suggested mapping and or a list of fields in the offline data that cannot be automatically mapped to the online data source. The graphical interface can be used to resolve data mappings and or provide improved accuracy with respect to such mappings. For example the graphical interface can identify columns in the offline data file to be aggregated for uploading to the online data source identify a default subset of the offline data to be uploaded and or displayed etc. In some embodiments the integration module can store data describing manual configurations via the mapping graphical interface. The integration module can use the data describing historical manual configurations to improve the accuracy of suggested mappings and or improve the accuracy of automated mappings for subsequent integrations of offline data with online data.

In additional or alternative embodiments data from a delimited data file or other offline data can be integrated with metrics data or other data from an online or other data source using a data attribute other than time. For example different data sets from different data sources may include data items with data attributes such as but not limited to a geographic location a specific product name a specific business metric e.g. page views for a business web page etc. The integration module can determine that online data presented in a graphical interface is organized according to the data attribute. The integration module can determine that data from an offline data source or other data source includes data having the same data attribute used to organize the online data in the graphical interface. The integration module can update the graphical interface to display offline data obtained from a delimited data file that is organized using the same data attribute.

As used herein the term data item is used to refer to individual units of a data set having one or more data values. Non limiting examples of a data item include a row in a spreadsheet or delimited file a record in a database etc.

In some embodiments the delimited data may include data values for a data attribute that do not overlap with data values for the data attribute in the metrics data. In one non limiting example the delimited data and the metrics data may include data that can be organized based on date and or time without the delimited data and the metrics data having any overlapping time values. In another non limiting example the delimited data and the metrics data may include data that can be organized based on geographical location without the delimited data and the metrics data having any data associated with a common geographical location. Updating the graphical interface to include both the delimited data and the metrics data may include for example modifying an axis along which data is organized to include values from both the delimited data and the metrics data. For example a horizontal axis may be expanded to include data time geographic or other values of the data attribute from the delimited data positioned adjacent to values of the data attribute from the metrics data.

Referring now to the drawings is a block diagram depicting example computing systems for implementing certain embodiments. The example computing systems include a computing system and a server system in communication via a data network .

The computing system includes a processor . The processor may include a microprocessor an application specific integrated circuit ASIC a state machine or other suitable processing device. The processor can include any number of computer processing devices including one. The processor can be communicatively coupled to a computer readable medium such as a memory . The processor can execute computer executable program instructions and or accesses information stored in the memory . The memory can store instructions that when executed by the processor cause the processor to perform operations described herein.

A computer readable medium may include but is not limited to an electronic optical magnetic or other storage device capable of providing a processor with computer readable instructions. Other examples comprise but are not limited to a floppy disk CD ROM DVD magnetic disk memory chip ROM RAM an ASIC a configured processor optical storage magnetic tape or other magnetic storage or any other medium from which a computer processor can read instructions. The instructions may comprise processor specific instructions generated by a compiler and or an interpreter from code written in any suitable computer programming language including for example C C C Visual Basic Java Python Perl JavaScript and ActionScript.

The computing system can also include a bus an input output I O interface and a display device . The bus can communicatively couple one or more components of the computing system . The I O interface can receive input from input devices e.g. a keyboard a mouse a touch screen etc. and provide output to output devices such as but not limited to a display device . A display device can display output e.g. graphical interfaces data etc. generated by the processor based on executing computer readable instructions stored in the memory . Non limiting examples of a display device include a monitor a touchscreen etc.

The computing system can include any suitable computing device or system for communicating via a data network and executing computer readable instructions stored in the memory . Non limiting examples of a suitable computing device or system include a desktop computer a laptop computer a tablet computer etc.

The server system includes a processor . The processor may include a microprocessor an application specific integrated circuit ASIC a state machine or other suitable processing device. The processor can include any number of computer processing devices including one. The processor can be communicatively coupled to a computer readable medium such as a memory . The processor can execute computer executable program instructions and or accesses information stored in the memory . The memory can store instructions that when executed by the processor cause the processor to perform operations described herein. A bus can also be included in the server system . The bus can communicatively couple one or more components of the server system .

The server system can include any suitable computing system for hosting or accessing the metrics data . In some embodiments the server system may be a single computing system. In other embodiments the server system may be a virtual server implemented using a number of computing systems connected in a grid or cloud computing topology.

The integration module of the client application can be configured for integrating the display of the metrics data with at least some of the delimited data as described in detail below. The integration module can be a plug in or other module implemented using any suitable programming language. A suitable programming language can be a programming language that can provide a virtual machine embedded in a browser application or other client application . A virtual machine can include a software abstraction of a separate operating system executed on a processing device. Non limiting examples of a suitable programming language include scripting languages such as but not limited to JavaScript GOOGLE Dart SUN Java JavaFX MICROSOFT ActiveX etc. The integration module can read data from the delimited data . The integration module can access one or more files including the delimited data via drag and drop operations or other suitable operations for accessing one or more files including the delimited data . In some embodiments the integration module can access a document object model DOM used by a browser application or other suitable client application such that the integration module can manipulate a web page or other electronic content used by the client application in real time. Manipulating electronic content in real time can include executing both operations for initiating a modification to electronic content and corresponding operations for implementing manipulation within a defined period of time such as during a session in which a web page or other electronic content is accessed.

The graphical interface can be provided by the client application . The graphical interface can be used to display metrics data accessed by the client application from the server system . For example sales data can represent be derived from or otherwise use the metrics data as depicted by the bidirectional arrow in . In some embodiments modifications to the sales data as displayed in the graphical interface can modify the metrics data accordingly. In other embodiments modifications to display of the sales data in the graphical interface can be performed without causing modifications to the underlying metrics data .

The sales data can be displayed in any suitable format. For example the sales data is displayed in a graphical interface of a website titled Marketing Analytics Website as depicted in . The sales data is displayed using multiple bar graphs for respective months in a year such as the months of March through July of the year 2012. The sales data can include data describing sales of a given product via a website for the depicted months. In additional or alternative embodiments types of metrics data other than sales data can be displayed in a graphical interface . In additional or alternative embodiments data can be displayed in a graphical interface in formats other than bar graphs such as charts line graphs data plots tables etc.

The graphical interface can display one or more icons representing one or more files stored in the memory and or otherwise accessible by the computing system via a data source other than the server system . For example icon labeled store sales can represent the delimited data as depicted by the bidirectional arrow in . The delimited data can include for example data describing sales of a given product via in store transactions. Although depicts sales data presented in the graphical interface any type of metrics data or other data can be presented in a graphical interface . Any type of metrics data or other data can be integrated with data from a different data source such as the delimited data .

The client application can be configured to allow use of drag and drop or other positioning operations to combine offline data stored in the memory with the sales data displayed in the graphical interface . For example the client application may be a browser application accessing a website that is developed using HTML5. A function provided by HTML5 can include dragging an icon representing a file on a graphical interface in an HTML5 enabled website dropping the icon that is positioned over the interface and using data from the file in the website. A user can position the icon representing the delimited data onto the graphical interface . The integration module can read data from the delimited data for integration with the metrics data .

The icon can be a copy of the icon . The icon can be positioned over the graphical interface via a positioning operation . A non limiting example of a positioning operation is a drag and drop operation. A cursor can be positioned over the icon . A first input e.g. clicking and holding a mouse button can be received that indicates the icon is to be selected. Selecting the icon can generate the duplicate icon . The cursor and the icon can be moved to a position at least partially overlapping the graphical interface . A second input e.g. releasing a mouse button can be received that indicates that the delimited data represented by icon is to be included in the graphical interface . In some embodiments the icon can be positioned on a graphical interface and the associated delimited data can be integrated with the metrics data without using a plug in or other software module that is specific to the application used to generate the metrics data .

Positioning the icon over the graphical interface can cause the integration module to process the delimited data for integration with the metrics data as displayed in the graphical interface . Processing the delimited data for integration can include determining the type of data in the delimited data . For example the client application can determine that the delimited data includes data formatted as strings data formatted as integers data formatted as floating point numbers data formatted as dates etc. Processing the delimited data for integration can also include mapping at least some of the delimited data to at least some of the metrics data that is presented in the graphical interface as the sales data . Mapping the delimited data to the metrics data can include identifying a common attribute between the delimited data and the metrics data . For example the integration module can determine that both the delimited data and the metrics data include a date attribute by determining that each of the delimited data and the metrics data include rows or other records having at least one field with data formatted as dates.

The integration module can integrate at least some of the delimited data with the metrics data to generate updated sales data for display in the graphical interface . As depicted in integrating the delimited data with the metrics data can include adding bar graphs for at least some of the delimited data adjacent to the bar graphs representing the metrics data . For example the integration module can determine that at least some of the delimited data includes data associated with dates within the time period of March 2012 to July 2012 displayed in the graphical interface . The integration module can extract data from the delimited data that is associated with dates within the time period of March 2012 to July 2012. The integration module can add multiple bar graphs depicting the extracted data for the months of March 2012 April 2012 May 2012 June 2012 and July 2012.

In some embodiments the client application can present the delimited data in the graphical interface without importing the delimited data into the data source from which the metrics data is retrieved. For example in the absence of the positioning operation or other data integration function the client application may render the graphical interface in the memory based on instructions received from the server system for rendering the graphical interface . The instructions received from the server system can include at least some of the metrics data used for rendering the bar graphs depicting the sales data . In response to the positioning operation the client application may render an updated version of the graphical interface in the memory based on instructions received from the server system the metrics data used for rendering the bar graphs for web sales and the de limited data used for rendering bar graphs for store sales. For example delimited data that includes metrics or other analytics data can be displayed with metrics or other analytics data obtained from the server system . The integration module may receive metrics or other analytics data from the delimited data format the metrics or other analytics data based on a type of visualization used by an application programming interface API that generates the graphical interface and integrate the formatted metrics or other analytics data with the graphical interface by execution one or more functions or routines from the API.

In other embodiments the client application can import the delimited data into the data source from which the metrics data is retrieved. For example the integration module can transmit at least some of the delimited data to the server system . The server system can add the delimited data to the metrics data . The server system can send an update to the client application . The update can instruct the client application to display both the bar graphs for the original metrics data as well as the bar graphs for the data imported from the delimited data . In some embodiments the delimited data can be stored on the server system . The graphical interface can be updated to include a link or selectable object configured to download some or all of the delimited data that is stored the server system .

In additional or alternative embodiments the integration module can map at least some of the delimited data to at least some corresponding metrics data . For example the integration module can automatically identify a potential mapping of one or more fields in the delimited data to one or more corresponding fields in the metrics data . Automatically identifying a potential mapping of field s in the delimited data to corresponding field s in the metrics data can reduce or eliminate manual mapping of fields between the delimited data and the metrics data using a file transfer program or other integration process.

In one non limiting example the integration module may import data from fields in the delimited data to corresponding fields in the metrics data . The integration module may identify a first field for each data item of the delimited data that includes a date value and a second field for each data item of the delimited data that includes an integer value e.g. a number of sales on the date . The integration module may map the date values in the delimited data to corresponding date values in the metrics data . The integration module may map the integer values in the delimited data to corresponding integer values in the metrics data . The integration module may add the integer values from the delimited data to corresponding integer values from the metrics data .

In another non limiting example the integration module may add data fields from the delimited data to the metrics data based on one or more mapped data fields. The integration module may identify a first field for each data item of the delimited data that includes a date value and a second field for each data item of the delimited data that includes an integer value e.g. a number of sales on the date . The integration module may map the date values in the delimited data to corresponding date values in the metrics data without mapping the integer values in the delimited data to integer values in the metrics data . The integration module may add the integer values from the delimited data as an additional field in the metrics data . The additional field can describe an additional metric other than metrics described in the metrics data in the absence of the data integration.

Although depicts the integrated sales data with bar graphs for online sales displayed adjacent to bar graphs for store sales any suitable display of the integrated data can be used. For example is a modeling diagram depicting an alternative example of the delimited data integrated with the metrics data for display in the graphical interface. As depicted in the updated sales data displayed in the graphical interface can include a single bar graph for each of the displayed months. Each bar graph can have different visual indicia to indicate respective contributions of web based sales and store based sales. Non limiting examples of such visual indicia include differences in coloring differences in fill patterns etc.

In some embodiments the delimited data and the metrics data can include data associated with time intervals having different levels of granularity. For example the delimited data may include records of sales on a weekly basis and the metrics data may include records of sales on a monthly basis. The integration module can aggregate data extracted from the delimited data for integration with the displayed metrics data .

For example is a modeling diagram depicting an example flow of communication for performing an aggregation function to integrate delimited data and metrics data from different sources. The metrics data can include sales data organized by month. For example as depicted in a portion of the metrics data can include web based sales for each of the months of March 2012 April 2012 May 2012 June 2012 and July 2012. The delimited data can include sales data organized by week. For example as depicted in a portion of the delimited data can include store based sales for each week in the month of March 2012.

The integration module can perform an aggregation function to generate aggregated data for integration with the metrics data . The integration module can analyze the metrics data to determine that the metrics data uses a first unit of time i.e. a month . The integration module can analyze the delimited data to determine that the delimited data uses a second unit of time i.e. a week . The integration module can aggregate data for the weeks of March 2012 to output a total number of sales for the month of March 2012. The integration module can likewise aggregate data for the weeks of April 2012 the weeks of May 2012 the weeks of June 2012 and the weeks of July 2012. The aggregated data from the delimited data for the months of March 2012 April 2012 May 2012 June 2012 and July 2012 can be integrated with the metrics data .

In other embodiments the delimited data can include data associated with time intervals of a lower level of granularity than the metrics data . For example the delimited data may include records of sales on a yearly basis and the metrics data may include records of sales on a monthly basis. The integration module can extrapolate data from the delimited data having a suitable granularity for integration with the displayed metrics data .

The integration module can perform an extrapolation function to generate extrapolated data for integration with the metrics data . The integration module can analyze the metrics data to determine that the metrics data uses a first unit of time i.e. a month . The integration module can analyze the delimited data to determine that the delimited data uses a second unit of time i.e. a year . The integration module can extrapolate estimated monthly sales for the year 2013 via any suitable process. In one non limiting example the integration module can divide the yearly sales by 12 months and use the monthly sales number for each of March 2012 April 2012 May 2012 June 2012 and July 2012. In another non limiting example the integration module can divide the yearly sales by 365 days and multiple each daily number of sales by the respective number of days in each of March 2012 April 2012 May 2012 June 2012 and July 2012. The extrapolated data for the months of March 2012 April 2012 May 2012 June 2012 and July 2012 can be integrated with the metrics data .

The method involves positioning an icon representing a de limited data file on a graphical interface displaying first metrics data for a first time period as shown in block . For example a client application can be executed by a processor to position an icon on a graphical interface as described above with respect to . In some embodiments positioning the icon over the graphical interface can include executing a drag and drop operation. The data sources for the delimited data and the metrics data can be different. For example the delimited data may be obtained from an offline data source such as a local memory of the computing system . The delimited data may be stored to the local memory in such a manner as to prevent access to the delimited data via a data network . The metrics data can be online data stored in a memory in such a manner that the metrics data is available via the data network .

The method further involves determining that the de limited data file includes second metrics data for a second time period at least partially overlapping with the first time as shown in block . For example an integration module executed by the processor in response to a positioning operation can determine that delimited data and metrics data include metrics data associated with time intervals in an overlapping time period as described above with respect to .

The method further involves updating the graphical interface to display the additional metrics data with the metrics data for at least an overlapping portion between the first and second time periods as shown in block . For example an integration module executed by the processor can update the graphical interface to display sales data including at least some of the delimited data and the metrics data accessible from the server system as described above with respect to .

In some embodiments the time intervals included in the delimited data can have different levels of granularity than the time intervals included in the metrics data . Updating the graphical interface can include aggregating at least some of the delimited data for integration with the metrics data or extrapolating data from the delimited data for integration with the metrics data as described above with respect to .

In some embodiments the integration module can upload at least some of the delimited data to a data source in which the metrics data is stored. The integration module can configure the processor to transmit the delimited data to the server system via the data network . In other embodiments the delimited data can be displayed with the metrics data in the graphical interface without transmitting the delimited data to the server system .

Although describe integrating data from different sources based on a date or time attribute other implementations are possible. For example is a flow chart illustrating an alternative example method for integrating metrics data from different data sources for display in a common graphical interface. For illustrative purposes the method is described with reference to the system implementations depicted in and the operations depicted in . Other implementations however are possible.

The method involves positioning an icon representing a delimited data on a graphical interface displaying metrics data as shown in block . For example a client application can be executed by a processor to position an icon on a graphical interface as described above with respect to .

The method further involves identifying an attribute of the metrics data used to organize the metrics data in the graphical interface as shown in block . For example an integration module can be executed by a processor in response to a positioning operation to identify an attribute of the metrics data used to organize the metrics data in the graphical interface as described above with respect to .

Any attribute of the metrics data can be used to organize the metrics data in the graphical interface. In some embodiments the data attribute used to organize the data in the graphical interface can be a date or time attribute as described above with respect to . In other embodiments the graphical interface may present metrics data organized by attributes other than time such as but not limited to different geographical locations names of different products an x y plot comparing a first metric e.g. sales to a second metric e.g. website visits page views or any other suitable type data attribute.

In some embodiments the integration module can determine that a given column from a table of the metrics data is used to generate and populate an axis along which data is displayed in the graphical interface . The integration module can determine that the data used to populate the values of the axis has an attribute that can be used to match at least some of the delimited data . In one non limiting example the integration module can determine that a horizontal axis of a graphical interface is populated using date or time values included in different rows or records in the metrics data . In another non limiting example the integration module can determine that a horizontal axis of a graphical interface is populated using geographical locations included in different rows or records in the metrics data . In another non limiting example the integration module can determine that a horizontal axis of a graphical interface is populated using data values for a specific business metric such as a number of page views in a business website a number of visits to the business website a number of visitors to a store etc.

The method further involves determining that the delimited data has the data attribute used to organize the metrics data in the graphical interface as shown in block . For example the integration module can be executed by a processor to determine that the delimited data has at least one attribute used to organize the metrics data in the graphical interface . The integration module can automatically identify a corresponding data attribute in the delimited data .

In a non limiting example a common data attribute between the delimited data and the metrics data can be a geographical location. The integration module can determine that both the delimited data and the metrics data include a column having data values formatted as strings that the data values formatted as strings include only two letters and that the string state or some portion thereof is included in the column header. The integration module can thus determine that both the delimited data and the metrics data can be organized by geographical locations e.g. states regions etc. . The integration module can organize at least some of the delimited data for display in the graphical interface based on the geographical locations used to organize the metrics data displayed in the graphical interface . In additional or alternative embodiments the integration module can aggregate geographical locations identified in the delimited data to integrate the delimited data with metrics data associated geographical locations having a lower degree of granularity. For example the integration module can determine that the delimited data includes a column header for City or Zip Code and that the metrics data includes a column header for State. The integration module can execute an aggregation function that combines data values associated with cities or zip codes into aggregated data values associated with the state in which the cities or zip codes are located.

The method further involves updating the graphical interface to display at least some of the delimited data with the metrics data organized according to the data attribute as shown in block . For example an integration module executed by the processor can update the graphical interface to display sales data including at least some of the delimited data and the metrics data accessible from the server system . For cases in which the metrics data is organized according to date and or time values the sales data can include both delimited data and metrics data organized according to data and or time. For cases in which the metrics data is organized according to geographical locations the sales data can include both delimited data and metrics data organized according to geographical locations. For cases in which the metrics data is organized according to a given business metric the sales data can include both delimited data and metrics data organized according to the given business metric.

In some embodiments the delimited data may include data values for a data attribute that do not overlap with data values for the data attribute in the metrics data . In one non limiting example the delimited data and the metrics data may include data that can be organized based on date and or time without the delimited data and the metrics data having any overlapping time values. In another non limiting example the delimited data and the metrics data may include data that can be organized based on geographical location without the delimited data and the metrics data having any data associated with a common geographical location. Updating the graphical interface to include both the delimited data and the metrics data may include for example modifying an axis along which data is organized to include values from both the delimited data and the metrics data . For example a horizontal axis may be expanded to include data time geographic or other values of the data attribute from the delimited data positioned adjacent to values of the data attribute from the metrics data .

Numerous specific details are set forth herein to provide a thorough understanding of the claimed subject matter. However those skilled in the art will understand that the claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Unless specifically stated otherwise it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining and identifying or the like refer to actions or processes of a computing device such as one or more computers or a similar electronic computing device or devices that manipulate or transform data represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the computing platform.

The system or systems discussed herein are not limited to any particular hardware architecture or configuration. A computing device can include any suitable arrangement of components that provides a result conditioned on one or more inputs. Suitable computing devices include multipurpose microprocessor based computer systems accessing stored software that programs or configures the computing system from a general purpose computing apparatus to a specialized computing apparatus implementing one or more embodiments of the present subject matter. Any suitable programming scripting or other type of language or combinations of languages may be used to implement the teachings contained herein in software to be used in programming or configuring a computing device.

Embodiments of the methods disclosed herein may be performed in the operation of such computing devices. The order of the blocks presented in the examples above can be varied for example blocks can be re ordered combined and or broken into sub blocks. Certain blocks or processes can be performed in parallel.

The use of adapted to or configured to herein is meant as open and inclusive language that does not foreclose devices adapted to or configured to perform additional tasks or steps. Additionally the use of based on is meant to be open and inclusive in that a process step calculation or other action based on one or more recited conditions or values may in practice be based on additional conditions or values beyond those recited. Headings lists and numbering included herein are for ease of explanation only and are not meant to be limiting.

While the present subject matter has been described in detail with respect to specific embodiments thereof it will be appreciated that those skilled in the art upon attaining an understanding of the foregoing may readily produce alterations to variations of and equivalents to such embodiments. Accordingly it should be understood that the present disclosure has been presented for purposes of example rather than limitation and does not preclude inclusion of such modifications variations and or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art.

