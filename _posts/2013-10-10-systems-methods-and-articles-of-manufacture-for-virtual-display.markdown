---

title: Systems, methods, and articles of manufacture for virtual display
abstract: Systems, methods, and articles of manufacture to virtually segment a display are disclosed. A disclosed example system includes a display abstraction component configured to interface, at a kernel level, between an operating system and a graphics processor, the display abstraction component to receive, adapt, and process display calls from the operating system and instruct the graphics processor to divide the display into multiple virtual displays according to a user specified virtual configuration preference to allow the display to replicate a multiple display configuration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08810601&OS=08810601&RS=08810601
owner: General Electric Company
number: 08810601
owner_city: Schenectady
owner_country: US
publication_date: 20131010
---
The present application claims the benefit of priority as a continuation of U.S. patent application Ser. No. 12 971 815 filed on Dec. 17 2010 entitled Systems Methods and Articles of Manufacture for Virtual Display which is herein incorporated by reference in its entirety.

This disclosure relates generally to virtual displays and more particularly to systems methods and articles of manufacture for virtual display segmentation.

Radiologists and other clinical users rely upon multi display configurations for display of images and other clinical data typically while using multiple applications simultaneously. Virtual display systems enable display real estate to be improved in the context of multiple applications by segmenting the display into a two dimensional array of several smaller displays. This accomplishes the same effect of having multiple displays while eliminating the need for multiple hardware units.

The foregoing summary as well as the following detailed description of certain embodiments of the present invention will be better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention certain embodiments are shown in the drawings. It should be understood however that the present invention is not limited to the arrangements and instrumentality shown in the attached drawings.

Although the following discloses example methods systems articles of manufacture and apparatus including among other components software executed on hardware it should be noted that such methods and apparatus are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in any combination of hardware software and or firmware. Accordingly while the following describes example methods systems articles of manufacture and apparatus the examples provided are not the only way to implement such methods systems articles of manufacture and apparatus.

When any of the appended claims are read to cover a purely software and or firmware implementation at least one of the elements in an at least one example is hereby expressly defined to include a tangible medium such as a memory DVD CD Blu ray etc. storing the software and or firmware.

To increase productivity workers have historically been given multiple displays monitors for example to be able to view multiple applications. In turn these applications were built to accommodate a multi display configuration often each application occupying a separate display thus ensuring co visibility of the applications in display tiling style. The current trend is to replace a multiple display setup with fewer displays with higher resolution and larger dimensions to reduce the number of hardware units and to eliminate the seams between usable areas of the displays. Certain examples leverage this trend to provide improved solutions to users.

A computer display work area can be subdivided into smaller areas with different embedded functionality. While tools are available that allow a computer desktop to be segmented into multiple equal or unequal rectangles through manual designation or by dragging and resizing this tiling is an incomplete solution because it requires manual adjustment. Furthermore the tiling is not recognized by the operating system and is overridden and therefore unreliable in certain cases.

Certain examples disclosed herein enable a display s real estate to be improved by virtually segmenting the display into several smaller displays wherein the virtual segmentation is known to the operating system and cannot be overridden by the configuration at the application level. The virtual configuration is emulated as an array of multiple displays arranged in a two dimensional array which is different from the actual physical array of electronic display components that are attached to the video card.

Example systems methods and articles of manufacture to virtually segment a display are disclosed. A disclosed example method includes virtually segmenting a computer display to improve physical display real estate by dividing a display into several smaller display comprising installing a display abstraction component at the kernel specifying a user configuration preference for the display abstraction component receiving display calls from the operating system adapting and processing said display calls interpreting the virtual display configuration and instructing the graphics processor to segment the physical display according to the virtual display configuration.

A disclosed example article of manufacture includes storing machine accessible instructions that when executed cause a machine to install a display abstraction component at the kernel specify a user configuration preference for the display abstraction component receive display calls from the operating system adapt and process said display calls to interpret the virtual display configuration and instruct the graphics processor to segment the physical display according to the virtual display configuration.

A disclosed example system comprises a display abstraction component configured to interface at a kernel level between an operating system and a graphics processor the display abstraction component to receive adapt and process display calls from the operating system and instruct the graphics processor to divide the display into multiple virtual displays according to a user specified virtual configuration preference to allow the display to replicate a multiple display configuration.

Example applications that may benefit from a virtual display system include but are not limited to medical imaging applications mobile device applications Internet applications education and testing applications messaging applications gaming applications financial applications statistical applications business enterprise applications office suite applications product engineering applications video applications and or audio applications.

As used herein the term tangible computer readable medium is expressly defined to include any type of computer readable medium and to expressly exclude propagating signals. Example computer readable medium include but are not limited to a volatile and or non volatile memory a volatile and or non volatile memory device a compact disc CD a digital versatile disc DVD a floppy disk a read only memory ROM a random access memory RAM a programmable ROM PROM an electronically programmable ROM EPROM an electronically erasable PROM EEPROM an optical storage disk an optical storage device magnetic storage disk a magnetic storage device a cache and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information and which can be accessed by a processor a computer and or other machine having a processor such as the example processor platform P discussed below in connection with . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable medium and to exclude propagating signals.

While an example virtual display system is illustrated in one or more of the elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example user interface the example application layer the example operating system the example display abstraction component the example kernel and or the example graphics processor may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of example user interface the example application layer the example operating system the example display abstraction component the example kernel and or the example graphics processor could be implemented by the example processor platform P of and or one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s field programmable gate array s FPGA s fuses etc. When any apparatus claim of this patent incorporating one or more of these elements is read to cover a purely software and or firmware implementation at least one of the example user interface the example application layer the example operating system the example display abstraction component the example kernel and or the example graphics processor are hereby expressly defined to include a tangible article of manufacture such as a tangible computer readable medium storing the firmware and or software. Further still any of the example user interface the example application layer the example operating system the example display abstraction component the example kernel and or the example graphics processor may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

To install a display abstraction component e.g. the example display abstraction component the example virtual display system of includes an abstraction component installer . The abstraction component installer of is executed to place a display abstraction layer or component such as the example display abstraction component shown in at a kernel level e.g. at the example kernel shown in . To specify how the multiple displays are to be configured the example virtual display system of includes a configuration preference specifier . The configuration preference specifier of indicates to the display component abstracter what the improved display configuration should be based on the user s workload and application setup and profile.

To communicate with the operating system e.g. the example operating system shown in the example virtual display system of includes any number and or type s of operating system interface s . Using any number and or type s of message s protocol s interface s method s logic and or application programming interface s the example operating system interface of enables a display component abstracter to intercept messages from the operating system in order to process and adapt the virtual configuration.

To communicate with the graphics processor e.g. the example graphics processor of the example virtual display system of includes a graphics processor interface . Using any number and or type s of message s protocol s interface s method s logic and or application programming interface s the graphics processor interface of enables the display component abstracter to instruct the graphics processor to display according to the virtual configuration.

To enable the multiple display configuration the example virtual display system of includes a display component abstracter . The display component abstracter intercepts communication messages in both directions from both the operating system and the graphics processor and translates real world coordinates into virtual coordinates and vice versa.

While a manner of implementing the example virtual display system is illustrated in one or more of the elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example operating system interface the example abstraction component installer the example configuration preference specifier the example display component abstracter the example graphical processing unit interface and or more generally the example virtual display system may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example operating system interface the example abstraction component installer the example configuration preference specifier the example display component abstracter the example graphical processing unit interface and or more generally the example virtual display system could be implemented by the example processor platform P of and or one or more circuit s programmable processor s application specific integrated circuit s ASIC s PLD s and or FPLD s FPGA s fuses etc. When any apparatus claim of this patent incorporating one or more of these elements is read to cover a purely software and or firmware implementation at least one of the example operating system interface the example abstraction component installer the example configuration preference specifier the example display component abstracter the example graphical processing unit interface and or more generally the example virtual display system are hereby expressly defined to include a tangible article of manufacture such as a tangible computer readable medium storing the firmware and or software. Further still the example virtual display system may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

The example process of begins with a display abstraction component being installed at the kernel block by the abstraction component installer . This is so that user cases of application space management supported by the operating system e.g. resizing background foreground operations etc. are automatically aligned within the configured virtual display area for example. The process of specifies a user configuration preference for the component block by the configuration preference specifier . Doing this will cause the virtual display areas to be known to the operating system and enumerated and used before an application is started. The configuration preference can be specified in any number of ways such that any number of rectangular displays of any size can potentially be the end result of the virtual display. When an application is launched block the virtual displays are already known to the operating system. Thus when an application is launched block display calls are received from the operating system block by the display configuration abstraction component and processed to interpret the virtual display configuration block . Implementation of this portion of the process is achieved using the display component abstracter for example. During the process shown in the display abstraction component instructs the GPU to display according to the virtual configuration block .

The example process of can also include testing of multiple display configurations on a single display fine tuning of application usability for different display configurations application smart organizing and context management linking emulation of grayscale color and tint as well as color calibration of displays uniformly between displays.

The processor platform P of the instant example includes at least one programmable processor P. For example the processor P can be implemented by one or more Intel microprocessors from the Pentium family the Itanium family or the XScale family. Of course other processors from other processor families and or manufacturers are also appropriate. The processor P executes coded instructions P and or P present in main memory of the processor P e.g. within a volatile memory P and or a non volatile memory P and or in a storage device P. The processor P may execute among other things the example machine accessible instructions of to virtually segment a display into a two dimensional array of multiple displays. Thus the coded instructions P P may include the example instructions of .

The processor P is in communication with the main memory including the non volatile memory P and the volatile memory P and the storage device P via a bus P. The volatile memory P may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of RAM device. The non volatile memory P may be implemented by flash memory and or any other desired type of memory device. Access to the memory P and the memory P may be controlled by a memory controller.

The processor platform P also includes an interface circuit P. Any type of interface standard such as an external memory interface serial port general purpose input output as an Ethernet interface a universal serial bus USB and or a PCI express interface etc may implement the interface circuit P.

The interface circuit P may also includes one or more communication device s P such as a network interface card to facilitate exchange of data packets and or routing information with other nodes servers devices and or routers of a network.

In some examples the processor platform P also includes one or more mass storage devices P to store software and or data. Examples of such storage devices P include a floppy disk drive a hard disk drive a solid state hard disk drive a CD drive a DVD drive and or any other solid state magnetic and or optical storage device. The example storage devices P may be used to for example store the example coded instructions of and or the display component abstracter of .

Thus certain examples provide a way to virtually segment a display into an array of multiple displays thereby improving physical display real estate and reducing the amount of unused seams between displays while eliminating the need for more hardware units. The segmentation of the display is based on end users workflow and profile and is independent of any particular application. The examples described herein segment a display such that the segmented virtual configuration is known and visible at the operating system level while the real configuration is not known to the operating system. Thus the virtual display does not require manual intervention. Moreover the virtual display can be easily implemented through the use of an abstraction component at the kernel which receives processes and adapts instructions from the kernel and directs a graphics processor to segment the display based on a user specified configuration.

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all systems methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.

