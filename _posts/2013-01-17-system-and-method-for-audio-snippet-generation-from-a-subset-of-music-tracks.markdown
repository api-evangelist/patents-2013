---

title: System and method for audio snippet generation from a subset of music tracks
abstract: The disclosure includes a system and method for generating audio snippets from a subset of audio tracks. In some embodiments an audio snippet is an audio summary of a group or collection of songs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08666749&OS=08666749&RS=08666749
owner: Google Inc.
number: 08666749
owner_city: Mountain View
owner_country: US
publication_date: 20130117
---
A growing number of services provide large collections of music over the Internet. As more and more artists create music the sizes of these collections continue to grow. Users of these musical services frequently discover artists and genres that they were previously unaware of. In these cases it may be difficult and time consuming to gauge whether a particular artist or genre is preferable to the user which may influence the user s decisions e.g. to purchase the artist s music.

For instance some artists have extensive collections of musical works that span large periods of time and a variety of musical styles. When such an artist is newly discovered by a user of the music service the volume and diversity of the artist s work makes it difficult to quickly and efficiently assess the artist. Generally the user must select and listen to a large number of songs to determine whether the user is interested in the particular artist. Thus a need exists for a system and method for automatically and intelligently generating an audio summary from a group or collection of songs or other audio files.

An example embodiment describes a method for generating audio snippets comprising generating a histogram for each audio file in a plurality of audio files the histograms representing audio features of the plurality of audio files determining stylistic similarity data for each of the plurality of audio files by applying a supervised learning model to each histogram associating an audio identifier of each audio file with the respective stylistic similarity data determined for the audio file storing the stylistic similarity data for each of the plurality of audio files selecting a subset of audio files from the plurality of audio files wherein the subset identifies most diverse and most popular audio files in the plurality of audio files extracting an audio segment from each audio file in the subset of audio files and combining the audio segments into an audio snippet.

Each audio file in the plurality of audio files may comprise data representing music. The stylistic similarity data for each of the plurality of audio files may comprise musical stylistic similarity data. Each audio file in the plurality of audio files may be associated with a specific musical artist. The plurality of audio files may be a user defined playlist.

Another example embodiment describes a method for generating an audio snippet comprising segments of audio files having one or more common attributes in order to provide a listener of the audio snippet with a range of features within the common one or more attributes the method comprising extracting features from a plurality of audio files having at least one common attribute determining similarities among the plurality of audio files from the extracted features grouping the plurality of audio files from the determined similarities selecting audio files from the group to create a subset of audio files and generating an audio snippet from the subset of audio files comprising one or more segments of each audio file in the subset.

Determining similarities among the plurality of audio files from the extracted feature may comprise generating similarity data for each audio file in the plurality of audio files the similarity data indicating musical stylistic similarities between each audio file in the plurality of audio files and each other audio file in the plurality of audio files. Grouping the plurality of audio files from the determined similarities may comprise associating each audio file with the respective similarity data generated for the audio file. The similarity data may be a similarity matrix.

Selecting audio files from the group to create the subset of audio files may comprise selecting a most diverse and highest quality subset of audio files. Quality of an audio file may be associated with a measure of popularity of the audio file.

Generating the audio snippet from the subset of audio files may comprise extracting an audio segment from each audio file in the subset of audio files and concatenating the extracted audio segments into the audio snippet.

The method of this embodiment may further comprise detecting a musical event in each audio file in the subset of audio files and extracting an audio segment from each audio file based on the detected musical event.

Another example embodiment describes a system for generating audio snippets comprising a storage device storing a plurality of audio files and a snippet generator configured to extract features from a plurality of audio files determine similarities from the extracted features associate each audio file with the determined similarities select a subset of audio files from the plurality of audio files and generate an audio snippet from the subset of audio files.

The system may further comprise a database comprising the storage device connected to a network a server hosting the snippet generator connected to the network and accessing the database through the network and a client device configured to connect to the network and request generation of the audio snippet by displaying a graphical user interface and receiving input.

Determining similarities from the extracted features may comprise generating similarity data for each audio file in the plurality of audio files the similarity data indicating musical stylistic similarities between each audio file in the plurality of audio files and each other audio file in the plurality of audio files. Associating each audio file with the determined similarities may comprise associating each audio file with the respective similarity data generated for the audio file.

Selecting the subset of audio files from the plurality of audio files may comprise selecting a most diverse and highest quality subset of audio files. Quality of an audio file may be associated with a measure of popularity of the audio file.

Generating the audio snippet from the subset of audio files may comprise extracting an audio segment from each audio file in the subset of audio files and concatenating the extracted audio segments into the audio snippet.

The snippet generator may be further configured to detect a musical event in each audio file in the subset of audio files and extract an audio segment from each audio file based on the detected musical event.

A system and method for generating a sequence of short temporally music samples taken from a group of songs or tracks is described in this disclosure. The sequence sometimes referred to as an audio summary or an audio snippet may quickly and efficiently present a summary of the songs. The music samples in the sequence are intelligently selected to present a diverse and high quality summarization of the group of songs. In some cases the group of songs is the collective musical works of particular artist and the audio summary aids a listener s understanding of the musical styles and genres employed by the artist over the artist s career. These and other aspects of the disclosure are discussed below.

Turning to the environment includes one or more clients such as clients A and B a network a database and a server . Each client the database and the server is connected to or configured to connect to the network . Once connection to the network is established the various devices illustrated in are enabled to send and receive data communicate etc. For example one or more users such as users A and B interacts with clients connected to the network to send and receive data communicate and the like with the server . As another example the server transmits data to and receives data from the database through the network . In some embodiments the server and the database are connected by a mechanism other than the network illustrated by the dashed arrow in such as by a dedicated wire connection e.g. universal serial bus USB . Additionally while the environment of illustrates two clients one database and one server coupled to the network the system is not limited thereto and may support any number hundreds thousands millions billions etc. of clients databases and or servers.

Clients A and B may be but are not limited to portable mobile and or stationary devices such as landline telephones mobile telephones including smart phones laptop computers tablet computers desktop computers personal digital assistants PDAs portable gaming devices portable media players e book readers and the like. In some embodiments two or more clients include similar communications mechanisms. For example clients A and B may both be mobile telephones. In other embodiments two or more clients are different types of devices. For example client A may be a mobile telephone and client B may be a desktop computer or other device residing on and powered by programmed logic circuits. In this way various electronic devices supporting diverse functionality can interact within the environment. As should be apparent to the skilled artisan the client B may include the same or different components applications and functionality as the client A.

The network of may be any network supporting the exchange of data between one or more devices. Examples of the network include but are not limited to a wired network a wireless network the Internet a cellular data network a local area network LAN any combination thereof and the like.

The database of may be one or more organized collections of information. In the database includes one or more non transient computer readable storage media to store and or maintain organized collections of information. The database may include temporary permanent volatile nonvolatile persistent and non persistent etc. computer readable memory. The database may have any storage capacity such as one or more bytes kilobytes megabytes gigabytes terabytes petabytes exabytes zettabytes yottabytes and so on. As should be readily apparent to a skilled artesian the database may include a single storage medium residing at a single physical location or a plurality of storage media residing in physically separate locations.

In the database includes network components for connecting to and interacting through the network . In some embodiments the server accesses information stored in the database . In one example system for generating audio snippets the database includes separate collections of organized information. In this example one logical area of the database is dedicated to storing a group of audio files which may be referred to herein as a collection library set and the like of individual audio files. The audio files can be composed of formatted or raw data. Examples of audio formats suitable for use include but are not limited to WAV WMA MP3 AIFF ALC RAW TTA to name a few. In this example each audio file includes audio content and information about the audio content which can be described as header data metadata etc. The content can be any type of audio content such as music tacks songs etc. voice clips sound effects and the like.

In the example from the previous paragraph a second logical area of the database is dedicated to storing data that is learned derived discovered etc. about the audio files during snippet generation. In one embodiment information describing musical stylistic similarities among the tracks in a collection of audio files is derived during snippet generation. In this embodiment the information is stored as data and organized in the second logical area of the database .

The server provides any type of data or information such as files applications communications sessions and the like. In some embodiments the server comprises a snippet generator. The snippet generator may be implemented as a hardware component a software component or any combination thereof. In one embodiment the snippet generator includes one or more applications and or sessions hosted by the server that support the generation of audio snippets. For example the server can host a website accessible by a client through the network for browsing a library or large collection of audio files and for requesting an audio snippet from a subset of the library. The library of audio files may be stored in the database . In this case the snippet generator residing on the server and receiving the client s request accesses the audio files in the database generates an audio snippet and presents and or transmits the audio snippet to the client.

Referring now to a block diagram of the components of an example client of is illustrated. In general many other embodiments of the client may be used as long as they support the generation of audio snippets. In the example embodiment of the client includes one or more processors memory network interface one or more storage devices one or more power source s one or more applications output device input device and snippet generator . The client also includes an operating system and a communications client which includes a communications module that are executable by the client . In a conventional fashion each of components and are interconnected physically communicatively and or operatively for inter component communications.

As illustrated the processor s are configured to implement functionality and or process instructions for execution within the client . For example the processor s execute instructions stored in the memory or instructions stored on the storage devices . The memory which may be a non transient computer readable storage medium is configured to store information within the client during operation. In some embodiments the memory includes temporary memory e.g. an area for information not to be maintained when the client is turned off. Examples of such temporary memory include volatile memories such as random access memories RAM dynamic random access memories DRAM and static random access memories SRAM . The memory may maintain program instructions for execution by the processor s . In some embodiments the snippet generator and or the operating system and or the applications are implemented as computer readable instructions or program code embodied within the memory .

The storage device s also include one or more non transient computer readable storage media. The storage device s are generally configured to store larger amounts of information than the memory . The storage device s may further be configured for long term storage of information. In some examples the storage device s include non volatile storage elements. Non limiting examples of non volatile storage elements include magnetic hard discs optical discs floppy discs flash memories or forms of electrically programmable memories EPROM or electrically erasable and programmable EEPROM memories. In some embodiments the snippet generator and or the operating system and or the applications are implemented as computer readable instructions or program code embodied within the storage device s .

In the client uses the network interface to communicate with external devices via one or more networks such as one or more wireless networks. The network interface may be a network interface card such as an Ethernet card an optical transceiver a radio frequency transceiver or any other type of device that can send and receive information. Other non limiting examples of network interfaces include Bluetooth G G satellite and WiFi radios in mobile computing devices and universal serial bus USB . In some embodiments the client uses the network interface to wirelessly communicate with an external device such as the server of a mobile phone or other networked computing device.

The example client of includes one or more power sources to provide power to the device. Examples of the power source include single use power sources rechargeable power sources and or power sources developed from nickel cadmium lithium ion or other suitable material.

The client includes one or more input devices . The input device is configured to receive input from a user through tactile audio and or video feedback. Non limiting examples of the input device include a presence sensitive screen a touch screen a mouse a keyboard a voice responsive system a video camera a microphone or any other type of device for detecting a command from a user. In some examples a presence sensitive screen includes a touch sensitive screen.

One or more output devices are also included in the client of . The output device is configured to provide output to a user using tactile audio and or video stimuli. The output device may include a display screen part of the presence sensitive screen a sound card a video graphics adapter card or any other type of device for converting a signal into an appropriate form understandable to humans or machines. Additional examples of the output device include a speaker a display e.g. a cathode ray tube CRT a liquid crystal display an organic light emitting diode OLED display a plasma display etc. haptic feedback or any other type of device that can generate intelligible output to a user.

In the output device may display information at a graphical user interface such as the GUI . In some embodiments a user of the client can interact with the GUI to send and receive information through the network. Additionally a user of the client may use the GUI to interact with hardware software applications and the like located on the client . In an embodiment the GUI includes information about one or more other devices connected to the client through the network . The GUI may also include notifications of events and other information relevant to the user of the client .

The application s provide the client with a variety of functionality. Generally application s employ the output device to display information at a graphical user interface GUI and the input device to accept and respond to user input. The application s may include but are not limited to a communications client such as an email client an instant messaging client a text messaging client a video conferencing client an Internet or web browser a telephone client games word processors presentation software media players calendars a database application and or the like. In some embodiments the snippet generator of is an application . Application s may execute media files tasks and the like.

The client of also includes the communications client for sending and receiving data over the network . Examples of the communications client include but are not limited to an email client an instant messaging client a text messaging client a video conferencing client an Internet or web browser a telephone application and the like. In some embodiments the communications client may be considered one or more applications . In other embodiments one or more applications may be considered a communications client .

In the communications client includes a communications module that enables output device to display information at the GUI . The communications module also enables the communications client to connect to the network allowing the user of the client to send and receive data communicate with other networked devices and the like. The communications module may be a network module that connects the client A to a network such as the network using network protocol techniques including by way of example transmission control protocols and Internet protocols. The communications client and or the communications module may be coupled to and interact with the network interface to communication through the network .

In some embodiments the data exchanged between the communications client and other devices on the network is optimized based at least in part on the hardware and or software capabilities of the client . For example if the client is a mobile device connecting e.g. to the server by way of a bandwidth limited path such as a cellular network the server may optimize the number and quality of the audio video text and or other information sent to the client . In this example the communications client may dynamically adjust the bit rate required to send the information to the server by for example reducing the quality of the audio video text and or other information being sent to the server .

The client includes an operating system such as the Android operating system. The operating system controls operations of the components of the client . For example the operating system facilitates the interaction of the communications client with the processor s memory network interface storage device s the power source the applications the input device and the output device . As mentioned the communications client includes the communications module . Each of the communications client and the communications module typically includes program instructions and or data that are executable by the client . For example in one example embodiment communications module includes instructions causing the communications client executing on the client to perform one or more of the operations and actions described in the present disclosure.

In some example embodiments the applications the communications client and or the communications module form a part of the operating system executing on the client . In other embodiments the communications client receives input from one or more of the input devices of the client . In some embodiments the operating system and or the application s and or the communications client are implemented as computer readable instructions or program code embodied within one or more non transient computer readable storage mediums.

In the client includes a snippet generator . In some embodiments the snippet generator interacts with the operating system and the other components of the client to generate one or more audio snippets from a collection of audio files and or tracks stored on the client e.g. in memory and or the storage device s . Techniques for generating audio snippets are described in detail below. The snippet generator may be implemented as a hardware component a software component or any combination thereof.

Referring to in one embodiment an application programming interface API of an application engine or app engine provides many resources to an application or session e.g. Internet session communications session etc. hosted by the server of . In turn the app engine depends on resources provided from an API exposed by a resources infrastructure layer and a networking layer which are supported by the server and their operating system s . The app engine and the resource infrastructure layer connect requests e.g. HTTP from a client to an application or session hosted by the server . The app engine also provides a runtime environment for applications and sessions hosted by the server . Administrative support for applications and sessions hosted by the server may be provided by a mechanism in the app engine . The app engine also provides access to a database in the resource infrastructure layer for persistent storage requirements.

Through its API the app engine provides the applications and sessions hosted by the server access to resources on the Internet such as web services or other data. The app engine retrieves web resources using the resource infrastructure layer . Applications and sessions hosted by the server may send and receive messages using the app engine and the resource Infrastructure Layer . The app engine and the resource infrastructure layer also supports a cache which is useful for temporary data or data copied from the datastore to the cache for high speed access. The resource infrastructure layer also supports a file system and scheduling resources.

Turning to a system for generating audio snippets is illustrated. The system includes a snippet requestor a GUI a snippet generator and a database . The snippet requestor may be the user the client or an appliance for automatically requesting the generation of an audio snippet by identifying a collection or set of audio files and transmitting a request for an audio snippet from the collection which is described in more detail below.

Returning to the snippet requestor interacts with the GUI to generate and or transmit the request to the snippet generator . As mentioned the request identifies the set of files used to generate the snippet. Upon receiving the request the snippet generator generates the snippet by accessing and analyzing audio files comprising the collection or set identified in the request. In the collection may be stored in database . In the example that follows each file in the collection is an audio file comprising a musical track and the audio snippet is a combination of segments from each musical track in a subset of the audio files in the collection.

Once a snippet request is received the snippet generator extracts audio features from each track in the collection of audio files identified in the request. Examples of audio features include but are not limited to time and frequency domain features such as energy envelope and distribution frequency content harmonicity spectral flux and pitch. A stabilized auditory image SAI is another example of an audio feature. Additional examples of an audio feature include audio features that are sensitive to musical beat and rhythm such as autocorrelation and the output of beat tracking algorithms. In some embodiments features include mel frequency cepstral coefficients representing a short term power spectrum of sound. Any technique for extracting audio features may be used.

One example of extracting audio features from an audio track involves partitioning the track into frames of short duration e.g. 50 milliseconds . An audio image such as a stabilized auditory image SAI is generated for each frame and used to calculate a dense vector feature for each frame. These dense vector features are subjected to vector quantization into a vector quantization codebook using e.g. a winner take all algorithm. Thereafter a histogram for the track is generated by summing across all of the vector quantization codes for all the frames. In this example a histogram is generated for each track in the collection of audio files.

As illustrated in extracted features may be expressed as a vector representation of audio. In a track is partitioned into frames and a SAI is generated for each frame such as SAIs . The SAIs are processed to generate a vector representation vector of the track .

Returning to the snippet generator determines based on the features extracted from the tracks similarities such as musical stylistic similarities among the tracks in the collection. Other similarities such as artist album genre instrumentation time period label producer production quality production origin e.g. live or studio and song length may be used as well. Any suitable technique for determining track to track similarity may be employed. For example a supervised learning model such as the Wsabie algorithm may be used to capture musical stylistic similarities on a track by track basis. That is each track in the collection may be compared to each other track in the collection to measure similarities.

The Wsabie algorithm an example of a supervised learning model learns from training data to produce a ranked list of similar items based on a query item. Features such as the audio features described above are projected into a new numerical space of the appropriate dimensionality e.g. 100 referred to as an embedding. A projection is accomplished using a matrix of weights that are adapted such that musically similar items are near one another in the embedding space. Any distance function such as vector dot product correlation or cosine distance vector distance can be used to compare items in the embedding space. The effect of using the Wsabie algorithm is that the raw audio feature space is warped to capture similarities found in the training data.

In the example previously described where audio features are extracted and a track level histogram is generated for each track in the collection a supervised learning model may be used to transform the track level histograms into a dense space e.g. 100 dimensional space which captures similarities.

Information or data describing the determined similarities is organized and maintained so as to be available to access and use. In this manner a library of similarity data expressing track to track similarities may be generated and maintained. In the example of the similarity data may be organized and maintained in the database . In some cases the similarity data for each track is stored in a database keyed by a track identifier of the track corresponding to the data. Alternatively similarity data for a given track is added as metadata to the audio file corresponding to the track.

After determining the track to track similarities the snippet generator selects or identifies the most diverse and highest quality subset of tracks from the collection provided in the request. Diversity among the tracks in a collection of audio files is measured by analyzing the similarity data. In one embodiment determinantal point processes DPPs are employed to select the most diverse and highest quality subset of tracks from the collection of audio files. Given a set of objects where the quality of each object and the similarity between all possible pairs of objects in the set are known DPPs provide a framework for choosing a diverse and high quality subset of the objects. DPPs are grounded in probabilistic principles and are used to compute conditional distributions that are useful when making inferences. Additionally it is possible to learn and use parameters established by DPPs such as parameters for the optimal weighting of quality and similarity features.

In some embodiments quality is associated with the popularity of a track. Popularity in turn may be measured by the number of times an audio file or track is executed played on a media player downloaded and or purchased from a service or website and the like. The popularity of a track may also be indicated by ratings such as user ratings of the track. All other techniques for measuring an audio track s popularity are within the scope of this disclosure.

Once the most diverse and highest quality subset of tracks is determined the snippet generator selects a portion or segment from each track in the subset and combines the portions into an audio snippet. In one embodiment each segment used to form the snippet is of a predetermined duration such as ten seconds and from a predetermined location such as the temporal middle of the track. Thus a ten second segment from the middle of each track may be used to generate the snippet in this example. As should be apparent to the ordinarily skilled artisan a segment of any duration from any location may be selected from an audio track. Additionally the selected segments may be combined in any manner or order. The example of illustrates joining segments to form snippet by concatenation. However other techniques are within the scope of this disclosure.

In another example a segment used to form a snippet is identified by detecting a event in the track. The event may be a musical event such as a given set of lyrics a crescendo or decrescendo a certain beat or harmony a riff or a chorus to name a few. For example techniques for identifying riffs in music can be used to determine appropriate segments to combine into an audio snippet. As another example the event may be a word phrase sentence expression and the like in an audio track of a speech.

In some embodiments the system for generating audio snippets is implemented in a networked environment such as the environment of . In these embodiments the snippet requestor includes the user and or the client the GUI includes the GUI of the client the snippet generator includes an application hosted by and residing at the server and the database includes the database all of which are connected to and interact through the network . In these embodiments the GUI may be provided by an Internet browser executing on the client accessing a website hosted by the server for browsing audio files generating audio snippets and the like. The snippet generator resides on the server and interacts e.g. through the network with the database to generate the snippet and with the client to receive requests and present or transmit snippets. In this case the files used to create a snippet are maintained the database or the server.

In other embodiments the system for generating audio snippets is implemented in a client such as client of . In these embodiments the snippet requestor includes the user and or the client the GUI includes the GUI of the client and the snippet generator includes the snippet generator of the client . In these embodiments the GUI may be an application interface of an application residing on the client . Additionally the database may include one or more applications such as the applications of and one or more computer readable storage media such as the memory and or the storage device s of the client of . In this case the snippet generator and the files used to form a snippet reside on the client.

In yet another embodiment the some components of a system for generating audio snippets are implemented in a networked environment while other components are implemented on a client. For example a snippet generator residing on a client may access a collection of audio files on database or server through a network to generate an audio snippet. As another example a snippet generator residing on a client may access a database of similarity data through a network download similarity data associated with a given set of tracks stored on the client and employ the similarity data to generate a snippet from the tracks stored on the client. As should be apparent the various components of the system for generating audio snippets presented in this disclosure may be distributed over a network or centrally located without limitation and without deviating from the desired result i.e. the generation of one or more audio snippets.

The process begins at step . Given a collection of files such as a collection of audio files or audio tracks features are extracted from each file in a collection. In some situations the features are audio features which may include but are not limited to an SAI time and frequency domain features e.g. energy envelope and distribution frequency content harmonicity spectral flux and pitch etc. Any technique for extracting features may be used.

Once the features are extracted in step the process moves to step . Here similarities such as musical stylistic similarities among the files in the collection are identified. Other similarities such as artist album genre instrumentation time period label producer production quality production origin e.g. live or studio and song length may be used as well. Any suitable technique for determining file to file similarity may be employed. For example a supervised learning model such as the previously described Wsabie algorithm may be used to capture musical stylistic similarities on a file by file basis. That is each file in the collection may be compared to each other file in the collection to measure similarities.

Following step similarity information or data corresponding to each file is organized indexed and maintained so that it may be accessed for further use. In one example the similarity data is maintained in a database keyed by a file identifier of the file corresponding to the data. Alternatively the similarity information derived for a given file may be associated with stored in added to linked to embedded within etc. the file. Thus the file may be annotated with the similarity information.

After determining the file to file similarities in step the most diverse and highest quality subset of files from the collection is identified. Diversity among the files is determined by analyzing the similarity data. DPP techniques as mentioned above may be employed in step . Regarding quality in some embodiments quality is associated with the popularity of a file. Popularity in turn may be measured by the number of times the file is used accessed downloaded purchased and the like. Popularity may also be indicated by a rating system such as a user rating system. All other techniques for measuring an popularity are within the scope of this disclosure.

A portion or segment from each file in the subset determined in step is selected. Thereafter the selected portions are merged into a snippet. In some embodiments where the size or length of the files can be measured temporarily each segment used to form the snippet may be a predetermined duration such as ten seconds and from a predetermined location such as the temporal middle of the file. In these embodiments any duration from any location may be selected for each file see e.g. where segments from different locations are selected . Additionally the selected segments may be merged in any manner or order. In another example a segment used to form a snippet is identified by detecting a event in the file.

Once a snippet is generated it can be presented transmitted viewed consumed listened to saved stored and so on based on the type of snippet and its desired use. Additionally a snippet may be generated in real time or generated and stored for later use. For example once a snippet is generated the snippet may be indexed and maintained in a database. Thus if two requests for a snippet from the same collection of files is received the later of the two requests may be satisfied by accessing the previously generated snippet in the database.

While the aspects and techniques of the disclosure have described generating an audio snippet from a collection of audio files the disclosure is not limited thereto. The aspects and techniques described herein may be employed to generate a snippet from any collection such as a collection of video files a library of documents such as literary works and the like.

The use of the terms a and an and the and at least one and similar referents in the context of describing the invention especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The use of the term at least one followed by a list of one or more items for example at least one of A and B is to be construed to mean one item selected from the listed items A or B or any combination of two or more of the listed items A and B unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Embodiments of this invention are described herein including the best mode known to the inventors for carrying out the invention. Variations of those embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

