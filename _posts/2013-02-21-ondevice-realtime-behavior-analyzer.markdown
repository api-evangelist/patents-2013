---

title: On-device real-time behavior analyzer
abstract: Methods, systems and devices for generating data models in a communication system may include applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors. Such behavior vectors may be used to compute a weight value for one or more nodes of the boosted decision tree. Classifier models factors having a high probably of determining whether a mobile device behavior is benign or not benign based on the computed weight values may be identified. Computing weight values for boosted decision tree nodes may include computing an exclusive answer ratio for generated boosted decision tree nodes. The identified factors may be applied to the corpus of behavior vectors to generate a second family of classifier models identifying fewer factors and data points relevant for enabling the mobile device to determine whether a behavior is benign or not benign.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09324034&OS=09324034&RS=09324034
owner: QUALCOMM Incorporated
number: 09324034
owner_city: San Diego
owner_country: US
publication_date: 20130221
---
This application claims the benefit of priority to U.S. Provisional Patent Application No. 61 748 217 entitled On Device Real Time Behavior Analyzer filed Jan. 2 2013 U.S. Provisional Patent Application No. 61 646 590 entitled System Apparatus and Method for Adaptive Observation of Mobile Device Behavior filed May 14 2012 and U.S. Provisional Application No. 61 683 274 entitled System Apparatus and Method for Adaptive Observation of Mobile Device Behavior filed Aug. 15 2012 the entire contents of all of which are hereby incorporated by reference for all purposes.

Cellular and wireless communication technologies have seen explosive growth over the past several years. This growth has been fueled by better communications hardware larger networks and more reliable protocols. Wireless service providers are now able to offer their customers an ever expanding array of features and services and provide users with unprecedented levels of access to information resources and communications. To keep pace with these service enhancements mobile electronic devices e.g. cellular phones tablets laptops etc. have become more powerful and complex than ever. This complexity has created new opportunities for malicious software software conflicts hardware faults and other similar errors or phenomena to negatively impact a mobile device s long term and continued performance and power utilization levels. Accordingly identifying and correcting the conditions and or mobile device behaviors that may negatively impact the mobile device s long term and continued performance and power utilization levels is beneficial to consumers.

The various aspects include methods of generating data models in a communication system which may include applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors computing a weight value for one or more nodes of the boosted decision tree and determining which factors in the first family of classifier models have a high probability of enabling a mobile device to conclusively determine whether a mobile device behavior is benign or not benign based on the computed weight values.

In an aspect computing a weight value for one or more nodes of the boosted decision tree may include computing an exclusive answer ratio for one or more nodes of the boosted decision tree. In a further aspect computing a weight value for one or more nodes of the boosted decision tree may include computing an answer ratio for one or more nodes of the boosted decision tree. In a further aspect the method may include applying the factors to the corpus of behavior vectors to generate a second family of classifier models that identify fewer data points as being relevant for enabling the mobile device to conclusively determine whether the mobile device behavior is benign or not benign and generating a mobile device classifier based on the second family of classifier models. In a further aspect the method may include sending the mobile device classifier to a mobile computing device. In a further aspect the method may include receiving the mobile device classifier in a device processor of the mobile computing device and classifying in the device processor a behavior of the mobile computing device based on the received mobile device classifier.

Further aspects include a communication system including a server having means for applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors means for computing a weight value for one or more nodes of the boosted decision tree means for determining which factors in the first family of classifier models have a high probability of enabling a mobile device to conclusively determine whether a mobile device behavior is benign or not benign based on the computed weight values means for applying the factors to the corpus of behavior vectors to generate a second family of classifier models that identify fewer data points as being relevant for enabling the mobile device to conclusively determine whether the mobile device behavior is benign or not benign means for generating a mobile device classifier based on the second family of classifier models and means for sending the generated mobile device classifier to the mobile device. The communication system may also include a mobile computing device having means for sending behavior vectors to the server means for receiving the mobile device classifier from the server and means for classifying a behavior of the mobile computing device based on the received mobile device classifier.

In an aspect means for computing a weight value for one or more nodes of the boosted decision tree may include means for computing an exclusive answer ratio for one or more nodes of the boosted decision tree. In a further aspect means for computing a weight value for one or more nodes of the boosted decision tree may include means for computing an answer ratio for one or more nodes of the boosted decision tree.

Further aspects include a communication system including a server including a server processor configured with server executable instructions to perform operations including applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors computing a weight value for one or more nodes of the boosted decision tree determining which factors in the first family of classifier models have a high probability of enabling a mobile device to conclusively determine whether a mobile device behavior is benign or not benign based on the computed weight values applying the factors to the corpus of behavior vectors to generate a second family of classifier models that identify fewer data points as being relevant for enabling the mobile device to conclusively determine whether the mobile device behavior is benign or not benign generating a mobile device classifier based on the second family of classifier models and sending the generated mobile device classifier to the mobile device and a mobile computing device including a device processor configured with processor executable instructions to perform operations including including sending behavior vectors to the server receiving the mobile device classifier from the server and classifying a behavior of the mobile computing device based on the received mobile device classifier.

In an aspect the server processor may be configured with server executable instructions such that computing a weight value for one or more nodes of the boosted decision tree may include computing an exclusive answer ratio for one or more nodes of the boosted decision tree. In a further aspect the server processor may be configured with server executable instructions such that computing a weight value for one or more nodes of the boosted decision tree may include computing an answer ratio for one or more nodes of the boosted decision tree.

Further aspects include a server computing device that may include means for applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors means for computing a weight value for one or more nodes of the boosted decision tree and means for determining which factors in the first family of classifier models have a high probability of enabling a mobile device to conclusively determine whether a mobile device behavior is benign or not benign based on the computed weight values.

In an aspect means for computing a weight value for one or more nodes of the boosted decision tree may include means for computing an exclusive answer ratio for one or more nodes of the boosted decision tree. In a further aspect means for computing a weight value for one or more nodes of the boosted decision tree may include means for computing an answer ratio for one or more nodes of the boosted decision tree. In a further aspect the server computing device may include means for applying the factors to the corpus of behavior vectors to generate a second family of classifier models that identify fewer data points as being relevant for enabling the mobile device to conclusively determine whether the mobile device behavior is benign or not benign and means for generating a mobile device classifier based on the second family of classifier models. In a further aspect the server computing device may include means for sending the generated mobile device classifier to a mobile computing device.

Further aspects include a computing device that may include a processor configured with processor executable instructions to perform operations including applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors computing a weight value for one or more nodes of the boosted decision tree and determining which factors in the first family of classifier models have a high probability of enabling a mobile device to conclusively determine whether a mobile device behavior is benign or not benign based on the computed weight values.

In an aspect the processor may be configured with processor executable instructions such that computing a weight value for one or more nodes of the boosted decision tree may include computing an exclusive answer ratio for one or more nodes of the boosted decision tree. In a further aspect the processor may be configured with processor executable instructions such that computing a weight value for one or more nodes of the boosted decision tree may include computing an answer ratio for one or more nodes of the boosted decision tree. In a further aspect the processor may be configured with processor executable instructions to perform operations further including applying the factors to the corpus of behavior vectors to generate a second family of classifier models that identify fewer data points as being relevant for enabling the mobile device to conclusively determine whether the mobile device behavior is benign or not benign and generating a mobile device classifier based on the second family of classifier models. In a further aspect the processor may be configured with processor executable instructions to perform operations further including sending the generated mobile device classifier to a mobile computing device.

Further aspects include a non transitory computer readable storage medium having stored thereon server executable software instructions configured to cause a server processor to perform operations for generating data models in a communication system including applying machine learning techniques to generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors computing a weight value for one or more nodes of the boosted decision tree and determining which factors in the first family of classifier models have a high probability of enabling a mobile device to conclusively determine whether a mobile device behavior is benign or not benign based on the computed weight values.

In an aspect the stored server executable software instructions may be configured to cause the server processor to perform operations such that computing a weight value for one or more nodes of the boosted decision tree may include computing an exclusive answer ratio for one or more nodes of the boosted decision tree. In a further aspect the stored server executable software instructions may be configured to cause the server processor to perform operations such that computing a weight value for one or more nodes of the boosted decision tree may include computing an answer ratio for one or more nodes of the boosted decision tree. In a further aspect the stored server executable software instructions may be configured to cause the server processor to perform operations further including applying the factors to the corpus of behavior vectors to generate a second family of classifier models that identify fewer data points as being relevant for enabling the mobile device to conclusively determine whether the mobile device behavior is benign or not benign and generating a mobile device classifier based on the second family of classifier models. In a further aspect the stored server executable software instructions may be configured to cause the server processor to perform operations further including sending the generated mobile device classifier to a mobile computing device.

The various aspects will be described in detail with reference to the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes and are not intended to limit the scope of the invention or the claims.

The word exemplary is used herein to mean serving as an example instance or illustration. Any implementation described herein as exemplary is not necessarily to be construed as preferred or advantageous over other implementations.

A number of different cellular and mobile communication services and standards are available or contemplated in the future all of which may implement and benefit from the various aspects. Such services and standards include e.g. third generation partnership project 3GPP long term evolution LTE systems third generation wireless mobile communication technology 3G fourth generation wireless mobile communication technology 4G global system for mobile communications GSM universal mobile telecommunications system UMTS 3GSM general packet radio service GPRS code division multiple access CDMA systems e.g. cdmaOne CDMA1020 enhanced data rates for GSM evolution EDGE advanced mobile phone system AMPS digital AMPS IS 136 TDMA evolution data optimized EV DO digital enhanced cordless telecommunications DECT Worldwide Interoperability for Microwave Access WiMAX wireless local area network WLAN Wi Fi Protected Access I II WPA WPA2 and integrated digital enhanced network iden . Each of these technologies involves for example the transmission and reception of voice data signaling and or content messages. It should be understood that any references to terminology and or technical details related to an individual telecommunication standard or technology are for illustrative purposes only and are not intended to limit the scope of the claims to a particular communication system or technology unless specifically recited in the claim language.

The terms mobile computing device and mobile device are used interchangeably herein to refer to any one or all of cellular telephones smartphones personal or mobile multi media players personal data assistants PDA s laptop computers tablet computers smartbooks ultrabooks palm top computers wireless electronic mail receivers multimedia Internet enabled cellular telephones wireless gaming controllers and similar personal electronic devices which include a memory a programmable processor for which performance is important and operate under battery power such that power conservation methods are of benefit. While the various aspects are particularly useful for mobile computing devices such as smartphones which have limited resources and run on battery the aspects are generally useful in any electronic device that includes a processor and executes application programs.

The term performance degradation is used herein to refer to a wide variety of undesirable mobile device operations and characteristics such as longer processing times lower battery life loss of private data malicious economic activity e.g. sending unauthorized premium SMS message operations relating to commandeering the mobile device or utilizing the phone for spying or botnet activities etc.

The term system on chip SOC is used herein to refer to a single integrated circuit IC chip that contains multiple resources and or processors integrated on a single substrate. A single SOC may contain circuitry for digital analog mixed signal and radio frequency functions. A single SOC may also include any number of general purpose and or specialized processors digital signal processors modem processors video processors etc. memory blocks e.g. ROM RAM Flash etc. and resources e.g. timers voltage regulators oscillators etc. . SOCs may also include software for controlling the integrated resources and processors as well as for controlling peripheral devices.

The term multicore processor is used herein to refer to a single integrated circuit IC chip or chip package that contains two or more independent processing cores e.g. CPU cores configured to read and execute program instructions. A SOC may include multiple multicore processors and each processor in an SOC may be referred to as a core. The term multiprocessor is used herein to refer to a system or device that includes two or more processing units configured to read and execute program instructions.

Generally the performance and power efficiency of a mobile device degrade over time. Recently anti virus companies e.g. McAfee Symantec etc. have begun marketing mobile anti virus firewall and encryption products that aim to slow this degradation. However many of these solutions rely on the periodic execution of a computationally intensive scanning engine on the mobile device which may consume many of the mobile device s processing and battery resources slow or render the mobile device useless for extended periods of time and or otherwise degrade the user experience. In addition these solutions are typically limited to detecting known viruses and malware and do not address the multiple complex factors and or the interactions that often combine to contribute to a mobile device s degradation over time e.g. when the performance degradation is not caused by viruses or malware . For these and other reasons existing anti virus firewall and encryption products do not provide adequate solutions for identifying the numerous factors that may contribute to a mobile device s degradation over time for preventing mobile device degradation or for efficiently restoring an aging mobile device to its original condition.

Various solutions exist for modeling the behavior of processes or application programs executing on a computing device and such behavior models may be used to differentiate between malicious and benign process programs on computing devices. However these existing modeling solutions are not suitable for use on mobile devices because such solutions generally require the execution of computationally intensive processes that consume a significant amount of processing memory and energy resources all of which may be scarce on mobile devices. In addition these solutions are generally limited to evaluating the behavior of individual application programs or processes and do not provide an accurate or complete model of the performance degrading mobile device behaviors. For these and other reasons existing modeling solutions are not suitable for use in mobile devices.

Various other solutions exist for detecting malicious software by using machine learning techniques. These solutions typically analyze a software application or process via an application in a cloud based server. Such analysis may consist of a mathematical transformation to extract the features of the software application and then executing the features on a previously generated machine learning model. The execution of the model allows improving the current model by updating it with the new information gained from executing the current application.

However many of these solutions are not suitable for use on mobile devices because they require evaluating a very large corpus of data are limited to evaluating an individual application program or process or require the execution of computationally intensive processes in the mobile device. For example an existing solution may apply a corpus of training data to derive a model that takes as input a feature vector derived from the application of a mathematical transformation to an individual software application. However such a solution does not generate a first family of classifier models using a boosted decision tree to describe a corpus of behavior vectors compute a weight value for one or more nodes of the boosted decision tree and determine which factors in the first family of classifier models have the highest probability of enabling a mobile device to conclusively determine whether a mobile device behavior is malicious or benign based on the computed weight values. Also such a solution does not compute an exclusive answer ratio or an answer ratio for one or more nodes of the boosted decision tree to optimize or reduce the number of factors data points that require evaluation when identifying or responding to performance degrading mobile device behaviors. For these and other reasons existing machine learning techniques are not well suited for use in the complex yet resource constrained systems of modern mobile devices.

There are a variety of factors that may contribute to the degradation in performance and power utilization levels of a mobile device over time including poorly designed software applications malware viruses fragmented memory background processes etc.

Mobile devices are resource constrained systems that have relatively limited processing memory and energy resources. Modern mobile devices are also complex systems and there may be thousands of features factors and billions of datapoints that require analysis to properly identify the cause or source of a mobile device s degradation. Due to these constraints it is often not feasible to evaluate all the factors that may contribute to the degrade performance and or power utilization levels of the complex yet resource constrained systems of modern mobile devices.

The various aspects provide network servers mobile devices systems and methods for efficiently identifying classifying modeling preventing and or correcting the conditions and or mobile device behaviors that often degrade a mobile device s performance and or power utilization levels over time. By storing information on such conditions and corrective actions in a central database such as a network server or the cloud and enabling mobile devices to access and use the information stored in this database the various aspects enable mobile devices to react to performance limiting and undesirable operating conditions much faster and with lower power consumption than if all such analyses accomplished independently within each mobile device.

To provide better performance in view of these facts the various aspects include mobile devices and network servers configured to work in conjunction with a network service e.g. anti virus partner security partner etc. to intelligently and efficiently identify factors that may contribute to the degradation in performance and power utilization levels of mobile devices over time. Various aspects may identify performance degrading factors on the mobile device without consuming an excessive amount of processing memory or energy resources of the mobile device.

In an aspect an observer process daemon module or sub system herein collectively referred to as a module of the mobile device may instrument or coordinate various application programming interfaces APIs at various levels of the mobile device system and collect behavior information from the instrumented APIs. In an aspect the mobile device may also include an analyzer module and the analyzer module may generate one or more classifier modules and or a classifier module that includes one or more classifiers. The observer module may communicate e.g. via a memory write operation function call etc. the collected behavior information to the classifier module and or the analyzer module e.g. via a memory write operation etc. of the mobile device which may analyze and or classify the collected behavior information generate behavior vectors generate spatial and or temporal correlations based on the behavior vector and information collected from various other mobile device sub systems and determine whether a particular mobile device behavior software application or process is benign suspicious or malicious performance degrading.

In an aspect the classifier module may be included in or as part of the analyzer module of the mobile device. In an aspect one or more classifiers may be generated as a function of a training dataset which may include thousands of features and billions of entries. In an aspect one or more classifiers may be generated from a reduced training dataset that includes only the features entries that are most relevant for determining whether a particular mobile device behavior software application or process is benign suspicious or malicious performance degrading.

In an aspect the analyzer module and or classifier module of the mobile device may be configured to perform real time analysis operations which may include applying data algorithms and or behavior models to behavior information collected by the observer module to determine whether a mobile device behavior is benign suspicious or malicious performance degrading. In an aspect the analyzer module and or classifier module may determine that a mobile device behavior is suspicious when the analyzer classifier module does not have sufficient information to classify or conclusively determine that the behavior is either benign or malicious performance degrading.

In an aspect the analyzer module and or classifier module of the mobile device may be configured to communicate the results of its real time analysis operations to the observer module when it determines that a device behavior is suspicious. The observer module may adjust the granularity of its observations i.e. the level of detail at which mobile device behaviors are observed and or change the behaviors that are observed based on information received from the classifier module e.g. results of the real time analysis operations generate or collect new or additional behavior information and send the new additional information to the analyzer module and or classifier module for further analysis classification.

Such feedback communications between the observer and the analyzer classifier modules e.g. classifier module sending the results of its real time analysis operations to the observer module and the observer module sending updated behavior information to the classifier module may enable a mobile device processor to recursively increase the granularity of the observations i.e. make finer or more detailed observations or change the features behaviors that are observed until a source of a suspicious or performance degrading mobile device behavior is identified until a processing or battery consumption threshold is reached or until the mobile device processor determines that the source of the suspicious or performance degrading mobile device behavior cannot be identified from further increases in observation granularity. Such feedback communication may also enable the mobile device processor to adjust or modify the data behavior models locally in the mobile device without consuming an excessive amount of the mobile device s processing memory or energy resources.

In various aspects the mobile device may be configured to communicate with a network server that includes an offline classifier and or a real time online classifier. The offline classifier may generate robust data behavior models based on information received from a cloud service network. The real time online classifier may generate lean data behavior models based on analyzing larger and more complicated behavior models generated from information received from the cloud service network. Both the online and offline classifiers may generate data behavior models that include a reduced subset of information made available by the network server or service for a particular mobile device. In an aspect generating the lean data behavior models may include generating one or more reduced feature models RFMs .

The network server may send the generated lean data behavior models to the mobile device. The mobile device may receive and implement apply or use lean data behavior models to identify suspicious or performance degrading mobile device behaviors software applications processes etc. Since the lean data behavior models include a reduced subset of the relevant information made available by the network server or service the mobile device may use the lean data behavior models to determine whether a mobile device behavior is malicious performance degrading or benign without consuming an excessive amount of processing memory or energy resources of the mobile device. The mobile device may then correct or prevent the identified performance degrading mobile device behaviors from degrading the performance and power utilization levels of the mobile device.

In various aspects the network server may be configured to generate or update the lean data behavior models by performing executing and or applying machine learning and or context modeling techniques to behavior information and or the results of behavior analyses provided by many mobile devices. Thus the network server may receive a large number of reports from many mobile devices and analyze consolidate or otherwise turn such crowd sourced information into useable information particularly a lean data set or focused behavior models that can be used or accessed by all mobile devices. The network server may continuously reevaluate existing lean data behavior models as new behavior analysis reports are received from mobile devices and or generate new or updated lean data behavior models based on historical information e.g. collected from prior executions previous applications of behavior models etc. new information machine learning context modeling and detected changes in the available information mobile device states environmental conditions network conditions mobile device performance battery consumption levels etc.

In an aspect the network server may be configured to generate the lean data behavior models to include an initial feature set e.g. an initial reduced feature model and one or more subsequent feature sets e.g. subsequent reduced feature models . The initial feature set may include information determined to have a highest probability of enabling the classifier module of the mobile devices to conclusively determine whether a particular mobile device behavior software application or process is malicious performance degrading or benign. Each subsequent feature set may include information determined to have the next highest probability of conclusively determining that the mobile device behavior software application or process is malicious performance degrading or benign. Each subsequent feature set may include a larger dataset than its preceding feature set and thus the performance and power consumption costs associated with applying the data behavior models may increase progressively for each subsequent feature set.

In an aspect the classifier module of the mobile device may include or implement progressive behavior models or classifiers that enable the mobile device processor to evaluate the mobile device behaviors in stages. For example the classifier module may be configured to first apply a lean data behavior model that includes the initial feature set then model that include progressively larger feature sets until the classifier module determines that a mobile device behavior is benign or malicious performance degrading. The classifier module may then send the results of its operations and or success rates associated with the application of each model to the network server. The network server may use such results to update the lean data behavior models e.g. the features sets included in each model etc. thereby refining the data and or models based on the results success rates of all reporting mobile devices. The network server may then make the updated lean data behavior models available to mobile devices so they have access to the lean data behavior models. In this manner mobile devices can instantly benefit from the behaviors and conclusions of other mobile devices.

In an aspect the network server may be configured to continuously update the online and offline classifiers model generators and or cloud model. The network server may be configured to intelligently determine when the changes are substantial enough to warrant generating new models and when the changes may be ignored. For example the network server may receive updates from many different mobile devices perform machine learning operations to generate a first family of classifiers determine whether there are enough changes to the generated first family of classifiers to warrant generating new models determine which features in the generated first family of classifiers are the best features when it is determined that there are enough changes to the first family of classifiers generate a second family of classifiers based on the best features determine whether there are enough changes to the generated second family of classifiers and generate update mobile device classifier data behavior models when it is determined that there are enough changes to the second family of classifiers.

In various aspects the mobile device and or network server may be configured to perform machine learning operations algorithms to generate and or execute one or more classifiers or data behavior models. Generally a learning algorithm has a learning phase in which a data behavior model is generated and a prediction phase in which the generated model is executed or applied. In various aspects a network server may be configured to generate the data behavior model or classifier so that the learning phase does not consume mobile device processing and power resources and is not otherwise a bottle neck. Various aspects may further include mobile devices configured to apply the data behavior models or classifiers efficiently to reduce the performance impact and power consumption of the prediction phase.

In the various aspects a computing device such as a mobile device or a network server may be configured to generate and apply a boosted decision tree BDT with reduced features model RFM to predict the features entries of the training dataset that are most relevant for determining whether a mobile device behavior is benign suspicious or malicious performance degrading and or to organize order the features entries attributes by order of importance. In an aspect the BDT RFM may be an interpretable classification model or classifier from which it may be determined why an ordering classification decision was made.

Various aspects may include a computing device configured to generate one or more classifiers in the form of a boosted decision tree BDT or a family of BDTs from behavior vectors generated by the observer and or analyzer modules. In various aspects the computing device may be further configured to compute an answer ratio on the generated family of BDTs and apply the computed answer ratio to organize order the features entries of the training dataset in order of their importance. In an aspect the computing device may be configured to use the organized ordered features and entries to build a second or subsequent family of classifiers which may further predict which features entries of the training dataset that are most relevant for determining whether a mobile device behavior is benign suspicious or malicious performance degrading.

The various aspects may be implemented within a variety of communication systems such as the example communication system illustrated in . A typical cell telephone network includes a plurality of cell base stations coupled to a network operations center which operates to connect voice calls and data between mobile devices e.g. cell phones laptops tablets etc. and other network destinations such as via telephone land lines e.g. a POTS network not shown and the Internet . Communications between the mobile devices and the telephone network may be accomplished via two way wireless communication links such as 4G 3G CDMA TDMA LTE and or other cell telephone communication technologies. The telephone network may also include one or more servers coupled to or within the network operations center that provide a connection to the Internet .

The communication system may further include network servers connected to the telephone network and to the Internet . The connection between the network server and the telephone network may be through the Internet or through a private network as illustrated by the dashed arrows . The network server may also be implemented as a server within the network infrastructure of a cloud service provider network . Communication between the network server and the mobile devices may be achieved through the telephone network the internet private network not illustrated or any combination thereof.

The network server may send lean data behavior models to the mobile device which may receive and use lean data behavior models to identify suspicious or performance degrading mobile device behaviors software applications processes etc. The network server may also send classification and modeling information to the mobile devices to replace update create and or maintain mobile device data behavior models.

The mobile device may collect behavioral state classification modeling success rate and or statistical information in the mobile device and send the collected information to the network server e.g. via the telephone network for analysis. The network server may use information received from the mobile device to update or refine the lean data behavior models or the classification modeling information to include a further targeted and or reduced subset of features.

Each of the modules may be implemented in software hardware or any combination thereof. In various aspects the modules may be implemented within parts of the operating system e.g. within the kernel in the kernel space in the user space etc. within separate programs or applications in specialized hardware buffers or processors or any combination thereof. In an aspect one or more of the modules may be implemented as software instructions executing on one or more processors of the mobile device .

The behavior observer module may be configured to instrument or coordinate application programming interfaces APIs at various levels modules of the mobile device and monitor observe mobile device operations and events e.g. system events state changes etc. at the various levels modules via the instrumented APIs collect information pertaining to the observed operations events intelligently filter the collected information generate one or more observations based on the filtered information and store the generated observations in a memory e.g. in a log file etc. and or send e.g. via memory writes function calls etc. the generated observations to the behavior analyzer module .

The behavior observer module may monitor observe mobile device operations and events by collecting information pertaining to library API calls in an application framework or run time libraries system call APIs file system and networking sub system operations device including sensor devices state changes and other similar events. The behavior observer module may also monitor file system activity which may include searching for filenames categories of file accesses personal info or normal data files creating or deleting files e.g. type exe zip etc. file read write seek operations changing file permissions etc.

The behavior observer module may also monitor data network activity which may include types of connections protocols port numbers server client that the device is connected to the number of connections volume or frequency of communications etc. The behavior observer module may monitor phone network activity which may include monitoring the type and number of calls or messages e.g. SMS etc. sent out received or intercepted e.g. the number of premium calls placed .

The behavior observer module may also monitor the system resource usage which may include monitoring the number of forks memory access operations number of files open etc. The behavior observer module may monitor the state of the mobile device which may include monitoring various factors such as whether the display is on or off whether the device is locked or unlocked the amount of battery remaining the state of the camera etc. The behavior observer module may also monitor inter process communications IPC by for example monitoring intents to crucial services browser contracts provider etc. the degree of inter process communications pop up windows etc.

The behavior observer module may also monitor observe driver statistics and or the status of one or more hardware components which may include cameras sensors electronic displays WiFi communication components data controllers memory controllers system controllers access ports timers peripheral devices wireless communication components external memory chips voltage regulators oscillators phase locked loops peripheral bridges and other similar components used to support the processors and clients running on the mobile computing device.

The behavior observer module may also monitor observe one or more hardware counters that denote the state or status of the mobile computing device and or mobile device sub systems. A hardware counter may include a special purpose register of the processors cores that is configured to store a count or state of hardware related activities or events occurring in the mobile computing device.

The behavior observer module may also monitor observe actions or operations of software applications software downloads from an application download server e.g. Apple App Store server mobile device information used by software applications call information text messaging information e.g. SendSMS BlockSMS ReadSMS ect. media messaging information e.g. ReceiveMMS user account information location information camera information accelerometer information browser information content of browser based communications content of voice based communications short range radio communications e.g. Bluetooth WiFi etc. content of text based communications content of recorded audio files phonebook or contact information contacts lists etc.

The behavior observer module may monitor observe transmissions or communications of the mobile device including communications that include voicemail VoiceMailComm device identifiers DevicelDComm user account information UserAccountComm calendar information CalendarComm location information LocationComm recorded audio information RecordAudioComm accelerometer information AccelerometerComm etc.

The behavior observer module may monitor observe usage of and updates changes to compass information mobile device settings battery life gyroscope information pressure sensors magnet sensors screen activity etc. The behavior observer module may monitor observe notifications communicated to and from a software application AppNotifications application updates etc. The behavior observer module may monitor observe conditions or events pertaining to a first software application requesting the downloading and or install of a second software application. The behavior observer module may monitor observe conditions or events pertaining to user verification such as the entry of a password etc.

The behavior observer module may also monitor observe conditions or events at multiple levels of the mobile device including the application level radio level and sensor level. Application level observations may include observing the user via facial recognition software observing social streams observing notes entered by the user observing events pertaining to the use of PassBook Google Wallet Paypal etc. Application level observations may also include observing events relating to the use of virtual private networks VPNs and events pertaining to synchronization voice searches voice control e.g. lock unlock a phone by saying one word language translators the offloading of data for computations video streaming camera usage without user activity microphone usage without user activity etc.

Radio level observations may include determining the presence existence or amount of any or more of user interaction with the mobile device before establishing radio communication links or transmitting information dual multiple SIM cards Internet radio mobile phone tethering offloading data for computations device state communications the use as a game controller or home controller vehicle communications mobile device synchronization etc. Radio level observations may also include monitoring the use of radios WiFi WiMax Bluetooth etc. for positioning peer to peer p2p communications synchronization vehicle to vehicle communications and or machine to machine m2m . Radio level observations may further include monitoring network traffic usage statistics or profiles.

Sensor level observations may include monitoring a magnet sensor or other sensor to determine the usage and or external environment of the mobile device. For example the mobile device processor may be configured to determine whether the phone is in a holster e.g. via a magnet sensor configured to sense a magnet within the holster or in the user s pocket e.g. via the amount of light detected by a camera or light sensor . Detecting that the mobile device is in a holster may be relevant to recognizing suspicious behaviors for example because activities and functions related to active usage by a user e.g. taking photographs or videos sending messages conducting a voice call recording sounds etc. occurring while the mobile device is holstered could be signs of nefarious processes executing on the device e.g. to track or spy on the user .

Other examples of sensor level observations related to usage or external environments may include detecting near field communications NFC collecting information from a credit card scanner barcode scanner or mobile tag reader detecting the presence of a USB power charging source detecting that a keyboard or auxiliary device has been coupled to the mobile device detecting that the mobile device has been coupled to a computing device e.g. via USB etc. determining whether an LED flash flashlight or light source has been modified or disabled e.g. maliciously disabling an emergency signaling app etc. detecting that a speaker or microphone has been turned on or powered detecting a charging or power event detecting that the mobile device is being used as a game controller etc. Sensor level observations may also include collecting information from medical or healthcare sensors or from scanning the user s body collecting information from an external sensor plugged into the USB audio jack collecting information from a tactile or haptic sensor e.g. via a vibrator interface etc. collecting information pertaining to the thermal state of the mobile device etc.

To reduce the number of factors monitored to a manageable level in an aspect the behavior observer module may perform coarse observations by monitoring observing an initial set of behaviors or factors that are a small subset of all factors that could contribute to the mobile device s degradation. In an aspect the behavior observer module may receive the initial set of behaviors and or factors from a network server and or a component in a cloud service or network . In an aspect the initial set of behaviors factors may be specified in data behavior models received from the network server or cloud service network . In an aspect the initial set of behaviors factors may be specified in a reduced feature model RFMs .

The behavior analyzer module and or classifier module may receive the observations from the behavior observer module compare the received information i.e. observations with contextual information received from the external context information module and identify subsystems processes and or applications associated with the received observations that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device.

In an aspect the behavior analyzer module and or classifier module may include intelligence for utilizing a limited set of information i.e. coarse observations to identify behaviors processes or programs that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device. For example the behavior analyzer module may be configured to analyze information e.g. in the form of observations collected from various modules e.g. the behavior observer module external context information module etc. learn the normal operational behaviors of the mobile device and generate one or more behavior vectors based the results of the comparisons. The behavior analyzer module may send the generated behavior vectors to the classifier module for further analysis.

The classifier module may receive the behavior vectors and compare them to one or more behavior modules to determine whether a particular mobile device behavior software application or process is performance degrading malicious benign or suspicious.

When the classifier module determines that a behavior software application or process is malicious or performance degrading the classifier module may notify the actuator module which may perform various actions or operations to correct mobile device behaviors determined to be malicious or performance degrading and or perform operations to heal cure isolate or otherwise fix the identified problem.

When the classifier module determines that a behavior software application or process is suspicious the classifier module may notify the behavior observer module which may adjust the adjust the granularity of its observations i.e. the level of detail at which mobile device behaviors are observed and or change the behaviors that are observed based on information received from the classifier module e.g. results of the real time analysis operations generate or collect new or additional behavior information and send the new additional information to the behavior analyzer module and or classifier module for further analysis classification. Such feedback communications between the behavior observer module and the classifier module enable the mobile device to recursively increase the granularity of the observations i.e. make finer or more detailed observations or change the features behaviors that are observed until a source of a suspicious or performance degrading mobile device behavior is identified until a processing or batter consumption threshold is reached or until the mobile device processor determines that the source of the suspicious or performance degrading mobile device behavior cannot be identified from further increases in observation granularity. Such feedback communication also enable the mobile device to adjust or modify the data behavior models locally in the mobile device without consuming an excessive amount of the mobile device s processing memory or energy resources.

In an aspect the behavior observer module and the behavior analyzer module may provide either individually or collectively real time behavior analysis of the computing system s behaviors to identify suspicious behavior from limited and coarse observations to dynamically determine behaviors to observe in greater detail and to dynamically determine the level of detail required for the observations. In this manner the behavior observer module enables the mobile device to efficiently identify and prevent problems from occurring on mobile devices without requiring a large amount of processor memory or battery resources on the device.

The cloud module may be configured to receive a large amount of information from a cloud service network and generate a full or robust data behavior model that includes all or most of the features data points and or factors that could contribute to the mobile device s degradation over time.

The model generator module may generate lean data behavior models based on full model generated in the cloud module . In an aspect generating the lean data behavior models may include generating one or more reduced feature models RFMs that include a subset of the features and data points included in the full model generated by the cloud module . In an aspect the model generator may generate a lean data behavior model that includes an initial feature set e.g. an initial reduced feature model that includes information determined to have a highest probability of enabling the classifier module to conclusively determine whether a particular mobile device behavior is benign or malicious performance degrading. The model generator may send the generated lean models to the behavior observer module .

The behavior observer module may monitor observe mobile device behaviors based on the received model generate observations and send the observations to the classifier module . The classifier module may perform real time analysis operations which may include applying data behavior models to behavior information collected by the behavior observer module to determine whether a mobile device behavior is benign suspicious or malicious performance degrading. The classifier module may determine that a mobile device behavior is suspicious when the classifier module does not have sufficient information to classify or conclusively determine that the behavior is either benign or malicious.

The classifier module may be configured to communicate the results of its real time analysis operations to the behavior observer module when the classifier module determines that a device behavior is suspicious. The behavior observer module may adjust the granularity of its observations i.e. the level of detail at which mobile device behaviors are observed and or change the behaviors that are observed based on information received from the classifier module e.g. based on the results of the real time analysis operations generate or collect new or additional behavior information and send the new additional information to the classifier module for further analysis classification e.g. in the form of new models . In this manner the mobile device may recursively increase the granularity of the observations i.e. make finer or more detailed observations or change the features behaviors that are observed until a source of a suspicious or performance degrading mobile device behavior is identified until a processing or batter consumption threshold is reached or until the mobile device processor determines that the source of the suspicious or performance degrading mobile device behavior cannot be identified from further increases in observation granularity.

The mobile device may the send the results of its operations and or success rates associated with the application of models to the network server . The network server may generate training data e.g. via the training data module based on the results success rates for use by the model generator . The model generator may generate updated models based on the training data and send the updated models to the mobile device .

The initial reduced feature set e.g. RFM may include information determined to have a highest probability of enabling a behavior analyzer module and or a classifier module to conclusively determine whether a particular mobile device behavior is malicious or benign. In block the processor may generate a subsequent reduced feature set e.g. RFM from the decision tree or structure to include information determined to have the next highest probability of conclusively determining whether the mobile device behavior is malicious or benign. In block the processor may generate additional subsequent feature sets e.g. RFMn from the decision tree or structure.

Each subsequent feature set e.g. RFM RFMn may include a larger dataset than its preceding feature set. For example if the decision tree or structure identified 1000 relevant factors the initial reduced feature set e.g. RFMO may include 50 of the factors that are determined to have the highest probability of enabling the classifier module of the mobile device to conclusively determine whether a mobile device behavior is malicious or benign. The first subsequent reduced feature set e.g. RFM may include the next 100 factors and a subsequent reduced feature set e.g. RFMn may include the remaining factors.

In an aspect the misclassified entries may be weighted based on their relatively accuracy or effectiveness. In operation the processor may boost or increase the weight of the entries that were misclassified by the generated second tree classifier h to generate a third new tree classifier h . In operation the operations of may be repeated to generate t number of new tree classifiers h x .

By boosting or increasing the weight of the entries that were misclassified by the first decision tree classifier h the second tree classifier h may more accurately classify the entities that were misclassified by the first decision tree classifier h but may also misclassify some of the entities that where correctly classified by the first decision tree classifier h . Similarly the third tree classifier h may more accurately classify the entities that were misclassified by the second decision tree classifier h and misclassify some of the entities that where correctly classified by the second decision tree classifier h . That is generating the family of tree classifiers h h x may not result in a system that converges as a whole but results in a number of decision trees classifiers that may be executed in parallel.

Various aspects may be configured to compute an exclusive answer ratio an answer ratio and or a weighted answer ratio on the family of boosted decision trees via the following formulas 

In the example illustrated in the boosted decision tree includes a plurality of decision nodes that include a question or a test condition that when executed or performed by a processor may result in either a definitive answer e.g. true false malicious benign etc. included in a leaf node or to an indefinite answer e.g. suspicious leading to another decision node . Each leaf node may be associated with a weight.

In an aspect the weight associated with a leaf node may be computed based on information collected from previous observations or analysis of mobile device behaviors software applications or processes in the mobile device. In an aspect the weight associated with a leaf node may be computed based on how many units of the corpus of data e.g. cloud corpus of data or behavior vectors used to build the boosted decision tree actually reached an answer provide by that leaf node . That is the weight associated with a leaf node may be computed based on the number of times a definitive answer was provided by the leaf node for the corpus of data used to build the boosted decision tree .

In an aspect the server processor may compute the exclusive answer ratio based on the number of decision nodes traversed i.e. questions asked conditions tested etc. before arriving at the definitive answer provided by the leaf node . In an aspect the exclusive answer ratio may be computed as a ratio between a value of an answer provided by question i.e. how much knowledge is gained from answering a question divided by the number of decision nodes traversed before arriving at the definitive answer provided by the leaf node .

In the example illustrated in leaf node is associated with a weight of 51 and leaf node is associated with a weight of 15. That is on 66 instances i.e. 51 15 a definitive answer was provided by answering Question E of decision node . Since traversing the boosted decision tree to arrive at Question E of decision node may require traversing and receiving incomplete answers form each questions A E of decision nodes the cost associated with asking Question E of decision node to arrive at the 61 instances of definitive answers is the cost associated with evaluating five 5 test conditions or answering questions. Thus the exclusive answer ratio of decision node is 51 15 5 13.2. Similarly the exclusive answer ratio of decision node is 432 4 108 and so on.

In an aspect more than one of the plurality of decision nodes may include the same question test condition with varying results. For example illustrates that both decision node and decision node include the same question i.e. Question D with varying results.

In an aspect the values exclusive answer ratios associated with two or more decision nodes may be summed across multiple trees or branches.

In an aspect the answer ratio may be computed as an exclusive answer ratio in which the computed weights are cumulated upward. For example the answer ratio of decision node may be computed as exclusive answer ratio of decision node 432 4 108 plus the exclusive answer ratio of decision node 51 15 15 13.2 .

In an aspect a sever processor may be configured to generate a new boosted decision tree BDT by boosting or increasing the weight of the entries that were misclassified by a first decision tree classifier h based on the answer ratio associated with that entry to generate a second new tree classifier h in which the features entries of the training dataset are organized in order of their importance. Decision nodes having a higher weight or answer ratio may be located higher in the decision tree than decision nodes having a lower weight or answer ratio. In this manner various aspects may generate a more balanced boosted decision tree BDT in which the most important questions are asked first.

Finally the answer ratio for each feature may be summed a number of times as the same feature appears multiple times in different decision tress and even in different branches of the same tree. The answer ratio of a feature may be weighted by the weight of the BDT when the Weighted Answer Ratio is cumulated across the family of BDTs.

In an aspect a server processor may be configured to generate a boosted decision tree BDT that includes a reduced number of nodes i.e. decision nodes leaf nodes etc. based on a reduced features model and or the answer ratios associated with the nodes of a previous analysis of the more robust decision tree.

In an aspect a sever processor may be configured to build the family of BDTs from all training data and all attributes choose best set of attributes e.g. via evaluation of answer ratios etc. generate a new smaller family of BDTs using only the values of the chosen attributes and send the smaller family of BDTs or classifiers or a mobile device model generated from the smaller family of BDTs classifiers to a mobile device. The mobile device processor may be configured to apply the smaller family of trees classifiers or the mobile device model for constant or routine monitoring observation of mobile device behaviors and apply a more robust tree classifier or model when the mobile device processor determines that a mobile device behavior is suspicious.

The observer mode module may receive control information from various sources which may include an analyzer unit e.g. the behavior analyzer module described above with reference to and or an application API. The observer mode module may send control information pertaining to various observer modes to the adaptive filter module and the high level behavior detection module .

The adaptive filter module may receive data information from multiple sources and intelligently filter the received information to generate a smaller subset of information selected from the received information. This filter may be adapted based on information or control received from the analyzer module or a higher level process communicating through an API. The filtered information may be sent to the throttle module which may be responsible for controlling the amount of information flowing from the filter to ensure that the high level behavior detection module does not become flooded or overloaded with requests or information.

The high level behavior detection module may receive data information from the throttle module control information from the observer mode module and context information from other components of the mobile device. The high level behavior detection module may use the received information to perform spatial and temporal correlations to detect or identify high level behaviors that may cause the device to perform at sub optimal levels. The results of the spatial and temporal correlations may be sent to the behavior vector generator which may receive the correlation information and generate a behavior vector that describes the behaviors of particular process application or sub system. In an aspect the behavior vector generator may generate the behavior vector such that each high level behavior of a particular process application or sub system is an element of the behavior vector. In an aspect the generated behavior vector may be stored in a secure buffer . Examples of high level behavior detection may include detection of the existence of a particular event the amount or frequency of another event the relationship between multiple events the order in which events occur time differences between the occurrence of certain events etc.

In the various aspects the behavior observer module may perform adaptive observations and control the observation granularity. That is the behavior observer module may dynamically identify the relevant behaviors that are to be observed and dynamically determine the level of detail at which the identified behaviors are to be observed. In this manner the behavior observer module enables the system to monitor the behaviors of the mobile device at various levels e.g. multiple coarse and fine levels . The behavior observer module may enable the system to adapt to what is being observed. The behavior observer module may enable the system to dynamically change the factors behaviors being observed based on a focused subset of information which may be obtained from a wide verity of sources.

As discussed above the behavior observer module may perform adaptive observation techniques and control the observation granularity based on information received from a variety of sources. For example the high level behavior detection module may receive information from the throttle module the observer mode module and context information received from other components e.g. sensors of the mobile device. As an example a high level behavior detection module performing temporal correlations might detect that a camera has been used and that the mobile device is attempting to upload the picture to a server. The high level behavior detection module may also perform spatial correlations to determine whether an application on the mobile device took the picture while the device was holstered and attached to the user s belt. The high level behavior detection module may determine whether this detected high level behavior e.g. usage of the camera while holstered is a behavior that is acceptable or common which may be achieved by comparing the current behavior with past behaviors of the mobile device and or accessing information collected from a plurality of devices e.g. information received from a crowd sourcing server . Since taking pictures and uploading them to a server while holstered is an unusual behavior as may be determined from observed normal behaviors in the context of being holstered in this situation the high level behavior detection module may recognize this as a potentially threatening behavior and initiate an appropriate response e.g. shutting off the camera sounding an alarm etc. .

The various aspects may provide cross layer observations on mobile devices encompassing webkit SDK NDK kernel drivers and hardware in order to characterize system behavior. The behavior observations may be made in real time.

The observer module may perform adaptive observation techniques and control the observation granularity. As discussed above there are a large number i.e. thousands of factors that could contribute to the mobile device s degradation and it may not be feasible to monitor observe all of the different factors that may contribute to the degradation of the device s performance. To overcome this the various aspects dynamically identify the relevant behaviors that are to be observed and dynamically determine the level of detail at which the identified behaviors are to be observed.

In determination block the mobile device processor may determine whether suspicious behaviors or potential problems can be identified and corrected based on the results of the behavioral analysis. When the mobile device processor determines that the suspicious behaviors or potential problems can be identified and corrected based on the results of the behavioral analysis i.e. determination block Yes in block the processor may initiate a process to correct the behavior and return to block to perform additional coarse observations.

When the mobile device processor determines that the suspicious behaviors or potential problems can not be identified and or corrected based on the results of the behavioral analysis i.e. determination block No in determination block the mobile device processor may determine whether there is a likelihood of a problem. In an aspect the mobile device processor may determine that there is a likelihood of a problem by computing a probability of the mobile device encountering potential problems and or engaging in suspicious behaviors and determining whether the computed probability is greater than a predetermined threshold. When the mobile device processor determines that the computed probability is not greater than the predetermined threshold and or there is not a likelihood that suspicious behaviors or potential problems exist and or are detectable i.e. determination block No the processor may return to block to perform additional coarse observations.

When the mobile device processor determines that there is a likelihood that suspicious behaviors or potential problems exist and or are detectable i.e. determination block Yes in block the mobile device processor may perform deeper logging observations or final logging on the identified subsystems processes or applications. In block the mobile device processor may perform deeper and more detailed observations on the identified subsystems processes or applications. In block the mobile device processor may perform further and or deeper behavioral analysis based on the deeper and more detailed observations. In determination block the mobile device processor may again determine whether the suspicious behaviors or potential problems can be identified and corrected based on the results of the deeper behavioral analysis. When the mobile device processor determines that the suspicious behaviors or potential problems can not be identified and corrected based on the results of the deeper behavioral analysis i.e. determination block No the processor may repeat the operations in blocks until the level of detail is fine enough to identify the problem or until it is determined that the problem cannot be identified with additional detail or that no problem exists.

When the mobile device processor determines that the suspicious behaviors or potential problems can be identified and corrected based on the results of the deeper behavioral analysis i.e. determination block Yes in block the mobile device processor may perform operations to correct the problem behavior and the processor may return to block to perform additional operations.

In an aspect as part of blocks of method the mobile device processor may perform real time behavior analysis of the system s behaviors to identify suspicious behavior from limited and coarse observations to dynamically determine the behaviors to observe in greater detail and to dynamically determine the precise level of detail required for the observations. This enables the mobile device processor to efficiently identify and prevent problems from occurring without requiring the use of a large amount of processor memory or battery resources on the device.

The various aspects may be implemented on a variety of mobile computing devices an example of which is illustrated in in the form of a smartphone. A smartphone may include a processor coupled to internal memory a display and to a speaker. Additionally the smartphone may include an antenna for sending and receiving electromagnetic radiation that may be connected to a wireless data link and or cellular telephone transceiver coupled to the processor . Smartphone typically also include menu selection buttons or rocker switches for receiving user inputs.

A typical smartphone also includes a sound encoding decoding CODEC circuit which digitizes sound received from a microphone into data packets suitable for wireless transmission and decodes received sound data packets to generate analog signals that are provided to the speaker to generate sound. Also one or more of the processor wireless transceiver and CODEC may include a digital signal processor DSP circuit not shown separately .

Portions of the aspect methods may be accomplished in a client server architecture with some of the processing occurring in a server such as maintaining databases of normal operational behaviors which may be accessed by a mobile device processor while executing the aspect methods. Such aspects may be implemented on any of a variety of commercially available server devices such as the server illustrated in . Such a server typically includes a processor coupled to volatile memory and a large capacity nonvolatile memory such as a disk drive . The server may also include a floppy disc drive compact disc CD or DVD disc drive coupled to the processor . The server may also include network access ports coupled to the processor for establishing data connections with a network such as a local area network coupled to other broadcast system computers and servers.

The processors may be any programmable microprocessor microcomputer or multiple processor chip or chips that can be configured by software instructions applications to perform a variety of functions including the functions of the various aspects described below. In some mobile devices multiple processors may be provided such as one processor dedicated to wireless communication functions and one processor dedicated to running other applications. Typically software applications may be stored in the internal memory before they are accessed and loaded into the processor . The processor may include internal memory sufficient to store the application software instructions.

Computer program code or program code for execution on a programmable processor for carrying out operations of the various aspects may be written in a high level programming language such as C C C Smalltalk Java JavaScript Visual Basic a Structured Query Language e.g. Transact SQL Perl or in various other programming languages. Program code or programs stored on a computer readable storage medium as used in this application may refer to machine language code such as object code whose format is understandable by a processor.

Many mobile computing devices operating system kernels are organized into a user space where non privileged code runs and a kernel space where privileged code runs . This separation is of particular importance in Android and other general public license GPL environments where code that is part of the kernel space must be GPL licensed while code running in the user space may not be GPL licensed. It should be understood that the various software components modules discussed here may be implemented in either the kernel space or the user space unless expressly stated otherwise.

The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various aspects must be performed in the order presented. As will be appreciated by one of skill in the art the order of steps in the foregoing aspects may be performed in any order. Words such as thereafter then next etc. are not intended to limit the order of the steps these words are simply used to guide the reader through the description of the methods. Further any reference to claim elements in the singular for example using the articles a an or the is not to be construed as limiting the element to the singular.

As used in this application the terms component module system engine generator manager and the like are intended to include a computer related entity such as but not limited to hardware firmware a combination of hardware and software software or software in execution which are configured to perform particular operations or functions. For example a component may be but is not limited to a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computing device and the computing device may be referred to as a component. One or more components may reside within a process and or thread of execution and a component may be localized on one processor or core and or distributed between two or more processors or cores. In addition these components may execute from various non transitory computer readable media having various instructions and or data structures stored thereon. Components may communicate by way of local and or remote processes function or procedure calls electronic signals data packets memory read writes and other known network computer processor and or process related communication methodologies.

The various illustrative logical blocks modules circuits and algorithm steps described in connection with the aspects disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The hardware used to implement the various illustrative logics logical blocks modules and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a multiprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a multiprocessor a plurality of multiprocessors one or more multiprocessors in conjunction with a DSP core or any other such configuration. Alternatively some steps or methods may be performed by circuitry that is specific to a given function.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored as one or more instructions or code on a non transitory computer readable medium or non transitory processor readable medium. The steps of a method or algorithm disclosed herein may be embodied in a processor executable software module which may reside on a non transitory computer readable or processor readable storage medium. Non transitory computer readable or processor readable storage media may be any storage media that may be accessed by a computer or a processor. By way of example but not limitation such non transitory computer readable or processor readable media may include RAM ROM EEPROM FLASH memory CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that may be used to store desired program code in the form of instructions or data structures and that may be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above are also included within the scope of non transitory computer readable and processor readable media. Additionally the operations of a method or algorithm may reside as one or any combination or set of codes and or instructions on a non transitory processor readable medium and or computer readable medium which may be incorporated into a computer program product.

The preceding description of the disclosed aspects is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects without departing from the spirit or scope of the invention. Thus the present invention is not intended to be limited to the aspects shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein.

