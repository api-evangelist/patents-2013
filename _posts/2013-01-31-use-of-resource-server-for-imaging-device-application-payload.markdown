---

title: Use of resource server for imaging device application payload
abstract: In one example, at least a portion of a payload for web application installed on a web server is stored by a networked imaging device on a networked resource server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479664&OS=09479664&RS=09479664
owner: Hewlett-Packard Development Company, L.P.
number: 09479664
owner_city: Houston
owner_country: US
publication_date: 20130131
---
Imaging devices such as for example printers scanners fax machines copiers and multifunction devices that include two or more of these capabilities are widely used and are often network capable. While these devices as manufactured typically include a robust set of features and functions in many situations it is desirable to enhance the devices with other applications or solutions. However it can be difficult to provide such applications or solutions across a variety of different model imaging devices which target different markets.

As noted in the Background section in many situations it is desirable to enhance imaging devices with other applications or solutions but it can be difficult to do so across a variety of different model imaging devices which target different markets. One approach to providing applications and solutions for improving document workflows for networked imaging devices uses web applications. Web applications reside on a network server and enable device users to access them from the device s user interface such as its control panel. Server based web applications advantageously eliminate device based components of the application such as for example a USB drive for the application that is plugged into the device in order to run the application. As a result for example updating a particular web application is as simple as installing the new version of the application on the server. No changes are made to the imaging devices which can use the application.

Furthermore some technologies allow a single version of the web application to be usable with a variety of different models of imaging devices. This advantageously eliminates the need for an application provider to supply multiple versions of the application each tailored to the features and capabilities of different imaging device types. It also allows a user who is familiar with the operation of the application on one type of imaging device to easily use it on an imaging device of a different type such as a new model device that may be purchased in the future. It also simplifies the IT management of imaging devices and web applications across an entire enterprise.

One technology usable for such web applications is the Open Extensibility Platform OXP developed by Hewlett Packard. One aspect of OXP is the Open Extensibility Platform for Devices OXPd. OXPd is the device layer which is implemented on the imaging devices. OXPd provides a consistent set of application programming interfaces APIs for device services in the device that are exposed to and can be accessed by the application or solution. A software development kit SDK facilitates access to the APIs by the developers of the application.

Imaging device models are typically provided at different price performance points. Higher end devices may for example implement different e.g. more complex communication protocols than lower end devices. Higher end devices may also have more on board permanent non volatile storage for data including downloaded program code than do lower end devices. If an imaging device lacks sufficient non volatile storage it may be unable to store certain portions of the web application such as configuration data and run time data such as for example job statistics about jobs performed by the device such as for example copy scan print or fax jobs. In such cases the web applications may be unable to work with the imaging device. The larger amount of on board permanent storage in higher end imaging devices can be used to store the configuration and run time data of one or more applications but lower end imaging devices typically may not. Adding additional non volatile storage to a lower end device and the hardware interface to connect that storage however is typically infeasible due to increased cost.

A simpler communications protocol that places fewer processing demands on the imaging device than more complex communications mechanisms such as SOAP or RPC may advantageously be used for lower end imaging devices. One such protocol is REST representational state transfer which provides a lightweight mechanism for web services. REST utilizes a stateless client server cacheable communications protocol that is based on hypertext transfer protocol HTTP no session is used. In other words transactions in REST such as HTTP GET POST PUT etc. transactions are self contained each REST request made to a server includes in the request all the state information that is needed to perform it. This state information is included as will be discussed subsequently in greater detail in the HTTP uniform resource identifier associated with each REST transaction.

In some examples REST interfaces implement CRUD create request update and delete operations to access data. In some examples REST uses extensible markup language XML to return data payloads e.g. from an HTTP GET transaction and for communications with external clients. REST status messages use standard HTML error codes and messages. OXPd supports REST with these features and capabilities for network communications between the imaging device and the web server.

As defined herein and in the appended claims an imaging device shall be broadly understood to mean a device which produces and or consumes hard copy information such as printed documents graphics photographs or the like. Imaging devices include printers scanners copiers fax machines multi function devices that combine two or more of these devices and the like.

As defined herein and in the appended claims an OXPd application shall be broadly understood to mean a web based application or solution which is based on the HP Open Extensibility Platform for Devices.

As defined herein and in the appended claims an OXPd enabled device shall be broadly understood to mean a device which implements the OXPd device layer and which supports and works with OXPd applications.

As defined herein and in the appended claims the term REST protocol shall be broadly understood to mean a stateless client server sessionless cacheable communications protocol based on hypertext transfer protocol HTTP .

As defined herein and in the appended claims the term non volatile storage shall be broadly understood to mean any form of data storage device usable to store electronic data including storage that uses electronic electromechanical optical and electro optical mechanisms that persists when power is removed from the storage device.

As defined herein and in the appended claims a payload shall be broadly understood to mean data associated with a network based or web based application such as for example an OXPd application. In some examples the payload may be generated by and or provided by the application. In other examples the payload is associated with the application but may be generated by and or provided by other than the application.

Referring now to the drawings there is illustrated an example of a networked system in accordance with the present disclosure that includes a plurality of imaging devices each capable of executing a same web application resident on a web server external to the devices. Where an imaging device lacks sufficient non volatile storage to persistently store a data payload or portion thereof associated with an application the imaging device can store the payload or payload portion on a resource server external to the imaging device on the network.

Considering now in further detail one example networked system and with further reference to the various components of a system are communicatively coupleable via a network . The network may be for example the Internet. A web server hosts at least one application . An application may be executed from an imaging device that has sufficient non volatile storage on board to support the application . The same application may be executed from a number of different devices simultaneously. An application may also be executed from an imaging device that has insufficient non volatile storage on board to support the application . The device is configured by a user or administrator through an admin tool to use non volatile storage in a resource server also known as an OXPd Pro Services Server or OPS to store in a persistent manner some or all of a payload received by the device from the web server on the OPS . The device retrieves from the OPS the payload or portion thereof stored in the storage when needed. Any individual imaging device utilizes a single OPS . However a number of different devices can utilize the storage of the same OPS . The system may include plural OPS s . Such plural OPS s may be used for example for load balancing purposes.

The same application may be executed from a number of different devices simultaneously and or from a mix of OXPd enabled devices simultaneously. The application has no knowledge as to whether any of the OXPd enabled devices uses an OPS for payload storage. The application typically has no awareness of the OPS at all. This advantageously allows the application to operate without modification on a low end imaging device that does include sufficient on board non volatile storage for the payload. The OXPd enabled imaging device itself knows whether or not it uses the OPS for payload storage but the application does not know.

In some examples the OPS and the web server may be co located. In some examples the OPS and the web server may be the same physical server. In some examples the admin tool may be part of or supplied with the application . In some examples the admin tool may use HP Web Jetadmin WJA web based imaging device management software used to install configure troubleshoot and manage networked devices.

Considering now another example networked system that includes an imaging device and with reference to a system includes a network a web server that hosts at least one application a resource server and an imaging device .

The imaging device includes an interface structured to receive over the network a payload for the application . In some examples the payload may be a registration payload to register the application on the imaging device such that when a user of the imaging device desires to access those applications associated with the imaging device the application will be included among those applications. The device also includes a non volatile persistent storage insufficient to store the payload . The device further includes an address on the network of the resource server . The device additionally includes a client structured to use the URI of the resource server to store at least a portion of the payload on the resource server to access the server . In some examples the payload portion is the entire payload . In other examples the payload portion may be less than the entire payload or a subset of the payload . In some examples the portion is stored in non volatile storage of the server . In some examples where the payload portion is less than the entire payload a different portion of the payload other than the portion may be stored on the non volatile storage of the device itself. By using the resource server to store the portion of the payload the application can be registered with and subsequently operated from the imaging device even though the device s internal non volatile storage is insufficient for doing so.

The address in some examples may be a portion of a uniform resource identifier URI . A URI is used to specify a resource on a network by its location. Assume that a resource server is located at an internet protocol IP network address 70.127.66.64 and accessed via port . An example URI for accessing via a secure HTTP session a particular resource res3 of resource type type2 belonging to imaging device dvc1 is https 70.127.66.64 8080 oxpdleodr dvc1 type2 res3 . For this example URI the portion corresponding to the network address would be 70.127.66.64 8080 .

As defined herein and in the appended claims the term resource server shall be broadly understood to mean a data server according to a REST architecture in which a URI or a portion thereof identifies a corresponding resource accessible on the data server via a stateless interaction. For example the URI portion oxpdleodr dvc1 type2 res3 identifies the resource res3 of resource type type2 belonging to imaging device dvc1 discussed above.

In one example the imaging device is an OXPd enabled imaging device the application is an OXPd application the interface is a REST protocol interface the resource server is a REST protocol resource server and the client stores the payload portion using REST protocol.

In one example the network the web server the application the resource server and the imaging device may be the network the web server the application the resource server and the imaging device of the system of .

Considering now one example of an imaging device in greater detail and with reference to an OXPd enabled imaging device includes application programming interfaces APIs for a set of services. The set of APIs may include or correspond to the REST protocol interface . The APIs are typically referred to as Device Services APIs for RESTful services of the imaging device that are used for monitoring and managing the operations and controlling the functions of the imaging device through Internet protocols as will be discussed subsequently. When an external entity such as an OXPd application on an external web server accesses the imaging device via an API the device functions as a server while the application functions as a client.

In one example the API set includes APIs for an OPS registration service a user interface UI configuration service and one or more other services indicated generally at . In some examples such other services may include services that access perform and or operate an imaging engine such as a scan engine a print engine a fax engine or the like in response to communications received at the appropriate service .

The OXPd enabled imaging device also includes a set of clients . The set of clients may include or correspond to the client . In one example the client set includes an OPS client and an application client . These will be discussed subsequently in greater detail.

The OXPd enabled imaging device include a user interface . The user interface typically includes one or more user control elements that receive inputs from a user of the imaging device and one or more user display elements that communicate information to the user. One example user interface may be or include a touch sensitive display or touchscreen. Input elements such as labeled buttons or regions may be displayed on certain areas of the display and when the corresponding area on the display is pressed by the user interpreted by the imaging device as a user input corresponding to the input element or button. The touchscreen may also display to the user textual graphical and or image information.

A controller of the OXPd enabled imaging device is communicatively coupled to the set of APIs the set of clients the user interface and the imaging engine . In some examples the controller includes a processor and the APIs and the clients may be implemented as software or firmware that can be executed by the processor.

The controller is also communicatively coupled to a volatile RAM RAM memory that is not persistent i.e. does not retain its contents when power is removed from the device and a non volatile RAM NVRAM memory that is persistent i.e. it does retain its contents when power is removed from the device . The NVRAM in the OXPd enabled imaging device may include or correspond to the non volatile storage . As will be discussed in greater detail below the NVRAM has insufficient available non volatile storage space to store the entirety of certain payloads received by the imaging device from an external OXPd application such as configuration payloads or certain payloads generated by the imaging device such as job statistics payloads . The OXPd application may correspond to application . In lower end imaging devices for example the storage capacity of the available NVRAM may be limited for cost reasons and such devices also lack other forms of persistent read write memory such as a hard disk drive that could otherwise be used for storing such payloads.

In some examples the OXPd enabled imaging device includes a device identifier device ID . The device ID may be for example a unique number such as a serial number of the device or a universally unique identifier UUID constructed according to an identifier standard from for example the Open Software Foundation as part of the Distributed Computing Environment. While for simplicity the device ID is illustrated as a separate element in some examples it may be a value maintained at a storage location in the NVRAM . The device ID allows the OXPd enabled imaging device to be uniquely identified when it communicates with other devices on the network.

Considering now the APIs and their operation in greater detail the OPS registration service is configured to receive an address of an OPS such as for example OPS . The OPS address represents the particular OPS which the imaging device may use to store the payload or portion thereof received by the imaging device from an external OXPd application. The controller stores the received OPS address in the NVRAM as OPS address .

The UI configuration service is configured to receive a payload for an OXPd application stored on an external web server such as for example web server . In one example the payload is a registration payload A of an OXPd application such that when a user of the OXPd enabled imaging device desires to access those external web applications that are associated with the OXPd enabled imaging device the OXPd application corresponding to the registration payload will be included among those applications.

The registration payload A includes an address on the network of the corresponding OXPd application. As has been described heretofore the application network address is typically the IP address portion of a URI such as for example 70.127.60.68 . The controller extracts the received application address from the registration payload and stores it in the NVRAM as application address . The registration payload A also includes an icon that is associated with the corresponding OXPd application. This icon is displayable on the user interface as for example a labeled button or region with which the user can interact in order to provide an input to the user interface corresponding to the selection of the icon . The registration payload A may further include one or more localized language strings . Each localized language string typically is text in a particular language. For example a first language string may be English a second language string may be Spanish and so on. A language string may include at least a language localized title of the OXPd application and a language localized description of the OXPd application.

The controller is further structured to determine the portion of the payload that is to be stored on the external resource server. In some examples the portion is the entire payload . In other examples the controller may assess the size of the payload and the amount of available memory space in the NVRAM or other non volatile storage of the imaging device . Where less memory space is available the payload portion may be larger conversely where more memory space in available the payload portion may be smaller. If the payload portion is less than the entire payload then in some examples the controller is further structured to store a different portion of the payload in the NVRAM or other on board non volatile storage as a retained payload portion .

The other services are configured to interact with an external OXPd application via commands . These other services may include some or all of an accessories service an authentication service an authorization service and a statistics service in addition to other services. The accessories service provides remote access to universal serial bus USB accessories not shown plugged into one or more ports not shown of the imaging device . The authentication service provides methods for managing the OXPd authentication agents of the imaging device initiating the login process and ending a user session. The authorization service provides methods for managing an OXPd authorization proxy of the imaging device which manages which applications an authenticated user is allowed to access. The statistics service provides methods for managing the device s OXPd statistics agents which enable per job statistics data to be collected.

Considering now the clients and their operation in greater detail the OPS client is structured to communicate via HTTP with the external OPS to store payload portions on and retrieve payload portions from the external OPS. The application client is structured to communicate via HTTP with the external OXPd application using application commands . In another example a single client may be structured to communicate with both the external application and the external OPS. In some examples either or both of the clients may be an HTML web browser. In some examples the HTML web browser may be a full featured browser while in other examples it may support a subset of browser features and omit others. In some examples one or both of the clients may use XML instead of HTML for communication with external clients via REST protocol. For examples XML may be used instead of HTML CSS or JavaScript for describing and accessing the user interface elements of the OXPd application that may be presented on the user interface of the imaging device when the OXPd application is being executed by the imaging device .

The OXPd application is operable on the external web server from the user interface of the imaging device . When the user wishes to initiate execution of the OXPd application from the imaging device in one example the user provides an input at the user interface to select an Applications icon button or control. In response a built in function of the imaging device displays on the user interface the icons of all OXPd applications that have been registered with the imaging device . To do this the imaging device uses the registration payload A of each registered OXPd application. However since at most a portion of the registration payload A has been retained as retained payload portion in the RAM the imaging device typically does not have on board all the payload information to be used. As a result the payload portion stored on the external resource server OPS is first retrieved using the OPS . The controller stores the retrieved payload portion in the volatile RAM as retrieved payload portion . Once the imaging device has the entire registration payload A an icon for the corresponding OXPd application is presented on the user interface . In some examples the payload portion is retrieved during the power on boot process of the imaging device so that a more rapid response can be provided to the selection of the Applications icon button or control.

The user can then provide a user input that selects the corresponding icon and initiates execution of the OXPd application. The imaging device then interacts with the OXPd application to execute the application. To execute the OXPd application from the imaging device the application client accesses the OXPd application via application commands . In some examples the application commands are URIs constructed using the application address . The user interface elements of the OXPd application are obtained from the OXPd application and displayed on the user interface . The imaging device receives inputs from the user via the user interface to interact with these OXPd application elements. In response application commands corresponding to the user interactions are communicated by the application client to the external OXPd application. The OXPd application in turn may communicate application commands to ones of the various device service APIs . The OXPd application is executed from the imaging device in this manner.

Considering the structure of the various transactions between the imaging device and either the OPS or the OXPd application commands are sent from a client to a service or server and responses are sent from the service or server to the client. These transactions are HTTP transactions for CRUD operations performed using REST protocol. For the application commands and for storing and retrieving the payload portion the clients issue HTTP GET POST PUT or DELETE commands to the service server. These commands include a URI which identifies a particular predefined resource of the resource server OPS .

In the case of an HTTP GET command such as for example to retrieve the payload portion from the OPS the response is returned in the form of an extensible markup language XML message. In the case of an HTTP PUT or POST command such as for example to store the payload portion on the OPS an XML message may be appended to the command. The controller may process received XML messages and construct XML messages included with commands.

Note that while the use of the resource server OPS for storage by the imaging device has been described with reference to at least a portion of the registration payload A the OPS may also be used by the imaging device for storing other OXPd application related information. Examples of such information may include Home Screen messages for the imaging device authorization and authentication details e.g. certificates of the OXPd application and details of printer accessories used by the OXPd application among other information.

Considering now another example networked system that includes an imaging device and with reference to a system includes a network a web server that hosts at least one application an imaging device and a resource server OPS .

The OPS includes a database suitable to store unstructured data. The OPS also includes an internal interface structured to access the database via internal access requests . The OPS further includes an external interface structured to receive an external request to access a particular resource of the database from the networked imaging device . The request corresponds to at least a portion of a payload for the application on the web server . The payload is sent to the imaging device from another source. In some examples the source is the web server while in other examples the source is a network element not shown other than the web server and the OPS . The OPS also includes a protocol adapter structured to convert the external access request to the corresponding internal access request which is usable by the internal interface to access the database .

In one example the resource server is a REST protocol resource server the external access request is a REST protocol access request the internal access request is a non REST protocol access request the imaging device is an OXPd enabled imaging device and the application is an OXPd application.

In one example the network the web server the application the resource server and the imaging device may be the network the web server the application the resource server and the imaging device of the system .

Considering now one example of a resource server OPS in greater detail and with reference to a REST protocol OPS includes a database server . In some examples the database server is a lightweight NoSQL Not Only SQL database server. NoSQL which encompasses a wide range of technologies and architectures solves scalability and big data performance issues that relational databases are not designed to address. A NoSQL database server is advantageous when massive amounts of unstructured data or data that is stored remotely on multiple virtual servers on the network is to be accessed and or analyzed. The database server includes a database and an internal API for accessing the database .

The OPS can be used by an OXPd enabled imaging device to store both unstructured textual data and unstructured non textual data. Textual XML messages stored on the OPS are considered to be unstructured data because they are stored by the OPS as raw data without parsing. Non textual unstructured data includes the image files e.g. in .png format for the icons . These image files may be embedded in XML messages to form non textual XML messages.

The OPS also includes an external API that receives external REST protocol requests to access the database . The REST protocol requests may be received from one or more different OXPd enabled imaging devices. Where multiple imaging devices access the same OPS separate datasets are maintained for each imaging device. The particular imaging device accessing the OPS is identified by the URI. For example in the URI of the access request https 70.127.66.64 8080 oxpdleodr dvc1 type2 res3 the dvc1 field denotes the particular imaging device making the access request. It is noted that the OPS is not limited to storing and retrieving data from imaging devices any network device that stores and retrieves unstructured data according to REST protocol may use the OPS for that data.

The OPS further includes a protocol adapter that translates REST protocol access requests received at the external API to non REST protocol access requests issued to the internal API . In some examples the protocol adapter operates in an event driven and non blocking manner. When a first REST protocol access request is received at the protocol adapter the adapter accepts the request issues the corresponding non REST protocol access request to the internal API and then is available to service a second REST protocol access request should one be received while the database server is processing the non REST protocol access request . When the first non REST protocol access request is completed by the database server the results are returned to the protocol adapter which in turn returns the results through the external API to the requestor to complete the first REST protocol access request . Thus from the requestor s point of view e.g. that of the imaging device the REST transaction is both stateless and sessionless although the operation of the protocol adapter itself is event driven and non blocking.

In some examples the OPS includes a set of additional services . A rerouting service interfaces to the external API . The rerouting service is structured to determine whether the OPS is unavailable to process the REST protocol request received at the external API and if the OPS is unavailable the rerouting service automatically re routes the received request through the external API to a different networked REST protocol resource server not shown on the network. As defined herein and in the appended claims the terms automated or automatically and like variations thereof shall be broadly understood to mean controlled operation of an apparatus system and or process using computers and or mechanical electrical devices without the necessity of human intervention observation effort and or decision.

A reporting function is structured to process a REST protocol request in the form of a message received at the external API from the imaging device the message having statistics related to an imaging job completed by the imaging device. The reporting function then sends a REST protocol message derived from the statistics through the external API to at least one agent on the network which has subscribed to receive the statistics. The agent may be for example associated with an administrator or a user of the imaging device.

A replicate function is structured to replicate the database to form a backup dataset . The replicate function may be configured to execute periodically or upon request. It may execute in response to an external REST protocol request or automatically based on a command generated internally by the OPS . In some examples a plurality of backup datasets made at different times may be maintained. In case of data loss or corruption of the database an appropriate backup dataset may be restored to re form the database thus avoiding or minimizing the effect of the lost or corrupted data.

Considering now the configuration and operation of an imaging device to execute a web application and the associated use of a resource server and with reference to one example sequence of operations between and among these and other elements is illustrated. At step a network address of the resource server OPS is sent from an admin tool to the imaging device . The admin tool may be operated by an administrator such as the administrator of a fleet of an enterprise s imaging devices. The OPS address is then stored in non volatile storage of the imaging device. At step a registration payload is received. In some examples the registration payload is also sent by the administrator through the admin tool although it could be obtained in other ways such as for example from a web server that hosts or is associated with the web application . The registration payload includes a network address of the web application and the imaging device extracts the application network address and stores it in non volatile storage of the imaging device. Since the imaging device has insufficient non volatile storage to store the entire registration payload in a persistent manner at step the imaging device sends at least a portion of the registration payload which in some examples as has been described heretofore may be the entire registration payload to the OPS located at the OPS address for storage.

Following the completion of step the imaging device has been configured to execute the web application. At step a user provides an input at a user interface of the imaging device to display a Home screen such as example Home screen on the display portion of the user interface of the imaging device . At step the user selects an Apps icon on the home screen . The imaging device interprets the selection as a request to display the web applications that have been registered i.e. configured for operation with the imaging device . At step in response the imaging device retrieves the portion of the registration payload s stored on the OPS for the web application s registered with the imaging device . While step has been described in this example as responsive to step in other examples step may be performed at an earlier time following step such as for example during boot up of the imaging device . The imaging device at step uses the icon and appropriate localized language strings for the desired language to display an Applications screen such as example Applications screen on the display portion of the user interface of the imaging device . At step the user selects a particular web application for example App on the Application screen .

The imaging device interprets the selection as a request to execute the web application that corresponds to App . At step in response the imaging device issues a request to the App web application located at the application network address in order get the initial user interface of the application . After the user interface is received at the imaging device it is displayed on the display portion of the user interface of the imaging device at step . For example the initial user interface for the App application is presented as Authentication screen and entry by the user of a PIN or password is awaited.

Steps and represent interactions of the user with the App application and the results of those interactions. Interactions made by the user at step are communicated to the App application at step to be processed. This processing typically includes changes to the user interface which are communicated to the imaging device by the App application . The processing may also include the App application issuing other communications to the imaging device such as calls to various APIs . At step the effect or results of the user interactions is displayed on the display portion of the user interface of the imaging device . As part of steps further payloads or data may be stored on and or retrieved from the OPS by the imaging device .

Consider now with reference to a flowchart of the operation of an imaging device. Alternatively the flowchart of may be considered as steps in a method of operating an imaging device. One or more various computing devices or processors may perform some or all of the steps of the method in the form of non transitory computer readable and executable instructions stored in a memory that is part or and or accessible by the computing device or processor.

The method begins at by receiving at the imaging device over a network a payload for an application on a web server. The application is operable from the imaging device once it has been registered with the imaging device. At it is ascertained by the imaging device whether non volatile storage in the imaging device is sufficient to store the payload. At if the non volatile storage in the imaging device is insufficient to store the payload then the imaging device determines a portion of the payload to be stored in a resource server external to the imaging device on the network. In some examples at another portion of the payload may be stored in the non volatile storage.

At a storage request including the portion of the payload is sent from the imaging device to the resource server. In some examples at a network address of the resource server is obtained from the non volatile storage. In some examples block includes at receiving the resource server address at the imaging device from an administrator and storing the received address in the non volatile storage. In some examples block includes at constructing the storage request to specify a a storage method b a resource identifier having a concatenation of the address an identifier of the imaging device and a resource type and c the portion of the payload. In some examples the payload portion is stored by the resource server at a resource that corresponds to the concatenation.

In some examples of the method the imaging device is an OXPd enabled imaging device the payload is a REST protocol payload for an OXPd application the resource server is a REST protocol resource server and the storage request uses a REST protocol HTTP PUT or POST command.

Consider now with reference to another flowchart of the operation of an imaging device. Alternatively the flowchart of may be considered as steps in a method of operating an imaging device. One or more various computing devices or processors may perform some or all of the steps of the method in the form of non transitory computer readable and executable instructions stored in a memory that is part or and or accessible by the computing device or processor.

The method begins at by receiving at a user interface of the imaging device an input from a user to access the application. In some examples at the input from the user is the operation of an Applications control on the device. At a request to retrieve a payload portion is sent from the device to the resource server. In some examples the payload portion corresponds to a payload portion stored on the resource server by the operation of method . At the payload portion is received at the device from the resource server. At at least one icon associated with the received payload portion is presented on a user interface of the device. The icon is selectable by the user to operate the application using the received payload portion. In some examples at the presented icon corresponds to the application. In some examples at selecting the presented icon causes the imaging device to send to the resource server a request to initiate operation of the web application.

In some examples of the method the imaging device is an OXPd enabled imaging device the payload is a REST protocol payload for an OXPd application the resource server is a REST protocol resource server and the retrieval request uses a REST protocol HTTP GET command.

Considering now hardware architectures of an imaging device and a resource server usable with the methods and with reference to an imaging device includes at least one processor that is communicatively coupled to at least one memory . The memory is a non transitory computer readable storage medium on or in which instructions executable by the processor are or can be stored. In various examples the instructions stored in a particular memory may correspond to at least a portion of the methods . In some examples the memory includes instructions that implement at least one client and at least one interface . The client may in some examples correspond to the client or clients . The interface may in some examples correspond to the interface or APIs .

A resource server includes at least one processor that is communicatively coupled to at least one memory . The memory is a non transitory computer readable storage medium on or in which instructions executable by the processor are or can be stored. In various examples the instructions stored in a particular memory may correspond to at least a portion of the methods . In some examples the memory includes instructions that implement at least an external interface an internal interface and a protocol adapter . The external interface may in some examples correspond to the external interface or the external API . The internal interface may in some examples correspond to the internal interface or the internal API . The protocol adapter may in some examples correspond to the protocol adapter or NodeJS protocol adapter .

From the foregoing it will be appreciated that the imaging device resource server and methods provided by the present disclosure represent a significant advance in the art. Although several specific examples have been described and illustrated the disclosure is not limited to the specific methods forms or arrangements of parts so described and illustrated. For example examples of the disclosure are not limited to imaging devices and are more broadly applicable to other types of electronic devices. This description should be understood to include all novel and non obvious combinations of elements described herein and claims may be presented in this or a later application to any novel and non obvious combination of these elements. The foregoing examples are illustrative and no single feature or element is essential to all possible combinations that may be claimed in this or a later application. Unless otherwise specified steps of a method claim need not be performed in the order specified. Similarly blocks in diagrams or numbers such as 1 2 etc. should not be construed as steps that must proceed in a particular order. Additional blocks steps may be added some blocks steps removed or the order of the blocks steps altered and still be within the scope of the disclosed examples. Further methods or steps discussed within different figures can be added to or exchanged with methods or steps in other figures. Further yet specific numerical data values such as specific quantities numbers categories etc. or other specific information should be interpreted as illustrative for discussing the examples. Such specific information is not provided to limit examples. The disclosure is not limited to the above described implementations but instead is defined by the appended claims in light of their full scope of equivalents. Where the claims recite a or a first element of the equivalent thereof such claims should be understood to include incorporation of one or more such elements neither requiring nor excluding two or more such elements.

