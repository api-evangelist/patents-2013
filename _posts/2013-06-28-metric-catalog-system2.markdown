---

title: Metric catalog system
abstract: A repository stores a metric catalog. The metric catalog represents a slice of multidimensional data source. The metric catalog includes a selected measure, at least one analysis dimension, and at least one fixed dimension. A metric catalog system exposes the metric catalog as a web service. A web service client requests to consume the metric catalog. In response to the request, the metric catalog system parses the metric catalog. Based on the parsed metric catalog, one or more queries are generated and executed. Based on the execution of the queries, values of the selected measure for the at least one analysis dimension are determined. The determined values of the selected measure for the at least one analysis dimension is returned to the web service client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535970&OS=09535970&RS=09535970
owner: SAP SE
number: 09535970
owner_city: Walldorf
owner_country: DE
publication_date: 20130628
---
Online analytical processing OLAP is a computer based technique for analyzing business data in the search for business intelligence. OLAP tools provide fast analysis of multidimensional data interactively from multiple perspectives. OLAP systems are used for report generation and are suited to ad hoc analyses. There are a number of commercially available OLAP tools including Business Objects OLAP Intelligence which is available from Business Objects Americas of San Jose Calif. The data in an OLAP data source is multi dimensional and it may be partially or fully pre aggregated. OLAP data sources also called cubes or hyper cubes provide a multi dimensional conceptual view of data including support for hierarchies and multiple hierarchies. The core of an OLAP system is the OLAP cube. It consists of numeric facts called measures which are categorized by dimensions. Dimensions may be organized in hierarchies. A hierarchy consists of set of dimension members and their parent child relation to one another. The results of an OLAP query are often displayed in a cross tabulation or cross tab. In a cross tab the dimensions form the rows and columns of the matrix while the measures are the values.

The querying process for OLAP can involve depending on the specific implementation writing and executing a query. Multidimensional Expressions MDX is a query language for OLAP databases such as Structured Query Language SQL is a query language for relational databases. Thus an MDX statement can be used to query an OLAP data source for a result. The MDX statement can resemble SQL statements where one can ask for data on a row and columns from a cube. As with an SQL query each MDX query requires a data request e.g. the SELECT clause a starting point e.g. the FROM clause and a filter e.g. the WHERE clause . These and other keywords provide the tools used to extract specific portions of data from a cube for analysis.

OLAP data sources consist of numerous dimensions and measures. Due to the nature of OLAP data sources there is a lot of redundant data and a lot of columns and rows are selected in queries of even moderate complexity. In addition users typically include many members in their queries. Usually instead of constructing MDX queries complex business data is explored via an interface to a multidimensional data source that communicates with the multidimensional data source and maintains sets of members that will be queried. For example standard interface for manipulation of OLAP cubes may be a matrix interface such as a pivot table. Even without the need to construct MDX queries manipulation of OLAP cubes via such interfaces requires knowledge of the structure and organization of the OLAP cubes. Analysis via pivot tables involves population of row column and slice axes with dimensions selected from the OLAP cube. The process of identifying corresponding dimensions dimension members and measures and populating those to axes of pivot tables is complex and requires technical knowledge. Users may need to create connection to an OLAP cube by manually browsing dimension hierarchies to select dimensions and measures of interest and typically OLAP knowledge is required to carry out the analysis.

Embodiments of techniques for a metric catalog system are described herein in the following description numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components materials etc. in other instances well known structures materials or operations are not shown or described in detail.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

Dimensions are objects that model sets of business entities of common nature such as geographical locations products or groups of products time periods etc. Examples of common dimensions are Product Geography Time and Employee . Dimensions may be used to structure analyses of for example enterprise data. Further dimensions may have properties attributes or details attached to them. For instance a Customer dimension may have an address as a property or attribute. A dimension can be structured into OLAP hierarchies. For instance dimension Countries may include dimension States which in turn may include dimension Cities . Members of dimension Cities may be San Francisco Paris London etc. When a dimension object is directly used in a report the business term assigned to the dimension as an attribute may be a unique name or a caption designed in a user friendly form. A dimension can be mapped to one or more table columns or can be a function in a database to represent an axis of analysis in a query. A dimension may also classify an aspect of an activity in a business environment.

Further a dimension can be represented as a structural attribute of a cube that includes a list of objects all of which are of a similar type in the user s perception of the data. For example all months quarters years etc. make up the dimension time . Likewise all cities regions countries etc. make up the dimension geography . In addition a dimension may act as an index for identifying values within a multi dimensional array. If one member of the dimension is selected then the remaining dimensions in which a range of members or all members are selected define a sub cube. If all but two dimensions have a single member selected the remaining two dimensions define a slice also referred to as a spreadsheet or a page. If all dimensions have a single member selected then a single cell is defined. Dimensions provide a concise intuitive way of organizing and selecting data for retrieval exploration and analysis.

Measures are objects that model quantities or variable items that usually take their values as functions of sets of values for dimension objects. For instance a Sales Revenue measure is a numerical value that combines the sets of values for dimension objects Products Customers Stores etc. There may be a distinct value of this measure for each geographical location each period of time and each product or set of products. A measure can be associated with the group of dimensions on which it depends. This is called dimensionality of the measure. For instance the dimensionality of the measure Revenue may be Geography Time Product . Whereas the dimensionality of a measure Population might be for example Geography Time since populations of geographical entities may vary with time but are not related to products.

OLAP functionality enables business analysis based on measures dimensions dimension hierarchies etc. OLAP functionality is characterized by dynamic multi dimensional analysis of consolidated enterprise data supporting end user analytical and navigational activities including but not limited to calculations and modeling applied across dimensions through hierarchies and or across members trend analysis over sequential time periods slicing subsets for on screen viewing drill down to deeper levels of consolidation reach through to underlying detail data rotation to new dimensional comparisons in the viewing area etc.

For a typical OLAP analysis one or two measures of only few dimensions are usually selected to be analyzed from an OLAP cube that contains numerous dimensions and measures. An example of business insight obtained via a business analysis may be the answer of the following question What are the unit sales for year 1997 across various products and male customers where the minimum sales target is 1000 units In this example the measure that has to be selected to derive the insight is Unit Sales and the dimensions of the measure to be analyzed are Time Product Customer and Gender . It may be desirable to build a structure based on which desired data from an OLAP cube is automatically extracted instead of manually selecting desired OLAP objects. In one embodiment a metric catalog is built that defines among others a set of measures and dimensions over which the measures are to be analyzed. A metric of a metric catalog represents a measure. Values of the metric are determined by computing values of the measure for one or more predefined dimensions and dimension members and optionally for a predetermined time period. Further the metric may be associated with predefined performance threshold e.g. a target for the measure.

In various embodiments the metric catalog predefines the dimensions and the dimension members across which the metric is analyzed. The predefined dimensions and dimension members represent axes of analysis in one or more queries. The queries are generated automatically in response to parsing the metric catalog. The queries determine the values of one or more measures for the predefined dimensions. Based on the metric catalog analysis views and scorecards or dashboards over multidimensional data are generated automatically.

Metric catalog description provides a name of the catalog e.g. Sales Details and description of the business insight to be derived. In one embodiment metric catalogs are stored in a central repository and may be referenced and identified by their name. Data source descriptor provides unique connection identifier for a connection to an OLAP cube from a metric catalog system e.g. CUID AwqmTq3x9ulFuvOEH4V57os . In one embodiment the unique connection identifier may refer to an OLAP connection object generated for example by as SAP BusinessObjects Business Intelligence platform. Data source descriptor may further specify the data source of metric catalog e.g. an OLAP cube Sales .

Typically in an OLAP cube all measures available in the cube may be grouped under a single dimension. Similarly metric dimension is an entity of metric catalog that groups all measures available in the source cube. Alternatively one or more measures may be members of different dimensions.

Measure Unit sales is specified as a member of metric dimension . Measure Unit sales is selected as the key metric to be analyzed based on metric catalog . In one embodiment one or more measures may be selected as key metrics to be analyzed. Metric analysis involves determining values of a measure for one or more dimensions and dimension members. A common business insight as in the example may include analyzing the values of a measure along a number of dimensions and dimension members for a predefined period of time and for a predefined corresponding target of the measure. Therefore it may be desirable that a metric catalog further predefines a member of a time dimension and a measure target. A measure target is a performance threshold for a metric of a metric catalog.

In various embodiments one measure target per predefined measure to be analyzed may be specified. For example a business goal may be that stores in specific regions generate unit sales above specific threshold e.g. 1000 sales. Hence it may be desirable to determine which regions perform below the predefined target of 1000 sales. A target is specified for measure i.e. target value equals 1000 . Further an attribute nature for measure Unit sales is defined that specifies if values higher or lower than the target value are desirable. For example attribute nature of measure Unit sales indicate that values higher than the target value are desirable e.g. nature UpperValuesGood . Thus behavior of a metric may be explored to identify business indicators that perform below or above targets. Status of metrics is determined based on measure targets defined in the metric catalog.

Analysis dimensions define the dimensions that are to be explored to seek business insight. Analysis dimensions are specified for one or more measures of metric catalog . Values of the one or more measures are determined for analysis dimensions . For example values of measure Unit sales are determined for analysis dimensions . Instead of manually selecting the dimensions to be explored each time to carry out an analysis those dimensions are predetermined and kept in a metric catalog such as metric catalog . For example dimension Product and dimension Customers are to be explored based on metric catalog . Attribute uniqueName of an analysis dimension from analysis dimensions specifies an identifier of respective dimensions in the source cube. Attribute DefaultMemberUniqueName of an analysis dimension from analysis dimensions specifies an identifier of a root level of a hierarchy of the dimension. Based on the value of attribute DefaultMemberUniqueName children members of the dimension can be browsed.

Values of measure Unit sales are also determined depending on fixed dimensions . Fixed dimensions specify one or more filters of the data to be analyzed. Metric catalog defines dimension Gender and dimension Time as filters. Data is filtered based on selected dimension members for the fixed dimensions. For example data is filtered based on member Male of dimension Gender . Also data to be analyzed is filtered based on member 1997 of dimension Time . Selected dimension members for the fixed dimensions remain constant throughout metrics analysis carried out based on the metric catalog.

In various embodiments analysis dimensions are specified for a corresponding measure. In case there are no analysis dimensions specified for one or more measures of a metric catalog prompt dimensions are used instead of analysis dimensions. If no analysis dimension is specified for the measure the measure is analyzed based on prompt dimensions . In one embodiment analysis dimensions may be specified for the whole metric catalog instead of for a single measure. Similarly a fixed dimension may be selected for a single measure or for the metric catalog as a whole.

Metric catalog represents a selection or abstraction of business objects defined in a multi dimensional data source. Thus metric catalog separates a predefined selection of objects from the complex structure of the multidimensional data source. Metric catalog predefines the business objects and their usage in an analysis. In one embodiment metric catalog represents an Extensible Markup Language XML file that defines a slice of multi dimensional data source. Further metric catalog embeds computation logic to determine status of defined metrics in the metric catalog based on defined measure targets.

Metric catalog system exposes as a web service metric catalogs stored in repository . Metric catalogs are exposed to a web service client . Web service client may include a graphical OLAP client that connects to a metric catalog system via server . Web service client consumes metric catalogs based on metric catalog system . Users may browse and analyze metrics of metric catalogs via web service client . In one embodiment metric browsing is a process employed by users to explore OLAP cube interactively using a graphical OLAP client connected to an OLAP server such as server . Metric browsing involves exploration of metrics behavior based on a metric catalog. Metric browsing is a process of analyzing one or more metrics of a metric catalog across dimensions through hierarchies and or across members for a predefined period of time and predetermined measure targets. Further metric browsing is a process of dynamic and interactive exploration of a slice of multi dimensional data. Metric browsing may also include drill down functionality to deeper levels of consolidation and trend and status analysis aver sequential time periods.

Web service client requests to consume a metric catalog stored in repository . In one embodiment web service client sends the request to consume the metric catalog in response to a user request to browse one or more metrics of the metric catalog. In response to the request to consume the metric catalog metric catalog system parses the metric catalog. In response to parsing the metric catalog metric catalog system maps metric catalog entities to elements of one or more queries for example MDX queries. Based on the mapping corresponding one or more MDX queries are generated. The number of generated MDX queries depends on the number of dimensions or dimension members for which measure value is to be determined. Then the generated one or more MDX queries are executed. The MDX queries are executed on OLAP cube . Based on the execution of the MDX queries values of a selected measure of a metric catalog are determined for members of one or more analysis dimensions predefined in the metric catalog. Based on the MDX queries metric catalog system retrieves data from OLAP cube . Metric catalog system returns retrieved data to web service client via server . In one embodiment determined values of the selected measure for members the one or more analysis dimensions are displayed in an analysis view. The analysis view is generated in response to a request to consume a metric catalog.

A dimension hierarchy presented in an analysis view may be illustrated with distinct color within the analysis view to distinguish it from other dimension hierarchies. Nodes and links between the nodes of a dimension and dimension members are represented with distinguished color so that the hierarchy relationship can be identified by the color. For example the hierarchical relationship between Product Dimension and members Food Drink and Non consumable is represented with distinct color of nodes as well as links between nodes and up to the root node Unit Sales distinct color of the links is not illustrated . Similarly the hierarchical relationship between Customers Dimension and members Mexico Canada and USA is also represented with distinct color of nodes and links up to the root of the graph distinct color of the links is not illustrated .

Values of the measure which is browsed in an analysis view based on a metric catalog are calculated for dimensions and dimension members. Values of the measure are associated with corresponding graph nodes in the analysis view. A default value of the measure is calculated for all dimensions of the multi dimensional data source. The default measure value is a consolidated value of the measure for all dimensions e.g. a sum of measure values for all dimensions in an OLAP cube. For example the default value of the measure Unit Sales is associated with root node Unit Sales and equals 266773 . Value of the measure Unit Sales is displayed for each dimension member of corresponding nodes . Further measure values for dimensions and dimension members are compared to corresponding measure target predefined in the metric catalog. A visual indicator such as indicator is displayed to signal if the corresponding measure value is below the measure target. For example if a measure value for a dimension member is below the measure target and if the nature attribute in the metric catalog specifies that values above the measure target are desirable then the dimension member is underperforming and the indicator may be colored in red to signal the underperformance. Alternatively if a measure value for a dimension member is below the measure target and if the nature attribute in the metric catalog specifies that values below the measure target are desirable then dimension member is performing as desired and the indicator may be colored in green. Also if a measure value for a dimension member is above the measure target and if the nature attribute in the metric catalog specifies that values above the measure target are desirable then the dimension member is performing. Alternatively if the measure value for a dimension member is below the measure target and if the nature attribute in the metric catalog specifies that values above the measure target are desirable then the dimension member is underperforming

In analysis view a user may further analyze measure values for dimension and dimension members by selecting a corresponding dimension or a dimension member and drilling down. By drilling down on a selected dimension member for example dimension members at next level in the hierarchy are displayed along with associated measure values.

At the measure predefined as a metric is mapped to a column axis specification of an MDX query to be generated. Column axis specification enumerates dimensions members to be used in the column axis of an analysis. At a second level member of the selected analysis dimension is mapped to a row axis specification of the MDX query. Row axis specification enumerates dimensions members to be used in the row axis of an analysis. The first level member of an analysis dimension is a root member that includes all members of the dimension. At one or more fixed dimensions of the metric catalog are mapped to a slice specification. Slice specification enumerates sliced dimensions members. At a data source descriptor of the metric catalog is mapped to a cube specification of the MDX query. The cube specification refers to specification of a multidimensional data source. Connection details to an OLAP cube as specified in the metric catalog are mapped to the MDX query. At the MDX query is generated as determined by the mappings of the metric catalog entities to the elements of the MDX query.

At a check is performed to determine if there are any second level members of the selected analysis dimension that are not mapped. If there is a second level member of the selected analysis dimension that is not mapped the process is repeated from . The newly selected unmapped second level member of the selected analysis dimension is mapped to a row axis specification of a new MDX query. The new MDX query is generated for the newly selected member. Steps to are repeated for all second level members of the selected analysis dimension. When all second level members of the selected analysis dimension are mapped a check is performed at to determine if there are any unselected analysis dimensions. In one embodiment if analysis dimensions are associated with a measure then it is checked if there are any unselected analysis dimensions that are associated with the measure. If it is determined that there is an analysis dimension that is not selected the process is repeated at by selecting the unselected analysis dimension. In one embodiment if there are no analysis dimensions predefined for the metric catalog to be analyzed prompt dimensions and prompt dimension members are mapped to row axis specifications of corresponding MDX queries. Prompt dimensions are default replacements for analysis dimensions if analysis dimensions are not predefined in the metric catalog.

If all analysis dimensions are selected and a corresponding MDX query is generated for each second level member of each analysis dimension at generated MDX queries are executed to determine values of the measure for second level members of the one or more analysis dimensions. At an initial analysis view is generated in response to the execution of the MDX queries. Based on the MDX queries values of the measure are computed for all second level members of each analysis dimension. Values of the measure are displayed and associated with corresponding nodes of the graph in the analysis view. In one embodiment values of the measure may not be computed for root members of the one or more analysis dimensions. At values of the measure for all second level members of each analysis dimension are compared to the value of the measure target. Depending whether the measure value is below or above the measure target a corresponding visual indicator is displayed and associated with a corresponding graph node.

Further measure M1 M2 and M3 may be defined in the multidimensional database Odb . The metric catalog may specify measure M1 as a key metric to be analyzed across dimensions D1 D2 D3 D4 and D5 . Table 2 below illustrates MDX queries that may be generated in accordance with process to generate analysis view .

Based on MDX query 1 value D1m2v of measure M1 is computed for dimension member D1m2 . Value D1m2v of measure M1 is associated with and represented by node . Based on MDX query 4 value D2m2v of measure M1 is computed for dimension member D2m2 of dimension D2 . Value D2m2v of measure M1 is associated with and represented by node . If there are n number of members of dimension D2 at second hierarchical n number of queries such as query 4 would be generated and executed. Based on MDX query 5 value D3m2v of measure M1 is computed for dimension member D3m2 of dimension D3 . Value D3m2v of measure M1 is associated with and represented by node . If there are n number of members of dimension D3 at second hierarchical level number of queries such as query 5 would be generated and executed.

Values of measure M1 for second level members of each analysis dimension D1 D2 and D3 are validated against or compared to a target M1t of measure M1 . Based on the comparison it is determined that value D1m2v is below M1t value D2m2v is greater than M1t and value D3m2v is greater than M1t . Accordingly visual indicator is colored to signal that the target is not reached. Visual indicators and are colored to signal that the target is achieved.

In one embodiment an analyst may further analyze the measure value and drill down on the underperforming dimension member by observing initial analysis view and identifying underperforming dimension members. Initial analysis view is generated before user starts to interact with the analysis view to browse the metric across various dimensions predefined in the metric catalog. Once a user requests to browse a metric on a dimension member metric catalog entities are mapped to elements of MDX queries depending on the browsing request.

At a drill down request on the selected member of the first analysis dimension is received. With reference to the example a user may request to drill down into the children of member D1m2 of dimension D1 in response to the request the value of the measure is to be computed for next level members of the first analysis dimensions. Further the value of the measure is to be recomputed for remaining analysis dimensions members. For example the value of measure M1 is to be computed for third level members D1m5 D1m6 and D1m7 of analysis dimension D1 . Further the value of the measure is to be recomputed for remaining members D2m2 and D3m2 of analysis dimensions D2 and D3 respectively. At a member from members of a second analysis dimension from the one or more analysis dimensions is selected. For example in response to parsing the metric catalog member D2m2 may be selected. The member of the second analysis dimension is selected to compute the measure value associated with it.

At a measure of the metric catalog is mapped to a column axis specification of an MDX query to be generated. For example measure M1 is mapped to the column axis specification. At selected member of the second analysis dimension is mapped to a row axis specification of the MDX query. At selected member of the first analysis dimension is mapped to a slice specification of the MDX query. At one or more fixed dimensions of the metric catalog are mapped to the slice specification of the MDX query. At a data source descriptor is mapped to a cube specification of the MDX query. At the MDX query is generated as determined by the mappings. Based on the generated MDX query at a measure value for the selected member of the second analysis dimension is computed. Similarly values of the measure are to be recomputed for remaining analysis dimensions members in accordance with process .

In response to a drill down request on a dimension member the number of queries executed depends on the number of dimension members in the analysis view. For example N is the number of dimension members in the analysis view. Total number of MDX queries equals N 1 . The dimension member on which it is drilled down becomes constant and a query for that dimension member is not executed. With reference to the above example drilling down on D1m2 creates new dimension constant D1m2 for dimensions D2 and D3. With reference to table 3 illustrates exemplary queries that may be generated and executed in response to a drilling down request on D1m2 

In one embodiment by drilling up on one of members D1m5v D1m6v and D1m7v of dimension D1 analysis view can be reset to analysis view . Values for dimensions D2 and D3 are computed by mapping parent member of members D1m5v D1m6v and D1m7v to slice specification. The parent member of the dimension on which it is drilled up is set to be constant. For example in response to drilling up on one of members D1m5v D1m6v and D1m7v queries illustrates in table 4 are generated 

In response to drill up down through and other such operations dimensions members are set as constants for evaluating the measure value for members of other dimensions.

In one embodiment by drilling down on member USA of dimension Store it may be determined In which stores if any in California USA the unit sales are below target In response to drilling down on member USA of dimension Store analysis view is generated and illustrated in . In response to drilling down on member USA of dimension Store member USA is set as a filter and is mapped to slice specification of MDX queries to determine measure Unit Sales for members Food Non consumable and Drink of dimension Product and for member USA of dimension Customer .

Members Oregon Washington and California of dimension Store are child members of member USA . Measure Unit Sales is above target for third level members Oregon Washington and California of dimension of Store . To determine In which stores if any in California USA the unit sales are below target it may be further drilled down on dimension member California .

In response to drilling down on dimension member California analysis view is generated and illustrated in . In response to drilling down on dimension member California value of measure Unit Sales is determined for members San Francisco Beverly Hills San Diego and Los Angeles of dimension Store . Members San Francisco Beverly Hills San Diego and Los Angeles are child members of dimension member California . As illustrated in analysis view value of measure Unit Sales is below measure target for members San Francisco and Beverly Hills and it equals 51 .

In one embodiment metric catalog consumption involves status and trend analysis of one or more metrics over a set of dimensions for a predefined period of time. Based on a metric catalog a scorecard or a dashboard illustrating status and trend analysis of one or more metrics may be generated automatically. To provide trend analysis a history dimension is specified in the metric catalog. Table 5 illustrates an exemplary history dimension that may be predefined in a metric catalog.

Attribute AnalysisFrequency of the history dimension specifies the frequency of data points for which the metric is to be computed. Attribute DataPoint of the history dimension specifies the starting point of the trend analyses. Attribute No of History data points of the history dimension specifies the number of data points for which the metric is to be computed. Based on the above illustrated exemplary history dimension a metric is analyzed for three months starting from initial data point ninth month of quarter three of year 1997 i.e. September 1997. Since 3 data points are specified to be analyzed the value of the metric is to be determined for September 1997 October 1997 and November 1997.

At the selected data point is mapped to a row axis specification of the MDX query. At one or more fixed dimensions of the metric catalog are mapped to a slice specification of the MDX query. At a data source descriptor is mapped to a cube specification of the MDX query. At the MDX query is generated as determined by the mappings of and . At based on execution of the MDX query a value of the metric is determined for the selected analysis dimension and data point. For example a value of measure Unit Sales may be determined for all products for data point September 1997 . The determined value of the metric for the selected analysis dimension and data point is compared to a value of a metric target. At based on the comparison of the metric value to the metric target status of the metric is determined. For example it is determined if the metric is above or below the target and depending whether it is desirable to be above and below the target the status may be performing or underperforming .

At a check is performed to determine if there are data points of the metric catalog that are not yet selected. If there are data points that are not selected a new data point is selected and the value and status of the metric is determined for the new data point. Thus the value and status of the metric are determined for all data points of the history dimension. For example value of measure Unit Sales for all products may be computed for September 1997 October 1997 and November 1997.

At values of the metric for the data points are compared according to the time order of the data points to determine trend of the metric. For example value of measure Unit Sales for all products for October 1997 is compared to the value of measure Unit Sales for all products for September 1997 to determine whether the value is increasing or decreasing since September 1997. Similarly the value of measure Unit Sales for all products for November 1997 is compared to the value of measure Unit Sales for all products for October 1997 to determine whether the value is increasing or decreasing since October 1997. In one embodiment based on the determined status and trend of the metric a metric dashboard and a metric trend graph are generated.

Value of Customer attrition equals 200 and is above target value of Customer attrition that equals 180 . Hence status of metric Customer attrition is underperforming since it is desirable that value of metric Customer attrition is below target value . Value of metric Customer attrition is also determined for data point Q4 . As illustrated by metric trend graph value of metric Customer attrition for data point Q4 is below value of metric Customer attrition for data point Q3 . Hence trend is decreasing.

Some embodiments may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components maybe implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. A computer readable storage medium may be a non transitory computer readable storage medium. Examples of a non transitory computer readable storage media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment may be implemented using Java C or other object oriented programming language and development tools. Another embodiment may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open DataBase Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in details.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments including what is described in the Abstract is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments and examples are described herein for illustrative purposes various equivalent modifications are possible as those skilled in the relevant an will recognize. These modifications can be made in light of the above detailed description. Rather the scope is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

