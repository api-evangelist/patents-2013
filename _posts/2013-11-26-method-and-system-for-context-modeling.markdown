---

title: Method and system for context modeling
abstract: A context modeler comprising a computer software graphical subsystem and a solution packaging service. The computer software graphical subsystem renders a graphical user interface, which is used to map different objects from the web application platform and set their properties, thereby creating a mapping file for use by the packaging service. The packaging service is used to automatically create a solution package file for deployment within the web application platform. The solution package file is created when the packaging service uses one or more methods to generate a set of instructions for implementing computer processor or server action, and this set of instructions is wrapped inside a solution package file recognized by the web application platform.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08924948&OS=08924948&RS=08924948
owner: 
number: 08924948
owner_city: 
owner_country: 
publication_date: 20131126
---
This application makes reference to claims priority to and claims the benefit of U.S. provisional patent application Ser. No. 61 730 105 filed on Nov. 27 2012 the entire contents of which are incorporated herein by this reference.

The present invention relates generally to the field of automatically creating and implementing solutions for enterprise management systems platforms and packages EMS . Microsoft SharePoint is one of the most common EMS platforms although there are many others. EMS platforms generate solutions for implementation in the enterprise s processes or business. Many of these EMS platforms are implemented through cloud computing and they have returned a great benefit to the enterprises using them. However current solution techniques require installation of certain modules to create and implement the application solution. Examples of such modules include SharePoint Designer and SharePoint environment. In many cases this process requires significant configuration effort and implementation of these solutions also requires the user to navigate into the SharePoint environment to see the application hierarchy the relationships and right management. This manual process requires significant time an effort.

The present invention seeks to overcome these problems by providing a context modeler that creates an EMS solution application that allows the user to create and update EMS application deployable solutions for manual or automatic deployment in the EMS. The user can design a hierarchy of objects on a virtual canvas to generate the documentation and solution files for deployable solutions deployed either globally or in an isolated manner.

The context modeler generally comprises a computer software graphical subsystem CSGS and a solution packaging service. The CSGS is capable of rendering graphical user interfaces in a variety of applications and it is used to map different objects from the web application platform and set their properties thereby creating a mapping file for use by the packaging service. The CSGS incorporates certain functionality such generating a canvas drawing on a canvas element setting properties of each object mapped adding security groups and adding metadata and columns.

The packaging service is used to automatically create a solution package file for the web application platform. Generally the solution package file is created when the packaging service uses one or more methods to generate a set of instructions for implementing the server action and this set of instructions is wrapped inside a solution package file recognized by the web application platform. This is discussed in more detail below.

The CSGS is used for rendering user interfaces by mapping different objects from user interface controls to the user interface. The CSGS is also used to set the properties of the objects being mapped. The CSGS uses the platform s canvas as a drag and drop destination for certain properties of the object. The resulting mapping file comprises object data which is typically in markup language format. The mapping file is then sent to the solution packaging service for creation of the web application platform solution package.

The packaging service receives the mapping file from the CSGS and packages the markup language information into a packaged solution file that can contain distributed or constrained solutions such as global solutions or isolated solutions e.g. farm solutions or sandboxed solutions in Microsoft SharePoint . The packaging service also uses the mapping file to create word processing documentation such as a Microsoft Word document or the like. The word processing documentation is used by the enterprise as a solution statement such as a work order contract project proposal or the like.

With reference to the drawings the invention will now be described with regard for the best mode and the preferred embodiment. In general the system is a context modeler for real time creation and revision of web application solutions in a web application platform. The embodiments disclosed herein are meant for illustration and not limitation of the invention. An ordinary practitioner will understand that it is possible to create many variations of the following embodiments without undue experimentation.

The purpose of the context modeler taught herein is to automatically create a deployable solution for either manual or automatic deployment inside a web application platform. The context modeler taught herein also referred to as the context modeling system interfaces with the web application platform . The platform comprises one or more of a variety of features such as capabilities to support multiple web technologies cloud computing capabilities intranet portals document and file management capabilities collaboration among users and objects support of extranets websites social networks EMS application software and many other features known to an ordinary practitioner. The web application platform is supported by a data processor either on premises or in a cloud computing context.

One embodiment of the context modeling system comprises at least one processor in communication with at least one memory device . The processor comprises one or more of a number of suitable computer processors capable of managing processing analyzing storing and retrieving the data within the context modeling system . One embodiment of the processor is hardwired dedicated circuitry for performing the system context modeling system functionality described herein such as circuitry within a microprocessor coprocessor a controller or various other hardwired circuitry. Alternately the processor is configured to execute computer readable code stored on the memory device where the computer readable code contains instruction for executing the context modeling system functionality described below. The processor could be a combination of hardwired dedicated circuitry and executable instructions. The processor could be embodied within a controller embodied within a server or embodied separately. The memory device is operable to store computer readable program instructions designated for execution by the at least one processor . An example of the computer readable program instructions are the steps and functionality performed by the context modeling system discussed below. The memory device includes one or more of volatile or nonvolatile memory components several of which are known in the art. The memory device is configured to store data applications modules instructions or the like for enabling the context modeling system to execute the functionality described below in the various embodiments. The processor and the memory device are configured to interface with the peripheral components of the system described below. For example the computer software graphical subsystem CSGS the solution packaging service and the other system components discussed below are configured for execution by the at least one processor in communication with the at least one memory device .

The web application platform is deployed in a software environment such as a Common Language Runtime of the .NET framework or similar or equivalent environment. The Common Language Runtime of the .NET framework is a virtual machine that manages the execution of programs and provides a variety of services such as security and management services. In most embodiments the web application platform will be an EMS package several of such which are commercially available. Some of the more common of such platforms include without limitation Microsoft SharePoint a variety of SalesForce packages SAP Strategic Enterprise Management and many others. Several examples in the following discussion are made in the context of Microsoft SharePoint but the invention is not limited to this platform. Rather SharePoint is a common web application platform and serves to illustrate the novel features of the invention disclosed herein. An ordinary practitioner will appreciate that the novelty and features of the present context modeler will apply equally to web application platforms other than SharePoint and in environments and operating systems other than Microsoft Windows.

In typical embodiments the web application platform has a data assembly tool for assembling user input data or objects in the web application platform . For example in many embodiments the web application platform either has a canvas element or is capable of interfacing with one. The CSGS does not use the web application platform for its operations. Instead the CSGS only uses the platform s canvas as an assembly tool such as the drag and drop destination for certain properties of the object such as Websites List Libraries and Content Types of the object See . The resulting mapping file comprises object data which is typically in markup language format. The mapping file is then sent to the solution packaging service for creation of the web application platform solution package . As one non limiting example the CSGS could be a windows presentation foundation WPF mapping application. In this embodiment and by way of example and not limitation the mapping application CSGS is developed using a WPF programming model .NET 3.5 and Microsoft Developer Express as an ordinary practitioner will understand.

The packaging service is used to automatically create a deployable solution package comprising either a solution package file or documentation . Generally the solution package file contains a set of instructions executable by the at least one processor in communication with the at least one memory device . The solution package file is created when the packaging service uses one or more methods to generate the set of instructions for implementing the data processor action and this set of instructions is wrapped inside a solution package file recognized by the web application platform . The packaging service receives the mapping file from the CSGS and packages the markup language information into a solution package file as described in more detail below. The packaging service also uses the mapping file to create documentation such as a Microsoft Word document Microsoft Excel document a PDF document or the like. The documentation is used by the enterprise as a solution statement such as a work order contract project proposal or the like.

The context modeler follows service oriented architecture. In one embodiment the CSGS and the packaging service are completely separate tools. In another embodiment these two tools are loosely coupled with each other. When these two tools are uncoupled the CSGS passes the markup language data to the packaging service using any suitable communication application. As one non limiting example this application could be a Silverlight application or any other application that sends the same markup language data from the CSGS to the packaging service . As another example the packaging service is hosted on the cloud computing platform in a manner in which it is capable of being hosted in any cloud or local environment. The relationship between these tools is the markup language request for either solution or documentation generation and the response in the form of either the solution package file or the markup language documentation file .

The communication between the CSGS and the packaging services is any suitable medium of communication in this computing environment. In most embodiments the communication medium should be able to implement a service oriented architecture such as by loosely coupled services. For example the communication medium could be a set of APIs typically used for building connected service oriented applications. Depending on the design of the system web services could be used to deploy the applications. As another common example Windows Communication Foundation could be used for building and implementing the connected service oriented architecture.

To create a mapping file the user must capture objects to assemble and deliver them to assembly area. This capture and delivery process can be implemented in several known manners such as by diagramming drag and drop functions leap motion and other motion sensing technology and a variety of other means. For example the user can drag and drop objects from a pre populated library to the canvas element and can add objects through a menu list context menu or the like. Every object placed or drawn on the canvas has multiple types of setting such as add objects general properties and object settings. In this example the add objects setting can be allowed to add allowed nested objects to the canvas through a context menu . The general properties setting is used to establish properties of the object such as the name description notes and other types of properties as may be appropriate for different types of objects. The object settings are used to establish object parameters such as routing rules for the site and for the CSGS columns or other indicia of organization or retention policies or other types of parameters. These types of parameters are used for cataloguing the object in a document library list or other location.

By way of example and not limitation in SharePoint the canvas element also offers some operations through a context menu some examples of such operations are 

The context modeler becomes activated inside the web application platform so that the context modeler deploys using a runtime file such as a runtime .dll the operations of which give instructions that the web application platform activates and carries out within the runtime of the web application platform . This activation enables deployment of different configurations and operations that can be then provisioned or activated and used once the a certain feature has been activated. The steps are the following i deploy the solution package ii install the solution package to the web application platform and iii activate the solution for deployment within the web application platform .

Generally the solution package is a file an object a set of objects or the like. The properties for the software application solution created by the context modeler contain general properties and settings. Non limiting examples of the general properties in a typical web application platform include logo title author publisher description notes and other such properties. The settings are present for example in a Site Settings menu of the web application platform under the a subheading Site Action or some similar subheading depending on the specific features of the web application platform . More generally these settings should include security elements routing rules site theme and managed metadata .

In reference to the security groups setting allows the user to define as many user groups as desired. Using the security elements setting users are assigned into groups each group having predetermined properties or parameters such as level of access to the site as an example. The access level contains predefined settings for different types of users such as contributors visitors administrators and other types of users. The access level settings defining concrete levels of access to the site for the users associated with the group. Alternately a permissions setting can be added and used for authorization and authentication of users entities or clients. These settings are used to establish permission and roles of users and the like. Several methods of authentication and authorization are known in the art and can be deployed in a satisfactory manner in this context.

The routing rules setting also matches with an actual web application platform setting. Adding a new routing rule requires the name of the rule its priority if two or more rules are satisfying the criteria the priority value will define which routing rule should run a status of enabled a designation of content type and a designation of the target library to which documents will be routed. The site theme setting allows the user to choose from already defined themes. This setting can also add custom CSS or JavaScript for formatting custom features of the site. The managed metadata setting allows the user to add terms and term set groups that will be used in content type or list columns in the context modeler .

Referring to the document list and libraries properties contain general properties and settings. The general properties include basic properties such as title options document template description and notes. These settings are present in a List Settings menu of the web application platform or some similar menu. The other settings are columns and retention . A column is a description or representation of an attribute such as a piece of metadata that a user seeks to manage for any items in the list or content type to which the column is added. Retention is a preset time period for content to be held in the web application platform until a trigger requests that action be taken. These settings can be configured in the settings menu of the web application platform .

The optional columns setting allows the user to add columns for the selected list or library. Adding a new column requires column name and data type for the particular column. For example the column names could be text date time multiple choice or the like. The retention setting allows the user to add a new retention policy by adding new rules. These rules are separated into record and non record elements. Records elements are content e.g. static documents that has been declared a record. Records are content that is no longer active will not be changed and can be held for reference and retrieval. Records can be declared after which these declared records are routed to the record center. The record center is typically a collection site in the web application platform that is strictly utilized for records management. Once in records management various rules and policies allow the records to be retained for a certain amount of years for use in other purposes. Non Records are any content that is not a record. To customize the solution the user can add specific rules by adding triggers criteria duration of retention and action.

Referring to content type properties contain basic properties and settings. Non limiting examples of the basic properties include title base type group document template description and notes. The settings which include columns and retention settings are present in a menu of the web application platform . As a non limiting example these settings could be under the List Settings menu of SharePoint. The optional columns setting allows the user to add columns for the selected content type. For each column adding a new column requires designating the column name and data type such as text date time multiple choice or the like. Under the retention setting the user can add a new retention policy by adding new rules. These rules are separated in to record and non record elements. The user can add rules by adding triggers criteria duration of retention and action.

Referring to the website properties contain general properties and settings which are present under a subheading of the web application platform . For example these properties may be found under the Site Action subheading of the SharePoint Site Settings menu. Non limiting examples of the general properties include basic properties such as logo title author publisher description notes and the like. The settings include site themes and routing rules . In most embodiments the routing rules setting matches with an actual setting in the web application platform . Adding a new routing rule requires designating a name for the new rule designating its priority if two or more rules are satisfying the criteria the priority value will define which routing rule should run designating the rule as enabled designating its content type included in criteria and designating a target library to which the documents will be routed. The site theme setting allows the user to choose from already defined themes or the user can add custom themes by using CSS or JavaScript files.

Generally the solution packaging service is a set of functions for interfacing with a software architecture for distributed systems such as the world wide web for example the REST API interface a client side application for accessing a foundation server object model for example the SharePoint CSOM APIs and other object models to assist in generating a resource data file such as a runtime dynamic link library .dll file. The solution packaging service uses these functions to create the solution package to be deployed by the web application platform and the solution package comprises a solution package file wrapped around the resource data files . The solution package file is a .wsp file an .opc file using Open Packaging Conventions or an equivalent file that is recognized by the web application platform as a solution package file . The resource data files could be out of process or in process binary files such as .dll .exe .dmg or the like. The resource data files contain instructions in a markup language such as declarative XML or other equivalent to instruct the web application platform what to do to set structure configure properties make relationship between objects dictate or break inheritance and other similar functions. To create the solution package the packaging service inserts the resource data files into the solution package file .

The solution packaging service is a cloud based service. In one embodiment the solution packaging service is based on a computing platform or framework such as Windows Communication Framework SharePoint Object Model REST API and other methods that allow for a runtime assembly to be built and inserted into a solution package file such as a .wsp or .opc file. As one example in the context of SharePoint the solution package file is a .wsp solution package file which is generated by the packaging service during SharePoint sessions of the context modeler .

As another example of the solution packaging service the computing platform could be a cloud computing platform which promotes the development and use of many different tools languages frameworks and other features. One such cloud computing framework is Windows Azure which is Microsoft s public cloud platform and frequently used to build multiple web applications that run and store information in designated Microsoft datacenters. In this particular example which is not meant for limitation of the invention the packaging service is developed using the .NET framework and Microsoft SharePoint.

The packaging service processes the markup language request and performs two main functions solution file generation and documentation generation. During the function of solution file generation the packaging service parses the markup language file and uses the context modeler packaging service tools to create the solution and package it in the format of the solution package file corresponding to the web application platform . Referring to these solution package files are deployable reusable packages that contain functionality such as features site definitions and other functions. These solutions files can be a global based solution or an isolated solution . A global based solution is a solution that is deployed in a global manner throughout an entire system such as throughout a variety of servers in a farm or cluster. By contrast an isolated solution is deployed in an isolated area within a system such as across a portion of a server or across a limited number of servers within a system. Either of these solutions can be deployed in a centralized or distributed manner. As an example that an ordinary practitioner will understand the global based solution in SharePoint is a farm solution and the corresponding isolated solution is a sandboxed solution. 

The packaging service can leverage several methods to assist in interpreting the core programming languages and architectures needed to create the resource data files. For example the packaging service can use CAML.net REST API SharePoint CSOM and other object models to assist in generating a runtime .dll file and the solution package to be deployed by the web application platform .

Generally global based solutions created by the packaging service are hosted in a web application process such as Internet Information Services IIS worker process for example. This web application process executes code that can affect the whole server cluster in a distributed solution. In most instances this EMS solution utilizes the full capabilities of the web application platform during the customization process. By contrast isolated solutions or sandboxed solutions do not run in the IIS worker process. Instead isolated solutions are hosted in the web application platform user code solution worker process such as a SPUCWorkerProcess.exe file and these solutions run code that can only affect the site collection of the solution. Sandbox customizations have some restriction in using the capabilities of the web application platform .

The documentation generation function of the context modeler is also driven by the markup language request to the packaging service . The same markup language file sent for the solution file generation is used for the documentation generation function. The difference between the two functions is that for the solution file generation the whole application markup language is sent to the packaging service for conversion. By contrast during documentation generation the CSGS can send to the packaging service the markup language of any object in the hierarchy for example site document library and content type or the like. For creating a document the packaging service requires the markup language file for the particular object application site document library or content type and a word processing template. This template has a rich content area that is replaced by the data in markup language file for a particular object. The user can demand documentation of any object. The documentation generated will contain the documentation of all the objects in the child hierarchy.

The solution package can be deployed either manually or automatically. Once the packaging service receives the mapping file from the CSGS and creates the solution package file as described above the packaging service must deliver the solution to the web application platform . This delivery can occur with or without further action or involvement by the context modeler . Regardless of whether the context modeler is employed in solution delivery the deployment of the solution in the web application platform can occur manually or automatically.

For example in one embodiment shown in the packaging service returns the solution package file to the CSGS . From there the CSGS can deploy the solution in the web application platform manually or automatically. For manual deployment the user determines the time and manner in which the solution package is deployed in the web application platform . Alternately the CSGS can be programmed to automatically deliver the solution to the web application platform for immediate deployment upon the CSGS s receipt of the solution package file from the packaging service .

In another embodiment the context modeler bypasses the CSGS during delivery of the packaged solution to the web application platform . This embodiment uses an unpackaging service to assist in solution deployment. The unpackaging service can be either a cloud based on on premises service. For example in one embodiment shown in the packaging service delivers the solution package and therefore the solution package file directly to a cloud based unpackaging service rather than to the CSGS . The packaging service then communicates with the web application platform via its data processor or server or by some other means to notify the web application platform that the solution package file is ready for retrieval from the cloud based unpackaging service . The web application platform then automatically pulls the solution package file from the unpackaging service for automatic deployment in the web application platform with no further involvement by the context modeler . Alternately the web application platform could retrieve the solution from the unpackaging service for manual deployment in the web application platform .

Finally in another embodiment the unpackaging service can be located inside the web application platform such that the packaging service delivers the solution package file to the web application platform where the built in unpackaging service is used to deploy the solution manually or automatically. This process by passes the CSGS and provides a direct deployment path for the packaged solution .

In addition to the loosely coupled structure the context modeler supports future enhancements. Due to the service oriented structure of the context modeler the current tool sends markup language files to the services to perform certain actions. This application supports both feature enhancements and application enhancements. In the feature enhancements the increasing addition of features only requires adding more nodes in the markup language files sent by the context modeler application and parsing at the service end. Due to the markup language data structure sent to the service application the feature enhancement is easily facilitated in this application.

In one embodiment of the context modeler the CSGS is a Windows Presentation Foundation based solution. This can be any model including Silverlight or Flash that can send the same markup language file usually an XML file that the current application is sending to the service application.

The foregoing embodiments are merely representative of the context modeler and not meant for limitation of the invention. For example one having ordinary skill in the art would understand that there are several embodiments and configurations of the context modeler that may need adjustment depending on the web application platform in which the modeler is deployed. Consequently it is understood that equivalents and substitutions for certain elements and components set forth above are part of the invention described herein and the true scope of the invention is set forth in the claims below.

