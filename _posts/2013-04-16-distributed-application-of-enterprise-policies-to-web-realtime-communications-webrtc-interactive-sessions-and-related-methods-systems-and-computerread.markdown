---

title: Distributed application of enterprise policies to Web Real-Time Communications (WebRTC) interactive sessions, and related methods, systems, and computer-readable media
abstract: Distributed application of enterprise policies to WebRTC interactive sessions, and related methods, systems, and computer-readable media are disclosed. In this regard, in one embodiment, a method for applying an enterprise policy to a WebRTC interactive session comprises receiving, by a distributed policy enforcement agent of a recipient device, a WebRTC session description object directed to the recipient device originating from a sender device via a secure network connection. The method further comprises determining, by the distributed policy enforcement agent, one or more enterprise policies based on the WebRTC session description object. The method additionally comprises applying the one or more enterprise policies to the WebRTC session description object. In this manner, an enterprise may permit establishment of a WebRTC interactive session that crosses an enterprise network boundary, while at the same time ensuring that the WebRTC interactive session complies with the one or more enterprise policies.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09363133&OS=09363133&RS=09363133
owner: Avaya Inc.
number: 09363133
owner_city: Basking Ridge
owner_country: US
publication_date: 20130416
---
The present application claims priority to U.S. Provisional Patent Application Ser. No. 61 706 951 filed Sep. 28 2012 and entitled ENTERPRISE COMMUNICATIONS AND COLLABORATION SYSTEMS BASED ON REAL TIME COMMUNICATIONS AND OR MARKUP PROTOCOLS AND RELATED METHODS APPARATUSES AND COMPUTER READABLE MEDIA and to U.S. Provisional Patent Application Ser. No. 61 781 122 filed on Mar. 14 2013 and entitled DISTRIBUTED APPLICATION OF ENTERPRISE POLICIES TO WEB REAL TIME COMMUNICATIONS WEBRTC INTERACTIVE SESSIONS AND RELATED METHODS SYSTEMS AND COMPUTER READABLE MEDIA which are hereby incorporated herein by reference in their entireties.

The technology of the disclosure relates generally to Web Real Time Communications WebRTC interactive sessions.

Web Real Time Communications WebRTC is an ongoing effort to develop industry standards for integrating real time communications functionality into web clients such as web browsers to enable direct interaction with other web clients. This real time communications functionality is accessible by web developers via standard markup tags such as those provided by version 5 of the Hypertext Markup Language HTML5 and client side scripting Application Programming Interfaces APIs such as JavaScript APIs. More information regarding WebRTC may be found in WebRTC APIs and RTCWEB Protocols of the HTML5 Real Time Web by Alan B. Johnston and Daniel C. Burnett 2012 Digital Codex LLC which is incorporated in its entirety herein by reference.

WebRTC provides built in capabilities for establishing real time video audio and or data streams in both point to point interactive sessions as well as multi party interactive sessions. The WebRTC standards are currently under joint development by the World Wide Web Consortium W3C and the Internet Engineering Task Force IETF . Information on the current state of WebRTC standards can be found at e.g. http www.w3c.org and http www ietf.org.

To establish a WebRTC interactive session e.g. a real time video audio and or data exchange two web clients may retrieve WebRTC enabled web applications such as HTML5 JavaScript web applications from a web application server. Through the web applications the two web clients then engage in a media negotiation to communicate and reach an agreement on parameters that define characteristics of the interactive session. This media negotiation is known as a WebRTC offer answer exchange. A WebRTC offer answer exchange typically occurs via a secure network connection such as a Hypertext Transfer Protocol Secure HTTPS connection or a Secure WebSockets connection. In an offer answer exchange a first web client on a sender device sends an offer to a second web client on a recipient device. The offer includes a WebRTC session description object that specifies media types and capabilities that the first web client supports and prefers for use in the WebRTC interactive session. The second web client then responds with a WebRTC session description object answer that indicates which of the offered media types and capabilities are supported and acceptable for the WebRTC interactive session. Once the WebRTC offer answer exchange is complete the web clients may then establish a direct peer connection with one another and may begin an exchange of media or data packets transporting the real time communications. The peer connection between the web clients typically employs the Secure Real time Transport Protocol SRTP to transport real time media flows and may utilize various other protocols for real time data interchange.

The secure nature of a WebRTC offer answer exchange and peer connection poses challenges for real time communications across enterprise network boundaries. To determine whether to allow traffic to cross network edges enterprises often rely on network security elements e.g. firewalls and session border controllers SBCs . These network security elements may examine protocols at various levels in a network stack including the actual content of the network traffic. Such in depth analysis of network traffic may enable an enterprise to apply enterprise policies to achieve fine grained control over the network traffic. However because the WebRTC offer answer exchange and peer connection may take place over secure network connections or otherwise be encrypted the WebRTC session description objects and the WebRTC interactive flow exchanged between the web clients may be opaque to the enterprise. Thus the enterprise may lack the ability to apply enterprise policies to a WebRTC interactive session using conventional network security elements. The secure nature of WebRTC may also present risks to the enterprise in the form of a new path for attack by virus vectors and or malware.

Embodiments disclosed in the detailed description provide distributed application of enterprise policies to Web Real Time Communications WebRTC interactive sessions. Related methods systems and computer readable media are also disclosed. In this regard in one embodiment a method for applying an enterprise policy to a WebRTC interactive session is provided. The method comprises receiving by a distributed policy enforcement agent of a recipient device a WebRTC session description object directed to the recipient device originating from a sender device. The method further comprises determining by the distributed policy enforcement agent one or more enterprise policies based on the WebRTC session description object. The method also comprises applying the one or more enterprise policies to the WebRTC session description object. Use of the distributed policy enforcement agent of the recipient device allows in depth analysis of the contents of the WebRTC session description object including the packets transporting the WebRTC session description object after it is received at the recipient device and before a WebRTC interactive session is established. In this manner an enterprise may permit establishment of a WebRTC interactive session that crosses an enterprise network boundary while at the same time ensuring that the WebRTC interactive session complies with the one or more enterprise policies.

In another embodiment a system for applying an enterprise policy to a WebRTC interactive session is provided. The system comprises at least one communications interface and a recipient device associated with the at least one communications interface and comprising a distributed policy enforcement agent. The distributed policy enforcement agent is configured to receive a WebRTC session description object directed to the recipient device originating from a sender device via a secure network connection. The distributed policy enforcement agent is further configured to determine one or more enterprise policies based on the WebRTC session description object. The distributed policy enforcement agent is also configured to apply the one or more enterprise policies to the WebRTC session description object.

In another embodiment a non transitory computer readable medium is provided. The non transitory computer readable medium has stored thereon computer executable instructions to cause a processor to implement a method comprising receiving by a distributed policy enforcement agent of a recipient device a WebRTC session description object directed to the recipient device originating from a sender device. The method implemented by the computer executable instructions further comprises determining by the distributed policy enforcement agent one or more enterprise policies based on the WebRTC session description object. The method implemented by the computer executable instructions also comprises applying the one or more enterprise policies to the WebRTC session description object.

With reference now to the drawing figures several exemplary embodiments of the present disclosure are described. The word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments.

Embodiments disclosed in the detailed description provide distributed application of enterprise policies to Web Real Time Communications WebRTC interactive sessions. Related methods systems and computer readable media are also disclosed. In this regard in one embodiment a method for applying an enterprise policy to a WebRTC interactive session is provided. The method comprises receiving by a distributed policy enforcement agent of a recipient device a WebRTC session description object directed to the recipient device originating from a sender device. The method further comprises determining by the distributed policy enforcement agent one or more enterprise policies based on the WebRTC session description object. The method also comprises applying the one or more enterprise policies to the WebRTC session description object. Use of the distributed policy enforcement agent of the recipient device allows in depth analysis of the contents of the WebRTC session description object including the packets transporting the WebRTC session description object after it is received at the recipient device and before a WebRTC interactive session is established. In this manner an enterprise may permit establishment of a WebRTC interactive session that crosses an enterprise network boundary while at the same time ensuring that the WebRTC interactive session complies with the one or more enterprise policies.

In this regard shows an exemplary interactive communications system providing distributed application of enterprise policies as disclosed herein. In particular the exemplary system includes a distributed policy enforcement agent that provides a point at which enterprise policies may be applied to WebRTC interactive sessions which otherwise may be inaccessible to enterprise network security elements. As used herein the term distributed in the context of the distributed policy enforcement agent refers to the application of enterprise policies taking place at one or more WebRTC interactive session endpoints rather than at a centralized network security element.

As seen in the exemplary system includes an enterprise network providing networked computing and communications resources to users within an enterprise. As used herein an enterprise refers to any organization for the purpose of a business venture or other organized activity private or public. The enterprise network includes an enterprise demilitarized zone DMZ to secure the enterprise network while permitting both enterprise users and external users access to enterprise resources not shown within the enterprise DMZ . The enterprise DMZ may provide an outer firewall that prevents unauthorized access to the enterprise network by users outside the enterprise network . The enterprise DMZ may also provide an inner firewall that permits only external traffic passing through the enterprise DMZ to reach users within the enterprise network .

The enterprise DMZ of may further include a DMZ policy enforcement point . The DMZ policy enforcement point filters or alters network traffic passing through the enterprise DMZ in accordance with enterprise policies. As indicated by bidirectional arrow the DMZ policy enforcement point may be communicatively coupled to an enterprise policy data store that provides a central point for storage maintenance and dissemination of enterprise policies. As is commonly understood an enterprise policy is a formulation of rules that defines levels of permission and access rights in order to secure data control user access and regulate traffic within the enterprise network . Virtually all aspects of activity within the enterprise network may be subject to enterprise policies. As non limiting examples enterprise policies may specify users that have been granted access to the enterprise network external websites that enterprise users may or may not access or types of allowed or disallowed network traffic. It is to be understood that the enterprise DMZ may include additional elements not illustrated in or may integrate multiple elements illustrated in into a single element.

The ability of the DMZ policy enforcement point to apply enterprise policies to network traffic passing through the enterprise DMZ may depend on whether the network traffic is unencrypted or is transported in an encrypted format. In the former scenario the DMZ policy enforcement point may analyze various protocols within the network stack and or the actual content of the network traffic and apply enterprise policies to the network traffic based on its analysis. However in the latter scenario the DMZ policy enforcement point may have access only to limited information about the network traffic such as a source Internet Protocol IP address a destination IP address a source port number a destination port number and or a network protocol in use. In such case the DMZ policy enforcement point may be forced to apply enterprise policies based only on this limited information. Moreover even where the network traffic is unencrypted the DMZ policy enforcement point may not be capable of applying enterprise policies at an endpoint within the enterprise network based on data received at the endpoint. Accordingly as discussed in greater detail below the distributed policy enforcement agent is provided to enable the enterprise to enforce enterprise policies at an endpoint within the enterprise network based on an in depth analysis of packets and their contents received at the endpoint.

Before discussing details of the distributed policy enforcement agent the establishment of a WebRTC interactive session in the system of is first described. As used herein a WebRTC interactive session refers to operations for carrying out a WebRTC offer answer exchange establishing a peer connection and commencing a WebRTC interactive flow between two or more endpoints. A WebRTC interactive flow may comprise an interactive media flow and or an interactive data flow between the two or more endpoints. Within the enterprise network of is an enterprise user device executing an enterprise web client . In some embodiments the enterprise user device may be any computing or communications device having network communications capabilities such as a smartphone a tablet computer a dedicated web appliance or a desktop computer as non limiting examples. The enterprise web client in this example may be a web browser application a dedicated communications application or an interface less application such as a daemon or service application as non limiting examples.

In this embodiment the enterprise web client comprises a scripting engine and a WebRTC functionality provider . The scripting engine enables client side applications written in a scripting language such as JavaScript to be executed within the enterprise web client . The scripting engine also provides an application programming interface API to facilitate communications with other functionality providers within the enterprise web client and or the enterprise user device and or with other web clients user devices or web servers. The WebRTC functionality provider implements the protocols codecs and APIs necessary to enable real time interactive sessions via WebRTC. The scripting engine and the WebRTC functionality provider are communicatively coupled via a set of defined APIs as indicated by bidirectional arrow .

The enterprise network may also include an enterprise device which is communicatively coupled to the WebRTC functionality provider as indicated by bidirectional arrow . As discussed in greater detail below the enterprise device may be operative to record log or redirect a WebRTC interactive flow received from the WebRTC functionality provider according to enterprise policies.

External to the enterprise network is a web application server which serves a WebRTC enabled web application not shown to requesting web clients. In some embodiments the web application server may be a single server while in some applications the web application server may comprise multiple servers that are communicatively coupled to each other. It is to be understood that the web application server may reside in the enterprise DMZ of the enterprise network or may reside within an enterprise DMZ of an enterprise network external to the enterprise network .

Also external to the enterprise network is an external user device executing an external web client . The external user device may be any computing or communications device having network communications capabilities such as a smartphone a tablet computer a dedicated web appliance or a desktop computer as non limiting examples. The external web client may be a web browser application a dedicated communications application or an interface less application such as a daemon or service application as non limiting examples. In this embodiment the external web client comprises a scripting engine and a WebRTC functionality provider the functionality of which corresponds to the functionality of the scripting engine and the WebRTC functionality provider of the enterprise web client respectively. The scripting engine and the WebRTC functionality provider are communicatively coupled via a set of defined APIs as indicated by bidirectional arrow . It is to be further understood that the external web client may reside within an enterprise network external to the enterprise network .

The enterprise web client and the external web client then establish secure web connections and respectively with the web application server and engage in a WebRTC offer answer exchange. This is accomplished through an exchange of WebRTC session description objects indicated by arrows and . The exchanged WebRTC session description objects and are used to determine the media types and capabilities for the desired WebRTC interactive session. Once the WebRTC offer answer exchange is complete a WebRTC interactive flow may be established via a secure peer connection between the enterprise web client and the external web client . Accordingly in the vertices of the WebRTC triangle are the web application server the outer firewall which serves as the outer edge of the enterprise network through which the enterprise web client communicates and the external web client . The edges of the triangle are represented by the secure web connections and and the secure peer connection .

It is to be understood that some embodiments may utilize topographies other than the WebRTC triangle topography illustrated in . For example some embodiments may employ a trapezoid topography in which two web servers communicate directly with each other via protocols such as Session Initiation Protocol SIP or Jingle as non limiting examples. It is to be further understood that instead of the enterprise web client and or the external web client the enterprise user device and or the external user device respectively may comprise a SIP client device a Jingle client device or a Public Switched Telephone Network PTSN gateway device that is communicatively coupled to a telephone.

As seen in the WebRTC session description object received by the enterprise web client from the external web client during the WebRTC offer answer exchange as well as the resulting WebRTC interactive flow must pass through the enterprise DMZ via the secure web connection and the secure peer connection respectively. Consequently the DMZ policy enforcement point is not aware of the actual contents of the WebRTC session description object or the WebRTC interactive flow received by the enterprise web client . Thus the DMZ policy enforcement point cannot apply enterprise policies to the WebRTC interactive session based on the content of the WebRTC session description object or the WebRTC interactive flow .

In this regard the distributed policy enforcement agent of is provided. In some embodiments the distributed policy enforcement agent is implemented as an extension or plug in for the enterprise web client for receiving and processing packets received by the enterprise web client . In the case of encrypted network traffic the distributed policy enforcement agent is able to access the content of the encrypted network traffic after it is decrypted within the enterprise web client . The distributed policy enforcement agent may also access data provided by the packets transporting the network traffic such as a source Internet Protocol IP address a destination IP address a source port number a destination port number and or a network protocol in use as non limiting examples. Accordingly during establishment of a WebRTC interactive session the distributed policy enforcement agent receives a WebRTC session description object transported over the secure web connection . The distributed policy enforcement agent then determines and applies enterprise policies based on the WebRTC session description object including the content of the WebRTC session description object and or data provided by the packets transporting the WebRTC session description object . In the case of unsecured network traffic the distributed policy enforcement agent may similarly analyze the WebRTC session description object for the purpose of applying enterprise policies at the enterprise web client . As non limiting examples the distributed policy enforcement agent may apply enterprise policies via one or more of the following methods validating the WebRTC session description object format establishing or declining a WebRTC interactive session providing options for an alternative WebRTC interactive session to the external user device modifying the contents of a WebRTC session description object and or causing a WebRTC interactive flow to be redirected cloned logged or recorded.

In some embodiments the distributed policy enforcement agent is communicatively coupled to the scripting engine as indicated by bidirectional arrow in . Some embodiments may provide that the distributed policy enforcement agent is further communicatively coupled to the enterprise policy data store via a communications link . In this manner the distributed policy enforcement agent may query the enterprise policy data store for enterprise policies to apply to the secure web connection . Some embodiments may provide that data exchanged between the external user device and the enterprise user device as part of establishing the secure peer connection or as part of the WebRTC interactive flow is received and analyzed by the distributed policy enforcement agent before being passed to the WebRTC functionality provider . As discussed below this may permit the distributed policy enforcement agent to apply enterprise policies during the establishment of the secure peer connection and or during the exchange of the WebRTC interactive flow . In embodiments where the WebRTC interactive flow comprises an interactive data interchange the distributed policy enforcement agent may examine the contents of the WebRTC interactive flow to detect malware viruses or unauthorized enterprise intellectual property as non limiting examples.

To illustrate exemplary communications flows during the establishment of a WebRTC interactive session including the distributed policy enforcement agent of is provided. In the enterprise policy data store the enterprise web client on the enterprise user device the web application server and the external web client on the external user device of are each represented by vertical dotted lines. The WebRTC functionality provider the scripting engine and the distributed policy enforcement agent of the enterprise web client are shown as separate elements to better illustrate communications flows therebetween. It is to be understood that the external web client may comprise a scripting engine and a WebRTC functionality provider which for the sake of clarity are omitted from this example. It is to be further understood that in this example the distributed policy enforcement agent on the enterprise user device examines the WebRTC session description object received from the external user device . Accordingly the enterprise user device is considered the recipient device while the external user device is considered the sender device. Finally it is assumed for this example that the enterprise web client and the external web client have each downloaded a WebRTC enabled web application such as an HTML5 JavaScript WebRTC application from the web application server .

As seen in the establishment of a WebRTC interactive session begins with the external web client sending a session description object SDP to the web application server in an encrypted format in this example via an HTTPS connection . In this example the WebRTC session description object is referred to as SDP Object A and is indicated by arrow . SDP Object A represents the offer in a WebRTC offer answer exchange. SDP Object A specifies the media types and capabilities that the external web client supports and prefers for use in the WebRTC interactive session. The web application server forwards the SDP Object A by a secure web connection to the distributed policy enforcement agent of the enterprise web client of the enterprise user device as indicated by arrow .

As noted above the distributed policy enforcement agent may access the contents of network traffic received over a secure web connection after the network traffic has been decrypted and may additionally examine data provided by the packets transporting the network traffic. Thus the distributed policy enforcement agent is able to examine the contents of the SDP Object A as well as data provided by packets transporting the SDP Object A. In some embodiments the distributed policy enforcement agent at this point may compare the format of the SDP Object A to an expected WebRTC session description object format. If the SDP Object A does not conform to the expected format the distributed policy enforcement agent may discard SDP Object A and a WebRTC interactive session will not be established. If the SDP Object A appears valid then establishment of the WebRTC interactive session may continue.

Based on the contents of the SDP Object A the distributed policy enforcement agent sends a query for enterprise policies to the enterprise policy data store as indicated by arrow . The query may be based on or include data extracted from contents of the SDP Object A and or other available data related to the SDP Object A such as characteristics of or data in the packets comprising the SDP Object A. As non limiting examples such data may include an identity associated with the external user device an identity of an intermediary that forwarded the SDP Object A to the enterprise user device an exchange of encryption keys or a type of WebRTC interactive flow. In response to the query the enterprise policy data store returns the requested enterprise policies to the distributed policy enforcement agent indicated by arrow in . The distributed policy enforcement agent then applies the enterprise policies to the SDP Object A. In some embodiments applying the enterprise policies to the SDP Object A may comprise the following further validating the WebRTC session description object format establishing or declining to establish a WebRTC interactive session providing options to the external user device for an alternative WebRTC interactive session and or modifying the contents of a WebRTC session description object as non limiting examples.

Assuming the enterprise policies applied by the distributed policy enforcement agent permit the establishment of the WebRTC interactive session to proceed the distributed policy enforcement agent next passes the WebRTC session description object to the scripting engine for conventional processing as indicated by arrow . As noted above the distributed policy enforcement agent may have modified the contents of SDP Object A in applying the enterprise policies. Thus the WebRTC session description object forwarded to the scripting engine is designated SDP Object A .

After the scripting engine receives the SDP Object A from the distributed policy enforcement agent the scripting engine in response sends a WebRTC session description object referred to as SDP Object B to the distributed policy enforcement agent as indicated by arrow . The SDP Object B in this example represents the answer in the WebRTC offer answer exchange. In some embodiments the distributed policy enforcement agent may apply enterprise policies by modifying a content of the SDP Object B prior to forwarding it on to the web application server . Accordingly the WebRTC session description object forwarded by the distributed policy enforcement agent is referred to as SDP Object B . SDP Object B is sent to the web application server via a secure network connection as indicated by arrow . The web application server in turn forwards the SDP Object B to the external user device as shown by arrow .

With continuing reference to the external web client on the external user device and the enterprise web client in particular the WebRTC functionality provider then begin hole punching to determine the best way to establish direct communications. This is indicated by bidirectional arrows and in . Hole punching is a technique often using protocols such as Interactive Connectivity Establishment ICE in which both web clients establish a connection with an unrestricted third party server not shown that uncovers external and internal address information for use in direct communications. In this example the distributed policy enforcement agent may receive analyze and modify data exchanged as part of hole punching. For example the distributed policy enforcement agent may add or remove a Session Traversal Utilities for NAT STUN server and or a Traversal Using Relays around NAT TURN server used by the enterprise user device for hole punching. In this manner the distributed policy enforcement agent may apply enterprise policies to the WebRTC interactive session even after the WebRTC offer answer exchange has concluded.

Once the hole punching indicated by arrows and is successful the external web client and the WebRTC functionality provider of the enterprise web client begin key negotiations to establish a secure peer connection bidirectional arrow . Upon establishing a secure peer connection the external web client and the WebRTC functionality provider of the enterprise web client begin exchanging secure WebRTC media or data flows as shown by bidirectional arrow .

To generally describe exemplary operations of the distributed policy enforcement agent of for distributed application of enterprise policies to WebRTC interactive sessions is provided. is a flowchart illustrating exemplary operations for distributed application of enterprise policies to WebRTC interactive sessions. In this example of operations begin with the distributed policy enforcement agent receiving a WebRTC session description object directed to a recipient device such as the enterprise user device originating from a sender device such as the external user device via a secure network connection block . In some embodiments the WebRTC session description object received by the distributed policy enforcement agent may represent an offer from the sender device in a WebRTC offer answer exchange or may represent an answer sent in response to a previously sent offer.

With continuing reference to the distributed policy enforcement agent next determines one or more enterprise policies based on the WebRTC session description object block . In some embodiments the enterprise policies may be determined based on a content of the WebRTC session description object and or on data provided by packets transporting the WebRTC session description object. According to some embodiments the content of the WebRTC session description object and or data provided by packets transporting the WebRTC session description object may include an identity associated with the sender device an identity of an intermediary that forwarded the WebRTC session description object to the recipient device an exchange of encryption keys or a type of WebRTC interactive flow. Some embodiments may provide that the distributed policy enforcement agent determines the one or more enterprise policies by sending a query for enterprise policies to an enterprise policy data store not shown such as the enterprise policy data store of .

With continuing reference to the distributed policy enforcement agent applies the one or more enterprise policies to the WebRTC session description object block . As non limiting examples the distributed policy enforcement agent may apply the enterprise policies by validating the WebRTC session description object format by establishing or declining a WebRTC interactive session by providing options for an alternative WebRTC interactive session to the sender device by modifying the contents of a WebRTC session description object and or by causing a WebRTC interactive flow to be redirected cloned logged or recorded.

Referring now to the distributed policy enforcement agent receives a WebRTC session description object directed to a recipient device such as the enterprise user device originating from a sender device such as an external user device via a secure network connection block . The WebRTC session description object received by the distributed policy enforcement agent may represent an offer from the sender device in a WebRTC offer answer exchange or may represent an answer sent in response to a previously sent offer. The distributed policy enforcement agent next determines whether the WebRTC session description object conforms to an expected WebRTC session description object format block . If the distributed policy enforcement agent determines that the WebRTC session description object fails to conform to an expected format the distributed policy enforcement agent may simply discard the WebRTC session description object block . This may provide an extra measure of security against attack by malware and or viruses seeking access to the enterprise network via a WebRTC interactive session.

If the distributed policy enforcement agent determines at block of that the WebRTC session description object is in an appropriate format the distributed policy enforcement agent next determines one or more enterprise policies to enforce. In this example the distributed policy enforcement agent queries an enterprise policy data store such as the enterprise policy data store of to determine one or more enterprise policies based on the WebRTC session description object block . In some embodiments the enterprise policies may be determined based on a content of the WebRTC session description object and or on data provided by packets transporting the WebRTC session description object. The content of the WebRTC session description object and or the data provided by packets transporting the WebRTC session description object may include as non limiting examples an identity associated with the sender device an identity of an intermediary that forwarded the WebRTC session description object to the recipient device an exchange of encryption keys or a type of WebRTC interactive flow. In some embodiments an identity associated with the sender device may include an identity of the sender device a user ID of the sender and or a name of the sender. The distributed policy enforcement agent then receives one or more enterprise policies from the enterprise policy data store block . Processing then continues at block of .

Referring now to the distributed policy enforcement agent evaluates whether the WebRTC session description object complies with the one or more enterprise policies block . As non limiting examples the enterprise policies may dictate what WebRTC interactive flow types are permitted or may expressly allow or deny WebRTC interactive sessions based on an identity associated with the sender device or sender domain or identity. If the WebRTC session description object is determined not to comply with the one or more enterprise policies at block the distributed policy enforcement agent may decline to establish a WebRTC interactive flow between the sender device and the recipient device block . The distributed policy enforcement agent may optionally provide one or more options for an alternative WebRTC interactive flow to the sender device block .

If the distributed policy enforcement agent determines at block that the WebRTC session description object complies with the one or more enterprise policies the distributed policy enforcement agent permits a secure peer connection to be established between the recipient device and the sender device as discussed above with respect to block . In some embodiments establishing a secure peer connection may include the distributed policy enforcement agent modifying one or more ICE packets used in hole punching based on the one or more enterprise policies. The recipient device then receives a first WebRTC interactive flow originating from the sender device via the secure peer connection and the WebRTC interactive session commences block .

In some embodiments the distributed policy enforcement agent may optionally apply the one or more enterprise policies to the first WebRTC interactive flow block . For example the enterprise policies may require that the first WebRTC interactive flow be recorded logged or redirected. Where the first WebRTC interactive flow is an interactive data interchange applying the one or more enterprise policies may include examining the contents of the interactive data interchange to determine compliance with the one or more enterprise policies.

In this regard illustrates exemplary operations for applying enterprise policies to a WebRTC interactive flow as described in block of . In operations begin with the distributed policy enforcement agent requesting that a second WebRTC interactive flow including data from the first WebRTC interactive flow be established between the recipient device and an enterprise device such as the enterprise device of block . In response to the request the second WebRTC interactive flow is received at the enterprise device block . The second WebRTC interactive flow is then processed by the enterprise device in accordance with the one or more enterprise policies block . In some examples the second WebRTC interactive flow may be recorded or logged as required by the enterprise policies or may be redirected to another device within the enterprise such as a media anchor device not shown .

Some embodiments may provide variations of the WebRTC topology described above with respect to . For example the distributed policy enforcement agent may request that the first WebRTC interactive flow be established directly between an external user device and the enterprise device and that the second WebRTC interactive flow be received at the recipient device. In some embodiments the distributed policy enforcement agent may access the contents of the first WebRTC interactive flow and may apply enterprise policies by directly manipulating redirecting logging or copying the contents of the first WebRTC interactive flow as non limiting examples.

The exemplary computer system includes a processing device or processor a main memory as non limiting examples read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM etc. and a static memory as non limiting examples flash memory static random access memory SRAM etc. which may communicate with each other via a bus . Alternatively the processing device may be connected to the main memory and or the static memory directly or via some other connectivity means.

The processing device represents one or more processing devices such as a microprocessor central processing unit CPU or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor a reduced instruction set computing RISC microprocessor a very long instruction word VLIW microprocessor a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing device is configured to execute processing logic in instructions and or cached instructions for performing the operations and steps discussed herein.

The computer system may further include a communications interface in the form of a network interface device . It also may or may not include an input to receive input and selections to be communicated to the computer system when executing the instructions . It also may or may not include an output including but not limited to display s . The display s may be a video display unit as non limiting examples a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device as a non limiting example a keyboard a cursor control device as a non limiting example a mouse and or a touch screen device as a non limiting example a tablet input device or screen .

The computer system may or may not include a data storage device that includes using drive s to store the functions described herein in a computer readable medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The functions can include the methods and or other functions of the processing system a participant user device and or a licensing server as non limiting examples. The one or more sets of instructions may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system . The main memory and the processing device also constitute machine accessible storage media. The instructions and or may further be transmitted or received over a network via the network interface device . The network may be an intra network or an inter network.

While the computer readable medium is shown in an exemplary embodiment to be a single medium the term machine accessible storage medium should be taken to include a single medium or multiple media as non limiting examples a centralized or distributed database and or associated caches and servers that store one or more sets of instructions. The term machine accessible storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies disclosed herein. The term machine accessible storage medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

The embodiments disclosed herein may be embodied in hardware and in instructions that are stored in hardware and may reside as non limiting examples in Random Access Memory RAM flash memory Read Only Memory ROM Electrically Programmable ROM EPROM Electrically Erasable Programmable ROM EEPROM registers a hard disk a removable disk a CD ROM or any other form of computer readable medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an Application Specific Integrated Circuit ASIC . The ASIC may reside in a remote station. In the alternative the processor and the storage medium may reside as discrete components in a remote station base station or server.

It is also noted that the operational steps described in any of the exemplary embodiments herein are described to provide examples and discussion. The operations described may be performed in numerous different sequences other than the illustrated sequences. Furthermore operations described in a single operational step may actually be performed in a number of different steps. Additionally one or more operational steps discussed in the exemplary embodiments may be combined. It is to be understood that the operational steps illustrated in the flow chart diagrams may be subject to numerous different modifications as will be readily apparent to one of skill in the art. Those of skill in the art would also understand that information and signals may be represented using any of a variety of different technologies and techniques. As non limiting examples data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

The previous description of the disclosure is provided to enable any person skilled in the art to make or use the disclosure. Various modifications to the disclosure will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other variations without departing from the spirit or scope of the disclosure. Thus the disclosure is not intended to be limited to the examples and designs described herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

