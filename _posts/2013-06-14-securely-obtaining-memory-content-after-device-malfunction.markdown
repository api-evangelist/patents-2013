---

title: Securely obtaining memory content after device malfunction
abstract: One or more techniques and/or systems are provided for securely obtaining memory content after a device malfunction. For example, applications, components, and/or an operating system of a device may maintain information within volatile memory in a secure manner (e.g., using encryption). When the device malfunctions, such information may be useful for diagnosing what caused the malfunction. Accordingly, memory content within volatile memory may be securely retrieved, encrypted, and/or stored before such memory content is flushed/removed from volatile memory. For example, a warm reset is performed to initially reboot the device without removing memory content from volatile memory. The memory content may be retrieved and encrypted to create encrypted memory content that may be stored within nonvolatile memory for later access. After a second reboot, device malfunction information may be obtained by decrypting the encrypted memory content using a private key matching a public key used to encrypt the memory content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286152&OS=09286152&RS=09286152
owner: Microsoft Technology Licensing, LLC
number: 09286152
owner_city: Redmond
owner_country: US
publication_date: 20130614
---
Many different types of hardware platforms are used to build devices such as mobile phones tablets desktop computers etc. For example a first tablet manufacturer may utilize a particular platform comprising a processor memory graphics card and or other components that may differ from platform components used by a second tablet manufacturer to create tablet devices. Accordingly because different components and or platforms exist across different instances of a same device extensive software testing such as operating system stability testing may be performed to determine whether such software can stably operate across the different instances. During testing a device may become unresponsive e.g. a hard hang where software debugging functionality may be unable to access and or debug what issue s caused the unresponsiveness. For example the hard hang may result from a firmware bug a hardware failure and or software problem. Accordingly the device may have to be rebooted so that the device once again becomes responsive. During such a reboot however volatile memory is flushed removed whereby helpful diagnostic information may be lost from the volatile memory.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for securely obtaining memory content after a device malfunction are provided herein. For example during normal operation of a device e.g. a tablet a mobile phone a desktop computer etc. the device may be responsive such that software such as an operating system applications software debugging functionality etc. may actively execute on the device. However when the device malfunctions the device may become non responsive e.g. a hard hang where software such as software debugging functionality is unable to access and or execute on the device . Accordingly a device malfunction may be identified based upon non responsiveness of the device so that device malfunction information may be collected from memory content within volatile memory before being flushed removed e.g. volatile memory such as main memory of the device and or memory of a subcomponent such as a network card a graphics processing unit etc. . For example a watchdog timer may be configured to update a responsiveness value e.g. one or more bits . When the device malfunctions the watchdog timer may not operate to update the responsiveness value which may be detected as non responsiveness of the device where the responsiveness value is not updated within a timeout threshold.

Responsive to detecting non responsiveness of the device a warm reset of the device may be performed to initially reboot the device. As opposed to flushing removing memory content from volatile memory during a standard reboot the warm reset may retain the memory content within the volatile memory after the device is initially rebooted. For example a memory controller for the volatile memory may not be reset such that the volatile memory retains a self refresh state during the warm reset so that the memory content is not flushed removed from the volatile memory e.g. as opposed to a standard reboot whereby the memory controller may be reset so that the volatile memory transitions to a non self refresh state such that the memory content would be flushed removed .

Responsive to the device being initially rebooted from the warm reset e.g. initially rebooted where firmware of the device may be in control of the device and or where the memory content is still comprised within the volatile memory the memory content may be retrieved and encrypted to create encrypted memory content. In an example a public key e.g. maintained by the firmware and corresponding to a private key maintained in secret by a diagnostic component may be used to encrypt the memory content to create the encrypted memory content. In another example a symmetric key may be used to encrypt the memory content to create the encrypted memory content. The public key may be used to encrypt the symmetric key to create an encrypted symmetric key. The encrypted symmetric key and or the encrypted memory content may be used to create an encrypted blob. The encrypted memory content and or the encrypted blob may be stored e.g. within a non volatile storage location or within volatile memory for access after a second reboot e.g. for use in diagnosing why the device malfunctioned .

In an example a second reboot of the device may be performed. For example the second reboot may reset the memory controller so that the volatile memory transitions from the self refresh state to the non self refresh state e.g. thus flushing removing the memory content from the volatile memory during the second reboot for security purposes . The encrypted memory content and or the encrypted blob may be decrypted to obtain access to the memory content. For example the operating system may utilize the private key to decrypt the encrypted memory content and or the encrypted blob. In this way device malfunction information may be obtained from the memory content. For example the device malfunction information may be used for telemetry and or debugging purposes. In another example the memory content may be accessible without a second reboot. For example memory content may be accessed from volatile memory encrypted and persisted e.g. persisted to a location accessible to an operating system or a diagnostic component . A memory overwrite request MOR operation e.g. performed by firmware of the device may clear the content of the volatile memory after the encrypted memory content is persisted. Once the volatile memory is cleared a first boot sequence may proceed and the memory content may be accessible at the persisted location after the first boot sequence.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide an understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

An embodiment of securely obtaining memory content after a device malfunction is illustrated by an exemplary method of . At the method starts. At a device malfunction such as on a mobile phone a tablet or other computing device may be identified based upon non responsiveness of the device. In an example a watchdog timer may be configured to update a responsiveness value e.g. one or more bits that may indicate whether the device is responsive or non responsive e.g. operating in a non desired manner such as not executing applications not executing an operating system not executing software debugging functionality etc. . If the device malfunctions then the watchdog timer may not update the responsiveness value. If the responsiveness value is not updated within a timeout threshold e.g. times out before being updated then the device malfunction may be identified for the device e.g. .

At a warm reset of the device may be performed to initially reboot the device e.g. . Memory content within volatile memory of the device may be retained after the device is initially rebooted because the warm reset as opposed to a standard reboot that may flush remove the memory content from the volatile memory was performed e.g. . In an example of the warm reset a memory controller for the volatile memory may not be reset such that the volatile memory retains a self refresh state during the warm reset and thus retains the memory content e.g. power is provided to the volatile memory to periodically or continually refresh the volatile memory so that content therein is not lost . In an example the volatile memory may comprise one or more volatile memory devices such as a main memory of the device and or volatile memory of a subcomponent of the device e.g. a modem a network card a graphics card a sound card etc. .

At responsive to the device being initially rebooted from the warm reset e.g. into a state where firmware of the device has control over the device the memory content within the volatile memory may be retrieved and encrypted to create encrypted memory content. In an example a public key may be utilized to encrypt the memory content to create the encrypted memory content e.g. the firmware may utilize the public key corresponding to a private key maintained by an operating system in secret such that the operating system may decrypt the encrypted memory content e.g. . In another example a symmetric key may be used to encrypt the memory content to create the encrypted memory content and the public key may be utilized to encrypt the symmetric key to create an encrypted symmetric key. The encrypted symmetric key and or the encrypted memory content may be used to create an encrypted blob e.g. .

At the encrypted memory content e.g. and or the encrypted blob may be stored for access e.g. after a second reboot . For example the encrypted memory content may be stored within non volatile memory a storage device one or more physical memory pages maintained by the operating system for diagnostic purposes etc. The second reboot may be performed to reboot the device where memory content within the volatile memory is flushed removed for security and or operational purposes. For example the memory controller may be reset to transition the volatile memory from the self refresh state to a non self refresh state for the second reboot e.g. such that power is not applied to the volatile memory and thus content therein is lost . The encrypted memory content may be decrypted to obtain access to the memory content. In an example the private key may be used to decrypt the encrypted memory content e.g. the operating system may utilize the private key to perform the decryption . In another example the private key may be used to decrypt the encrypted blob and the symmetric key may be used to decrypt the encrypted memory content. In this way device malfunction information maybe obtained from the memory content. In another example the memory content may be accessible without a second reboot. For example memory content may be accessed from volatile memory encrypted and persisted e.g. persisted to a location accessible to an operating system or a diagnostic component . A memory overwrite request MOR operation e.g. performed by firmware of the device may clear the content of the volatile memory after the encrypted memory content is persisted. Once the volatile memory is cleared a first boot sequence may proceed and the memory content may be accessible at the persisted location.

A device malfunction associated with the device A may be identified utilizing a watchdog timer . The watchdog timer may be configured to update a responsiveness value e.g. during responsive operation or non malfunctioning of the device A such as where the device A is functioning in a state where a clock interrupt may continue to operate . If the device A malfunctions then the watchdog timer may not operate and thus the responsiveness value may not be updated by the watchdog timer . The content retrieval component may be configured to identify the device malfunction associated with the device A based upon the responsiveness value not being updated within a timeout threshold. Accordingly the content retrieval component may perform a warm reset of the device e.g. in order to securely retrieve memory content from volatile memory for diagnostic purposes e.g. .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An example embodiment of a computer readable medium or a computer readable device that is devised in these ways is illustrated in wherein the implementation comprises a computer readable medium such as a CD R DVD R flash drive a platter of a hard disk drive etc. on which is encoded computer readable data . This computer readable data such as binary data comprising at least one of a zero or a one in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In some embodiments the processor executable computer instructions are configured to perform a method such as at least some of the exemplary method of for example. In some embodiments the processor executable instructions are configured to implement a system such as at least some of the exemplary system of at least some of the exemplary system of at least some of the exemplary system of at least some of the exemplary system of at least some of the exemplary system of and or least some of the exemplary system of for example. Many such computer readable media are devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and or the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via a network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Further unless specified otherwise first second and or the like are not intended to imply a temporal aspect a spatial aspect an ordering etc. Rather such terms are merely used as identifiers names etc. for features elements items etc. For example a first object and a second object generally correspond to object A and object B or two different or two identical objects or the same object.

Moreover exemplary is used herein to mean serving as an example instance illustration etc. and not necessarily as advantageous. As used herein or is intended to mean an inclusive or rather than an exclusive or . In addition a and an as used in this application are generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Also at least one of A and B and or the like generally means A or B or both A and B. Furthermore to the extent that includes having has with and or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising .

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application.

