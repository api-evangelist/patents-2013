---

title: Single sign on with multiple authentication factors
abstract: The authentication of a client to multiple server resources with a single sign-on procedure using multiple factors is disclosed. One contemplated embodiment is a method in which a login session is initiated with the authentication system of a primary one of the multiple server resources. A first set of login credentials is transmitted thereto, and validated. A token is stored on the client indicating that the initial authentication was successful, which is then used to transition to a secondary one of the multiple resources. A second set of login credentials is also transmitted, and access to the secondary one of the multiple resources is granted on the basis of a validated token and second set of login credentials.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09288195&OS=09288195&RS=09288195
owner: SecureAuth Corporation
number: 09288195
owner_city: Irvine
owner_country: US
publication_date: 20131213
---
This application is a continuation of U.S. patent application Ser. No. 12 948 037 entitled SINGLE SIGN ON WITH MULTIPLE AUTHENTICATION FACTORS filed Nov. 17 2010 which claims the benefit of U.S. Provisional Application No. 61 262 102 entitled SYSTEM METHOD FOR SINGLE SIGN ON WITH MULTIPLE AUTHENTICATION FACTORS and filed Nov. 17 2009. The entire disclosures of the aforesaid applications are hereby incorporated by reference herein.

The present disclosure relates generally to methods and systems for authentication in secure data communications. More particularly the present disclosure relates to systems and methods for single sign on with multiple authentication factors.

Numerous aspects of a person s day to day work and personal lives involve computers and online services accessed thereby. In order to secure personal information from unauthorized use and to provide an individualized experience access to such online services is established based upon user accounts and corresponding passwords. Because computer systems and online services are operated and managed by different entities separate accounts and passwords are necessary for each. For example a bank account is accessed separately from a credit card account which is different from a household utilities account and so forth. Furthermore a typical person may have one or more separately accessed e mail accounts as well as different from accounts for social networking sites blogging sites and special interest message board sites. Even in an enterprise information technology IT environment separate accounts may be necessary for a given employee s computer e mail server and file server access.

Due to the large number of account names and passwords that must be remembered and entered upon demand for access to these various computing resources many suffer from password fatigue. Even individuals with good memory can forget account identifiers and passwords particularly those that are used only sparsely or those that are required to have some level of complexity such as uppercase lowercase letters numbers and symbols. Password fatigue oftentimes leads to users adopting individual password and account management practices that paradoxically lead to less security than more security as intended with deploying different access control systems for each resource. One of the more common of such unsecure practices is selecting the same account identifier and password combination for each resource to which the user has access. If one of the systems is compromised such that the account name and password is known to a malicious third party then all of the systems with the same account name and password combination are compromised. Another common practice is writing down or otherwise recording account identifiers and passwords in an unsecure medium and storing the same in close physical proximity to a terminal that is used to access the resource. If physical security is breached to where such written account identifiers and passwords can be pilfered then the security of those resources can also be breached. In order to make memorizing passwords easier users may select common words or phrases that can be easily determined with a common dictionary attack.

As a solution to the password fatigue problem and in order to simply the coordinated management and security of multiple user accounts tied to a single user or identity over multiple computing resources single sign on SSO has been developed. In general single sign on refers to an access control modality in which the user supplies login credentials just once without being prompted again to gain access to other related computing resources. Conventional single sign on implementations treat each component as an independent secondary security domain but with the user initially accessing a primary domain to establish a secured session therewith.

Access to the additional resources is through the primary domain and can occur in one of several ways. In one known method the credentials provided to access the primary domain are directly passed on to the secondary domain for immediately signing on thereto. Alternatively the credentials for the primary domain are used to retrieve other account name and password information for the secondary stored thereon and then provided to the secondary domain upon requesting access without prompting the user for manual entry.

Providing access to a server by an unknown client or supplying access credentials from the client to an unknown server over an open network environment raises several security concerns. The server must be assured that the client is what it asserts it is and the client must be assured that the server is what it asserts it is. One conventional authentication or initial login process for the user to gain access to the primary domain involves verification of the user with the account identifier and the corresponding password which is only one factor. The secret nature of passwords at least in theory is intended to prevent unauthorized access. However simple password protection is ineffective because they can be mistakenly revealed and are susceptible to brute force attacks. Besides what the user knows that is the password for an account other authentication factors including what the user has hardware access control devices security certificates downloaded to a client device after verification via hardware devices and the like and what the user is biometrics such as fingerprints and retinas are utilized. Multiple authentication factors are understood to decrease the likelihood of unauthorized access.

Existing implementations of single sign on that utilize multiple authentication factors is deficient in several respects. One problem is the required use of particular application programming interfaces APIs along with the complexities of integration attendant thereto. Furthermore system administrators must oftentimes manage and audit each application secondary domain separately because of differing password policies. Accordingly there is a need in the art for improved single sign on with multiple authentication factors.

In accordance with various embodiments of the present disclosure there is contemplated a method for authenticating a client to multiple server resources each with a standalone authentication system. The method may include initiating a login session with the authentication system of a primary one of the multiple server resources. Additionally there may be a step of transmitting a first set of login credentials from the client to the authentication system of the primary one of the multiple server resources. The client may then be validated to the primary one of the multiple server resources based upon the first set of login credentials. The method may also include storing on the client a token received from the authentication system of the primary one of the multiple resources. The method may include transmitting the token and a second set of login credentials different from the first set of login credentials to a secondary one of the multiple server resources. The second set of login credentials may be retrieved from the client. There may also be a step of validating the client to the authentication system of the secondary one of the multiple server resources based upon the transmitted token and the second set of login credentials. Accordingly the number of passwords that must be memorized by users in order to access each of the server resources is minimized with the concomitant reduction in password related help desk calls. The present invention will be best understood by reference to the following detailed description when read in conjunction with the accompanying drawings.

Common reference numerals are used throughout the drawings and the detailed description to indicate the same elements.

Various embodiments of the present disclosure contemplate single sign on with multiple authentication factors. The following disclosed methods for authenticating a client to multiple resources are understood to secure and simplify access thereto by minimizing the number of separate passwords. The detailed description set forth below in connection with the appended drawings is intended as a description of the several presently contemplated embodiments of these methods and is not intended to represent the only form in which the disclosed invention may be developed or utilized. The description sets forth the functions and features in connection with the illustrated embodiments. It is to be understood however that the same or equivalent functions may be accomplished by different embodiments that are also intended to be encompassed within the scope of the present disclosure. It is further understood that the use of relational terms such as first and second and the like are used solely to distinguish one from another entity without necessarily requiring or implying any actual such relationship or order between such entities.

The block diagram of illustrates an exemplary networked computing environment within which the methods contemplated in accordance with various aspects of the present disclosure may be implemented. In further detail the networked computing environment includes a client computer system that accesses an enterprise computing resource and its constituent domains or servers over a network . The client computer system may be a conventional desktop computer having a central processing unit memory and input and output devices connected thereto such as network cards keyboards mice and display units. However such particulars are presented as examples only and any other suitable data processing hardware such as smart phones portable computers and the like may be readily substituted. The client computer system is understood to have software instructions loaded thereon that when executed perform various functions in accordance with the embodiments of the present disclosure. Among these instructions is a web browser application that exchanges data with corresponding web server applications of the enterprise computing environment.

The network may be an open wide area network such as the Internet though in some contemplated embodiments may also be a local area network. The specific implementation of the network may be dependent upon the particulars of the enterprise computing resource . The enterprise computing resource may include a series of inter related Web applications or Software as a Service SaaS applications that are executed on the client computer system or any other server computing environment in which multiple though mostly independent functionality is provided. Regardless of the identity of the constituent parts of the enterprise computing resource they are understood to be servers in a client server computing framework as the provider of data and or services. This is distinguished from the client computer system i.e. the client in the client server computing framework as the requestor of data and or services.

In general the enterprise computing resource may be segregated into several domains or servers with each handling a different functionality. As will be explained in greater detail below the servers are referred to as domains as each is responsible for its own authentication of its users and security. The example shown includes a primary domain a secondary domain A and a secondary domain B though it is expressly contemplated that any number of primary or secondary domains may be included. The primary domain includes a first set of applications which in one example may be an enterprise file server. Access to the first set of applications is controlled by an authentication system and is limited to users with existing accounts as defined in a corresponding directory . The secondary domain A likewise includes a second set of applications . Continuing with the previous example these may be an e mail messaging calendaring groupware application of the enterprise. Similar to the first set of applications access to the second set of applications is limited to authorized users as validated by the authentication system . Account data relating to such authorized users is stored in a corresponding directory . The secondary domain B includes a third set of applications which may be related to managing the financial and accounting operations of the enterprise. An authentication system is understood to limit access to authorized users included in a directory . Although separate directories and are presented it will be appreciated that these may be consolidated with the account information stored in a single centralized repository.

The particular functions of the primary domain and the secondary domains A and B are presented by way of example only and not of limitation. These domains may provide any number of services to the client computer system . is intended to illustrate only the logical division of the security domains and a correspondence to any particular server hardware is not implied. For instance the primary domain and the secondary domain A may be running on one server hardware device while the secondary domain may be running on another server hardware device. Such hardware devices are understood to include one or more central processing units memory and input and output devices connected thereto like the client computer system as well as executable software instructions that among other things perform the steps of the contemplated methods of authentication.

The security policies of the primary domain as well as the secondary domains A and B are flexible and can be independently configured. For instance the directories of the secondary domains can be configured such that only a subset of the users of the primary domain can access the same. Along these lines the directory of the primary domain is understood to include all of the authorized users of the enterprise computing resource . In a typical basic configuration a user logs in to the primary domain via the authentication system by providing an account identifier and its associated password in order to access the first applications . Subsequently when there is a need to access the second set of applications on the secondary domain A there is another separate login sequence to gain access thereto and another account identifier and its associated password are provided to the authentication system . In some cases the account identifier and password of the primary domain is the same as those of the secondary domain A as well as the secondary domain B though because there is an independent directory this is not necessary and a different account identifier and password may be set for the same user.

In the context of the foregoing exemplary network computing environment with reference to the flowchart of the method for authenticating the client computer system to the multiple domains of the enterprise computing resource will be described. One embodiment of the method begins with a step of initiating a login session with the authentication system of the primary domain . As indicated above the applications may be delivered via the web so the primary domain is understood to include a web server with which a browser application running on the client computer system exchanges data. In this case a web page with an entry form for an account identifier and a password may be generated by the primary domain for rendering by the browser application on the client computer system . However any other suitable data entry modality may be readily substituted.

The method continues with a step of transmitting a first set of login credentials to the authentication system of the primary domain . It is contemplated that the first set of login credentials are the aforementioned account identifier and password combination entered by the user into the entry form rendered on the client computer system although any other types of credentials may be utilized as the first authentication factor. The step is understood to be in relation to the client computer system but a corresponding step in relation to the enterprise computing resource is also contemplated. With reference to the flowchart of the method includes a step of receiving the first set of login credentials from the client computer system .

Preferably though optionally the method includes a step of transmitting a second set of login credentials to the primary domain . The corresponding method for the enterprise computing resource includes a step of receiving the second set of login credentials on the authentication system of the primary domain . In some embodiments the authentication system of the primary domain may require only one factor i.e. the account identifier and password but in most cases the second set of login credentials will be transmitted. Thus the security and authentication processes are understood to be more in line with the processes for authenticating and accessing the other domains. The first set of login credentials being generally categorized as something the purported user knows the second set of login credentials being a second authentication factor may be something the user has or something the user is. The second set of login credentials can thus be a certificate a unique token and a personal identification number PIN or other such data stored in browser cookies and accessible variable stores. Although the second set of login credentials can include data transmitted out of band to hardware tokens physically possessed by an authorized user it will become apparent to those skilled in the art that such implementations may not be ideal for single sign on as will be explained more fully below. Such out of band data transmissions include text messages and phone calls.

In one contemplated embodiment the second set of login credentials is a digital certificate retrievable by the client computer system . The digital certificate may be stored on client computer system or on an external data storage device connectible to the client computer system such as a smart card from which it is retrieved. Generally the digital certificate is understood to be associated with an application on the client computer system that is complementary to the authentication system . This may be the aforementioned web browser application which has digital certificate management features. However it is also understood that the digital certificate can be associated with another application on the client computer system that is independent of the authentication system of the primary domain . One example of such an application is the Adobe Flash platform. It will be appreciated that any other hardware or software based identity management modality from which the digital certificate is retrieved programmatically can also be utilized.

As shown in the block diagram of the digital certificate is generally comprised of a public key and a signature . The public key corresponds to a private key as public and private keys are generated in related pairs. The private key remains on the client computer system while the public key and the signature may be widely distributed. It is understood that the public key infrastructure PKI can be utilized to encrypt and decrypt data traffic between two systems. However as noted previously the digital certificates which are a part of PKI can be utilized to authenticate the transmitting party to the receiving party.

Further details of the digital certificate are shown in including the various fields thereof. According to one embodiment the digital certificate is an X.509 certificate. It is typically issued from a certificate authority CA which is a trusted third party responsible for confirming the identity of those to which it is issuing the digital certificate whether that is an individual user a specific computers or a set of computers in a network an organization or any other entity. Accordingly the digital certificate is signed with a digital signature to validate the same to any recipients.

In addition to the public key the digital certificate may include for example a version number a serial number a signature algorithm an issuer identifier a validity indicator including a validity start time and a validity end time and a subject identifier . The digital certificate is typically issued from a certificate authority CA which is a trusted third party responsible for confirming the identity of those to which it is issuing the digital certificate whether that is an individual user a specific computers or a set of computers in a network an organization or any other entity. Accordingly the digital certificate is signed with a digital signature to validate the same to any recipients. In further detail the version number identifies the version of the X.509 standard being using for the digital certificate while the serial number is understood to be a unique number assigned by a particular certificate authority. The signature algorithm defines the cryptographic algorithm utilized to generate the CA signature such as the Secure Hash Algorithm SHA Digital Signature Algorithm DSA and so forth. The issuer identifier includes the name of the CA that issued the digital certificate . The validity indicator defines the time period within which the digital certificate may be presented as a valid and proper credential with that time period beginning with the validity start time and ending with the validity end time . The subject identifier contains the name of a person group or organization to which the digital certificate was issued.

The method for authenticating the client computer system continues with a step of validating the client to the primary domain based upon the first set of login credentials as well as the second set of login credentials to the extent the particular implementation involved the transmission of the same in step . The step is understood to find correspondence to the step in the method for authenticating the client computer system in relation to the enterprise computing resource . As will be recognized the disclosed method for authenticating the client to the various domains of the enterprise computing resource is premised on the second set of login credentials already existing on the client computer system . However if this is not the case the authentication system may direct the user to enroll. It is understood that the validation and enrollment procedures are specific to the configuration of the second set of login credentials . In the aforementioned exemplary configuration that utilizes the digital certificate a procedure for such operations is contemplated in assignee s co pending application Ser. No. 12 052 630 entitled SYSTEM AND METHOD FOR STORING CLIENT SIDE CERTIFICATE CREDENTIALS filed Mar. 20 2008 application Ser. No. 12 326 002 entitled A METHOD AND SYSTEM FOR GENERATING DIGITAL CERTIFICATES AND CERTIFICATE SIGNING REQUESTS filed Dec. 2 2008 and Ser. No. 12 419 951 entitled IDENTITY BASED CERTIFICATE MANAGEMENT filed Apr. 7 2009 each of the disclosures of which are wholly incorporated by reference herein.

Referring back to the block diagram of once the client computer system gains access to the primary domain various embodiments of the present disclosure contemplate an uninterrupted transition to the secondary domain A and the secondary domain B in accordance with single sign on. In particular once the user gains access to the primary domain by providing the requested login credentials thereto access to the secondary domains are possible without a manual re submission of the same login credentials. Single sign on is based on a trust relationship between the primary domain and the secondary domains that the primary domain has completed all of the necessary authentication steps that can be relied upon for the security needs of the secondary domains.

With reference to the flowchart of the contemplated method in relation to the enterprise computing resource continues with a step of transmitting to the client computer system a token that is generated by the authentication system . The token is generated in response to a successful validation of the first set of login credentials and or the second set of login credentials per step . Additionally the token may include an account identifier that references an account user identity in the directory . It is understood that the token also refers to any other modality by which the client computer system is indicated as being authenticated by the primary domain . These modalities include browser cookie variables that are set to represent the authenticated status a variable that is resident in memory an application flag and so forth. The counterpart method in relation to the client computer system includes a step of storing the token thereon.

According to various embodiments of the present disclosure the client computer system may transition to the secondary domain A and or the secondary domain B without an interactive login procedure between the user and the respective authentication systems . Referring again to the flowchart of the method continues with a step of transmitting the token and the second set of login credentials to a secondary domain in the enterprise computing resource . As indicated above the second set of login credentials is different from the first set of login credentials considering that it is a second authentication factor. The token is accepted by the secondary domains as evidence that the session has been properly authenticated by the primary domain . The account identifier in the token specifies the account under which the client computer system accesses the secondary domains . The counterpart method pertaining to the enterprise computing resource includes a step of receiving the token and the second set of login credentials i.e. the digital certificate on the secondary domains .

Upon receipt by the respective authentication systems the client computer system is validated in a step and a corresponding step . The validation of the token is understood to be the similar to step and step in which the account identifier is correlated to the entries in the directory . Instead of confirming the associated password as in the exemplary implementation of step and step however the token is understood to serve as partial proof of authentication. The validation of the second set of login credentials is understood to be the same as set forth above in relation to step and step . After the validation step access to the secondary domains is granted.

The particulars shown herein are by way of example and for purposes of illustrative discussion of the embodiments of the present disclosure only and are presented in the cause of providing what is believed to be the most useful and readily understood description of the principles and conceptual aspects. In this regard no attempt is made to show details of the present invention with more particularity than is necessary the description taken with the drawings making apparent to those skilled in the art how the several forms of the present invention may be embodied in practice.

