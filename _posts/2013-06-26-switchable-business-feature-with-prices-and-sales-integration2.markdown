---

title: Switchable business feature with prices and sales integration
abstract: The present disclosure describes methods, systems, and computer program products for providing a remote device remote access to software functions. One method includes providing a list of second software functions to a first remote device that are not accessible by the remote device, wherein the remote device has remote access to a first software function; receiving from the remote device a request for a software function of the provided list of second software functions and upon receiving the request, providing the remote device remote access to the requested software function by transmitting access data for the requested software function to the remote device; and after providing the remote access to the requested software function, receiving from the remote device a deactivation command for the requested software function or the first software function and, based on the deactivation command, deactivating the remote access of the remote device to the requested software function or the first software function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09634954&OS=09634954&RS=09634954
owner: SAP SE
number: 09634954
owner_city: Walldorf
owner_country: DE
publication_date: 20130626
---
The present disclosure relates to software computer systems and computer implemented methods for providing a remote device remote access to multiple software functions that can dynamically be switched on or off.

Software products e.g. networked application NWAs can be built upon a platform where the platform is used as a basis upon which multiple applications are developed on top of or based upon the platform. As one example proprietary on demand business process platforms can be used to create many on demand products as well as networked applications built using at least a portion of the platform. On demand products can be a fully integrated enterprise resource planning ERP or business management software solutions. The on demand products can be a software as a service SaaS system in which software and its associated data are hosted centrally for example in a cloud computing environment and are accessed by users using a client e.g. a web browser over the internet. For data exchange between different software products data may need to be copied transferred or manipulated in other means to be used.

The present disclosure describes methods systems and computer program products for providing a remote device remote access to multiple software functions that can dynamically be switched on or off.

In a general aspect 1 A computer implemented method for providing a remote device remote access to software functions the method comprising the following operations performed by one or more servers e.g. one or more servers of a cloud computing environment providing a list of second software functions to a first remote device e.g. a mobile communication device that are not accessible by the remote device wherein the remote device has remote access to a first software function receiving from the remote device a request for a software function of the provided list of second software functions and upon receiving the request providing the remote device remote access to the requested software function by transmitting access data for the requested software function to the remote device after providing the remote access to the requested software function receiving from the remote device a deactivation command for the requested software function or the first software function and based on the deactivation command deactivating the remote access of the remote device to the requested software function or the first software function.

Aspect 2 according to aspect 1 wherein deactivating the remote access of the remote device to the requested software function or the first software function comprises maintaining the remote access to the software function which is not deactivated.

Aspect 3 according to any one of aspects 1 to 2 wherein deactivating the remote access of the remote device to the requested software function or the first software function comprises deactivating the remote access to the first software function while maintaining the remote access to the requested software function or deactivating the remote access to the requested software function while maintaining the remote access to the first software function.

Aspect 4 according to any one of aspects 1 to 3 the operations further comprising after deactivating the remote access of the remote device to the requested software function or the first software function receiving an activation command for the respective function and based on the activation command activating the remote access of the remote device to the respective function.

Aspect 5 according to any one of aspects 1 to 4 wherein the remote access to the requested software function comprises remote access to the first software function augmented by the requested software function.

Aspect 6 according to any one of aspects 1 to 5 the operations further comprising providing an indication to the first remote device that the list of second software functions comprises one or more software functions that are configured to be combined with the first software function.

Aspect 7 according to any one of aspects 1 to 6 the operations further comprising accessing data that is locally stored on the remote device processing the local data and forwarding the processed data from the requested software function to the first software function.

Aspect 8 according to any one of aspects 1 to 7 wherein the first software function and the requested software function are embedded in a e.g. common programming code on the one or more computers wherein the code includes code snippets associated with the first software function and code snippets associated with the requested software function and wherein the code snippets are configured to activate or deactivate their respective software functions independently from each other.

Aspect 9 according to any one of aspects 1 to 8 the operations further comprising providing the list of second software functions to a second remote device that are not accessible by the second remote device wherein the second remote device has remote access to a third software function receiving from the second remote device a second request for the software function requested by the first remote device and upon receiving the second request providing the second remote device independently from the first remote device remote access to the requested software function by transmitting second access data for the requested software function to the second remote device after providing the second remote device the remote access to the requested software function receiving from the second remote device a deactivation command for the requested software function or the third software function and based on the deactivation command deactivating independently from the first remote device the remote access of the second remote device to the requested software function or the third software function.

While generally described as computer implemented software embodied on tangible media that processes and transforms the respective data some or all of the aspects may be computer implemented methods or further included in respective computer systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

Reference numbers and designations in the various drawings indicate exemplary aspects implementations or embodiments of particular features of the present disclosure.

This disclosure generally relates to software computer systems and computer implemented methods for providing a remote device remote access to multiple software functions that can dynamically be switched on or off. Specifically a flexible distribution of remote access of software extensions to remote devices is provided which is especially adapted to cloud computing network environments. Implementations of the present disclosure described herein may provide one or more of the following advantages 

First remote access to multiple software functions natively created at one or more servers e.g. in a cloud computing system may be provided to remote devices in an easy and rapid manner with near zero propagation and adoption efforts.

Second a flexible access to software extensions or additional software is provided independent of platform technology or location of the platform.

Third a user of a remote device may dynamically switch on and off particular software functions e.g. depending on a current business requirement.

Fourth a cloud computing environment is described that provides a one tenant on demand remote access to multiple software functionalities.

An on demand software products can be a software as a service SaaS system in which software and its associated data are hosted centrally for example in a cloud computing environment and are accessed by users using a client e.g. a web browser over the internet. The on demand software product may include functionality for integrated end to end business processes across several modules including Customer Relationship Management CRM Financial Management FM Project Management PM Supply Chain Management SCM Supplier Relationship Management SRM Human Resources Management HRM Executive Management Support EMS and Compliance Management CM . CRM supports processes that span marketing sales and service activities. FM can be another module that helps provide companies with a single up to date view of the financial condition by integrating core business processes and financials that span financial management accounting and cash flow management. PM can contain an integrated project management solution. SCM can cover supply chain setup management supply chain planning and control and manufacturing warehousing and logistics. SRM focuses on relationships with supplies procurement processes aimed at reducing cost and to perform self service procurement. HRM spans organizational management human resources and employee self service. EMS can empower management with more control over the business and better decision making with real time analytics for tracking business aspects. CM helps companies maintain compliance with changing laws and regulations and to meet regulatory standards. Some all or other modules or functionalities may exist in particular on demand products.

The term tenant refers to a system providing a set of business applications belonging to or rented by a particular customer or business entity. Several employees of that particular customer or business entity can be users of that tenant and use the business applications provided by or available on this tenant. A multi tenant architecture may provide a single version of the business application which is centrally hosted in a cloud computing environment and which is provided to multiple tenants. A customer usually may only alter a set of predefined configuration options in the business application within predefined boundaries. This may limit the possibilities to adapt software products such as business or networked applications to the specific needs of the customer and in particular usually does not allow to switch functionality on and off in a flexible manner. In contrast to the one tenant architecture described herein in the conventional multi tenant architecture multiple tenants may be needed for different bundles of software functions desired by a customer. With the one tenant architecture the customer may augment existing software functions by additional on demand software functions by using a single tenant while being provided with dynamic switch on or off functionality for the software functions.

The illustrated environment of includes one or more front end clients . The front end client may be associated with a particular business application or development context as well as a particular platform based application system. The front end client may be any computing device operable to connect to or communicate with at least one of the backend servers using a wireline or wireless connection via the network or another suitable communication means or channel. In some instances the front end client may be a part of or associated with a business process involving one or more business applications or alternatively a remote developer associated with the platform or a related platform based application.

In general the front end client includes a processor an interface a networked application or application interface a graphical user interface GUI and a memory. In general the front end client includes electronic computer devices operable to receive transmit process and store any appropriate data associated with the environment of . As used in this disclosure the front end client is intended to encompass a personal computer laptop tablet PC workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. The front end client or tenant may be a mobile communication device. For example the front end client may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of one or more business applications on demand platforms and or the front end client itself including digital data visual information or GUI. Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of front end client through the display namely the GUI. The networked application or application interface can enable the front end client to access and interact with applications and modules in backend server systems using a common or similar platform. It will be understood that there may be any number of front end clients associated with or external to environment . For example while illustrated environment includes one front end client alternative implementations of environment may include multiple clients communicably coupled to the one or more of the systems illustrated. In some instances one or more front end clients may be associated with administrators of the environment and may be capable of accessing and interacting with the settings and operations of one or more business applications and or other components of the illustrated environment . Additionally there may also be one or more additional front end clients external to the illustrated portion of environment capable of interacting with the environment via the network . Further the terms client customer and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the front end client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers. In general clients may usually belong to one customer or company. Several employees of the customer called users can use the applications deployed on the corresponding client. For instance the term client refers to a system providing a set of business applications belonging to or rented by a particular customer or business entity. Several employees of that particular customer or business entity can be users of that client and use the business applications provided by or available on this client.

The backend servers represent dedicated and or ad hoc systems built using the platform technology for coordinating collaboration with other systems associated with and executing on platform related technology. The coordinating system is used to manage and operate the system and clients belonging to a cloud computing environment providing knowledge of and connections to the various systems clients and clients therein. The backend servers are enhanced to provide clients remote access to software functions managed at the backend servers . The front end client can access certain business applications built upon a similar or common on demand platform. For example the front end client may request certain data or data objects in a business application running in the backend server and the request may be executed via the first backend server at the second backend server where the requested data is stored as a master copy. The data stored in the second backend server may be locked and accessed by the first backend server and interacted with the front end client . In other instances the data may be used by an application associated with one of the other backend servers for processing applications associated with those systems. The environment is an example and in alternative implementations the elements illustrated in may be included in or associated with different and or additional servers clients networks and locations other than those as shown. For example one or more of the components illustrated within the backend servers may be located in multiple or different servers cloud based or cloud computing networks or other locations accessible to the backend servers e.g. either directly or indirectly via network .

In general the backend servers can be any server or system that stores manages and executes functionality associated with an on demand platform including assisting in establishing ad hoc collaboration business networks between two or more users or entities executing applications based on a common platform. In some instances the backend servers may execute one or more business applications e.g. of . For example each backend server may be a Java 2 Platform Enterprise Edition J2EE compliant application server that includes technologies such as Enterprise JavaBeans EJB J2EE Connector Architecture JCA Java Messaging Service JMS Java Naming and Directory Interface JNDI and Java Database Connectivity JDBC . In some instances each of the backend servers may store a plurality of various applications while in other instances the backend servers and may be dedicated servers meant to store and execute certain business applications built based on the on demand platform using the on demand platform technology and on demand platform business content. In some instances the backend servers may include a web server or be communicably coupled with a web server where one or more of the business applications associated with the backend servers represent web based or web accessible applications accessed and executed through requests and interactions received on the front end client operable to interact with the programmed tasks or operations of the corresponding on demand platform and or business applications.

At a high level the backend servers include an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . The backend servers illustrated in can be responsible for receiving requests from one or more front end clients as well as any other entity or system interacting with the backend servers including desktop or mobile client systems responding to the received requests by processing said requests in an on demand platform and or an associated business application and sending the appropriate responses from the appropriate component back to the requesting front end client or other requesting system. Components of the backend servers can also process and respond to local requests from a user locally accessing the backend servers . Accordingly in addition to requests from the front end client illustrated in requests associated with a particular component may also be sent from internal users external or third party customers and other associated business applications business processes as well as any other appropriate entities individuals systems or computers. In some instances either or both an on demand platform and or a business application may be web based applications executing functionality associated with a networked or cloud based business process.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates three backend servers environment can be implemented using any number of servers as well as computers other than servers including a server pool. Indeed the backend servers may be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further the illustrated backend servers may be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system.

The first backend server is illustrated in details in . The first backend server includes an interface a processor a memory a business application and other components further illustrated in . In some instances the backend servers and its illustrated components may be separated into multiple components executing at different servers and or systems. For example while illustrates the business application and the processor as separate components other example implementations can include the processor within a separate system as well as within as part of the business application s inherent functionality. Thus while illustrated as a single component in the example environment of alternative implementations may illustrate the backend servers as comprising multiple parts or portions accordingly.

In the interface is used by the first backend server to communicate with other systems in a client server or other distributed environment including within environment connected to the network e.g. one of the front end clients as well as other clients or backend servers communicably coupled to the network . The term interface generally includes logic encoded software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or the interface s hardware is operable to communicate physical signals within and outside of the illustrated environment . Generally the backend servers may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment i.e. among the backend servers and or one or more front end clients as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network including those not illustrated in . In the illustrated environment the network is depicted as a single network but may be comprised of more than one network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. In some instances one or more of the components associated with the backend servers may be included within the network as one or more cloud based services or operations.

The term network refers to all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In the illustrated example at least a portion of the network includes a portion of a cellular or mobile data network or other network capable of relaying SMS messages. In some instances a portion of the network may be a virtual private network VPN . Further all or a portion of the network can include either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

As illustrated in the first backend server includes a processor . Although illustrated as a single processor in the backend server two or more processors may be used in the backend server according to particular needs desires or particular embodiments of environment . The backend servers and as well as other backend systems may similarly include one or more processors. The term processor refers to a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of the backend server and specifically the functionality associated with the corresponding business application . In one implementation the server s processor executes the functionality required to receive and respond to requests and instructions from the front end client as well as the functionality required to perform the operations of the associated business application and an on demand platform among others.

At a high level the term business application and networked application described in this specification refer to any application program module process or other software that may execute change delete generate or otherwise manage information associated with the backend server or the client device and in some cases a business process performing and executing business process related events. In particular business processes communicate with other users applications systems and components to send receive and process events. In some instances a particular business application may operate in response to and in connection with one or more requests received from an associated client or other remote client. Additionally a particular business application may operate in response to and in connection with one or more requests received from other business applications external to the backend server . In some instances the business application can be a networked application for example the business application is built on a common platform with one or more applications in either or both of the backend servers and . In some instances the business application may request additional processing or information from an external system or application. In some instances each business application may represent a web based application accessed and executed by the front end client via the network e.g. through the Internet or via one or more cloud based services associated with the business application .

Further while illustrated as internal to the backend server one or more processes associated with a particular business application may be stored referenced or executed remotely. For example a portion of a particular business application may be a web service that is remotely called while another portion of the business application may be an interface object or agent bundled for processing at a remote system. Moreover any or all of a particular business application may be a child or sub module of another software module or enterprise application e.g. the backend servers and . Still further portions of the particular business application may be executed or accessed by a user working directly at the backend servers as well as remotely at corresponding front end client 

Regardless of the particular implementation software may include computer readable instructions e.g. programming code firmware wired or programmed hardware or any combination thereof on a tangible and non transitory medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated environment the processor executes the corresponding business application stored on the associated backend servers . In some instances a particular backend server may be associated with the execution of two or more business applications and other related components as well as one or more distributed applications executing across two or more servers executing the functionality associated with the backend servers.

The memory may store various objects object models and data including classes frameworks applications backup data business objects jobs web pages web page templates database tables process contexts repositories storing services local to the backend server and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the backend server and its functionality. In some implementations including in a cloud based system some or all of the memory may be stored remote from the backend server and communicably coupled to the backend server for usage. As described above memory can include one or more meta models associated with various objects included in or associated with the underlying platform. Specifically memory can store items and entities related to the business application and or other collaboration related entities or components. Some or all of the elements illustrated within memory may be stored external to the memory . These items may be made accessible to the business application as illustrated in . In an aspect the term business object is a representation of an intelligible business or non business entity such as an account an order employee an invoice or a financial report.

The GUIs associated with each tenant A and B may comprise a graphical user interface operable to for example allow the user of a tenants A and B to interface with at least a portion of the business application the on demand platform and their associated operations and functionality. Generally the GUI provides the particular user with an efficient and user friendly presentation of business data provided by or communicated within the system. The GUI may comprise a plurality of customizable frames or views having interactive fields pull down lists and buttons operated by the user. For example the GUI may provide interactive elements that allow a user to interact with a particular component within and or external to environment . Different portions of the corresponding component s functionality may be presented and accessible to the user through the GUI such as through an application on platform e.g. a web browser . Generally the GUI may also provide general interactive elements that allow a user to access and utilize various services and software functions of a particular component. In some instances the application on platform may be used to access various portions of different platform based application systems or the business network coordinator system . In some instances the application on platform may be an agent or client side version of the business application or other suitable component.

Each of the tenants A and B includes a business application on platform and . The business application on platform and can be realized on a web browser running on a remote computer. As an end user of an SaaS the tenants A and B can access various modules of the business applications without previous local installation of the business applications as components of the business application on platforms or can be remotely accessed or downloaded based on the demand of the tenant A and B

At least some of the communications between the business network coordinator system and the tenants A and B may be performed across or via network . In general environment depicts an example configuration of a system for establishing business networks using applications built on a shared platform in a cloud computing environment such as environment . The illustrated system includes development technology and hosted and managed services and applications built on top of the underlying platform technology. The business network coordinator system represents a dedicated and or ad hoc system built using the platform technology for coordinating collaboration with other systems associated with and executing on platform related technology. The coordinating system is used to manage and operate the system and tenants belonging to the cloud computing environment providing knowledge of and connections to the various systems clients and tenants therein. The environment is an example and in alternative implementations the elements illustrated in may be included in or associated with different and or additional servers clients networks and locations other than those as shown. For example one or more of the components illustrated within the business network coordinator system may be located in multiple or different servers cloud based or cloud computing networks or other locations accessible to the business network coordinator system e.g. either directly or indirectly via network .

In general the business network coordinator system is any server or system that stores manages and executes functionality associated with an on demand platform including assisting in the establishing ad hoc collaboration business networks between two or more users or entities executing applications based on a common platform. In some instances the business network coordinator system may execute one or more business applications . For example each business network coordinator system may be one of the backend servers and illustrated in . In some instances each business network coordinator system may store a plurality of various applications while in other instances business network coordinator systems may be dedicated servers meant to store and execute the business applications which is built based on the on demand platform technology and business content on demand platform using the on demand platform technology and on demand platform business content. The coordinator or central system may be one or more dedicated application servers for managing all systems tenants that are part of a cloud computing environment. In some instances the business network coordinator system may comprise a web server or be communicably coupled with a web server where one or more of the business applications associated with the business network coordinator system represent web based or web accessible applications accessed and executed through requests and interactions received on the tenants A and B i.e. via applications operable to interact with the programmed tasks or operations of the corresponding on demand platform and or business applications

The business network coordinator system illustrated in can be responsible for receiving application software function requests from one or more tenants A and B as well as any other entity or system interacting with the business network coordinator system including desktop or mobile client systems responding to the received requests by processing said requests in the on demand platform e.g. store server of and or the associated business application and sending the appropriate responses from the appropriate component back to the requesting tenants A and B or other requesting system. The business network coordinator system may perform a central landscape server s functionality e.g. the functionality of cloud solutions landscape directories. Such functionality may comprise storing data packages associated with service extensions making available the data packages to various platforms that are based on various technologies and monitoring the network landscape by the system landscape monitor .

Components of the business network coordinator system can also process and respond to local requests from a user locally accessing the business network coordinator system . Accordingly in addition to requests from the tenants A and B illustrated in requests associated with a particular component may also be sent from internal users external or third party customers and other associated business applications business processes as well as any other appropriate entities individuals systems or computers. In some instances either or both of the on demand platform and or the business application may be web based applications executing functionality associated with a networked or cloud based business process.

As illustrated in the interface enables an identity management system to connect with the business network coordinator system via a registry connection . The identity management system may be used to identify users e.g. tenants A or B to whom access to shared data is granted when they access shared data across systems or tenants. The usage of one or more identity management systems provides support for single sign on services to be supported To avoid re authentication the identity management system can provide the required user mapping. The business network coordinator system may further include internal or external memory which stores software solution packages SP as discussed in context of wherein a solution package may comprise one or more software solutions and optionally one or more sellable units SU . Remote access to one or more of the software components may be provided via network to tenants upon a request received from the tenants at the business network network coordinator system .

The identity management system can identify and manage users related to particular tenants in a system such as a country a network or an organization and control access to the resources in that system by placing restrictions on the established identities of the tenants. The identity management system can be multidisciplinary and covers many dimensions such as technical legal security and organizational dimensions. In some implementations an identity can be constructed from a small set of axiomatic principles. For example all identities in a given abstract namespace may be unique and distinctive and or such identities can bear a specific relationship to corresponding entities in the real world. An axiomatic model of this kind can be considered to express pure identity in the sense that the model is not constrained by the context in which it is applied. In general an entity and or user can have multiple identities and each identity can consist of multiple attributes or identifiers some of which are shared and some of which are unique within a given name space. The identity management system can perform and or support user mapping to the same identity removing a need to re authenticate uses when the same identity attempts access over a particular tenant or system such as when accessing collaboration data on different systems. In some instances the identity management system may be communicably coupled to the business network coordinator system via network .

Generally the business network coordinator system may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment i.e. between the business network coordinator system and or one or more tenants A and B as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network including those not illustrated in

In the illustrated environment each processor executes the corresponding on demand platform and the business application stored on the associated business network coordinator system . In some instances a particular business network coordinator system may be associated with the execution of two or more business applications and other related components as well as one or more distributed applications executing across two or more servers executing the functionality associated with the business network coordinator system . Further while illustrated as internal to the business network coordinator system one or more processes associated with a particular business application may be stored referenced or executed remotely. For example a portion of a particular business application may be a web service that is remotely called while another portion of the business application may be an interface object or agent bundled for processing at a remote system not illustrated or a particular tenant A or B e.g. the application on platform . Moreover any or all of a particular business application may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the particular business application may be executed or accessed by a user working directly at the business network coordinator system as well as remotely at corresponding tenants A and B

The illustrated business application may be created and developed based on an underlying software platform or platform layer which can be used to provide functionality defined by the platform as well as additional functionality available by building software applications upon the platform layer using components and entities designed or adapted for use with the platform. By creating the additional functionality the platform can be extended and added to by a plurality of developers providing for a fluid means of enhancement. In an aspect the business application are enhanced by environment as described below in context of .

In some instances additional applications can be built on top of the original system by many different developers and development teams to create new products and software. The on demand platform and its corresponding consolidated on demand platform can maintain a metadata repository storing information on the various models and their associated definitions and metadata across an entire development ecosystem while the on demand platform may be used on which to create or to base newly developed applications or software functions such as solution packages SP solutions S or sellable units SU as described in context of .

In some implementations the business network coordinator system may include a customer control center a system landscape monitoring a tenant and system operations manager and a collaboration and metadata repository . The tenant B can be connected to the business network coordinator system as a potential collaboration partner. The exact released and accessible data are defined and controlled via a user authorization mechanism provided via the on demand platform on which the business applications are based. The business network coordinator system may include the on demand platform. A functional and instance based authorization module which is part of the on demand platform can ensure that users can access only the activated software functions e.g. in SP S SU where the particular user is authorized to view the activated software functions. The activated or deactivated software functions and services can be managed centrally via the collaboration and data sharing work center provided in the business applications 

In general the customer control center provides one or more application programming interfaces APIs to the tenants A and B for accessing the operations of the on demand platform remotely. In some instances use of one or more APIs at the Customer control center can allow for pre publishing of one or more models to and or from the business network coordinator system of . The customer control center allows tenants such as the tenants A and B access to the on demand platform and vice versa. The customer control center may include a graphical user interface for selection of administration tools. For example the tenants may monitor system health retrieve system information execute maintenance program analyze system performance improve execution procedure organize files and information and perform other control tasks via the customer control center . In some aspects the customer control center enables collaboration functionalities when tenants such as the tenants A and B access and operate on the on demand platform via the customer control center .

The system landscape monitor can monitor operations modules and activities of the business network coordinator system as well as those systems associated with the business network coordinator system including the tenants and other systems and applications. The system landscape monitor may be accessed by tenants such as the tenants A and B . In some implementations the system landscape monitor can collect and present a list of active tenants using the on demand platform . The system landscape monitor may categorize the active tenants by areas of business technology market orientation and other aspects of the tenants. In some implementations the system landscape monitor can show resource distribution or allocation or both within the business network coordinator system and enable administrators or tenants with administrator rights to modify and improve the resource distribution or allocation or both.

The tenant and system operation manager may support communications between tenants such as tenants A and B and the business network coordinator system . The tenant and system operation manager can manage central instances of network establishments between tenants and enable the business network coordinator system to monitor the network traffic upon establishment agreement from all participants.

The on demand modules in memory may include various functionalities of the business network coordinator system and can be selectively provided to some or all of the tenants. As previously described the on demand modules in the business network coordinator system may include CRM FM PM SCM SRM HRM EMS CM and others. In case of CRM in the on demand module the business network coordinator system may be the CRM server in . For example tenant A may request services of a subset of the on demand modules from the application on platform such as CRM HRM and EMS. Tenant B may request a different subset of the on demand modules on the application platform such as FM HRM and EMS.

Turning now to . describes an exemplary classification of software functionalities whose access can be provided to the remote device or tenant. In an aspect a solution S S S S is a bundle of software functionalities F F F with its own branding and with a price tag for the solution. In its programming code it is clearly defined what is in scope for this solution and what is in some cases without up selling not in scope of this solution. There may be user interfaces included in its functionalities. Inside a solution the customer may select between different business scenarios and scenario variants. A customer may buy additional functionality sellable unit SU and enhance the functional scope of his solution. A customer may have several solutions in use in parallel. Examples of a solution are SAP Business ByDesign SAP Financials OnDemand SAP Travel OnDemand SAP Sales Service OnDemand.

In an aspect a solution package SP SP SP may combine software functionalities F F from more than one solution S S offered for a dedicated price. The customer gets a collection of functionality F F with a certain solution package SP SP. This can be achieved by combining several solutions in one SP or combining a solution with several sellable units. A solution package may not contain more functionality than the sum of solution functionalities.

In an aspect a sellable unit SU SU SU includes software functionality F which can be added to the scope of a solution S after an buying process. The sellable unit SU may be a value added feature on top of a solution S . This may allow enhancing of software functions of solutions with software functions of sellable units and provide remote access to such enhanced software packages to the tenant. The term software function may thereby be any data processing step. The software functions may show dependencies such as data processing steps that require data input from other the output of other functions F . Before buying the SU the SU s functionality is not available visible for the customer. A SU is a self contained optional functionality. The SU might have a pre requisite in order to be used. Some functionality can be a sellable unit for one solution but standard functionality for another solution. A sellable unit is enhancing the basic functionality of a solution or it is the foundation for additional scenarios scenario variants in this solution. A SU may not be usable without having a solution S activated. For example the solution S may be a software function e.g. programming code that is self contained and may be run independently to other functions while the SU may need to be attached to or embedded in programming code of one or more solutions S . The solution product owner may need to decide what are the sellable units which are to be offered. It might be that a sellable unit is just included in a solution or solution packages but not as own item which can be bought and run stand alone.

In an example aspect an SP may be SAP Financials OnDemand plus Activity Management or SAP Financials OnDemand plus Expense Reporting or SAP Financials OnDemand plus Expense Reporting plus Travel Planning. In solution package SP is provided to the remote device tenant and comprises solution S as well as sellable units SU and SU. S comprises software functions F wherein function F depends on function F. SU includes software function F which is also part of solutions S and S which are not part of solution package SP. SU includes function F which is part of solution S. Software function F may be offered as sellable unit SU as long as it does not have a pre requisite dependency which is not supported by S. In this example F may not be a sellable unit because F is required which is not part of .

Turning now to . shows an exemplary implementation for providing a tenant remote access to multiple software functions that can dynamically be switched on or off. Environment may be environment of e.g. a network such as a cloud computing environment. Environment may include tenant such as tenant in a CRM server a store server and a service provider cockpit server . CRM server store server and service cockpit provider may be one or more servers such as business network coordination system in . The entities may be communicatively coupled by a wired or wireless communication within network .

In an example aspect for the case of a new customer being interested in using one or more available software functions the new customer may contact a sales person for a requested software function the customer desires. The sales person may place an order for the requested software function at the CRM server . The placement of the order may trigger a provisioning of the customer tenant . The CRM server may indicate the service provider cockpit the requested software function i.e. the solution S the sellable unit SU or the solution package SP associated with the order of the customer . The service provider cockpit may then create the tenant and release the requested software function to the tenant . In an aspect the tenant may be provided with a business configuration BC workspace which may be a user interface on the tenant indicating e.g. displaying on a screen software functions e.g. along with their price to be paid that have been ordered by the customer and optionally software functions which may be combined with the requested software functions or which may be added to the existing software portfolio as an alternative software option.

In case the customer wants to add software functionality to his software portfolio the customer may select at the BC workspace one or more of the software functions which have so far not been accessible by the customer. Such a requested switch on of an additional software function may result in a request being placed at the store server where the customer tenant is recognized e.g. by a customer identifier included in the request and after the customer paid the price a release of the requested software function i.e. the solution S the sellable unit SU or the solution package SP associated with the order of the request is performed via the service provider cockpit . In general the release of a software function may include transmitting access data such as a Product and Production Management System PPMS key determining if the most recent version of a software function is installed on a system and can install or upgrade that package from a local or remote host. In an aspect when the store server recognizes the customer it may augment the requested software function by an add on software function provided by a partner as a part of a loyalty program. The partner add on software function may be combinable with the software functions the tenant has already remote access to or may be additional separate software functions that may operate independently from the other software functions accessed by the tenant .

In an aspect one or more of servers may perform operations comprising providing a list of second software functions to a first remote device that are not accessible by the remote device wherein the remote device has remote access to a first software function receiving from the remote device a request for a software function of the provided list of second software functions and upon receiving the request providing the remote device remote access to the requested software function by transmitting access data for the requested software function to the remote device after providing the remote access to the requested software function receiving from the remote device a deactivation command for the requested software function or the first software function and based on the deactivation command deactivating the remote access of the remote device to the requested software function or the first software function. In an aspect the operations may further comprise after deactivating the remote access of the remote device to the requested software function or the first software function receiving an activation command for the respective function and based on the activation command activating the remote access of the remote device to the respective function. In an aspect the remote access to the requested software function may comprise remote access to the first software function augmented by the requested software function.

In general buying the software function process from the CRM server or the store server may trigger follow on operations via the service provider cockpit server into the customer tenant . Such follow on operations may comprise accessing data that is locally stored on the remote device processing the local data and forwarding the processed data from the requested software function to the first software function or may include an automatic configuration in the tenant or generation of software artifacts. Additionally a first activation and or configuration by the customer may be performed as follow on operations.

Turning now to which illustrates an exemplary process of a customer buying a solution S in environment of . At the customer signs a contract for on demand solution S . At the order or request is created in CRM server . At a hosting system e.g. or receives the order to provide tenant for on demand solution S . At customer gets tenant access data . At the customer can switch on S functionalities.

Turning now to which illustrates an exemplary process of a customer buying a solution package SP in environment of . At the customer signs contract for on demand solution package SP S SU . At the order or request is created in CRM server . At a hosting system e.g. or gets the order to provide tenant for on demand solution package SP . At customer gets tenant access data while at hosting gets the order to make sellable unit SU visible in tenant . At the customer can switch on SP functionalities.

Turning now to which illustrates an exemplary process of a customer buying a sellable unit SU in environment of . At the customer is accessing the store . At the customer is buying sellable unit SU in store. At a hosting system e.g. or gets the order to make sellable unit SU visible in tenant . At the customer can switch on SU functionalities.

Turning now to which illustrate an exemplary business configuration workspace user interface UI for selecting or deselecting software functions. The BC workspace UI may comprise one or more icons that are configured to be activated e.g. selected or deactivated e.g. deselected and that are associated with software functions that may be purchased by the customer e.g. by the user of the tenant . The customer may select activate or deselect deactivate some of the listed software functions . In an aspect once a software function is selected a software function related to the selected software function may be suggested e.g. by highlighting the related software function or by automatically activating selecting the related software function . In an aspect the BC workspace UI may indicate a dependency of the related software function in relationship to the selected activated software function of the one or more software functions . In an aspect the selected activated software function may require data communication with the related software function . For example the selected activated software function may require as input data from the output of the related software function . In an aspect a deselected deactivated software function may require data communication with a related software function . For example the related software function may require as input data from the output of the deselected deactivated software function

In an aspect standard functionality of the BC workspace UI may offer a documentation of the functionality Tab strip Overview Relevance and an explanation per Scoping Element why the related software function is automatically selected or de selected. In this example of the Business Topic Sales and Service Invoicing is automatically selected because Selling Products and Services Business Package is selected e.g. by the customer . This Business Topic may not be de selected as long as the Business Package is selected. The select icon of this software function is accordingly in a greyish color which indicates this for the user. In other examples there are scoping elements which may not be selected as long as other scoping elements are not selected. This is then indicated accordingly in the dependency tab strip .

In an aspect the Business Topic Over The Counter Sales may be such a dedicated functionality which is not in the standard license of the current customer. As long as this functionality is not bought in store the appropriate software function may not be selectable. This is indicated by icon here one may want to re use the standard scoping UI behavior for Scoping software functions which are automatically de selected.

In the related software function is an optional function which can be used together e.g. the activated software function may be augmented by the related software function with the already activated software function . In an aspect the related software function is an optional function which can be used in addition and or in parallel to the already activated software function . In an aspect the dependency to the already activated software function may be provided to the tenant for display on the UI . In an aspect the customer may have the opportunity to access the store server directly e.g. via a button . As an option the price may already be displayed with the associated software function . In the BC workspace UI offers the opportunity to filter software functions. Additional filter may be offered to display the functionalities which are not included in the standard license or added to the standard license. In an aspect an overview may be provided which indicates software functions which may have conflicts with other software functions further software functions which may be purchased on demand. In general the BC workspace UI may be used for a configuration of the software functions wherein it is visible on the BC workspace UI which software function may be additionally bought or ordered or has already been bought or ordered and where the additional software function may enhance the existing business processes. So in addition to where it is shown that existing constraints may be used to determine what may be bought or ordered this filter in may be a part of the process of augmenting software functions by additional software functions.

Turning to illustrates an exemplary method or process for providing to a remote device remote access to multiple software functions including a dynamic switch on off of the software functions.

One or more servers e.g. CRM server store server or service provider cockpit in provision a list of software functions configured to be made remotely accessible to a remote device such as customer tenant tenant in or tenant in . One or more rules may be defined which define which sellable units The tenant may include one or more processors and a business configuration workspace 

At the tenant selects one or more software functions among the non accessible software functions and optionally deselecting one or more software functions among the accessible software functions.

At the server receives from the remote device a request for a software function of the provided list of second software functions. The request may include a payment for the requested software function according to a price which has been indicated in the list on the BC workspace

At the server recognizes the remote device and based on the request providing the remote device remote access to the requested software function and optionally inactivating remote access of the deselected software function. In an aspect the request may include an identifier of the customer tenant which may be compared to a list of identifiers in a customer database connected to the server .

At the server transmits access data for the requested software function to the remote device at which the access data is received.

At the tenant selects one or more software functions among the non accessible software functions and or deselects one or more software functions among the accessible software functions. Upon step process steps and are repeated or the process ends.

The preceding figures and accompanying description illustrate example processes and computer implementable techniques. But environment or its software or other components contemplates using implementing or executing any suitable technique for performing these and other tasks. It will be understood that these processes are for illustration purposes only and that the described or similar techniques may be performed at any appropriate time including concurrently individually or in combination. In addition many of the steps in these processes may take place simultaneously concurrently and or in different orders than as shown. Moreover environment may use processes with additional steps fewer steps and or different steps so long as the methods remain appropriate.

In other words although this disclosure has been described in terms of certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art.

