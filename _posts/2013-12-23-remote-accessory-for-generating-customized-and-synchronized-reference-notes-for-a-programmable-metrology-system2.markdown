---

title: Remote accessory for generating customized and synchronized reference notes for a programmable metrology system
abstract: A method for operating a remote device in relation to a programming environment of a programmable metrology system is provided. The metrology system may comprise an accessory interface portion comprising an accessory communication portion, and a user interface comprising a programming environment having part program instruction representation representations in an editing window, including an active “current instruction” representation. The method provides a connection between the remote device and the programming environment, which outputs current instruction identifiers for current instruction representations. The remote device receives a current instruction identifier and operates responsive to the that current instruction identifier to display a current instruction reference information user interface portion configured such that it is specifically related to a generic instruction type corresponding to the current instruction representation. That user interface may display customized reference information previously configured by a user of the remote device in association with that generic instruction type.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09606525&OS=09606525&RS=09606525
owner: Mitutoyo Corporation
number: 09606525
owner_city: Kanagawa-ken
owner_country: JP
publication_date: 20131223
---
Commonly used programmable metrology systems may include a machine vision inspection system MVIS and or a coordinate measuring machine CMM . One exemplary prior art MVIS which can be characterized as a general purpose off line precision vision system is the commercially available QUICK VISION series of PC based vision systems and QVPAK software available from Mitutoyo America Corporation MAC located in Aurora Ill. The features and operation of the QUICK VISION series of vision systems and the QVPAK software are generally described for example in the QVPAK 3D CNC Vision Measuring Machine User s Guide published January 2003 and the QVPAK 3D CNC Vision Measuring Machine Operation Guide published September 1996 each of which is hereby incorporated by reference in its entirety.

General purpose precision machine vision inspection systems such as the QUICK VISION system are generally programmable to provide automated video inspection. Such systems typically include GUI features and predefined image analysis video tools such that operation and programming can be performed by non expert operators. For example U.S. Pat. No. 6 542 180 hereinafter the 180 patent which is incorporated herein by reference in its entirety teaches such a vision system that uses automated video inspection. As taught in the 180 patent automated video inspection metrology instruments generally have a programming capability that allows an automatic inspection event sequence to be defined by the user for each particular workpiece configuration. Such programming can be implemented as text based programming or through a recording mode that progressively learns the inspection event sequence by storing a sequence of machine control instructions and individual video tool parameters corresponding to a sequence of inspection operations defined and or performed by a user e.g. with the aid of various semi automatic or automatic video tool operations or through a combination of both methods. Such a recording mode is often referred to as learn mode or training mode. In either technique the machine control instructions and individual video tool parameters are generally stored as a part program that is specific to the particular workpiece configuration and automatically perform a predetermined sequence of inspection operations during a run mode of operation. Part programs for CMMs may be programmed in analogous ways. Exemplary CMMs are disclosed for example in U.S. Pat. Nos. 7 251 580 6 044 569 and 8 516 712 each of which is hereby incorporated herein by reference in its entirety.

Many users and programmers of such metrology systems use the recording mode outlined above in order to create and or edit part programs. The resulting part program operations or instructions may be represented to such users in a simplified graphical representation or the like. Many metrology systems are designed such that unskilled users need not view or comprehend the underlying part programming language instructions. Some of the commercially available simplified graphical representations of part programs include the ability to add explanatory and or supplementary information to the part program representation by simplified comment statements or the like. However such capabilities are typically rudimentary. Adding extensive and or complex supplementary information e.g. personalized user notes or explanations at a particular location in a part program representation and such that it is easily accessible or viewable is presently beyond the capability of most such systems and most users.

Furthermore metrology system programming environments have conventionally only been linked to dedicated remote devices such as dedicated tablet devices or teaching pendants or the like for example as disclosed in US Patent Application Publication No. 2012 0229662 A1 which is hereby incorporated herein by reference in its entirety. The requirement for such remote devices to have dedicated and or specially programmed interface features constrains both their availability and their operation. Similar to their associated host systems such dedicated remote devices may require their users to have specialized training to operate them in conjunction with their host system. Also similar to their associated host systems such dedicated remote devices are generally shared among a number of users and it is not desirable for a single user to customize them for their personal idiosyncrasies nor possess them and transport them for their exclusive use. Furthermore the user interfaces for such remote devices have typically not been directed toward the problem of making it easy for relatively unskilled users to view and or create customized supplementary information e.g. reference information or explanations associated with a particular instruction or a particular type of instruction in a part program while operating in a programming environment for the host system. It would be desirable for a user to be able to view supplementary or reference information associated with a particular instruction or type of instruction in a part program while operating in a programming environment for the host system without encountering the aforementioned constraints and deficiencies in the available hardware and methods at their disposal. For example it would be desirable for a single user to customize such reference information for their personal idiosyncrasies easily locate a minimal amount of information that is customized according to their needs store such information on a device that they typically possess and or transport them for their exclusive use and easily connect that device to the programming environment of a corresponding programmable metrology system.

In contrast to the previously outlined constraints and deficiencies associated with the use of dedicated remote devices related to programmable metrology systems relatively unskilled users of such systems may frequently carry personal computing and or file storage devices e.g. tablets or smart phones or the like which they are already familiar with. On such devices they may desire to keep personal notes files and or pictures which help them document and remember programming commands and or system training special workpiece or setup features or other considerations related to part programming. Furthermore such personal computing and or file storage devices frequently include cameras Internet browsers and other devices and programs with which the user is familiar with and may prefer to use for generating additional reference information in relation to part programming. However relatively unskilled users lack the capability to connect such familiar personal devices to metrology systems as remote accessories. However the programming environments of metrology systems have not included features which facilitate the connection of such devices or features that allow convenient interaction between the programming environment and such remote devices not normally associated with the programmable metrology system.

Personal mobile or remote devices such as tablets or smart phones or the like have become more versatile and it would be desirable if programmable metrology systems included features such that they could easily be connected to provide the free familiar readily available functionality of such remote devices to supplement the native operations and programming environment capability of such metrology systems.

As disclosed herein remote devices not normally associated with a metrology system may cooperatively interact a programming environment of metrology systems in order to view and or create reference information which may aid a user in programming a metrology system. In particular such devices may be linked in a configuration with metrology systems such that relatively unskilled users may view and or create supplementary or reference information associated with a particular instruction or type of instruction in a part program and or its representation in an editing environment while creating and or editing a part programs. In various embodiments the remote device and or the programming environment may be configured such that the remote device operates in a way that is synchronized with an instruction or type of instruction that is the active current instruction in the programming environment. In various embodiments the supplementary or reference information may comprise or consist of information that is customized and stored on the remote device by a frequent user of the remote device e.g. its owner .

The controlling computer system may generally consist of any computing system or device such as a personal computer server computer minicomputer mainframe computer distributed computing environment that includes any of the foregoing and the like. One or more general purpose or custom processors and associated systems may execute software according to any appropriate known method to perform the functions described herein. Software may be stored in any appropriate known memory or known storage device. Software may include one or more program modules that include routines programs objects components data structures and so on that perform particular tasks or implement particular abstract data types. In distributed computing environments the functionality of the program modules may be combined or distributed across multiple computing systems or devices and accessed via service calls either in a wired or wireless configuration.

The vision measuring machine includes a moveable workpiece stage and an optical imaging system that may include a zoom lens or interchangeable lenses. The machine vision inspection system is generally comparable to the QUICK VISION series of vision systems and the QVPAK software discussed above and similar state of the art commercially available systems. The machine vision inspection system is also described in commonly assigned U.S. Pat. Nos. 7 454 053 7 324 682 8 111 905 and 8 111 938 each of which is incorporated herein by reference in its entirety.

A workpiece may be placed on the workpiece stage which is controlled such that the interchangeable objective lens moves between locations on the workpiece . One or more of the lights may emit respective source light or to illuminate the workpiece and reflected or transmitted workpiece light passes through the objective lens and the turret lens assembly two the camera system . The image captured by the camera system is output on a signal line to the control system portion . To alter the image magnification the rotation of the turret lens assembly may be controlled through a signal line or bus .

As shown in in various exemplary embodiments the control system portion includes a controller a power supply portion the input output interface a memory a workpiece program generator and executor a recorder translator and a learn mode portion a run mode portion and editing portion a surrogate data manager a program status manager a node manager an inter window auto scroll portion and an accessory interface portion which may be used to connect to remote device reference information accessory as described in greater detail below. Each of these components as well as the additional components described below may be interconnected by one or more data control buses and or application programming interfaces or by direct connections between the various elements.

The input output interface includes an imaging control interface a motion control interface a lighting control interface and a lens control interface . The lighting control interface controls the selection power on off switch and strobe pulse timing if applicable for the various corresponding light sources.

The memory includes an image file memory portion a workpiece program memory portion that may include a part program PP or the like and a video tool portion . The video tool portion includes video tool portion and other video tool portions which determine the GUI image processing operation etc. for each of the corresponding video tools. The video tool portion also includes a region of interest ROI generator that supports automatic semi automatic and or manual operations that define various ROIs that are operable in various video tools included in the video tool portion .

In general the memory portion stores data usable to operate the vision system to acquire an image of the workpiece that has desired image characteristics. The memory portion may also store inspection result data may further store data usable to operate the machine vision inspection system to perform various inspection and measurement operations on the acquired images e.g. implemented in part as video tools either manually or automatically and to output the results through the input output interface . The memory portion may also contain data defining a user interface operable through the input output interface .

The signal lines of the lights the signal line from the camera system and the signal line from the motor are all connected to the input output interface . In addition to carrying image data the signal line may carry a signal from the controller that initiates image acquisition.

One or more display devices e.g. the display of and one or more input devices e.g. the joystick keyboard and mouse of can also be connected to the input output interface . The display devices and input devices can be used to display a user interface which may include various user interface features that are usable to perform inspection operations and or to create and or modify part programs to view the images captured by the camera system and or to directly control the vision system components portion . In various embodiments the display devices and input devices are used to present various user interface features usable to allow rapid efficient intuitive and flexible editing of part programs on the machine vision inspection system .

The workpiece program generator and executor recorder translator learn mode portion run mode portion editing portion surrogate data manager program status manager node manager inter window auto scroll portion and the accessory interface portion may in one embodiment all be considered to be part of a general machine controller block MC that is linked to the controller . Additionally the remote device reference information accessory described in greater detail below may be linked to the controller e.g. through the accessory interface portion . The remote device information accessory may be considered to be an accessory outside of but communicating to inter operate with the control system portion in some embodiments. The workpiece program generator and executor is responsible for creating and executing part programs. The terms workpiece program and part program may be used interchangeably herein.

In accordance with the operations of the workpiece program generator and executor a user creates a part program for the workpiece the user generates part program instructions either by explicitly coding the instructions using a workpiece programming language or preferably by generating the instructions by operating the machine vision inspection system in a learn mode e.g. as controlled by the learn mode portion to provide a desired image acquisition training sequence. For example a training sequence may comprise positioning a workpiece feature in the field of view FOV setting light levels focusing or autofocusing acquiring an image and providing an inspection training sequence applied to the image e.g. using video tools . The learn mode operates such that the sequence s are captured or recorded and converted to corresponding part program steps i.e. instructions . These part program steps when the part program is executed in a run mode e.g. as controlled by the run mode portion will cause the machine vision inspection system to reproduce the trained image acquisition and inspection operations to automatically inspect a workpiece or workpieces matching the workpiece used when creating the part program.

The recorder translator is utilized for translating machine operations into part program code. In other words if a user performs an action e.g. such as altering a video tool that is used to measure a feature on a workpiece an instruction is generated that is translated into a machine readable language and a reverse translation may also be performed. As will be described in more detail below instructions in a part program may also be translated into instruction representations in a user interface. In some embodiments the part program instructions may be written in a markup type language code. In one specific example embodiment the markup language code may be XML code. The editing portion provides or activates various operations and user interface features related to editing a part program within an editing user interface portion which may include a part program representation window as described in greater detail below.

The surrogate data manager need not be present but may be used in some embodiments. Briefly the surrogate data manager links to surrogate data which may be recorded in a part program such that the program operation may be rapidly executed in a simulation mode using the surrogate during learn mode operations in order to support editing operations. The surrogate data manager is described in greater detail in commonly assigned U.S. patent application Ser. No. 13 297 232 the 232 application which is hereby incorporated herein by reference in its entirety.

The program status manager in one embodiment manages whether programs are protected or unprotected. In one implementation an unprotected part program may include stored surrogate data while a protected part program has surrogate data removed. In one example embodiment protected programs are programs for which the editing process has been completed such as may be utilized in a factory in a run mode.

In one embodiment the node manager is responsible for managing node numbers that are assigned to nodes in a part program. In one implementation within a representation of a part program each of the instruction representations is assigned a node number. In certain implementations an organizational tree structure may be utilized wherein there are parent nodes and child nodes. In certain implementations every line of a part program representation that is generated by the recorder translator is assigned a node number or a guaranteed unique identifier of the like by the node manager . As described in greater detail in commonly assigned U.S. patent application Ser. No. 13 676 061 the 061 application which is hereby incorporated herein by reference in its entirety in some embodiments the inter window auto scroll portion may utilize the node numbers assigned by the node manager to display associated part program elements and corresponding editing functions in different windows at the same time. In other words if a user wishes to see which measurements of a workpiece are related to which instruction representations and coded instructions in a part program the inter window auto scroll portion will automatically scroll in the respective windows to the relevant lines in the part program representation and or coded instructions that correspond to the relevant node number. One exemplary method and or implementation of inter window communication is described below with reference to . In some embodiments the accessory interface portion may interoperate with the node manager and or the inter window auto scroll portion using an analogous method such that the accessory operations user interface portion and or the remote device reference information accessory may receive and or send active node number information and or the associated part program instruction representations or the like according to principles and operations disclosed herein.

Regarding many features of may be further understood based on the descriptions of their analogous or substantially similar counterparts which are similarly depicted described and or referenced elements in the previously incorporated co pending 232 and 061 applications.

Generally speaking the accessory interface portion and the remote device current instruction responsive portion and other elements shown in are configured to provide relatively unskilled users with the capability to connect familiar personal devices to a metrology system as remote accessories to be used while creating and editing part programs. This is accomplished for example by providing user interface features and operations which facilitate the connection of such devices and features that allow users to easily view and or create supplementary or reference information associated with a particular instruction or type of instruction in a part program and or its representation in an editing environment while creating and or editing a part programs.

In various embodiments the accessory interface portion and the features included in the remote reference device information accessory are configured such that ease of connection and ease of use of the remote device reference information accessory in association with a metrology system programming environment is particularly emphasized. The accessory operations user interface and the remote device user interface may include commands dialog boxes and other display elements to support this emphasis for example as outlined below with reference to an exemplary embodiment shown in . The accessory communication manager and the remote device communication portion may include device communication circuits and or routines to support this emphasis for example as outlined below with reference to an exemplary embodiment shown in . The accessory communication manager and the remote device communication portion may facilitate communications between the programming environment and the remote device reference information accessory to support the operations of other elements shown in .

The accessory connection manager may include connection routines and related user interface features which register a remote device in relation to a metrology system programming environment for example as outlined below with reference to an exemplary embodiment shown in . The accessory data manager may operate in cooperation with the node association portion in order to receive and or display particular reference information exchanged between the remote device reference information accessory and the programming environment in association with a particular part program instruction representation e.g. a current part program instruction representation in the programming environment. In some implementations it may store or display reference information received from the remote device to support operations in the programming environment e.g. as previously outlined with reference to the operations of the remote device reference information window .

The node association portion is configured to support the operations of other elements of the accessory interface portion and or the remote device current instruction responsive portion . In one embodiment the node association portion may interoperate with the node manager and or the inter window auto scroll portion and or use an analogous method such that various elements of the accessory interface portion and the remote device reference information accessory may exchange current node number information and or the associated part program instruction representations and or the associated instruction responsive reference information or the like according to principles and operations disclosed herein. The node manager is described in greater detail in the previously incorporated 232 and 061 applications and one exemplary embodiment of the inter window auto scroll portion is outlined below with reference to .

Generally speaking the remote device reference information accessory may be any device capable storing viewing and or creating reference information that is relevant to a metrology system part program and that is connectable to the accessory interface portion e.g. through a network and or wireless connection such as Bluetooth or Wi Fi or the like . However as previously outlined users of programmable metrology systems may frequently carry personal computing and or file storage devices e.g. tablets or smart phones or the like which they are already familiar with and which are not dedicated or specially configured accessories of a metrology system. Such personal computing and or file storage devices frequently include cameras Internet browsers and other devices and programs with which the user is familiar with and may prefer to use for viewing and or creating instruction specific reference information while creating a part program. According to known methods such devices may be configured to include a locally resident application e.g. a downloaded and installed application that is customized to interact with a particular type of metrology system in the manner disclosed herein. For example such a program or app may provide routines that provide or are included in the remote device current instruction responsive portion and or the remote device user interface . In some embodiments in order to facilitate easy connection and or ease of use at least prior to connecting a remote device to the programming environment the remote device need not include a stored program or application customized to interact with the programming environment. Instead once it is connected to a metrology system such interactive routines may be automatically downloaded or offered for download to the remote device reference information accessory . However in some embodiments an Internet browser and or other applications previously resident on the remote device and not normally associated with a metrology system may provide all of the functions required in order to provide the features and operations disclosed herein for example by providing significant functionality through interactive webpages managed by the accessory interface portion along with cooperative features e.g. special filename conventions and or extensions or the like used on the remote device reference information accessory .

The remote device communication portion may include device communication circuits and or routines for example as outlined below with reference to an exemplary embodiment shown in . The remote device communication portion may provide and or manage communications to and from the remote device reference information accessory to support the various features and operations disclosed herein.

The remote device registration data may include information and operations that identify the remote device reference information accessory and support various features and operations of the accessory connection manager disclosed herein for example as outlined below with reference to an exemplary embodiment shown in .

The remote device current instruction responsive portion which may include a remote device file generator manager and or a remote device instruction reference information customization portion may operate to prepare a particular set of reference information to be viewed and or created and stored on the remote device reference information accessory in association with a particular instruction or type of instruction in a part program and or its representation in an editing environment while creating and or editing a part program e.g. as outlined below with reference to . The remote device user interface may include commands dialog boxes and other display elements to support various embodiments of the features and operations disclosed herein as well as any required interaction with the programming environment e.g. through the accessory interface portion . In some embodiments the remote device user interface may comprise features included in an installed custom application which also provides routines included in the remote device instruction responsive portion . In some embodiments in addition to or instead of the features included in the aforementioned application web page features interactive web page features or the like and or features of an Internet browser and or other applications previously resident on the remote device and not normally associated with a metrology system may be used in order to provide the features and operations disclosed herein.

The edit execution portion is responsible for various execution modes during an editing process and includes a surrogate mode portion an actual mode portion and an edit execution user interface features portion . When the surrogate mode portion operates a surrogate execution mode surrogate data is utilized for generating context for the continuing editing operations. The actual mode portion includes operations that are more traditionally performed by prior machine vision systems. The actual mode portion may be called by the surrogate mode portion for performing actual machine operations when appropriate. The edit execution user interface features provide user interface features for the execution of the editing functions e.g. indications as to the status of various execution operations such as color codes indicating what portions of a part program have utilized surrogate data or have been run through an actual execution etc. The elements of the edit execution portion may be further understood based on the descriptions of their analogous or substantially similar counterparts which are similarly depicted described and or referenced elements in the previously incorporated co pending 232 and 061 applications.

The editor commands includes a run segment portion A a modify portion B and an insert append portion C described in detail in the 232 application.

The accessory interface portion comprises an accessory operations user interface an accessory data manager a node association portion an accessory communication manager and an accessory connection manager . The accessory interface portion and its various elements have been previously outlined with reference to and are further described with reference to following figures and need not be further described here. As shown in the remote device reference information accessory may be linked to communicate with the accessory interface portion through the accessory communication manager e.g. as described below with reference to and may thereby become an accessory to the programming environment. The remote device reference information accessory may comprises a remote device communication portion remote device registration data a remote device user interface remote device customized reference information data and a remote device current instruction responsive portion which in the embodiment shown in may include a remote device file generator manager and or a remote device instruction reference information customization portion . The remote device reference information accessory and its various elements have been previously outlined with reference to and are further described with reference to following figures and need not be further described here.

In the first state of the programming environment shown in the user has previously selected the instruction representation Set up for Measurement making it the current instruction representation.

In various embodiments the remote device connection dialog box may include one or more remote device status boxes corresponding to remote devices detected by the metrology system and or the accessory interface portion which may display respective remote devices e.g. their identity and or their device address on the network and their connection status and the like. The remote device status box may be particularly valuable for example when a remote device connects directly to the metrology system through a Bluetooth connection or the like.

In the embodiment shown in the current instruction responsive portion includes mode selection buttons and an instruction reference information portion . The mode selection buttons include a Custom selection button that causes only customized reference information to be displayed for a current generic instruction type and a Custom Standard selection button that causes standard reference information e.g. a section of standard help documentation corresponding to the current generic instruction type to be displayed along with any customized reference information. It should be appreciated that in some embodiments the remote device may include only customized reference and the Custom and Custom Standard selection buttons may be omitted.

The mode selection buttons also include List and Display buttons which control whether the user interface displays existing reference information associated with the current generic instruction type as a file list e.g. as shown in or as a display of the file contents e.g. as shown in respectively. The mode selection buttons also include a Create button which causes a user interface to be displayed which is suitable for creating reference information associated with the current generic instruction type e.g. as shown in . In some embodiments the effect of the mode selection buttons may persist as the current instruction representation and its corresponding current generic instruction type is changed in the programming environment.

In the state of the user interface shown in the Custom and List mode buttons have been selected. In the illustrated embodiment this results in a file selection box included in the instruction reference information portion displaying a list of existing custom reference information files previously stored on the remote device in association with the current generic instruction type. Files in the list may be selected and opened to display their contents in the user interface e.g. opened using a default program and or window that corresponds to their file extension for example according to known methods.

In the state of the user interface shown in the Custom and Display mode buttons have been selected. In the illustrated embodiment this results in one or more reference information display boxes included in the instruction reference information portion displaying the contents of existing custom reference information files previously stored on the remote device in association with the current generic instruction type. The files may be opened and displayed using a default program and or window that corresponds to their file extension for example according to known methods. The remote device may have a limited display size. In such a case it may be beneficial for the reference information display boxes to include display box scroll controls for scrolling through individual file contents and or for the instruction reference information portion to include a reference information scroll control for scrolling between the various files.

It should be appreciated that the instruction reference information portion of user interface may be frequently updated by the remote device based on communication from the accessory interface portion to reflect any changes in the currently active current instruction representation and or its associated current generic instruction type in the programming environment of the metrology system. That is the user interface display of the reference information files and or file contents associated with the current generic instruction type corresponding to the current instruction representation in the programming environment may be dynamically updated on the remote device .

In the state of the user interface shown in the Create mode button has been selected for creating customized reference information associated with the current generic instruction type. In the illustrated embodiment this results in only the Custom mode button being displayed. In the embodiment shown in the current instruction responsive portion includes user interface elements suitable for creating and or editing reference information which may be automatically associated with the current generic instruction type. For example the instruction reference information portion includes a reference information customization and display window that may include a display window scroll control described in greater detail below a reference information file name input box pertaining to the information included in the window an associated instruction confirmation box and a save file button that causes the information included in the window to be saved as indicated in the file name box and in association with the current generic instruction type which may be an automatic default entry in the associated instruction confirmation box or a manually entered override entry in one embodiment. In various embodiments the association may be provided using any suitable known method such as a lookup table or using a filename or extension convention or using suitable designations in an XML instruction header or the like.

An instruction reference information customization portion of the user interface includes the reference information customization and display window and reference information source selector buttons which may include Local File Create Note Camera and or Paste from Host buttons for example.

A user may select the local file button which in one exemplary embodiment may open a file browser that allows them to select a desired file for listing and or opening and editing in the customization and display window

A user may select the create note button which in one exemplary embodiment may open an operational text editor in the customization and display window which may appear similar to the CircleNotes.txt display box shown in for example .

A user may select the camera button if an image is desired as a reference information file. The camera button may be operated to access image acquisition and storage features that already exist on the remote device . The resulting image may then be treated as a reference information file and or opened in the customization and display window as outlined above. Of course if other sensor capabilities exist in the remote device these may be accessed and used to provide reference information in an analogous manner.

A user may select the paste from host button if reference information is desired to be transferred from the programming environment that is connected to the remote device . The host metrology system that is connected to the remote device may be operated using features that already exist on the metrology system and or its associated computer operating system and programs to select and transform or save or cut or copy information from the programming environment or help documentation or the like. For example shows a circle tool parameter window being selected by the selection box of a snipping tool which operates to put screen captured image of the selection box contents onto a clipboard of the host metrology system according to known methods. In the embodiment illustrated in the paste from host button causes the display window to display the clipboard contents of the host metrology system when a cursor of the remote device is placed in the customization and display window the cut copy paste menu is displayed according to known methods and the paste command is activated on the menu. The resulting contents may then be treated as a reference information file and or edited in customization and display window as outlined above. Editing may be performed using various tools or operations provided in the user interface and or tools or operations otherwise included in the remote device .

In some embodiments various features or operations of the remote device outlined above with reference to may comprise features or operations that may be implemented using applications previously resident on the remote device and not normally associated with the metrology system . As such an unskilled user may easily use a personal device as a remote device reference information accessory with the highly desirable benefits of no special training requirements and with minimal disruption to their personal device.

Generally speaking a web service is a collection of protocols and standards used for exchanging data between applications or systems. Software applications written in various programming languages running on various platforms can use web services to exchange data over computer networks e.g. like the Internet in a manner similar to inter process communication a single computer. This interoperability is due to the use of open standards e.g. TCP IP HTTP Java HTML and XML . As is known a web service may be self describing via common XML grammar and may be discoverable over a network via a simple find mechanism. For example a client invokes a web service by sending XML message and then waits for corresponding XML response. A basic web service platform is XML HTTP. Standard web services may work using the following known components for example Simple Object Access Protocol SOAP Universal Description Discovery and Integration UDDI and Web Services Description Language WSDL . The design and use of web services is known to software developers and may be implemented based on known techniques by those who are skilled in the art related to providing a programming environment for a metrology system. Thus it will be appreciated that the features and operations described below with reference to as well as other features and operations disclosed herein may be implemented using known web service programming and operation methods which need not be described in detail here.

Following is one representative example of operations in accordance with the present invention using Web services. It will be understood that this example is only representative and not limiting. In operation the remote device establishes a connection to a network that is also connected to the metrology system and or the programming environment including the accessory interface portion . The remote device may then contact the presence service PS of the accessory communication manager . The presence service PS provides information to the accessory interface service S and therefore the remote device contacts the presence service PS to supply information about the remote device e.g. so that the accessory interface service S can supply webpage formats and other data to the remote device in a compatible format and so on . The remote device notifies the presence service PS that it is connected to the network. The remote device may bundle its device registration information into a SOAP message for example and may include useful information such as its interface or display characteristics and the like. The SOAP message may be sent to the presence service PS as the body of an HTTP POST request for example. The presence service PS and or the accessory interface service S may unpack the SOAP request and convert the information into data instructions or commands that the other elements of the accessory interface portion can understand. As a result of the above operations initially the accessory interface portion recognizes that the remote device is not yet connected to the programming environment and limits the type of interactions permitted with the remote device until the user of the programming environment requests connection for the remote device using the previously outlined Connect to Accessory command for example. Then the accessory connection manager and at other elements of the accessory interface portion perform the related connection operations for example as outlined above with reference to . The elements of the accessory interface portion interact with the remote device through the accessory interface service S which converts their data instructions or commands into information in a form that the remote device can understand and use and instructs the delivery service DS to deliver the information to the remote device . Responses in interactions from the remote device may be delivered back to the accessory interface portion by the delivery service DS and converted in the accessory interface service S to a form that the various elements of the accessory interface portion can understand and use. In this way operations as outlined above with reference to and other operations and features disclosed herein may be accomplished by a relatively unskilled users when using a variety of remote devices that are not normally associated with a metrology system.

Regarding the indication of a current instruction representation on the remote device in one embodiment this may be implemented using the previously described node manager inter window auto scroll portion and node Association portion . As previously indicated the node manager is responsible for assigning and or managing node numbers that are assigned to nodes e.g. instruction representations in a part program. The inter window auto scroll portion may utilize the node numbers to display associated part program elements and corresponding editing functions in different windows routines or applications at the same time. In other words the inter window auto scroll portion may cause respective windows to automatically scroll to the elements that correspond to the relevant node number and to execute operations associated with that node number and or other information sent in association with the node number. One exemplary method and or implementation of inter window communication is described below with reference to wherein the inter window auto scroll portion sends auto scroll notifications AS to various connected elements including the node Association portion when it is notified of selection events SE in various connected elements. For example a selection event SE occurs in the program representation window each time the user changes the current currently active instruction representation to a new or different instruction representation. In response to receiving an auto scroll notification AS the node association portion may update its current node number and may also identify the current generic instruction type associated with the current instruction if any of the current node number. In addition the node association portion may notify the accessory operations user interface features to send updated current instruction display information e.g. indicating the new current instruction representation and an updated current generic instruction type if this information is not determined by routines in the remote device itself based on the updated current instruction display information to the remote device . The accessory operations user interface features may then prepare the required updated current instruction display information including the updated current generic instruction type if required and send it to the accessory interface service S for the proper formatting and delivery to the remote device . In some embodiments the accessory interface service S may use the notification service NS to notify the remote device that such a delivery is available whereupon the remote device may request the delivery when it is compatible with its ongoing native operations.

Regarding the sending of a set of reference information from the remote device to the accessory interface portion the related previously described features and operations may be implemented as follows in one embodiment. If a set of reference information is available for the current generic instruction type on the remote device this may cause the notification service NS of the remote device to issue a notification to the accessory interface portion that such a delivery is available whereupon the accessory interface portion may request the delivery when it is compatible with its ongoing operations. When set of reference information is delivered the accessory interface service S may prepare the information in a form usable by the accessory data manager and or the programming environment. The accessory data manager may associate the set of reference information with the current node number may temporarily or permanently download and store the set of reference information in association with the current node number and or the current generic instruction type in some embodiments and may cause the editing window to display the instruction reference information flag as previously outlined with reference to in some embodiments.

Regarding the implementation of various web service methods in addition to the large body of web surface teaching literature U.S. Pat. Nos. 7 506 059 8 346 929 6 732 111 and 8 539 061 which are hereby incorporated herein by reference in its entirety describe various methods which may be adapted to provide features and operations described with reference to as well as to implement various other features and operations disclosed herein.

In the embodiment shown in the inter window auto scroll portion interacts with window portions and the node association portion through an auto scroll notification AS and interacts with respective window portions through respective a window selection event notifications SE. The various selection event notifications SE are triggered independently. That is any window that is the host of selection of an element that is associated with a node number may issue a selection event notification SE in response to that selection based on a routine or operations of that window that are triggered by the selection event. For example a selection event occurs in the program representation window each time the user changes the current currently active instruction representation to a new or different instruction representation. In contrast in various embodiments the auto scroll notifications AS to each applicable window are triggered in response to any selection event notification received by the inter window auto scroll portion and are generally sent to all applicable windows and the node association portion . The auto scroll notifications AS are based on a routine or operations of the Inter Window Auto Scroll Portion that are triggered by a selection event notification SE. The selection event notification SE may include the identifier or node number of the selected element e.g. the identifier of the new current instruction representation and in some embodiments may include an identification of the generic instruction type of the current node or instruction representation e.g. as may be determined according to known methods in the recorder translator shown in for example any or all of which may be passed through the auto scroll notification AS. As previously indicated in response to receiving an auto scroll notification AS the node association portion may update its current node number and or current generic instruction type and notify the accessory data manager and or remote device through the accessory interface service S that a new current node number and or new current instruction representation and or new current generic instruction type is in effect such that appropriate operations can be performed in each element that receives the notification. In addition in some embodiments the node association portion may notify the accessory operations user interface features to send communication that supports an updated display indicating the new current instruction representation on the remote device .

In one embodiment may be implemented using known publisher subscriber methods which are sometimes implemented using XML like languages e.g. as used for notifications between web pages . In various embodiments a publisher subscriber method may be implemented by adapting methods such as a list based method or a broadcast based method or a content based method to support the features disclosed herein. In a machine vision inspection system the publishers and subscribers are generally located in the same processing space and it is possible for the identity of the subscriber windows to be known by the publisher. Applicable to such cases U.S. Pat. No. 8 028 085 the 085 patent which is hereby incorporated herein by reference in its entirety describes low latency methods which may be adapted to support the features disclosed with reference to .

At a block a programmable metrology system is provided comprising a workpiece sensing portion a movable stage for holding a workpiece a control portion a display an accessory interface portion comprising an accessory communication portion and a user interface comprising a programming environment that is operable during a learn mode of the programmable metrology system the programming environment comprising an editable part program representation of part program instructions in an editing window the part program representation comprising instruction representations including a currently active current instruction representation. At a block a communication connection is provided between the remote device and the programming environment. At a block the accessory communication portion is operated to output a current instruction identifier to the remote device the current instruction identifier corresponding to the current instruction representation. At a block the remote device is operated to receive the current instruction identifier. At a block the remote device is operated according to a program or routine that is responsive to the received current instruction identifier to display a current instruction reference information user interface portion configured such that it is specifically related to a generic instruction type corresponding to the current instruction representation.

It will be understood that the method outlined above with reference to is exemplary only and not limiting. The various elements may be performed in various combinations and implemented in various embodiments using the various combinations of the features and operations outlined herein. In some embodiments the programming environment that interacts with the remote device may be provided based on a simulator and or simulation of a corresponding metrology system and the actual motion control elements and other physical apparatus that moves the probe as well as the workpiece may be simulated.

From the foregoing it will be appreciated that specific embodiments of the invention have been described herein for purposes of illustration but that various modifications may be made without deviating from the scope of the invention.

