---

title: Systems and methods for interfacing automation control systems to external systems
abstract: A system includes an industrial controller comprising a first processor. The first processor is configured to execute a substantially deterministic control process. The first processor is further configured to communicate with a second processor included in a communications interface system and communicatively coupled to the first processor, wherein the first processor is configured to communicate an asynchronous data to the second processor via an industrial communications protocol during the execution of the control process, and the second processor is configured to retrieve external data from an external system based on the asynchronous signal, and to communicate the external data to the control system via an Ethernet-based communications protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09625883&OS=09625883&RS=09625883
owner: General Electric Company
number: 09625883
owner_city: Schenectady
owner_country: US
publication_date: 20130816
---
The subject matter disclosed herein relates to systems and methods for providing automation control access to external systems.

Certain systems such as industrial control systems may provide for process control of a variety of devices. For example an industrial control system may include controllers field devices and sensors monitoring data to derive subsequent control actions such as the actuation of the field devices. Furthermore controllers may provide for the execution of control processes such as the production of power chemical processes manufacturing process and the like useful in automating industrial systems. In certain cases the controller may be communicatively coupled to external systems. It would be beneficial to improve the interfacing of control systems to external systems.

Certain embodiments commensurate in scope with the originally claimed invention are summarized below. These embodiments are not intended to limit the scope of the claimed invention but rather these embodiments are intended only to provide a brief summary of possible forms of the invention. Indeed the invention may encompass a variety of forms that may be similar to or different from the embodiments set forth below.

In a first embodiment a system includes an industrial controller comprising a first processor. The first processor is configured to execute a substantially deterministic control process. The first processor is further configured to communicate with a second processor included in a communications interface system and communicatively coupled to the first processor wherein the first processor is configured to communicate an asynchronous data to the second processor via an industrial communications protocol during the execution of the control process and the second processor is configured to retrieve external data from an external system based on the asynchronous signal and to communicate the external data to the control system via an Ethernet based communications protocol.

In a second embodiment a method includes placing an asynchronous call by using an industrial controller and translating the asynchronous call into a service oriented architecture SOA call. The method further includes placing the SOA call and processing the SOA call by using a SOA interface. The method additionally includes deriving data based on processing the SOA call and transmitting the data to the industrial controller wherein the industrial controller is configured to execute a substantially deterministic control process.

In a third embodiment a non transitory computer readable medium includes instructions executable by a processor. The instructions are configured to place an asynchronous call by using an industrial controller and to translate the asynchronous call into a service oriented architecture SOA call. The instructions are further configured to place the SOA call and to process the SOA call by using a SOA interface. The instructions are additionally configured to derive data based on processing the SOA call and to transmit the data to the industrial controller wherein the industrial controller is configured to execute a substantially deterministic control process.

One or more specific embodiments of the present invention will be described below. In an effort to provide a concise description of these embodiments all features of an actual implementation may not be described in the specification. It should be appreciated that in the development of any such actual implementation as in any engineering or design project numerous implementation specific decisions must be made to achieve the developers specific goals such as compliance with system related and business related constraints which may vary from one implementation to another. Moreover it should be appreciated that such a development effort might be complex and time consuming but would nevertheless be a routine undertaking of design fabrication and manufacture for those of ordinary skill having the benefit of this disclosure.

When introducing elements of various embodiments of the present invention the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

In certain embodiments described herein a communications interface may be used to mediate communications between a controller and external systems. In one embodiment the controller is a Purdue Reference Model PRM level controller suitable for executing a substantially deterministic control process as described in more detail below with respect to . The communications interface may enable for example asynchronous communications between the controller and external systems such as internet based systems. Accordingly the controller may continue providing substantially deterministic control of a desired industrial facility or system while the communications interface processes data externally from the controller and then returns the data to the controller. The data returned from external systems may include a variety of data such as weather data maintenance data data from related facilities outage data controller configuration data controller reprogramming data commercial data and the like which may then be used by the controller to update the controller and or execute desired control algorithms.

In certain embodiments the communications interface may include a service oriented architecture SOA communications interface suitable for using a variety of protocols including loosely coupled protocols such as protocols using web services description language WSDL JavaScript object notation JSON service registry based protocols and the like. By using SOA coupling to a variety of commercial and or custom SOA enabled software and hardware systems may be enabled the allocation of programming resources may be made more efficiently and costs may be minimized. By utilizing the techniques described herein the PRM level controller may place service calls such as generic and or custom SOA service calls and process the data returned by the communications interface. Accordingly the PRM level controller may provide more flexible control of the desired industrial process e.g. industrial activity and or set of industrial steps .

With the foregoing in mind it may be useful to describe an industrial control system such as a power generation system incorporating the techniques disclosed herein. Accordingly illustrates a gas turbine system as an example embodiment of an industrial control system that incorporates the improved control techniques disclosed herein. As depicted the turbine system may include a combustor which may receive a fuel air mixture for combustion. This combustion creates hot pressurized exhaust gases which the combustor directs through a turbine e.g. part of a rotor and toward an exhaust outlet . As the exhaust gases pass through the turbine the resulting forces cause the turbine blades to rotate a drive shaft along an axis of the turbine system . As illustrated the drive shaft is connected to various components of the turbine system including a compressor .

The drive shaft may include one or more shafts that may be for example concentrically aligned. The drive shaft may include a shaft connecting the turbine to the compressor to form a rotor. The compressor may include blades coupled to the drive shaft . Thus rotation of turbine blades in the turbine may cause the shaft connecting the turbine to the compressor to rotate the blades within the compressor . The rotation of blades in the compressor compresses air that is received via an air intake . The compressed air is fed to the combustor and mixed with fuel to allow for higher efficiency combustion. The shaft may also be connected to a load which may be a vehicle or a stationary load such as an electrical generator in a power plant or a propeller on an aircraft. When the load is an electrical generator the electrical generator may be coupled to a power grid for distributing electrical power to for example residential and commercial users.

The turbine system may also include a plurality of sensors and field devices configured to monitor a plurality of engine parameters related to the operation and performance of the turbine system . The sensors and field devices may include for example inlet sensors and field devices and outlet sensors and field devices positioned adjacent to for example the inlet and outlet portions of the turbine and the compressor respectively. The inlet sensors and field devices and outlet sensors and field devices may measure for example environmental conditions such as ambient temperature and ambient pressure as well as a plurality of engine parameters related to the operation and performance of the turbine system such as exhaust gas temperature rotor speed engine temperature engine pressure gas temperature engine fuel flow exhaust flow vibration clearance between rotating and stationary components compressor discharge pressure pollution e.g. nitrogen oxides sulfur oxides carbon oxides and or particulate count and turbine exhaust pressure. Further the sensors and field devices and may also measure actuator information such as valve position and a geometry position of variable geometry components e.g. air inlet . The plurality of sensors and field devices and may also be configured to monitor engine parameters related to various operational phases of the turbine system . Measurements taken by the plurality of sensors and field devices and e.g. operational parameters of the industrial automation system may be transmitted via module lines and which may be communicatively coupled to a PRM level controller . The PRM level controller may include at least one processor suitable for the execution of computer instructions and a memory suitable for storing computer instructions and other data. In another embodiment the controller may be a Triple Modular Redundancy TMR controller having three processors or cores performing a single task with the output determined by a voting of the three systems.

PRM level controllers may be directly controlling industrial processes as compared to level systems that may provide for supervisory control e.g. distributed control systems DCS manufacturing execution system MES and so on . Accordingly the controller may be directly connected to the sensors and field devices by using wired conduits. The controller may then provide for a substantially deterministic control of the system without adding another control layer. For example in the depicted example module line may be utilized to transmit measurements from the compressor while module line may be utilized to transmit measurements from the turbine . The controller may use the measurements to actively control the turbine system .

It should be appreciated that other sensors may be used including combustor sensors exhaust sensors intake sensors and load sensors. Likewise any type of field devices may be used including smart field devices such as Fieldbus Foundation Profibus and or Hart field devices. It is also to be appreciated that the gas turbine system is only an example embodiment of an industrial control system and that other industrial automation systems may include for example automated power generation systems such as gas turbines steam turbines wind turbines or hydro turbines heat recovery steam generators HRSG a power generator fuel skids gas processing systems or any other automated power generation system or partially automated power generation system. Other industrial automation systems may include automated manufacturing systems such as chemical plants pharmaceutical plants oil refineries automated production lines or similar automated or partially automated manufacturing system.

Also depicted is a communications interface system which may be communicatively coupled to the controller for example by using an Ethernet cable e.g. RJ45 cable . In other embodiments other communication conduits or cables may be used such as serial cables e.g. DB9 wireless conduits and so on. In the depicted embodiment the communications interface system may include a PRM level and above e.g. level functionality. That is the interface may include supervisory functionality as provided by the PRM reference for level systems and may additionally be included in other systems such as a DCS MES human machine interface HMI and so on.

The communications interface system may be communicatively coupled to the PRM level controller and used to receive for example asynchronous SOA service requests from the controller . The service requests may be further processed by the communications interface system and external systems may be used to provide data related to the service requests. The external systems may include other control systems weather systems business logic systems maintenance systems e.g. maintenance log systems maintenance scheduling systems and so on. The data from the external systems may then be received by the communications interface system further processed and or translated and delivered to the controller . In one embodiment the data may include controller configuration be provided to a configurator system . The configurator system may then reconfigure the controller and or reprogram the controller. For example the configurator system may set any number of controller parameters e.g. input output I O configuration memory configuration networking configuration and so on . For example I O pack configuration information memory paging memory size virtual memory network packet size latency and so on may be set.

In one embodiment the data may be communicated from and to the controller by using an Ethernet Global Data EGD automation protocol. The EGD automation protocol may include an exchange data structure that uses shared memory techniques to more efficiently and securely exchange data as described in more detail below with respect to . By enabling service calls including SOA service calls to the PRM level controller the techniques described herein may enable a more flexible control process such as providing for the use of weather data business data maintenance data logistics data e.g. parts procurement data for the system .

The communications interface system also includes an Open Connectivity via open standards OPC Unified Architecture UA server communicatively coupled to the controller communications interface and suitable for using OPC communications protocols e.g. opc.tcp Server http Server to exchange data with the controller communications interface . By using the OPC communications protocols the techniques described herein enable the level controller to further communicate with a variety of other systems. Indeed the level controller may communicate using a high reliability deterministic communications protocol such as EGD Modbus or a combination thereof and the communication may be translated to a service oriented communications protocol such as the OPC communications protocol for use with external systems. Accordingly controller owned variables may be communicated. The OPC UA server may include a plant data model useful in modeling relationships e.g. Entity Relationship ER modeling systems application programming interfaces API and the like related to the system .

In one embodiment data such as a service request being transmitted by the level controller may be processed by using asynchronous EGD exchange data structure in the controller communications interface and then translated into data requests suitable for processing by the OPC UA server . The EGD exchange data structure may include for example a produced exchange EGD data structure a consumed exchange EGD data structure or a combination thereof which may use unicast and or multicast techniques for communication of the service request. The OPC UA server may then request data for example by using a conduit e.g. SOA conduit from the web services and plant information system . The web services and plant information system may then further process the data for example by using a business logic system a start up advisor system and other systems .

The business logic system may include for example business logic useful in operating the industrial system and or the level controller . For example the business logic system may include logic or rules useful in the determining the current price of power produced the future price of power produced e.g. energy futures green credits as well as certain regulatory constraints. For example the regulatory constraints may include the cost of producing certain undesired particulate such as nitrogen oxides NOx carbon dioxide emissions and so on. Additionally or alternatively the business logic system may include business logic related to the operation of other systems . For example the business logic system may be communicatively coupled to other systems such as other systems and may include information such as outage of other systems maintenance schedules of other systems off lining of other systems and other related information. The startup advisor system may include for example information related to startup operations of the system . Such information may include desired start up schedules desired startup power curves and desired type of fuel to use during startup e.g. diesel natural gas syngas and so on.

The other systems may include but are not limited to weather systems such as national oceanic and atmospheric administration NOAA databases commercial weather databases business logic systems maintenance systems e.g. maintenance log systems maintenance scheduling systems and so on. Accordingly data such as service request received from the level controller by using the communications interface system may be transformed by the systems and of the web services and plant information systems into data provided via the conduit into the level controller useful in operations of the controller .

In the depicted embodiment a data persistence system of the web services and plant information system may additionally include a user database and an OPC UA client . The user database may include a data repository of users authorized to access or otherwise communicate with the web services and plant information system . The users may include human entities as well as or alternatively to software and hardware entities. The OPC UA client may be a client system suitable for communicating with the OPC UA server by using the OPC communications protocol. Additionally or alternatively a graphical user interface GUI is also communicatively interfaced to the web services and plant information system . Accordingly the GUI may be used to provide a direct interface such as a web interface into the web services and plant information system .

By using a SOA architecture the techniques described herein may enable the level one controller to communicate with a variety of systems by using the communication interface system . For example the field engineering personal computer and the DCS may use the OPC communications protocol to communicatively interface to the level one controller through the communications interface system . For example the field engineer personal computer may be used to reconfigure and or to reprogram the level one controller through the communications interface system . Accordingly configuration information including but not limited to certain controller properties may be transmitted from the field engineer personal computer to the level one controller via the communications interface system and new or updated programming instructions may be similarly transmitted. Likewise the DCS may use the communications interface system to transmit and or receive information related to the level one controller . Such information may include information useful in the distributed control of the system as well as information useful in synchronizing the level one controller for example with other systems.

To provide communicative interfaces to the field engineering personal computer and or the DCS the communications interface system may include an OPC UA client OPC DA server and or an OPC DA client . For variables that are owned by the DCS the OC DA client may be communicatively coupled to an OPC DA server . For other variables including variables associated with the level one controller the OPC DA server may be communicatively coupled to an OPC DA client also included in the DCS . By using the OPC DA server for DCS owned variables vars and the OPC DA client for other variables owned by the system the techniques described herein may enable a more efficient communications. For example suitable publish and subscribe mechanisms may be set at the server and server in order to publish and subscribe to specific DCS variables and other variables. Accordingly multiple data paths a data path associated with DCS variables and a data path associated with other variables may be used to communicate with the communications interface system and the level one controller .

Also depicted are a human machine interface HMI and a site computing device communicatively coupled to the communications interface system . The HMI may include a graphical user interface suitable for visually interacting with the communications interface system for example by using a plurality of the sight computing device may include a site historian data repository useful in collecting a variety of data from a historian data base included in the communications interface system . The site historian data base may in one embodiment be used as a logging data base useful in logging a variety of information from the communication interface system including information related to the level one controller such as logs of the EGD communications between the level one controller and a communications interface system . By using the techniques described herein the level one controller may issue certain service calls such as service calls described in more detail below with respect to and process data resulting from these service calls. A security system may also interface with an operating system OS security system to provide for example secure authentication authorization security logging accounting secure communications e.g. secure socket layers virtual private networks management of security certificates and the like.

As depicted the block execution process may be communicatively coupled to the IPC system which may use shared memory to communicate between the block execution process and the processes and . For example a produced exchange EGD data structure a consumed exchange EGD data structure or a combination thereof may be used to communicate between the block execution engine and the processes . The EGD protocol may enable a producer e.g. server process such as process and or to share a portion of its memory to all the consumers e.g. client processes such as processes and or at a scheduled periodic rate. The protocol may use UDP over Ethernet for exchanging data. A snapshot of internal reference memory mediated by an Ethernet interface is referred to as an exchange. An exchange does not require a reply and is identified by a unique combination of three major identifiers such as a producer ID e.g. producer s IP address an exchange ID e.g. client s IP address and an adapter name e.g. Ethernet interface identifier .

The blockware engine enables the creation of control code using a familiar function block diagram environment and at the same time provides high real time determinism. Before the techniques described herein constraints of existing blockware functionality provided by controllers included limitations in accessing data that is communicated as I O either from I O packs e.g. hardware I O cards attached to a bus and communicatively coupled to the controller or through a network protocol e.g. Modbus . The techniques described herein provide for extending the controller runtime to communicate with data structure via web services that are exported by the external systems and or .

From the perspective of the blockware engine web services implemented by the external systems may be grouped into two classes. A first class may include generic or simple services . These services are semantically and syntactically straightforward e.g. simple standalone methods that may take a fixed number of inputs that are primitive types and return a fixed number of primitive types e.g. integer string float matrix and so on . No assumption is made as to whether the service is statefull or not.

Custom or complex services that do not meet the definition of simple services include services . These services might for example return arrays of data or other complex structures e.g. classes structs that may not be readily translatable into the primitive data types that exist in the blockware engine . An implication of this distinction between simple and complex services is that there may be certain services that can be discovered at configuration time by having access to the WSDL Web Services Description Language file for the service e.g. services and can be handled by a generic local I O process in the blockware engine e.g. process that may be configured for example by certain pcode records e.g. firmware . The converse of this implication is that some web services e.g. may each use a custom process e.g. processes for the custom web service together with a custom definition for the service to be used by the HMI while configuring the service. That is generic services may all use the process while custom services may each use a custom process such as the processes and .

The functions and or methods of services may be exposed directly to the blockware through a set of inputs and output variables. The methods of complex services may need to be normalized to the data types that the blockware e.g. function blocks are designed to use. It is expected that the inputs to the processes can include string data types that may be present in the downloaded pcode files as constants. It is expected that if needed the local I O process for complex services could make multiple service calls to the service while servicing a single call from the blockware. By providing for techniques useful in enabling the controller e.g. PRM level controller from interfacing with external systems the techniques described herein may enable more flexible and extensible control systems.

The process may then place the SOA call block . For example the generic service process the custom service A process and or the custom service B process may interface with desired web services to request and or provide data. The web services may then process the SOA call block and return SOA data block . As mentioned above the SOA data may include both native data types e.g. integer string array float and custom data types e.g. custom classes custom structs custom arrays datasets and so on . The returned data may be received for example by the processes and translated block for example into controller data e.g. EGD data Modbus data or in general data types understood by the controller that may be more easily understood by the block execution process . The translated data e.g. EGD data may then be transmitted block to the block execution process . The block execution process may then use the data block to perform control actions such as operating actuators modulating valves and so on. By providing for a PRM level controller suitable for accessing and using data provided by web services the techniques described herein may enable a more flexible and extendable control system.

Technical effects of the invention include providing for a communications interface useful in enabling a PRM level controller to interact with external systems by using service oriented architecture SOA based mechanisms including but not limited to web services. Generic service processes are provided suitable for interfacing with web services that use standard data structures e.g. native data structures . Custom service processes are provided useful in interfacing with web services that use custom data structures.

This written description uses examples to disclose the invention including the best mode and also to enable any person skilled in the art to practice the invention including making and using any devices or systems and performing any incorporated methods. The patentable scope of the invention is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal language of the claims.

