---

title: Managing network storage with a user-level file system
abstract: A user-level file system interfacing with at least one user application for a transparent view with a file system module implemented in a kernel subsystem and a user storage client module implemented in a user-level file system to access and synchronize at least a resource stored within a storage media device, and translating a request, from the user application, to access the resource to the user-level file system for the transparent view. The user-level storage client module receives the request to access the resource from the user application for the transparent view. A storage prediction service retrieves the request to access the resource from the user-level storage client module for the transparent view. The network storage service receives the request to access the resource from the user-level storage client module. The user application is provided with access to the transparent view of requested resource stored within the storage media device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09223795&OS=09223795&RS=09223795
owner: 
number: 09223795
owner_city: 
owner_country: 
publication_date: 20130305
---
This disclosure relates to a network file system and more particularly to management of network storage media devices with a user level file system.

A network file system typically includes a collection of computing systems connected to a network that distributes data across a plethora of network storage media devices. The network storage devices may include for example network attached storage NAS remote file server i.e. one using NFS Network File System or CIFS Common Internet File System protocols or a remote storage array via a storage area network SAN or via a standard network e.g. using the iSCSI Internet Small Computer System Interface protocol. Further flash memory could be used to replace the hard disks for network storage media devices. In another example the system hardware may also include or is connected to central processing unit CPU s which may be a single processor or two or more cooperating processors in a known multiprocessor arrangement a microprocessor or one or more multi core processors conventional registers interrupt handling circuitry a clock and etc. Accordingly a network file system may have a large number of network storage media devices.

A computing device may have difficulty accessing and synchronizing resources transparently with a large amount of network storage capacity across various network storage media devices. For example a computing device may not be able to fully access online storage services which provide network storage capacity due to limited local hardware storage capacity. In addition online or network storage services are static storage services and do not provide synchronization of data transparently across network storage media devices. In order for a computing device to have access to a large capacity of storage and synchronize resources transparently across a large number of network storage media devices the computing device may have to mount the file system to its local hardware storage. Furthermore an administrator or an operating system may have to recognize each change in the data from a network storage media device thereby increasing latency and complexity. Due to the large number of network storage media devices and synchronization of data transparently across these network storage media devices a computing device may have a difficult and expensive process of accessing and synchronizing resources transparently across a large amount of network storage media devices.

In general this disclosure describes techniques for enhancing the process of accessing and synchronizing any resources transparently across a large number of network or local storage media devices by using a prediction and a caching service interfacing with a user level file system. In particular the prediction and caching service may predict and identify storage media devices for user applications to access and the user level file system in user space may synchronize communications between the storage media devices user applications and the prediction and caching service. In addition the user level file system in user space may interface with a network storage service and a storage prediction service that may be deployed within a network or integrated in the computing device. As a result a user application may request access to a storage media device using the user level file system without the support of an administrator or an operating system. With mounted storage media devices the user application may access a resource transparently across a large number of storage media devices. Further the user application may synchronize the resource transparently if any changes occur by using a caching mechanism in conjunction with the network storage service and the storage prediction service. That is a storage prediction service may predict the next resource to be accessed and synchronize the storage media devices by prefetching characteristics from the user application and the computing device. With the next resource predicted the storage prediction service and the network storage service can update and synchronize the storage media devices across the network via the cache. The user application may access the resource transparently and view a complete translation of the storage media devices with real time updates. This may reduce latency of accessing the resource transparently across a large number of network or local storage media devices and may reduce the complexity of synchronizing transparently the resource stored within the storage media device that is mounted within the computing device. Further the user application may access resources from a plurality of storage media devices in a transparent view or translation but not limited by the local storage capacity of the computing device.

For example techniques of this disclosure may enhance the process of accessing and synchronizing a plurality of resources and network or local storage media devices within a user level file system. One example is to interface with at least one user application for accessing and synchronizing for a transparent view with a file system module implemented in a kernel subsystem and a user storage client module implemented in a user level file system to access and synchronize at least a resource stored within a storage media device. Further the method translates a request from the user application to access the resource to the user level file system for the transparent view wherein the request to access the transparent view further includes a plurality of operations used to manipulate the resources stored within the storage media devices. The user level storage client module may receive the request to access the resource from the user application for the transparent view. A storage prediction service may retrieve the request to access the resource from the user level storage client module for the transparent view. Further the network storage service may receive the request to access the resource from the user level storage client module for the transparent view. The user application may be provided access to the transparent view of the requested resource stored within the storage media device and may further include access to additional resources stored within additional stored media devices.

When the network storage service receives the requests it may update a cache with metadata pertaining to one or more of the requests and the network storage may further synchronize one or more of the resources stored within one or more of the storage media devices. Further the network storage service may update a cache pertaining to changes to the requests and the metadata associated with each of the requests. In addition the network storage service may maintain the cache pertaining to changes to the transparent view and synchronize the cache with one or more resources stored with one or more of the storage media devices.

In another example the user level storage client module may update the buffer pertaining to changes to the requests and the metadata associated with each of the requests maintain the buffer pertaining to changes to the transparent view and synchronize the buffer with one or more resources stored within one or more of the storage media devices. Also the user level storage client module may modify at least a logical volume of the file system module to mount the storage media device authenticate the request for the storage media device from the user application and may configure the storage media device to mount within the logical volume.

In another example the storage prediction service may identify the request and may determine that the request for the storage media device may predict additional requests to access additional storage media devices. Further the storage prediction service may update the cache with metadata pertaining to one or more additional requests. In addition the storage prediction service may prefetch metadata associated with the request used to predict additional requests. The metadata may include identification or configuration information pertaining to one or more requests from the user application. Also the metadata may include identification or configuration information pertaining to each of the storage media devices and may include synchronization information pertaining to each of the storage media devices.

In another example a system includes a plurality of managed storage media devices a plurality of network devices and a computing device comprising a user interface to interface with at least one user application for a transparent view with a file system module implemented in a kernel subsystem and a user storage client module implemented in a user level file system to access and synchronize at least a resource within a storage media device. The system further includes a computer readable medium encoded with instructions for the user application module a user interface module the file system module and the user level storage client module. The system then includes a processor to interface with at least one user application module for a transparent view in a kernel subsystem and a user storage client module implemented in a user level file system to access and synchronize at least a resource stored within a storage media device to translate a request to access from the user application to access the resource to the user level file system for the transparent view and to receive by the user level storage client module the request to access the resource from the user application for the transparent view and to provide access to the user application module the transparent view of the requested resource stored within the storage media device.

In another example a device comprising a user interface to interface with at least one user application for a transparent view with a file system module implemented in a kernel subsystem and a user storage client module implemented in a user level file system to access and synchronize at least a resource stored within a storage media device. The device further includes a computer readable medium encoded with instructions for the user application module a user interface module the file system module and the user level storage client module. The device then includes a processor to execute the user application module to interface with a transparent view with a file system module implemented in a kernel subsystem and a user storage client module implemented in a user level file system to access and synchronize at least a resource stored within a storage media device to translate a request to access from the user application the resource to the user level file system for the transparent view and to receive by the user level storage client module the request to access the resource from the user application the transparent view and to provide access to the user application module the transparent view of the requested resource stored within the storage media device.

The techniques of this disclosure may provide one or more advantages. For example the techniques of this disclosure may allow any number of user applications to configure and mount a large number of network storage media devices or network or local file systems. Further the user may not need the support of a system kernel the operating system or the system administrator because the network storage service device may configure and mount at least one storage media device from the network automatically to the file system. Also the user application may be unaware of where each network storage media device is deployed in a network because the network storage service device may retrieve the configuration of the storage media devices automatically. The techniques of this disclosure may reduce the time needed to configure and mount a plethora of network storage media devices containing a large capacity of resources. Also the techniques of this disclosure scale well for synchronizing resources between the large number of network storage media devices and the user application. In this manner the techniques of this disclosure may reduce the complexity of managing network storage media devices providing network storage prediction and may reduce the operational costs associated with managing the storage media devices with a plurality of user applications.

The details of one or more examples are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

As used herein a resource is an addressable and uniquely distinguishable entity which may be represented within a network such as but not limited to a user a service a group a printer a server a website database web application such as software as a service SaaS platform as a service PaaS infrastructure as a service IaaS or any other type of cloud computing applications a tablet a file a directory an image a video data a domain a computing device a mobile device an application and etc.

Various aspects of this invention discuss the usage of a file system FS . A FS is a software mechanism that defines the way that files are named stored organized and accessed on logical volumes of partitioned memory. The FS is designed to store organize manipulate and retrieve folders system and data files and metadata on a plurality of storage media devices.

A virtual file system VFS is an abstraction layered on top of a physical FS that permits applications to access different types of defined file systems in a uniform manner. A file system is defined either into the kernel itself or as loadable modules. For example a VFS can be used to access local or network storage media devices transparently without the client application noticing the difference. Unlike traditional file systems that essentially save data to and retrieve data from a hard disk VFSs do not actually store data themselves. They act as a view or translation of an existing file system or network storage media device. It can be used to bridge different FSs on various types of kernels operating systems web platforms servers such as UNIX Windows Macintosh Linux iOS Android Windows Mobile BlackBerry or other types of operating systems.

Installable File System IFS is one example of a loadable kernel module in a Windows or IBM OS 2 like operating system OS that allows users to add file systems to the kernel without needing to modify the kernel module.

File System in User Space FUSE is another example of a loadable kernel module in a Unix like operating system OS that allows non privileged users to create their own custom FSs without having to edit or modify the kernel code of the OS. A FUSE module acts as a higher level bridge to the underlying kernel interfaces of the OS. Thus FUSE modules may permit the creation and maintenance of VFSs. Any resource available to a FUSE implementation may be mounted within its own FS. The FUSE implementation is one example that the user level file system of this disclosure is based.

FUSE may include a three part system. One part may be a file system module loaded within the kernel system. Another part may be a library which manages communications with the file system module in user space. The third part may be a user supplied module that implements the file system and may implement FUSE operations to the file system and the library module.

As described herein storage prediction service may predict requests by user applications for storage media devices or other resource units and may cache the metadata for further prediction. For example user application executing a movie may request storage media device A that may store part of the movie. However storage prediction service may predict that user application may request additional storage media device B which may store the remaining part of the movie and may continue executing the movie. FUSE storage client unit may mount storage media device B before user application sends a request based on the prediction from storage prediction module .

Computing device includes a mobile or tablet device a personal computer a netbook or laptop a server a set top box or any other type of machine device that may contain a processor memory storage a NFC Networking Interface Card and a conventional operating system or a collection of software capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that computing device . The memory may include random access memory which may be partitioned into a buffer or virtual memory. Virtual memory may include a memory management technique that segregates virtual memory into kernel level or user level.

Kernel level may include a kernel system a FUSE file system module or other types of kernel level modules or systems. Kernel system may be the main component of an operating system and may bridge software applications and data processing to the hardware devices such as memory storage or NFC . As a central feature of an operating system for storing data storage may store data using a file system. FUSE file system module may implement a file system module such as a VFS and may allow access to local or network storage media devices transparently without any user applications noticing the difference.

Further FUSE may bridge the differences in other OS s file systems and user application may access files or data on local file systems of those types of OS s without having knowledge of the underlying file system. FUSE may specify an interface to bridge storage media devices or resource units with kernel system by using logical volume . Logical volume may typically be a partition or a collection of partitions X X . . . Xn acting as a single entity that has been formatted with a file system FUSE . That is logical volume may include multiple partitions with files named stored organized and accessed as a partition and each partition Xn may map to at least one storage media device or another resource unit . Each partition Xn of logical volume may contain for example files directories media clusters blocks metadata store folders system and data files or other file allocation units.

For example user application executing a network video game may request storage media device A and FUSE may mount storage media device A within logical volume . Within logical volume FUSE may map storage media device A to partition X. In addition storage prediction service unit may predict and identify another storage media device B and resource unit C for user application to access. Network storage service unit may send metadata associated with storage media device B and resource unit C to FUSE . Moreover FUSE may mount and map storage media device B and resource unit C to partitions X and X respectively. Furthermore user application executing a network video game may have a transparent view or translation of storage media devices A B and resources unit C locally as partitions X X X and access data applications and files i.e. such as data files text documents spreadsheets images videos or other types of data and media files and system files operating system application binaries library files or other types of system files.

User level may include a plurality of user applications A D user applications a FUSE library or other types of application software programs or libraries that may interact with kernel system . User application may include application software software program or library application software service web application software such as software as a service SaaS platform as a service PaaS infrastructure as a service IaaS or any other type of cloud computing applications a file a directory an image video or audio media a domain and etc. Furthermore user application may run or execute in user level. To run or execute in user level user application may access a transparent view or translation of at least one resource or at least one storage media device from FUSE library .

A request may include a digitally time stamped record containing information to issue an instruction to a computer to retrieve data from a storage media device or other resource . The contents of storage media device or other resource remains in its original place. An instruction may be a single operation of a processor within a computer system or an instruction may contain a plurality of functions e.g. reading writing editing updating data system files or interacting with software applications which may have access to a plurality of storage media devices or other resources in network . A request may further include a stand alone piece of data containing source destination and reassembly information.

User application and FUSE library may interface via communication links or using operations or function calls as necessary to run or execute in user level. As user application runs or executes user application may need to access or synchronize additional resources or data not within the transparent view or translation. To add or edit the transparent view or translation user application may request from FUSE library for at least one additional resource unit or storage media device to be accessed and synchronize with current resource units or storage media devices within the transparent view or translation.

FUSE library may be a FUSE module that may be implemented into user level. Furthermore FUSE library may include a program or library that manages communications with FUSE a FUSE storage client unit user applications or other types of application software programs or libraries. Also FUSE library may execute function calls such as read write open delete rename create or any other type of resource unit or storage media device manipulation. Moreover FUSE library may accept requests from at least one user application and may translate at least one request into a set of functions to mount each request of resource unit or storage media device into a transparent view or translation. The transparent view or translation may interface with logical volume in FUSE . User application may access transparently at least one resource or storage media device from FUSE . Further user application may have access to multiple resource units or storage media devices within FUSE .

For example user application may request at least one resource unit or storage media device and may send at least one request to FUSE . FUSE library may accept via communication link the request s from user application translate the request s and send via communication link the request s along with metadata to FUSE . In particular the requests may be translated into a set of function calls for FUSE to interface with kernel system via communication links or . Also user application may associate metadata with the request. Metadata may refer to structured data that contains or defines other data making it more discoverable in online environments. Metadata may also provide context to data and may make data easier to reuse and combine with other data. Metadata may also include information about the quality of data. Metadata may further contain synchronization configuration identification information or any other type of metadata information about the request user application resource unit or storage media device . Communication links may be remote procedure calls application programming interface API a message bus device drivers VFS interface network link gateway transmission medium bridge or any other type of communication system device interface or network interface.

In another example FUSE may compare the request s received from user application and determine whether at least one resource or storage media device may be mounted to at least one partition Xn in logical volume . If the request may be mounted to the partition in logical volume FUSE may return via communication link and subsequently communication link the request along with the metadata associated with the request to FUSE library and user application for access. If the request s is not mounted FUSE may send via communication link the request s along with the metadata to FUSE storage client unit .

FUSE storage client unit may include a user supplied component which actually coordinates and manages communication between FUSE FUSE library user applications network storage service unit or storage prediction service unit . FUSE storage client unit may also update manage or synchronize resources and data between buffer user applications or network storage service unit or storage prediction service unit . FUSE storage client unit may implement the transparent view or translation when interfacing with FUSE FUSE library user applications or other units.

In another example FUSE storage client unit may receive via communication link the request s along with the metadata and determine whether the request s may be contained in buffer via communication links or . If the request s is contained with buffer then FUSE storage client unit may send via communication link the request s along with any metadata associated with the request to FUSE to mount the requested resource or storage media device . Buffer may be an independent file system which may be integrated into user level. In particular buffer may allocate read store write edit or delete metadata requests or any other type of file or system data. Buffer may be a device such as memory hard disk CD ROM printer flash tape drive or any other type of temporary storage of data. If the request is not contained in buffer FUSE storage client unit may send via communication link the request s to network storage service unit or storage prediction service unit . NFC may send the request to network storage service unit via physical layer and data link layer or storage prediction service unit via physical layer and data link layer .

FUSE storage client unit may also authenticate or encrypt communication between network storage service storage prediction service at least one storage media device or resource unit or the user application . Authentication may refer to a security measure designed to establish the validity of a transmission message or originator or a means of verifying authorization of user application to receive specific categories of information. Authentication mechanisms may help ensure that online transactions only involve trustworthy data hardware and software for networks and devices. Authentication may involve accepting proof of identity given by a credible entity comparing the attributes of the object itself to what is known about objects of that origin or may rely on document or other external affirmations. Authentication may include different types of algorithms or mechanisms implementing these types of security measures.

Encryption and decryption may be used to secure transactions by providing ways to ensure data confidentiality data integrity authentication of the message s originator electronic certification of data and non repudiation. Encryption may further provide means of protecting any computer related communication from wiretapping or interception. Encryption may scramble information generated by user application stored in storage media device or transmitted through network so that the information may only be retrieved in an intelligible form with the key to unscramble it. Methods for encryption may involve symmetric key or public key encryption where common algorithms include AES Blowfish DES Triple DES Serpent Twofish or other types of encryption algorithms.

Network includes at least one storage media device or resource unit at least one network storage service unit at least one storage prediction service unit and at least one cache . In this example network storage service unit maintains updates or synchronizes storage media devices or resource units . Storage prediction service unit may predict which storage media devices or resource units may be requested by user applications and may identify at least one storage media device or resource unit for access or synchronization.

In another example user application may be executing a SaaS application where a user may need to access various files directories or other various data across a plurality of storage media devices throughout network . For instance the user may be writing a document and saving in it in different directories. Furthermore as the user accesses more files directories and other various data storage prediction service may predict files or directories that the user may access next and may identify which storage media devices deployed within network that may contain those files or directories. Moreover network storage service unit may retrieve those storage media devices for the user and mount them to the file system without the user noticing any performance latency or delays. The user may access a large number of files or directories which may be viewed to the user as locally stored.

Network includes for example an internet of interconnected computers and telecommunication facilities including equipment and operating software which may comprise the interconnected world wide network of networks that may employ Transmission Control Protocol Internet Protocol TCP IP User Data Protocol UDP Asynchronous Transfer Mode ATM which includes transmitting and receiving data across a packet switched data network. Network communicates with different domains networks and telecommunication facilities computing device storage prediction service unit storage media devices resource units or other network devices using optical fiber Ethernet Wireless Bluetooth cellular wire radio and other methods of communication. Network may also include for example subnets of interconnected domains which include for example campus networks wide area networks virtual private networks or other types of local or private networks. In this disclosure the TCP IP exchanges data through the use of packets. The packets may be used in packet based or packet switched networks.

Network storage service unit may return via physical layer and data link layer the request along with the metadata to FUSE storage client unit via NFC . NFC network interface card may include a network adapter network interface controller NIC network interface card LAN adapter or any type of network interface hardware designed to allow computers to communicate over a computer network. The physical layer and data link layer may include standards such Ethernet Wi Fi Token Ring Bluetooth Cellular communications or any other type of computer network communication technologies. Afterwards FUSE storage client unit may return the request to FUSE to mount storage media device to one or more partitions Xn within logical volume . In addition FUSE storage client unit may update and store via communication link the request s or the metadata associated with the request in buffer .

Moreover FUSE storage client unit may send via communication link metadata associated with the request to network storage service unit which then may determine whether user application has access to at least one storage media device via cache . Network storage service unit may maintain via communication link cache with metadata and may compare via communication link the request to the metadata contained in cache . That is network storage service may determine that metadata associated with the request corresponds to at least one resource or at least one storage media device and may be contained in cache . Network storage service unit may retrieve via communication link the metadata associated with the request. Further network storage service unit may update or synchronize via communication link cache with the appropriate metadata associated with the request from user application .

In a further example FUSE storage client unit may receive the metadata associated with the request from network storage service unit via NFC and FUSE storage client unit may update and synchronize buffer with the request and the associated metadata corresponding to resource or storage media device . FUSE storage client unit returns via communication link the request to FUSE and FUSE may mount at least one resource or storage media device to one or more partitions Xn within logical volume . Once mounted user application may have access to the requested resource for a transparent view or a translation of at least one resource unit or storage media device . User application may be able to make edits changes writes reads or any other manipulations to the requested resource. FUSE storage client unit may continue receiving via communication links and updates and synchronizing metadata associated with the requested resource in buffer or network storage service unit via NFC .

Network storage service unit performs various aspects of retrieving metadata corresponding to at least one resource unit or at least one storage media device . Network storage service unit may receive via physical layer and data link layer a request for at least one resource unit or storage media device for a transparent view or a translation. Further storage prediction service unit may retrieve at least one request from NFC via physical layer and data link layer and the metadata associated with the request. In particular storage prediction service unit may process the metadata associated with the request and identify at least one resource unit or at least one storage media device . In addition storage prediction service unit may predict that user application may request at least one additional resource unit or storage media device .

For example user application executing a network operating system may request files or data stored on storage media device deployed in network . With files and data stored on storage media devices deployed in network network storage service unit may retrieve those storage media devices and their associated metadata. That is user application executing a network operating system may access files deployed in network as if the files may be locally stored in a file system. Furthermore storage prediction service unit may predict additional requests or identify storage media devices based on characteristics from user application that the network operating system may need to mount before a request is sent. Storage prediction service unit updates cache with metadata associated with storage media devices and network storage service unit may quickly retrieve the metadata from cache . User application may quickly receive access to files and data stored on storage media devices based on metadata stored with cache .

Storage prediction service unit may include for example a dedicated network server where the network service may continuously analyze data packets and determining whether additional requests may be produced based on a predetermined prefetching rule set. Storage prediction service unit may be connected to network via packet switched data network. As a software service unit storage prediction service unit may employ different algorithms or techniques to predict additional requests or identify storage media devices or resource units .

Storage prediction service unit may use prefetching such as pure demand transparent informed automatic prediction or any other type of prefetching algorithms to retrieve continuously metadata associated with the request. Also storage prediction service unit may implement techniques such as online or offline prefetching algorithms. That is an algorithm may be online if it must make its decision based only on past history of requests. Whereas an offline algorithm may use knowledge of the future requests. Storage prediction service unit may update maintain or synchronize via communication link cache with requests and metadata associated with requests using pattern matching approach to predict additional requests from user application .

Storage prediction service unit may also use statistical analysis hardware prefetching schemes Markov analysis probabilistic models or any other type of prefetching prediction analysis or algorithms to determine additional requests. In addition storage prediction service unit may swap out delete old or remove non useful via communication link requests and metadata associated with those requests and thereby may increase cache performance and timing which user application may perceive as faster resource performance.

Storage prediction service unit may identify one or more storage media devices or resource units based upon characteristics of user application i.e. historical data specifications and details of computing device and user application type of data time and date a data element access service location frequency security and other types of characteristics in order to access and synchronize a transparent view of resource units . Once identified storage prediction service unit may store metadata associated with storage media devices or resource units in cache for network storage service unit to send to FUSE storage client unit .

Network storage service unit may receive a request from FUSE storage client unit and network storage service unit may configure one or more resource units or storage media devices for the request. In particular network storage service unit may send via physical layer and data link layer metadata to FUSE storage client unit to mount requested storage media device A. In yet another example additional requests from FUSE storage client unit may be sent via physical layer and data link layer to network storage service unit and network storage service unit may further configure storage media devices or resource units . Network storage service unit may also automatically retrieve storage media devices throughout network .

Network storage service unit may include for example web storage server and may provide web application software methods and protocols used for storing data in a web browser. That is network storage service unit may store persistent data in local storage or session storage. Cache may further include local or session storage. Network storage service unit may retrieve configurations for resource units or storage media devices within network for one or more requests and may store the configurations as persistent data in cache . In one example storage media devices may include web servers database servers file servers routers printers end user computers FTP server proxy server remote server server farm virtual server personal digital assistants PDAs handhelds smart phones tablet computers disk drives removable media thumb drives memory cards flash drives backup tapes or other types of network storage media devices.

Resource unit may include web share cloud storage NFS AFS SMB protocols file system like clients for FTP and WebDAV software as a service SaaS storage shared disk file systems or other types of network or distributed storage systems. Resource unit or storage media device may have configurations associated with each. For example configuration may include networking protocols IP addresses MAC addresses storage capacity authentication authorization encryption IPC protocols and communications or other types of configuration. Configuration may refer to the arrangement of a computer system application or component based upon system environment and organizational requirements.

After receiving requested storage media device FUSE may mount requested storage media device within logical volume . User application may access the resources contained within requested storage media device . For example the resources contained within requested storage media device may be mounted in FUSE which user application may access data files program files media files operating files application files system files library files configuration files or other types of files.

That is FUSE library creates an association between requested storage media device and other mounted partitions Xn within logical volume of FUSE . For example with respect to mounted storage media devices within FUSE FUSE storage client unit may synchronize metadata files contained within mounted storage media device or resource units .

For the purposes of illustration user application may request storage media unit A or resource unit A that may be not mounted to FUSE storage client unit . FUSE storage client unit may send the request to storage prediction service unit and storage prediction service unit may for example process the request to determine whether storage media unit A is mounted and predict whether additional requests may be sent by user application . Storage prediction service unit may identify and may retrieve metadata from other storage media units or resource units .

Storage media unit may comprise a network storage drive data storage device computer storage or storage media disk drives external disk drives removable media thumb drives memory cards or other types of storage medium with a network interface. Storage media unit may store digital data used for computing i.e. digital media digital information electronic documents text spreadsheets photographs audio video or other types of digital data. Further resource unit may further include application programs or application software relying on an operating system to perform network functions or other types of application software.

Storage prediction service unit may further comprise a web server proxy server remote server root name server server farm virtual server web server network server software as a service web service web application mobile application mobile service part of a local computing application service and other types of network service. A web application for example may include a machine learning algorithm or a prediction algorithm to determine additional requests sent from FUSE storage client unit based upon identifying metadata of user application .

Further storage prediction service unit may for example predict whether additional requests may be sent based upon other characteristics of user application and computing device i.e. source IP address source port destination IP address or port destination service such as WWW or FTP protocols TTL values netblock of originator or of the source or many other attributes by using machine learning pattern recognition or prefetching algorithms mentioned above. Also storage prediction service unit may implement techniques such as online or offline prefetching algorithms. Storage prediction service unit may collect characteristic metadata from connections of resource units or storage media units via communication link .

That is storage prediction service unit makes a connection to each of storage media unit or other resource units via communication link by using networking communications. In particular storage prediction service unit may evaluate policies storage content or capacity administration encryption authentication and other information from storage media units or other resource units . Storage prediction service unit may compare information from storage media unit or other resource units with characteristics of user application or computing device . Based on the comparison storage prediction service unit may calculate metadata and information for the prediction algorithms that may be online or offline algorithms. Moreover storage prediction service unit may predict additional requests from user applications based on metadata calculated from storage media units resource units or other information collected from network .

Upon storage prediction service unit predicting an additional request storage prediction service unit may for example identify at least one storage media unit or at least one resource unit corresponding to the additional request. That is storage prediction service unit may retrieve the MAC Media Access Control address IP address IP protocols file based protocols e.g. NFS SMB CIFS AFP or NCP administration authentication authorization other configuration or identification information related to storage media unit or other resource unit . This metadata information may be stored in cache by storage prediction service unit via communication link .

For example storage prediction service unit may identify a network attached storage NAS which may be connected to network providing data access to user application . User application may access data stored on a NAS and may access another NAS connected to network . With that storage prediction service unit may identify that other NAS based on files related to user application may be accessing. Storage prediction service unit may collect metadata information and predict which other NAS user application may request for access. Further storage prediction service unit may store metadata associated with the other NAS in cache . Subsequently user application may access to the other NAS before sending a request.

Network storage service unit represents one example of a network management service that provides configuration data corresponding to one or more storage media units . For example network storage service unit may further include servers workstations ad server authentication server caching server database server dedicated server DNS server domain name server e mail server file server ftp server IRC server newsgroup server proxy server remote server root name server server farm virtual server web server network server software as a service web service web application mobile application mobile service or other types of network storage service. Network storage service unit may also include at least one router and network communication link for sharing configuration metadata with and forwarding configuration metadata to other service units via communication links .

Network storage service unit may retrieve identification metadata associated with one or more requests for storage media units from storage prediction service unit via cache . Network storage service unit may update maintain and synchronize for example configuration metadata and the identification metadata associated with one or more requests for storage media units or resource units . Network storage service unit may send for example the configuration metadata to FUSE storage client unit for access and synchronization of one or more storage media units or resource units .

In one example storage media unit or resource unit may experience changes in network . Network storage service unit may continuously and periodically synchronize cache to account for these changes. Moreover network storage service unit may update metadata pertaining to storage media unit or resource unit in order to replicate any changes in real time throughout user application FUSE storage client unit and storage media units or resource units . User application may for example have real time synchronization throughout network . That is storage media unit or resource unit may change internally while user application has storage media unit or resource unit mounted but user application may have updates in real time in the transparent view or translational of storage media unit or resource unit .

Network storage service unit and storage prediction service unit may periodically or continuously for example update metadata associated with one or more storage media units or resource units that may be stored in cache . Synchronizing resources transparently across network when storage media unit or resource unit that may be mounted to user application is advantageous in order for user application to reduce application latency lower bandwidth consumption and receive real time updates.

In another example user application may mount resource unit that may be associated with one or more storage media units . In particular data may be stored in a plurality of storage media units or resource units and user application may access a transparent view of translation of this data. In order words user application may receive a total or complete view of resource unit but user application may be unaware that data may be stored in a plurality of storage media units or resource units . In the background network storage service unit and storage prediction service unit may continuously or periodically maintain the transparency or translation of resource unit or storage media unit .

In another example user application may mount storage media unit that may have a storage capacity of 2 terabytes. User application may have a transparent view or translation of the entire 2 terabytes despite having a buffer size of 8 gigabytes. User application may for example mount several storage media units that collectively have a storage capacity of 20 terabytes. User application may have a transparent view or translation of the entire 20 terabytes despite having a buffer size of 8 gigabytes where each storage media unit may be deployed across network . Accordingly user application may have resources stored in each storage media unit and synchronized the data with real time changes.

NFC may receive and transmit configuration information or metadata from network storage service module storage prediction service module or cache via communication link . Communication link may further be a communication protocol for exchanging information over network . Communication protocol may include Ethernet internet protocol suite SONET SDH asynchronous transfer mode HTTP TCP IP wired or wireless technologies or other types of networking communications. Further NFC may continuously receive and transmit synchronization information between network storage service module storage prediction service module or cache . Any changes that may occur within network or within user application may be updated by FUSE module or buffer .

For example user application module may display an application or data within user interface module and the application or data may be updated within network and cache . Network storage service module may send an updated configuration metadata to NFC via communication link . Configuration metadata may further include network storage device IP addresses the MAC addresses user identification information and any other type of configuration metadata. Further NFC may relay the configuration metadata to buffer which may maintain or relay the configuration metadata to FUSE storage client module which may update FUSE module . UI module for example may display an updated application or data for user application .

Cache may implement cache replacement strategies algorithms like Belady s algorithm random replacement adaptive replacement Frequency Based Replacement FBR Low Inter reference Recency Set LIRS first in first out FIFO least recently used LRU metadata or other cache optimizing algorithms that a computer program or a hardware maintained structure may follow to manage a cache of information stored on the computer. When cache is full the algorithm may choose which metadata to discard to make room for new metadata. Cache may vary in storage capacity.

Buffer may be created within FUSE storage client module of virtual memory which may be implemented as an input output I O resource and used as a mediating metadata transfer. User application may request at least one resource and FUSE storage client module may search buffer for the requested resource. Buffer may satisfy the request with metadata associated stored within and FUSE storage client module may not send the request for at least one resource to network storage service module . However FUSE storage client module may send the request for at least one resource to storage prediction service module to update cache . Metadata contained within buffer may include configuration metadata to mount storage media device for at least one resource in FUSE module . Otherwise FUSE storage client module may send the request for at least one resource to network storage service module and storage prediction service module .

Network storage service and storage prediction service may retrieve the metadata from storage media device within network and send the metadata associated with the request to FUSE storage client unit . FUSE storage client may send the request to FUSE module for mounting in logical volume . User application may have access to storage media for a transparent view or translation.

If storage prediction service unit predicts that FUSE storage client unit may send additional requests for example storage prediction service unit may update and store additional requests and metadata in cache identifying one or more storage media devices . If metadata associated with the storage media device is not stored in cache network storage service unit may retrieve identified metadata and configure storage media device . Network storage service unit may send configuration metadata identifying one or more storage media devices to FUSE storage client unit to access and synchronize storage media devices for a transparent view or translation. FUSE storage client unit may update buffer and synchronize user application across storage media devices .

Various examples have been described. These and other examples are within the scope of the following claims.

