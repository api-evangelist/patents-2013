---

title: System iteratively reducing I/O requests during migration of virtual storage system
abstract: Method and system for a non-disruptive migration of a source virtual storage system from a source cluster to a destination cluster is provided. The method includes monitoring a current transfer rate for migrating information from the source cluster to the destination cluster during a migration operation; iteratively reducing a rate at which I/O requests are processed until a transfer rate for transferring the information from the source cluster to the destination cluster within the duration is reached; and entering a cutover phase for the migration operation when the virtual storage system presented by the source cluster is taken offline for the duration and after the information is migrated to the destination cluster, the virtual storage system is presented by the destination cluster.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09083724&OS=09083724&RS=09083724
owner: NETAPP, INC.
number: 09083724
owner_city: Sunnyvale
owner_country: US
publication_date: 20130530
---
The present disclosure relates to storage systems and more particularly to virtual storage system migration.

Various forms of storage systems are used today. These forms include direct attached storage network attached storage NAS systems storage area networks SANs and others. Storage systems are commonly used for a variety of purposes such as providing multiple users with access to shared data backing up data and others.

A storage system typically includes at least one computing system may also be referred to as a server or storage server which is a processing system configured to store and retrieve data on behalf of one or more client computing systems clients . The storage system may be presented to a client system as a virtual storage system with storage space for storing information. The virtual storage system is associated with a physical storage system but operates as an independent system for handling client input output I O requests.

The virtual storage system may be migrated from one source system to a destination system. It is desirable to complete a migration operation from the source to the destination within a duration that is non disruptive for clients. Continuous efforts are being made for efficiently performing a migration.

As a preliminary note as used in this disclosure the terms component module system and the like are intended to refer to a computer related entity either software executing general purpose processor hardware firmware and a combination thereof. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also these components can execute from various computer readable media having various data structures stored thereon.

The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal . Computer executable components can be stored for example on computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory memory stick or any other storage device in accordance with the claimed subject matter.

Storage Environment depicts an illustrative embodiment of a non clustered storage environment including a plurality of client computing systems devices . .N may also be referred to as client or clients storage systems A N may also be referred to as storage system a management console and at least one network communicably connecting client systems . .N storage systems and management console .

Clients . .N may be general purpose computers having a plurality of components. These components may include a central processing unit CPU main memory I O devices and storage devices for example flash memory hard drives and others . The main memory may be coupled to the CPU via a system bus or a local memory bus. The main memory may be used to provide the CPU access to data and or program information that is stored in main memory at execution time. Typically the main memory is composed of random access memory RAM circuits. A computer system with the CPU and main memory is often referred to as a host system.

Each storage system may include or interface with a storage subsystem shown as A N having multiple mass storage devices A N may also be referred to as storage device s and at least an adapter shown as A N that interfaces between storage system and storage devices . Adapter may be a network interface card a host bus adapter a host channel adapter or any other adapter type that can interface with storage system for facilitating execution of input output requests. The mass storage devices may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage or any other type of non volatile storage devices suitable for storing structured or unstructured data.

The storage system executes a storage operating system for managing storage space within storage subsystem and presenting storage space to clients . As an example storage operating system maybe the DATA ONTAP storage operating system available from NetApp Inc. that implements a Write Anywhere File Layout WAFL storage system or any other suitable storage operating system.

Storage operating system and applications running on the client systems . .N communicate according to well known protocols such as the NFS protocol or the CIFS protocol to make data stored on storage device appear to users and or application programs as though the data were stored locally on the client systems . .N. CIFS means the Common Internet File System Protocol an access protocol that client systems use to request file access services from storage systems over a network. NFS means a Network File System a protocol that allows a user to access storage over a network.

Storage operating system can present or export data stored on at storage devices as a volume or one or more qtree sub volume units to each of the client systems . .N. In one embodiment a volume is a logical data set which is an abstraction of physical storage combining one or more physical mass storage devices or parts thereof into a single logical storage object. From the perspective of a client system each volume can appear to be a single storage drive. However each volume can represent the storage space in one storage device an aggregate of some or all of the storage space in multiple storage devices a RAID group or any other suitable set of storage space. Each volume is configured to store data containers for example data files scripts word processing documents executable programs structured and unstructured data and the like. Specifically each volume can include a number of individually addressable files.

In a typical mode of operation one of the client systems . .N transmits one or more I O commands such as an NFS or CIFS request over network to the storage system . The storage system issues one or more I O commands to storage device to read or write the data on behalf of the client system. The storage system also issues an NFS or CIFS response containing the requested data over network to the client system.

In some instances operating system may present storage system to clients as virtual storage systems A N may also be referred to as a VServer and also referred to as virtual storage system . The virtual storage system is addressable by the client systems and handles input output commands just like storage system . This allows one to present a physical storage system as multiple virtual storage systems to various clients.

Each virtual storage system is associated with a physical storage system . For example as shown in virtual storage system A is associated with storage system A while virtual storage system N is associated with storage system N.

Each virtual storage system is assigned a unique access address that is used by a client to access the storage system. For example each virtual storage system is assigned an Internet Protocol IP address that is used by client to send I O commands. The IP address may be assigned when virtual storage system is configured using a management application executed by management console . The management console may be for example a conventional PC workstation or the like. The storage management application can be a software application typically used by a storage network administrator to manage a pool of storage devices and configure virtual storage system .

Communication between the storage management application and storage system may be accomplished using any of the various conventional communication protocols and or application programming interfaces APIs the details of which are not germane to the technique being introduced here. This communication can be done through the network or it can be done via a direct link not shown between the management console and one or more of the storage systems.

Clustered System The embodiments disclosed above have been described with respect to a non cluster based storage system that may have a traditional monolithic architecture where a storage server has access to a dedicated storage subsystem. However the adaptive embodiments can be implemented in a cluster based system that has a distributed architecture and where VServers can be migrated from one node to another node. The cluster based system is described below in detail.

Each of the plurality of nodes . . is configured to include an N module a D module and an M host each of which can be implemented as a separate processor executable or machine implemented module. Specifically node . includes an N module . a D module . and an M host . node . includes an N module . a D module . and an M host . and node . includes an N module . a D module . and an M host ..

The N modules . . include functionality that enables the respective nodes . . to connect to one or more of the client systems . . over the computer network while the D modules . . connect to one or more of the storage devices . ..

The M hosts . . provide management functions for the clustered storage system . Accordingly each of the plurality of server nodes . . in the clustered storage server arrangement provides the functionality of a storage server.

A switched virtualization layer including a plurality of virtual interfaces VIFs is provided below the interface between the respective N modules . . and the client systems . . allowing storage . . associated with the nodes . . to be presented to the client systems . . as a single shared storage pool. For example the switched virtualization layer may implement a virtual interface architecture. depicts only the VIFs at the interfaces to the N modules . . for clarity of illustration.

The clustered storage system can be organized into any suitable number of VServers A N similar to in which each virtual storage system represents a single storage system namespace with separate network access. Each virtual storage system has a user domain and a security domain that are separate from the user and security domains of other virtual storage systems. Client systems can access storage space via a VServer from any node of the clustered system .

Each of the nodes . . may be defined as a computer adapted to provide application services to one or more of the client systems . .. In this context a VServer is an instance of an application service provided to a client system. The nodes . . are interconnected by the switching fabric which for example may be embodied as a Gigabit Ethernet switch.

Although depicts three N modules . . the D modules . . and the M Hosts . . any other suitable number of N modules D modules and M Hosts may be provided. There may also be different numbers of N modules D modules and or M Hosts within the clustered storage system . For example in alternative embodiments the clustered storage system may include a plurality of N modules and a plurality of D modules interconnected in a configuration that does not reflect a one to one correspondence between the N modules and D modules.

The client systems . . of may be implemented as general purpose computers configured to interact with the respective nodes . . in accordance with a client server model of information delivery. In the presently disclosed embodiment the interaction between the client systems . . and the nodes . . enable the provision of network data storage services. Specifically each client system . . may request the services of one of the respective nodes . . . and that node may return the results of the services requested by the client system by exchanging packets over the computer network which may be wire based optical fiber wireless or any other suitable combination thereof. The client systems . . may issue packets according to file based access protocols such as the NFS or CIFS protocol when accessing information in the form of files and directories.

In a typical mode of operation one of the client systems . . transmits an NFS or CIFS request for data to one of the nodes . . within the clustered storage system and the VIF associated with the respective node receives the client request. It is noted that each VIF within the clustered system is a network endpoint having an associated IP address and that each VIF can migrate from N module to N module using the process flow described below. The client request typically includes a file handle for a data file stored in a specified volume on at storage . ..

Storage System Node is a block diagram of a node . that is illustratively embodied as a storage system comprising of a plurality of processors A and B a memory a network adapter a cluster access adapter a storage adapter and local storage interconnected by a system bus . The local storage comprises one or more storage devices utilized by the node to locally store configuration information e.g. in a configuration data structure .

Node . may manage a plurality of storage volumes for a VServer that is migrated from one cluster to another. The system and processes for migrating a VServer are described below in more detail.

The cluster access adapter comprises a plurality of ports adapted to couple node . to other nodes of cluster . In the illustrative embodiment Ethernet may be used as the clustering protocol and interconnect media although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate embodiments where the N modules and D modules are implemented on separate storage systems or computers the cluster access adapter is utilized by the N D module for communicating with other N D modules in the cluster .

Each node . is illustratively embodied as a dual processor storage system executing a storage operating system similar to that preferably implements a high level module such as a file system to logically organize the information as a hierarchical structure of named directories and files on storage .. However it will be apparent to those of ordinary skill in the art that the node . may alternatively comprise a single or more than two processor systems. Illustratively one processor A executes the functions of the N module on the node while the other processor executes the functions of the D module .

The memory illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may in turn comprise processing elements and or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the invention described herein.

The storage operating system portions of which is typically resident in memory and executed by the processing elements functionally organizes the node . by inter alia invoking storage operations in support of the storage service implemented by the node.

The network adapter comprises a plurality of ports adapted to couple the node . to one or more clients . . over point to point links wide area networks virtual private networks implemented over a public network Internet or a shared local area network. The network adapter thus may comprise the mechanical electrical and signaling circuitry needed to connect the node to the network. Illustratively the computer network may be embodied as an Ethernet network or a Fibre Channel network. Each client . . may communicate with the node over network by exchanging discrete frames or packets of data according to pre defined protocols such as TCP IP.

The storage adapter cooperates with the storage operating system executing on the node . to access information requested by the clients. The information may be stored on any type of attached array of writable storage device media such as video tape optical DVD magnetic tape bubble memory electronic random access memory micro electro mechanical and any other similar media adapted to store information including data and parity information. However as illustratively described herein the information is preferably stored on storage device .. The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the storage devices over an I O interconnect arrangement such as a conventional high performance FC link topology.

VServer Migration shows an example of migrating a VServer from a source cluster to a destination VServer at a destination cluster . Clusters and are similar to cluster described above with respect to having a plurality of nodes. The VServer is presented to clients . .N. The clients can read and write data using storage volumes A N at the source cluster via the Vserver . The storage volumes may be managed by one or more nodes of source cluster .

To migrate VServer during a migration operation first a destination VServer is created at the destination cluster during a setup phase. The destination volumes A N are then created at the destination cluster to store information associated with source volumes A N at the source cluster .

The attributes of the destination volumes are similar to the attributes of the source volumes. As an example storage volume attributes include a storage volume size a unique storage volume identifier permissions for reading and or writing information and others. The storage volume attributes may be stored at a data structure and generally created during a storage volume configuration process the details of which are not germane to the embodiments disclosed herein.

During a baseline phase of the migration operation a snapshot without derogation any trademark rights of NetApp Inc. in the term Snapshot of the source VServer is taken and replicated at the destination cluster. The term snapshot as used herein means a point in time copy of a storage file system. The snapshot is a persistent point in time PPT image of the file system that enables quick recovery of data after data has been corrupted lost or altered. Snapshots can be created by copying data at predetermined point in time to form a consistent image or virtually by using a pointer to form the image of the data.

After the baseline image is generated during an update phase any changes to the storage volumes at the source cluster are incrementally replicated at the destination cluster by taking incremental snapshots. This may be referred to as incremental replication.

After the update phase the migration operation enters an administrative cutover phase. During this phase the process as described below in detail determines if the entire migration can be completed within a cutover duration. The cutover duration is a maximum time during which a storage volume may be unavailable to a client. The cutover duration is based on the protocol used to access and communicate with a VServer for example NFS CIFS and others. It is desirable to complete the migration within the cutover duration so that client I O requests are not disrupted.

The embodiments described herein iteratively determine a transfer rate at which data is being migrated at any given time and throttles down processing of write requests to ascertain if the migration can be completed within the cutover duration. The write requests are throttled so that the resources consumed by client traffic can instead be used for completing the migration operation.

Once the system determines that cutover can be achieved then the migration operation enters the cutover phase during which access to VServer via the source cluster is frozen and a timer is started to monitor cutover completion within the cutover duration. A final snapshot of the source volumes is then taken and replicated at the destination cluster. Configuration information regarding VServer is also replicated at the destination cluster. Thereafter during an activation phase the destination VServer is started and client requests for reading or writing information are handled by the destination VServer . The processes and details of the various modules involved in the migration operation are described below with respect to .

In one embodiment the source cluster executes a source migration module A and the destination cluster executes a migration module B having a plurality of components. The instructions for the source migration module A may be executed by a processor out of a memory device.

In one embodiment a cutover manager A is provided at the source cluster and a cutover manager B is provided at the destination cluster . The cutover manager A and B are responsible for handling the various steps involved during the cutover phase described below in detail.

System also includes migration agent coordinators A and B at the source cluster and destination cluster respectively. The migration agent coordinators co ordinate among a plurality of migration agents that are executed at a plurality of nodes within each cluster as described below in detail.

System includes a heart beat manager A and B executed at the source cluster and destination cluster respectively. The heart beat managers send messages to each other using link to ensure that the nodes at the source cluster and the destination cluster are operational during the migration operation. The heart beat managers also maintain a timer to track successful completion of cutover within the cutover duration which may be 120 seconds.

If a cutover attempt fails or cannot be completed within the permitted cutover duration then the system uses fall back handler A at the source cluster for maintaining access to VServer . The fallback handler A will bring back the VServer online and rolls back any configuration changes that may have been made to the destination VServer during the different migration operation phases.

System also includes a migration state manager A and B at the source cluster and destination cluster respectively. The migration state managers maintain a current state of a state machine that manages the migration process. The state machine may be executed by a master migration agent as described below in detail.

In one embodiment system also includes a configuration replication service CRS module A and B at the source cluster and the destination cluster respectively. The CRS module A interfaces with a CRS agent A via a director module A that interfaces with CRS agent B to copy configuration information of VServer . The configuration information may be stored as VServer objects A and copied via link . At the destination cluster the CRS agent B provides the configuration information to a director module B that stores the information as VServer objects B at the destination cluster .

Both the source and the destination cluster nodes also execute a VIF manager module A and B respectively. The VIF manager modules provide a virtual interface to networking modules A and B at the D Module A and B respectively. The networking modules provide an interface between N Modules and D Modules.

System also executes a plurality of migration agents A and B according to one embodiment. It is noteworthy that when there are multiple nodes in source cluster then one migration agent for example A interfaces with other migration agents for managing the migration operation involving storage volumes that are spread out and managed by different D Modules. The migration agent A then may operate as a master migration agent.

In one embodiment migration agent A generates snapshots of the storage volumes A N via a volume manager A. The volume manager A may be a part of a file system A of a storage operating system. Once snapshots are taken migration agent A initiates updates at the destination cluster via a replication engine A. Both the migration agent and the replication engine interface with the file system A of the storage operating system that is described below in detail.

The migration agent A also interfaces with a quality of service QOS module to throttle and manage client traffic during the migration operation as described below in detail. Migration agent A also maintains the state of the migration as executed by a state machine described below in detail.

At the destination cluster migration agent B interfaces with file system B and the replication engine to ensure that information and snapshots are being updated at the destination cluster.

Replication engine A uses a block replication protocol BRE that is used to transfer information from D blade A to D Module B via link . One example of such a BRE is the SpinNp protocol provided by NetApp Inc the assignee of the present application and without derogation of any trademark rights of NetApp Inc. Details of SpinNp are not germane to the embodiments disclosed herein.

During block B the destination VServer is created as a place holder that resembles the source VServer . This includes creating storage volumes at the destination with the same name and size appropriate logical interfaces LIFs at the appropriate network ports with a same address for example IP addresses and world wide numbers WWNs of the source storage volumes. The state of the source VServer is set to a special state indicating that it is being migrated. The state of the destination VServer is set to indicate that it is the migration destination for VServer such that the LIFs presented to clients for destination VServer are not initialized until the migration operation is completed. In one embodiment the destination VServer may be generated using a graphical user interface GUI or a command line interface CLI .

In block B a baseline and an update phase for the migration is executed. During the baseline phase a snapshot of volumes N is taken and then transferred by replication engine A using link . First a baseline transfer of the storage volume data is started. Once that is completed then incremental changes to the storage volumes A N are replicated at the destination cluster during the update phase. Replication continues until the data at the source and destination clusters is within a desired level.

In block B an administrative cutover phase is executed. The goal of the administrative phase is to complete incremental replication of VServer within a certain duration for example X seconds. This is achieved by monitoring a rate at which replication occurs at any given time and then ascertain the duration in which the replication can be completed. If the duration is more than X seconds then the QOS module is used to throttle down the rate at which I O requests for clients is being processed. This provides more bandwidth and resources towards the replication. The replication time is measured again to ensure that replication can be completed within X seconds. The administrative phase is described below in detail with respect to .

In block B the cutover phase is executed. This phase is monitored by the cutover manager A as described below in detail. A timer is started by the heartbeat manager A. A final snapshot of source volumes A N is taken. The final snapshot is then transferred to the destination cluster using the BRE protocol via link . The destination volumes A N are then modified so that they match the source volumes. The LIFs that present the VServer to the clients are shut down.

It is noteworthy that if the system detects that the migration will not complete within the cutover duration then a fallback phase is executed. During fallback the VServer is brought online and the migration operation returns to the administrative cutover phase.

In block B an activate phase is executed. During this phase an identifier for the destination VServer is modified such that the identity of the destination VServer is exactly the same as that of the source VServer . This enables a client to access VServer without changing anything at the client system. The LIFs at the destination cluster are activated allowing clients to communicate with the destination cluster . The storage volumes A N are taken offline and optionally VServer may be deleted. I O operations for clients using destination cluster are then started.

A migration operation starts at state when the setup phase for the migration operation is started. The migration agents at each node of the source cluster are started.

A baseline snapshot of the source storage volumes A N is taken at state . If there is a failure at this state the migration enters an abort state . The abort state can be entered from various states as shown in .

After the baseline snapshots are taken the snapshots are transferred to the destination cluster . Thereafter the migration enters an update phase at state . During this state incremental changes to the source volumes after the baseline snapshots continue to be transferred to the destination cluster . After certain number of transfers the migration is ready to enter into the administrative cutover phase at state . This state is reached when the migration agent A receives a Ready for Admin Cutover message from all the migration agents of the plurality of nodes that are affected by the migration operation within the source cluster as well as the destination cluster .

As mentioned above during the administrative cutover state the system determines if the transfer from the source cluster can be completed within a certain duration for example X seconds. This is an iterative process during which the migration agents of each node communicate with the QOS modules to throttle client traffic such that the replication can take priority over processing of I O requests. A heartbeat thread is also started during this phase to ensure that both source and cluster nodes are on line. Once all the migration agents confirm with the master migration agent for example A that replication can be completed within the X seconds then the master migration agent sends a message to the destination cluster to start the cutover phase at state .

During this state the migration agents and the heart beat threads are monitored to ensure that the migration agents and the destination cluster nodes are online. A timer is also started to ensure that cutover can be completed within an appropriate time. During cutover a final snapshot of the source volumes is taken and transferred to the destination cluster. The configuration information of the source volumes is also transferred to the destination cluster. If for some reason the timer expires a migration agent or the destination cluster go offline the migration operation reverts back to the update state . In another embodiment the migration state may move to the abort state when the cutover operation is aborted.

If the final snapshots are successfully transferred and the source volumes are quiesced then the shutdown VServer at state is reached. During this state the activate phase described above is executed. Thereafter the migration operation is completed.

In block B a current transfer rate at which information is being transferred by the replication engine A is obtained by the migration agent A. As explained above the replication engine A is responsible for transferring information between the source and destination clusters. The replication engine A maintains a data structure not shown to track the amount of information that is transferred within a given duration. This transfer rate is provided to the migration agent A. When the storage volumes affected by the migration operation are spread out among multiple nodes then the migration agent of each node provides the information to migration agent A operating as a master migration agent.

In one embodiment the migration agent A receives the transfer rate over a period of time so that the migration agent can tabulate the average transfer rate over the period of time. The migration agent then determines a throughput rate or convergence rate to ascertain if the migration operation can be completed within the cutover duration. The throughput rate may be based on the product of the average transfer rate and the cutover duration.

In block B the migration agent determines if the throughput rate is enough to complete the duration within the cutover duration. The migration agent A makes this determination by monitoring the actual transfer rate over a certain duration in the administrative cutover phase. The monitoring step is performed so that the system can reliably enter the cutover phase.

If the throughput rate is low and cannot complete the migration operation within the cutover duration in block B the migration agent A notifies the QOS module of all the migration agents within the source cluster that are affected by the migration operation to throttle down processing of client I O requests such that more resources are allocated to the migration operation for completing the transfer.

In one embodiment QOS module maintains a plurality of data structure for allocating bandwidth for client I O requests. The bandwidth may be assigned by a storage administrator. The bandwidth information is provided to the storage operating system that handles client requests.

After the client I O processing is throttled down the source cluster continues to perform incremental replication in block B. The process then reverts to block B so that the migration agent can iteratively determine and confirm that the throughput rate is sufficient to complete the migration operation. Once that determination is made in block B the migration agent A sends a message to migration agent B that it is ready to start the cutover phase. The cutover phase has been described above and the migration operation is then completed or aborted if there is an error as described above in detail.

Operating System illustrates a generic example of storage operating system executed by node . according to one embodiment of the present disclosure. The storage operating system manages all the storage volumes and conducts read and write operations. To complete the migration operation within the cutover duration the migration agents at all the nodes interface with the storage operating system layers. The QOS module also interfaces with the storage operating system to throttle client write requests to increase the throughput rate for the BRE to complete the migration operation.

In one example storage operating system may include several modules or layers executed by one or both of N Module and D Module . These layers include a file system manager that keeps track of a directory structure hierarchy of the data stored in storage devices and manages read write operations i.e. executes read write operations on storage in response to client . . requests.

Operating system may also include a protocol layer and an associated network access layer to allow node . to communicate over a network with other systems such as clients . .. Protocol layer may implement one or more of various higher level network protocols such as NFS CIFS Hypertext Transfer Protocol HTTP TCP IP and others as described below.

Network access layer may include one or more drivers which implement one or more lower level protocols to communicate over the network such as Ethernet. Interactions between clients . . and mass storage devices . are illustrated schematically as a path which illustrates the flow of data through operating system .

The operating system may also include a storage access layer and an associated storage driver layer to allow D module to communicate with a storage device. The storage access layer may implement a higher level storage protocol such as RAID while the storage driver layer may implement a lower level storage device access protocol such as FC or SCSI.

As used herein the term storage operating system generally refers to the computer executable code operable on a computer to perform a storage function that manages data access and may in the case of a node . implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel an application program operating over a general purpose operating system such as UNIX or Windows XP or as a general purpose operating system with configurable functionality which is configured for storage applications as described herein.

In addition it will be understood to those skilled in the art that the invention described herein may apply to any type of special purpose e.g. file server filer or storage serving appliance or general purpose computer including a standalone computer or portion thereof embodied as or including a storage system. Moreover the teachings of this disclosure can be adapted to a variety of storage system architectures including but not limited to a network attached storage environment a storage area network and a storage device directly attached to a client or host computer. The term storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems. It should be noted that while this description is written in terms of a write any where file system the teachings of the present invention may be utilized with any suitable file system including a write in place file system.

Processing System is a high level block diagram showing an example of the architecture of a processing system that may be used according to one embodiment. The processing system can represent management console client or storage system for example. Note that certain standard and well known components which are not germane to the present invention are not shown in .

The processing system includes one or more processor s and memory coupled to a bus system . The bus system shown in is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor s are the central processing units CPUs of the processing system and thus control its overall operation. In certain embodiments the processors accomplish this by executing software stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory includes the main memory of the processing system . Software which implements the process steps described above may reside in and execute by processors from memory .

Also connected to the processors through the bus system are one or more internal mass storage devices and a network adapter . Internal mass storage devices may be or include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The network adapter provides the processing system with the ability to communicate with remote devices e.g. storage servers over a network and may be for example an Ethernet adapter a Fibre Channel adapter or the like.

The processing system also includes one or more input output I O devices coupled to the bus system . The I O devices may include for example a display device a keyboard a mouse etc.

Thus a method and apparatus for migrating a virtual storage system have been described. Note that references throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore it is emphasized and should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more embodiments of the invention as will be recognized by those of ordinary skill in the art.

While the present disclosure is described above with respect to what is currently considered its preferred embodiments it is to be understood that the disclosure is not limited to that described above. To the contrary the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims.

