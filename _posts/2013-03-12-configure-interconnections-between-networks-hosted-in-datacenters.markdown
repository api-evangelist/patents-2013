---

title: Configure interconnections between networks hosted in datacenters
abstract: Systems, methods and computer-readable media are described for connecting private networks that may otherwise be isolated. More particularly, the private networks may include private clouds that may be operated on a plurality of datacenters. A determination may be made as to whether network connections between the private clouds may be established and as to what compute resources of the private clouds may be exposed to the network connections. This determination may be used to generate virtual network paths that may be configured to route traffic between the private clouds.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09306949&OS=09306949&RS=09306949
owner: Amazon Technologies, Inc.
number: 09306949
owner_city: Reno
owner_country: US
publication_date: 20130312
---
Datacenter providers sometimes referred to as cloud service providers provide services to various entities such as corporations universities government agencies and other types of customers to compute resources hosted in one or more datacenters. There are a number of reasons for entities to host their compute resources or at least some of their compute resources in datacenters. For example hosting their compute resources in datacenters may provide the entities with flexibility in resource allocation as well as providing scalability improved resource allocation reduced operating costs and the like.

Often a cloud service provider virtualizes some or all of the necessary compute resources to generate private clouds of topologies specific to its customers. This virtualization allows the cloud service provider to dynamically scale hardware and software of the compute resources to meet needs and requirements of its customers.

The private cloud of one customer is typically isolated from a private cloud of another customer of the same cloud service provider even when the two private clouds are hosted on compute resources operating in the same datacenter. The isolation protects each customer from security breaches among other things and renders each private cloud a private network inaccessible by the other customers of the same cloud service provider.

As noted above datacenters may be configured to host what are sometimes referred to as private clouds. The private clouds are virtualized private networks that are typically hosted in the datacenters of cloud service providers on behalf of entities like customers of the cloud service providers. The cloud service providers typically host private clouds for a large number of entities with networks or compute resources that may be located within the same datacenter or across multiple datacenters owned or controlled by the same cloud service provider. The entities then typically access the compute resources hosted in their respective private clouds by way of a virtual private network VPN for example.

As noted above the various private clouds hosted by a cloud service provider are generally isolated. Nevertheless at times the entities of the cloud service provider may want to share access to one or more of their compute resources hosted on their respective private clouds with each other. For example a first entity may want to enable a second entity to access one or more of the compute resources in the first entity s private cloud from a compute resource within the second entity s private cloud.

As described more fully herein the cloud service provider may provide a service that facilitates one or more communication paths between the private clouds of its entities. To provide for example the second entity with access to a compute resource on the private cloud of the first entity the cloud service provider may determine whether the first entity has authorized the second entity to access the first entity s private cloud. Moreover the cloud service provider may also configure the internal network and compute resources within the datacenters of the cloud service provider to route data between the private clouds of the first and second entities.

Further detail about systems methods and computer readable media for configuring and generating the connections between the private clouds is provided herein. It should be appreciated that the subject matter presented herein may be implemented as a computer process a computer controlled apparatus a computing system or an article of manufacture such as a computer readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types.

Those skilled in the art will also appreciate that the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein including multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers handheld computers personal digital assistants e readers cellular telephone devices special purposed hardware devices network appliances and the like. The embodiments described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

A compute node which may be referred to also as a computing node may be implemented on a wide variety of computing environments such as commodity hardware computers virtual machines computing clusters and computing appliances. Any of these computing devices or environments may for convenience be described as compute nodes.

Each type or configuration of compute resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Entities may choose to allocate a number of small processing resources as Web servers and or one large processing resource as a database server for example.

The compute resources provided by PES platform may be enabled by one or more datacenters A N which may be referred herein singularly as datacenter or in the plural as datacenters . Datacenters may be facilities that house and operate computer systems and associated components and may include redundant and backup power communications cooling and security systems. Datacenters may be located in a same geographical area such as in a same facility and may be interconnected using private networks such as high speed fiber optic networks controlled and managed by a service provider of PES platform . Datacenters may also be distributed across geographically disparate locations and may be interconnected in part using public networks such as the Internet. One illustrative configuration for datacenter that implements the concepts and technologies disclosed herein is described below with regard to .

Entities of PES platform may access the compute resources provided by datacenters over a wide area network WAN . Although a WAN is illustrated in it should be appreciated that a local area network LAN the Internet or any other networking topology known in the art that connects datacenters to remote entities and other users may be utilized. It should also be appreciated that combinations of such networks may also be utilized.

An entity or other entities that are customers of PES platform may utilize a computing system to access the compute resources provided by datacenters . Customer computing system may be a computer capable of accessing PES platform such as a server computer a desktop or laptop personal computer a tablet computer a wireless telephone a PDA an e reader a game console a set top box or any other computing device.

As is described in greater detail below customer computing system may be utilized to configure aspects of the compute resources provided by PES platform . In this regard PES platform may provide a Web interface through which aspects of its operation may be configured through the use of a Web browser application program executing on customer computing system . Alternatively a stand alone application program executing on customer computing system may access an application programming interface API exposed by PES platform for performing the configuration operations. Other mechanisms for configuring the operation of PES platform including launching new virtual machine instances on PES platform may also be utilized.

According to embodiments disclosed herein capacities of purchased compute resources provided by PES platform can be scaled in response to demand. In this regard scaling refers to the process of instantiating which may also be referred to herein as launching or creating or terminating which may also be referred to herein as de scaling instances of compute resources in response to demand.

Auto scaling may be one mechanism for scaling compute resources in response to increases or lulls in demand for the resources. Auto scaling may allow entities of PES platform to scale their purchased compute resources according to conditions defined by the entity. For instance rules may be defined for scaling up capacity in a particular manner in response to the occurrence of specified conditions such as a spike in demand. Similarly rules may also be defined to scale down capacity in a particular manner in response to the occurrence of other conditions such as a lull in demand. The mechanisms disclosed herein for launching virtual machine instances may be utilized when instances are manually launched by an entity or when instances are launched by an auto scaling component in PES platform .

PES platform may also be configured with a deployment component to assist entities in the deployment of new instances of compute resources. The deployment component may receive a configuration from an entity that may include data describing how new instances should be configured. For example the configuration may specify one or more applications or software components that should be installed in new instances provide scripts and or other types of code to be executed in new instances provide cache warming logic specifying how an application cache should be prepared and other types of information. The deployment component utilizes the entity provided configuration and cache warming logic to launch configure and prime new instances of compute resources.

Instances A N which may be referred herein singularly as instance or in the plural as instances may be virtual machine instances. As known in the art a virtual machine instance is an instance of a software implementation of a machine i.e. a computer that executes programs like a physical machine. In the example of virtual machine instances each server may be configured to execute an instance manager capable of executing the instances. Instance manager may be a hypervisor or another type of program configured to enable the execution of multiple instances on a single server for example. As discussed above each of instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances other types of instances can be utilized with the concepts and technologies disclosed herein. For instance the technologies disclosed herein may be utilized with instances of storage resources instances of data communications resources and with other types of resources. The embodiments disclosed herein may also execute all or a portion of an application directly on a computer system without utilizing virtual machine instances.

Datacenter shown in may also include a server computer reserved for executing software components for managing the operation of datacenter server computers and instances . In particular server computer may execute a management component . As discussed above an entity of PES platform may utilize customer computing system to access management component to configure various aspects of the operation of PES platform and instances purchased by the entity. For example the entity may purchase instances and make changes to the configuration of the instances. The entity may also specify settings regarding how the purchased instances are to be scaled in response to demand. The entity may also provide requests to launch instances to management component .

As also described briefly above an auto scaling component may scale instances based upon rules defined by an entity of PES platform . For example auto scaling component may allow an entity to specify scale up rules for use in determining when new instances should be instantiated and scale down rules for use in determining when existing instances should be terminated.

Auto scaling component may execute on a single server computer or in parallel across multiple server computers in PES platform . In addition auto scaling component may consist of a number of subcomponents executing on different server computers or other computing devices in PES platform . Auto scaling component may be implemented as software hardware or any combination of the two. Auto scaling component may monitor available compute resources in PES platform over an internal management network for example.

As discussed briefly above datacenter may also be configured with a deployment component to assist entities in the deployment of new instances of compute resources. Deployment component may receive a configuration from an entity that includes data describing how new instances should be configured. For example the configuration may specify one or more applications that should be installed in new instances provide scripts and or other types of code to be executed for configuring new instances provide cache warming logic specifying how an application cache should be prepared and other types of information.

Deployment component may utilize the entity provided configuration and cache warming logic to configure prime and launch new instances . The configuration cache warming logic and other information may be specified by an entity using management component or by providing this information directly to deployment component . Other mechanisms may also be utilized to configure the operation of deployment component .

In the example datacenter shown in an appropriate LAN may be utilized to interconnect server computers A N and server computer . LAN may be also connected to WAN illustrated in . It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate load balancing devices or software modules may also be utilized for balancing a load between each of datacenters A N between each of server computers A N in each datacenter and between instances purchased by each entity of PES platform . These network topologies and devices should be apparent to those skilled in the art.

It should be appreciated that datacenter described in is merely illustrative and that other implementations may be utilized. In particular functionality described herein as being performed by management component auto scaling component and deployment component may be performed by one another may be performed by other components or may be performed by a combination of these or other components. Additionally it should be appreciated that this functionality may be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art.

Private clouds and may be associated with different entities shown as customers ABC and XYZ in . As described above each entity may use a computing system shown as computing devices and to access datacenter and its respective private clouds and . While computing devices and are described as physical computers they may in fact represent a network that includes one or more types of computing resources including for example virtual machine instances that each entity executes within its home network.

Private clouds and are isolated from each other such that compute resources of private cloud may not be accessible to private cloud from within datacenter and vice versa. For example customer ABC may use computing device to access compute resources such as instances of virtual machines on its private cloud but may not access compute resources hosted on private cloud of customer XYZ. Likewise customer XYZ may use computing device to access a compute resource hosted on its private cloud but may not access a compute resource hosted on private cloud . A compute resource hosted on a private cloud may be referred to as a computing resource of the private cloud a compute resource of the private cloud or a virtual compute resource.

To facilitate a managed connection between private clouds and datacenter may execute a management console . Management console may be configured to provide entities with at least two functions. A first function may be to verify that the connection is authorized. For example management console may allow customer ABC to demonstrate that customer XYZ has given permission to customer ABC to access its private cloud . In another example management console may allow customer XYZ to demonstrate that it allowed customer ABC to access its private cloud . Other examples also could be used to verify that customer XYZ has an authorized access to customer ABC s private cloud .

A second function of management console may be to permit an entity to define any compute resources that may be accessible to another entity at the private clouds. For example management console may allow customer ABC to define a set of compute resources that are hosted on its private cloud and that may be accessed by customer XYZ through private cloud . Likewise management console may allow customer XYZ to define a list of addresses such as internet protocol IP addresses that are associated with compute resources of its private cloud and that may be exposed to private cloud .

To allow an entity to define these aspects of private clouds management console may include an interface through which the entity may define whether its private clouds may be accessible by other entities and what compute resources of its private clouds are to be made accessible. The interface may be a Web interface an application programming interface or other mechanisms. These other mechanisms may include but are not limited to for example customer ABC calling or e mailing a contact of the service provider to authorize customer XYZ s access to some or all of the compute resources of private cloud .

Management console may be executed by server computer of . For example management console may be integrated with management component of management console may be an instance of management component or management console may be a standalone application. Management console may also be executed by other server computers of datacenter as instances within private clouds and .

Once management console verifies access of another entity to a private cloud and determines what compute resources of the private cloud are associated with the access management console may allow a compute resource at datacenter to generate a connection between the private clouds of the two entities. The compute resource is shown in as a virtual service provider which may be an instance of a virtual machine such as instance A of configured to facilitate the connection as further described in .

This connection may include a virtual network path between compute resources of the private clouds that have been authorized to communicate and may be referred to also as a communication path a virtual communication path or an overlay network path. The virtual network path connects the private clouds and is built on top of the underlying physical network of datacenter . As such virtual service provider may provide routing tables to private clouds and and may direct data between them over the virtual network path and the underlying physical network of datacenter .

Additionally to expose an instance to a public network outside of datacenter and PES the cloud service provider may assign a static and public address to the instance. Alternatively the cloud service provider may allow customer ABC to use network address translation NAT techniques to route traffic from an instance that has a private IP address to the public network. For example customer ABC may configure instance A as a NAT instance that routes traffic from instances B N which may have private IP addresses to customer ABC s home network and this home network may reside outside of datacenters and PES . As such this addressing may enable customer ABC to access its instances A N from computing device by using for example a secure shell SSH or a remote desktop protocol running on computing device .

The cloud service provider may also allow customer ABC to connect its private cloud to its home network thus extending customer ABC s security and management policies from its home network to its private cloud . For example a virtual private gateway A may be an instance hosted on private cloud and configured to manage a VPN tunnel and may use an internet protocol security IPsec protocol to securely connect private cloud to customer ABC s home network.

Customer ABC can also configure its private cloud to connect to a public network such as the Internet. For example a virtual public gateway B may be an instance hosted on private cloud and configured to enable traffic to flow between the public network and instances A N.

Virtual private gateway A and virtual public gateway B may support border gateway protocol BGP and may use dynamic routing with the connection between private cloud and customer ABC s home network. The route tables of private cloud may specify which subnets may use what gateway.

In some embodiments private cloud may also allow customer ABC to define security policies that control inbound and outbound traffic to private cloud and its instances and subnets. For example private cloud may include security groups that are configured as firewalls to control the traffic allowed in and out of a group of instances A N. Instances assigned to a security group of security groups need not be in the same subnet. Conversely instances in the same subnet need not be assigned to the same security group. For example instance A may be associated with a security group of security groups which may allow all HTTP inbound and outbound accesses having any source and destination IP addresses. Likewise instance B may be associated with another group of security groups that may allow all HTTPS inbound and outbound accesses having any source and destination IP addresses.

Private cloud may not only be connected to customer ABC s computing device or home network but may also be connected to other private clouds of other entities such as private cloud by way of virtual service provider . Private cloud may host a virtual customer edge that may be configured to connect private cloud to these inter private clouds communication paths. Virtual customer edge may be a virtual router or a virtual gateway e.g. an instance of a router or a gateway that is associated with a routing table that may direct traffic destined to private cloud to a virtual provider edge of virtual service provider . The routing table may be a virtual routing table that stores an IP address associated with virtual provider edge as a destination of traffic routed from virtual private network to other virtual private networks including private cloud .

The cloud service provider may configure virtual service provider as an instance or a component of an instance that is hosted in datacenter and that executes service provider edge . For example the cloud service provider may configure a private cloud that hosts instances of virtual service providers. In another example the cloud service provider may instance manager of to run virtual service provider .

Depending on how virtual service provider is configured virtual provider edge may be an instance within a private cloud or may be a component within an instance. Virtual provider edge may also be a virtual router or a virtual gateway that may include a virtual routing table that stores IP addresses of instances A N subnets of private cloud or a NAT instance of private cloud as destinations of inbound traffic to private cloud . This virtual routing table may also store IP addresses of other virtual provider edges associated with other private clouds as destinations of traffic outbound from private cloud . For example when a virtual network path is generated between private clouds and the cloud service provider may associate a similar virtual provider edge not shown in with private cloud . As such virtual provider edge may use its virtual routing table to direct traffic to this other virtual provider edge when the traffic is destined to private cloud .

Additionally or alternatively to storing IP addresses the virtual routing table of virtual provider edge may store identifiers such as labels as described herein below. In other words virtual provider edge may enable traffic to be directed between two network nodes in this case private clouds and rather than between endpoints such as a source instance at private cloud and a destination instance at private cloud . The routing tables of virtual customer edge and virtual provider edge are further described in respectively.

Because private clouds and may be overlay networks data exchanged between the two clouds need to be also routed over the underlying physical network of datacenter . Overlay networks are virtualized private networks that are built on top of the underlying physical network and physical compute resources of datacenter . To facilitate the routing of the data between the overlay networks and the underlying physical networks virtual provider edge may translate IP addresses of the source and destination instances of private clouds and to IP addresses of the underlying physical network and vice versa. This translation may allow the traffic between the source and destination instances of private clouds and to be routed over the underlying physical network and may use mapping tables that map IP addresses of the private clouds to IP addresses of the underlying physical network. To also allow node to node communication virtual provider edge may use a label that uniquely identifies the virtual provider edge associated with private cloud such that traffic outgoing from private cloud and destined to private cloud may be directly routed to the virtual provider edge associated with private cloud .

When virtual provider edge receives a packet from virtual customer edge destined to an instance at private cloud the received packet may include an IP address of the source instance of private cloud and a destination IP address of the instance at private cloud . In an example the received packet may include IP addresses of NAT instances instead of the actual instances. Virtual provider edge may add a source label to the received packet that identifies virtual provider edge and a destination label that identifies the virtual provider edge associated with private cloud and may also encapsulate the packed with source and destination IP addresses of the underlying source and destination physical resources. Further detail about the addressing of the packet is described in .

As described above virtual customer edge and virtual provider edge may be implemented as standalone instances or may be integrated with other instances. For example virtual provider edge may be an instance on server computer whereas virtual customer edge may be included within a NAT instance of private cloud .

Turning now to illustrates example procedures for configuring and generating a virtual network path between private clouds and . It may be appreciated that there are embodiments that implement the procedures of in a different order than is depicted or that implement fewer or more procedures than is depicted. The procedures may be performed by components of PES such as management console and virtual service provider of datacenter . Operation illustrates verifying that a trust is established between entities associated with the private clouds. Although the trust may be established independently of PES PES may still verify that the trust is established. Alternatively a component of PES may be configured to facilitate and generate the trust between the entities. The trust may be information indicative that an entity has allowed access to its private cloud to another entity. For example the trust may be an authorization that is provided by customer ABC to customer XYZ and that allows customer XYZ to access private cloud . Further detail about how the trust is verified is further described in .

Operation illustrates determining whether the trust is verified. For example PES may determine whether customer ABC authorized customer XYZ s access to private cloud under Operation . If the trust is not verified the procedures end. Otherwise operation may be performed. Operation illustrates configuring shared services between the private clouds. This configuration may include a definition of what compute resources within the private clouds are to be made accessible. For example PES may provide an interface to customers ABC and XYZ. Customers ABC and XYZ may then enter information at the interface to specify which subnets IP address ranges instances and the like of private clouds and respectively may be exposed. Customer ABC may decide to render all instances on its private cloud accessible to private cloud but may want to hide the IP addresses of the instances. In such a case the interface may allow customer ABC to specify an address of a NAT instance that translates and tracks the IP addresses of the instances from private to public addresses. Similarly customer XYZ may decide to only allow a particular subnet on its private cloud accessible to private cloud . The interface may allow customer XYZ to enter a public IP address of the particular subnet. Further detail about an example interface is described in .

Operation illustrates generating routing tables to be associated with virtual customer edges and virtual private edges. PES may generate the routing table based on the input of customer ABC s and XYZ s information provided under Operation . A routing table associated with a virtual customer edge of a private cloud may be a virtual routing table that is based on mappings of IP addresses of the private cloud s compute resources and of IP addresses of virtual provider edges that are associated with the private cloud. For example the routing table of virtual customer edge may use IP addresses of instances A N and an IP address of virtual provider edge . A routing table associated with a particular virtual provider edge may be a virtual routing table that is based on mappings of IP addresses of virtual customer edges IP addresses of underlying physical compute resources and network labels of virtual provider edges associated with the particular virtual edge. For example the routing table of virtual provider edge may use an IP address of the virtual customer edge a label of the virtual private edge associated with private cloud and IP addresses of server computers A N which may be hosting private clouds and . Further detail about example routing tables is described in .

Operation illustrates associating the routing tables with private cloud components. For example PES may configure virtual customer edge and virtual provider edge as shown in and may provide the corresponding routing tables to these edges. Operation illustrates exchanging data between private clouds over virtual paths that have been configured based on operations . For example an instance of private cloud may generate a packet destined to an instance of private cloud . The packet is routed through at least virtual customer edge virtual provider edge the virtual provider edge associated with private cloud and the virtual customer edge of private cloud . The packet may also be routed over the underlying physical compute resource such that it is delivered from the server computer that hosts private cloud to the server computer that hosts private cloud . Further detail about an example addressing of the packet is described in .

As described above a possible step in the procedure for generating a virtual path between two private clouds that are associated with two different entities and that are otherwise isolated and private is to verify that a trust has been established between the two entities. This is depicted in Operations and . This verification can be implemented using different techniques that may be grouped generally into two categories techniques where the trust is established independently of PES and techniques where PES facilitates the establishment of the trust. The former category may include for example customers ABC and XYZ communicating outside of PES to agree or generate information indicative of the trust such as a code password or token that is presented to PES . The communication may be any of a phone call e mail person to person or any type of interaction between the customers ABC and XYZ. PES may provide an interface that may be used by customers ABC and XYZ to input the information indicative of the trust. If the information inputted by customers ABC and XYZ match PES may determine that the trust is verified.

The latter category may include for example an instance at datacenter that transmits a communication such as an e mail to customers ABC and XYZ. The communication may include a link that customers ABC and XYZ need to click or follow to indicate that they agree to the trust. Another example includes an instance at datacenter generating and sending a passcode to customer ABC and providing an interface to customer XYZ to enter the passcode. When customer XYZ enters a passcode that matches the passcode sent to customer ABC PES may determine that the trust is verified. Other examples and implementations may also be used as shown in .

The procedures shown in illustrate PES using a two factor verification to determine that customers ABC and XYZ have established the trust. It may be appreciated that there are embodiments the implement the procedures of in a different order than is depicted or that implement fewer or more procedures than is depicted. This two factor verification includes receiving from customer ABC information indicative that customer XYZ has agreed to the trust and information from customer XYZ indicative that customer ABC has also agreed to the trust. The execution of the operations may be distributed between components of PES and computing devices and . For example management console may be configured to generate the information associated with PES and to receive the information entered by customers ABC and XYZ at computing devices and as described herein below. As used herein requestors and peers are entities that are customers of the cloud service provider and that are establishing the trust.

Operation illustrates computing device requesting from PES a new peering connection. PES may provide an interface as a Web interface to allow customer ABC s request for the new peering connection. Operation illustrates customer ABC using computing device to enter an email address and a company name of the peer e.g. customer XYZ. This information may be entered at the interface provided by PES . Once the information is received by PES operation illustrates PES generating a cryptographic pair of public and private keys associated with the peering connection. For example PES may execute an asymmetric key algorithm to generate the cryptographic pair of keys.

Operation illustrates PES transmitting information indicative of the public key to computing device to be presented to customer ABC. The information may include the public key a uniform resource locator URL address to a page managed by PES and a message that can be copied and sent to the peer such as an e mail to customer XYZ for example. Operation illustrates PES maintaining a state of the trust between the peers. For example PES may set a peering state to request sent and may update the state once related information is further received. Operation illustrates the peer e.g. customer XYZ using computing device to receive the communication that was sent by customer ABC and to follow the URL address in the communication. Operation illustrates PES updating the state of the trust. For example when the URL address is followed PES may determine that customer XYZ has received the communication and may update the peering state to request received. 

Operation illustrates PES verifying that the peer has agreed to establish a trust. For example when the page associated with the URL presents a question to customer XYZ asking whether customer XYZ approves the trust or not the page may include an answer field that may be toggled between yes and no. If the answer is no operation may follow operation . Otherwise operation may be followed. Operation illustrates PES sending a communication to the requestor e.g. customer ABC indicating that the request was denied. The communication can be in a form of an e mail that is generated by PES . This message may be followed by an update of the peering state operation . For example PES may set the peering state to request denied and may also end the procedure.

Operation illustrates PES requesting a public key to be entered for verification that the trust is established. For example PES may provide an interface that is presented at computing device and that includes a field for entering the public key. Operation illustrates PES receiving the key entered at the interface presented at computing device . Operation illustrates PES determining whether the received public key matches the public key that was originally transmitted to the requestor. This determination may be based on for example a comparison between the received public key and the private key. If there is no match operation may follow operation . Otherwise operation may be followed. Operation illustrates PES providing a communication to the peer that the key does not match. This communication can be for example a message presented on the interface that was used to enter the public key. PES may also update the peering state to request sent under operation until a new public key is entered at the interface.

Operations are similar to Operations but are executed in an order that substitutes the requestor and the peer. More particularly PES may generate a new pair of cryptographic keys that are associated with the peer request the peer to communicate the public key from the pair to the requestor update the peering state to request acknowledged reply sent determine whether the requestor followed the URL page transmitted in the communication update the peering state to request acknowledged reply received request the requestor to enter a public key from the communication receive the public key and determine whether the received public key matches the public key associated with the peer.

When the received public key does not match the public key associated with the peer PES may perform operation to generate a communication that informs the requestor of the mismatch. PES may also update the peering state to request acknowledged reply sent at operation until a new public key is entered and received from the requestor. When the received public key matches the public key associated with the peer PES may perform operation by updating the peer state to established. The update may indicate that the trust has been verified.

Turning now to when the peer state is set to established PES may determine that a peering connection between private clouds and is ready for use as shown in Operation of . The determination may trigger PES to initiate the configuration of the virtual network path between the two private clouds by generating and providing an interface to customers ABC and XYZ for defining compute resources should be made accessible. If no input is received at the interface a default configuration may be applied. For example the default configuration may prohibit instances from being shared and may block traffic between private clouds and . Another default configuration may instead allow access to all compute resources on the two private clouds. One skilled in the art may implement various default configuration based on for example a predefined level of security or isolation between the private clouds.

Various implementations of the interface can also be used. For example PES may generate a communication in the form of for example an e mail that is transmitted to customers ABC and XYZ. The communication may request customers ABC and XYZ to respond back with information identifying the compute resources that should be shared. The identification may be based on IP addresses a domain name system DNS and other information that may identify the compute resources. Another implementation of the interface may include using a phone interface. For example PES may transmit a phone number to customers ABC and XYZ. When each of customers ABC and XYZ calls the phone number an administrator at PES may answer and enter the configuration information that may be provided during the phone call. The administrator may be an actual person or may be an automated process. Other examples and implementations may also be used as shown in .

GUI of may generally include information about compute resources that will be shared with a peer e.g customer XYZ and information about the peer. As shown in the information about the peer shown under field may identify the peer and may identify the peer s private cloud that may have access to customer ABC s compute resources. Field may allow customer ABC to enter a DNS domain or an IP address not shown of customer XYZ s private cloud . The information about the compute resources may identify the subnets and instances of customer ABC s private cloud that will be shared with the private cloud of the peer as shown under fields and respectively. Management console may prepopulate the various fields based on information it has about private clouds and and the established trust. Functionalities of the fields may also vary. For example drop down menus and character entry fields may be used. Additionally not all shown fields may be required or need to be populated. For example it may be sufficient for customer ABC to identify a subnet based on its IP address for PES to generate a private cloud path to that subnet. Further information entered by customer ABC may be custom information that may only be usable to customer XYZ. For example customer ABC may enter a description of a shared instance that may be presented to customer XYZ. But this description may not be usable to customer ABC when it accesses the shared instance from its computing device .

The identification of a subnet may include for example a description and an IP address . Description may identify the subnet by name whereas IP address may identify the subnet by an address range or an address of a NAT instance of the subnet. The information about the subnet may also include a security set that may restrict traffic to and from the subnet based on security rules. This security set may be associated with security group of .

The fields of shared instances may be similar to the fields of the shared subnets . however shows another mechanism for defining the configuration of the shared instances. For example private cloud may include multiple private clouds. Put differently customer ABC may be associated with more than one private cloud at datacenters . These private clouds may execute instances that have similar descriptions. Thus to configure a virtual network path to a particular instance running on a particular private cloud customer ABC may enter a description of the particular instance under field and a description of the particular private cloud under field . Other techniques may also be implemented by one skilled in the art.

PES may also configure GUI to advertise additional connections that can be generated among customers ABC XYZ and other entities. For example GUI may present to customer ABC a list of peers associated with customer XYZ this list may be referred to herein as a list of peers of my peer LPP . A peer from this list may be another entity or customer of PES and may have its own private cloud operating on datacenters . The peer s private cloud may have access to customer XYZ s private cloud . Thus LPP may allow customer ABC to get a view of customer XYZ s peers.

An allow transit to peers of my peer TPP field may be used in conjuncture with LPP and may allow customer ABC to agree to virtual network paths between its private cloud and private clouds of customer XYZ s peers these virtual networks private clouds may be referred to herein as peer private clouds . illustrates an implementation of TPP field where virtual network paths between private cloud and the peer private clouds of all the peers of customer XYZ may be configured and generated when TPP field is checked. However other implementations may be also used including an implementation where TPP field may allow customer ABC to agree to a virtual network path between its private cloud and a number of peer private clouds.

TPP field may facilitate the generation of additional virtual network paths without necessarily performing the verification procedure of . These additional virtual network paths may be associated with the peer private clouds and may be referred to as peer virtual network paths. For example a third entity shown in as customer PQR may be an existing peer of customer XYZ and may have established a trust and a virtual network path between its private cloud and private cloud . Customer ABC may permit customer PQR to also access its private cloud by setting up a peer virtual network path between its private cloud and the private clouds of customer PQR. This permission may be triggered by checking the box of TPP field rendering customer PQR as also a peer of customer ABC.

Different techniques may be used to generate the peer virtual path between private cloud and the private cloud of customer PQR. For example PES may collect the configuration information that customer ABC enters at GUI and may retrieve the configuration information that customer PQR entered when it connected its private cloud to private cloud of customer XYZ. PES may use the information to generate and provide virtual routing tables to virtual customer edges and virtual provider edges associated with customers ABC and PQR. In another example when TPP field is checked PES may generate and provide GUIs similar to GUI to both customers ABC and XYZ for configuring the peer virtual network path between their private clouds. In yet another example PES may execute an instance at private cloud and may configure the instance as a router that routes traffic between private cloud of customer ABC and the private cloud of customer PQR. PES may or may not integrate this instance with the virtual customer edge of private cloud . Further PES may also configure this instance as a NAT instance or as an instance that includes NAT functionalities such that it may hide the addresses of private cloud from customer PQR and vice versa while also routing traffic between the two private clouds.

In addition to TPP field GUI includes a similar field allow transit of my existing peers TEP that can be used in conjunction with field list of my existing peers LEP . Field lists the existing peers of customer ABC that are also customers of PES with virtual network paths configured between their private clouds and the private clouds of customer ABC. As illustrated in customer is an existing peer of customer ABC. Customer ABC can check field such that its existing peer e.g. customer can access customer XYZ s private cloud by way of customer ABC s private cloud . In other words when customer ABC checks field PES can generate a virtual network path between the peer private cloud of customer and the private cloud of customer XYZ.

This virtual network path can be by the way of a router instance or a NAT instance hosted in customer ABC s private cloud for example. Other techniques can also be implemented to generate this virtual network path. For example because PES has addressing information of the private clouds of customers XYZ and and information about the compute resources that are accessible at each private cloud PES can generate and provide routing tables based on this information to virtual customer edges and virtual provider edges associated with the two customers XYZ and .

Fields and can also be used in conjunction across the GUIs of customers ABC and XYZ to synchronize inputs of both customers. For example PES can provide a GUI similar to GUI to customer XYZ. In turn customer XYZ can check its field which allows the existing peers of customer ABC to access the private cloud of customer XYZ. But in this example checking this field may not suffice to generate the virtual network path between customer XYZ and the existing peers of customer ABC. Instead PES may require customer ABC to also select under its field which of its existing peers can have access to customer s XYZ private cloud . Thus when customer ABC checks the box under field for one of its existing peers e.g. customer PES may generate the virtual network path between the private clouds of customers XYZ and .

Further customer XYZ can select under its field specific compute resources hosted on its private cloud that can be made accessible to the existing peers of customer ABC. In such a case the virtual network path between customers XYZ and limits the access of customer to the specific compute resources.

PES can also expand this synchronization across multiple customers such that peers of customer ABC can connect to peers of customer XYZ. In this way PES can allow daisy chaining of trusts between its various customers. For example when customer ABC allows customer PQR to access its private cloud by checking its field and when customer XYZ performs a similar action on its GUI and allows customer access to its private cloud by checking its field PES can generate a virtual network path between the peer private clouds of customers and PQR. PES can configure this virtual network by way of instances at private clouds and of customers ABC and XYZ. In another example PES can generate and provide routing tables to virtual customer edges and virtual provider edges associated with the peer private clouds of customers and PQR based on the addressing information and the authorized access information that it has about the peer private clouds of these two customers.

In addition to the functionalities discussed above PES may configure GUI to provide customers ABC and XYZ with a view summary of the compute resources that they are sharing.

Once PES receives from computing devices and information indicative of the compute resources that can be shared between private clouds and PES may generate routing tables that may be used to route data over the private cloud path between the two private clouds. For example management console may generate virtual routing tables that include information about the topologies of the private clouds and the virtual routers immediately around each virtual customer edge and each virtual provider edge. The information about the topologies may include among other information identifications of private cloud destinations and identifications of virtual routers e.g. virtual customer edges and virtual provider edges. These identifications may be in the form of IP addresses labels classless inter domain routing CIDR notations and the like. illustrates an example routing table that may be associated with virtual customer edge of private cloud whereas illustrates an example routing table that may be associated with virtual provider edge of virtual service provider .

Similarly assumes the following additional configuration information. Private cloud has a single subnet that is accessible by private cloud . Instances of the subnet may be addressed via a NAT instance that has an address of 165.2.2.2. Based on this configuration information virtual provider edge routing table associated with virtual provider edge may include a destination column and a target column. The destination column may identify the destination subnets of private cloud accessible to private cloud shown as 172.16.0.0 16 and 155.1.1.1 and the destination subnet of private cloud accessible to private cloud shown as 165.2.2.2 . The target column may identify the virtual provider edge shown as VPE that is associated with private cloud as a virtual router that may be used to route traffic to private cloud since this virtual provider edge may be configured to route inbound traffic to private cloud over the virtual network path. Likewise the target column may also identify virtual customer edge shown as VCE as a virtual router that may be used to route traffic from private cloud since virtual customer edge may be configured to route inbound traffic to private cloud over the virtual network path.

When routing tables and are available at virtual customer edge and virtual provider edge respectively and when similar tables are available at the virtual customer edge and the virtual provide edge associated with private cloud these routing tables may be used to route traffic between the two networks. An example of routing a packet between two networks using these routing tables is depicted in .

With this configuration information a packet may be routed from source instance to destination instance . For example source instance may add an IP header to a payload . IP header may include source instance s private IP address as the source and destination instance s IP address as the destination shown as source 10.110.0.1 and destination 172.16.0.2 under IP header . Because this destination IP address remains unchanged as the packet is routed between the two private clouds the description herein below may not reference the destination IP for clarity. The packet may be routed to a NAT instance that may be running on private cloud and that may substitute the source instance s private IP address with the NAT instance s public IP address shown as source 10.0.0.0 under IP header . NAT instance may route the packet to virtual customer edge that may substitute the NAT instance s IP address with its own IP address shown as source 192.0.72.3 under IP header .

When virtual provider edge receives the packet from virtual customer edge virtual provider edge may add a label to the packet and may encapsulate the labeled packet with an IP header . IP header may be used to route the packet across the underlying physical network between server computers A and B. This IP header is shown as source 199.1.2.4 and destination 196.9.1.5. Label may be used to route the packet across the virtual network path. More particularly label may be used to route the packet directly between virtual provider edge and virtual provider edge associated with private cloud . For example when computer server B receives the packet computer server B or a router at computer server B may remove IP header and direct the packet to virtual provider edge based on label . This label is shown as source VPE and destination VPE.

When virtual provider receives the packet virtual provider edge may remove the label and route the packet to virtual customer edge associated with private cloud . In turn virtual customer edge may update the source IP address in the IP header with its own IP address shown as source 196.0.72.4 under IP header and route the packet to destination instance . illustrate one example of a packet routed between two instances over the private cloud path. Other implementations for routing the packet may be used.

Computer may include a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. One or more central processing units CPUs may operate in conjunction with a chipset . CPUs may be standard programmable processors that perform arithmetic and logical operations necessary for the operation of computer .

CPUs may perform the necessary operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

Chipset may provide an interface between CPUs and the remainder of the components and devices on the baseboard. Chipset may provide an interface to a random access memory RAM used as the main memory in computer . Chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that that may help to startup computer and to transfer information between the various components and devices. ROM or NVRAM may also store other software components necessary for the operation of computer in accordance with the embodiments described herein.

Computer may operate in a networked environment using logical connections to remote computing devices and computer systems through network . Chipset may include functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. NIC may be capable of connecting the computer to other computing devices over network . It should be appreciated that multiple NICs may be present in computer connecting the computer to other types of networks and remote computer systems.

Computer may be connected to a mass storage device that provides non volatile storage for the computer. Mass storage device may store system programs application programs other program modules and data which have been described in greater detail herein. Mass storage device may be connected to computer through a storage controller connected to chipset . Mass storage device may consist of one or more physical storage units. Storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

Computer may store data on mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of a physical state may depend on various factors and on different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether mass storage device is characterized as primary or secondary storage and the like.

For example computer may store information to mass storage device by issuing instructions through storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. Computer may further read information from mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to mass storage device described above computer may have access to other computer readable storage media to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

Mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises a version of the LINUX operating system. According to another embodiment the operating system comprises a version of the WINDOWS SERVER operating system from the MICROSOFT Corporation. According to further embodiments the operating system may comprise a version of the UNIX operating system. It should be appreciated that other operating systems may also be utilized. Mass storage device may store other system or application programs and data utilized by computer such as management component and or the other software components described above.

Mass storage device or other computer readable storage media may also be encoded with computer executable instructions which when loaded into computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform computer by specifying how CPUs transition between states as described above. Computer may have access to computer readable storage media storing computer executable instructions which when executed by computer perform the procedures described with regard to .

Computer may also include an input output controller for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

It should be appreciated that the network topologies illustrated in the figures have been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that the systems in the figures are merely illustrative and that other implementations might be used. Additionally it should be appreciated that the functionality disclosed herein might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing device may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

Each of the operations processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and sub combinations are intended to fall within the scope of this disclosure. In addition certain method or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

