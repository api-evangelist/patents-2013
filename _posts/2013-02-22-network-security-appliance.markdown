---

title: Network security appliance
abstract: Methods, devices, and systems that may be used to secure networked devices are provided. One method includes receiving, at a security device, encrypted configuration data from a management server connected to a data network, from packets addressed to a networked device. The method further includes managing, by the security device, packets between the networked device and other devices accessible through a network based upon the configuration data. The method further includes sending, by the security device, a plurality of encrypted heartbeat messages to the management server utilizing an address associated with the networked device as the originating address for packets in which the encrypted heartbeat messages are transmitted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09043868&OS=09043868&RS=09043868
owner: BYRES SECURITY
number: 09043868
owner_city: Lantzville
owner_country: CA
publication_date: 20130222
---
This application is a continuation of U.S. patent application Ser. No. 13 274 105 issued as U.S. Pat. No. 8 407 758 filed Oct. 14 2011 which is a continuation of U.S. patent application Ser. No. 11 544 019 issued as U.S. Pat. No. 8 042 147 filed Oct. 5 2006 which claims the benefit of U.S. Provisional Patent Application Ser. No. 60 723 902 filed Oct. 5 2005 all of which are hereby incorporated by reference in their entireties.

The present invention relates to industrial network security and more particularly to network security appliances and to methods of deploying and managing such appliances to secure industrial devices.

Supervisory Control and Data Acquisition SCADA and automation control equipment used in the management of critical industrial systems such as electricity generation and distribution oil production transportation manufacturing and health services has become increasingly interconnected through the use of popular communications technologies such as Ethernet TCP IP and web services. While the networking of SCADA and automation control equipment has brought considerable benefit in the form of improved information flows and efficiency it has also exposed these systems to the possibility of attack from viruses hackers and terrorists as once isolated devices and networks become accessible from around the world. Currently there numerous poorly protected control devices spanning the globe. These are charged with the safe operation of critical systems and infrastructure such as power transmission substations gas pipelines manufacturing plants and the like yet at the same time remain largely unprotected from malicious persons who may target them for attack.

Traditional security solutions are based on central firewalls protecting unsecured internal devices or computers from the outside world a design that cannot address the requirements of the industrial controls world. Existing controllers do not offer authentication integrity or confidentiality mechanisms and can be completely controlled by any individual that can find or ping the network and the associated devices. In addition they cannot be easily patched or have security features added to them. Once a virus or hacker manages to get past or is already inside the traditional firewall the devices protected by the firewall such as a typical programmable logic controller PLC or distributed control system DCS is an easy target for attack.

In many industrial environments such as oil pipelines or electrical distribution systems there can be hundreds of controller devices distributed across a wide geographic area including very remote locations. Personnel with the skills to manage a traditional security device are often unavailable in these remote locations so that devices that require even minor amounts of local configuration are unacceptable. For example current firewall products that offer transparent operation still require the local configuration of network properties such as IP address gateway and network mask or they are not remotely manageable a serious shortcoming in the SCADA world. As well since there are large number of separate locations in these distributed control systems each requiring a firewall there is a need for techniques for simultaneous management of hundreds of firewalls from a central location ruling out the use of popular small office firewall solutions that are managed on a one by one basis.

Complicating the problem is that there are thousands of different makes and models of industrial control devices on the market each communicating using one or more of the over 350 known SCADA communications protocols. Each control device needs very specific security rules to be protected correctly for example one popular PLC has an unusual but well known security issue with web requests that contain URLs longer than 125 characters. Manually creating the separate rules in a traditional firewall for each protected devices individual vulnerabilities causes the overall firewall configuration to be exceedingly complex and chance of introducing errors in the configuration is high.

Finally the staff operating and maintaining these SCADA systems are by necessity highly trained control systems specialists and not information technology or security specialists. Thus the management of these security systems need to be based on a new paradigm that is understandable to the control technician rather than the traditional network technology focused management and configuration of network systems. Without control technician and control product focused solutions serious flaws are likely to occur in the setup and management of any security solution.

Accordingly there is a need for a network security appliance for SCADA and automation control equipment that can be easily deployed and is remotely manageable and facilitates protection of network enabled control devices in widely distributed industrial environments.

One embodiment of the disclosure relates to a method including receiving at a security device encrypted configuration data from a management server connected to a data network from packets addressed to a networked device. The method further includes managing by the security device packets between the networked device and other devices accessible through a network based upon the configuration data. The method further includes sending by the security device a plurality of encrypted heartbeat messages to the management server utilizing an address associated with the networked device as the originating address for packets in which the encrypted heartbeat messages are transmitted.

Another embodiment relates to a device including a processor and a heartbeat module executable by the processor for transmitting a packet providing a status signal to a management server in a network utilizing an address associated with one of one or more networked devices as an originating address for the packet. The device further includes one or more security modules executable by the processor the one or more security modules managing data transmitted between the one or more networked devices and other devices on the network based upon one or more security profiles associated with the one or more networked devices.

Another embodiment relates to a system including a plurality of nodes. Each node is associated with one or more of a plurality of networked devices. Each node transparently bridges the one or more associated networked devices to a network and provides management of data communications traversing to and from the one or more associated networked devices and other devices in the network based upon security profiles associated with attributes of the one or more associated networked devices. The plurality of nodes are configured to communicate with a management server by utilizing an address of one of the associated networked devices and the plurality of security devices are configured to send a status message to the management server utilizing address information of an associated networked device as a source of the status message.

Other aspects and features of the present invention will become apparent to those ordinarily skilled in the art upon review of the following description of specific embodiment of the invention in conjunction with the accompanying figures.

It will be noted that throughout the appended drawings like features are identified by like reference numerals.

Ensuring network security of industrial device has become increasing of concern. An endpoint device includes any network enabled device such as computing devices industrial process equipment such as intelligent measurement devices industrial control equipment such as PLCs programmable logic controllers RTUs remote telemetry terminal units IEDs intelligent electronic devices and DCS Distributed Control Systems medical devices and the like. For example in SCADA Supervisory Control And Data Acquisition systems an RTU Remote Terminal Unit is a device installed at a remote location that collects data codes the data into a format that is transmittable and transmits the data back to a central station or master. An RTU also collects information from the master station and implements processes that are directed by the master. R TUscan be equipped with input channels for sensing or metering output channels for control indication or alarms and a communications port.

SCADA and automation control systems are generally computer systems for gathering and analyzing real time data and controlling industrial processes. SCADA systems can be used to monitor and control a plant or equipment in industries such as telecommunications water and waste control energy oil and gas refining and transportation. A SCADA system gathers information such as the pressure profile along a pipeline transfers the information back to a central site alerting the master station that the pressures might be above or below safe limits carrying out necessary analysis and control such as determining if the situation is critical and displaying the information in a logical and organized fashion.

In order to protect an endpoint device a network security appliance or security node can be serially deployed in the upstream path from an endpoint device which requires protection such as firewalling intrusion detection antivirus scanning etc. The security node has no IP address thereby simplifying configuration and making it difficult to directly attack the node. Traffic generated by the security node appears to come from one of the endpoint devices it is protecting as the security node assumes the IP address of the device. As the security node utilizes existing device addresses at the layer and layer level to communicate with the management server remapping of device addresses by common IP addressing solutions used in traditional firewalls such as through dynamic addressing via Dynamic Host Configuration Protocol DHCP assignment or static addressing through manual configuration is not required.

The security node can be managed from anywhere in the control or SCADA network or through interconnected networks provided that the management server can deliver a message to anyone of the endpoint devices to be protected. Management of the security node is performed by a secure management connection protocol. During a management server connection to the security node only encrypted traffic to from the management server is permitted in or out of the node. All traffic leaving the node is altered to appear as if it is from an endpoint device the node is protecting. In particular if an attacker doesn t have all of the information required to establish a connection they won t even know the node is there.

The security node is applicable to any protocol that can run over top of the Internet Protocol IP . Specific applications protocols can range from hypertext transfer protocol HTTP for viewing the device to be protected via a web browser file transfer protocol FTP for sending the device data files Ethernet IP MODBUS DNP3 ICCP OPC all common SCADA and PLC protocols and IEEE PI073 Medical Information Bus. The security node passively collects information on the traffic transiting between the endpoint device and other devices or computers in the network and can provide this information to the management server.

The security nodes provides a means for detecting establishing and maintaining a secure communication link between a node a network security appliance and a management server while keeping the node itself undetectable in a network. This secure link can utilize a variety of proven security protocols such as SSL or IPSec. The security node permits effective deployment with no configuration required by a local operator or node installer. As described no reconfiguration ofIP addresses of the various nodes and or endpoint devices is required. The functionality of a network security appliance is remotely configured by a management server in a secure manner.

To enable remote configuration the management server system responsible for managing the node s policies and settings is able to communicate over a network to at least one of the devices that the node will be protecting. The security node device policy can be setup on a management server in advance of the node deployment and will be downloaded by the node when the node is connected to the network and powered on. This policy download minimizes the time that the device spends in a pass through or learning state. However it is also possible to secure and deploy the nodes before the management server is configured. Initial deployment security settings are specific to the location and settings of the network where the appliance is deployed. Alternatively the security nodes may determine independently the nature of the devices being protected and automatically implement some basic security functions prior to connection with the management server.

The encrypted heartbeat mechanism allows many e.g. thousands of nodes to report back to a single management server. The heartbeat mechanism is useful in bandwidth restricted systems common in SCADA environments. The heartbeat mechanism sends just enough information back to the management server to report the current status and conditions for each security application installed on the node. The amount of reported information can also be controlled remotely via adjustment of security node s heartbeat settings. This heartbeat mechanism also avoids the network traffic load issues common to polling based management systems such as the simple network management protocol SNMP Report by exception is used for reporting exceptional events to the management server. These types of events would include attack reports critical system settings being reached and other issues where the management server should know immediately that something has occurred. Each security node s heartbeat module can be setup with its own set of encryption keys. Upon reception of the heartbeat data the source is determined and the appropriate decryption done on the management server monitor station. For increased scalability clusters of monitoring stations can be used.

A management server can be connected to the same network as the security nodes and or may be interconnected by one or more networks through network . The management server provides management and control capability to the security nodes in the network.

When the security node is in the operational state various security modules can be utilized to manage network traffic. For example an intrusion detection module monitors traffic to determine if there is a malicious attempt to gain access to the device and enacts appropriate procedures for logging and denying access. Similarly the firewall module provides firewall capability that can be tailored to the specific device vulnerabilities. Additional modules such as module can be deployed in the security node than may provide various functionality such as device identification virtual private networking VPN network statistics gathering bandwidth monitoring and traffic shaping etc.

During secure communications with the management server the communications module provides details regarding the traffic observed by the security node and can request software updates to the modules and . The remotely deployable software modules as well as configurations and commands for these modules can be securely dispatched to the security node via a secure connection to the communications module from the management server across the network . New or updated modules and can be deployed via a secure communications link.

To enable the security nodes to have no defined network address each node can use a stealth IP addressing scheme where no Internet Protocol IP address is assigned to the node not even a trivial one such as 0.0.0.0 or 192.168.1.1 . A node achieves this by borrowing an IP address from one of the endpoint devices it is protecting and using it for configuration and management communications. As a result all traffic generated by the node will appear to come from one or more of the downstream endpoint devices and can not be traced back to the node making it both invisible and simple to configure. In addition the security node can assume layer identity such as media access control MAC addresses of the device to ensure stealth capability.

An interface to the management server is abstracted as an management API so that a variety of user interface systems can be used for various interaction functions. The user interface systems may include local graphical user interface GUI client a command line interface CLI client or a secure web server interface which can be directly accessed in the management system ore remotely access by a computer terminal either directly connected or through the network .

Similar to the monitoring of traffic on the device side the security node monitors traffic on the network side as well. is a method diagram of the security node learning process on the network side. Incoming packets are monitored at step . If the destination address is not in the device profile database NO at step the packet is forwarded on to the device interface at step . If the destination device is in the device profile database YES at the source of the traffic is determined at step . If the source is in the known talkers database YES at stored in the security node database module the packet is forwarded at step . If the device is not in the known talkers database NO at step the source information is recorded at step and then the packet is forwarded at step .

The step of forwarding the packet at step of and step of may be forwarding the packet directly to the opposite network interface be it the device interface or the network interface or may entail forwarding the packet to one of the security modules and for further processing prior to forwarding the packet out of the node. If the packet fails any of the checks performed by the security modules the packet may be discarded.

A connection oriented protocol such as TCP transmission control protocol connection interception mechanism is setup to receive only traffic that is from the management server IP address and source port specified in the MCR and is directed to the target IP address and destination port specified in the MCR. This connection interception system passes the connection traffic to a piece of control software running on the security node and establishes an encrypted connection such as for example an secure socket layer SSL connection with the management server .

At step an encrypted destination IP address in the connection request is checked against a bridge table in the database module for the security node to determine if it belongs to a device downstream of the security node. If the IP address verifies correctly YES at the security node begins listening for a secure management connection MCE . If the IP address proves invalid NO at step the connection trap established in step is discarded and reset and the packet is forwarded at step . A node will only listen for a secure management server connection for a period of time effectively limiting the time in which the management server can connect to the node i.e. time out management . If a secure management connection does not start within that period of time while the node is listening at step the connection trap is discarded and reset NO at step . If a connection request is received before the timeout YES at step then the security of the connection is checked and completed at step . If the connection is successfully completed YES at step then the security device enters the operational phase. If the connection is not successful NO at the packet is forwarded. It should be noted that depending on the construction of the MCR and MCE packets the packets may be discarded as opposed to being forwarded if the packets do not contain payload information or any information relevant to an endpoint device. If the MCR and MCE information is embedded in a packet and the process fails or is successful the information can be stripped from the packet prior to forwarding to the endpoint device. The MCE connection once established is a secure encrypted link. Security maintenance of the connection is done be setting the level of revalidation of the digital certificates.

During the waiting time prior to management server connection establishment the node can use established passive fingerprinting techniques such as those used in open source software products such as xprobe and p0f to identify what devices will likely need to be protected in connection with the learning procedure descried in connection with . This fingerprinting continues even after configuration by a management server in order to detect new devices added to the network being protected.

The communication between the security node network security appliance to the management server operates on principles of heartbeat signaling and report by exception . Heartbeat signaling is used to send the current status condition of the node to the management server. The report by exception communication is used to signal exception conditions occurring on a node to the management server. Both principles of node to management server communication can be secured using encryption.

If the traffic passes the security modules and no anomalous traffic is detected NO at step a check to determine if a periodic heartbeat is to be sent to the management server may occur at step . If a heartbeat is required YES at step it is sent at step and the packet is forwarded to the appropriate interface at step . If a heartbeat message is not required NO at step the packet is forwarded to the appropriate interface and the security node continues monitoring incoming traffic .

The uploading of profiles occurs when a security node is started but may also occur when an exception heartbeat is received at the management server indicating that something has changed with the endpoint device or a new security threat has been detected.

There are thousands of different makes and models of industrial control devices on the market each communicating using one or more of the over 350 known SCADA communications protocols. Each control device needs very specific security rules to be protected correctly. For example one popular PLC example of an endpoint device has an unusual but known security issue with web requests that contain URLs longer than 125 characters. Another PLC stops all communications if it receives a MODBUS diagnostic message with an Option Code of 4 and requires a power reset to recover. Manually creating rules to address these issues in a traditional firewall requires extensive knowledge of both control product flaws and how to create custom firewall rule sets. It also can cause the overall firewall configuration to be exceedingly complex and increase the chance of serious errors in the configuration.

Specific device rule templates are provided on the management server in the database subsystem that are developed for common control products. An example of such a template for the second PLC noted above could be device specific vulnerability protection rules such as 

The rule set would be loaded automatically to the security node based on the device discovery process described earlier. Multiple rule sets are combined and optimized in the invention using well known techniques commonly used in software language compliers but are unknown in the security appliance field. User confirmation if required could be either in a text form or in a graphical form where the user clicks on the recommended rules in the template and drags icons of allowed devices to adjust the rules for specific addresses.

As described above instead of a security manager creating rule sets for a security node and uploading them a rule set can be created automatically according to the endpoint device to be protected. Rule sets are designed with the needs of the endpoint device to be protected in mind not with the design of the node in mind. For example the node learns the make of the PLC or RTU examples of an endpoint device that needs to be protected and informs a management station. The management station then does a database lookup and recommends the appropriate firewall or IDS intrusion detection system templates required to protect that device. A security manager then decides if these rules meet their needs modifies them accordingly and deploys them to the field this also applies when the node is protecting multiple different endpoint devices . To an operator it will appear that the rules are being sent directly to the device and there appears to be no node firewall involved. This reduces the complexity of the rules and directs focus to protecting the devices e.g. PLC RTU etc. from unwanted traffic. The rule sets can also be created prior to the deployment of the node in the field so that the device automatically acquires its configuration on power up.

Examples of suitable computing system environments or configurations that may be suitable for implementing various embodiments include a general purpose personal computer PC a hand held or laptop computer multi processor based systems microprocessor based systems programmable consumer electronics network computers minicomputers mainframe computers distributed computing environments industrial process equipment industrial control equipment such as PLCs RTUs IEDs DCS and medical devices and the like.

Components of a typical computing device include but are not limited to a processing unit an input output interface a system memory and a system bus. The system bus communicatively connects the aforementioned components and numerous other cooperatively interactive components. The input output interface interacts with external components through an input output unit which can include keyboard mouse type controllers monitors media readers writers and the like . The system memory instantiates various components and operations of the network security appliance according to embodiments of the present invention.

The detailed description does not limit the implementation of the embodiments of the present invention to any particular computer programming language. The computer program product may be implemented in many computer programming languages provided that the OS Operating System provides the facilities that may support the requirements of the computer program product. An exemplary embodiment of the present invention can be implemented in the C or C computer programming language or may be implemented in any other mix of supported programming languages. Any limitations presented would be a result of a particular type of operating system computer programming language or database management system and would not be a limitation of the embodiments of the present invention described herein.

The embodiments of the invention described above are intended to be illustrative only. The scope of the invention is therefore intended to be limited solely by the scope of the appended claims.

