---

title: Dynamic functionality based on window characteristics
abstract: A system and method are described for changing window's functionality upon detecting resizing events. According to one example method, a plurality of size thresholds is defined that are associated with a plurality of functional states for a window. Upon detecting that a size of a window reaches a first size threshold, a first functional state is applied to a window. Then, upon detecting another size threshold as the window is being increased or decreased in size, another functional state associated with the detected threshold is applied to the window.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09373143&OS=09373143&RS=09373143
owner: Trading Technologies International, Inc.
number: 09373143
owner_city: Chicago
owner_country: US
publication_date: 20131101
---
This application is a continuation of U.S. patent application Ser. No. 13 090 067 filed Apr. 19 2011 now U.S. Pat. No. 8 601 391 which is a continuation of U.S. patent application Ser. No. 11 840 738 filed Aug. 17 2007 now U.S. Pat. No. 7 949 954 entitled Dynamic Functionality Based on Window Characteristics the contents of each of which are fully incorporated herein by reference.

The present invention is directed to a computer display system. More specifically the present invention is directed to tools for dynamically changing functional states of a window based on the window s characteristics.

Many existing operating systems such as the Microsoft Windows operating system use graphical user interface GUI desktop environments to organize computer objects. A GUI allows a user to graphically view and manipulate the objects as icons using a mouse or a pointer. A GUI of the Microsoft Windows operating system is window based. Microsoft Windows allows a user to have multiple applications active in multiple windows at the same time each window having different functional characteristics.

A window as used for example in the Microsoft Windows environment specifies an area of a computer screen typically rectangular in shape which an application dedicates to a specific function. A window by default occupies a preselected area on a display as determined by an application that runs the window however the dimensions of the window can often be modified by a user. In the current window environments a user may resize a window by dragging a window s vertical or horizontal border or a window s corner to a new position to modify the x dimension the y dimension or both x and y dimensions of the window respectively.

Typically as a window is being resized the content of the window does not change including the size of the font icons and graphics. However as the window is resized to a reduced area the amount of visible content displayed may change such that the window displays only a portion of the original content that fits in the reduced area. Windows typically include scroll controls allowing a user to manipulate data displayed in window of a smaller size. By manipulating the scroll controls a user may control which portion of the original content is displayed in the window at any point in time. Rather than providing only a portion of the original window s content when a window is resized some applications re scale the full original content of the window upon resizing of the window thus allowing a user to view the full content without the need to use the scroll controls. This solution however has its drawbacks. For example as a window is resized and the content is made smaller the rescaled content may become too small to enable a user to effectively view and use it.

According to example embodiments described herein system and methods are provided for changing functionality provided by a window upon detecting a predetermined window size threshold. To illustrate the present invention and aspects thereof the following description including the figures and detailed description provides examples that can be used or readily modified by one of ordinary skill to generate a system or method that benefits from the teachings described and claimed herein.

According to one example method a plurality of size thresholds is defined along with a plurality of functional states to be used in relation to a window. According to one example embodiment each functional state may be associated with a different display type and a different functional method for interacting with the displayed data. According to the example method when a window has a first size that falls under the first size threshold the first functional state is used in relation to the window. The first functional state is associated with a first display type that allows a user to interact with the displayed data according to a first functional method. Upon detecting that the window is resized such that the size of the window crosses another size threshold another functional state associated with the controlling threshold is applied to the window. According to one example embodiment the new functional state is configured to display the data via the window using a different display type that allows a user to interact with the displayed data using another functional method.

Other features of the present invention will become more apparent to persons having ordinary skill in the art to which the present invention pertains from the following description and claims.

The present invention is related to dynamically changing functionality provided by a window when a manual or automatic resizing command is received in relation to the window and the window reaches a predetermined size threshold. One example embodiment for changing functionality of a window upon resizing is applied in an electronic trading network environment however as illustrated in relation to other embodiments the present invention may be applied in other environments as well. To illustrate aspects of the present invention a system and method are illustrated in example form using the drawings referred to herein. One of ordinary skill in the art will recognize however that such examples may be quickly and readily adaptable using the teachings described herein. Aspects of the present invention are protected by the accompanying claims. Limitations from the patent specification should not be improperly incorporated into the claims unless explicitly stated or otherwise inherently known.

It should be understood that the computer includes a computer readable medium. The term computer readable medium as used herein refers to any medium that participates in providing instructions to a processor unit for execution. Such a medium may take many forms including but not limited to non volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as storage devices. Volatile media include for example dynamic memory such as main memory or random access memory RAM . Common forms of computer readable media include for example floppy disks flexible disks hard disks magnetic tape punch cards CD ROM any other physical medium memory chip or cartridge or any other medium from which a computer can read.

According to the example embodiments the functionality provided by a window changes in response to resizing events. More specifically when predefined size based thresholds are reached the functionality provided via a window changes. For example as a window s size is increased more detailed view of data as well as different methods for user s interaction with the displayed data are provided in relation to the window as compared to the window having a smaller size. While the examples provided below describe size thresholds and activation of the size thresholds in a sequential manner it should be understood that some functionality changes could be skipped as well when a user quickly resizes the window to a desired threshold size. Additionally while the size triggers explained below focus on changing both x and y dimensions of a window it should be understood that different functional stages can be activated upon detecting a change in only an x dimension or a y dimension of a window. For example a desired functional state may be activated by only changing an x dimension of a window. Additionally the same desired functional state may be reached by changing both x and y dimensions of the window. In such an embodiment an intermediate size threshold could be detected and a different functional state could be activated before reaching the threshold associated with the desired functional state. It should be understood that while the conventional windows are 2 dimensional the example embodiments could easily be applied to 3 dimensional windows i.e. windows having x y and z dimensions. Those skilled in the art will understand that many different alternative embodiments are possible as well using the description provided herein.

Referring now to at a number of size thresholds are defined with respect to a window associated with a standard state. A window at a standard state as used herein has a default size and functionality determined by an application that manages the window or by a user. The size thresholds define different sizes for the window using screen pixels or yet some other measurement standard. Alternatively the size thresholds can be based on proportional changes with respect to the default size of the window. For example a proportion based threshold may define a window s size as twice as large as the default size. It should be understood that a user may pre configure different size thresholds using many different standard interfaces. Alternatively the size thresholds can be hardcoded.

It should be understood that only a few size thresholds are defined and as long as a window s size falls between the defined thresholds the controlling threshold such as a smaller size threshold is applied. For example the first size threshold could be defined to correspond to a window s size of 100 200 pixels and the second size threshold could correspond to the window s size of 100 300 pixels. In such an embodiment as long as the window s size falls between the two defined thresholds the first threshold controls. When the window s size reaches 100 300 pixels the second threshold can be activated to control the window s functionality as will be described below.

At step different functional aspects to be executed with respect to each size threshold corresponding to the window are defined. As will be described in greater detail below the functional aspects defined for each size threshold are used such that when each of the defined size thresholds is crossed the functionality in the window dynamically changes based on the functional aspects associated with the crossed size threshold. For example functional aspects defined for a specific size threshold may allow for viewing data via a window in a specific format and may allow a user to manipulate the data using a set of functional operations associated with the specific size of the window corresponding to the threshold. Then functional aspects defined for a different size threshold may trigger a display format that allows a user to manipulate the displayed data using a different set of functional operations. In other words the functionality aspects may define different window contents as well as different functional ways to interact with the displayed content. For example a size threshold corresponding to a smaller window may be associated with an interface that provides more compact functionality as compared to a size threshold corresponding to a larger window.

According to one example embodiment the functionality linked to each size threshold may be controlled by the same application that provides functionally different views or interfaces. Alternatively some functional aspects may come from one application while others may be linked to functional aspects provided by one or more other applications via plug ins or yet some other linking methods.

At step a window having a default size and a default functionality is displayed on a screen. According to one example embodiment the default functionality is determined by an application that creates the window. According to an alternative embodiment both default size and functionality may be user configurable.

At step it is determined whether one of the defined size thresholds has been detected. As described earlier the size threshold is based on a window s size. Thus when a user increases decreases the window s size such that the next size threshold is reached a new size threshold is detected. According to one example embodiment the window can be resized manually by a user dragging the size control of the window such as the lower right corner of the window or yet some other corner or border of the window to a desired location on a screen. Alternatively a user may enter a predefined resize command such as a selection of a predefined key on a keyboard and the resize command may cause the window to be resized to a preset size based on the resize command. It should be understood that the content functionality of the window may scale accordingly with the window as the window is being resized up to the point when the next size threshold is reached at which time the functionality changes based on the predefined functionality. If the next size threshold is not crossed the method continues at and the functionality associated with the window remains the same except that the window s content may be resized as the window is being resized.

When another size threshold is reached at step the functional aspects predefined for the detected size threshold are dynamically applied to the window. As explained earlier the presentation of the displayed data may change and different functional ways for interacting with the displayed data may be provided along with the resized window. It should be understood that either the application corresponding to the default functionality of the window or a different application may control the functionality of the window as well as the format of data displayed via the window when another size threshold is detected.

As the window is being resized the functional state F controls until another size threshold is reached as illustrated with the corner of the window reaching a marker . When the threshold is reached such that the window s size matches or crosses the size corresponding to the window the first size threshold triggers a change in the functional state of the window so that another functional state F is activated. The functionality F controls until another size threshold is reached indicated with a marker and a window . In other words the functionality F controls as long as the window s size falls between the sizes corresponding to the windows and . When resizing results in the window s size another size threshold is reached and activates the functional state F . As mentioned earlier additional functional states based on additional window size thresholds could be used as well and the embodiment illustrated in is only an example.

While there are many different environments in which the example embodiments can be applied one example application will be described in relation to an electronic trading environment.

Electronic trading refers to a trading system that matches orders by an electronic platform. Current examples of electronic trading platforms include the Chicago Mercantile Exchange CME Globex trading system the Chicago Board of Trade CBOT and Eurex just to name a few. A trading system that matches orders electronically is also often referred to as an electronic exchange. Exchanges like the CME and CBOT currently offer trading via open outcry in addition to electronic trading.

Electronic trading is generally based on a host exchange one or more computer networks and client devices. In general the host exchange includes one or more centralized computers to form the electronic heart. The exchange allows a trader to participate in trading at least one tradeable object and conducts matching of bids and offers that are placed by the subscribing traders for that tradeable object. Typically subscribing traders connect to an exchange by way of a communication link or through an application programming interface to establish real time electronic messaging between the exchange and their terminals.

As used herein the term tradeable object refers to anything that can be traded with a quantity and or price. It includes but is not limited to all types of traded events goods and or financial products which can include for example stocks options bonds futures currency and warrants as well as funds derivatives and collections of the foregoing and all types of commodities such as grains energy and metals. The tradeable object may be real such as products that are listed by an exchange for trading or synthetic such as a combination of real products that is created by the user. A tradeable object could actually be a combination of other tradeable objects such as a class of tradeable objects.

An electronic exchange can list any number of tradeable objects for trading. Often times traders will simultaneously trade more than one tradeable object and they may simultaneously trade tradeable objects that are listed at more than one exchange. Ordinarily each tradeable object has its own separate stream of market information that commonly includes the inside market and market depth. The inside market is the lowest sell price in the market and the highest buy price in the market at a particular point in time. Market depth refers to quantities available at the inside market and may also refer to quantities available at other prices away from the inside market.

Traders link to an electronic exchange through a computer network. Then using a front end trading system traders can participate in the electronic markets offered by these electronic exchanges. Electronic exchanges or independent companies like Trading Technologies develop deploy and support front end electronic trading systems that allow traders to access various electronic exchanges. Some of Trading Technologies products include XTRADER X STUDY X RISK and X TRADER API.

Traders interact with electronic exchanges using trading screens. Trading screens allow traders to view market information as well as any news or any other interfaces provided by many different applications such as charting applications that traders can use to make their trading actions. Upon viewing the provided information traders may use trading interfaces to take certain actions including the actions of sending buy or sell orders to one or more electronic exchanges adjusting existing orders deleting orders or otherwise managing orders. Traders often use software tools on their client devices to automate those and additional actions.

In many instances spotting an opportunity in the market and capitalizing on the opportunity before the market moves or before a competing trader does can separate the traders who are successful from the ones who are not. Trading schemes often require monitoring of market information related to multiple tradeable objects as well as monitoring of news and charts via separate interfaces. An important component in capitalizing on opportunities involves quickly assimilating information and then acting on that information to get the order to the exchange for matching before other traders do. In many instances the size of a trading screen limits the number of windows or the amount of information that can be simultaneously displayed to a trader. As the number of tradeable objects being traded by a trader increases the ability of the trader to quickly access and view desired information will be therefore further reduced. Additionally navigation between windows and opening additional windows that provide different functional views of the same or different data takes time and cuts into time that a trader could spend analyzing desired data or submitting orders.

Thus having a window that responds to resizing events with a multiplicity of functional states would be beneficial to many traders in an electronic trading environment. According to one example embodiment when a trader resizes a window the trader can access different functional ways of interacting with market data related to one or more tradeable objects. For example as will be described in greater detail below as a trader makes a window smaller the trader may swap out one functionality for different functionality and vice versa. Thus the example embodiments not only assist a trader in window management but also increase efficiency of the screen real estate.

According to one example embodiment a user may first activate a quote board type display that may be set to correspond to the first functional view of a tradeable object. The quote board cell displays market data corresponding to a tradeable object ES ESH7. The quote board displays a plurality of fields corresponding to the tradeable object. The fields include an opening price for a day field O a high price for a day field H a low price for a day L a last traded price L a net change on the day a net position for a tradeable object and a profit loss level P L for a tradeable object calculated based on the last traded price P or an ask bid price AP and BP. It should be understood that the data displayed via the quote board cell is dynamically updated based on market updates provided by an electronic exchange so that a trader may use the quote board cell to get a up to date overview of the market for a given tradeable object. It should be understood that different or additional data could be displayed in relation to the quote board cell as well. For example the quote board cell could display the most recent ask bid quantity current volume as well as other data types selected based on the trader s preferences.

When the window is resized such that it crosses another size threshold the functionality of the window changes as shown at . The window illustrates a market display that can be used by a trader to not only view some market data parameters corresponding to the tradeable object but also to enter orders to buy or sell the tradeable object at an electronic exchange. The market display is composed of two panes an order entry pane and a market grid pane .

The order entry pane has a number of preset fields and buttons that allow a trader to enter orders to buy or sell the tradeable object. The order entry pane includes quantity buttons 1 5 etc. located in the upper left hand corner that allow a trader to increase and decrease an order quantity by a default value when a user right or left clicks in a quantity field here displaying a quantity of 5 illustrated to the right of the quantity buttons. A price field with a price set to 144350 is displayed to the right of the quantity field. Then Buy and Sell buttons are used to define if an order is a buy or a sell and to send the order to the electronic exchange. Additionally the order entry pane includes a number of fields that enable a trader to select an order type for an order to be submitted to an electronic exchange. The illustrated order types include Good Til Day GTD and Limit Limit order types. The None tab provides a list of additional order types and the Default tab enables a trader to select an account that a user wishes to use for trading. It should be understood that while not illustrated additional order entry tabs could be displayed as well depending on the user s preferences or the configuration of the order entry pane .

The market grid pane displays real time market data related to the tradeable object ES ESH7. While the example illustrated in shows only data corresponding to the tradeable object ES ESH7 it should be understood that real time data corresponding to additional tradeable objects could be displayed via the market grid pane as well. The market information illustrated via the market grid pane includes a Wrk Buys column that reflects the total number of working buys that a user has pending for the tradeable object and a Bid Q column that reflects a bid quantity pending at the highest bid price listed in a Bid P column. Then the Ask P column lists the best ask price and the Ask Q column lists an ask quantity pending at the best ask price. The Wrk Sells column reflects the total number of working sell orders that a user has pending for the tradeable object. Then the Net Pos field lists a net position for the tradeable object and the Last P field lists the last traded price. It should be understood that additional or fewer columns having additional or fewer parameters could also be displayed via the market grid pane . Also as new market data is received for the tradeable object from the electronic exchange the values displayed via the market grid pane are dynamically updated to reflect current market conditions.

When a user increases the size of the market display window such that the window reaches the next size threshold the functional state of the window once again changes. According to one example embodiment the third functional state allows a trader to interact with the market data using another interface. illustrates the third functional state defined for the window. More specifically the third functional state corresponds to an interface that is an electronic trading interface of the MD TRADER style display from Trading Technologies International Inc. of Chicago Ill. The interface includes a value axis that indicates values representing prices or some other derivative of price such as yield determined for a tradeable object here once again the tradeable object ES ESH7. The prices or some other derivative of price for the tradeable object are determined based on market data received from the electronic exchange. While the values in the value axis are displayed along a vertically oriented axis different orientations for the value axis could be used as well.

The interface also includes an ask quantity column and a bid quantity column that display ask and bid quantities respectively. The bid and ask quantities are displayed in locations corresponding to their respective values e.g. price levels along the axis . By looking at the trading interface the trader can quickly locate the inside market which refers to the highest bid price and the lowest ask price currently available in the market. Further using the interface a user can view how much quantity is available at various price levels away from the inside market thus giving a trader a more detailed view of market conditions corresponding to the tradeable object. The interface also shows additional parameters such as working order indicators total traded quantity a last traded quantity indicator and many others. Also the interface allows a trader to enter orders at desired price levels by selecting locations corresponding to desired price levels to send orders having a preset default quantity to an electronic exchange. Various additional aspects of the interface shown in are described in U.S. Pat. Nos. 6 772 132 and 6 766 304 the entire content of which is incorporated herein by reference.

When a user increases the size of the interface window such that the window reaches the next size threshold the functional state of the window once again changes to provide yet another way to view and interact with the market data corresponding to the tradeable object. illustrates the fourth functional state defined for the window. In the embodiment illustrated in the fourth functional state corresponds to a chart study interface that displays historical market data corresponding to the tradeable object ES ESH7 . The chart study interface displays a chart along a time axis and a price axis. While the interface displays a single candle stick chart it should be understood that more complex charts corresponding to more than one tradeable object could be displayed as well. Additionally the example embodiments are not limited to displaying any specific chart types. For example the chart could be a line chart a bar chart or yet some other chart type. Also rather than or in addition to the displayed chart the interface could also display different information such as a market profile for the tradeable object to assist a trader in analyzing market trends. A market profile is a statistical display of price activity over a specified time period. Different market trend analysis interfaces could be used as well. The interface also displays traded volume data at that may assist a trader in analyzing the market.

While illustrate four example functional states defined for a window for use in an electronic trading environment it should be understood that fewer or additional size thresholds could be defined as well and the defined size thresholds could trigger activation of a different set of displays interfaces. Additionally while the example embodiments focused on size thresholds that were detected upon a window progressively increasing in size it should be understood that the size thresholds could be defined based on a window decreasing in size as well. It should be understood that the example embodiments are not limited to any specific set of interfaces displays. Also the example embodiments are not limited to the use in trading environment and could be applied in other environments as well as is described below.

According to another example embodiment the window sizing thresholds and different functional states corresponding to resized windows may be applied in a network administration environment. As known network administrators deploy configure provide maintenance and monitor active network gear such as switches routers firewalls servers gateways etc. System administrators also ensure that the prescribed service quality objectives are met and therefore it is critically important to them to know of any problems occurring in their networks as soon as the problems arise. Some networks such as trading environment networks may span across the world with gateways servers routers and switches being located in many different locations such as cities or even counties. In such environments while a system administrator may wish to view the overall status of the networks it would be beneficial to provide an interface that allows the administrator to quickly get to the source of any existing problem without the need to open many separate interfaces.

To illustrate an example embodiment for monitoring network activity it is assumed that the indicator is red thus indicating an alert network status. As previously described in greater detail a user may resize the window to activate the next functional state as shown in . The window in illustrates a more detailed view of network activity. More specifically the window includes three sets of status indicators corresponding to networks in three separate locations here Chicago Chi New York NY and London. The network status corresponding to each location is illustrated via a separate window as illustrated at and . As shown in relation to the window the top indicator is color coded to indicate an alert state for Chicago network. A user may then resize the window as shown in to obtain additional details about Chicago network. When the next size threshold is reached the functionality of the window changes and a new window shown in is activated. Using the window a user may view specific details corresponding to the problems detected with respect to Chicago network.

While a few example embodiments have been described above it should be understood that changing the window s functionality based on size thresholds could be used in many different environments. For example the example embodiments could be applied in relation to business environments such as systems that measure progress and status of an organization. According to one example embodiment the first window can display one or more visual indicators associated with an overall key performance indicator KPI or a key success indicators KSI for a business organization. As commonly known KPIs or KSIs are quantifiable measurements that reflect the critical success factors of an organization. It should be understood that the definition of KPIs may vary depending on the type of the organization. For example the overall KPI may be based on data from many different sources such as profit measurements sales customer service etc.

Similarly to the embodiments illustrated in the overall KPI may be indicated using two or more indicators that give a user a quick overview of the status of an organization. Then a user could expand the first window to a first size threshold to view more detailed data such as a KPI for each department of an organization. When the next size threshold is reached additional details could be provided such as specific reports associated with KPIs that indicate problematic activity. Different embodiments are possible as well.

According to one embodiment the example system takes the form of a computer program product that is stored on a computer readable storage medium and is executed by a suitable instruction execution system in the computer based device. The term computer readable medium as used herein refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Nonvolatile media includes for example optical or magnetic disks such as storage device. Volatile media includes dynamic memory such as main memory or RAM random access memory . Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM and any other memory chip or cartridge or any other medium from which a computer can read.

According to an alternative embodiment a hardware embodiment might take a variety of different forms. A hardware embodiment may be implemented as an integrated circuit with custom gate arrays or an application specific integrated circuit ASIC . A hardware embodiment may also be implemented with discrete hardware components and circuitry. In particular it is understood that the logic structures and method step described in the flow diagrams may be implemented in dedicated hardware such as an ASIC or as program instructions carried out by a microprocessor or other computing device. It will be apparent to those of ordinary skill in the art that the methods described above may be embodied in a computer program product that includes one or more computer readable media. For example a computer readable medium can include a readable memory device such as a hard drive device a CD ROM a DVD ROM or a computer diskette having computer readable program code segments stored thereon. The computer readable medium can also include a communications or transmission medium such as a bus or a communication link either optical wired or wireless having program code segments carried thereon as digital or analog data signals.

The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

