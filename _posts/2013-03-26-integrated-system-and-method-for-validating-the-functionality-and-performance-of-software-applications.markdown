---

title: Integrated system and method for validating the functionality and performance of software applications
abstract: The system and method presented provides a multi-phase, end-to-end integrated process for testing application software using a standard software testing tool. The system and method involve integrating the functional, automated regression and performance phases of software application testing by leveraging deliverables at each phase so that the deliverables may be efficiently reused in subsequent test phases. Deliverables such as functional and technical test conditions and manual test scripts are used as inputs for each phase of the integrated tests. The use of leveraged requirements-based deliverables between test phases significantly reduces much of the repetitive testing typically associated with functionality and performance testing and minimizes repetition of testing errors discovered in earlier test phases. This integrated system and method for validating the functionality and performance of software applications by leveraging deliverables provides enhanced efficiencies, test procedure consistency throughout multiple test phases, consistent test results and high quality software applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09477581&OS=09477581&RS=09477581
owner: JPMorgan Chase Bank, N.A.
number: 09477581
owner_city: New York
owner_country: US
publication_date: 20130326
---
This application is a continuation of U.S. application Ser. No. 12 979 723 filed Dec. 28 2010 issued as U.S. Pat. No. 8 434 058 which is a continuation of U.S. application Ser. No. 11 375 043 filed on Mar. 15 2006 and issued as U.S. Pat. No. 7 895 565. Both of these applications are hereby incorporated by reference.

The present invention relates generally to a system and method for efficiently validating the functionality arid performance software applications. In particular the system and method relates to a multiple test phase integrated process for testing applications in which the system and method enables the efficient use of test phase deliverables to produce high quality business requirements based software applications.

Typically web based software applications are designed to accommodate a multitude of different kinds of business transactions where each transaction often requires a significant number of functions to be performed In order to complete that transaction. The quality of a software application depends largely on the extensive functionality testing required to validate each function used to execute an on line transaction and that each on line transaction is consistent with the business functionality requirements. Software developers recognize that testing software applications is a continuous process that is often time consuming repetitive and expensive. The testing process is usually divided Into test phases which include unit test system test integration user acceptance testing customer installation and support test phases. Of the various test phases phases such as the system test phase which are designed to validate the functionality and performance of a software application quite often Involve the largest number of repetitive tests and tasks.

Repetitive testing and other inefficient testing methods are often the result of having the various phases of test performed by separate and Independent organizations that do not communicate with each other. In this type of testing scheme one organization performs the functional tests which involve the creation of requirements based conditions test data and manual lest scripts. Another organization independently performs automated regression tests which also involve creating requirements based test conditions test data and manual test scripts and a third organization conducts performance tests which again similarly requires the creation of requirements based test conditions test data and test scripts.

Those skilled in software test have recognized that the use of independent organizations to perform tests such as those in the functional automated regression and performance test phases is an overall testing method that results a high degree of duplicative testing. Duplicative testing is highly inefficient costly and time consuming. These types of inefficiencies are particularly apparent in the related areas of functional automated regression and performance phase testing.

In addition to cost and time inefficiencies that may arise from a test process that uses Independent test organizations quality issues may also he a concern. A quality issue that emerges from separate functional automated regression and performance phase testing is the reduced level of consistency or coherence between test results from one phase and another. These inconsistencies often stem from the fact that different test organizations although operating from the same business requirements may select varying requirements and functions to test.

Variations in the requirements that are selected for test necessarily causes variations in the test data and scripts that are derived from such requirements. It may be the case that after the three test phases have been completed if is discovered that some functions and business requirements of the application were tested in one phase but not in another. Another factor contributing to the inconsistency of test coverage is that the method of testing a particular function or requirement may vary from organization to organization. As a result variations in the testing methods between phases and organization may lead to a reduced level of confidence in the quality of the software application that has bean tested even if that application has passed all of the proscribed tests.

Inefficiencies In current testing methods are not exclusively the result of varying testing methodologies of Independent organizations. Test procedure inefficiencies also stem from the current methods or testing toots used to perform the automated regression and performance tests. Standard automated testing tools allow the user to record and playback automatically inputs that are manually entered into the system by an analysts. This method of test is common and may be adequate for relatively small testing jobs but for larger jobs the level of manual repetition is labor and time intensive as wall as extremely costly. Similarly other inefficiencies may be present in current method for conducting performance tasting. Performance testing inefficiencies may be due to low test coverage an inappropriate selection of business functions to he tested and duplicative testing.

For the foregoing reasons in the software testing industry there remains a need for a requirements based method of testing applications software that is capable of producing consistent coherent test results from the functional automated regression and performance phases of testing.

For the foregoing reasons there is also a need for an end to end integrated method for validating the functionality and performance of software applications that allows deliverables such as functional and technical conditions and manual test scripts to be passed on from one phase to another when conducing functional automated regression and performance testing In order to expedite the overall system test cycle enhance efficiencies produce consistent results from phase to phase and a high level of confidence in the quality of the software application.

For the foregoing reasons there is also a need for an organizational structure that promotes the integration of testing teams so that communication is enhanced information is effectively shared work duplication minimized and testing costs reduced.

For the foregoing reasons there is a need for a performance testing process that includes the initial identification of key business transactions and the Implementation of script standards that will increase test case coverage and enhance application quality.

For the forgoing reasons there is also a need for a functional and automated regression testing method that effectively segments testing tasks within the test phases such that task complexity is efficiently matched to an analyst s level of skill.

The foregoing disadvantages in the prior art have been successfully overcome by the present invention which is directed to an integrated method for validating the functionality and performance of a software application which uses a standard software testing tool.

If Is the object of the present invention to provide an end to end method of validating the functionality and performance of a software application that integrates the functional automated regression and performance test phases.

It is another object of the present invention to provide a method of validating the functionality and performance of a software application that leverages deliverables between the functional automated regression and performance test phases such as to enhance human resource efficiency reduce fasting errors and to produce high quality application software.

It is yet another object of the present invention to provide an integrated method that uses a common set of requirements based manual test scripts as input to the functional automated regression and performance lest phases thereby reducing repetitive testing.

It is yet another object of the present invention to provide an organizational testing framework that uses standard testing tools to more efficiently test the functionality and performance application software.

It is yet another object of the present invention to provide an end to end end testing method that enables the functional automated regression and performance test phases to be performed concurrently and to produce consistent test results.

It is yet another object of the present invention to provide an efficient method of conducting automated regression and performance phase tests which includes segmenting the automated regression and performance test phases such that test analysts may specifically be assigned to perform test segments that match their particular level of skill thereby minimizing the unnecessary use of highly experienced costly analysts.

A first aspect of the invention features an integrated method for validating the functionality and performance of software applications through multiple test phases using a common set of business requirements based manual test scripts. The method Includes the steps of identifying functional and technical requirements from the business requirements for the software application deriving functional and technical test conditions in a functional test phase that are based on the identified functional and technical requirements creating manual test scripts based on the functional and technical test conditions using a standard software testing tool wherein the manual test scripts are created in the functional test phase executing the manual test scripts and generating test results during the functional test phase using the standard software testing tool accessed through a computer workstation selecting a first subset of manual test scripts from the manual test scripts that can be used to automate testing during an automated regression test phase creating automated regression tests based on the first subset of manual test scripts and executing automated regression tests and generating test results during the automated regression test phase using the standard software testing tool.

A second aspect of the invention features an integrated method for validating the functionality and performance of software applications in the functional and performance test phases using a common set of business requirements based manual test scripts. The method includes the steps of identifying functional and technical requirements based on the business requirements for the software application deriving functional and technical test conditions based on the identified functional and technical requirements in a functional test phase creating manual test scripts based on the functional and technical test conditions using a standard software testing tool accessed through a computer workstation executing the manual test scripts during the functional test phase using the standard software testing tool to execute the manual test scripts selecting a subset of manual test scripts from the manual test scripts that can toe used during a performance test phase creating performance tests based on the subset of manual test scripts and executing the performance tests during performance test phase and generating test results using the standard software testing tool.

A third aspect of the invention features an integrated method for validating the functionality and performance of a software application through multiple test phases using a common sat of requirements based deliverables. The method includes the steps of identifying functional and technical requirements from the business requirements for the software application developing deliverables in a functional test phase that are based on the identified functional and technical requirements creating automated regression tests based on the deliverables executing the automated regression tests In an automated regression test phase and generating test results using the standard software testing tool and evaluating the test results.

A fourth aspect of the invention features an integrated system for validating the functionality and performance of software applications through multiple test phases using a common set of business requirements based manual test scripts the system comprising a functional test phase module configured for identifying functional and technical requirements from the business requirements for the software application deriving functional and technical test conditions in a functional test phase that are based on the identified functional and technical requirements creating manual test scripts based on the functional and technical test conditions using a standard software testing tool accessed through a computer workstation wherein the manual test scripts are created in the functional test phase and executing the manual test scripts and generating test results during the functional test phase using the standard software testing tool and an automated regression test phase module configured for selecting a first subset of manual test scripts from the manual test scripts that can be used to automate testing during an automated regression test phase creating automated regression tests based on the first subset of manual test scripts executing automated regression tests and generating test results during the automated regression test phase using the standard software testing tool.

Embodiments of the invention may include one or more of the following features. The method may include the steps of selecting a second subset of manual test scripts from the manual test scripts that can fee used during a performance test phase creating performance tests based on the second subset of manual test scripts and executing performance tests and generating test results during the performance test phase using the standard software testing tool. The method may include the step of evaluating the test results from the manual test scripts execution In the functional test phase for at least two test cycles and validating the results before selecting a first or second subset of manual test scripts to be used for subsequent test phases. The method may also include the step of evaluating the test results from the automated regression tests executed during the automated test phase. The first subset of manual test scripts may Include all manual test scripts. The second subset of manual test scripts may include all manual test scripts. The method may further include the step of evaluating test results from the performance tests executed during the performance test phase and the steps of executing the automated regression tests and the performance tests concurrently. The method may also include the steps of executing the functional tests the automated regression tests and the performance test concurrently. The method may also Include the steps of executing the functional tests and executing the performance tests concurrently.

Embodiments of the invention may also include one or more of the following features. The deliverables may include functional and technical test conditions manual test scripts and test results. The method may include the step of developing deliverables which may further include the step of deriving functional and technical test conditions from the Identified functional and technical requirements. The step of developing deliverables may further include the step of creating manual test scripts based on the derived functional and technical test conditions using a standard software testing tool. The step of developing deliverables may further include the steps of executing functional tests based on the derived functional and technical test conditions and generating test results using a standard software tool. The method may further include the steps of creating performance tests based on the deliverables and executing the performance tests in a performance test phase and generating test results using the standard software testing tool. The step of evaluating the test results may further include validating the test results from the functional tests executed during the functional test phase for at least two test cycles before creating the automated regression tests or the performance tests.

Embodiments of the invention may further include a performance test phase module configured for selecting a second subset of manual test scripts from the manual test scripts that can be used during a performance test phase creating performance tests based on the second subset of manual test scripts and executing performance tests and generating test results during the performance test phase using the standard software testing tool.

While the invention is susceptible to various modifications and alternative forms a specific embodiment thereof has been shown by way of example in the drawings and will herein be described in detail. It should be understood however that If is not intended to limit the invention to the particular form disclosed but on the contrary the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims.

The integrated system may further include a performance test phase module configured for selecting a second subset of manual test scripts from the manual test scripts developed in the functional test phase module that can be used during a performance test phase creating performance tests based on the second subset of manual test scripts and executing performance tests and generating test results during the performance test phase using the standard software testing fool The advantage of this integrated system is that it provides the user with the ability to leverage the manual test scripts developed in the functional test phase module in subsequent test phases. Leveraging manual test scripts reduces the duplicative testing that occurs when the test phases are executed Independent of each other increases test coherence because common scripts are used for each phase and increases efficiencies.

Another phase of the overall functionality and performance software application validation involves the automated regression test phase. The purpose automated regression tests is to automate lest scripts so that the functionality of the application can be tested more thoroughly. Automated tests can he easily repeated thereby enabling more functionality testing than is possible with manual functional testing procedures. Both test phases the manual functional and automated regression test phase Include tests that validate the functionality of the application under test. One advantageous feature of the integrated method of the present invention is that it eliminates the necessity of performing the steps of identifying the functional and technical requirements deriving functional and technical test conditions and creating manual test scripts in the automated regression test phase. These steps are costly and repetitive and are unnecessary when using this method.

Referring to in the automated regression test phase the step of selecting a first subset of manual test scripts may involve retrieving manual test scripts from a script repository in testing tool and selecting certain scripts based on a selection criteria that may include selecting the most frequently used functions or the most frequently used tests that have minimal complexity or selecting infrequently used functions that have minimal complexity relative to other functions. First subset of manual tests may include a portion or all manual test scripts . The step of selecting a first subset of manual test scripts enables test analysts to utilize deliverables which may be manual test scripts that were produced in the earlier functional test phase as the input to the automated regression test phase. Thereby eliminating repetitive steps of the testing process. The step creating automated regression tests based on manual test scripts may involve preparing automated regression test scripts using techniques that are commonly practiced in the software testing art to create such automated regression test scripts.

Alternatively the steps of creating automated regression tests based on manual test scripts may involve the steps of the present invention which is discussed below and depicted in .

The automated regression test phase depicted in includes the step executing automated regression tests and generating test results . Step is conducted using software testing tool . The step evaluating test results involves reviewing the test results requirements functional and technical test conditions test scripts and determining whether functions were sufficiently tested in the automated test phase and validating results.

In one embodiment of the integrated method an optional performance phase is included in the overall test cycle as shown in . The purpose of performance testing is not only to validate the functionality of the application hut to test the functionality under simulated real world conditions based on technical requirements that were established for that application under test. Performance testing typically involves simulating the usage of multiple users.

The step selecting a second subset of manual test scripts may include the stops of reviewing technical test conditions and or surveying expected volumes for each business function or for the various transactions that comprise each business function. Second subset of manual tests may include a portion or all manual test scripts . Integrated method enables the same costly and repetitive steps eliminated in the automated regression test phase to also he eliminated in the performance test phase as well. The step creating performance tests based on manual fast scripts may involve preparing performance test scripts using techniques that are commonly practiced in the software testing art to create such scripts.

Alternatively the steps of creating performance tests based on manual test scripts may involve the steps of the present invention which is discussed below and depicted in .

The step of executing performance tests and generating test results is also conducted using software testing tool . The step evaluating test results may include reviewing test results and determining whether the performance of the application under test.

Optionally integrated method may be conducted so that steps of the functional test phase automated regression test phase and the performance test phase are performed concurrently after the manual test scripts have been created. Similarly another option enables the steps of the automated regression test phase and the performance test phase be performed concurrently. Concurrent performance of two or more fast phases is an efficient way of reducing the time that is required to conduct the functionality and performance validation test cycle.

In an alternative embodiment of integrated method shown in manual test scripts may be leveraged between the functional test and performance test phases only. The steps of this alternative embodiment include many of the same steps discussed above identifying functional and technical requirements based on the business requirements established for the application under test deriving functional and technical test conditions based on the identified functional and technical test requirements in a functional test phase creating manual test scripts based on the functional and technical test conditions using a standard software testing tool accessed through a computer workstation executing the manual test scripts during the functional test phase using the standard software testing tool and generating test results selecting a subset of manual test scripts that can be used during a performance test phase creating performance test based on the subset of manual test scripts and executing the performance tests and generating test results using the standard software testing tool .

The alternative embodiment of the integrated method further optionally includes the step of evaluating the test results from the manual test scripts execution functional test execution in the functional test phase for at least two functional test cycles and validating the results before selecting the subset of manual test scripts to be used to create performance tests. A functional test cycle occurs during the functional test phase and may include the steps of deifying functional and technical test conditions creating manual test scripts executing functional tests based on manual test scripts or executing manual test scripts and generating the results . Optionally the steps of the functional test phase and performance test phase are performed concurrently after the manual test scripts have been created.

Each embodiment of the integrated method discussed herein enables organizations to thoroughly and consistently test the functionality and performance of software applications. This method provides an enhanced consistency throughout a muff phase testing cycle because the inputs or deliverables to each phase of testing are the same and are based on the same functional and technical test conditions and requirements. The output of this integrated method is a fully tested high quality software application.

Step creating reusable functions for each action involves using a tool specific API or Application Programming Interface to create the code for the functions. Various types of API may he used to create the reusable functions Including VBscript or C programming language. In this embodiment of the present Invention VBscript Is used to create the reusable functions. These functions are used as building block for the automated functions. Automation analysts create code for VBscript functions that describe various actions which may be performed on the various objection a web page. These reusable VBscript functions are flexible enough to be used by all business functions offered by the application. Thus there are very few functions associated with each object type. For Example EditAField field name field value function can be used for all business functions that Involve editing a field within the application by specifying the name of the field and the value that the user would like to input Into the field. Input values can be data driven from data files or other sources.

Step creating reusable automated functions is based on the reusable VBscript functions and reusable XML objects to create application functions. Automated functions are used as building blocks for automated test cases and test scripts. An automation analyst can develop VBscript functions that describe business functions that are supported by the application. The VBscript functions and the XML objects are used together to create reusable automated function. For example 

The advantages of this automated regression test method is that is provides increased flexibility and reusability of commonly used functions and It enables the work process in the functional and automated regression test phases to be segmented so that analyst skill level can be more appropriately matched to task complexity. The five tier segmentation of the automated regression phase and its applicability to human resource allocation is discussed more fully below and depicted in . Another advantage of this automated regression test is that it provide more testing flexibility and reusable than Is provided for in the standard record and play automated test that is currently available in many standard testing tools.

The steps defining environment monitoring requirements conducting script peer review reviewing final performance test results and signing off performance test am considered best practices and may optionally be including the performance test phase process.

Step implementing key business transactions uses a subset of manual test scripts from the functional test phase includes a review of the business requirements. Step also includes a transaction risk based selection process. The transaction risk based selection process may involve working with the architecture and development teams to determine which application functions are a performance risks and which functions may have response times that are affected by data inputs. Optionally production statistics if available may be applied to application functions to determine the transaction volume risk. If production statistics are not available then the analysts should work with the business to determine the transaction volume risk based on forecasted user behaviors.

Step also may include the step of determining business criticality risk for application functions. Risk levels for performance volume and business criticality may be ranked as H high M medium or L low and whether it is input driven Y yes or N no . Step may further include assigning a score to each function based on its ranking. The score assignments include H 3 points M 2 points L 1 point Y 1 point and N 0 points. All application functions with a score of 5 or higher will be included In the performance test. Key application functions are used to select manual test cases that best represent normal business processing. Selected test cases may then be broken down into individual transactions.

One of the advantages of using this using this risk based transaction selection process Is that it improves test coverage. This selection process may in some cases provide up to 98 percent coverage of the test cases Coverage of ninety eight percent is a substantial improvement over the industry standard for performance testing which is typically about 60 percent coverage.

Step implementing script standards may include the steps of developing a single script managing script based workflow centralizing application functions validating context sensitive data and centralizing error handling.

Developing a single script includes combining individually developed scripts into one main script prior to execution. Moreover during this process transactions Identified throughout the risk based transaction selection process will be documented into a user scenario. Each user scenario is scripted as a section within the script. Each section may request additional functions that are shared within the script. One advantage of this centralized single script process is that having one main script reduces the amount of script maintenance that is required during and after script execution and test execution. Another advantage of having a centralized single script is that output is increased. Yet another advantage of this process is that it enables changes to user requirements transaction ratios application builds and transaction execution rates that occur during execution to be incorporated into the test with a reduced turnaround time and increased reliability. An example the advantage of developing a single script is as follows 

Managing script based workflow involves removing workflow management from the software test tool s Graphic User interface or GUI and placing it within the script. Having management within the script eliminates granularity limitations that inherent in many standard software testing fools that control the test execution process. Typically standard software testing fools limit user scenarios execution granularity to a minimum of approximately one percent. Software testing tools typically require the workflow to be setup using proprietary files which are difficult to understand distribute and manipulate outside of the software tool s graphical user interface. In contrast the script based workflow resides in a simple text file. One advantage of the script based workflow process of the present invention is that flatten files can be easily distributed attached to any email opened In a text editor and can easily modified. Another advantage of the managing script based workflow process is the increased granularity provided. For example user scenarios may be executed at 0.5 or as low as 0.001 percent granularity.

Centralizing application functions organizes shared application functions such as login and logout. Centralization eliminates multiple areas where errors may occur when the login logout functionality is changed or the user access rights are changed. These types of errors typically occur when a new application version is released or during the issue resolution phase of execution. It is recommended that the use of goto statements should be avoided and functions calls used instead. Generally goto statements are more difficult to follow and therefore rapid script debug is more difficult to achieve.

Validating context sensitive data includes confirming that the proper data is being displayed by the application. In some cases when an application is operating under load conditions erroneous data Is sent to the user when a proper request is entered. This validating step enables these types of errors to be discovered during the performance test execution. If the data is not context sensitive most to these types of errors would not be discernable.

Centralizing error handling provides a means to capture all errors that occur during the execution of a performance test application script or data setup and still allow the script to run without producing repetitive erroneous failures. In order to accomplish this after an error occurs the details of that error are captured typically a screenshot . the script then exits the application and subsequently re launches the application. This permits the script to start fresh and continue similar to the behavior of an actual user. The advantage of centralizing error handling is that error handling functions can easily be updated when they are centralized. Using a function call Instead of several lines of code eliminates unnecessary clutter from the script.

The advantages of this embodiment of the performance test phase of the present invention are the ability to determine whether an application will support production volumes In a controlled environment reduced risk of performance errors found in production the ability to detect infrastructure and architecture issues not detectable in functional phase testing increased input into infrastructure and architecture scalability planning as well as increased test case coverage from the industry standard of 20 up to as much as 60 .

Tier involves the execution of a test set or a group of test cases. Task that fall within this tier may be executed by an analyst with a beginner or intermediate skill level. Similarly Tier involves the execution of test cases and requires the same level of skill as Tier . Tier involves the creation of application functions which requires an analyst to have sufficient skill to create code for reusable automated functions. Therefore the skill level required for Tier is intermediate or advanced skills. Tier involves the creation of generic object action which requires an analyst with intermediate or advanced knowledge of VBscript code creation for reusable functions for each action. Tier which involves creating code for reusable XML objects also requires intermediate and advanced knowledge.

This tiered framework also facilitates skill level and task matches in the functional test and performances test phase as well. The entire functional phase would be considered to involve Tier level tasks. Therefore any beginner or Intermediate level analyst should be able to execute all tasks In the functional test phase Conversely most tasks in the performance test phase require an analyst with advanced skilled.

Tier consists of XML code that is developed to perform specific functions during the testing process. Tier consists of the XML code from Tier broken up into disparate object actions that correspond to particular features or functions of the code. Thus object actions may include EditAField ClickAButton or ClickALink. Tier may be considered the boundary between technical object coding and the business application requirements. Tier may include specific categories of object actions from Tier that when grouped create application functions such as login or ViewPortfolio. Tier may include a collection of particular application functions from Tier . Tier may Include a group of test cases and be referred to as a test set.

The advantages of this segmentation framework particularly in the automated regression test phase are enhanced testing efficiencies increased human resource productively fewer resources required reduced risk of data related errors reduced test cycle time increased test case coverage from 60 to as much as 98 and Improved test accuracy.

The integrated method for validating the functionality and performance of software application of the present invention provides a method to more efficiently produce software applications with increased reliability fewer defects and at a reduced cost. This integrated method is preferably implemented by one unified organization that focuses on

The integrated method of the present invention may be used by any software application testing organization that engages validating the functionality and performance of software applications. This method provides users with an organized framework to use existing software fasting tools more efficiently and to allocate human resources more effectively.

An advantage of the integrated method of the present invention is that is provides a framework for testing organizations to use standard tasting tools more efficiently by leveraging deliverables between phases in a multi phase functionality and performance testing cycles.

Another advantage of the integrated method of the present invention is that it facilitates enhanced communication between analysts performing different tests in different phases of the functionality performance test cycle and the sharing of deliverables between phases to increase productivity and efficiency.

Yet another advantage of the integrated method of the present invention is that the test results from the functional automated regression and performance test phases are more consistent with each other because the Inputs to each phase are the same i.e. the same application functions are tested using the same requirements based deliverables.

Yet another advantage of the integrated method of the present invention is that it may enable organizations to reduce cost expenditures that are typically associated with repetitive functionality and performance testing.

The present invention does not require all of the advantageous features and all of the advantages to be incorporated In every embodiment of the invention Moreover although the present invention has been described in considerable detail with reference to certain embodiments other embodiments are possible. Therefore the spirit and scope of the appended claims should not be limited to the description of the embodiments contained herein.

