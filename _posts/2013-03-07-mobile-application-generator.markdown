---

title: Mobile application generator
abstract: A system and a method are disclosed for receiving a request to create a mobile application, the request comprising provider-specific application information and provider-specific content for the mobile application, generating, by a processing device, an application description based on the provider-specific application information, wherein the application description comprises a selection of one or more application features for the mobile application, retrieving, by the processing device, a base mobile application stored in a data store, wherein the base mobile application comprises previously generated base application software code, modifying, by the processing device, the base mobile application in view of the application description; and generating, by the processing device, binary mobile application code for the mobile application in view of the modified base mobile application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08656353&OS=08656353&RS=08656353
owner: User-Friendly Phone Book, L.L.C.
number: 08656353
owner_city: The Woodlands
owner_country: US
publication_date: 20130307
---
The present application claims the benefit of U.S. Provisional Application Ser. No. 61 608 736 titled Mobile Application Generator filed on Mar. 9 2012 the entire contents of which are herein incorporated by reference.

The present disclosure relates to the field of mobile applications. Specifically the examples of the present disclosure relate to automated generation of mobile applications.

Mobile applications also called mobile apps or apps are software applications usually designed to run on smartphones tablet computers and other handheld devices. They are available through application distribution platforms which are typically operated by the owner of the mobile operating system such as the Apple App Store Android Market and BlackBerry App World. Some mobile apps are free and others may have a price. Usually the mobile apps are downloaded from the platform to a target device such as to one of the iPhone BlackBerry or Android phones. Alternatively they can be downloaded to other types of computers such as a laptops or desktops. Mobile apps were originally intended for productivity e.g. email calendar and contact databases however public demand caused rapid expansion into other areas such as mobile games factory automation global positioning systems GPS and location based services banking order tracking and ticket purchases and the like.

Mobile application development is the process by which application software is developed for handheld devices such as personal digital assistants enterprise digital assistants or mobile phones. These mobile applications may be either pre installed on phones during manufacture may be downloaded by consumers from various mobile software distribution platforms or may be web applications delivered over HTTP which use server side or client side processing e.g. JavaScript to provide an application like experience within a Web browser. Android iOS BlackBerry HP webOS Symbian OS and Windows Mobile operating systems support application binaries as found on personal computers with code which executes in the native machine format of the processor. Platforms for mobile applications also may have an integrated development environment that provides tools to allow a developer to write test and deploy applications into the target platform environment.

Typically a software developer writes application software for an application provider for a specific task to be executed on a certain platform or operating system. If a second application provider desires to be able to offer the same mobile application the software developer manually customizes the mobile application to reflect the second application provider. If a provider desires a mobile application to present one view of a certain function to a consumer and a second view to the provider the software developer manually generates two different applications. As such the manual process for generating mobile applications can be both costly and time consuming.

A method and system for automated application generation is described. In the following description numerous details are set forth. It will be apparent to one of ordinary skill in the art having the benefit of this disclosure that examples of the present teachings may be practiced in the absence of these specific details. In some instances well known structures and devices are shown in block diagram form instead of in detail in order to avoid obscuring the examples of the present teachings.

The examples described herein may provide an automated mobile application generator also referred to herein as a mobile app generator . The mobile app generator may be used to create and publish customized mobile applications also referred to herein as mobile apps . These mobile apps may be generated for small medium or large entities who may be vendors of various products or services. Hereinafter these vendors may be referred to as providers. Those serviced by these providers are referred to as consumers or customers. These providers may distribute the mobile apps to their respective end user consumers for use on mobile devices.

The provider console and the admin console can be graphical user interfaces GUIs or other user interfaces that access the server computing system such as a browser or any device that can access the consoles. The provider console and the admin console may serve two different functions. In one embodiment the provider console enables a provider or a vendor to communicate with the server computing system to submit and configure input for the generation of their mobile app and to monitor the mobile app generation process. The admin console enables an administrator or operator of the server computing system or the application generation server and API application server to communicate with the server computing system to perform administrative tasks such operations maintenance and provisioning.

The network may include the Internet and network connections to the Internet. Alternatively the server computing system and the consumer computing systems may be located on a common local area network LAN personal area network PAN campus area network CAN metropolitan area network MAN Wide area network WAN wireless local area network cellular network virtual local area network or the like. Examples of the consumer computing systems may include a consumer workstation a server a computer a portable electronic device an entertainment system configured to communicate over a network such as a set top box a digital receiver a digital television a mobile phone or other electronic devices. For example portable electronic devices may include but are not limited to cellular phones portable gaming systems portable computing devices or the like. The consumer computing systems may have access to the Internet via a firewall a router or other packet switching devices. The server computing system may be a network appliance a gateway a personal computer a desktop computer a workstation etc.

In one example an automated app generator can include the server computing system which can include the application generation server and the application server . The serving computing system may provide a provider portal e.g. provider console which may be a web front end such as a web based interface where the provider specific application information can be entered and a feature tier can be selected. The provider portal may enable providers to customize the mobile app to be generated such as to enter their business information generate deals manage their schedules and create alerts as described herein. The provider portal may provide an interface with most of the other back end components and help orchestrate and visualize the status of the different operations. This component may also be hosted by other servers such as a third party server.

In one embodiment a provider can select input or otherwise specify configuration details of the mobile app via the provider console . The feature tier may indicate which features can be enabled for this particular mobile app. Once the provider specific application information is entered the application generation server can generate a binary of the client side application that can be submitted to the app stores or app marketplaces of the designated platform such as the Apple App Store Google Play Store HTML5 and BlackBerry App World. These mobile apps may be configured to communicate with the current generation API via the application generation server or API application servers to enable features locally and to access the desired features as described herein. In an embodiment the application generation server may automatically and or simultaneously update multiple mobile apps to create new versions of the mobile apps such as when adding additional features to the mobile base app. In an embodiment the mobile app can be configured to display a specific view to a provider and display a different view to a consumer. In some cases the same mobile app may be configured to enable a provider to have access to certain features of the mobile app while the consumer has access to different features of the mobile app.

In the depicted example the server computing system may execute the application generation server and the application server to orchestrate the automated application generation process as described herein. Alternatively the functionality of the application generation server can be distributed over the two or more machines. For example the server computing system may implement the application generation server and not the application server and another server computing system not illustrated can implement the application server . Alternatively other configurations are possible as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.

In one example the application server may operate as a server side API that enables features allows media uploads and downloads allows scheduling and allows payments. The application server may allow a provider to access the data contained in an application description document discussed below . The corresponding client side API may update the configuration when the client side API is launched if there were any changes as described above.

Regarding media uploads and downloads the application server may provide endpoints to store and access media uploaded by providers and application users. The uploaded APIs may store the data on an external storage system e.g. Amazon s3 service Akamai service etc. to minimize the cost of storing data and improving the download performance. Alternatively the application server can store the data in data storage as described below. The media access APIs may provide a list of media and their respective locations and the mobile app may use this information to display the media.

Regarding scheduling the application server may enable providers with the ability to accept appointments through the client side component of the mobile app. The application server may also be configured to send or push out service reminders to the users of the mobile apps. These events and reminders may be sent using push notifications. Alternatively the client side applications may be configured to pull the data. The client side application may respond to these notifications and allow the capability to add these events to the user s calendar. The back end scheduling system may be implemented as part of a back end of the application server .

In an embodiment a scheduling and notification system may be a component of the server computing system to provide a customizable scheduling and notification delivery system that can be used across various channels. The scheduling and notification system may be accessible through an API and may route notifications via push e mail SMS or through social networks such as via the Twitter and Facebook services. The notification system may have a set of heuristics to determine the best communication channel for a given notification.

Regarding payments the application server may provide a payment system to be used by providers to accept payments from their clients. The payment system may be part of the back end of the application server or may interface to a third party technology. In one example the payments may be routed through an automated payment system such as the PayPal service which may then transfer payments to the individual providers.

The network architecture may also include one or more content repositories illustrated as data storage . The data storage may be a content repository in which application templates provider data applications and forms may be stored. The application templates may be a mobile application design template for creating a mobile app. Such template may include for example a certain area to include a logo another area to include a photo and a third area to include a company name and description. Provider data may include but is not limited to provider specific application information that is such as the business name address contact number and the like. Applications may include the generated mobile apps that are customized for the provider. Forms may include different types of documents with blank fields for the insertion of details or information.

In other examples the network architecture may include other devices as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure. In one example the data storage may include a core data store and engine. The core data store and engine may be configured to store data preferences and recommendations of the consumers and providers as well as the interactions. The core data store and engine may be capable of learning users preferences and can offer suggestions for providing certain products and services. The core data store and engine may also provide a framework for matchmaking consumers and businesses. Data may be collected regarding the consumers preferred providers and their buying habits in which the collected data may be used in future mobile apps.

Additionally the core data store and engine may i support white label licensing ii ensure that data is stored in one complete system to the greatest extent possible iii allow features to be created once and reused in any number of applications iv provide a framework for application builds on abilities of previous apps v provide a framework so that it can grow and scale while not requiring unreasonable amounts of rework or additional development or a combination thereof.

In another example a QR code management system may be integrated into the server computing system . The QR Code management system QRCMS may allow for automated creation of dynamic QR Codes that may link an image to a specific uniform resource locator URL when scanned utilizing software designed to interpret QR Codes. For an example use case the QR code management system can be used in a couponing solution. The couponing solution may use smart QR codes to provide tracking metrics as well as a lasting reminder of the coupon. This may limit fraud by monitoring unauthorized use of a coupon with minimal infrastructure requirements for the provider. The consumer may receive an individually serialized coupon from the provider either via email or through the coupon wallet in the app. The consumer or customer can either print the email containing the coupon or print a screen shot of the email containing the coupon or present the QR code to the provider via their mobile device. As used herein a consumer includes a customer of the provider.

In an embodiment a QR code generator and validator may be a component of the server computing system to generate and validate QR codes that may be used within the deal system. This component may include an API that can create and validate QR codes and a QR Code scanner that may be used inside of the mobile apps. The component may include a record keeping system to ensure that QR code deals are only redeemed once and may also include a set of analytic tools to be able to measure the redemption rate and success of a campaign.

If the consumer scans their own coupon by accident or out of curiosity their web browser may be pointed to the coupon campaign management site for further information about the coupon and or for further information about the provider. At the point of sale the provider can scan the code with their mobile app. Scanning the code may allow the provider to determine if the code has been previously redeemed and if the coupon is unredeemed then the provider can apply the discount and the coupon may be set as no longer being valid. Once the coupon has been redeemed if a consumer scans the code the consumer may receive information explaining the coupon status and potentially the opportunity to purchase another coupon if the provider so wishes. The provider can verify that the coupon is real and valid by scanning it from the provider mobile device and can log the coupon into their couponing campaign. This may permit the provider to evaluate the metrics gathered around how many coupons have been sold coupons outstanding or the like.

The automated app generator may create mobile apps for various mobile platforms for one or multiple providers. In one example the automated app generator can create a same basic mobile app for the multiple providers and also allows for branding and other customization of information used by the same basic mobile app. For example a provider may be able to select from a group of feature blocks according to their needs. These features can be enabled or disabled without any change to the application binary of the created application. For instance provider A app and provider B app may be generated from the same basic app and customized to distinguish the different respective providers. In another embodiment the provider app e.g. provider A app may be generated from the same basic app as the consumer app e.g. consumer app with each respective app customized to include different access capabilities views and configurations to distinguish the provider app from the consumer app.

The mobile app generator may allow for the automated creation or partially automated creation of mobile apps on 1 a basic tier which may provide company information methods of contacting the provider service pricing hours of service and service area 2 an enhanced tier which may provide in addition to the basic tier scheduling media access video and audio from within the mobile app and mobile website support and 3 a premium tier which may provide payment capabilities and calendar reminders. The mobile application generator may give the provider the ability to upgrade and downgrade to different tiers so that a sales team may offer such different tiers of the mobile apps to different providers. These mobile apps can be submitted for approval to the Apple App Store Google Play Store HTML5 and BlackBerry App World or other mobile app marketplaces also referred herein as app stores . The mobile apps may be created by the mobile app generator to follow the functional and technical specifications of these mobile app stores. In one embodiment the mobile app generator may submit the app generated binaries to the app stores on behalf of the providers. Alternatively the providers can submit the binaries to the app stores themselves. Links and websites and other online tools can be automatically created as part of a provider s discovery page to link the mobile apps within the respective app stores to provide the consumer with greater visibility and accessibility of the mobile app. The mobile application generator architecture may be scalable and may allow for the regular introduction of new features and updates

The application generation server may include the application description generator the application module selector the Application Build Server and the Network Interface .

The application description generator may be responsible for generating an application description document based on input from a provider console that may reside on a client computing system as discussed with respect to . An interactive App Building Display may be available on the provider console to facilitate the input for the application description generator for presenting the user interface to receive the request to create the mobile application to receive the provider specific application information and to receive the provider specific content

The application description document may be generated after a new application is created. The application description document may be a JavaScript Object Notation JSON document that defines the features that are activated for that provider specific mobile app. JSON documents are language independent lightweight text based scripting language that can represent simple data structures also called objects. Alternatively the application description document may be other types of documents than JSON documents as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure. The application description document may also include provider data for the particular provider such as provider name address operating schedule area of service contact method pricing and asset locations custom images sounds media etc. or the like. In one example an initial version of this document is shipped with the application binary. The application server may update this application description document to allow providers to update their information add or remove features without updating the application binary.

The application module selector may be responsible for selecting an application module based on the application description document that may be generated by the application description generator . For example the application module selector may select an application template or an application binary from the data storage . The application template may be a template that allows a client or consumer to input data to customize an application. The application binary may be a pre configured application which may be customized based on the information in the application template .

The application build server may be responsible for building an application module based on module that may be selected by the application module selector . Examples of methods for building an application module are discussed in further detail below.

The network interface may be responsible for providing an interface between the application generation server the data storage the provider consoles via the client computing devices and the app marketplaces . Examples of app marketplaces include Apple App Store Google Play Store HTML5 and BlackBerry App World and other mobile app stores. The application generation server may also receive and transmit information to and from other computers not shown via the network interface .

The application server may include a separate server for each provider for example provider A application server and provider B application server . The application server may retrieve provider data from the data storage . The provider data may be data that is specific to an individual provider such as specific business information and special features that may be desired by the provider.

Provider A application server may be responsible for providing a mobile app in this example case app to the provider and to the consumer. In an example the same application e.g. app may be presented as one view and configuration for the provider e.g. provider app and may be presented as a different view and configuration for the consumer e.g. consumer app . In other words the mobile app may have multiple versions and multiple interfaces for example a consumer version and interface and a provider version and interface. In an embodiment the provider may use an updated version of the mobile app while the consumer may use a prior version of the mobile app. The multiple user interfaces of the same mobile app e.g. a user interface for the provider and a user interface for the consumer can enable the consumer and provider to see different items of interest. For example the consumer may be interested in product pricing while the provider may be interested in payment status. The different sides of the payment system may involve different application modules e.g. a module for the provider and a different module for the consumer. In another example the same mobile app can use different calendar systems for the provider and the consumer. The mobile app may display information such as payment amount and due date to the consumer while the same app may be customized to display the payment received date and amount to the provider.

In an embodiment a user interface may present the display that includes a mobile application custom feature list that may include one or more fields to customize the base mobile application. In an example the fields may be associated with a respective application module stored in the data store. The user interface may receive the mobile application custom feature list that may include features to customize the base mobile application. The features may be extracted and integrated with the base mobile application.

At block the application description generator may generate an application description based on the provider specific application information. The application description may include a selection of one or more application features for the mobile app. At block the processing logic may send the application description to the Application Build Server . At block the processing logic may generate or retrieve a base mobile application that may be stored in the data storage . In an embodiment the base mobile application may be previously generated base application software code. At block the processing logic may upload application binaries for the base mobile application to the app marketplaces for consumer distribution and the method ends.

At block the processing logic may integrate the retrieved application modules with the base application module. The processing logic may also integrate the provider specific content into a user interface of the base mobile application and may also integrate the base mobile application and the selected application modules.

At block the processing logic may update the base application module for example by adding one or more new features and compile the retrieved application modules and the base application module and generate binary mobile application code for the mobile application in view of the modified base mobile application. The binary mobile application code may be uploaded to an app marketplace and the method ends.

The following examples describe instances of use cases in which the automated mobile app generator may be used.

In one example customized features and message capabilities may be enable providers to identify consumers that have registered an account in association with a specific provider via a mobile app. In this example a mobile app has been created for the specific provider and a consumer has downloaded the mobile app and a consumer launches the specific provider s mobile app. The consumer may choose to create an account and enters his or her username password and other personal identifying information via the mobile app. The mobile app may contact the application generation server with the consumer s information. Upon receipt of the consumer s information the application generation server server may create an account for the consumer and the mobile app may store the consumer s information in secure storage. The mobile app can be notified of the operation s success and the consumer may receive a message notifying the consumer of the registration s success. As a result an account is registered for the consumer with a specific provider via the mobile app.

In another example customized mobile app features and message capabilities may enable a consumer to follow a specific provider on a social network service such as the Twitter service. In this example a mobile app has been created for the specific provider both the specific provider and the consumer have a social network account such as an account with the Twitter service the consumer has downloaded the mobile app and the consumer launches the specific provider s mobile app. The consumer may navigate the mobile app to a provider information section and tap on a Follow on Twitter button. The mobile app may request the consumer s Twitter credentials and upon verification of the credentials may contact the Twitter server with a follow request. As a result the consumer now can display and follow the provider on the Twitter service.

In another example customized mobile app features and message capabilities may enable a consumer to display his or her support for a specific provider on a social network such as the Facebook network. In this example a mobile app has been created for the specific provider the both the specific provider and the consumer have a social network account such as an account with the Facebook service the consumer has downloaded the mobile app and the consumer launches the specific provider s mobile app. The consumer may navigate the mobile app to the provider information section and taps on the Like on Facebook button. The mobile app requests the consumer s Facebook credentials. Upon verification of the consumer s credentials the mobile app may contact the Facebook server with the like request. As a result the consumer can like a specific provider on the Facebook service via the mobile app.

In another example customized mobile app features and message capabilities may enable a consumer to send a specific provider a message. In this example a mobile app has been created for the specific provider the consumer has downloaded the mobile app and the consumer has registered an account with the specific provider. The consumer may launch the mobile app navigate the mobile app to the provider messages section and tap on a New Message button. The mobile app may present a message composer for the consumer to type a message. When the consumer is finished typing the message the consumer may tap the send button. The mobile app may submit the message to the processing logic which may route the message to the specific provider s mailbox. The message may appear in the specific provider s mobile application dashboard and the specific provider may be notified via e mail that he or she has received a message from the consumer.

It is noted that the preceding use cases have been provided as examples and that other use cases may be achieved as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.

In an embodiment an app server such as the server computing system can distinguish a provider from a consumer based on login information. For example an app server can receive login information from a user using an instance of a mobile application executing on a device and determine whether the user is a consumer or a provider in view of the login information. Once the determination is made the app server can grant a provider access level to the mobile application when the user is the provider and grant a consumer access level to the mobile application when the user is the consumer.

The computer system includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a secondary memory e.g. a data storage device which communicate with each other via a bus .

The processing device represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processing device is configured to execute the operations for the application generation server for performing steps discussed herein.

The computer system may further include a network interface device . The network interface device may be in communication with a network . The computer system also may include a video display unit e.g. a liquid crystal display LCD a touch screen or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The secondary memory may include a computer readable storage medium or more specifically a non transitory computer readable storage medium on which is stored one or more sets of instructions e.g. instructions executed by the application generation server for the computer system representing any one or more of the methodologies or functions described herein. The instructions for the computer system may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting computer readable storage media. The instructions for the computer system may further be transmitted or received over a network via the network interface device .

While the computer readable storage medium is shown in an example to be a single medium the term computer readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions . The term computer readable storage medium shall also be taken to include any medium that is capable of storing or encoding a set of instructions for execution by the machine that cause the machine to perform any one or more of the methodologies of the disclosure. The term computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic media.

Some portions of the detailed descriptions above are presented in terms of symbolic representations of operations on data bits within a computer memory. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as configuring associating executing adjusting sending receiving determining transmitting identifying specifying granting accessing assigning detecting and requesting or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The disclosure also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may be a general purpose computer system selectively programmed by a computer program stored in the computer system. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic disk storage media optical storage media flash memory devices other type of machine accessible storage media or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

The descriptions and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct a more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear as set forth in the description below. In addition the disclosure is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the disclosure as described herein.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other examples will be apparent to those of skill in the art upon reading and understanding the above description. Although the disclosure has been described with reference to specific examples it will be recognized that the disclosure is not limited to the examples described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense. The scope of the disclosure should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

