---

title: Automatic identification of storage requirements, such as for use in selling data storage management solutions
abstract: Systems and methods for demonstrating a replacement information management software for a computing system. The methods may include determining if existing information management software is installed in the computing system. The methods may include identifying computing devices of the computing system using information from the existing information management software. The methods may include simulating the replacement information management software with characteristics of the identified computing devices to enable a user to experience the replacement information management software prior to committing to installing the replacement information management software in the computing system. The methods may include automatically installing the replacement information management software. Other implementations are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09021452&OS=09021452&RS=09021452
owner: CommVault Systems, Inc.
number: 09021452
owner_city: Tinton Falls
owner_country: US
publication_date: 20130226
---
The present application claims priority to and the benefit of U.S. Provisional Application No. 61 746 239 filed Dec. 27 2012 which is hereby incorporated herein by reference in its entirety.

Sales representatives for information management software products can face various challenges while trying to persuade a potential customer to purchase new products such as upgrade from a competitor s existing information management product. Information management products provide information management services for information management systems. Information management systems organize and backup information i.e. production data generated during the operation of client computing systems. Information management systems enable organizations to comply with data storage regulations and other business needs by providing retrievable copies i.e. non production or secondary copies of the production data for each client computing system. Because information management systems can play an important role within an organization a sales representative may have various hurdles to overcome in order to successfully persuade a potential customer to switch to a different and even better information management product.

An example of a challenge that a sales representative for a information management product faces is that gathering information about the customer s existing information management system can be inconvenient and time consuming for the customer. Historically sales representatives send a questionnaire to the customer. The questionnaires include questions like how many client or server computing devices does the customer back up what is the capacity of the storage devices for the client or server computing devices what is the capacity of the storage devices used for storing the secondary copies with what frequency does the customer create secondary copies. Having to obtain this information for a large computing system to the sales representative can be an big disincentive for a busy customer even if the customer is unhappy with its existing information management solutions.

Another example of a challenge that the sales representative may have relates to customer concerns about how a replacement information management system would look and work with the customer s computing devices. Changing from a known system to an unknown system can be as scary or unnerving as transitioning from for example using an Apple operating system to using a Microsoft operating system. In other words although the replacement information management system may perform similar or better functions as the existing product fear of losing data or fear of operator error may cause a potential customer to hesitate or be reluctant to pursue an information management system upgrade.

Another example of a challenge that a the sales representative may have to overcome relates to customer concerns about overall cost of the upgrade. With any large and important purchase various hidden costs arise. However not knowing what hidden costs may be lurking behind a commitment may be an additional disincentive for a customer to pursue a new or replacement information management product.

The need exists for systems and methods that overcome the above problems as well as systems and methods that provide additional benefits. Overall the examples herein of some prior or related systems and methods and their associated limitations are intended to be illustrative and not exclusive. Other limitations of existing or prior systems and methods will become apparent to those of skill in the art upon reading the following Detailed Description.

The techniques disclosed in this document are useful in one aspect in solving the above discussed problems.

The headings provided herein are for convenience only and do not necessarily affect the scope or meaning of the disclosure.

Disclosed are systems and methods for using a discovery agent to analyze a potential customer s computing system such as by using information from an existing information management software product in use by the potential customer. The discovery agent is a software tool that can be installed on the potential customer s system manager and that can leverage information generated by the existing product. The discovery agent uses information from the existing product to analyze and inventory the customer s computing system resources. The agent can upload the system resource information to an information management simulator to enable the customer to experience the look and feel of the replacement information management product while loaded with the customer s software and hardware resources. The information management simulator may be hosted remotely for example at the facilities of a sales representative.

The discovery agent may also display a list of recommended software and or hardware resources to support an upgrade to the replacement information management software product. The discovery agent may display an overall price sheet for the upgrade like an online shopping cart. The sales representative is thus able to quickly provide the customer with an inventory of the existing system and provide a list of additional resources i.e. the shopping list that are recommended to support the installation of the replacement information management product. Advantageously by executing the discovery agent the customer does not have to spend time taking inventory of its system the customer can try out a simulation of the replacement system and the customer can see any additional costs associated with the upgrade before committing to the upgrade. The discovery agent also facilitates the installation of the new information management software if the customer chooses to proceed with the installation. These advantages may increase the likelihood of closing the sale.

In some implementations of the systems and methods an existing information management product is not in use by the customer or cannot be leveraged to inventory the customer s computing system. In these implementations the discovery agent crawls or searches through the customer s computing system to identify the computing devices of the customer s system. Automating this process saves the customer the time and effort associated with taking inventory of its computing system. The discovery agent may then upload the identified computing devices or other resources to simulate the customer s computing system with a new information management software product. The discovery agent also facilitates the installation of the new information management software if the customer chooses to proceed with the installation.

The discovery agent generates reports to assist the customer in transitioning to the new information management environment i.e. software hardware and operation of the information management system. The discovery agent generates reports such as a license summary report and a backup jobs summary report. The reports enable the customer to at a glance see how many licenses are in use and see which jobs or clients have backups that are failing.

Various examples of the systems and methods will now be described. The following description provides specific details for a thorough understanding and enabling description of these examples. One skilled in the relevant art will understand however that the invention may be practiced without many of these details. Likewise one skilled in the relevant art will also understand that the invention may include many other obvious features not described in detail herein. Additionally some well known structures or functions may not be shown or described in detail below so as to avoid unnecessarily obscuring the relevant description.

The terminology used below is to be interpreted in its broadest reasonable manner even though it is being used in conjunction with a detailed description of certain specific examples of the invention. Indeed certain terms may even be emphasized below however any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.

Aspects of the technologies described herein may be practiced in an information management environment which will now be described while referencing . Aspects of the information management environment may be used to upgrade or replace an existing information management system of a customer. As shown in the environment includes multiple computing devices that execute numerous software applications to facilitate the operations of an organization or multiple affiliated organizations such as a household corporation or other business entity a non profit organization an educational institution or a governmental agency. The computing devices may include one or more servers such as mail servers file servers database servers print servers and web servers personal computers workstations or other types of fixed computing systems such as mainframe computers and minicomputers not shown . The servers may include network attached storage NAS filers.

The environment may include virtualized computing resources such as a virtual machine provided to the organization by a third party cloud service vendor or a virtual machine running on a virtual machine host operated by the organization. For example the organization may use one virtual machine A as a database server and another virtual machine B as a mail server. The environment may also include mobile or portable computing devices such as laptops tablet computers personal data assistants mobile phones such as smartphones and other mobile or portable computing devices such as embedded computers set top boxes vehicle mounted devices wearable computers etc.

Of course other types of computing devices may form part of the environment . As part of their function each of these computing devices creates accesses modifies writes and otherwise uses production copies of data and metadata that are typically stored in a persistent storage medium having fast I O times. For example each computing device may regularly access and modify data files and metadata stored on semiconductor memory a local disk drive or a network attached storage device. Each of these computing devices may access data and metadata via a file system supported by an operating system of the computing device.

The environment may also include hosted services that provide various online services to the organization or its constituent members e.g. the organization s departments employees independent contractors etc. such as social networking services e.g. Facebook Twitter Pinterest hosted email services e.g. Gmail Yahoo Mail Hotmail or hosted productivity applications or other hosted applications e.g. Microsoft Office 365 Google Docs Salesforce.com . Hosted services may include software as a service SaaS platform as a service PaaS application service providers ASPs cloud services and all manner of delivering computing or functionality via a network. As it provides services to users each hosted service may generate additional hosted data and metadata that is associated with each user. For example Facebook may generate and store photos wall posts notes videos and other content that are associated with a particular Facebook user s account.

The organization directly or indirectly employs an information management system to protect and manage the data and metadata used by the various computing devices in the environment and the data and metadata that is maintained by hosted services on behalf of users associated with the organization. One example of an information management system is the CommVault Simpana system available from CommVault Systems Inc. of Oceanport N.J. The information management system creates and manages non production copies of the data and metadata to meet information management goals such as permitting the organization to restore data metadata or both data and metadata if an original copy of the data metadata is lost e.g. by deletion corruption or disaster or because of a service interruption by a hosted service allowing data to be recovered from a previous time complying with regulatory data retention and electronic discovery e discovery requirements reducing the amount of data storage media used facilitating data organization and search improving user access to data files across multiple computing devices and or hosted services and implementing information lifecycle management ILM or other data retention policies for the organization. The information management system may create the additional non production copies of the data and metadata on any suitable non production storage medium such as magnetic disks magnetic tapes other storage media such as solid state storage devices or optical disks or on cloud data storage sites e.g. those operated by third party vendors . Further details on the information management system may be found in the assignee s U.S. patent application Ser. No. 12 751 850 filed Mar. 31 2010 entitled DATA OBJECT STORE AND SERVER FOR A CLOUD STORAGE ENVIRONMENT INCLUDING DATA DEDUPLICATION AND DATA MANAGEMENT ACROSS MULTIPLE CLOUD STORAGE SITES now U.S. Pat. No. 8 285 681 which is hereby incorporated herein by reference in its entirety.

The information management system accesses or receives copies of the various production copies of data objects and metadata and via an information management operation such as a backup operation archive operation or snapshot operation creates non production copies of these data objects and metadata often stored in one or more non production storage mediums different than the production storage medium where the production copies of the data objects and metadata reside. A non production copy of a data object represents the production data object and its associated metadata at a particular point in time non production objects A C . Since a production copy of a data object or metadata changes over time as it is modified by an application hosted service or the operating system the information management system may create and manage multiple non production copies of a particular data object or metadata each representing the state of the production data object or metadata at a particular point in time. Moreover since a production copy of a data object may eventually be deleted from the production data storage medium and the file system from which it originated the information management system may continue to manage point in time representations of that data object even though a production copy of the data object itself no longer exists.

For virtualized computing devices such as virtual machines the operating system and applications A D may be running on top of virtualization software and the production data storage medium may be a virtual disk created on a physical medium such as a physical disk. The information management system may create non production copies of the discrete data objects stored in a virtual disk file e.g. documents email mailboxes and spreadsheets and or non production copies of the entire virtual disk file itself e.g. a non production copy of an entire .vmdk file .

Each non production object A C may contain copies of or otherwise represent more than one production data object. For example non production object A represents three separate production data objects C and C represented as C and respectively . Moreover as indicated by the prime mark a non production object may store a representation of a production data object or metadata differently than the original format of the data object or metadata e.g. in a compressed encrypted deduplicated or otherwise optimized format. Although shows that a single production data object e.g. C and its associated data object metadata e.g. Meta11 are represented by the contents of only a single non production object e.g. A the entire contents of a single production data object and or its metadata at a particular point in time may instead span across numerous non production objects. Also a single non production object may contain copies of or otherwise represent production data objects that originated from different computing devices.

Non production copies include backup copies archive copies and snapshot copies. Backup copies are generally used for shorter term data protection and restoration purposes and may be in a native application format or in a non native format e.g. compressed encrypted deduplicated and or otherwise modified from the original application format . Archive copies are generally used for long term data storage purposes and may be compressed encrypted deduplicated and or otherwise modified from the original application format. In some examples when an archive copy of a data object is made a logical reference or stub may be used to replace the production copy of the data object in the production storage medium . In such examples the stub may point to or otherwise reference the archive copy of the data object stored in the non production storage medium so that the information management system can retrieve the archive copy if needed. The stub may also include some metadata associated with the data object so that a file system and or application can provide some information about the data object and or a limited functionality version e.g. a preview of the data object. A snapshot copy represents a data object at a particular point in time. A snapshot copy can be made quickly and without significantly impacting production computing resources because large amounts of data need not be copied or moved. A snapshot copy may include a set of pointers derived from the file system or an application where each pointer points to a respective stored data block so collectively the set of pointers reflect the storage location and state of the data object at a particular point in time when the snapshot copy was created. In copy on write if a block of data is to be deleted or changed the snapshot process writes the block to a particular data storage location and the pointer for that block is now directed to that particular location. The set of pointers and or the set of blocks pointed to by a snapshot may be stored within the production data storage medium .

Non production copies of a data object or metadata may be distinguished from a production copy of a data object or metadata in several ways. First a non production copy of a data object is created to meet the different information management goals described above and is not directly used or modified by applications A D hosted services or the operating system . Second a non production copy of a data object is stored as one or more non production objects that may have a format different from the native application format of the production copy of the data object and thus often cannot be directly used by the native application or a hosted service without first being modified. Third non production objects are often stored on a non production storage medium that is inaccessible to the applications A D running on computing devices and hosted services . Also some non production copies may be offline copies in that they are not readily available e.g. not mounted tape or disk. Offline copies include copies of data that the information management system can access without any human intervention e.g. tapes within an automated tape library but not yet mounted in a drive and copies that the information management system can access only with at least some human intervention e.g. tapes located at an offsite storage site .

The information management system also generates information management data such as indexing information that permit the information management system to perform its various information management tasks. As shown in a computing device may include one or more data management agents that provide client side functions for the information management system.

The storage manager may be a software module or other application that coordinates and controls information management operations performed by one or more information management cells to protect and control copies of non production data objects and metadata. As shown by the dashed lines and the storage manager may communicate with some or all elements of the information management cell such as the media agents and computing devices to initiate and manage backup operations snapshot operations archive operations data replication operations data migrations data distributions data recovery and other information management operations. The storage manager may control additional information management operations including ILM deduplication content indexing data classification data mining or searching e discovery management collaborative searching encryption and compression. Alternatively or additionally a storage manager may control the creation and management of disaster recovery copies which are often created as secondary high availability disk copies using auxiliary copy or replication technologies.

The storage manager may include a jobs agent a management agent a network agent and an interface agent all of which may be implemented as interconnected software modules or application programs. The jobs agent monitors the status of information management operations previously performed currently being performed or scheduled to be performed by the information management cell . The management agent provides an interface that allows various management agents in multiple information management cells or in a global storage manager to communicate with one another. This allows each information management cell to exchange status information routing information capacity and utilization information and information management operation instructions or policies with other cells. In general the network agent provides the storage manager with the ability to communicate with other components within the information management cell and the larger information management system e.g. via proprietary or non proprietary network protocols and application programming interfaces APIs including HTTP HTTPS FTP REST virtualization software APIs cloud service provider APIs hosted service provider APIs . The interface agent includes information processing and display software such as a graphical user interface GUI an API or other interactive interface through which users and system processes can retrieve information about the status of information management operations or issue instructions to the information management cell and its constituent components. The storage manager may also track information that permits it to select designate or otherwise identify content indices deduplication databases or similar databases within its information management cell or another cell to be searched in response to certain queries.

The storage manager may also maintain information management data such as a database of management data and policies. The database may include a management index that stores logical associations between components of the system user preferences user profiles that among other things map particular information management users to computing devices or hosted services management tasks or other useful data. The database may also include various information management policies which are generally data structures or other information sources that each include a set of criteria and rules associated with performing an information management operation. The criteria may be used to determine which rules apply to a particular data object system component or information management operation an may include 

As noted above each computing device may include one or more data management agents . Each data management agent is a software module or component that helps govern communications with other system components. For example the data management agent receives commands from the storage manager and sends to and receives from media agents copies of data objects metadata and other payload as indicated by the heavy arrows . Each data management agent accesses data and or metadata stored in a production data storage medium and arranges or packs the data and metadata in a certain format e.g. backup or archive format before it is transferred to another component. Each data management agent can also restore a production copy of a data object or metadata in a production data storage medium from a non production copy. A data management agent may perform some functions provided by a media agent which are described further herein such as compression encryption or deduplication. Each data management agent may be specialized for a particular application e.g. a specified data management agent customized to handle data generated or used by Exchange by Microsoft Corp. . Alternatively or additionally a more generic data management agent may handle data generated or used by two or more applications.

Each computing device may also include a data distribution and live browsing client module herein distribution client module . The distribution client module is responsible for inter alia associating mobile devices and or hosted service accounts with users of the information management system setting information management policies for mobile and other computing devices pushing data objects to a distribution module for distribution to other computing devices providing unified access to a user s data via an interface and providing live browsing features. The various functions of the distribution client module are described in greater detail herein.

A media agent which may be implemented as a software module conveys data as directed by the storage manager between a computing device or hosted service and one or more non production storage mediums . Each media agent may control one or more intermediary storage devices such as a cloud server or a tape or magnetic disk library management system to read write or otherwise manipulate data stored in a non production storage medium . Each media agent may be considered to be associated with a storage device and its related non production storage media if that media agent is capable of routing data to and storing data in the storage media managed by the particular storage device. A media agent may communicate with computing devices hosted services storage devices A D and the storage manager via any suitable communications path including SCSI a Storage Area Network SAN a Fibre Channel communications link or a wired wireless or partially wired wireless computer or telecommunications network including the Internet.

To perform its functions the media agent may include a media file system module a data classification module a content indexing module a deduplication module an encryption module a compression module a network module a distribution module and a media agent database . The media file system module is responsible for reading writing archiving copying migrating restoring accessing moving sparsifying deleting sanitizing destroying or otherwise performing file system operations on various non production storage devices of disparate types. The media file system module may also instruct the storage device to use a robotic arm or other retrieval means to load or eject certain storage media such as a tape.

The network module permits the media agent to communicate with other components within the system and hosted services via one or more proprietary and or non proprietary network protocols or APIs including cloud service provider APIs virtual machine management APIs and hosted service provider APIs . The deduplication module performs deduplication of data objects and or data blocks to reduce data redundancy in the cell. The deduplication module may generate and store data structures to manage deduplicated data objects such as deduplication tables in the media agent database . The encryption module performs encryption of data objects data blocks or non production objects to ensure data security in the cell. The compression module performs compression of data objects data blocks or non production objects to reduce the data capacity needed in the cell.

The content indexing module analyzes the contents of production copies or non production copies of data objects and or their associated metadata and catalogues the results of this analysis along with the storage locations of or references to the production or non production copies in a content index stored within a media agent database . The results may also be stored elsewhere in the system e.g. in the storage manager along with a non production copy of the data objects and or an index cache. Such index data provides the media agent or another device with an efficient mechanism for locating production copies and or non production copies of data objects that match particular criteria. The index data or other analyses of data objects or metadata may also be used by the data classification module to associate data objects with classification identifiers such as classification tags in the media agent database or other indices to facilitate information management policies and searches of stored data objects.

The distribution module may be a set of instructions that coordinates the distribution of data objects and indices of data objects. The distribution may occur from one computing device to another computing device and or from hosted services to computing devices . As a first example the distribution module may collect and manage data and metadata from hosted services or mobile devices . As another example the distribution module may synchronize data files or other data objects that are modified on one computing device so that the same modified files or objects are available on another computing device. As yet another example the distribution module may distribute indices of data objects that originated from multiple computing devices and or hosted services so a user can access all of their data objects through a unified user interface or a native application on their computing device. The distribution module may also initiate live browse sessions to permit communications between different computing devices so that the devices can interchange data and metadata or so the devices can provide computing resources such as applications to each other. The functions performed by the distribution module are described in greater detail herein.

As described in the Background and Overview sections a sales representative for new or for replacement information management software may have a few hurdles to overcome while attempting to persuade a customer to upgrade to a replacement information management software product. Traditionally a sales representative solicits a customer to fill out a paper or electronic questionnaire to provide a list of software and hardware resources within the customer s computing system. The time and effort consumed by gathering the requested information and providing the requested information to the sales representative is a disincentive for the customer to pursue the sales representative s product. Even if the customer is willing to provide an inventory of its existing system concerns over hidden costs and undisclosed fees can be another disincentive to change or upgrade to another information management product. Furthermore if the customer does commit to upgrading to the new information management product the customer may then be faced with the time commitment associated with installing tens or hundreds of copies of software products. A discover agent disclosed herein addresses and solves each of these potential issues or disincentives that a customer may face.

The computing system may receive information management services from an existing information management software . The computing system combined with the existing information management software may be hereafter referred to as an existing information management system. The existing information management software may be a competitor to the replacement information management software product demonstrated by the sales representative and described in though it could also be an upgrade for an existing product demonstrated by the sales representative. The replacement or upgrade information management software may reside on a remote computing device and be available for download via external network . Examples of information management systems are Simpana software by CommVault Networker software by EMC NetBackup software by Symantec Tivoli Storage Manager FastBack software by IBM and the like. The existing information management software may cause the managing server to provide data storage services for the computing system .

The existing information management software may use one or more system content files to manage the computing system . The system content file may include identification of each of the computing devices e.g. the servers and the clients serviced by the information management software . The system content file may also include a mapping between the servers the client computing devices and locations in memory e.g. in the storage device where secondary copies of data are stored for both the servers and the client computing devices . The information management software may use the system content file to maintain a list of computing devices within the computing system as well as to maintain a record of the system roles or functions associated with those computing devices.

A sales representative may install a discovery agent to showcase or demonstrate the features of a replacement information management software e.g. CommVault software and or configurations of for the existing information management software. In some implementations the replacement software includes the software modules and agents described in the information management cell shown in .

The sales representative or customer installs the discovery agent on the managing server . The managing server is the computing device connected to manage and to interface with the various components and devices of the computing system . By installing the discovery agent on the managing server the discovery agent may communicate with all devices within the computing system . The sales representative or customer may install the discovery agent using one or more of a variety of computer readable media. In some implementations the discovery agent is installed using a CD a DVD a USB drive or the like. In other implementations the discovery agent is installed over the external network from the remote computing device .

The discovery agent leverages the installation of the existing information management software to acquire information about the computing system . The information management software may store names network addresses capacity information and other information about the servers and the client computing devices in the system content file . The discovery agent can use the information stored in the system content file to run simulations of the replacement software . However the discovery agent locates the system content file before extracting information from the file.

The discovery agent may automatically locate the system content file by searching through predetermined file system paths. The system content file is typically installed at a predefined path or location in the file system of the managing server . Manufacturers of information management software store the system content file in a particular location to make it easy for subsequent software releases to find the file without extensive searching of the managing server . Example file system paths for the system content file of various manufacturers of information management software is provided below in Table 1.

The discovery agent may automatically locate the system content file or it may receive instructions from the customer or other user through a graphical user interface GUI . GUI may include a browse button a drop down menu or a file path list box for receiving instructions from the customer. The GUI may also include radio buttons to enable the customer to select between having the discovery agent manually or automatically locate the system content file . The manual option may enable the customer to locate the system content file even when the file is stored remotely from the managing server e.g. on a network attached storage NAS .

The discovery agent parses and analyze the content of the system content file before displaying the content with the GUI . The system content file may be a data structure such as a table or a database. In some implementations system content file may be arranged according to Table 2 as shown below.

After extracting resource information from the system content file the discovery agent may display the resources for the user using the GUI . In one implementation the discovery agent displays the extracted information in the same format shown in Table 2 to allow the sales representative and customer to take inventory of the computing system . The GUI also enables the customer to deselect or delete resources from the list such as computing devices that are no longer in use or that no longer benefit from information management system support or conversely may add resources that may be added to the system.

The discovery agent may use the GUI to simulate a user interface of the replacement information management software . The discovery agent loads the information for the resources of the computing system into a version of the replacement information management software that is installed on the managing server . While some of the resources of the computing system include computing devices such as servers and clients the computing system may also include software resources such as MS Exchange Server MS SharePoint and Oracle. The simulation of the replacement information management software renames and organizes the resources of the existing information management software into a system or format that is compatible with the operation of the replacement information management software . For example the resources MS Exchange Server MS SharePoint and Oracle may be organized as data agents and renamed as Exchange Database SharePoint Database and Oracle Database respectively. The simulation of the information management software may rename the managing server as a storage manager and display the storage manager at the top of a hierarchy of resources in the simulation. Additionally the simulation of the replacement information management software may assign the servers to be serviced by a simulated Media Agent and may assign the clients computing devices to be serviced by a simulated Media Agent in accordance with a configuration used by the replacement information management software . Thus the discovery agent provides a simulated configuration of the replacement information software using resources from the computing system in order to enable a customer to experience the look and feel of various features of the replacement information software .

The discovery agent determines the simulated configuration based on the characteristics of the computing devices such as those shown in Table 2. For example the discovery agent may assign a media agent to a number of servers having a combined storage capacity that does not exceed a first threshold e.g. 1 TB. The discovery agent may assign a media agent to a number of client computing devices having a combined storage capacity that does not exceed a second threshold e.g. 10 TB. The discovery agent may allocate media agents based on the role and capacity of the computing devices because computing devices having more important roles e.g. a server may be backed up more frequently than computing devices with other roles e.g. client computing device or workstation. Although example thresholds of 1 TB and 10 TB are used the discovery agent may receive adjustments to the thresholds or other characteristics of the computing devices. Adjustments to the thresholds or other characteristics may be received from the customer or other user via GUI .

The discovery agent may also provide the customer with additional simulated configurations. As shown in window discovery agent may populate the GUI with multiple optional configurations such as configuration 1 configuration 2 configuration 3 and configuration 4. The GUI may enable the customer or other user to select between one or more of the optional configurations to use for the simulation of the computing system . In some configurations the simulated media agents are installed on simulated computing devices that are independent of the servers and the client computing devices . In other configurations the simulated media agents may be installed on one or more of the same computing devices used for the servers and or the client computing devices . In yet other configurations the simulated media agents may be installed on the simulated storage manager i.e. the managing server . The various optional configurations may also enable the sales representative to explain the benefits and drawbacks of the various configurations such as speed cost and convenience of maintenance.

The discovery agent may upload resource information for the computing system to a remote computing device to enable the remote computing device to analyze the computing system and to provide the simulated user interface . By analyzing the resources of the computing system at the remote computing device instead of with the managing server features of the replacement information management software can be accessed remotely by multiple computing systems such as computing system of one or more customers at multiple locations without having to repetitively install the software on local computing devices belonging to the customer s . In some embodiments the remote computing device loads information about the resources of the computing system into a virtually managed simulated information management system and sends an access code or a uniform resource locator URL to the customer to enable the customer to access the remote simulation.

The discovery agent locally or through the remote computing device provides the customer or other user with a list of additional resources that are recommended for supporting the upgrade to the replacement information management software . Items on the list can be selectively added or removed from the list like an online shopping cart. Referring briefly to software components illustrated in more detail in the list of additional resources i.e. the shopping cart may include items such as those illustrated in Table 3 below. Table 3 includes a user adjusted quantity 

The discovery agent may facilitate the installation of the replacement information management software by installing or instructing managing installation of the various software modules and agents of information management cell throughout the computing system . If the customer accepts the recommendations for additional hardware and software resources e.g. from Table 3 the customer will modify the computing system to also include a media agent server a storage device a media agent server and a storage device . The media agent server is communicatively coupled to the managing server and coupled to the servers via a router . The media agent server is communicatively coupled to the managing server and coupled to the client computing devices via a router . The discovery agent may then initiate for example the download and installation of storage manager software onto the management server media agent software onto media agent servers and and the like. Upon completion of the installation the managing server may operate as a storage manager and media agent servers and may operate as media agents A and B. The storage manager and media agents and may then begin creating secondary copies of production data for the servers and the client computing devices on storage devices and using the techniques described for the information management cell of . Furthermore the storage manager may begin managing secondary copies of data created with the previously used information management software.

In summary the discovery agent simplifies the transition for a customer from existing information management software to replacement information management software by analyzing files of the existing management software simulating the replacement software and installing the replacement software in response to instructions from a user. The discovery agent leverages information stored by existing software to quickly identify and define existing resources of the computing system . The discovery agent uses the identified resources of the computing system to simulate a replacement information management system with the resources that the customer is already familiar with. Lastly discovery agent enables the distribution and installation of various software components from a remote computing device .

In the computing environment the discovery agent is described as a single piece of software. However in some implementations the discovery agent includes uses several sub components to perform its function.

The discovery agent uses the extractor module to locate and analyze the content of an existing information management software e.g. information management software . The extractor module may include the file system paths of system content files for competitor information management system software products e.g. Table 1. The manufacturer may periodically update the file system paths e.g. C NetBackup bin sys content file.db so that the discovery agent is compatible with new releases of existing or competitor products.

The discovery agent uses the interface module to provide the GUI for receiving instructions from the customer and for displaying information to the customer. The interface module can enable a customer to control the function of the extractor module by allowing the customer to manually enter the file system paths for system content files. The interface module can also be used to display various system configurations and receive selections from a user for certain configurations to simulate with the simulator module . The interface module may also be used by the simulator module to display simulations of the replacement information management software.

The discovery agent uses the simulator module to enable the customer or other user to experience the look and feel of controlling the existing system resources e.g. the servers and the client computing devices with the features of the replacement software. The simulator module may include functionality of storage manager software and media agent software. The simulator module receives existing system resource information from the extractor module and incorporates the existing system information into simulations of the storage manager software and the media agent software. As manufactures release new versions of the replacement information management software the manufactures can update the simulator module independent of other modules to reflect the most up to date features of the replacement software.

The discovery agent uses the network module to communicate with network devices for the managing server remote computing device or other resources within the computing system . The network module communicates via one or more proprietary and or non proprietary network protocols or APIs including cloud service provider APIs virtual machine management APIs and hosted service provider APIs . As communications protocols are changed and improved e.g. from Internet protocol IP version 4 to IP version 6 programmers may update the network module independent of the other modules of the discovery agent so that the discovery agent can take advantage of speed and efficiency improvements associated with new advances in network communications.

The discovery agent uses the upgrade module to transition the computing system from the existing information management system to the replacement information management system. Because the replacement information management system can be configured in various ways the upgrade module receives system configuration information from the user. In some implementations the upgrade module receives configuration settings that were selected by the user during simulation. In other implementations the upgrade module uses the interface module to display a default configuration and to receive adjustments to the default configuration. For example the upgrade module may display the recommended list of resources of Table 3 and enable the user to adjust the quantities of resources displayed in the list. In response to selection or authorization by the user the upgrade module interfaces with the resources of the computing system and installs the replacement information management software . The upgrade module can manage the software installation by retrieving and installing portions of the replacement information software onto selected ones of the computing devices of computing system .

By modularizing the discovery agent various modules can be independently updated to reflect changes to communications protocols changes to the replacement software product and changes to competitor software products. Hereafter various methods for implementing and or operating the discovery agent are discussed.

At block the discovery agent identifies existing information management software installed on a computing system. The discovery agent may automatically pseudo automatically or manually identify the existing information management software. The discovery agent may be configured to search a number of directories for names or files associated with competitor or other manufacturers of information management software. The directories may be hard coded within the discovery agent or the discovery agent may automatically search one or more logical locations of a file system e.g. an entire C drive. In order to pseudo automatically identify an existing information management software the discovery agent may receive instructions from a customer that identify one or more locations of the file system to search. To manually identify the existing information management software the discovery agent may receive the name of the manufacturer of the existing information management software for example using inputs from the GUI that lists various types models of information management software.

At block the discovery agent locates a system content file of the existing information management software. The system content file identifies the software and hardware resources within the computing system and identifies locations of secondary copies of production data associated with computing devices of the computing system. After identifying the existing information management software for example by manufacturer name the discovery agent uses a data structure such as Table 1 to identify the location of the system content file. Alternatively the discovery agent may receive a file system path to the system content file from the customer or other user.

At block the discovery agent parses information from the system content file that identifies the resources e.g. the computing devices in the existing information management system. To determine the format of the system content file the manufacturer of the replacement information management software may reverse engineer the system content file. For example the manufacturer of the replacement information management software may purchase licenses to each of the competitors information management software and install them onto test computing devices. The manufacturer of the replacement information management software may then perform test runs of the competitors software to generate a test copy of the system content file. The system content file may be a database an extensive markup language XML file or other structured data file. The manufacturer of the replacement information management software may then create a data structure that includes the formats of the data structures used in the competitors software products.

Table 4 as shown below illustrates a sample data structure that maps the format of the data structures in the system content files used by competitor

The discovery agent may use the data structure information of Table 4 in a variety of ways to extract the content of the system content files stored by the existing or competitor information management software. In one implementation the discovery agent makes a copy of the system content file changes the name of the system content file and deletes selected ones of the columns of the system content file that are inapplicable to the data structure format of the replacement information management software. In another implementation the discovery agent copies selected columns from the system content file into another data structure such as a database or a spreadsheet. Examples of columns that the discovery agent may copy include resource ID network address storage capacity of the resource type of resource and the like.

At block the discovery agent displays an inventory of software and hardware resources of the existing information management system or computing system. The discovery agent may use a graphical user interface email or a printer to provide the list of resources to both the customer a sales representative of a replacement software and to facilitate additional functions by the discovery agent.

Accordingly in some implementations the discovery agent may be used in a method for analyzing an existing information management system. The discovery agent may be recorded on or copied to a variety of non transitory computer readable media having a number of instructions that when executed by a processor of a computing device enable the computing device to perform the method . Examples of non transitory computer readable media include CD DVD USB drive portable magnetic drive portable non volatile memory drive or the like.

In addition to analyzing an existing information management system the discovery agent can generate a list of software and hardware components to support upgrading the existing information management system with replacement information management software. illustrates a method for generating a list of recommended software and hardware resources to support the installation of a replacement information management system.

At block the discovery agent correlates the software and hardware resources of the existing information management system with resources for a replacement information management system. The software and hardware resources of the existing information management system may be acquired by the discovery agent using techniques such as those described in method . The discovery agent may use resource type resource ID resource function or other information from the system content file to identify existing computing devices and software modules. Based on the type or role of the resource the discovery agent may determine what the equivalent function of a particular resource is within the framework of the replacement information management system. For example the discovery agent may identify an existing software resource used to manage information associated with a Microsoft Exchange service. The discovery agent may correlate the identified existing software module with for example a data agent or media agent of the replacement information management software.

At block the discovery agent receives instructions or settings for functions of the replacement information management software. The discovery agent may receive the instructions from the customer via the user interface. The detailed instructions may include settings such as the frequency by which each of the different types of resources of the computing system are to be backed up. For example the instructions may include the backup frequencies illustrated in Table 5. As shown in Table 5 the customer may

At block the discovery agent measures network speed between various computing devices in the existing information management system. The discovery agent may measure the network speed between the computing device that is allocated to function as a media agent and the network storage that is allocated as a storage resource for the media agent. The discovery agent may also measure the network speed between a computing device that is allocated to function as a media agent and the client computing devices or servers that the media agent will perform backup operations for. To measure the network speed between the various computing devices the discovery agent may use a network tools such as the tracert command. In a Windows operating system the tracert command returns the series of IP routers that are used to deliver packets from a first computing device to a second computing device. In some implementations the discovery agent may transfer large test files such as a 10 GB file between computing devices and measure the duration of the file transfer to determine the bandwidth or throughput of the network while loaded. Other network measurement tools may also be used.

At block the discovery agent determines recommendations for additional hardware and software resources to add to the existing information management system during an upgrade to the replacement information management software. The discovery agent may calculate an approximate load that backing up each resource places on the network and make recommendations for additional hardware and software resources based on the calculated load. For example the data agent may multiply the number of workstations e.g. 70 by the storage capacity of each workstation e.g. 100 GB by the backup frequency of each workstation in terms of weeks e.g. 1 per week to generate an approximate data load 70 100 GB 1 week 7 TB week . Based on the approximate data load and the determined network bandwidth or network speed the discovery agent may determine for example and that a particular computing system could perform storage operations 45 faster with the addition of two additional computing devices dedicated as media agents and two network storage devices dedicated as storage resources for the two media agents.

At block the discovery agent displays a list of additionally recommended resource for supporting the upgrade. The discovery agent may display or provide the list to the customer or other user via a graphical user interface via email or through a printer. For example of a list of additionally recommended resources is shown above as Table 3. As described above the customer can accept or modify the list of recommended resources prior to making a purchase. Additionally as shown in Table 3 the discovery agent can provide prices for each of the resources to enable the customer to evaluate the total cost of the upgrade.

After providing the customer or other user with a number of options for upgrading the existing information system and in response to a particular selection by the customer the discovery agent can facilitate the installation of the software resources of the replacement information management system. illustrates a method of facilitating the installation of replacement information management software across a computing system with the discovery agent.

At block the discovery agent receives from the user instructions to install replacement information management software in computing devices of the computing system e.g. computing system to upgrade the existing information management software with a replacement information management software. The discovery agent may receive instructions from the user via a GUI. The instructions identify which software modules or agents to install on which computing devices. In one implementation the discovery agent displays a graphical representation of the computing system e.g. similar to the representation of via the GUI and the customer drags and drops the names of software modules or agents from a list e.g. like the list of Table 3 onto graphical representations of computing devices to provide instructions to the discovery agent. Alternatively the discovery agent may install software modules or agents based on the roles of the computing devices as determined by reading the system content file. Other techniques may be used to instruct the discovery agent where to install the software modules. Examples of software modules are identified in the information management cell of and include inter alia a network agent a management agent a jobs agent an interface agent a storage manager database a media agent network module a content indexing module the media agent database an encryption module a compression module a distribution client of a client computing device a data management agent of a client computing device and the like.

At block the discovery agent retrieves software modules or agents to support upgrading the existing information management software. The software modules or agents may be installed directly onto a managing server of the computing system. However rather than installing several software resources on the managing server for distribution the discovery agent may retrieve copies of each software resource from a remote computing device such as remote computing device and store the copies directly onto the corresponding computing devices. Advantageously the customer can immediately begin installation of the software upgrade at its convenience rather than waiting for copies of the media to arrive through a postal service.

At block the discovery agent installs software modules and agents on the computing devices. The managing server may initiate installation of the software resources remotely onto each of the computing devices of the computing system by remotely executing a batch file or other script e.g. from the command prompt. This automated operation saves the customer the time it would take to manually insert a computer readable media into each computing device to manually install the software resources.

At block the discovery agent runs a diagnostics tests on the computing devices and notifies the user of errors or software installation failures. The installation of the software resources of the replacement information management software may include modules that enable each of the computing devices to communication with other ones of the computing devices. For example a network module of a storage manager a network module of the media agent and a data management agent of each client computing device may enable each of the storage manager the media agent and the other computing devices to communicate with one another. The discovery agent may use the network modules to verify that each portion of the replacement information management software has been successfully installed.

The methods and disclose functions of a discovery agent that enable a sales representative or a software company to analyze a customer s existing information management system produce an itemized list of resources for a replacement information management system and facilitate the installation of the replacement information management software resources onto the customer s computing system. The disclosed systems and methods include various advantages for replacing a competitor s existing information software with a replacement information system software. Some of the advantages include quickly discovering the existing computing devices by using files created by the existing or competitor information system producing an itemized price list of recommended additional software and hardware resources to enable the customer to make an informed decision and automating the installation of replacement information software resources to save the customer the time of having to manually install software on each of the computing devices of the computing system.

As described above some customers will have a computing system that includes information management software already installed on one or more computing devices of the computing system. However some customers may not yet have implemented an information management system inclusive of information management software installed on various computing devices of the client s computing system to create and manage secondary copies of production data . The discovery agent described in the previous systems and methods may be used to analyze computing systems that do not have an existing information management system and may be used to facilitate the installation of a new information management system.

Computing system includes many of the similar computing devices as computing system . The computing system differs from computing system in that the computing system does not include an installation of existing information management software on the managing server .

The discovery agent may identify the software and hardware resources of computing system without relying on information provided by existing information management software. In particular the system content file may not reside on the managing server for the discovery agent to extract information regarding the software and hardware resources of the computing system . Instead the discovery agent includes a search module in addition to the extractor module the interface module the simulator module the network module and the upgrade module . The discovery agent uses the search module to search through the computing system to identify the software and hardware resources of the computing system . Details regarding the discovery of network resources may be found in the assignee s U.S. patent application Ser. No. 11 120 619 filed May 2 2005 entitled HIERARCHICAL SYSTEMS AND METHODS FOR PROVIDING A UNIFIED VIEW OF STORAGE INFORMATION now U.S. Pat. No. 7 343 453 which is hereby incorporated herein by reference in its entirety. Other methods for analyzing or crawling a computer network to discover the various resources discussed above are of course possible as is known by those of ordinary skill in the relevant art.

The search module may use Microsoft Active Directory tools to determine the resources of the computing system . Active Directory is a directory service created by Microsoft for Windows domain networks and is included in most Windows Server operating systems. Active Directory provides a central location for network administration and security. The search module can use various Active Directory queries to retrieve information about the resources of the computing system . For example the search module can use command line query tools such as the dsquery tool the dsget tool or ldifde . Each of these tools can be integrated into the search module to retrieve a list of software and hardware resources of the computing system such as computer names server names server descriptions operating systems IP addresses of the computers and servers subnet properties or the like. Once the IP addresses are retrieved the search module may obtain additional information about the hardware resources by using other network related tools. For example search module may use the fdisk command to determine the storage capacity of each of the network storage drives the servers and the computing devices.

The search module may use other techniques to determine the resources of the computing system . Many third party vendors create tools that are useful for mapping or determining the resources of network. For example Wireshark is a network analysis tool that is open source and can incorporated into the search module for use on either Windows or Unix based computing devices to search for network devices. Other examples of network analysis tools include LANsurveyor software by SolarWinds . The LANsurveyor software automatically discovers every device on a network including routers switches servers wireless access points voice over IP phones desktops and printers by using network discovery methods such as simple network management protocol SNMP ping and the like. By incorporating the functions and features of one or more third party network mapping tools the search module may enable the discovery tool to automatically determine the software and hardware resources available in the computing system .

The search module may include a file level system search. For example in addition to identifying what resources are available in the computing system the search module may enable the customer or user to identify file level resources or production data. For example GUI may include a text box that enables the customer to specify file extensions that the discovery agent should search for and quantify e.g. pst xml doc. In some implementations the search module displays file level search results in a list. Table 6 shown below is an example of a list of file level

Depending upon various characteristics of the computing system the discovery agent and search module may be run multiple times to account for different operating systems and various network configurations e.g. Active Directory configurations. For example the discovery agent may be run on the managing server for a Windows subnet and may be run on another managing server for a UNIX based subnet in order to gather software hardware and or file level resource information. In some implementations the discovery agent may be run once on each Active Directory partition. The discovery agent may then send the results of each query to the managing server to be compiled and to be displayed by GUI . Alternatively the discovery agent uses the external network to transmit the results of each network search to the remote computing device for compilation. A complete list of all network resources may then be displayed by the GUI may be printed or may be emailed to the customer.

Additional functions of the discovery agent were discussed previously in connection with the computing environment . In particular the discovery agent may simulate the new information management system by executing a local or remote instance of the new information management software with the retrieved resources of the computing system . The discovery agent enables the customer to interact with the simulation with the window of the GUI . The discovery agent may also provide the customer with various optional configurations such as configuration 1 configuration 2 configuration 3 and configuration 4. The discovery agent may receive a selection for a particular configuration of the new information management system via the GUI and may generate a list of additional recommended software and hardware resources such as the list of Table 3. In response to instructions from the customer the discovery agent then manages the automated installation of the software modules and agents onto select computing devices within the computing system .

The discovery agent may be downloaded onto a local computing device such as managing server from a cloud computing device or other remote computing device. When executed by the processor of the local computing device the discovery agent may cause the local computing device to perform a method of installing new information management software.

At block the discovery agent determines whether an existing information management software is installed on a customer s computing system. The customer s computing system may include a managing server one or more file or mail servers one or more client computing devices and one or more network storage devices. The discovery agent may determine whether an existing information management software is installed on the customer s computing system by automatically searching for files or directories that identify competitor or existing information management software. Alternatively the discovery agent may determine whether an existing information management software is installed on the customer s computing system by receiving notification from the user via a GUI or command line user interface. If the existing software is identified the process proceeds to block . If existing software does not exist the process proceeds to block .

At block the discovery agent identifies software and hardware resources in the customer s computing system by using information from the existing or the competitor information management software. The discovery agent may be preprogrammed with file system paths to the location of a system content file generated by the existing information management software. The system content file may include various information about the software and hardware resources of the computing system such as resource ID storage capacity of hard drives resource type storage policy type locations of secondary copies of production data in network storage devices network addresses operating systems and the like. Instead of discovering the location of the system content file automatically discovery agent may enable the customer to browse or type the file system path of the system content file. The discovery agent copies extracts or parses resource information from the system content file and stores the resource information to a file displays the resource information via a GUI and or sends the resource information to a printer.

At block the discovery agent searches the customer s computing system to identify each of the software and hardware resources. As discussed above various tools may be used to perform the search including query tools associated with Active Directory SNMP and or various third party software. Similar to block the discovery agent stores the resource information to a file displays resource information by a GUI and or sends the resource information to printer.

At block the discovery agent sends the resource information to the remote computing device. The discovery agent may send the resource information to the remote computing device as a single file or as multiple files associated with different operating systems different subnets or other configurations. The remote computing device or cloud computing device receives and compiles the resource information retrieved by the discovery agent.

At block the remote computing device simulates the new or replacement information management system using the resource information received from the discovery agent. While simulating the information management system the remote computing device may provide multiple configurations for the customer to choose from. By simulating the information management system the remote computing device provides the customer with the opportunity to experience the look and feel of the new or replacement information management software prior to committing to purchasing and installing the information management software. In some implementations the local computing device on which the discovery agent is installed simulates the new or replacement information management system in place of the remote computing device.

At block the discovery agent or the remote computing device generates a list of additional resources to support the installation of the new or replacement information management system. As described previously the discovery agent may generate a list of additional resources based on preferential input received from the customer or the discovery agent may automatically generate the list of additional resources based on system characteristics such as quantity of data to back up network speed network bandwidth data storage policy and the like. The discovery agent electronically mails or generates the list of additional resources along with the prices for each of the resources to enable the customer to make an informed decision about the cost of the upgrade. An example list of additional resources is included in Table 3.

At block the discovery agent determines whether to install the new information management system or to upgrade the existing information management system with a replacement information management system. In practice the discovery agent may receive instructions from the customer as to whether the discovery agent is authorized to proceed with the installation. The discovery agent may receive instructions from the user from for example a graphical or command line user interface. If the discovery agent receives instructions not to perform the installation the process proceeds to block and ends. Alternatively the process proceeds to block .

At block the discovery agent installs various software modules and agents associated with the new or replacement information management software. According to various installations the discovery agent installs storage manager agents on the computing device that is designated by the customer as the storage manager. To support the storage manager installation the discovery agent installs among other things a network agent a management agent a jobs agent an interface agent and a database. The discovery agent installs media agent modules on the one or more computing devices designated by the customer to be media agents. To support media agent installations the discovery agent installs a network module a content indexing module media file systems module a deduplication module a data classification module an encryption module a compression module a distribution module and a media agent database. On other computing devices the discovery agent installs distribution clients and data management agents to enable the other computing devices to communicate with the storage manager the media agents and with each other computing device.

The discovery agent the remote computing device or the installed replacement information management software may generate various reports after or during the installation of the new or replacement information management system. The reports may provide summaries for the licenses installed in the customer s computing system and the reports may provide updates about the status of jobs that are running on the new installation. illustrate an example of a License Summary Report and illustrate an example of a Backup Jobs Summary Report.

The license capacity usage table illustrates jobs that were imported from an existing information management software. In particular the license capacity usage table includes a column for client group which shows a client group NetBackup. The license capacity usage table also includes columns of information identifying job ID job type client name data agent data storage policy job size deduplication settings and secondary encryption settings. The license usage tracking summary table and the license capacity usage table enable a user to track the number of licenses being used and the status of jobs imported from the existing information management system to the replacement information management system.

The color coding key provides examples of other characteristics or job statuses that can be displayed on the summary table . Example colors and coding include Active blue Delayed purple Completed green Completed with errors yellow Completed with warnings dark green Killed pink Failed red Aged bronze No schedule white and No run light pink.

By providing license summary reports and job summary reports to the customer the discovery agent or replacement information management software enables the customer to quickly track the progress of license installations and the status of backup jobs. Thus the report feature provides added benefit to the customer by assisting the tracking of the installation process and by enabling the customer to see which jobs and clients may need additional attention. While certain reports and data with the reports are provided other reports and or other data may of course be displayed.

Systems and modules described herein may comprise software firmware hardware or any combination s of software firmware or hardware suitable for the purposes described herein. Software and other modules may reside on servers workstations personal computers computerized tablets PDAs smart phones and other devices suitable for the purposes described herein. Modules described herein may be executed by a general purpose computer e.g. a server computer wireless device or personal computer. Those skilled in the relevant art will appreciate that aspects of the invention can be practiced with other communications data processing or computer system configurations including Internet appliances hand held devices including personal digital assistants PDAs wearable computers all manner of cellular or mobile phones multi processor systems microprocessor based or programmable consumer electronics set top boxes network PCs mini computers mainframe computers and the like. Indeed the terms computer server host host system and the like are generally used interchangeably herein and refer to any of the above devices and systems as well as any data processor. Furthermore aspects of the invention can be embodied in a special purpose computer or data processor that is specifically programmed configured or constructed to perform one or more of the computer executable instructions explained in detail herein.

Software and other modules may be accessible via local memory a network a browser or other application in an ASP context or via another means suitable for the purposes described herein. Examples of the technology can also be practiced in distributed computing environments where tasks or modules are performed by remote processing devices which are linked through a communications network such as a Local Area Network LAN Wide Area Network WAN or the Internet. In a distributed computing environment program modules may be located in both local and remote memory storage devices. Data structures described herein may comprise computer files variables programming arrays programming structures or any electronic information storage schemes or methods or any combinations thereof suitable for the purposes described herein. User interface elements described herein may comprise elements from graphical user interfaces command line interfaces and other interfaces suitable for the purposes described herein.

Examples of the technology may be stored or distributed on computer readable media including magnetically or optically readable computer disks hard wired or preprogrammed chips e.g. EEPROM semiconductor chips nanotechnology memory biological memory or other data storage media. Indeed computer implemented instructions data structures screen displays and other data under aspects of the invention may be distributed over the Internet or over other networks including wireless networks on a propagated signal on a propagation medium e.g. an electromagnetic wave s a sound wave etc. over a period of time or they may be provided on any analog or digital network packet switched circuit switched or other scheme .

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling or connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above Detailed Description is not intended to be exhaustive or to limit the invention to the precise form disclosed above. While specific examples for the invention are described above for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative implementations may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed or implemented in parallel or may be performed at different times. Further any specific numbers noted herein are only examples alternative implementations may employ differing values or ranges.

The teachings of the invention provided herein can be applied to other systems not necessarily the systems described herein. The elements and acts of the various examples described above can be combined to provide further implementations of the invention.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the invention can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further implementations of the invention.

These and other changes can be made to the invention in light of the above Detailed Description. While the above description describes certain examples of the invention and describes the best mode contemplated no matter how detailed the above appears in text the invention can be practiced in many ways. Details of the system may vary considerably in its specific implementation while still being encompassed by the invention disclosed herein. As noted above particular terminology used when describing certain features or aspects of the invention should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the invention with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the invention to the specific examples disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the invention encompasses not only the disclosed examples but also all equivalent ways of practicing or implementing the invention under the claims.

While certain examples are presented below in certain forms the applicant contemplates the various aspects of the invention in any number of claim forms. Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the invention.

