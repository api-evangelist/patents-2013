---

title: Self-single sign-on
abstract: Techniques are described for providing sign-on within a trusted environment across multiple application servers. For example, a method can be provided for a single sign-on within a trusted environment across application servers. The method comprises, by a first application operating within the trusted environment, connecting to a first application server via a first access channel, and retrieving an authentication token from the first application server via the first access channel. The method further comprises, by a second application operating within the trusted environment, connecting to a second application server via a second access channel, and authenticating with the second application server with the authentication token.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09124575&OS=09124575&RS=09124575
owner: SAP SE
number: 09124575
owner_city: Walldorf
owner_country: DE
publication_date: 20131127
---
In today s computing environment a software service provider may want to provide multiple services to a user. In this environment the user may need to access multiple application servers. However the user may be required to sign onto each application server to obtain access to the multiple services. This creates a problem in that it may be tedious for the user to sign onto each of the different application servers. Furthermore the user may need to manage different usernames and passwords for the different application servers increasing the challenges of managing the sign on process.

Some solutions have been developed to provide a single sign on experience. For example some systems utilize a portal where access to the multiple application servers is provided by the portal. However some of the application servers may not be easily configurable to be included in such a solution or a software system provider may want to decouple some of the application servers from the portal.

Furthermore a user may need to access the different application servers through different applications where each application may require a separate sign on to access the application server. If each user application requires a separate sign on to each of the application servers an exponential combination of authentication methods is possible.

Therefore there exists ample opportunity for improvement in technologies related to signing on to multiple application servers from multiple user applications.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Techniques and tools are described for providing sign on within a trusted environment across multiple application servers. For example an authentication token may be provided to the user after the user successfully signs onto one of the application servers. This authentication token may be used within the trusted environment by passing the authentication token to the various user applications allowing any of the applications in the trusted environment to sign onto the multiple application servers.

For example a method can be provided for a single sign on within a trusted environment across application servers. The method may include by a first application operating within the trusted environment connecting to a first application server via a first access channel and retrieving an authentication token from the first application server via the first access channel. The method may further include by a second application operating within the trusted environment connecting to a second application server via a second access channel and authenticating with the second application server with the authentication token.

As another example a computing environment comprising one or more computer servers adapted to provide a single sign on within a trusted environment across application servers can be provided. The computing environment may comprise a first application server and a second application server. The first application server may be configured to receive sign on information via a first access channel from a first application and return an authentication token. The second application server may be configured to receive the authentication token via a second access channel from a second application and authenticate the second application with the authentication token.

As another example a computer readable medium storing computer executable instructions for providing a single sign on within a trusted environment across application servers may be provided. The computer executable instructions may include by a first application server connecting to a first application using an authentication method via a first access channel connecting to a second application via a second access channel passing an authentication token to the second application via the second access channel and receiving the authentication token from the second application via the second access channel. The computer executable instructions may further include by a second application server receiving the authentication token from the second application via a third access channel.

As described herein a variety of other features and advantages can be incorporated into the technologies as desired.

As described herein various techniques and solutions can be applied for providing a single sign on within a trusted environment across multiple application servers. For example an authentication token may be provided to the user after the user successfully signs on to one of the application servers. This authentication token may be used within the trusted environment by passing the authentication token to the user applications allowing any of the applications in the trusted environment to sign onto the multiple application servers.

In the following descriptions the term application server is used. However an application server is not limited to a single server device and may span multiple server devices. For example the application server may be hosted in a cloud computing environment and be distributed in the cloud. Furthermore multiple application servers may exist on a single computing platform. For example a computing platform may include a web server and a database server.

In the technologies described herein a user may sign on to one of the application servers. For example a user may provide a username and password to authenticate the user on an application server. However signing onto the application server is not limited to a username and password authentication. For example the user may use an external user repository such as Kerberos or Security Assertion Markup Language SAML . The user may also sign on using a X.509 client certificate or a logon ticket. Any means to authenticate the user on the different application servers may be used.

Furthermore signing on is not limited to e.g. a designated sign on server. Any application server that can authenticate the user and return an authentication token can be used for the self single sign on.

In the following descriptions the terms sign on single sign on and self single sign on may be used interchangeably. The computing platform generates the authentication token which it later consumes itself. The same application server that sends the authentication token need not necessarily consume the authentication token. Any of the application servers on the computing platform may consume the authentication token. In addition the authentication token may be generated by the application server on which the user signs on or may be generated by another server on the computing platform. Thus instead of relying on an independent service to provide the authentication token the computing platform itself generates the authentication token.

In the technologies described herein an authentication token may be provided. For example after a user signs onto an application server the server authenticates the user and provides an authentication token. The authentication token may comprise information on the user and information on the system. For example the authentication token may comprise a user name and a certification of the issuing system of the application server. The authentication token may also include a timestamp indicating when the token was created and or a validity period e.g. indicating when the token expires. The validity period may be set by the application server or set to a default value e.g. two minutes. The authentication token may be also be encrypted or signed.

The authentication token may be used by any of the applications in the trusted environment. The trusted environment may include only those applications that are provided by the service provider to the user applications deemed by the user and or service provider to be trusted or any application contained within the user s secured environment. A user s secured environment may include the user s mobile phone or private personal computer PC . The trusted environment may also include those application servers to which the user has access. For example if the user only has access to a single application server the user would need to sign onto the other application servers in order to be granted access.

Furthermore the trusted environment is not limited to a single device and may be spread through multiple devices. For example a trusted environment may include those applications on a user s PC and mobile device. Each device in the trusted environment may have one or more applications that access the application servers.

Each application may receive the authentication token allowing the application to access the application servers. The authentication token may be retrieved from the application server to which the user signed on or from one of the applications in the trusted environment. However means for retrieving the authentication token is not limited to the foregoing and may be passed by other means. For example a token may be passed through a shared portion of memory. The authentication may also be shared between devices by e.g. a Bluetooth connection.

In the technologies described herein an access channel is used for communication between an application and application server. An access channel may be any communication protocol used between the application and application server. For example the access channel may be a web server protocol e.g. HTTP. The application may communicate with the application server by sending a HTTP request to the application server. An access channel may also be an Open Database Connectivity ODBC application programming interface API or Java Database Connectivity JDBC API connection. For example the application may make an ODBC or JDBC call to an application server database .

An access channel also describes the starting point and endpoint of the communication. For example an application may communicate with an application server through an access channel. An application may also communicate with the application server through a different access channel. Each application may communicate with application server through e.g. HTTP but each uses a different access channel.

At an application connects to a first application server via a first access channel. For example the application may be a web browser and the first application server may comprise a web server. The application may connect to the first application server using a username and password. The application may connect to the first application server using a web server protocol e.g. HTTP.

At the application retrieves an authentication token from the first application server via the first access channel. In this example the application retrieves the authentication via the first channel. However the application may also retrieve the authentication token via a different channel. Also the application retrieves the authentication from the first application server. However the application may also retrieve the authentication token from a different application server e.g. the application server may direct another application server to send the authentication token to the application .

At an application a different application from application connects to a second application server via a second access channel. For example the application may be a spreadsheet program and the second application server may comprise a database. The application may connect to the second application server using an ODBC or JDBC API e.g. using a network protocol such as the Tabular Data Stream TDS protocol .

At the application authenticates with the second application server with the authentication token. In this example the application passes the authentication token from the application via a third access channel. However the application may instead retrieve the authentication token from the first application server. Alternatively the application may receive the authentication token from any other the other applications in the trusted environment.

In this example the application connects to a second application server via the second access channel. The application may also connect to the first application server via e.g. a third channel. Furthermore the application may connect to the second application server via e.g. a fourth channel.

In this example the first access channel and the second access channel use different network protocols. However the first access channel and second access channel may use the same network protocol. Any network protocol allowed by the different application servers may be used.

At an application server receives sign on information via a first channel from a first application. For example the application server may comprise a web server and receive the sign on information from the first application using a web server protocol e.g. HTTP.

At the application server returns an authentication token. The sign on information may be used to create the authentication token. The authentication token may be returned to the first application via the first access channel whereby the authentication token is passed from the first application to a second application. Alternatively the authentication token may be returned to the second application via a different channel.

At an application server receives the authentication token via a second access channel from a second application. For example the application server may be a database server and connect to the second application using an ODBC or JDBC API.

At the application server authenticates the second application with the authentication token. The user need not provide a username and password to the application server since the application server will use the authentication token to authenticate the second application.

In this example the application server authenticates the second application with the authentication token. The application server may also authenticate the second application with the authentication token. In addition the application server may communicate with the second application using a different channel than the first and second channels.

At the application server passes an authorization token to the second application via the second access channel.

At the application server receives the authorization token from the second application via the second access channel. The application server may also receive the authorization token from the second application via a different channel.

At an application server receives the authorization token from the second application via a third access channel.

In this example the second application does not need to directly communication with the first application. The first application signs onto an application server and the application server provides access for the second application to all of the application servers.

Furthermore the application server may also pass the authorization token to the first application via the first access channel. This allows the first application to also sign onto other application servers. For example the application server may receive the authorization token from the first application via a fourth access channel. Thus application servers and may grant access to both the first and second application through a single sign on.

The application server need not authenticate the second application when it receives the authentication token at . Instead for example the application server may authenticate the second application when it passes the authorization token at . Furthermore the second application need not send the authentication token to the application server at . Instead via the connection at and the second application may be authenticated with the application server .

After the first application server authenticates the user the first application server sends an authentication token to the application . The application retrieves the authentication token from the first application server .

The first application server and second application server are on a single computing platform . Although not depicted the first application server and the second application server may communicate with each other. For example the first application server may access the second application server directly by making database commands to the second application server or running a script. Alternatively the first application server and the second application server can be on different computing platforms but still within the trusted environment.

In the communications between the application and the first application server occur via a first access channel via a particular network protocol e.g. via HTTP . The communications between the application and the second application server occur via a second access channel via a particular network protocol which could be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP .

In some implementations a particular access channel can communicate indirectly with a database e.g. the first access channel between the application and the first application server where the first application server is a web server that then communicates with a database which could be the second application server while a different access channel can communicate directly with a database e.g. the second access channel between the application and the second application server where the second application server is a database that is being directly accessed via the ODBC or JDBC API for example .

Furthermore the first application server and the second application server may communicate between each other. For example the first application server web server may connect directly to the second application server database . In this example the first application server and the second application server do not need to authenticate with each other. However the first application server and the second application server may also require receiving the authentication token by a different channel.

After the first application server authenticates the user the first application server sends an authentication token to the first application . The first application retrieves the authentication token from the first application server .

The first application then passes the authentication token to a second application . The second application may be on the same device as the first application or on a different device.

The second application connects to the first application server and or a second application server database with the authentication token.

In the communications between the first application and the first application server occur via a first access channel via a particular network protocol e.g. via HTTP . The communications between the second application and the first application server occur via a second access channel via a particular network protocol which could be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP . The communications between the second application and the second application server occur via a third access channel via a particular network protocol which could also be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP .

After the first application server authenticates the user the first application server connects to a second application and passes an authentication token to a second application .

The second application then connects to the first application server and or a second application server database with the authentication token.

In the communications between the first application and the first application server occur via a first access channel via a particular network protocol e.g. via HTTP . The communications between the second application and the first application server occur via a second access channel via a particular network protocol which could be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP . The communications between the second application and the second application server occur via a third access channel via a particular network protocol which could also be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP .

After the first application server authenticates the user the first application server connects to a second application and passes an authentication token to the second application . The first application server also passes the authentication token back to the first application .

The first application and second application may then connect to the first application server with the authentication token. The first application and second application may also connect to a second application server with the authentication token. Thus the first application and second application have access to the first application server and second application server through a single sign on.

In the communications between the first application and the first application server occur via a first access channel via a particular network protocol e.g. via HTTP . The communications between the first application and the second application server occur via a second access channel via a particular network protocol which could be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP . The communications between the second application and the first application server occur via a third access channel via a particular network protocol which could also be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP . The communications between the second application and the second application server occur via a fourth access channel via a particular network protocol which could also be a different network protocol e.g. the TDS protocol or the same network protocol as the first access channel HTTP . In this example each application connects to each application server via a different channel using the same or different network protocol.

Additional applications and application servers can be added while still only using a single sign on. For example if a third application is added the third application could receive the authentication token either from one of the other applications or one of the application servers allowing the third application to have access to any of the application servers.

Furthermore if a third application server is added the third application server need only receive the authentication token to allow access to an application attempting to connect to the server.

In other implementations other techniques can be employed to provide a single sign on within a trusted environment across application servers.

With reference to the computing system includes one or more processing units and memory . In this basic configuration is included within a dashed line. The processing units execute computer executable instructions. A processing unit can be a general purpose central processing unit CPU processor in an application specific integrated circuit ASIC or any other type of processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. For example shows a central processing unit as well as a graphics processing unit or co processing unit . The tangible memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two accessible by the processing unit s . The memory stores software implementing one or more innovations described herein in the form of computer executable instructions suitable for execution by the processing unit s .

A computing system may have additional features. For example the computing system includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing system . Typically operating system software not shown provides an operating environment for other software executing in the computing system and coordinates activities of the components of the computing system .

The tangible storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information and which can be accessed within the computing system . The storage stores instructions for the software implementing one or more innovations described herein.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing system . For video encoding the input device s may be a camera video card TV tuner card or similar device that accepts video input in analog or digital form or a CD ROM or CD RW that reads video samples into the computing system . The output device s may be a display printer speaker CD writer or another device that provides output from the computing system .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media can use an electrical optical RF or other carrier.

The innovations can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing system on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing system.

The terms system and device are used interchangeably herein. Unless the context clearly indicates otherwise neither term implies any limitation on a type of computing system or computing device. In general a computing system or computing device can be local or distributed and can include any combination of special purpose hardware and or general purpose hardware with software implementing the functionality described herein.

For the sake of presentation the detailed description uses terms like determine and use to describe computer operations in a computing system. These terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation.

The illustrated mobile device can include a controller or processor e.g. signal processor microprocessor ASIC or other control and processing logic circuitry for performing such tasks as signal coding data processing input output processing power control and or other functions. An operating system can control the allocation and usage of the components and support for one or more application programs . The application programs can include common mobile computing applications e.g. email applications calendars contact managers web browsers messaging applications or any other computing application. Functionality for accessing an application store can also be used for acquiring and updating application programs .

The illustrated mobile device can include memory . Memory can include non removable memory and or removable memory . The non removable memory can include RAM ROM flash memory a hard disk or other well known memory storage technologies. The removable memory can include flash memory or a Subscriber Identity Module SIM card which is well known in GSM communication systems or other well known memory storage technologies such as smart cards. The memory can be used for storing data and or code for running the operating system and the applications . Example data can include web pages text images sound files video data or other data sets to be sent to and or received from one or more network servers or other devices via one or more wired or wireless networks. The memory can be used to store a subscriber identifier such as an International Mobile Subscriber Identity IMSI and an equipment identifier such as an International Mobile Equipment Identifier IMEI . Such identifiers can be transmitted to a network server to identify users and equipment.

The mobile device can support one or more input devices such as a touchscreen microphone camera physical keyboard and or trackball and one or more output devices such as a speaker and a display . Other possible output devices not shown can include piezoelectric or other haptic output devices. Some devices can serve more than one input output function. For example touchscreen and display can be combined in a single input output device.

The input devices can include a Natural User Interface NUI . An NUI is any interface technology that enables a user to interact with a device in a natural manner free from artificial constraints imposed by input devices such as mice keyboards remote controls and the like. Examples of NUI methods include those relying on speech recognition touch and stylus recognition gesture recognition both on screen and adjacent to the screen air gestures head and eye tracking voice and speech vision touch gestures and machine intelligence. Other examples of a NUI include motion gesture detection using accelerometers gyroscopes facial recognition 3D displays head eye and gaze tracking immersive augmented reality and virtual reality systems all of which provide a more natural interface as well as technologies for sensing brain activity using electric field sensing electrodes EEG and related methods . Thus in one specific example the operating system or applications can comprise speech recognition software as part of a voice user interface that allows a user to operate the device via voice commands. Further the device can comprise input devices and software that allows for user interaction via a user s spatial gestures such as detecting and interpreting gestures to provide input to a gaming application.

A wireless modem can be coupled to an antenna not shown and can support two way communications between the processor and external devices as is well understood in the art. The modem is shown generically and can include a cellular modem for communicating with the mobile communication network and or other radio based modems e.g. Bluetooth or Wi Fi . The wireless modem is typically configured for communication with one or more cellular networks such as a GSM network for data and voice communications within a single cellular network between cellular networks or between the mobile device and a public switched telephone network PSTN .

The mobile device can further include at least one input output port a power supply a satellite navigation system receiver such as a Global Positioning System GPS receiver an accelerometer and or a physical connector which can be a USB port IEEE 1394 FireWire port and or RS 232 port. The illustrated components are not required or all inclusive as any components can be deleted and other components can be added.

One or more of the connected devices can include touchscreen capabilities. Touchscreens can accept input in different ways. For example capacitive touchscreens detect touch input when an object e.g. a fingertip or stylus distorts or interrupts an electrical current running across the surface. As another example touchscreens can use optical sensors to detect touch input when beams from the optical sensors are interrupted. Physical contact with the surface of the screen is not necessary for input to be detected by some touchscreens. Devices without screen capabilities also can be used in example environment . For example the cloud can provide services for one or more computers e.g. server computers without displays.

Services can be provided by the cloud through service providers or through other providers of online services not depicted . For example cloud services can be customized to the screen size display capability and or touchscreen capability of a particular connected device e.g. connected devices .

In example environment the cloud provides the technologies and solutions described herein to the various connected devices using at least in part service providers. For example the service providers can provide a centralized solution for various cloud based services. The service providers can manage service subscriptions for users and or devices e.g. for the connected devices and or their respective users .

Although the operations of some of the disclosed methods are described in a particular sequential order for convenient presentation it should be understood that this manner of description encompasses rearrangement unless a particular ordering is required by specific language set forth below. For example operations described sequentially may in some cases be rearranged or performed concurrently. Moreover for the sake of simplicity the attached figures may not show the various ways in which the disclosed methods can be used in conjunction with other methods.

Any of the disclosed methods can be implemented as computer executable instructions or a computer program product stored on one or more computer readable storage media and executed on a computing device e.g. any available computing device including smart phones or other mobile devices that include computing hardware . Computer readable storage media are any available tangible media that can be accessed within a computing environment e.g. one or more optical media discs such as DVD or CD volatile memory components such as DRAM or SRAM or nonvolatile memory components such as flash memory or hard drives . By way of example and with reference to computer readable storage media include memory and and storage . By way of example and with reference to computer readable storage media include memory and storage and . The term computer readable storage media does not include signals and carrier waves. In addition the term computer readable storage media does not include communication connections e.g. and .

Any of the computer executable instructions for implementing the disclosed techniques as well as any data created and used during implementation of the disclosed embodiments can be stored on one or more computer readable storage media. The computer executable instructions can be part of for example a dedicated software application or a software application that is accessed or downloaded via a web browser or other software application such as a remote computing application . Such software can be executed for example on a single local computer e.g. any suitable commercially available computer or in a network environment e.g. via the Internet a wide area network a local area network a client server network such as a cloud computing network or other such network using one or more network computers.

For clarity only certain selected aspects of the software based implementations are described. Other details that are well known in the art are omitted. For example it should be understood that the disclosed technology is not limited to any specific computer language or program. For instance the disclosed technology can be implemented by software written in C Java Perl JavaScript Adobe Flash or any other suitable programming language. Likewise the disclosed technology is not limited to any particular computer or type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.

Furthermore any of the software based embodiments comprising for example computer executable instructions for causing a computer to perform any of the disclosed methods can be uploaded downloaded or remotely accessed through a suitable communication means. Such suitable communication means include for example the Internet the World Wide Web an intranet software applications cable including fiber optic cable magnetic communications electromagnetic communications including RF microwave and infrared communications electronic communications or other such communication means.

The disclosed methods apparatus and systems should not be construed as limiting in any way. Instead the present disclosure is directed toward all novel and nonobvious features and aspects of the various disclosed embodiments alone and in various combinations and sub combinations with one another. The disclosed methods apparatus and systems are not limited to any specific aspect or feature or combination thereof nor do the disclosed embodiments require that any one or more specific advantages be present or problems be solved.

The technologies from any example can be combined with the technologies described in any one or more of the other examples. In view of the many possible embodiments to which the principles of the disclosed technology may be applied it should be recognized that the illustrated embodiments are examples of the disclosed technology and should not be taken as a limitation on the scope of the disclosed technology. Rather the scope of the invention is defined by the following claims. We therefore claim as our invention all that comes within the scope and spirit of these claims.

