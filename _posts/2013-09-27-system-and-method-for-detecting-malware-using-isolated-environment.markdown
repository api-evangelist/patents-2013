---

title: System and method for detecting malware using isolated environment
abstract: Disclosed system and methods for detecting malicious applications. The system provides a library of handler functions. The handlers functions control access of one or more applications to protected resources on a user device. The system also modifies the one or more applications to access the library of handler functions instead of corresponding application program interface (API) functions of the user device. The handler functions receive API function calls from a modified application. The system analyzes the received API function calls for malicious behavior characteristics. When the API function calls do not exhibit malicious behavior characteristics, the handler functions perform the API function calls to the protected resources. When the API function calls exhibit malicious behavior characteristics, the system prevents access of the modified application to the protected resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098697&OS=09098697&RS=09098697
owner: Kaspersky Lab ZAO
number: 09098697
owner_city: Moscow
owner_country: RU
publication_date: 20130927
---
This application claims benefit of priority under 35 U.S.C. 119 a d to a Russian Application No. 2012156433 filed on Dec. 25 2012 which is incorporated by reference herein.

The disclosure relates generally to the field of information security and more specifically to systems and methods for detecting malware using isolated environment.

The number of mobile communication devices is constantly growing and they have penetrated into all areas of human life. The most popular of these are telephones smartphones notebooks tablets and navigation systems. Mobile devices are primarily used for communication and entertainment. In parallel with the development of these devices new wireless communication systems networks and protocols are also being developed. The transmission of data from one device to another and the exchange of information are tasks that even an inexperienced users can perform without difficulty. But the development of new technologies brings not only benefits but also creates problems.

On one hand the development of mobile devices and wireless communication systems simplifies human interaction facilitates exchange of information and erases geographical boundaries. On the other hand new technologies create new security problems. The ease of copying and exchanging of information causes leaks whether deliberate or accidental of confidential personal or business information from organization networks. Therefore information security specialists responsible for administration of information security infrastructure need to extra vigilant in protecting corporate IT systems in order prevent information leaks and various security breaches.

In addition the growth in popularity of mobile platforms such as Android and iOS is attracting the attention of hackers who have various goals from a desire to play jokes or show off to the theft of confidential information for the purpose of extortion and blackmail. As a result of this computer threats such as viruses worms and other types of malware which were previously characteristic of desktop computers are beginning to appear on mobile platforms as well. New threats unique to mobile devices are also appearing such as Trojan horses which after being installed on a mobile device send SMS messages to telephone numbers or use geolocation services to track the movements of the device user.

Therefore there is a need for a security system to protect mobile devices from malware information leaks unauthorized access and other security threats.

Disclosed system method and computer program product for protecting computer resources from leaks and unauthorized access. In one aspect of the invention a protection system includes an isolated environment such as a container into which one or more applications that seek access to protected system resources on a user device may be placed. The system also provides a library of handler functions. The handlers functions control access of one or more applications to the protected resources. The system also modifies the one or more applications to access the library of handler functions instead of corresponding application program interface API functions of the user device. The handler functions receive API function calls from a modified application. The system analyzes the received API function calls for malicious behavior characteristics. When the API function calls do not exhibit malicious behavior characteristics the handler functions perform the API function calls to the protected resources. When the API function calls exhibit malicious behavior characteristics the system prevents access of the modified application to the protected resources.

In one example aspect one or more actions preventing access of the application to the protected resources include blocking API function calls from the application terminating execution of the application or sending a warning notification to a user.

In one example aspect modifying an application includes replacing one or more classes or methods of the application that perform API function calls to the protected resources with one or more function calls to corresponding handler functions contained in the library. In another aspect replacing one or more classes or methods of the application includes replacing one or more classes or methods contained in an application file having .dex extension.

In one example aspect placing a plurality of applications into the container and associating the same security policy with all applications in the container.

In one example aspect the protected system resources include one or more of network resources file system operating system and other applications or programs.

The above simplified summary of example aspects serves to provide a basic understanding of the invention. This summary is not an extensive overview of all contemplated aspects and is intended to neither identify key or critical elements of all aspects nor delineate the scope of any or all aspects of the invention. Its sole purpose is to present one or more aspects in a simplified form as a prelude to the more detailed description of the invention that follows. To the accomplishment of the foregoing the one or more aspects of the invention include the features described and particularly pointed out in the claims.

Example aspects of the present invention are described herein in the context of system method and computer program product for protecting computer resources from leaks and unauthorized access. Those of ordinary skill in the art will realize that the following description is illustrative only and is not intended to be in any way limiting. Other aspects will readily suggest themselves to those skilled in the art having the benefit of this disclosure. Reference will now be made in detail to implementations of the example aspects as illustrated in the accompanying drawings. The same reference indicators will be used to the extent possible throughout the drawings and the following description to refer to the same or like items.

In order to provide security for a user device such as mobile device it is desirable to oversee all of the data being transmitted from the device keep track of data arriving at the device and keep track of events on devices and the data with which these devices are working. A mobile device is generally under the control of a mobile operating system OS . The most popular mobile OS being Google Android Apple iOS Symbian BlackBerry OS and Windows Phone. The applications which can be installed on the devices have access to the resources of the mobile device and to the communication ports via interfaces that are provided by the OS. The resources of a mobile device include those means of data processing system of the device that can be assigned to data processing for a particular unit of time. The primary resources of the data processing system are the processors RAM sets of data and networking and peripheral devices. The interface provided by the OS to interact with the resources of the device may be realized as application programming interface API functions. In this way the application can perform operations with files interact with memory network peripherals etc. One of the ways of monitoring and controlling access of applications to the critical i.e. protected resources of a mobile device is to modify the code of the application that calls critical API functions. Hereinafter the term critical refers to functions and resources that should be protected from unauthorized access certain system files and network ports .

In one example aspect a group of two or more applications may be placed in the same container . Such applications may include applications with similar functionality which may be covered by the same security policy associated with the container

The modification provides control over the critical activity of an application. The modification may be done at the stage of loading the application or the copy of an already installed application may be modified. If a critical action is attempted the application will not be able to perform it since the original class has been replaced by the class described in the library . Therefore the corresponding method will first be called from the library and a check will be done for compliance of the action being performed with the security policy. If the critical action does not violate the security policy the original OS method will be called.

In one example aspect the system monitors the execution of the applications placed in the container and keeps track of the activity of the applications . An application cannot directly call critical functions the calls to the critical functions are performed by handler functions. The library transmits to the analysis module information about the functions being called e.g. the names of functions and the parameters of the calls and the analysis module may compare the information obtained from the library with malware templates from the local database . If on the basis of the analysis by the analysis module behaviour characteristic of malicious software is detected the system may take appropriate actions in accordance with the security policies specified in the database . For example the library of handler functions may block calls to the critical functions i.e. the library does not call the original API function in the OS the application will be halted or dosed the user may receive a warning message etc. in one aspect the analysis module library and local database may updated from the security server which enables a timely response to new threats e.g. expanding the list of critical functions adding new malware templates and security rules to the local database .

In one example aspect the analysis module may not use the local database but instead may access a remote database on the security server . In another aspect the analysis module itself can reside remotely on the security server . In this case the library on the local device will gather information about the operation of the application being analyzed and forward this information to the remote security server where the information received will be analyzed by the remote analysis module in another aspect the security module and local database can be integrated with the library .

The described system for the detection of malicious software may be used for example to intercept attempts by malicious applications to send text messages. In this case the following methods i.e. functions may be critical to the operation of the application 

To control access of the application to these methods the application calls to the above listed methods may be modified. After placing the application in the container the critical methods may be replaced in the application. For example the method 

com.kaspersky.container.hooks.android telephony SmsManager.sendTextMessage android.telephony.SmsManager.getDefault null null null 

The description of these methods is found in the library which extracts the parameters of the method called up and transmits them for analysis an example of the library code for a number of critical methods may look like this 

This example code function contains description of three handler functions used to replace the original critical methods. Each of the functions checks to make sure the parameters used are permitted. If the requirements of the security policy are fulfilled the original methods are called up. If the arguments do not withstand the check the transmission of the text message will be halted in the given example. It is also possible not only to halt the message but also to send an empty message warn the user close the application and so on.

System memory may include a read only memory ROM and random access memory RAM . Memory may be implemented as in DRAM dynamic RAM EPROM EEPROM Flash or other type of memory architecture. ROM stores a basic input output system BIOS containing the basic routines that help to transfer information between the components of computer system such as during start up. RAM stores operating system OS such as Windows XP Professional or other type of operating system that is responsible for management and coordination of processes and allocation and sharing of hardware resources in computer system . Memory also stores applications and programs . Memory also stores various runtime data used by programs .

Computer system may further include hard disk drive s such as SATA HDD and optical disk drive s for reading from or writing to a removable optical disk such as a CD ROM DVD ROM or other optical media. Drives and and their associated computer readable media provide non volatile storage of computer readable instructions data structures applications and program modules subroutines that implement algorithms and methods disclosed herein. Although the exemplary computer system employs magnetic and optical disks it should be appreciated by those skilled in the art that other types of computer readable media that can store data accessible by a computer system such as magnetic cassettes flash memory cards digital video disks RAMs ROMs EPROMs and other types of memory may also be used in alternative aspects of the computer system .

Computer system further includes a plurality of serial ports such as Universal Serial Bus USB for connecting data input device s such as keyboard mouse touch pad and other. Serial ports may be also be used to connect data output device s such as printer scanner and other as well as other peripheral device s such as external data storage devices and the like. System may also include graphics card such as nVidia GeForce GT 240M or other video card for interfacing with a monitor or other video reproduction device. System may also include an audio card for reproducing sound via internal or external speakers . In addition system may include network card s such as Ethernet WiFi GSM Bluetooth or other wired wireless or cellular network interface for connecting computer system to network such as the Internet.

In various aspects the systems and methods described herein may be implemented in hardware software firmware or any combination thereof. If implemented in software the methods may be stored as one or more instructions or code on a non transitory computer readable medium. Computer readable medium includes data storage. By way of example and not limitation such computer readable medium can comprise RAM ROM EEPROM CD ROM Flash memory or other types of electric magnetic or optical storage medium or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a processor of a general purpose computer.

In various aspects the systems and methods described in the present disclosure in terms of modules. The term module as used herein refers to a real world device component or arrangement of components implemented using hardware such as by an application specific integrated circuit ASIC or field programmable gate array FPGA for example or as a combination of hardware and software such as by a microprocessor system and a set of instructions to implement the module s functionality which while being executed transform the microprocessor system into a special purpose device. A module can also be implemented as a combination of the two with certain functions facilitated by hardware alone and other functions facilitated by a combination of hardware and software. In certain implementations at least a portion and in some cases all of a module can be executed on the processor of a general purpose computer such as the one described in greater detail in above . Accordingly each module can be realized in a variety of suitable configurations and should not be limited to any particular implementation exemplified herein.

In the interest of clarity not all of the routine features of the aspects are disclosed herein. It will be appreciated that in the development of any actual implementation of the invention numerous implementation specific decisions must be made in order to achieve the developer s specific goals and that these specific goals will vary for different implementations and different developers. It will be appreciated that such a development effort might be complex and time consuming but would nevertheless be a routine undertaking of engineering for those of ordinary skill in the art having the benefit of this disclosure.

Furthermore it is to be understood that the phraseology or terminology used herein is for the purpose of description and not of restriction such that the terminology or phraseology of the present specification is to be interpreted by the skilled in the art in light of the teachings and guidance presented herein in combination with the knowledge of the skilled in the relevant art s . Moreover it is not intended for any term in the specification or claims to be ascribed an uncommon or special meaning unless explicitly set forth as such.

The various aspects disclosed herein encompass present and future known equivalents to the known components referred to herein by way of illustration. Moreover while aspects and applications have been shown and described it would be apparent to those skilled in the art having the benefit of this disclosure that many more modifications than mentioned above are possible without departing from the inventive concepts disclosed herein.

