---

title: Monitoring link quality between network devices
abstract: The present disclosure discloses a system and method for monitoring link quality between internetworking devices. The system includes a processor and a memory storing instructions that, when executed, cause the system to: generate, at a first internetworking device, a marker-request packet that includes a current marker ID; send, from the first internetworking device, the marker-request packet to a second internetworking device; receive, at the first internetworking device, a marker-reply packet that responds to the marker-request packet from the second internetworking device, the marker-reply packet including the current marker ID and a previous marker ID; and determine, at the first network device, a link quality between the first internetworking device and the second internetworking device based at least in part on the marker-reply packet.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09438496&OS=09438496&RS=09438496
owner: Aruba Networks, Inc.
number: 09438496
owner_city: Sunnyvale
owner_country: US
publication_date: 20131031
---
The present disclosure relates to monitoring network connectivity and performance. In particular the present disclosure relates to a system and method for monitoring link quality between network devices.

Client devices may experience network problems such as low network performance and or network downtimes when the client devices are connected to wireless networks. The network problems can be incurred by wireless links between the client devices and wireless equipments e.g. access points . The network problems can also be incurred by wired links between wireless equipments and controllers. For example if a wired link between an access point and a controller achieves its capacity limit low network performance or network downtime may occur to client devices that connect to the access point. It may need a considerable amount of time to troubleshoot the network problems and find out whether the problems are caused by the wired links or the wireless links.

In the following description several specific details are presented to provide a thorough understanding. While the context of the disclosure is directed to monitoring link quality between network devices one skilled in the relevant art will recognize however that the concepts and techniques disclosed herein can be practiced without one or more of the specific details or in combination with other components etc. In other instances well known implementations or operations are not shown or described in details to avoid obscuring aspects of various examples disclosed herein. It should be understood that this disclosure covers all modifications equivalents and alternatives falling within the spirit and scope of the present disclosure.

Embodiments of the present disclosure relate to monitoring network connectivity and performance. In particular the present disclosure relates to a system and method for monitoring a link quality between network devices. Specifically the system provides an efficient mechanism to troubleshoot problems in network connectivity and performance. The system proactively monitors a link quality between network devices and provides an alert message to an administrator if the link quality is below a threshold. This proactive network monitoring mechanism can provide the administrator with near real time network performance information and facilitate the administrator to identify potential network problems and to prevent occurrence of the network problems. If network problems occur the network monitoring mechanism can also provide information about the link quality to the administrator helping the administrator to troubleshoot the problems.

According to embodiments of the present disclosure an access point generates a marker request packet and sends the marker request packet to a controller periodically. Each marker request packet includes a current marker identifier ID . Correspondingly the controller generates a marker reply packet that responds to the marker request packet and sends the marker reply packet to the access point. The access point determines a link quality between the access point and the controller based at least in part on the marker reply packet. If the link quality is below a threshold the access point may raise a red flag for the link quality. The access point can also determine a packet round trip time between the access point and the controller.

In some embodiments the marker reply packet includes the current marker ID a previous marker ID stored on the controller a controller s TX count and a controller s RX count for the access point. The controller s TX count records the number of packets sent by the controller to the access point between the previous marker ID and the current marker ID. The controller s RX count records the number of packets received at the controller from the access point between the previous marker ID and the current marker ID.

In some embodiments the access point determines the link quality by 1 determining an access point s TX count and an access point s RX count where the access point s TX count records the number of packets sent by the access point to the controller between the previous marker ID and the current marker ID and the access point s RX count records the number of packets received at the access point from the controller between the previous marker ID and the current marker ID 2 determining from the marker reply packet the controller s TX count and the controller s RX count between the previous marker ID and the current marker ID 3 determining a first packet loss in a direction from the access point to the controller based on a difference between the access point s TX count and the controller s RX count 4 determining a second packet loss in a direction from the controller to the access point based on a difference between the controller s TX count and the access point s RX count and 5 determining the link quality based on the first packet loss and the second packet loss.

The inclusion of a previous marker ID and a current marker ID in the marker reply packet is beneficial because the previous marker ID and the current marker ID in the marker reply packet can be used as reference points to determine a time interval during which the access point s TX count and RX count are related to. For example after one or more previous marker request packets and or previous marker reply packets are lost on the way the access point sends a marker request packet to the controller and receives a marker reply packet corresponding to the marker request packet. The access point can obtain the current marker ID and the previous marker ID from the marker reply packet and determine the link quality between the previous marker ID and the current marker ID that are specified in the marker reply packet. The monitoring of the link quality is not interrupted by the loss of the marker request packets and or marker reply packets.

In some embodiments the controller is connected to a plurality of access points. It is beneficial to perform operations at an access point for the determination of a link quality between the controller and the respective access point so that the computation workload can be distributed across the plurality of access points. Each access point may generate a report describing the corresponding link quality and sends the report to the controller or a monitoring system causing the controller or the monitoring system to provide the report to an administrator via a user interface.

It is useful to monitor link quality of a wired link between an access point and a controller for a variety of networks such as an enterprise network or a university network as well as for remote access points. In particular monitoring the link quality is especially useful for access points having wireless IEEE 802.11ac interface that is capable of achieving data traffic of 1 Gigabit per second.

The controller is a hardware device and or software module that provide network managements which include but are not limited to controlling planning allocating deploying coordinating and monitoring the resources of a network network planning frequency allocation predetermined traffic routing to support load balancing cryptographic key distribution authorization configuration management fault management security management performance management bandwidth management route analytics and accounting management etc.

Moreover assuming that a number of access points such as access point are interconnected with the network controller . Each access point may be interconnected with zero or more client devices via either a wired interface or a wireless interface. In this example for illustration purposes only assuming that the client is associated with the access point via a wireless link. An access point generally refers to a network device that allows wireless clients to connect to a wired network. Access points usually connect to a controller via a wired network or can be a part of a controller in itself. For example the access point is connected to the controller via an optional L2 L3 network B.

Furthermore the controller can be connected to the router through zero or more hops in a layer 3 or layer 2 network such as L2 L3 Network A . The router can forward traffic to and receive traffic from the Internet . The router generally is a network device that forwards data packets between different networks and thus creating an overlay internetwork. A router is typically connected to two or more data lines from different networks. When a data packet comes in one of the data lines the router reads the address information in the packet to determine its destination. Then using information in its routing table or routing policy the router directs the packet to the next different network. A data packet is typically forwarded from one router to another router through the Internet until the packet gets to its destination.

The gateway is a network device that passes network traffic from local subnet to devices on other subnets. In some embodiments the gateway may be connected to a controller or be a part of the controller depending on the configuration of the controller .

Web servers and are hardware devices and or software modules that facilitate delivery of web content that can be accessed through the Internet . For example the web server A may be assigned an IP address of 1.1.1.1 and used to host a first Internet website e.g. www.yahoo.com the web server B may be assigned an IP address of 2.2.2.2 and used to host a second Internet website e.g. www.google.com and the web server C may be assigned an IP address of 3.3.3.3 and used to host a third Internet website e.g. www.facebook.com .

The client may be a computing device that includes a memory and a processor for example a laptop computer a desktop computer a tablet computer a mobile telephone a personal digital assistant PDA a mobile email device a portable game player a portable music player a reader device a television with one or more processors embedded therein or coupled thereto or other electronic device capable of accessing a network. Although only one client is illustrated in a plurality of clients can be included in .

In some embodiments the access point includes a network interface capable of communicating to a wired network a processor a memory and a storage device . The components of the access point are communicatively coupled to each other.

The network interface can be any communication interface which includes but is not limited to a modem token ring interface Ethernet interface wireless IEEE 802.11 interface e.g. IEEE 802.11n IEEE 802.11ac etc. cellular wireless interface satellite transmission interface or any other interface for coupling network devices. In some embodiments the network interface may be software defined and programmable for example via an Application Programming Interface API and thus allowing for remote control of the network device.

The processor includes an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device. Processor processes data signals and may include various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although includes a single processor multiple processors may be included. Other processors operating systems sensors displays and physical configurations are possible. In some embodiments the processor includes a networking processor core that is capable of processing network data traffic.

The memory stores instructions and or data that may be executed by the processor . The instructions and or data may include code for performing the techniques described herein. The memory may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory device. In some embodiments the memory also includes a non volatile memory or similar permanent storage device and media including a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device for storing information on a more permanent basis.

In some embodiments the memory stores a monitoring application . The monitoring application can be code and routines for monitoring a link quality on an access point side. In some embodiments the monitoring application can be implemented using hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some other embodiments the monitoring application can be implemented using a combination of hardware and software. In some embodiments the monitoring application may be stored in a combination of the network devices or in one of the network devices. The monitoring application is described below in more detail with reference to .

The storage device can be a non transitory memory that stores data for providing the functionality described herein. The storage device may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory devices. In some embodiments the storage device also includes a non volatile memory or similar permanent storage device and media including a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device for storing information on a more permanent basis.

The first communication module can be software including routines for handling communications between the monitoring application and other components in the digital computing environment . In some embodiments the first communication module sends and receives data to and from one or more of a client a controller and other network devices via the network interface . For example the first communication module receives packets from a controller via the network interface and forwards the received packets to the first packet module . In another example the first communication module receives data describing a report from the report module and sends the report to the controller via the network interface . In some embodiments the first communication module handles communications between components of the monitoring application .

In some embodiments the first communication module receives data from components of the monitoring application and stores the data in the storage device . For example the first communication module receives data describing a TX count and a RX count from the first packet module and stores the TX count and RX count in the storage device . The TX count and RX count are described below in more detail. In some embodiments the first communication module retrieves data from the storage device and sends the data to components of the monitoring application . For example the first communication module retrieves data describing a TX count and RX count from the storage device and sends the TX count and RX count to the quality determination module .

The first packet module can be software including routines for managing packets exchanged between the access point and another network device such as a controller . In some embodiments the first packet module manages a transmitting TX counter at the access point where the TX counter counts the number of packets sent from the access point to the controller . The count value stored in the TX counter is referred to as a transmitting TX count. In some embodiments the TX count is equal to the number of packets sent from the access point to the controller . In some embodiments the data sent from the access point to the controller is organized into buckets of packet length so that each bucket has a size of the packet length. The TX count is equal to the number of buckets. For example assume a packet length is 200 Bytes. If the first packet module already sends a total of 2050 Bytes of data to the controller the 2050 Bytes of data is organized into 11 buckets and the TX count at the access point has a value of 11.

In some embodiments each TX count is associated with a marker identifier ID . A marker ID is an identifier that identifies a marker request packet. For example a marker ID is a unique sequence number included in the marker request packet. The marker request packet is described below in more detail. A TX count associated with a marker ID indicates the total number of packets that the access point has sent to the controller at the time when the marker request packet identified by the marker ID is sent from the access point to the controller . For example a TX count having a value of 281 and associated with a marker ID 100 indicates the access point has already sent 281 packets to the controller at the time when a marker request packet having the marker ID 100 is generated and sent to the controller . In some embodiments the marker request packet is also considered as part of the data packets counted by the TX count.

In some embodiments the first packet module manages a receiving RX counter at the access point where the TX counter counts the number of packets received at the access point from the controller . The count value stored in the RX counter is referred to as a RX count. In some embodiments the RX count is equal to the number of packets received at the access point from the controller . In some embodiments the data received at the access point from the controller is organized into buckets of packet length so that each bucket has a size of the packet length. The RX count is equal to the number of buckets. For example assume a packet length is 200 Bytes. If the first packet module already receives a total of 2050 Bytes of data from the controller the 2050 Bytes of data is organized into 11 buckets and the RX count has a value of 11. Organizing the TX count and RX count into buckets of packet length is beneficial because it can help to figure out if only large packets are getting lost due to fragmentation.

In some embodiments each RX count is associated with a marker ID. A RX count associated with a marker ID indicates the total number of packets that the access point has received from the controller at the time when the marker request packet identified by the marker ID is sent from the access point to the controller . For example a RX count having a value of 281 and associated with a marker ID 100 indicates the access point has already received 281 packets from the controller at the time when a marker request packet having the marker ID 100 is generated and sent to the controller . In some embodiments the data packets counted by the RX counter also include marker reply packets received from the controller . The marker reply packets are described below in more detail.

The first packet module stores the TX count in the TX counter and the RX count in the RX counter. When the first packet module receives additional packets at the access point from the controller the first packet module updates the RX count in the RX counter to account for the additional packets. For example the first packet module increases the RX count by a number of the additional packets. When the first packet module sends additional packets from the access point to the controller the first packet module updates the TX count in the TX counter at the access point to account for the additional packets. For example the first packet module increases the TX count by a number of the additional packets. Before exchanging packets between the access point and the controller the first packet module may initialize the TX count and the RX count at the access point to be zero.

In some embodiments the first packet module stores multiple TX counts and RX counts associated with multiple previous marker IDs to facilitate the determination of link quality. For example the first packet module stores TX counts and RX counts associated with multiple previous marker IDs in addition to the TX count and RX count associated with the current marker ID. For example if the current marker ID is marker ID 50 the first packet module stores 1 a first TX count and RX count associated with the previous marker ID 47 2 a second TX count and RX count associated with the previous marker ID 48 3 a third TX count and RX count associated with the previous marker ID 49 and 4 a fourth TX count and RX count associated with the current marker ID 50. Storing multiple TX counts and RX counts associated with previous marker IDs on the access point is beneficial because the monitoring of link quality is not interrupted by loss of marker request packets and or marker reply packets. An example process to deal with loss of marker request packets and or marker reply packets is described below with reference to .

In some embodiments the first packet module stores a list of TX counts and RX counts since receiving the last marker reply packet from the controller so that the access point s TX packets and RX packets between each two consecutive marker request packets since receiving the last marker reply packet are recorded by one TX count and RX count respectively. For example assume the last marker reply packet is a marker reply packet replying to the marker request packet with marker ID 200. The first packet module continues to generate and send a next marker request packet with marker ID 201 to the controller . If the first packet module receives a marker reply packet responding to the marker request packet with marker ID 201 then the first packet module stores 1 a TX count counting the access point s TX packets between marker ID 200 and marker ID 201 and 2 a RX count counting the access point s RX packets between marker ID 200 and marker ID 201.

However if the first packet module only receives a marker reply packet responding to the marker request packet with marker ID 206 without receiving marker reply packets responding to the marker request packets with marker IDs from 201 to 205 the first packet module stores a list of TX counts and RX counts since marker ID 200. For example the first packet module stores 1 a first TX count and RX count between marker ID 200 and marker ID 201 2 a second TX count and RX count between marker ID 201 and marker ID 202 3 a third TX count and RX count between marker ID 202 and marker ID 203 4 a fourth TX count and RX count between marker ID 203 and marker ID 204 5 a fifth TX count and RX count between marker ID 204 and marker ID 205 and 6 a sixth TX count and RX count between marker ID 205 and marker ID 206.

In some examples the controller receives the access point s marker request packets with marker IDs from 201 and 205 and sends marker reply packets responding to the marker request packets with marker IDs from 201 and 205 to the access point respectively. The first packet module at the access point does not receive the marker reply packets because they are lost on the way from the controller to the access point referred to as loss of marker reply packets . Next the first packet module receives a marker reply packet responding to the marker request packet with marker ID 206 where the marker reply packet includes a previous marker ID 205 a current marker ID 206 the controller s TX count and RX count between marker ID 205 and marker ID 206. The quality determination module discards all the access point s TX counts and RX counts since marker ID 200 except the TX count and RX count between marker ID 205 and marker ID 206. The quality determination module determines the link quality between marker ID 205 and marker ID 206 by performing operations similar to those described below.

In some other examples the first packet module at the access point does not receive the marker reply packets that reply to the marker request packets with marker IDs from 201 to 205 because these marker request packets are lost on the way from the access point to the controller respectively referred to as loss of marker request packets . Next the first packet module sends a marker request packet with marker ID 206 to the controller and receives a marker reply packet responding to the marker request packet with marker ID 206 from the controller . The marker reply packet includes a previous marker ID 200 a current marker ID 206 the controller s TX count and RX count between marker ID 200 and marker ID 206. The quality determination module determines the TX count between marker ID 200 and marker ID 206 by adding together 1 the first TX count between marker ID 200 marker ID 201 2 the second TX count between marker ID 201 and marker ID 202 3 the third TX count between marker ID 202 and marker ID 203 4 the fourth TX count between marker ID 203 and marker ID 204 5 the fifth TX count between marker ID 204 and marker ID 205 and 6 the sixth TX count between marker ID 205 and marker ID 206. Similarly the quality determination module determines the RX count between marker ID 200 and marker ID 206 by adding the corresponding RX counts together. The quality determination module then determines the link quality between marker ID 200 and marker ID 206 by performing operations similar to those described below.

The marker request module can be software including routines for generating marker request packets. A marker request packet can be a packet of data for requesting the controller to send a marker reply packet to the access point . For example the marker request module at the access point sends a marker request packet to the controller causing a marker reply module stored on the controller to generate and send a marker reply packet back to the marker request module . Each marker request packet includes a marker ID e.g. a sequence number identifying the marker request packet.

A marker reply packet can be a packet of data responding to a marker request packet identified by a marker ID. In some embodiments a marker reply packet includes 1 a current marker ID identifying a current marker request packet that the marker reply packet responds to 2 a previous marker ID identifying a last marker request packet that the controller has received from the access point 3 a controller s TX count between the previous marker ID and the current marker ID and 4 a controller s RX count between the previous marker ID and the current marker ID.

The controller s TX count between the pervious marker ID and the current marker ID describes the number of packets that the controller has sent to the access point during a time period between 1 the time when the last marker request packet identified by the previous marker ID is received at the controller and 2 the time when the current marker request packet identified by the current marker ID is received at the controller and the controller s RX count between the previous marker ID and the current marker ID describes the number of packets that the controller has received from the access point during the same time period. For example the controller s TX count between the previous marker ID and the current marker ID is equal to the controller s TX count associated with the current marker ID minus the controller s TX count associated with the previous marker ID. The controller s RX count between the previous marker ID and the current marker ID is equal to the controller s RX count associated with the current marker ID minus the controller s RX count associated with the previous marker ID.

In some embodiments before any data packets and marker request packets are sent from the access point to the controller the marker request module initializes a marker ID to be an initial value e.g. marker ID 0 . Afterwards the marker request module generates and sends a marker request packet to the controller periodically. In some examples the marker request module updates the current marker ID and sends a marker request packet including the current marker ID to the controller in every second. For example at a first second the marker request module updates the current marker ID to be 1 and sends a marker request including marker ID 1 to the controller at the next second the marker ID 1 becomes a previous marker ID and the marker request module updates the current marker ID to be 2 and sends the marker request packet including marker ID 2 to the controller so on and so forth. The time interval between the generation and transmission of two consecutive marker request packets is configured to be small enough to catch loss of bursty traffic. In some embodiments a periodic heartbeat packet sent from the access point to the controller can be reused as a marker request packet.

In some embodiments the marker request packet and the marker reply packet are part of the traffic between the access point and the controller and are counted in the TX count and RX count respectively. If there is no other packet traffic between the access point and the controller the marker request packet and the marker reply packet can serve as ping packets for the computation of round trip delay time RTT and also for the packet loss computation described herein.

The quality determination module can be software including routines for determining a link quality of a wired link between the access point and the controller . In some examples the wired link is a bidirectional link. In some embodiments the quality determination module receives a marker reply packet from the controller via the first communication module . The marker reply packet includes 1 a current marker ID identifying a current marker request packet that the marker reply packet replies to 2 a previous marker ID identifying a last marker request packet that the controller received from the access point 3 a controller s TX count between the previous marker ID and the current marker ID and 4 a controller s RX count between the previous marker ID and the current marker ID.

It is beneficial to include a previous marker ID in each marker reply packet. For example even if one or more marker request packets and or marker reply packets are lost the quality determination module can perform operations similar to those described herein to determine a link quality. The loss of the marker request packets and or marker reply packets does not interrupt the monitoring of the link quality.

The quality determination module determines the access point s TX count and RX count between the previous marker ID and the current marker ID. The access point s TX count between the pervious marker ID and the current marker ID describes the number of packets that the access point has sent to the controller during a time period between 1 the time when the last marker request packet identified by the previous marker ID is generated and sent to the controller and 2 the time when the current marker request packet identified by the current marker ID is generated and sent to the controller and the access point s RX count between the previous marker ID and the current marker ID describes the number of packets that the access point has received from the controller during the same time period. For example the access point s TX count between the previous marker ID and the current marker ID is equal to the access point s TX count associated with the current marker ID minus the access point s TX count associated with the previous marker ID. The access point s RX count between the previous marker ID and the current marker ID is equal to the access point s RX count associated with the current marker ID minus the access point s RX count associated with the previous marker ID.

For example assume the previous marker ID is marker ID 1 and the current marker ID is marker ID 2. If the access point s TX count at marker ID 1 and marker ID 2 is 1234 and 1345 respectively the access point s TX count between marker ID 1 and marker ID 2 is 111 1345 1234 111 . If the access point s RX count at marker ID 1 and marker ID 2 is 1200 and 1300 respectively the access point s RX count between marker ID 1 and marker ID 2 is 100 1300 1200 100 .

The quality determination module determines a first difference between the controller s TX count and the access point s RX count and determines a first packet loss in a first direction from the controller to the access point based on the first difference. For example the quality module determines the first packet loss to be an absolute value of the first difference which represents the number of lost packets. In another example the quality determination module determines the first packet loss as a ratio between 1 the first difference e.g. representing the number of lost packets and 2 the controller s TX count e.g. representing the total number of packets sent from the controller to the access point between the previous marker ID and the current marker ID. The quality determination module also determines a second difference between the controller s RX count and the access point s TX count and determines a second packet loss in a second direction from the access point to the controller based on the second difference. For example the quality determination module determines the second packet loss as the absolute value of the second difference which representing the number of lost packets. In another example the quality determination module determines the second packet loss as a ratio between 1 the second difference e.g. representing the number of lost packets and 2 the access point s TX count e.g. representing the total number of packets sent from the access point to the controller between the previous marker ID and the current marker ID. The quality determination module determines a link quality between the controller and the access point based on the first packet loss and the second packet loss.

In some embodiments the quality determination module determines whether the link quality is below a threshold. For example the quality determination module determines whether the total packet loss exceeds a predetermined percentage e.g. 10 . If the total packet loss exceeds the predetermined percentage the link quality is determined to be below the threshold. The quality determination module generates an alert e.g. a red flag a warning message etc. indicating the link quality is below the threshold.

In some embodiments the quality determination module can determine whether the packet loss is sporadic or sustained. The quality determination module can determine whether the packet loss is higher when the network throughput is higher. In some embodiments the quality determination module determines one or more network factors that may affect the link quality during the time period between the previous marker ID and the current marker ID. Example network factors include but are not limited to network traffic and or network throughput etc. The quality determination module applies a weight to the packet loss in each direction based on the one or more network factors and determines the link quality based on the weighted packet loss in each direction. For example if the network traffic and or throughput is low during the time period between the previous marker ID and the current marker ID the quality determination module applies a lighter weight to the packet loss in each direction to reduce the influence of the packet loss on the link quality determination so that the link quality is not marked with a red flag if some packets are lost. However if the network traffic and or throughput is high during the time period between the previous marker ID and the current marker ID the quality determination module applies a heavier weight to the packet loss in each direction to increase the influence of the packet loss on the link quality determination so that the link quality is marked with a red flag if some packets are lost.

In some embodiments the quality determination module can determine a packet round trip time between the access point and the controller . For example the quality determination module records a first timestamp when the marker request module sends a marker request packet to the controller and records a second timestamp when a marker reply packet corresponding to the marker request packet is received at the access point . The quality determination module determines the packet round trip time as the time difference between the second timestamp and the first timestamp.

The report module can be software including routines for generating a report. In some embodiments the report describes the link quality between the access point and the controller . In some embodiments the report optionally includes an alert e.g. a red flag or a warning message etc. indicating the link quality is below a threshold. The report module sends the report to the controller via the first communication module causing the controller to present the report to an administrator of the controller . The report facilitates the administrator to monitor the link between the access point and the controller .

In some embodiments if the packet loss is sustained over a period of time indicating an under provisioned network the report module sends a report to the controller or a monitoring system. In some embodiments if there is a packet loss in short bursts indicating sporadic network outages and or network choke the report module sends a report to the controller or a monitoring system. The report facilitates an administrator to determine whether the packet loss is incurred by the wired network or the wireless network.

The first load adjustment module can be code and routines for adjusting a network workload based on a link quality on the access point side. In some embodiments the first load adjustment module receives data describing a link quality between the access point and the controller from the quality determination module and proactively adjusts a network workload based on the link quality. For example the first load adjustment module may reduce the network traffic between the access point and the controller if the link quality is low and may increase the network traffic if the link quality is good. In a further example assume the link quality indicates there is a sustained 20 packet loss in both communication directions between the access point and the controller . The first load adjustment module can reduce the number of packets sent from the access point to the controller to avoid congestion in the network. For example the first load adjustment module may reduce a small percentage of the TX packets e.g. 10 of the TX packets sent to the controller . If the link quality improves after the workload adjustment the first load adjustment module may slowly increase the number of TX packets transmitted to the controller .

It is beneficial to adjust the workload in the network based on the link quality. For example if all the access points connected to the controller perform the workload adjustment based on the link quality the access points can save network resources without sending packets that would have been dropped midway in the network due to poor link quality. This workload adjustment may or may not reduce packet loss at the access points but it can reduce overall packet loss in the network and conserve network resources.

In some embodiments the controller includes a network interface capable of communicating to a wired network a processor a memory and a storage device . The components of the controller are communicatively coupled to each other. The network interface the processor the memory and the storage device have similar structure and provide similar functionality as the network interface the processor the memory and the storage device respectively. The description will not be repeated herein.

In some embodiments the memory stores a controller monitoring application . The controller monitoring application can be code and routines for monitoring link quality on the controller side. In some embodiments the controller monitoring application can be implemented using hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some other embodiments the controller monitoring application can be implemented using a combination of hardware and software. In some embodiments the controller monitoring application may be stored in a combination of the network devices or in one of the network devices. The controller monitoring application is described below in more detail with reference to .

According to embodiments of the present disclosure the monitoring application stored on the access point and the controller monitoring application stored on the controller cooperate with each other to monitor a wired link quality between the access point and the controller . It should be understood that in other embodiments the monitoring application and the controller monitoring application can be stored on other network devices and cooperate to perform operations similar to those described herein to monitor a link quality between the other network devices.

The second communication module can be software including routines for handling communications between the controller monitoring application and other components in the digital computing environment . In some embodiments the second communication module sends and receives data to and from one or more of a client an access point and other network devices via the network interface . For example the second communication module receives packets from an access point via the network interface and forwards the received packets to the second packet module . In some embodiments the second communication module handles communications between components of the controller monitoring application .

In some embodiments the second communication module receives data from components of the controller monitoring application and stores the data in the storage device . For example the second communication module receives data describing a controller s TX count and RX count associated with an access point from the second packet module and stores the controller s TX count and RX count in the storage device . In some embodiments the second communication module retrieves data from the storage device and sends the data to components of the controller monitoring application . For example the second communication module retrieves data describing a controller s TX count and RX count from the storage device and sends the controller s TX count and RX count to the marker reply module .

The second packet module can be software including routines for managing packets exchanged between the controller and another network device such as an access point . In some embodiments for each access point connected to the controller the second packet module at the controller manages a TX counter storing a TX count and a RX counter storing a RX count. The second packet module manages a plurality of TX counters and RX counters for a plurality of access points .

For each access point the controller s TX count associated with a marker ID indicates the total number of packets that the controller has already sent to the access point at the time when a marker request packet identified by the marker ID is received at the controller from the access point . In some embodiments the packets counted by the controller s TX count also include marker reply packets sent from the controller to the access point . The controller s RX count associated with a marker ID indicates the total number of packets that the controller has already received from the access point at the time when a marker request packet identified by the marker ID is received at the controller from the access point . In some embodiments the packets counted by the controller s RX count also include marker request packets sent from the access point to the controller .

When the second packet module receives packets at the controller from an access point the second packet module updates the RX count in the RX counter corresponding to the access point . For example the second packet module increases the RX count by a number of the packets. When the second packet module sends packets from the controller to the access point the second packet module updates the TX count in the TX counter corresponding to the access point . For example the second packet module increases the TX count by a number of the packets. Before exchanging packets between the access point and the controller the second packet module at the controller may initialize the TX count and the RX count corresponding to the access point to be an initial value such as zero.

In some embodiments the second packet module stores the controller s TX count e.g. the number of TX packets sent to the access point and RX count e.g. the number of RX packets received from the access point since receiving the last marker request packet from the access point . For example assume the last marker request packet is a packet with marker ID 100. The second packet module uses the controller s TX count to record the number of TX packets sent to the access point since the controller receives the packet with marker ID 100 and uses the controller s RX count to record the number of RX packets received from the access point since the controller receives the packet with marker ID 100.

Next the controller may receive a marker request packet with marker ID 101. In this case the controller s TX count records the number of TX packets between the marker ID 100 and the marker ID 101 and the controller s RX count records the number of RX packets between the marker ID 100 and the marker ID 101.

However if the controller only receives the marker request packet with marker ID 106 without receiving the marker request packets with marker IDs from 101 to 105 then the controller s TX count records the number of TX packets between the marker ID 100 and the marker ID 106 and the controller s RX count records the number of RX packets between the marker ID 100 and the marker ID 106. Correspondingly the controller generates a marker reply packet responding to the marker request packet with marker ID 106 where the marker reply packet includes a previous marker ID 100 a current marker ID 106 the controller s TX count and RX count between marker ID 100 and marker ID 106.

The marker reply module can be software including routines for generating marker reply packets. In some embodiments the marker reply module receives a marker request packet from an access point via the second communication module . The marker reply module at the controller updates a current marker ID associated with the access point to be a marker ID included in the marker request packet and stores the updated current marker ID in the storage device . The marker reply module determines a previous marker ID associated with the access point . A previous marker ID is a last marker ID included in a last marker request packet received at the controller from the access point . The marker reply module retrieves data describing the controller s TX count and RX count associated with the previous marker ID from the storage .

The marker reply module determines the controller s TX count and RX count for the access point between the previous marker ID and the current marker ID. For example assume the previous marker ID is marker ID 1 and the current marker ID is marker ID 2. If the controller s TX count for the access point at marker ID 1 and marker ID 2 is 1234 and 1345 respectively the controller s TX count between marker ID 1 and marker ID 2 is 111 1345 1234 111 . If the controller s RX count for the access point at marker ID 1 and marker ID 2 is 1200 and 1300 respectively the controller s RX count for the access point between marker ID 1 and marker ID 2 is 100 1300 1200 100 .

The marker reply module generates a marker reply packet that responds to the marker request packet. The marker reply packet includes the previous marker ID the current marker ID the controller s TX count and RX count for the access point between the previous marker ID and the current marker ID. The marker reply module sends the marker reply packet to the access point via the second communication module . In some embodiments a periodic heartbeat packet sent from the controller to the access point can be reused as a marker reply packet.

In some embodiments the controller is connected to a plurality of access points . The marker reply module receives maker request packets from the plurality of access points generates marker reply packets responsive to the marker request packets and sends the marker reply packets to the plurality of access points respectively.

The user interface module can be software including routines for generating graphical data for providing a user interface. In some embodiments the user interface module receives data describing a report from an access point and generates graphical data for providing a user interface that depicts the report to an administrator of the controller . In some embodiments the user interface module aggregates reports received from a plurality of access points and presents the aggregated reports to the administrator using a user interface. In some examples the user interface depicts a trend chart of link quality for each access point . The user interface module may provide other user interfaces to the administrator facilitating the administrator to monitor the link quality.

The second load adjustment module can be code and routines for adjusting network workload on the controller side. For example the second load adjustment module may adjust the network traffic based on the link quality between the controller and one or more access points . The second load adjustment module provides similar functionality as the first load adjustment module and the description will not be repeated herein.

In some embodiments the second load adjustment module receives reports describing link quality from a plurality of access points connected to the controller . Based on the link quality described in the reports the second load adjustment module determines whether congestion in the network is caused by an under provisioned uplink at the controller . For example the second load adjustment module determines whether congestion in the network is caused by low bandwidth at the uplink of the controller . The second load adjustment module may inform an administrator if the congestion is caused by an under provisioned uplink of the controller .

The quality determination module receives a marker reply packet from the controller via the first communication module and the network interface operation . The marker reply packet includes a previous marker ID a current marker ID the controller s TX count and RX count for the access point between the previous marker ID and current marker ID. The quality determination module determines a link quality between the previous marker ID and the current marker ID for the wired link between the access point and the controller operation . The report module generates a report describing the link quality operation . The report module may send the report to the controller . The monitoring application determines whether to continue monitoring the link quality operation . If the monitoring application determines to continue monitoring the link quality the process moves to operation . Otherwise the monitoring application stops monitoring the link quality operation .

Referring to the quality determination module receives a marker reply packet from the controller via the first communication module and the network interface operation . The marker reply packet includes the current marker ID a previous marker ID the controller s TX count and RX count between the previous marker ID and the current marker ID. The quality determination module determines the access point s RX count between the previous marker ID and the current marker ID operation . The quality determination module determines a first difference between the controller s TX count and the access point s RX count operation . The quality determination module determines a packet loss from the controller to the access point based on the first difference operation . The quality determination module determines the access point s TX count between the previous marker ID and the current marker ID operation . The quality determination module determines a second difference between the controller s RX count and the access point s TX count operation .

Referring to the quality determination module determines a packet loss from the access point to the controller based on the second difference operation . Optionally the quality determination module applies a weight to the packet loss in each direction based on one or more network factors such as network traffic and or throughput operation . The quality determination module determines a link quality between the access point and the controller based on the packet loss in each direction operation . Optionally if the link quality is below a threshold the quality determination module generates a red flag for the link quality operation . The report module generates a report describing the link quality operation . The report module sends the report to the controller via the first communication module and the network interface operation causing the controller to present the report to an administrator using a user interface. The monitoring application determines whether to continue monitoring the link quality operation . If the monitoring application determines to continue monitoring the link quality the process moves to operation . Otherwise the monitoring application stops monitoring the link quality operation .

The marker reply module receives a marker request packet from the access point operation . The marker reply module updates a current marker ID to be a marker ID included in the marker request packet operation . The marker reply module generates and sends a marker reply packet to the access point responsive to the marker request packet operation . The marker reply packet includes a previous marker ID the current marker ID the controller s TX count and RX count between the previous marker ID and the current marker ID. The user interface module receives a report from the access point via the second communication module and the network interface operation . The user interface module presents the report to an administrator of the controller using a user interface operation .

Referring to before exchanging packets with the controller the first packet module initializes the access point s TX count in a first TX counter the access point s RX count in a first RX counter and a marker ID e.g. marker ID 0 operation . The first TX counter and the first RX counter are stored on the access point . The second packet module initializes the controller s TX count in a second TX counter the controller s RX count in a second RX counter and a marker ID e.g. marker ID 0 operation . The second TX counter and the second RX counter are associated with the access point and stored on the controller . The first packet module sends packets to the second packet module operation . The first packet module updates the access point s TX count in the first TX counter operation . The second packet module updates the controller s RX count in the second RX counter after receiving packets from the access point operation . In some examples some of the packets sent from the access point to the controller are lost on the way.

The second packet module may also send packets to the access point operation and updates the controller s TX count for the access point in the second TX counter operation . The first packet module updates the access point s RX count in the first RX counter after receiving packets from the controller operation . In some examples some of the packets sent from the controller to the access point are lost on the way. The marker request module updates the marker ID to be 1 operation and sends a marker request packet including the marker ID 1 to the controller operation . The marker reply module receives the marker request packet from the access point and updates current marker ID to be 1 according to the marker request packet operation . The marker reply module generates and sends a marker reply packet to the access point operation where the marker reply packet includes a previous marker ID 0 a current marker ID 1 the controller s TX count and RX count between marker ID 0 and marker ID 1. The quality determination module determines a link quality between the marker ID 0 and the marker ID 1 for the link between the access point and the controller operation .

Referring to the report module generates a report describing the link quality operation and sends the report to the user interface module operation . The user interface module may present the report to an administrator via a user interface. Next the first packet module continues to send packets to the controller operation . The first packet module updates the access point s TX count in the first TX counter operation . The second packet module updates the controller s RX count in the second RX counter after receiving packets from the access point operation . The second packet module may also send packets to the access point operation and updates the controller s TX count for the access point in the second TX counter operation . The first packet module updates the access point s RX count in the first RX counter after receiving packets from the controller operation . The marker request module updates the marker ID to be 2 operation and sends a marker request packet including the marker ID 2 to the controller operation . However the marker request packet is lost on the way. The marker reply module at the controller does not receive the marker request packet and does not respond with a marker reply packet.

Next the first packet module continues to send packets to the controller operation . The first packet module updates the access point s TX count in the first TX counter operation . The second packet module updates the controller s RX count in the second RX counter after receiving packets from the access point operation . The second packet module may also send packets to the access point operation and updates the controller s TX count for the access point in the second TX counter operation . The first packet module updates the access point s RX count in the first RX counter after receiving packets from the controller operation . The marker request module updates the marker ID to be 3 operation and sends a marker request packet including the marker ID 3 to the controller operation .

Referring to the marker reply module receives the marker request packet from the access point and updates the current marker ID to be 3 according to the marker request packet operation . The marker reply module generates and sends a marker reply packet to the access point operation where the marker reply packet includes a previous marker ID 1 a current marker ID 3 the controller s TX count and RX count between marker ID 1 and marker ID 3. Because the marker request packet with marker ID 2 is lost on the way and does not arrive at the controller the previous marker ID stored on the controller is marker ID 1 rather than marker ID 2. The quality determination module determines a link quality between the marker ID 1 and the marker ID 3 for the link between the access point and the controller operation . The monitoring of the link quality is not interrupted by the loss of the marker request packet identified by the marker ID 2.

Next the first packet module continues to send packets to the controller operation . The first packet module updates the access point s TX count in the first TX counter operation . The second packet module updates the controller s RX count in the second RX counter after receiving packets from the access point operation . The second packet module may also send packets to the access point operation and updates the controller s TX count for the access point in the second TX counter operation . The first packet module updates the access point s RX count in the first RX counter after receiving packets from the controller operation . The marker request module updates the current marker ID to be 4 operation and sends a marker request packet including the marker ID 4 to the controller operation .

The marker reply module receives the marker request packet from the access point and updates the current marker ID to be 4 according to the marker request packet operation . The marker reply module generates and sends a marker reply packet to the access point operation where the marker reply packet includes a previous marker ID 3 a current marker ID 4 the controller s TX count and RX count between marker ID 3 and marker ID 4. However the marker reply packet is lost on the way and does not arrive at the access point . Because the marker reply packet including the previous marker ID 3 and the current marker ID 4 is lost on the way the quality determination module does not determine the link quality between marker ID 3 and marker ID 4.

Referring to the first packet module continues to send packets to the controller operation . The first packet module updates the access point s TX count in the first TX counter operation . The second packet module updates the controller s RX count in the second RX counter after receiving packets from the access point operation . The second packet module may also send packets to the access point operation and updates the controller s TX count for the access point in the second TX counter operation . The first packet module updates the access point s RX count in the first RX counter after receiving packets from the controller operation . The marker request module updates the current marker ID to be 5 operation and sends a marker request packet including the marker ID 5 to the controller operation .

The marker reply module receives the marker request packet from the access point and updates the current marker ID to be 5 according to the marker request packet operation . The marker reply module generates and sends a marker reply packet to the access point operation where the marker reply packet includes a previous marker ID 4 a current marker ID 5 the controller s TX count and RX count between marker ID 4 and marker ID 5. The quality determination module determines a link quality between the previous marker ID 4 and the current marker ID 5 for the link between the access point and the controller operation . The monitoring of the link quality is not interrupted by the loss of the marker reply packet at operation .

The present disclosure may be realized in hardware software or a combination of hardware and software. The present disclosure may be realized in a centralized fashion in one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems coupled to a network. A typical combination of hardware and software may be an access point with a computer program that when being loaded and executed controls the device such that it carries out the methods described herein.

The present disclosure also may be embedded in non transitory fashion in a computer readable storage medium e.g. a programmable circuit a semiconductor memory such as a volatile memory such as random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

As used herein digital device generally includes a device that is adapted to transmit and or receive signaling and to process information within such signaling such as a station e.g. any data processing equipment such as a computer cellular phone personal digital assistant tablet devices etc. an access point data transfer devices such as network switches routers controllers etc. or the like.

As used herein access point AP generally refers to receiving points for any known or convenient wireless access technology which may later become known. Specifically the term AP is not intended to be limited to IEEE 802.11 based APs. APs generally function as an electronic device that is adapted to allow wireless devices to connect to a wired network via various communications standards.

As used herein the term interconnect or used descriptively as interconnected is generally defined as a communication pathway established over an information carrying medium. The interconnect may be a wired interconnect wherein the medium is a physical medium e.g. electrical wire optical fiber cable bus traces etc. a wireless interconnect e.g. air in combination with wireless signaling technology or a combination of these technologies.

As used herein information is generally defined as data address control management e.g. statistics or any combination thereof. For transmission information may be transmitted as a message namely a collection of bits in a predetermined format. One type of message namely a wireless message includes a header and payload data having a predetermined number of bits of information. The wireless message may be placed in a format as one or more packets frames or cells.

As used herein wireless local area network WLAN generally refers to a communications network links two or more devices using some wireless distribution method for example spread spectrum or orthogonal frequency division multiplexing radio and usually providing a connection through an access point to the Internet and thus providing users with the mobility to move around within a local coverage area and still stay connected to the network.

As used herein the term mechanism generally refers to a component of a system or device to serve one or more functions including but not limited to software components electronic components electrical components mechanical components electro mechanical components etc.

As used herein the term embodiment generally refers an embodiment that serves to illustrate by way of example but not limitation.

Some portions of the detailed descriptions are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the foregoing discussion it is appreciated that throughout the description discussions utilizing terms including processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

The particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the specification or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the disclosure can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the specification is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming.

It will be appreciated to those skilled in the art that the preceding examples and embodiments are exemplary and not limiting to the scope of the present disclosure. It is intended that all permutations enhancements equivalents and improvements thereto that are apparent to those skilled in the art upon a reading of the specification and a study of the drawings are included within the true spirit and scope of the present disclosure. It is therefore intended that the following appended claims include all such modifications permutations and equivalents as fall within the true spirit and scope of the present disclosure.

While the present disclosure has been described in terms of various embodiments the present disclosure should not be limited to only those embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Likewise where a reference to a standard is made in the present disclosure the reference is generally made to the current version of the standard as applicable to the disclosed technology area. However the described embodiments may be practiced under subsequent development of the standard within the spirit and scope of the description and appended claims. The description is thus to be regarded as illustrative rather than limiting.

