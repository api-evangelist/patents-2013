---

title: Search capability enhancement in service oriented architecture (SOA) service registry system
abstract: A method for searching a web service registry system by use of a search controller. A first search of a service registry program product is performed with a service name received by the search controller from a user. It is determined that the received service name does not have a service description associated with the received service name in the service registry program product. A second search of the service registry program product is coordinated with a candidate service name by use of the search module, wherein the candidate service name is semantically and syntactically interchangeable with the received service name such that the candidate service name identifies the service description associated with the received service name within the service registry program product. The service description is discovered to be associated with the candidate service name within the service registry program product and is subsequently returned to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08676836&OS=08676836&RS=08676836
owner: International Business Machines Corporation
number: 08676836
owner_city: Armonk
owner_country: US
publication_date: 20130822
---
This application is a continuation application claiming priority to Ser. No. 12 945 151 filed Nov. 12 2010.

This invention is related to U.S. patent application Ser. No. 12 174 944 entitled SYSTEM AND METHOD FOR PERFORMING ADVANCED SEARCH IN SERVICE REGISTRY SYSTEM filed on Jul. 17 2008 and U.S. patent application Ser. No. 12 175 552 entitled SYSTEM AND METHOD FOR IMPROVING NON EXACT MATCHING SEARCH IN SERVICE REGISTRY SYSTEM WITH CUSTOM DICTIONARY filed on Jul. 18 2008.

Aspects of present invention disclose a system and associated method for automatically performing advanced searches for a service description by use of a search controller in a service oriented architecture SOA service registry system. Conventional SOA service registry systems require users to provide an exact service name to search for a specific service description published in a registry of the SOA registry system. Also because conventional SOA service registry systems have tightly coupled processing components it is difficult to improve functionality and or performance of conventional SOA service registry systems in a scalable fashion.

According to one embodiment of the present invention a method for searching a web service registry system by use of a search controller the method comprises the search controller receiving a service name from a user of the web service registry system wherein the web service registry system comprises the search controller a service registry a name parser a dictionary and a name composer and wherein the service registry comprises at least one service description searchable by a respectively associated service name performing a first search of the service registry with the received service name and subsequently determining that the received service name does not have a service description associated with the received service name in the service registry coordinating a second search of the service registry with a candidate service name by use of the name parser the dictionary and the name composer wherein the candidate service name is semantically and syntactically interchangeable with the received service name such that the candidate service name identifies the service description associated with the received service name within the service registry and discovering the service description is associated with the candidate service name within the service registry and subsequently returning the discovered service description to the user of the web service registry system.

According to one embodiment of the present invention a computer program product comprises a computer readable memory unit that embodies a computer readable program code. The computer readable program code contains instructions that when run by a processor of a computer system implement a method for searching a web service registry system by use of a search controller.

According to one embodiment of the present invention a computer system comprises a processor and a computer readable memory unit coupled to the processor wherein the computer readable memory unit containing instructions that when run by the processor implement a method for searching a web service registry system by use of a search controller.

According to one embodiment of the present invention a process for supporting computer infrastructure said process comprising providing at least one support service for at least one of creating integrating hosting maintaining and deploying computer readable code in a computing system wherein the code in combination with the computing system is capable of performing a method for searching a web service registry system by use of a search controller.

The system comprises a user and the IDE in which the user is developing a service oriented architecture SOA business application and or a software project comprising the SOA business application . In this specification terms SOA service web service and service are used interchangeably.

The SOA business application utilizes at least one SOA service registry entry service name service description in which each service name uniquely identifies a respective service description. Each service description comprises information necessary to provide a SOA service identified by a respective service name within each SOA service registry entry.

The IDE comprises an IDE user interface and a service oriented architecture SOA service registry system . Examples of the IDE user interface may be inter alia application programming interface API a user interface to receive a web service name to search an associated web service description and combinations thereof. The SOA service registry system comprises said at least one SOA service registry entry service name service description and components facilitating a search of a service description by user of a service name that is associated with the service description in a particular service registry entry. The SOA service registry system is configured to look up the service description with a service name provided by the user . See B and C infra for embodiments of the SOA service registry system .

The user provides the service name as an input to the SOA service registry system through the IDE user interface to search the service description corresponding to the service name . The user receives the service description comprising a service name value that matches the service name if the service description is found in the SOA service registry system . The user receives a null wherein no service description comprising a service name value that matches the service name is found in the web service registry system . See descriptions of infra for detailed search operations.

The service description comprises development time information a communication protocol and a message format. An example of the development time information may be inter alia operations exposed by a given service etc. Examples of the communication protocol may be inter alia the Hypertext Transfer Protocol HTTP Internet Inter Orb Protocol HOP Java Remote Method Protocol JRMP Java Message Service JMS protocol etc. An example of the message format may be inter alia the Simple Object Access Protocol SOAP etc. The service description further comprises runtime information such as the IP address and port number for a given service implementation. Web Service Description Language WSDL is usually employed to describe a SOA service. See infra for an example of the service description for a SOA service registry entry written in Web Services Description Language WSDL format.

The SOA service registry system comprises a service registry a name parser a dictionary a name composer a search controller and a SOA service registry user interface. The service registry is used to publish service descriptions and to search published service descriptions with a respective service name. See descriptions of B and C infra for each component and interactions among the components in various configuration of the SOA service registry system .

The first SOA service registry system A comprises a service registry a name parser a dictionary a name composer a search controller and a SOA service registry system interface . The first SOA service registry system A embodies the most generic configuration of a SOA registry system that provides advanced search capability wherein a service name can be matched to identical and or similar service name that had been provided by a user. In conventional SOA registry systems search capability is limited and a service name identifying a service description needs to be identical to a service name given by a user to find a match.

The service registry receives the service name from the search controller and returns the service description to the search controller if the service description matching the service name exists in the service registry . The service registry also receives candidate service names generated by the name composer from the search controller and returns service descriptions found as matching the candidate service names existing in the service registry . The service registry stores said at least one service description utilized in the SOA business application of supra which is searchable by a respective service name. The service registry utilizes the service name as a key to search the service registry entries for the service description associated with the service name . The service registry may be implemented by used of a conventional SOA service registry system enabling the advanced search functionality described in this specification for such conventional SOA service registry system.

The name parser receives the service name from the search controller . The name parser generates a component word list from the service name which comprises at least one word constitutes the service name . Each word is distinguished according to a shortest meaningful word listed in conventional dictionaries. For example when the service name is globalWeatherService the name parser generates the component word list global weather service as shown in infra. The name parser returns the component word list to the search controller .

The dictionary receives the component word list from the search controller . The dictionary generates a respective synonym list for each word in the component word list generated by the name parser . The dictionary returns the synonym list for each component word to the search controller .

The name composer receives all synonym lists from the search controller . The name composer generates a candidate service name list from the received synonym lists generated by the dictionary such that the candidate service name list comprises at least one candidate service name that is not identical to the service name but has a meaning similar to the service name .

The search controller coordinates interactions among the service registry the name parser the dictionary and the name composer in performing advanced search with the service name in the first SOA service registry system A. The search controller provides a respective internal interface for the service registry the name parser the dictionary and the name composer in employing each component of the first SOA service registry system A. Since components of the first SOA service registry system A are loosely coupled by use of the search controller the first SOA service registry system A may employ any implementation of the components if such implementation has application programming interface API specified. Consequently the search controller modularizes components of the first SOA service registry system A. Each component may be independently modified wherein the search controller provides proper interface and coordination according to the modified component. See descriptions of infra for detailed operations of the search controller .

The SOA service registry system interface is an external communication channel for the first SOA service registry system A through which the first SOA service registry system A communicates with the user of the IDE in supra or other program components utilized in the SOA business application in supra. Examples of the SOA service registry system interface may be inter alia a combination of an input prompt for the service name and an output display of the service description an application programming interfaces APIs for other program components etc.

The second SOA service registry system B comprises a search module A a conventional service registry program product and a SOA service registry system interface . The second SOA service registry system B embodies a configuration improving search capability of the conventional service registry program product wherein the service name can be matched to service names with similar meanings even if there is no exact match for the service name within the conventional service registry program product .

The search module A comprises a name parser a dictionary a name composer and a search controller . See descriptions of supra for details of the name parser the dictionary and the name composer .

The search controller coordinates internal and external interactions among the conventional service registry program product and components of the search module A in performing advanced search with the service name in the second SOA service registry system B. The search controller provides a respective internal interface for the name parser the dictionary and the name composer in employing each component of the second SOA service registry system B. The search controller also provides a seamless interface with the conventional service registry program product for all components of the search module A. See descriptions of infra for detailed operations of the search controller .

The conventional service registry program product receives the service name and or the candidate service names from the search controller and returns the service description that found to be matching to the received service name s to the search controller if the service description exists among entries of the conventional service registry program product .

The third SOA service registry system C comprises a search module B a SOA service registry system interface a conventional service registry program product and a conventional dictionary program product . The third SOA service registry system C embodies a configuration improving search capability of the conventional service registry program product wherein the service name can be matched to candidate service names with similar meanings even if there is no exact match for the service name within the conventional service registry program product by use of the conventional dictionary program product in generating the candidate service names.

The search module B comprises a name parser a name composer and a search controller . See descriptions of supra for details of the name parser and the name composer .

The search controller coordinates internal and external interactions among the search module B the conventional service registry program product and the conventional dictionary program product in performing advanced search with the service name in the third SOA service registry system C. The search controller provides a respective internal interface for the name parser and the name composer within the search module B. The search controller provides a respective external interface between the conventional service registry program product and the search module B as well as between the conventional dictionary program product and the search module B. See descriptions of infra for detailed operations of the search controller .

The conventional dictionary program product is particularly useful when generic terms are employed in the service name and the third SOA service registry system C is used to generate extensive candidate service names for advanced search functionality. See descriptions of supra for details of the conventional service registry program product .

In step the search controller receives a service name from a user through the user interface. In the following steps to the search controller looks for a service description comprising a service name value that matches the received service name. In this specification the service description stored in the registry has zero or more data field other than a service name field. Also in this specification wherein a value of a service name field within a service description is identical to a first service name the service description is referred to as being matched to the first service name. Then the search controller proceeds with step .

In step the search controller searches the registry for the received service name and determines whether the service description that is matched to the received service name has been found in the registry. If the search controller determines that a matching service description of the received service name has been found in the registry then the search controller proceeds with step . If the search controller determines that the matching service description of the received service name has not been found in the registry then the search controller proceeds with step to perform a series of searches based on the received service name.

In step the search controller sends the service name received in step to the name parser and receives a constituent word list comprising at least one constituent word of the received service name as parsed by the name parser as a result. See U.S. Patent applications listed in the CROSS REFERENCE TO RELATED APPLICATIONS section supra for detailed operations of the name parser. Then the search controller proceeds with step .

In step the search controller sends the constituent word list received in step to the dictionary and receives at least one synonym list for each constituent word in the constituent word list as generated by the dictionary as a result. See U.S. Patent applications listed in the CROSS REFERENCE TO RELATED APPLICATIONS section supra for detailed operations of the dictionary. Then the search controller proceeds with step .

In step the search controller sends said at least one synonym list received in step to the name composer and receives an alternative service name list comprising at least one alternative service name as a result. See U.S. Patent applications listed in the CROSS REFERENCE TO RELATED APPLICATIONS section supra for detailed operations of the name composer.

For each alternative service name in the alternative service name list received in step supra the search controller performs steps and . Said each alternative service name is semantically similar to the received service name. The search controller selects a first alternative service name as a current alternative service name and proceeds with step .

In step the search controller searches the registry for the current alternative service name and determines whether a service description matching the current alternative service name has been found in the registry. If the search controller determines that the service description matching the current alternative service name has been found in the registry the search controller proceeds with step . If the search controller determines that the service description matching the current alternative service name has not been found in the registry the search controller repeats step with a next alternative service name from the alternative service name list. If no service description matching any alternative service name has been found upon performing step for all alternative service names in the alternative service name list the search controller proceeds with step .

In step because the service description matching the current alternative service name has been found in the registry the search controller returns the found service description to user. The search controller subsequently terminates processing the search request for the service name received in step .

In step because the service description matching the service name received in step has been found in the registry without the advanced search the search controller returns the service description matching the received service name to user. Then the search controller terminates processing the search request for the service name received in step .

In step because there is no service description in the registry that matches any alternative service name in the alternative service name list generated by the name composer the search controller returns null to user. Then the search controller terminates processing the search request for the service name received in step .

In lines L through L various namespaces are declared. In lines L through L various data types are declared. In lines L through L message types are declared which consist of an input message type and an output message type. In lines through L various operations included in the web service are declared.

The computer system comprises a processor an input device coupled to the processor an output device coupled to the processor and memory devices and each coupled to the processor . In this specification the computer system represents any type of programmable data processing apparatus.

The input device is utilized to receive input data into the computer system . The input device may be inter alia a keyboard a mouse a keypad a touch screen a scanner a voice recognition device a sensor a network interface card NIC a Voice video over Internet Protocol VoIP adapter a wireless adapter a telephone adapter a dedicated circuit adapter etc. The output device is utilized to communicate results generated by the computer program code to a user of the computer system . The output device may be inter alia a printer a plotter a computer screen a magnetic tape a removable hard disk a floppy disk a NIC a VoIP adapter a wireless adapter a telephone adapter a dedicated circuit adapter an audio and or visual signal generator a light emitting diode LED etc.

Any of the components of the present invention can be deployed managed serviced etc. by a service provider that offers to deploy or integrate computing infrastructure with respect to a process for performing a series of searches of the web service registry system of the present invention. Thus the present invention discloses a process for supporting computer infrastructure comprising integrating hosting maintaining and deploying computer readable code into a computing system e.g. computing system wherein the code in combination with the computing system is capable of performing a method for searching the web service registry system.

In another embodiment the invention provides a business method that performs the process steps of the invention on a subscription advertising and or fee basis. That is a service provider such as a Solution Integrator can offer to create maintain support etc. a process for searching the web service registry system of the present invention. In this case the service provider can create maintain support etc. a computer infrastructure that performs the process steps of the invention for one or more customers. In return the service provider can receive payment from the customer s under a subscription and or fee agreement and or the service provider can receive payment from the sale of advertising content to one or more third parties.

While shows the computer system as a particular configuration of hardware and software any configuration of hardware and software as would be known to a person of ordinary skill in the art may be utilized for the purposes stated supra in conjunction with the particular computer system of . For example the memory devices and may be portions of a single memory device rather than separate memory devices.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. In this specification the term memory device represent a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. The term computer program instructions is interchangeable with the term computer program code in this specification. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable storage medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable storage medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

