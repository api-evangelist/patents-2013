---

title: Bandwidth management and codec negotiation based on WAN topology
abstract: A system for bandwidth management and codec negotiation, according to one embodiment of the present invention comprises: a configuration storage module having supported codecs storage, codec lists and preferred site settings storage, and a call manager having an extension module, a trunk module, a location service engine, a codec manager, a bandwidth manager, and a media manager. The codec manager and the bandwidth manager used for negotiating a codec for a call between two endpoints. The present invention also includes a number of methods including a method for negotiating a codec for a call, a method for managing bandwidth for a call, a method for adding a description of a new codec supported by an endpoint, a method for adding an identifier of a supported codec to a codec list and a method for editing code site codec settings.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09444852&OS=09444852&RS=09444852
owner: Shoretel, Inc.
number: 09444852
owner_city: Sunnyvale
owner_country: US
publication_date: 20131029
---
This application is a Divisional of and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 12 145 841 titled Bandwidth Management and Codec Negotiation Based on Wan Topology filed Jun. 25 2008 which claims the benefit under 35 U.S.C. 119 e of U.S. Provisional Application No. 61 034 309 filed Mar. 6 2008 titled Bandwidth Management and Codec Negotiation Based on WAN Topology the contents of which are all incorporated herein by reference.

The present invention relates telephony systems such as that using Voice over Internet Protocol VoIP . In particular the present invention relates to users with administrative rights defining new codecs to be supported by a telephony system and to negotiating a codec to place a call in the telephony system.

The prior art includes a variety of distributed telephony systems. Traditional switched network systems have given way to new telephony systems that use VoIP. These VoIP systems offer the same functionality as more traditional switched system such as the ability to transfer calls put calls on hold automated attendant functions hunt groups etc. VoIP systems use a codec during a call to convert analog signals to a compressed digital bit stream. The codecs allow VoIP systems to transmit encoded audio video or data across Internet Protocol networks. Each codec has an associated bandwidth which is a factor in determining the bandwidth allocated for a call along with other factors such as the bandwidth required for the network protocol headers and the packetization rate. For example if at the initiation of a call it is determined that codec PCMU 8000 with an associated bandwidth of 64 kbps will be used for the call then accordingly sufficient bandwidth is allocated.

Existing VoIP systems work one of two ways either they are programmed to support specific codecs and only allow endpoints e.g. IP phones software phones to use those codecs or they blindly pass through the codecs offered by the endpoints but do not attempt to account for bandwidth or do not provide administrative control over the priority of the various codecs.

The present invention overcomes the deficiencies and shortcomings of the prior art by providing a system and method for bandwidth management and codec negotiation. The system of the present invention is particularly advantageous because it allows end users to instruct a telephony system on how to correctly account for new codecs thus enabling the telephony system to allow endpoints to negotiate the usage of any codecs that they support. The system is also advantageous because it provides a structure for managing use of codecs in an IP telephony system. In one embodiment the system of the present invention comprises a configuration storage module having supported codecs storage codec lists and preferred site settings storage and a call manager having an extension module a trunk module a location service engine a codec manager a bandwidth manager and a media manager. The codec manager and the bandwidth manager are used for negotiating a codec for a call between two endpoints. The present invention also includes a number of methods including a method for negotiating a codec for a call a method for managing bandwidth for a call a method for adding a description of a new codec supported by an endpoint a method for adding an identifier of a supported codec to a codec list and a method for editing site codec settings.

A system and method for managing codecs supported by a telephony system is described. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the invention. For example the present invention is described in one embodiment below with reference to system operation and particular hardware. However the present invention applies to any type of computing device that can receive a data and commands and any peripheral devices providing services.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

Enterprises often have several offices or call centers that are located in a plurality of disparate locations. To interconnect all of these sites enterprise telephony systems have been developed. Enterprise telephony systems which comprise a distributed set of voice switches and servers offer enterprise applications enabled by the integration of computer systems with telephony services. The software that supports the computer integrated functionality is generally implemented as a client server environment in which the participants or clients distributed telephony users communicate with a server. Computer integrated features rely not only on a server s application platform but also on the availability of the network that connects the switches servers and application services.

The first site A includes a server a switch A three endpoints analog phone IP phone A and software phone and a storage device . The switch A represents a Voice over Internet Protocol VoIP device to which a number of endpoints can be coupled such as analog phones IP phones A and software phones softphones . In the illustrated embodiment the switch A is coupled to the network . The switch A is also coupled to the public switched telephone network PSTN trunk via an analog or digital trunk line e.g. a T1 or E1 interface or a SIP trunk service provider. In the illustrated configuration the switch A provides an interface for calls originating from or terminating on the PSTN or SIP trunk . Although only a single switch A is shown in those skilled in the art will recognize that a particular site such as the first site A may include a plurality of switches. The switch will be described in more detail below with reference to .

An endpoint enables a user to carry on a phone call. Although in the illustrated embodiment the first site A has three endpoints one analog phone one IP phone A and one softphone in other embodiments the first site A has different numbers and types of endpoints. Examples of endpoints include a video conferencing device a multipoint control unit MCU a conference bridge an analog terminal adapter ATA and any other device that originates and or terminates a media stream. An endpoint is coupled to the switch the server or both. Each of the endpoints can also include a display device not shown that is used in conjunction with the phone of the endpoint.

In one embodiment an endpoint has a user interface to send data to and receive data from a user. The analog phone has for example a Telephone User Interface TUI that sends data through a speaker and receives data through a microphone and a keypad. The IP phone A has for example both a TUI and a graphical user interface GUI that sends data through a display device associated with the IP phone A. In one embodiment the IP phone s graphical user interface also receives data from a touch screen display device associated with the IP phone A. The softphone has for example a software application that runs on a computer and sends data through a display device and a speaker and receives data through a microphone a keyboard and a pointing device.

The server is configured to implement features or functions of the telephony system in accordance with the present invention. The server is coupled to the network and although not shown can also be coupled to one or more endpoints such as IP phone A and softphone . The server implements a server architecture according to one embodiment of the present invention. Server includes a processor. The processor can be a conventional processing device such as a general purpose microprocessor. Server also includes a memory. The memory includes program instructions or functional units that in one embodiment implement features of the present invention. Specifically the memory includes a telephony management software TMS unit a telephony application programming interface TAPI unit and a directory unit. In one embodiment the memory also includes one or more application units that interact with the TMS unit and the TAPI unit to enable a specific computer integrated function. An application unit uses the TAPI unit to exchange data with the TMS unit. The TMS unit is able to communicate with and manage one or more switches . For example with reference to the TMS unit included in the server can manage the switches A B. Through the TAPI unit the TMS unit presents an application with computer telephony integration CTI view of these switches A B. This allows the application to manage the switches A B. Such switches A B operate without an associated TMS unit if CTI features are not being used. The server has a user interface to send data to and receive data from a user. The user interface interacts with TMS in order to allow a user with administrative rights to manage the switches and change the configuration settings of the switches. The user can access the user interface at the server or at an endpoint e.g. soft phone .

The server includes one application unit directory unit. In general the directory unit enables a phone to access a directory and use the directory in conjunction with other phone functions. In one embodiment directory unit is implemented as a service that interacts with TMS unit. Communication or data exchange is between TMS unit and directory unit. The directory unit can be distributed among computing devices as is known to one of skill in the art. For example the functionality enabled by directory unit can be implemented in a client server fashion by having the client user s local system such as a general purpose computer or endpoint perform some functions and having the server directory unit perform others. As another example some or all of the functionality enabled by directory unit can be implemented by having a switch perform some or all functions.

The storage device contains directory information including directory entries and associations between directories and phones. In one embodiment the storage device also includes information regarding which users have administrative rights to access the server s user interface and make changes to the configuration settings of the switches. For example the storage device will include the user name and password of users with administrative rights. In one embodiment the storage includes data that is accessed by the switches in order to operate. In the illustrated embodiment the storage device is directly coupled to the server . In an alternate embodiment the storage device is coupled to the server via the network .

One skilled in the art will appreciate that additional networking devices not shown can be added to the first site A for example if needed to support additional endpoints servers switches or other systems. For example the first site A can include a second switch B and an edge router to couple the first site A to the network and to provide local area connectivity for the first and second switches A B. One skilled in the art will also recognize that numerous configurations of switches and communications links are contemplated. For example PSTN links can be coupled to multiple switches at several points within the topology and soft switches can also be used.

The second site B similarly includes an endpoint IP phone B and a switch B. The configuration of the second site B demonstrates that a server is not required for each site. Switch B of the second site B can be managed by server that is illustrated in the first site A. A call can involve more than one switch. For example a call that originates from the PSTN or SIP trunk and terminates on an endpoint that is communicatively coupled to switch B of the second site B involves two switches switch A of the first site A and switch B of the second site B. In addition each switch A B can be managed by a different server .

In one embodiment of the present invention the network is a partially public or a wholly public network such as the Internet. The network can also be a private network or include one or more distinct or logical private networks e.g. virtual private networks or wide area networks . Additionally the communication links to and from the network can be wire line or wireless i.e. terrestrial or satellite based transceivers . In one embodiment of the present invention the network is an IP based wide or metropolitan area network.

Referring now to an embodiment of the switch according to one embodiment of the present invention is shown. In this embodiment switch is configured to implement features or functions of the present invention. Switch includes a processor. The processor can be a conventional processing device such as a general purpose microprocessor. Switch also includes a memory. The memory also includes software and routines not shown conventionally used to operate a switch in a VoIP telephony system. For example the switch includes software routines for performing call monitoring transferring calls placing calls on hold establishing hunt groups automated attendant functions etc. The memory also includes program instructions or functional units that implement the features of the present invention. The switch also includes a configuration storage module and a call manager .

The configuration storage module is for storing preferences settings and other information utilized by the call manager to perform its functions. In one embodiment the configuration storage module is a portion of the memory of the switch . To enable the feature of adding a description of a new codec and using a codec to place a call in the telephony system the configuration storage module includes a supported codecs storage codec lists and a preferred site settings storage . In one embodiment the supported codecs storage is a storage that includes a description of the properties of each codec supported by switch . In another embodiment the supported codecs storage is a storage that includes a description of the properties of each codec supported by the telephony system . In one embodiment the description included in the supported codecs storage for each supported codec includes an identification string and the codec s bandwidth. In one embodiment the identification string is comprised of the name and the sampling rate of the codec. A codec s bandwidth is used by call manager to allocate bandwidth as calls are initiated using the codec.

In one embodiment telephony system is initially installed with descriptions of specific codecs stored in the supported codecs storage of the configuration storage module . Codecs for which a description is initially stored in the supported codecs storage are referred to as default codecs. The descriptions of codecs stored in the supported codecs storage can be modified or deleted by a user with administrative rights using the server s user interface at the server or at an endpoint e.g. softphone . In one embodiment descriptions of default codecs initially stored in the supported codecs storage cannot be modified or deleted. Additionally a user using the server s user interface can store a description of a new codec in the supported codecs storage .

The codec lists include an identification of one or more codecs supported by the switch . In one embodiment an identification of a codec is the name of the codec or the identification string of the codec. The codecs that are part of each codec list are ranked in a priority order. A codec list is referenced by switch to negotiate a codec to use for a call. The specific codec list used for negotiating a codec for a call depends on stored settings and the type of call.

A codec list can be modified or deleted by a user via an endpoint or server . Modifying a codec list could include adding or removing an identification of one or more codecs and changing the ranking of codecs in the codec list . In addition new codec lists can be created by a user with administrative rights at an endpoint or server . In one embodiment telephony system is initially installed with specific codec lists . In one embodiment codec lists initially installed with the telephony system cannot be deleted or modified.

The site settings storage includes general settings information for site . Specifically the site settings storage includes bandwidth settings for site . The bandwidth settings indicate which codec list should be used for each type of call. In one embodiment there are three different types of calls intra site calls inter site calls and fax and modem calls. Intra site calls are calls within site inter site calls are calls between two different sites and fax and modem calls are calls that involve data transfer. Additionally bandwidth settings include the amount of bandwidth allocated for site . If a site is coupled to more than one wide area network WAN the site settings storage includes information as to which WANs the site is connected to and bandwidth settings for each WAN. For example if a first site is coupled to multiple WANs the site settings storage may include information that the first site is coupled to a second site by a first WAN and that the first site is coupled to a third site by a second WAN. Additional settings information stored on the site settings storage includes for example the name of the site the location of the site or the bandwidth available in the site. The settings information stored in the site settings storage can be modified by a user with administrative rights using the server s user interface.

The configuration storage module is coupled by a signal line to the server . The server uses the signal line to download information to the configuration storage module . The information downloaded by the server includes the information noted above to allow the call manager to perform its conventional functions. In accordance with the present invention the server also uses signal line to maintain and keep the supported codecs storage the codec lists and the site settings storage current. In other words anytime the server receives instructions from a user to add remove or modify descriptions of supported codecs codec lists or site codec settings via the user interface the server updates the information stored in the configuration storage module . In one embodiment anytime another call manager server or site adds removes or modifies descriptions of supported codecs codec lists or site codec settings the information is propagated to server and server in turn updates the information stored in the configuration storage module . The configuration storage module is also coupled by signal line to the call manager . The configuration storage module uses this coupling to provide stored information to the call manager .

A device such as the processor of the switch A runs the call manager software application and is coupled to and controls one or more endpoints A and with which it is associated. While shown as operational and as part of the switch in those skilled in the art will recognize that in other embodiments the call manager may be operational as a separate module in the first site A or as part of server of .

Although in the illustrated embodiment the first site A has only one call manager in switch A in other embodiments the first site A has a different number of call managers . Also more than one call manager can control the same endpoint. The association between a call manager and an endpoint that it controls is accessed through the server . Furthermore although not shown the second switch B includes its own call manager .

As shown in the call manager is coupled to the PSTN or SIP trunk and the network . The call manager comprises an extension module a trunk module a location service engine a codec manager a bandwidth manager and a media manager .

The extension module communicates with endpoints coupled to the call manager in order to allow a user to perform call related functions on an endpoint. In addition the extension module is used to communicate with other call managers in the telephony system .

The trunk module is coupled to and controls the interaction between the endpoints A and and the PSTN or SIP trunk . In particular the call manager switch is often coupled to a trunk line. The trunk module of the call manager manages the usage of the trunk line by multiple endpoints A and optimizes the usage of the trunk line. The trunk module also manages trunk services such as caller identification direct inward dial etc.

The location service engine resolves the dialed numbers converts raw dialed digits into routable contacts and routes the call to the destination endpoint such a phones trunk hunt group auto attendant pickup group etc.

The codec manager is coupled to the network and at the initiation of a call between two endpoints negotiates with the endpoints or with another call manager which codec to use for the call. The codec manager uses information stored in codec lists and the site settings storage to negotiate a codec for a call. The functionality of the codec manager is further described below with reference to .

The bandwidth manager is coupled to the network and allocates bandwidth necessary to support calls handled by the call manager . For each call the bandwidth manager allocates bandwidth based on the codec negotiated by the codec manager . If the bandwidth manager allocates bandwidth for a call prior to the codec manager finalizing the codec negotiation the bandwidth manager updates the allocated bandwidth once the codec has been negotiated for the call. The amount of bandwidth that the bandwidth manager allocates for a call is based on the bandwidth associated with the codec being used for the call.

The bandwidth manager can allocate use of particular routers LANs WANs or other portions of the network to provide the bandwidth necessary to support the calls going through the switch . If a site is coupled to multiple WANs the bandwidth manager determines which WAN to allocate bandwidth on. For example a first site is coupled to a second site by a first WAN and coupled to a third site by a second WAN. If a call is being initiated between the first site and the second site the bandwidth manager on the first site allocates bandwidth on the first WAN because that is the WAN that couples the first site to the second site.

The media manager creates and manages media streams. The media manager also handles call control and converting audio waveforms to and from Real time Transport Protocol RTP packets using the sampling rate of the codec negotiated for the call. The media manager is coupled for communication with the network and the endpoints A and . The media manager also performs encoding decoding in case of analog endpoints and physical trunks using the sampling rate of the codec negotiated for the call.

Referring now to a method for initiating a call between two endpoints is described. Those of skill in the art will recognize that other embodiments can perform the steps of asynchronously or in different orders. Moreover other embodiments can include different and or additional steps than the ones described herein.

The method begins with the server providing the user interface that allows a user with administrative rights to add a description of a new codec to the supported codecs storage in the configuration storage module . In one embodiment through the user interface the user provides the identification string e.g. G726 8000 and the bandwidth e.g. 16 kbps of the new codec. The server stores the received codec description in the supported codecs storage . Switch supports the new codec once the description of the new codec is stored in the supported codecs storage .

The new supported codec is added to a codec list by the user via the server s user interface. Alternatively a new codec list can be created and the new codec is added to the new codec list. In one embodiment the new codec cannot be added to an existing codec list that is protected from being edited. Once the new codec has been added to the codec list by the user the information of the codec list is stored by the server in the configuration storage module .

The user uses the server s user interface to edit site codec settings. As part of the site codec settings the user selects a codec list to use for each type of call e.g. intra site call inter site call and fax and modem call . Additionally the user can edit other basic site codec settings such as the bandwidth reserved for the site . The site codec settings information received from the user is stored by the server in the site settings storage of the configuration storage module . When a call is initiated between two endpoints one or more call managers use the information stored in the configuration storage module to negotiate a codec for the call. It should be understood that steps and can each be performed by a different user with administrator rights. Additionally not all steps in method are necessary to initiate a call. For example a description of a new codec does not have to be added to the supported codecs storage nor does the new supported codec have to be added to a codec list. Default codecs and codec lists can be used to initiate a call.

Initially the server displays to a user a list of identifiers of codecs supported by the call manager operating on the switch . In one embodiment the server displays the list of identifiers of codecs supported by the call manager on the switch in a supported codecs panel at the server or at an endpoint running the server s user interface. With each identifiers of a supported codec the supported codecs panel includes the bandwidth associated with the supported codec. In one embodiment the supported codec list panel also indicates whether each supported codec is a default codec.

Next the server receives a request from the user to add a description of a new codec. The server displays an interface that allows the user to enter the description of the new codec. In one embodiment the server displays a new codec panel which allows the user to enter the identification string and bandwidth of the new codec. When the user enters all required information in the new codec panel the server allows the user to save the description of the new codec.

Upon the user selecting to save the description of the new codec the server receives and stores the description of the new codec at all switches in the site specifically in each switch s configuration storage module . In one embodiment the new codec and the information for the new codec are stored at all switches in the telephony system . In an alternate embodiment the description of the new codec is stored at select switches in the telephony system . A switch supports the new codec once the description of the new codec is stored in the switch s configuration storage module .

Initially the server displays codec lists stored in the configuration storage module to a user at the server or at an endpoint running the server s user interface. In one embodiment the server displays the codec lists in a codec list panel that allows the user to select whether to edit an existing codec list or create a new codec list. When the user requests to edit an existing codec list or to create a new codec list a corresponding request is transmitted to the server by the user.

If the server receives from the user a request to edit an existing codec list the server retrieves the codec list and the identification string of each supported codec from the configuration storage module . The server displays the codec list and the supported codecs to the user. In one embodiment the server displays the codec list and the supported codecs in an edit codec list panel which allows the user to add an identifier of the new supported codec and other supported codecs to the codec list. Additionally the edit codec list panel may be used by the user to remove an identifier of a codec from the codec list or change the ranking of the codecs in the codec list. Upon the user selecting to save edits made to the codec list the server receives the edited codec list. The edited codec list is stored by the server at all switches in the site specifically in each switch s configuration storage module . In one embodiment the edited codec list is stored at all switches in the telephony system . In an alternate embodiment the edited codec list is stored at select switches in the telephony system .

Alternatively if the server receives from the user a request to create a new codec list the server retrieves identification string of each supported codec from the configuration storage module and displays the supported codecs to the user. In one embodiment the server displays the supported codecs in a new codec list panel which allows the user to name the new supported codec list add an identifier of the new supported codec and identifiers of other supported codecs to the new codec list. Upon the user selecting to save the new codec list the server receives the new codec list. The new codec list is stored by the server at all switches in the site specifically in each switch s configuration storage module . In one embodiment the new codec list is stored at all switches in the telephony system . In an alternate embodiment the new codec list is stored at select switches in the telephony system .

Initially the server retrieves the names of codec lists stored in the configuration storage module and the current settings for site stored in the configuration storage module . The server displays the current settings for site to a user at the server or at an endpoint running the server s user interface. In on embodiment the user displays the current settings for site in an edit site panel which lets the user edit the current site codec settings specifically the codec list to use for each type of call. Additionally if site is coupled to multiple WANs the user can select which WAN to use to communicate with each site in the telephony system .

Upon the user selecting to save the edited site codec settings the server receives the edited site codec settings. The edited site codec settings are stored by the server at all switches in site specifically in each switch s configuration storage module . In one embodiment the edited codec list is stored at all switches in the telephony system . In an alternate embodiment the new codec list is stored at select switches in the telephony system .

To save changes to the site codec settings save button is pressed. New button is pressed to create a new set of site codec settings. To use the settings in the edit site panel as a template for creating a new set of site codec settings copy button is pressed. Delete button is pressed to erase the site codec settings being viewed on the edit site panel .

Initially a codec manager of a source site receives in an offer message a call codec list from the source endpoint step of . The call codec list includes an identification of each codec supported by the source endpoint. The codec manager of the source site determines that the type of call being initiated is an inter site call. The codec manager of the source site searches its corresponding configuration storage module to identify which source codec list is to be used for an inter site call. Once the codec manager of the source site has identified the source codec list to use it retrieves the source codec list from the configuration storage module .

The codec manager of the source site uses the source codec list to filter the call codec list step . The codec manager of the source site filters the call codec list by removing from the call codec list identifiers of codecs that are not included in the source codec list. For example if the call codec list includes identifier G726 8000 but the source codec list does not identifier G726 8000 is removed from the call codec list. Additionally as part of filtering the call codec list the ranking of the identifiers in the call codec list is reordered by the codec manager of the source site based on the order of the identifiers included in the source codec list.

The codec manager of the source site selects from the filtered call codec list the codec with the highest bandwidth. The codec manager of the source site determines whether the source site has enough bandwidth available to support the selected codec. If source site does not have enough available bandwidth to support the selected codec the codec manager of the source site removes the identifier of the selected codec from the call codec list and steps and are repeated. Alternatively if the source site has enough bandwidth available to support the selected codec the bandwidth manager of the source site uses the selected codec to allocate bandwidth at the source site step . If the codec manager of the source site is connected to multiple WANs the bandwidth manager of the source site allocates bandwidth on whichever WAN a codec manager of the destination site is coupled to. In one embodiment if source site does not have enough bandwidth to support any of the codecs represented in the call codec list the codec manager of the source site rejects the call and sends a fail signal to the source endpoint.

The codec manager of the source site sends the call codec list to the codec manager of the destination site. In one embodiment the codec list is sent to the codec manager of the destination site in an invite message step . The codec manager of the destination site retrieves a destination codec list for intra site calls and uses the destination codec list to filter the call codec list step . The codec manager of the destination site filters the call codec list by removing from the call codec list identifiers of codecs that are not included in the destination codec list. Additionally as part of filtering the call codec list the ranking of the identifiers in the call codec list is reordered by the codec manager of the destination site based on an algorithm that takes into account the order of the identifiers included in the destination codec list.

The codec manager of the destination site selects from the filtered call codec list the codec with the highest bandwidth. The codec manager of the destination site determines whether the destination site has enough bandwidth available to support the selected codec. If destination site does not have enough available bandwidth to support the selected codec the codec manager of the destination site removes the identifier of the selected codec from the call codec list and steps and are repeated. In one embodiment if destination site does not have enough bandwidth to support any of the codecs on the call codec list the codec manager of the destination site rejects the call and sends a fail signal to the codec manager of the source site

On the other hand if the destination site has enough bandwidth available to support the selected codec the bandwidth manager of the destination site uses the selected codec to allocate bandwidth at the destination site step . In alternate embodiment if the destination site has enough bandwidth available to support the selected codec the codec manager of the destination site skips step and proceeds to step .

The codec manager of the destination site sends to the destination endpoint an offer message that includes the call codec list step . The codec manager of the destination site receives from the destination endpoint an answer message that includes an identifier of a codec included in the call codec list sent to destination endpoint step . The codec represented by the received identifier is referred to as the negotiated codec. In one embodiment the destination endpoint determines which identifier to send back in the answer message based on the codec represented in the codec list that has the highest bandwidth and is supported by the destination endpoint. The bandwidth manager of the destination site uses the identifier of the negotiated codec to update the allocated bandwidth at the destination site step .

The codec manager of the destination site sends an answer message to the codec manager of the source site that includes the identifier of the negotiated codec step . The bandwidth manager of the source site uses the received identifier to update the allocated bandwidth at the source site step . The codec manager of the source site sends an answer message to the source endpoint that includes the identifier of the negotiated codec step . Once the source endpoint receives the identifier the two endpoints use the negotiated codec to exchange audio video and or data streams using the negotiated codec.

The foregoing description of the embodiments of the present invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the present invention be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the present invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the present invention or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the present invention can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the present invention is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally the present invention is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the present invention which is set forth in the following claims.

