---

title: Streaming state data for cloud management
abstract: A cloud manager uses streams to monitor state of the cloud. A cloud state streaming policy specifies state data to stream, along with one or more initial operators for processing the streams. An archive mechanism allows archiving the streamed data when specified data in the streams exceeds one or more defined thresholds. A user interface allows adjusting the streaming of cloud state data to focus on data of interest to a user. The cloud manager thus allows a user to determine state of a cloud via the streamed state data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09130831&OS=09130831&RS=09130831
owner: International Business Machines Corporation
number: 09130831
owner_city: Armonk
owner_country: US
publication_date: 20131107
---
This disclosure generally relates to computer systems and more specifically relates to managing a cloud computing environment using streaming state data.

The combination of hardware and software on a particular computer system defines a computing environment. Different hardware platforms and different operating systems thus provide different computing environments. In recent years engineers have recognized that it is possible to provide different computing environments on the same physical computer system by logically partitioning the computer system resources to different computing environments known as virtual machines. The System X computer system developed by IBM is an example of a computer system that supports logical partitioning into multiple virtual machines. If multiple virtual machines on a System X computer system are desired partition manager code referred to as a hypervisor in IBM terminology is installed that allows defining different virtual machines on the same platform. Once the partition manager is installed virtual machines may be created that define different computing environments. The partition manager manages the logical partitions to assure that they can share needed resources in the computer system while maintaining the separate computing environments defined by the virtual machines.

Virtual machines are used extensively in computing solutions that are cloud based. As the demands for cloud solutions increase open source software for building clouds such as OpenStack have become a building block for creating a reliable and flexible cloud platform.

As cloud environments continue to grow in scale management of the cloud environment becomes more complex and problematic. When a problem occurs in one virtual machine VM or in one localized section of the cloud environment the task of determining the cause of the problem can be complex and labor intensive. For example if there are 70 compute nodes in a cloud environment and the system encounters an issue and if the root cause is not trivial the administrator may face the task of having to examine possibly all 70 VMs to collect diagnostic data. In most cases the actual root cause may have occurred in some point in time prior to observable problems being detected. In many cases a root cause is in actuality a combination of two or more factors which static logging methods may not have the ability to correlate and as such administrators would need to manually mine this information. Aggressive static logging also has negative performance impacts and storage impacts if the system is trying to log everything and save that quantity of information to disk.

In global cloud environments where administrators may reside in different locations there may be a knowledge gap of the current state of the cloud landscape that administrators in one time zone are aware of but may not have been apparent or known by administrators in another time zone. Things as simple as an administrator in the United States wanting to shutdown a system based in China but is not sure what IP addresses are in use or who are active users which is information that would be known by the China based administrators. There is currently no solution for allowing an administrator to determine current state of the cloud without taking many manual steps to interrogate the state of many individual VMs and host computer systems.

A cloud manager uses streams to monitor state of the cloud. A cloud state streaming policy specifies state data to stream along with one or more initial operators for processing the streams. An archive mechanism allows archiving the streamed data when specified data in the streams exceeds one or more defined thresholds. A user interface allows adjusting the streaming of cloud state data to focus on data of interest to a user. The cloud manager thus allows a user to determine state of a cloud via the streamed state data.

The foregoing and other features and advantages will be apparent from the following more particular description as illustrated in the accompanying drawings.

The disclosure and claims herein relate to a cloud manager that uses streams to monitor state of the cloud. A cloud state streaming policy specifies state data to stream along with one or more initial operators for processing the streams. An archive mechanism allows archiving the streamed data when specified data in the streams exceeds one or more defined thresholds. A user interface allows adjusting the streaming of cloud state data to focus on data of interest to a user. The cloud manager thus allows a user to determine state of a cloud via the streamed state data.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for loadbalancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a block diagram of an example of a cloud computing node is shown. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems tablet computer systems thin clients thick clients handheld or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processing unit .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile and non volatile media removable and non removable media. An example of removable media is shown in to include a Digital Video Disc DVD .

System memory can include computer system readable media in the form of volatile or non volatile memory such as firmware . Firmware provides an interface to the hardware of computer system server . System memory can also include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Computer system server may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions described in more detail below.

Program utility having a set at least one of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device a display a disk drive etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via Input Output I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays Redundant Array of Independent Disk RAID systems tape drives data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment in is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and the disclosure and claims are not limited thereto. As depicted the following layers and corresponding functions are provided.

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes in one example IBM System z systems RISC Reduced Instruction Set Computer architecture based servers in one example IBM System p systems IBM System x systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software in one example IBM WebSphere application server software and database software in one example IBM DB2 database software. IBM System z System p System x BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide.

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provide pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA. A cloud manager is representative of a cloud manager as described in more detail below. While the cloud manager is shown in to reside in the management layer cloud manager can span all of the levels shown in as discussed in detail below.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing and transaction processing.

As will be appreciated by one skilled in the art aspects of this disclosure may be embodied as a system method or computer program product. Accordingly aspects may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a non transitory computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The cloud manager in is one specific example for the cloud manager in . Cloud manager includes a cloud state streaming mechanism that initializes the streams on the VMs and the hosts receives the streams and allows archiving analysis and adjustment of the state data in the streams. While cloud computing is known in the art and streaming applications are known in the art the cloud computer system uses streams to send state data to a cloud manager thereby allowing a user of the cloud manager to receive and analyze any needed state data from any needed entity in the cloud. The cloud state streaming mechanism thus provides a very flexible and powerful way to receive state data for the cloud in near real time without the need of performing vast amounts of static logging which can negatively impact system performance.

One suitable example for the cloud manager in includes a cloud state streaming mechanism as discussed above. One suitable example for the cloud state streaming mechanism is shown in to include a cloud state streaming policy cloud state operators an archive mechanism and a user interface . One suitable example for the cloud state streaming policy is shown in to specify state data to stream and initial operators . The cloud state operators in include all operators that support the processing of state data sent to the cloud state streaming mechanism . Archive mechanism defines one or more thresholds that trigger archiving of streamed state data. Thresholds could thus be defined for normal operating conditions with conditions that do not satisfy thresholds being defined to be abnormal operating conditions that trigger logging the state data for future analysis. Note that thresholds can include any suitable threshold or heuristic expression for determining what is normal and what is abnormal and can be expressed in any suitable units. The user interface provides a stream adjustment mechanism that allows a user to adjust the streams of state data according to the user s needs. The stream adjustment mechanism can adjust the state data being streamed the operators operating on the state data being streamed or both. Adjusting the operators can include adjusting existing operators and or adding one or more new operators as discussed in more detail below.

Referring to a method is preferably performed by the cloud state streaming mechanism shown in . The cloud state streaming policy is read step . A determination is made regarding which VMs and host computer systems host the state data to stream specified in the streaming policy and streaming for these VMs and host computer systems is created and configured step . The initial operators specified in the streaming policy are then created and configured step . The cloud state data is then streamed step . Method is then done.

Once the streaming of state data is initialized in method the streaming state data can be adjusted by a user. Referring to a method begins when a user specifies focus for streaming cloud state data step . Which state data is included in one or more streams may be adjusted according to the user specified focus step . One or more existing operators can be adjusted and or one or more new operators can be added according to the user specified focus step . The cloud state data is then streamed step which now includes state data according to the user specified focus. For example let s assume the streaming state data indicates network usage is high. The user could specify a focus on network usage which could cause state data for networks not previously monitored to be included in the streamed state data so the user can better understand which networks are experiencing high usage.

Specific examples are presented in to illustrate aspects of the cloud manager. A cloud streaming policy is shown in to include state data to stream and initial operators . State data to stream includes CPU usage per minute memory usage per minute and storage usage per minute . These are given by way of example to illustrate some specific state data that could be streamed and represent some suitable examples of hardware software metrics . Initial operators include an outlier removal operator a correlation operator and a distribution operator . shows an example of a threshold for archive mechanism shown in which specifies a CPU usage threshold of 80 . For this specific example this means as long as the state data shows CPU usage minute less than 80 of capacity the streamed state data is not archived. When the CPU usage minute exceeds 80 of capacity the streamed data is archived. This shows how thresholds can be used to automatically trigger archiving the streamed state data for later analysis. By providing one or more thresholds that determine when state data needs to be archived static logging of vast amounts of state data by the cloud manager can be avoided.

The outlier removal operator provides statistical analysis and removes one or more tuples that are statistical outliers meaning their values are too high or too low to be of statistical significance. The outlier removal operator essentially reduces noise in the streamed state data. The correlation operator can determine when there is a correlation between entities in the cloud such as between VMs. The distribution operator determines how to distribute stream data such as determining where to send data for analysis or some other operation.

Referring to method determines from the streamed cloud state data that two virtual machines denoted VM and VM are correlated step . Step is preferably performed by the correlation operator shown in . When a user sees the correlation between VM and VM the user can specify a focus to the stream adjustment mechanism so state data corresponding to the specified focus can be streamed and analyzed. The stream adjustment mechanism adjusts the streams from VM and VM to provide network latency between VM and VM step . The network latency between VM and VM is then read from the state data in the adjusted streams step .

The cloud manager thus has the ability to be initially configured to start streaming state data for entities in the cloud and can also be dynamically adjusted as well. This provides a very powerful and flexible way to monitor state of a cloud computing system.

The disclosure and claims herein relate to a cloud manager that uses streams to monitor state of the cloud. A cloud state streaming policy specifies state data to stream along with one or more initial operators for processing the streams. An archive mechanism allows archiving the streamed data when specified data in the streams exceeds one or more defined thresholds. A user interface allows adjusting the streaming of cloud state data to focus on data of interest to a user. The cloud manager thus allows a user to determine state of a cloud via the streamed state data.

One skilled in the art will appreciate that many variations are possible within the scope of the claims. Thus while the disclosure is particularly shown and described above it will be understood by those skilled in the art that these and other changes in form and details may be made therein without departing from the spirit and scope of the claims.

