---

title: Post attack man-in-the-middle detection
abstract: Technologies are described herein for post attack man-in-the-middle detection. A first computer receives and stores public key certificates when connections are established. The first computer also uploads the stored public key certificates associated with a domain to a second computer each time a connection is established with the domain. The second computer receives the public key certificates from the first computer. The second computer then determines whether any of the public key certificates provided by the first computer are fraudulent certificates by comparing the received certificates to known valid certificates. If the second computer determines that the first computer has received one or more fraudulent certificates, the second computer may cause action to be taken with regard to the fraudulent certificates.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850185&OS=08850185&RS=08850185
owner: Amazon Technologies, Inc.
number: 08850185
owner_city: Reno
owner_country: US
publication_date: 20130628
---
This application is a continuation of U.S. patent application Ser. No. 12 980 674 entitled POST ATTACK MAN IN THE MIDDLE DETECTION and filed on Dec. 29 2010 now U.S. Pat. No. 8 484 460 dated Jul. 9 2013 which is expressly incorporated herein by reference in its entirety.

A man in the middle MITM attack is a type of computer security breach in which an attacker makes independent connections with two victims and relays messages between them. The attacker in a MITM attack makes it appear to the victims of the attack that they are communicating directly with one another over a private connection. The attacker however controls the entire conversation.

In a transaction between a client and a server for example a MITM attacker can utilize various techniques to split a single connection between a client and a server into two separate connections one connection between the client and the attacker and another connection between the server and the attacker. Once the connection has been split in this manner the attacker can read and modify data transmitted between the client and server without being easily detected.

Public key certificates which may be referred to herein as digital certificates or simply certificates are one mechanism utilized to prevent MITM attacks. A public key certificate is an electronic document issued by a trusted party called a certification authority CA which can be utilized to verify that a public encryption key belongs to a company or individual. For example a CA might issue a public key certificate to an e commerce merchant. The public key certificate includes information about the merchant the merchant s public encryption key and is digitally signed by the CA using the CA s private encryption key.

When a client connects to a server operated by the e commerce merchant the server transmits the merchant s public key certificate to the client. The client then utilizes the certificate to verify that the merchant in fact operates the server and to obtain the merchant s public encryption key. A key exchange can then occur between the client and the server to create an encrypted two way communications session.

Despite the trusted nature of the CAs it is possible for an attacker to fraudulently obtain a valid public key certificate for a domain that the attacker does not own. An attacker can then utilize such a fraudulently obtained public key certificate to masquerade as the owner of the domain and to perform MITM attacks on victims connecting to the domain.

The following detailed description is directed to technologies for detecting MITM attacks. Utilizing the technologies described herein valid but fraudulently obtained digital certificates utilized by a MITM attacker can be identified subsequent to a MITM attack by comparing received certificates to certificates known to be valid. Appropriate action can then be taken in response to detecting fraudulent certificates used in a MITM attack such as notifying a victim of the attack contacting a law enforcement agency or taking other appropriate action.

According to one aspect disclosed herein a first computer is configured to receive a public key certificate when a connection is established to another computer. For instance in one embodiment a client computer has a World Wide Web Web browser application configured to receive a public key certificate from a Web server computer when a connection is established. The public key certificates received by the first computer might be valid certificates received from a legitimate source or fraudulent certificates received from an attacker perpetrating a MITM attack. The first computer will be unable to distinguish between a valid public key certificate and fraudulent public key certificate utilized by a MITM attacker.

The first computer may also be configured to collect and store data regarding the origination of each public key certificate. For instance the first computer might store data identifying a name of a network to which the computer is connected when each public key certificate is received a media access control MAC address associated with the network a base station identifier BSID of a wireless network to which the computer is connected when each certificate is received and a geographical location of the computer when each public key certificate is received. The first computer might also collect and store other information regarding the origination of each received public key certificate. The first computer also stores each received public key certificate.

The first computer is also configured to upload the stored public key certificates associated with a domain to a second computer each time a connection is established. For instance when a Web browser application executing on a client computer makes a connection to a Web server computer the Web browser application might transmit each of the public key certificates associated with the domain of the Web server. In this manner the Web server receives a complete collection of the public key certificates stored by the Web browser application for the domain regardless of whether the public key certificates were validly received from the Web server or received from a MITM attacker. The Web browser might also transmit the data collected regarding the origination of each public key certificate.

A second computer is also disclosed herein that is configured to receive the public key certificates from the first computer. For instance in one embodiment a Web server is provided that is configured to expose a certificate validation application programming interface API . The first computer can call the API to provide the public key certificates to the Web server computer. The second computer is also configured to store a copy of each public key certificate received from a CA in a certificate store. In this manner the second computer maintains a record of the valid public key certificates it has received from CAs and utilized.

In response to receiving a call to the certificate validation API the second computer is configured to determine whether any of the public key certificates provided by the first computer are fraudulent certificates. For instance the second computer might compare the public key certificates received from the first computer to the stored certificates received from the CAs to determine whether any of the certificates received from the first computer are fraudulent. Fraudulent certificates may include a public encryption key associated with an attacker rather than a valid public encryption key associated with the second computer.

If the second computer determines that the first computer has received one or more fraudulent certificates the second computer may take action with regard to the fraudulent certificates. For instance the second computer might cause a user account to be reviewed for fraudulent activity cause a notification to be transmitted to a user regarding the fraudulent certificates or cause a notification to be transmitted to a law enforcement agency regarding the fraudulent certificates. Other types of actions might also be taken.

The data collected by the first computer might also be utilized when action is taken with regard to the fraudulent certificates. For instance the name of the network that the first computer was connected to when a fraudulent certificate was received might be provided to a user of the first computer so that the user will avoid another connection to the identified network. The data collected by the first computer regarding the origination of the fraudulent certificates might also be utilized in other ways.

Additional details regarding the various processes briefly described above for detecting a MITM attack will be presented below with regard to . It should be appreciated that although the embodiments disclosed herein are presented primarily in the context of a client and server architecture the embodiments disclosed herein may be utilized to detect a MITM attack between any two computer systems configured in the manner described herein. Accordingly the embodiments disclosed herein should not be limited to use within a client and server architecture or transaction.

It should also be appreciated that the subject matter presented herein may be implemented as a computer process a computer controlled apparatus a computing system or an article of manufacture such as a computer readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types.

Those skilled in the art will also appreciate that the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein including multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers handheld computers personal digital assistants e readers cellular telephone devices special purposed hardware devices network appliances and the like. The embodiments described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In the following detailed description references are made to the accompanying drawings that form a part hereof and that show by way of illustration specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures.

In the example MITM attack shown in an attacker has compromised a transaction between a client computer and a server computer . In this example the attacker has utilized one of many techniques known in the art to split a single connection between the client computer and the server computer into two separate connections one connection between the client computer and the attacker and another connection between the server computer and the attacker . Once the connection has been split in this manner the attacker can read and modify data transmitted between the client computer and the server computer without being easily detected.

In the MITM attack illustrated in the attacker masquerades as the server computer when communicating with the client computer and masquerades as the client computer when communicating with the server computer . For instance in a standard public encryption key exchange transaction the client computer will ask the server computer for its public encryption key . In response to such a request the server computer will transmit its public encryption key to the client computer . The attacker however will intercept this reply.

In response to the request by the client computer for the public encryption key of the server computer the attacker will provide a forged response that includes the attacker s public encryption key . Consequently subsequent messages generated by the client computer will be encrypted utilizing the attacker s public encryption key . These messages will be intercepted by the attacker decrypted using the attacker s private encryption key potentially altered and re encrypted using the public encryption key of the server computer . The server computer will receive the messages and believe that the messages came from the client computer since the messages were properly encrypted.

It should be appreciated that the MITM attack illustrated in is merely illustrative and that other types of MITM attacks of greater sophistication might also be perpetrated by an attacker . These types of attacks are well known to those skilled in the art. As also discussed above although illustrates a MITM attack being perpetrated between a client computer and a server computer this type of attack might be perpetrated between any two computing systems including peer computing systems and others.

As described briefly above public key certificates are one mechanism utilized to prevent MITM attacks. is a block diagram illustrating aspects of a public key infrastructure that provides support for the use of public key certificates and that is utilized in embodiments disclosed herein for post attack man in the middle detection.

A public key certificate is an electronic document issued by a trusted party referred to herein as a certification authority which can be utilized to verify that a public encryption key belongs to a company or individual. For example a CA might issue a public key certificate to an e commerce merchant for use with a server computer . The public key certificate includes information about the CA about the merchant the merchant s public encryption key and potentially other information. The CA signs the certificate by creating a hash of the fields of the certificate and encrypting the hash with the CAs private key . This data referred to as a digest is also placed into the certificate .

When a client computer connects to the server computer operated by the e commerce merchant the server computer transmits the merchant s public key certificate to the client computer . The client computer then utilizes the public key certificate to verify that the merchant in fact operates the server computer and to obtain the merchant s public encryption key . In particular the client computer utilizes the CA s public key to decrypt the digest stored in the certificate . In this regard a list of CAs might be maintained at the client computer that identifies popular CAs and their public encryption keys.

The client computer also computes its own hash of the fields in the certificate . The integrity of the certificate is validated if the hash value generated by the client computer matches the digest generated by the CA and stored in the certificate . In this case the server computer is presumed to be operated by the merchant to which the certificate was assigned. Once this has occurred a key exchange can then occur between the client computer and the server computer to create an encrypted two way communications session. Other types of activities might also be performed once the certificate has been verified.

It should be appreciated that the public key infrastructure illustrated in and described above has been simplified. Other aspects of commonly utilized public key infrastructures will be apparent to those skilled in the art. It should also be appreciated that the embodiments disclosed herein might be utilized with public key infrastructures other than the one illustrated in and described above.

Despite the trusted nature of the CA it is possible for an attacker to fraudulently obtain a valid public key certificate for a domain that the attacker does not own referred to herein as a fraudulent certificate . An attacker can utilize a fraudulent certificate to masquerade as the owner of the domain and to perform MITM attacks on victims connecting to the domain. The embodiments disclosed herein provide mechanisms for detecting such an attack after the attack has occurred. Once such an attack has been detected actions can be taken to prevent further attacks from occurring using the same fraudulent certificate. Details regarding these processes are provided below with regard to .

As illustrated in the Web browser application might be configured to execute a plug in . As known in the art the plug in is an add on program that extends the functionality of the Web browser application . The functionality described herein as being performed at the client computer might be performed by the Web browser application the plug in or by a combination of the two. This functionality might also be integrated within an operating system of the client computer or performed by another type of application or component or combination of applications or components executing on the client computer . In this regard it should be appreciated that the embodiment disclosed with regard to and described herein is merely illustrative.

The Web browser application shown in may receive public key certificates A B and D such as for instance in response to connecting to a Web application . As discussed above the client computer may utilize the received certificates to verify the identity of the operator of the server computer and to obtain a public encryption key for the server computer . The certificates might also be utilized for other purposes known to those skilled in the art.

According to embodiments disclosed herein the Web browser application is also configured to store certificates A B and D received from each domain in a certificate store . In the example shown in the client computer has stored the certificates A B and D in the certificate store . The certificate store might be a database a location on a file system of the client computer a network share or another type of location capable of storing electronic documents. As mentioned above the certificates stored in the certificate store might be valid certificates received from a legitimate operator of a server computer or fraudulent certificates received from a MITM attacker. The client computer cannot distinguish between valid and fraudulent certificates.

The client computer is also configured to transmit the certificates stored in the certificate store when a connection is established to a remote computer. For instance in one embodiment the Web browser application is configured to identify the certificates in the certificate store pertaining to a domain and to transmit the identified certificates to a computer on the domain when the connection is established. In the example shown in the Web browser application transmits the certificates stored in the certificate store pertaining to the domain on which server computer is operating. As will be described in greater detail below the server computer exposes a certificate validation API for receiving the certificates .

The client computer is also configured in one embodiment to collect and store data regarding the origination of each public key certificate received at the client computer . For instance the client computer might store data identifying a name of a network to which the client computer is connected when each public key certificate is received. Similarly the client computer might store a media access control MAC address associated with the network to which the client computer is connected such as the MAC address of a connected router when each public key certificate is received.

In other embodiments the client computer stores its own geographical location at the time each public key certificate is received. In this regard the client computer might be equipped with appropriate hardware or software for determining its own geographical location. It should be appreciated that the client computer might also collect and store other information regarding the origination of each received public key certificate . This information might be stored in the certificate store or in another location. As will be described below this information might also be transmitted to the server computer and utilized to take action regarding fraudulent certificates.

As shown in a server computer is also provided in embodiments that is configured to communicate with the client computer by way of a network . In one embodiment the server computer is a server computer configured to execute a Web server program for providing a Web application to the client computer . For instance the Web application might be an e commerce Web application accessible to the client computer by way of the Web browser application . It should be appreciated that the server computer might also be another type of computing system configured to provide another type of application or applications.

As illustrated in the server computer is also configured to maintain a certificate store . The certificates A C stored in the certificate store are valid certificates that have been generated by the CA and distributed by the server computer . The server computer stores the certificates generated by the CA each time a new certificate is received. In this way the server computer maintains a record of the valid certificates issued by the CA on its behalf and distributed by the server computer . As will be discussed in greater detail below the server computer utilizes the certificates A C stored in the certificate store to identify whether any of the certificates A B and D received from the client computer are fraudulent certificates.

As also illustrated in the server computer is configured in one embodiment to expose a certificate validation API . The certificate validation API may be called by the client computer in order to validate the certificates A B and D stored in the certificate store . The certificate validation API might be implemented as a Web services API or another type of API accessible to the client computer . As discussed above the Web browser application executing on the client computer is configured to identify the certificates in the certificate store that pertain to a domain associated with the server computer and to transmit the certificates to the server computer when a connection is established.

When the certificate validation API receives a call from the client computer and a number of certificates A B and D the certificate validation API causes the server computer to determine whether any of the certificates received from the client computer are fraudulent certificates. For instance in one embodiment the server computer compares the certificates received from the client computer to the certificates stored in the certificate store to determine the authenticity of the received certificates. In the example shown in FIG. the certificates A and B are stored in the certificate store . The certificate D is however not stored in the certificate store . Consequently the server computer might conclude that the certificate D is a fraudulent certificate.

If the server computer identifies any fraudulent certificates the server computer might cause appropriate action to be taken with respect to the fraudulent certificates. For instance according to embodiments the server computer might cause a notification to be transmitted to a user of the client computer . The server computer might also cause a user account to be reviewed for fraudulent activity. In other scenarios the server computer might cause a notification to be transmitted to a law enforcement agency regarding the fraudulent certificates. The server computer might also cause an inquiry to be generated with the CA that generated the fraudulent certificates in order to determine how the certificates came into existence.

It should be appreciated that the type and number of actions taken in response to detecting fraudulent certificates might vary based upon the type of entity that operates the server computer . For instance a bank might take immediate action to warn a user of the client computer of the attack. Other types of entities might wait longer periods of time before notifying a user or taking other action. For instance some types of entities might configure the server computer to wait until a threshold number of fraudulent certificates have been detected before notifying a user of the client computer or taking other types of action.

Although not illustrated in the server computer might also be connected to other computer systems that are utilized to take action regarding fraudulent certificates. For instance the server computer might be connected to a customer service computer system for analyzing a customer account for signs of fraudulent activity. Similarly the server computer might be connected to a computer system operated by a law enforcement agency for handling reports of fraudulent certificates.

Prior to concluding that the client computer has received fraudulent certificates the server computer might also cause a check to be made to determine that certificates have not improperly been identified as fraudulent certificates. For instance the server computer might perform one or more checks to ensure that suspected certificates are not actually valid certificates received from the CA that were not properly stored in the certificate store certificates used for testing or other types of valid certificates.

As discussed briefly above the client computer might collect data regarding the origination of the certificates stored in the certificate store . The client computer might transmit this data to the server computer at the time the certificates are uploaded or at another time. For instance the client computer might transmit the data regarding the origination of the certificates to the server computer after fraudulent certificates have been detected. The data regarding the origination of the certificates may be transmitted to the server computer by way of the certification validation API or using another mechanism.

In other implementations the client computer does not upload the data regarding the origination of the certificates to the server computer . In this implementation the Web browser application or another component executing on the client computer might display the data regarding the origination of the certificates to a user of the client computer so that the user can take appropriate action. For instance the Web browser application might display the name of a network to which the client computer was connected when a fraudulent certificate was received. A user of the client computer can utilize this information to avoid another connection to the identified network. The server computer might instruct the Web browser application to display the data to a user of the client computer .

In other embodiments the server computer utilizes the data regarding the origination of the certificates when taking action on fraudulent certificates in other ways. For instance the network name MAC address and geographic location of the client computer when the fraudulent certificates were received might be transmitted to a law enforcement agency in order to aid in an investigation of the fraudulent certificates.

It should be appreciated that while a single client computer and server computer have been illustrated in many client computers and server computers might be utilized in the manner disclosed herein. Moreover although a single network has been illustrated in many networks might be utilized in order to establish a connection between the client computer and the server computer .

Referring now to additional details will be provided regarding one illustrative process disclosed herein for post attack MITM detection. It should be appreciated that the logical operations described herein with respect to and the other FIGURES are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the figures and described herein. These operations may also be performed in parallel or in a different order than those described herein.

The routine begins at operation where the client computer connects to a domain such as a Web application provided by the server computer . During the process of connecting to the Web application the server computer transmits a public key certificate to the client computer . The client computer receives the public key certificate at operation .

At operation the client computer stores the received public key certificate in the certificate store in the manner described above. In this manner the client computer receives public key certificates associated with various domains Web sites server computers and other entities and stores the received certificates in the certificate store . The stored certificates may be valid certificates or fraudulent certificates.

From operation the routine proceeds to operation where the client computer collects and stores data regarding the origination of the certificate received at operation . As discussed above for instance the client computer might collect data identifying a name of a network to which the client computer is connected when the public key certificate is received a MAC address associated with the network a base station identifier BSID a geographical location of the client computer when the public key certificate is received and potentially other information regarding the origination of the received public key certificate. This data might be stored in the certificate store or in another location.

From operation the routine proceeds to operation where the client computer determines whether the server computer supports the certification validation API . If the server computer supports the certification validation API the routine proceeds from operation to operation where the client computer identifies the certificates stored in the certificate store that are associated with the domain on which the server computer is operating. The client computer then transmits the identified certificates to the server computer by way of the certificate validation API .

According to embodiments the client computer might transmit only those certificates received during a specified time period e.g. the previous year or month to the server computer . In this manner the number of certificates transmitted from the client computer to the server computer may be limited. The client computer might also transmit the collected data regarding the origination of the certificates to the server computer at operation . Alternatively the client computer might transmit this data to the server computer at a later time or not at all as discussed above. From operation the routine proceeds to operation where it ends.

The routine begins at operation where the server computer stores public key certificates received from the CA and other CAs in the certificate store . It should be appreciated that an operator of the server computer might obtain new certificates each year or other time period to replace expired certificates. The operator might also obtain new certificates from other CAs periodically to take advantage of better pricing or new certificate features. The certificates are stored in the certificate store each time new certificates are distributed by the server computer .

From operation the routine proceeds to operation where the server computer determines whether a call has been made to the certificate validation API . If not the routine proceeds back to operation described above. If a call has been made to the certificate validation API the routine proceeds to operation where the server computer receives the certificates to be verified from the client computer . As discussed above the server computer might also receive data from the client computer regarding the origination of the certificates.

From operation the routine proceeds to operation where the server computer determines whether any of the public key certificates received from the client computer are fraudulent certificates. As discussed above the server computer might make this determination by comparing the certificates received from the client computer to the certificates stored in the certificate store . If no fraudulent certificates are detected the routine proceeds from operation to operation described above.

If the server computer identifies fraudulent certificates the routine proceeds from operation to operation . At operation the server computer obtains the data from the client computer regarding the origination of the fraudulent certificates. As discussed above this data might be obtained from the client computer at the time a call is made to the certification validation API at the time fraudulent certificates are detected or not at all.

From operation the routine proceeds to operation where the server computer takes appropriate action with regard to the fraudulent certificates. As discussed above the server computer might cause a user account to be reviewed for fraudulent activity cause a notification to be transmitted to a user of the client computer regarding the fraudulent certificates cause a notification to be transmitted to a law enforcement agency regarding the fraudulent certificates or cause a notification to be transmitted to the CAs that issued the fraudulent certificates. Other types of actions might also be taken.

The server computer might also utilize the data collected by the client computer regarding the origination of the fraudulent certificates when action is taken with regard to the fraudulent certificates. For instance the name of the network that the client computer was connected to when a fraudulent certificate was received might be provided to a user of the client computer so that the user will avoid another connection to the identified network. This information might also be provided to a law enforcement agency or a CA . The server computer might also utilize the data collected by the client computer regarding the origination of the fraudulent certificates in other ways. From operation the routine proceeds to operation where the operations described above may be repeated.

It should be appreciated that when a MITM attack is occurring the MITM attacker may block the transmission of the certificates from the client computer to the server computer . However the certificates stored in the certificate store will be transmitted to the server computer the next time the client computer connects to the server on a network connection not compromised by the attacker .

Less sophisticated attackers might not block the transmission of the certificates from the client computer to the server computer . In this case the server computer might provide a notification to a user of the client computer while the actual MITM attack is taking place. The notification might indicate to the user that they are the subject of a MITM attack and suggest that the user take appropriate action such as establishing a connection to the server computer by way of a different network connection. Other types of notifications might also be provided to the user of the client computer .

The computer includes a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment one or more central processing units CPUs operate in conjunction with a chipset . The CPUs are standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .

The CPUs perform the necessary operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

The chipset provides an interface between the CPUs and the remainder of the components and devices on the baseboard. The chipset may provide an interface to a random access memory RAM used as the main memory in the computer . The chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that that help to startup the computer and to transfer information between the various components and devices. The ROM or NVRAM may also store other software components necessary for the operation of the computer in accordance with the embodiments described herein.

The computer may operate in a networked environment using logical connections to remote computing devices and computer systems through the network . The chipset may include functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. The NIC is capable of connecting the computer to other computing devices over the network . It should be appreciated that multiple NICs may be present in the computer connecting the computer to other types of networks and remote computer systems.

The computer may be connected to a mass storage device that provides non volatile storage for the computer. The mass storage device may store system programs application programs other program modules and data which have been described in greater detail herein. The mass storage device may be connected to the computer through a storage controller connected to the chipset . The mass storage device may consist of one or more physical storage units. The storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

The computer may store data on the mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether the mass storage device is characterized as primary or secondary storage and the like.

For example the computer may store information to the mass storage device by issuing instructions through the storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. The computer may further read information from the mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to the mass storage device described above the computer may have access to other computer readable storage medium to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by the computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

The mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises the LINUX operating system. According to another embodiment the operating system comprises the WINDOWS SERVER operating system from MICROSOFT Corporation. According to further embodiments the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device may store other system or application programs and data utilized by the computer such as the Web browser application the plug in the Web application the certificates and the certification validation API each of which was described above.

In one embodiment the mass storage device or other computer readable storage media is encoded with computer executable instructions which when loaded into the computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform the computer by specifying how the CPUs transition between states as described above. According to one embodiment the computer has access to computer readable storage media storing computer executable instructions which when executed by the computer perform the routines and described with regard to respectively.

The computer may also include an input output controller for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly the input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that the computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

Based on the foregoing it should be appreciated that technologies for post attack MITM detection have been presented herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

