---

title: Copying data onto an expandable memory
abstract: This document describes a method for synchronizing files on an expandable memory card coupled to a first computing device with an application running on a second computing device, where downloading of files is performed wirelessly without user involvement.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09495323&OS=09495323&RS=09495323
owner: Microsoft Corporation
number: 09495323
owner_city: Redmond
owner_country: US
publication_date: 20130201
---
This application is a continuation of and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 12 069 884 filed on Feb. 12 2008 the disclosure of which is incorporated by reference herein in its entirety.

The use of wireless devices has become an increasingly important part of everyday life. Wireless devices have become popular due to their portability convenience and ease of use. Today wireless devices are used for a myriad of different applications including telephony email personal digital assistants PDAs as well as a variety of other functions and services. Integrated circuit technology has allowed for the miniaturization of circuits into smaller and smaller form factors which has enabled additional functionality to be made available on wireless devices. Additionally decreasing memory sizes have permitted wireless devices to store larger amounts of information. As a result wireless networks are rapidly expanding bandwidth and services to accommodate this increase in wireless information and functionality.

Wireless devices today are capable of sending and receiving electronic messages as well as performing other personal information management PIM functions. For example many wireless services allow the storage of user specific information on a user s wireless device such as calendar contacts etc. Further wireless devices are now being used for taking and storing pictures listening to audio files and watching video files. The increase in functionality has led to larger file sizes. One limitation of current wireless networks however is that wireless networks have limited bandwidth and since file sizes are becoming larger it has become increasingly important to manage transmission of information over wireless networks.

Wireless networks can send and receive information at a much lower rate than most wired networks today. This limited bandwidth of wireless networks is due primarily to the range in which wireless devices are operated. Users of wireless devices may be remote to the supporting wireless service and depending on the service the coverage area may be limited in some areas. Because of this many functions desired by wireless users may require too much bandwidth for practical use. For example sending and receiving pictures stored on a wireless device may take up to 500 kilobytes kb or more of network bandwidth. On many of today s networks such a bandwidth limitation leads to excessively long download times. This situation becomes even worse for sending and receiving larger files over the wireless network such as audio and video files. Accordingly what is needed is a method to send and receive large files over a wireless network over time with limited user involvement.

A method and apparatus implemented over a wireless network is described for copying files stored on an expandable memory of a wireless device onto an application running on a computer desktop where files are automatically transmitted over a data network whenever they are copied into the desktop application. The files are then transmitted to a wireless service where they are transmitted wirelessly over time to the wireless device for downloading.

Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the various embodiments described herein. It will be apparent however to one skilled in the art that these embodiments may be practiced without some of these specific details. In other instances well known structures and devices are shown in block diagram form to avoid obscuring the underlying principles of these embodiments.

References in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. When a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to affect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

In the following description and claims the terms coupled and connected along with their derivatives may be used. It should be understood that these terms are not intended to be synonymous with each other. Rather in particular embodiments connected may be used to indicate that two or more elements are in direct physical or electrical contact with each other. Coupled may mean that two or more elements are in direct physical or electrical contact. However coupled may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other.

Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Various embodiments also relate to apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a computer system bus.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the various embodiments are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the various embodiments described herein.

Various embodiments of copying data onto an expandable memory may be implemented on a wireless device which communicates with a data processing service as illustrated generally in . Embodiments of a service and data processing device are described in U.S. Pat. No. 6 721 804 entitled NPS AM Ser. No. 09 714 897 filed Nov. 15 2000 which is assigned to the assignee of the present application and which is incorporated herein by reference. Certain features of the service and an exemplary data processing device will now be described followed by a detailed description of a system and method for copying data onto an expandable memory card in a wireless device over a wireless network using a desktop interface application. As an initial matter however it should be noted that the specific data processing device and system architecture described in U.S. Pat. No. 6 721 804 are not required for implementing the underlying principles of the various embodiments described herein. Rather the embodiments described below may be implemented on virtually any type of data processing device including standard personal computers personal digital assistants and wireless telephones.

In one embodiment the service converts standard applications and data into a format which each data processing device can properly interpret. Thus as illustrated in one embodiment of the service includes content conversion logic for processing requests for Internet content . More particularly service acts as a proxy for the data processing device forwarding Internet requests and to the appropriate Internet site on behalf of the data processing device receiving responses from the Internet site in a standard Internet format e.g. web pages with embedded audio video and graphical content e mail messages with attachments . . . etc and converting the standard Internet responses into a format which the data processing device can process e.g. bytecodes as described in the co pending applications .

For example the conversion logic may include a hypertext markup language HTML rendering module not shown for interpreting HTML code and downloading any embedded content in the HTML code e.g. graphics video sound . . . etc to the service . The conversion logic may then combine the HTML code and embedded content and generate a set of bytecodes for accurately reproducing the requested content on the data processing device . As described above in one embodiment the bytecodes may be Java bytecodes applets. However the conversion logic may generate various other types of interpreted and or non interpreted code depending on the particular type of data processing device being used e.g. one with an interpreter module or one without .

Because one embodiment of the service maintains an intimate knowledge of the capabilities configuration of each data processing device e.g. screen size graphics audio capabilities available memory processing power user preferences . . . etc it can reconstruct the requested Internet content accurately for the particular device characteristic while at the same time minimizing the bandwidth required to transmit the content to the device . For example the conversion logic may perform pre scaling and color depth adjustments to the requested content so that it will be rendered properly within the data processing device s s display. In making these calculations the conversion may factor in the memory and processing power available on the data processing device . In addition the conversion logic may compress the requested content using a variety of compression techniques and thereby preserve network bandwidth.

Referring now to which illustrates a wireless data processing network according to one embodiment. The data processing network includes wireless data processing device wireless network service data network and a user s personal computer PC . Data network can be any network amenable to sending and receiving packetized information and may include a set of one or more Application Programming Interfaces APIs which are a set of routines protocols and tools that define how service is invoked through a software application such as a Java applet not shown . Wireless device sends and receives messages files and other content to and from service through wireless network . Wireless device includes interface which provides a conduit between wireless network and the functionality operable on wireless device .

Wireless device may include a variety of functions. For example illustrates wireless device comprising the following functionality email instant messaging calendar address book and telephony . The various embodiments however are not so limited and may include other functionality known in the art such as taking pictures listening to audio files watching video files and etc. Service includes electronic circuitry not shown that communicates over wireless network . Additionally service includes circuitry not shown to communicate over data network to the user s PC. For example wireless device sends and receives messages calls and synchronization updates to wireless service over wireless network . Wireless service in turn transmits this information over data network to the user s PC. This process also works in reverse where information passed from the user s PC to the service over data network is sent to wireless device over wireless network . Details of this mechanism are further discussed below.

Referring now to which illustrates system according to one embodiment. System includes computer desktop data network service wireless network and wireless device . In system service communicates with both desktop interface module running on the user s desktop and with the user s wireless device . Service includes dispatcher file proxy and user database according to one embodiment. Wireless device includes wireless transceiver file daemon module and expandable memory card coupled to wireless device through expandable memory interface . Computer desktop includes desktop interface module and Java applet module .

Desktop interface in one embodiment is a web page running on desktop . In this embodiment desktop interface provides a view onto user database of service . For example user specific information and other metadata is stored in user database at service and may include such information as calendar contacts etc. This information is synchronized with desktop interface so that a user may view the information contained in database using desktop interface . Additionally desktop interface may require a username and password to access service over data network .

In one embodiment information is stored in different locations in wireless device . One memory location is in volatile memory built into the device itself not shown . This memory like other volatile memories may have faster access times but any information stored therein will be lost whenever power to the device is shut off. Another memory location is a non volatile memory such as Flash memory built into the wireless device . In one embodiment the contents of the built in device memories are synchronized with service . Information stored in the device memories therefore will always be available on the service and may be accessed via another computing device such as a desktop computer .

Another memory location where information is stored on device is on the expandable memory card inserted into device via expandable memory interface . In one embodiment unlike information stored in the built in memory of the device itself information stored in expandable memory card is not synchronized with the desktop interface . Expandable memory card may be any type of expandable memory known in the art including Secure Digital SD cards microSD cards ISK3 etc. Information stored in expandable memory card is stored in non volatile memory which is not lost whenever the device is powered down.

As illustrated in in one embodiment the desktop interface includes a Java applet through which data may be copied onto expandable memory card . Java applet in one embodiment is an application running inside desktop interface on desktop and provides a folder view of files and other data stored on expandable memory card inserted in wireless device . The described embodiments however are not so limited and may include any application running on user s desktop which may or may not be embedded within desktop interface . For example Java applet may be implemented as a stand alone Java application. In addition Java applet is not limited to Java program code and may be any application amenable to running on desktop .

From Java applet files may be copied onto expandable memory card and or onto the built in non volatile memory not shown . As discussed above in one embodiment Java applet includes a folder view of the data stored on expandable memory card . One embodiment of the folder view is illustrated in . The folder view provides a window in which to copy files that the user desires to have loaded onto expandable memory card and or the built in non volatile memory . Any type of files may be copied into the folder view of Java applet module including data PDF pictures music video files etc. In one embodiment files may be copied into Java applet by dragging and dropping file identifiers using a screen pointer control device such as a mouse not shown from a location on desktop into the folder view of Java applet . The file identifiers may include icons filenames or other identifiers known in the art. The file identifiers may be stored in one or more other folders located on desktop . Once a file identifier corresponding to a file located on the user s desktop is copied into the folder view of Java applet running on desktop or within desktop interface running on desktop it is automatically transmitted over data network to service .

In one embodiment the desktop interface module is linked to the service through an adapter based Web services interface such as the one described in the co pending U.S. application entitled SYSTEM AND METHOD FOR MANAGING WEB SERVICES DATA AND PRESENCE DATA RELATED TO A PLURALITY OF USERS Ser. No. 12 069 970 Filed Feb. 13 2008 which is assigned to the assignee of the present application and which is incorporated herein by reference. In particular as illustrated in in one embodiment the desktop interface module and Java applet communicate with the service through a desktop interface adapter . also illustrates one embodiment of the Web Service integration proxy employed within the service . In the illustrated embodiment the Web Service integration proxy includes a local Web Services proxy i.e. local in this sense that it runs on the service a plurality of Web Services adapters communicably connected to the Web Services proxy and an authentication proxy for performing the authentication operations described herein.

Certain Web Services exchange information with clients and servers on the Internet using various protocols and encodings for example the Simple Object Access Protocol SOAP . SOAP is a message based protocol which employs an XML syntax to send text commands across the Internet using the Hypertext Transport Protocol HTTP . Other Web Services protocols such as XML RPC and REST Representational State Transfer may also be used consistent with the underlying principles of the various embodiments described herein.

Although most Web Services use these standard protocols many Web Services employs their own specific format e.g. data schema and rules for communication which must be followed in order to communicate with those Web services. In addition each Web service employs its own unique API i.e. the set of functions and interfaces exposed by the Web service. Thus in one embodiment a separate Web Services adapter is used to communicate with Web Services proxies and client based Web services programs e.g. desktop interface using the formats require by those proxies programs. In addition as illustrated in one embodiment includes a global or default Web Services adapter for communicating with web services using standardized i.e. non proprietary Web Services communication formats.

The Web Services adapters are plugged in to the Web Services Proxy through an API exposed by the Web Services Proxy . Each of the Web Services adapters exchange data and program code with the Web Services Proxy Web Services proxy via this API.

In operation each adapter communicates with a particular Web Service or program e.g. the desktop interface using the data schema required by that Web service or program. The adapter provides the data to the Web Services proxy via the Web Services proxy API. In one embodiment the adapter may also convert the data into a format interpretable by the Web Services proxy . The Web Services proxy extracts the underlying data and encapsulates the data into the communication format required for communicating to the wireless device . If the wireless device is currently online then the dispatcher to which the wireless device is currently connected transmits the data to the wireless device using an asynchronous protocol specifically adapted for transmission over high latency networks e.g. wireless networks . For upstream communication when the user of the wireless device transmits information to the Web Service or program the information is transmitted through the dispatcher using the same protocol. The Web Services proxy extracts the information and communicates the information to the appropriate Web Services adapter via the Web Service proxy API. The Web Services adapter then communicates the new information to its associated Web Service or program using the required data schema and other communication standards required by the Web Service or program.

One notable benefit of this architecture is that if a particular Web Services proxy or program e.g. the desktop interface modifies its communication standards protocol then only the specific adapter for that web services proxy needs to be modified or replaced. The remaining software executed on the Web Services Proxy and each of the wireless devices does not need to be changed. Thus the network bandwidth as well as the engineering time which would normally be required to upgrade each individual wireless device is conserved.

A process according to one embodiment is illustrated in method of . In one embodiment the method shown in is executed within the context of the adapter based architecture shown in . However this particular architecture is not required for implementing the underlying principles of the various embodiments.

At step the user copies or moves files from the user s computer desktop into the folder view of Java applet . The copied files are then immediately and automatically transmitted over data network and received by dispatcher of service in step . Dispatcher is configured to send and receive information over both data network and wireless network . Dispatcher receives the automatically transmitted files from Java applet and forwards them to file proxy module where the files are temporarily stored before they are transmitted to device for storage on expandable memory card . File proxy in one embodiment is a service application that performs the synchronization between the built in device memory and service as discussed above. Additionally file proxy is operable to transcode files. Transcoding may be either performed as necessary or as desired by the user. Transcoding files involves changing the formatting or quality of a file without changing the content itself. In some embodiments transcoding may be performed so that a file may be displayed in such a way as to be compatible with the device with which it is being used. Additionally a large file may be transcoded to lower quality so that it may be downloaded faster over a wireless network such as wireless network . In one embodiment the transcoding is performed at file Proxy . File proxy knows to transcode certain files based on built in knowledge of the user s particular wireless device. For example a large MP3 file may be changed to low quality or to a different format that is capable of faster transmission over wireless network . In another embodiment the transcoding may take place at Java applet before it is transmitted to file proxy of service . For example a very large MP3 audio file may be dragged and dropped into the folder view in Java applet where it will be automatically sent to service in a different format chosen in advance to be more compatible with the user s specific model or type of wireless device such as wireless device . In either case however the files are transcoded to the appropriate format before they are transmitted to wireless device over wireless network .

In step File proxy via dispatcher transmits the files to wireless device via wireless network where they are received at transceiver . Transceiver is operable to send and receive information over a wireless network such as wireless network . Wireless transceiver is coupled to file daemon module which is always listening for information broadcast from service over wireless network . A file daemon such as file daemon works in the background and is transparent to the user. File daemon is coupled to expandable memory card via expandable memory interface . At step when file daemon receives the files transmitted over wireless network file daemon writes the files to expandable memory card via expandable memory interface . At step device sends an acknowledgement signal over wireless network to service indicating that downloading is completed. Service receives the acknowledgement signal and transmits the acknowledgement signal to Java applet over data network . Once the acknowledgement signal is received by Java applet it may be displayed to the user in various ways. One way for example is for Java applet to include a status viewer where the progress of a particular download could be tracked visually by a user. Additionally wireless device may also include a status viewer not shown that shows the progress of information being downloaded onto expandable memory card . In other embodiments wireless device may include a status viewer that includes information such as date and time a particular download completed and whether there were any errors detected in transmission.

In this manner files desired by the user to be placed on expandable memory card can be done so wirelessly. All a user needs to do is copy the desired files into the folder view of Java applet and the files will be instantly and automatically downloaded over time to expandable memory card through service . One of the advantages of this process is that there is no need for a user to take expandable memory card out of wireless device and plug it into the user s computer e.g. through a Universal Serial Bus connection . Another advantage of this approach is that files that used to be prohibitively large for downloading purposes over a wireless network can be accomplished over time without user management. This allows the user to perform other tasks while large files are downloading onto the user s wireless device. For example just before driving to work a user may drag a set of audio files such as MP3 files from desktop and drop the set of files into the folder view of Java applet . In this embodiment these files will be automatically downloaded onto expandable memory without further user management.

The above process also works in reverse. Files stored on expandable memory card may be downloaded onto the user s desktop by copying desired files from the folder view of Java applet onto desktop or some other file or folder on desktop . In addition whenever a change is made to the contents of expandable memory a process is initiated to update the folder view of Java applet . Whenever files are added modified or deleted from expandable memory card the folder view of Java applet is updated with to accurately reflect the current contents of expandable memory . Likewise files may be deleted from within the folder view of Java applet . As a result whenever files are copied modified or deleted from the folder view of Java applet that file will be added modified or deleted respectively from expandable memory and vice versa so that the folder view in Java applet accurately reflects the data stored on expandable memory card .

As a result files contained in the folder view of Java applet are those stored on whatever expandable memory card is currently inserted in wireless device . Whenever a user switches to a new expandable memory card a new folder view is created in Java applet . This process described below is performed each time Java application is launched or the user switches to a new expandable memory card. Method of illustrates the process at the time when Java applet is first launched. The current directory of filenames stored on expandable memory card is continuously communicated from device to file proxy of service at step . At step whenever Java applet is launched a signal is automatically sent over data network to file proxy via dispatcher of service . At step when file proxy receives the launch signal from Java applet file proxy the current directory of filenames to Java applet . At step Java applet is updated with the current directory of filenames that reflects the data currently stored within the expandable memory card of wireless device .

As a result of the above Java applet is updated with the most recent data stored on expandable memory card every time Java applet is launched. Additionally service is also notified as to whether expandable memory card is installed how much memory is currently available and other relevant information.

In some embodiments downloading or uploading can be restarted from wherever it left off when there is a disruption in the wireless connection. For example if a user of wireless device moves to a location out of range of wireless network in the middle of a download upload the files will just pick up downloading uploading where they left off when the user moves back into range. This allows for the seamless downloading of files using Java applet with minimal user involvement and allows prohibitively large files to be downloaded wirelessly without the need for removing expandable memory from wireless device .

Embodiments may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

These processes are performed by processing logic that may comprise hardware circuitry dedicated logic etc. software such as is run on a general purpose computer system or a dedicated machine or a combination of both.

Elements of the various embodiments may also be provided as a machine storage medium for storing the machine executable instructions. The machine storage medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards or other type of media machine readable medium suitable for storing electronic instructions. For example one or more of the claimed embodiments may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of copying data onto an expandable memory. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example although the embodiments described above are described with reference to a wireless implementation the underlying principles of copying data onto an expandable memory may be employed in a variety of different types of networks. Similarly while the protocol stack described above is implemented using Java the underlying principles of copying data onto an expandable memory is not limited to any particular programming language.

