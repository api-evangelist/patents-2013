---

title: Systems and methods for licensing of mobile applications
abstract: System and methods for licensing of dynamic mobile applications are disclosed herein. In one embodiment, a non-transitory computer readable medium storing executable instructions is provided. The instructions, when executed by a processor, cause the processor to communicatively couple to a mobile device and to receive a user login, a user password, and a client identification from the mobile device. The instructions additionally cause the processor to validate a client as a licensed client based on the based on the user login, user password, and client identification and to derive a connectivity data based on the user login, user password, and client identification if the client is a valid licensed client, wherein the connectivity data comprises a first connectivity data configured to communicatively couple the mobile device to a first system; and wherein the mobile device is configured to download a first API from the first system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09256718&OS=09256718&RS=09256718
owner: 
number: 09256718
owner_city: 
owner_country: 
publication_date: 20130913
---
The subject matter disclosed herein relates to mobile application systems and particularly to systems and methods for licensing mobile application processing.

Certain mobile devices such as cell phones tablets and the like may include or otherwise download applications suitable for executing certain processes. For example mobile phones may execute applications useful in executing workflows associated with business process such as enterprise resource planning ERP processes. The applications may be delivered for example via an app store and downloaded to the mobile device. The mobile device may then execute the downloaded application to provide for desired functionality e.g. the execution of the workflows. During continued business operations the workflows and process may change. It would be beneficial to provide for improved systems and methods that incorporate changes to workflows and processes.

Certain embodiments commensurate in scope with the originally claimed invention are summarized below. These embodiments are not intended to limit the scope of the claimed invention but rather these embodiments are intended only to provide a brief summary of possible forms of the invention. Indeed the invention may encompass a variety of forms that may be similar to or different from the embodiments set forth below.

In a first embodiment a non transitory computer readable medium storing executable instructions is provided. The instructions when executed by a processor cause the processor to communicatively couple to a mobile device and to receive a user login a user password and a client identification from the mobile device. The instructions additionally cause the processor to validate a client as a licensed client based on the based on the user login user password and client identification and to derive a connectivity data based on the user login user password and client identification if the client is a valid licensed client wherein the connectivity data comprises a first connectivity data configured to communicatively couple the mobile device to a first system and wherein the mobile device is configured to download a first API from the first system.

In a second embodiment a system is provided. The system includes a processor configured to communicatively couple to a mobile device and to receive a user login a user password and a client identification from the mobile device. The processor is additionally configured to validate a client as a licensed client based on the based on the user login user password and client identification. The processor is further configured to derive a connectivity data based on the user login user password and client identification if the client is a valid licensed client wherein the connectivity data comprises a first connectivity data configured to communicatively couple the mobile device to a first system and wherein the mobile device is configured to download a first API from the first system.

In a third embodiment a method is provided. The method includes communicatively coupling a license server to a mobile device. The method additionally includes receiving from the mobile device a user login a user password and a client identification. The method further includes validating via the license server a client as a licensed client based on the based on the user login user password and client identification. The method also includes deriving via the license server a connectivity data based on the user login user password and client identification if the client is a valid licensed client wherein the connectivity data comprises a first connectivity data configured to communicatively couple the mobile device to a first system and wherein the mobile device is configured to download a first API from the first system.

One or more specific embodiments will be described below. In an effort to provide a concise description of these embodiments not all features of an actual implementation are described in the specification. It should be appreciated that in the development of any such actual implementation as in any engineering or design project numerous implementation specific decisions must be made to achieve the developers specific goals such as compliance with system related and business related constraints which may vary from one implementation to another. Moreover it should be appreciated that such a development effort might be complex and time consuming but would nevertheless be a routine undertaking of design fabrication and manufacture for those of ordinary skill having the benefit of this disclosure.

When introducing elements of various embodiments of the present invention the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Embodiments of the present disclosure may apply to a variety of mobile devices cell phones tablets smart eyeglasses watches and the like. Certain embodiments may also apply to desktop computers workstations notebooks laptops and so on. The techniques described herein provide for improved systems and methods suitable for dynamically reconfiguring or otherwise reprogramming the graphical user interface GUI and the business processes including workflows of the aforementioned devices. In one embodiment an application app store may host a mobile or desktop device application that includes certain reprogramming techniques. The application may be downloaded and executed by the mobile or desktop device and communicatively connected to a license server. The license server may validate the user and or mobile device and may then provide for communication information which may then enable the mobile device to communicatively couple with an external system such as an enterprise resource planning system ERP a financial system a supply chain management SCM system a manufacturing system or a combination thereof.

When the mobile is coupled to the external system the mobile device may retrieve an application programming interface API suitable for reprogramming the look and feel of the mobile application s GUI as well as reprogramming the processes included in the mobile application including workflows. In certain embodiments the entire API or portions of the API may be retrieved on every transaction between the mobile application and the external system such as transactions that read data transactions that write data e.g. inserts of the data updates of the data and deletes of the data or a combination thereof. In other embodiments only certain transactions or transaction types may trigger the retrieval of the API or portions of the API such as read transactions insert transactions update transactions delete transactions or a combination thereof. In yet another embodiment certain time periods e.g. 1 minute 1 hour 1 day 1 week may be used to trigger the download of the API or portions of the API into the application.

Additionally a customization system may be provided suitable for reconfiguring the API based on changes to certain processes. The customization system may enable an organization to customize the GUI presented by the application as well as the business processes executable by the application and the customization may then be saved onto the API for transmission to the application. In certain embodiments only the delta differences e.g. the differences between the previous API and the changes to the latest API are transmitted to the application thus minimizing communications and memory overhead. In other embodiments all of the API may always be transmitted.

Turning now to the figure is a block diagram of an embodiment of a mobile device which may be communicatively coupled to a License Server and an enterprise resource planning ERP system a financial or accounting system other external systems and or a middleware server . The mobile device may include for example a cell phone a tablet smart eyewear a smart wristwatch or a combination thereof. In other embodiments other computing devices such as a computer a work station a notebook a laptop and so on may be used additionally or alternatively to the mobile device . In the depicted embodiment an application app store is depicted. The app store may include a variety of processor executable programs or applications suitable for execution by the mobile device or other computing device. As depicted the app store may be communicatively coupled to the mobile device through a cloud system . The cloud may include the internet a local area network LAN a wide area network WAN or a combination thereof suitable for establishing communication between the mobile device and the app store . In use the mobile device may communicate with the app store to download a dynamic application . The dynamic application may include executable code suitable for execution by via a processor included in the mobile device and may be stored in a non transitory computer readable medium e.g. flash memory solid state drive hard drive such as a memory also included in the mobile device .

The dynamic application may include certain processes useful in interfacing with the systems and or . For example unlike a web browser the application may include compiled client processes or programs suitable for communicatively coupling the mobile device to the systems and executing a variety of processes such as human capital management HCM processes supplier relationship management SRM processes supply chain management SCM processes financial and accounting processes and a variety of services automation processes e.g. project portfolio management project analytics program management resource management proposal management project costing project discovery billing contracts expenses grants . Also unlike a web browser the application may communicate directly with the systems and or without going through a web browser thus improving security and minimizing communications overhead. Indeed the application may include client side support for executing via the mobile device and or the systems and or a variety of processes useful in data processing. Each of the systems and may include a respective data repository and suitable for storing and retrieving data such as a relational database a network database a cloud storage a file system or a combination thereof. The data repositories and or may also include security techniques such as encrypted storage suitable for protection of the data stored therein.

In use the application may display a graphical user interface GUI as described in more detail below representative of the processes including workflows processes abstracting a variety of sequential and or non sequential steps representative of real work in an organization such as purchasing steps human resource steps supply chain management steps accounting steps manufacturing steps and so on suitable for performing work supported by the systems and or . For example HCM processes may enable for improved human resources functionalities that increase productivity and accelerate business performance and lower costs of ownership. SRM processes may enable improved supply chain management and decreased supply management costs. SCM processes may provide for increased flexibility and synchronization of the supply chain thus improving efficiencies and minimizing cost savings over the supply chain or portions of the chain. Services automation processes may provide for operational processes that support project life cycle management across operations from initial financing to project selection planning staffing through execution cost control and performance analysis. Accordingly a user may perform any number of processes supported by the systems and or in devices distant from the location of the aforementioned systems. By providing for remote operations via the mobile device the processes supported by the systems and or may be provided at any number of geographic locations more efficiently and in a more cost effective manner.

In one embodiment the application may include executable code such as compiled code e.g. compiled C C Java C Objective C . For example the application may include code compiled to target a certain operating system such as an Android operating system available from Google Inc. of Mountain View Calif. an iOS operating system available from Apple Inc. of Cupertino Calif. Windows or Windows derivative OS e.g. Windows Phone and or any other mobile device operating system. However customizations to provide variations in processes between entities e.g. company A company B company C would have resulted in each company recompiling the code and submitting the updated compilation to the app store as a different application . For example company A may desire to provide customizations related to how processes supported by the systems and or are typically performed at company A which may be different from processes provided by the systems and or but customized for company B and company C. Rather than provide for a plurality of different applications each application supporting a different company A company B company C and so on the techniques described herein allow for customization of the application without resorting to recompilation of the application and further uploading downloading from the app store . Likewise at least because of the compiled nature of the code changes in the processes supported by the code would have resulted in a recompilation of the code transmittal of the new version of the code to the app store and subsequent downloads to the mobile device .

Instead of recompiling each one of the systems and or may be provided with a customization system suitable for customizing various aspects of the application . For example the customization system may enable the creation of an API Data that includes a GUI sub API and or a process sub API suitable for dynamically changing both the GUI of the application as well as the behavior of the application without further compilation of the dynamic application . Indeed the API Data may be transmitted to the mobile device and used by the dynamic application to reconfigure the look and feel of the application as well as the behavior of the application when interacting with the systems and or . In this manner a client such as the company A may provide for a custom API Data different from an API Data provided by a company B and thus enable a customization for the company A of the GUI displayed by the dynamic application as well as customization of the processes supported by the application . By providing for a customizable API data the techniques described herein may more efficiently customize the GUI and or functionality of the dynamic application . Further licensing and customization systems are provided useful in managing data for a variety of entities e.g. companies A B C as described in more detail below.

As depicted the mobile device may first communicate with the license server by using a licensing login . The licensing login may include for example user login information e.g. username password as well as client login information e.g. company name related to the various entities supported by the systems and or such as company A company B and so on. Once the licensing login is received by the license server the license server may for example retrieve information from the data repository and use the information to verify that the user interacting with the mobile device has submitted appropriate licensing login information suitable for providing further services. When the user interacting with the mobile device has been verified through the submitted licensing login the license server may then transmit a licensing data back to the mobile device . The licensing data may include for example information suitable for further processing by the application such as a connectivity data .

The connectivity data may include information useful in communicatively coupling the mobile device to any one or more of the systems . That is the connectivity data may include data useful in connecting the mobile devices to multiple systems including the systems and . For example the connectivity data may include Peoplesoft connectivity information e.g. one or more Peoplesoft urls Oracle connection strings MS Sharepoint connection strings MS SQLServer connection strings Open Database Connectivity ODBC connection strings Java Database Connectivity JDBC connection strings service oriented architecture SOA services connectors or a combination thereof.

Accordingly the license server may both verify the mobile device as licensed to participate in certain processes well as provide for the connectivity data useful in connecting with any number of systems including the systems and or . Once connected each of the systems and or may then transmit the API Data to the mobile device . The dynamic application may then reconfigure itself in situ and without further recompilation by using the API Data to redraw the GUI and or to reprogram the processes used in interacting with the systems and or .

The middleware server may be included in any one of the systems and or or may be used as a standalone server . For example the middleware server may be incorporated as a subsystem of the ERP system and the server may contain the functionality of the customization system useful in modifying the API data alternatively to the customization system being included in the ERP system . Likewise the middleware server may be included in the systems and or a combination thereof. Providing the middleware server enables more efficient utilization of certain distributed server techniques such as message oriented middleware MOM techniques object request broker ORB techniques and or enterprise service bus ESB techniques useful in providing for enterprise services and or an abstraction layer e.g. customizable API abstraction layer for any of the systems and or . It is to be understood that each of the server and each of the systems and may each include a processor configured to execute any of the processes described herein as well as a memory configured to store computer instructions e.g. the executable processes .

Turning now to the figure is a flowchart of an embodiment of a process suitable for reconfiguring or otherwise reprogramming the dynamic application of the mobile device shown in above in situ and without recompiling the application . The process may be stored as computer instructions or executable code in the memory of the mobile device and executed by the processor .

In the depicted embodiment the process may download the application for example by utilizing the app store block . The process may then provide the licensing login and log in to the license server to download the license data block . Accordingly the license server may validate the licensing login by retrieving certain login and licensing data from the data repository and then the licensing server may provide the license data to the mobile device . As mentioned above the license data may include connectivity data . Accordingly the mobile device may use the connectivity data to communicatively couple to any one of the systems and or . For example the mobile device may connect block to a first system e.g. ERP system connect block to a second system e.g. financials system and additionally connect block to an Nth system e.g. other system .

As mentioned above the application may then issue a system request for example a request to read or write data or to perform a process action from any one of the systems and or . Upon receipt of the system request any one of the connected systems and or may then submit their respective API data block . That is each one of the connected systems N may have a customized API data and therefore the application may then receive one or more of the API data . Upon receipt of the API data the application may then reconfigure a respective GUI block for each one of the connected systems that may have provided the API data . Additionally or alternatively each of the API data may be used to reconfigure one or more processes block associated with the system that submitted the respective API data . By using the API data to reconfigure the GUI and or processes for connected systems a highly customizable application may be derived suitable for supporting a number of clients e.g. company A B C . The process may then iterate and issue another system request . Indeed in the depicted embodiment every system request read or write of data or process action may result in the downloading block of the API data and subsequent reconfiguration of the GUI block and desired processes block . In this manner the application may always reflect the latest customization provided via the API data .

If the process determines decision that the licensing request is not valid the process may inform the user for retransmission of the licensing login . If multiple attempts include incorrect licensing login the process may prevent any further login attempts and place the mobile device in a holding queue for a desired period of time e.g. 10 minutes 1 hour 2 hours 1 day . When placed in the holding queue any login requests from the mobile device may be ignored. In other embodiments no holding queue may be used and the any number of login attempts may be processed. If the process determines decision that the licensing request e.g. licensing login is valid the process may then retrieve block licensing data for a first system e.g. system retrieve block licensing data for a second system e.g. system and retrieve block licensing data for an Nth system e.g. system . Indeed because each client e.g. company A may use multiple systems the licensing server may store multiple connectivity data at least one for each of the systems and or that the client may have installed. Accordingly each of the connectivity data one or more for each system and or may be combined block into a single licensing data message and transmitted back to the mobile device . By validating the licensing login retrieving and combining client specific connectivity data and transmitting the licensing data back to the mobile device the license server may provide for an improved login process suitable for connecting the mobile device to a variety of systems e.g. systems and or .

If customization of the process underlying the customized GUI is desired a list of process templates may then be provided block . The list may include processes that the GUI undergoing customization may interact with. Accordingly these processes may also be selected block for customization. Templates may include workflows and or processes related to HCM processes SRM processes SCM processes financial and accounting processes and a variety of services automation processes e.g. project portfolio management project analytics program management resource management proposal management project costing project discovery billing contracts expenses grants . In one embodiment the templates and initial uncustomized GUI may be provided by a manufacturer of the systems and or such as Oracle Microsoft SAP by the provider of the license server or a combination thereof.

During customization steps in the template may be reordered block for example step may be moved in front of step or a step that was sequential may be converted into asynchronous or vice versa. Likewise the functionality of the step may be modified block . For example the step may execute a SQL query insert update or delete query and the SQL query may be modified to provide for a more customized result or action. The process may then combine block the GUI customization and process customization into the API data . As mentioned above in one embodiment the API data may be transmitted to the mobile device for example every time that the mobile device interacts with the systems and or . Accordingly changes to the API data for example by using the process may be more easily and efficiently distributed.

The API may be provided in various formats including tokenized strings binary formats XML text based formats and the like. One non limiting API example using XML as a format is as follows 

In the depicted embodiment the display further includes a record or table name text box that may be used to retrieve data useful in populating the columns and . In one embodiment by typing data into the text box e.g. text string REQ HDR the screen may execute a query suitable for retrieving data for the columns and . In one embodiment the query may include a SQL view such as a view that may include certain relational algebra e.g. conditional query conditions abstracting one or more tables into single virtual table. The query may retrieve data from the repositories and or and then populate the columns and . Other query types may be used including parameterized queries object based queries and so on. Activating a control button may then sort the queried data in the same order that will be shown when displayed in the application .

Column may be representative of a field number while column may be representative of a name for the field. Column may provide for checkmarks denoting which fields may be used as unique keys. That is the fields checked on column in combination may provide for a unique key useful in identifying a row of data in the SQL view. Column may be used to select whether or not the particular field is presented by the GUI of the application . That is fields selected via a checkmark may be presented by the GUI and manipulated by the application . Unselected fields may not be presented and thus may not be seen or used by a user interacting with the application .

Column may be used to provide a customizable text used to display the particular field in the GUI. The user may enter any desired text and the GUI may then display the typed text when displaying data associated with the field. Column may provide for an ordering of the presentation of the respective fields of data. For example an order of 1 may present the field first 2 may present the field second and so on. Accordingly the client may customize the order of the fields presented by the GUI. Column may be representative of a width for the text boxes when displayed on the GUI. Accordingly the client may enter a desired width and the text box may be reshaped by the GUI to the desired width.

In the depicted embodiment the display further includes a record or table name text box that may be used to retrieve data useful in populating the columns and . In one embodiment by typing data into the text box e.g. text string Z WL REQ LINE the screen may execute a query suitable for retrieving data for the columns and . In one embodiment the query may include a SQL view such as a view that may include certain relational algebra e.g. conditional query conditions abstracting one or more tables into single virtual table. The query may retrieve data from the repositories and or and then populate the columns and . Other query types may be used including parameterized queries object based queries and so on. Activating a control button may then sort the queried data in the same order that will be shown when displayed in the application .

Column may be representative of a field number while column may be representative of a name for the field. Column may provide for checkmarks denoting which fields may be used as unique keys. That is the fields checked on column in combination may provide for a unique key useful in identifying a row of data in the SQL view. Column may be used to select whether or not the particular field is presented by the GUI of the application . That is fields selected via a checkmark may be presented by the GUI and manipulated by the application . Unselected fields may not be presented and thus may not be seen or used by a user interacting with the application .

Column may be used to provide a customizable text used to display the particular field in the GUI at a line level. The user may enter any desired text and the GUI may then display the typed text when displaying data associated with the field. Column may provide for an ordering of the presentation of the respective fields of data. For example an order of 1 may present the field first 2 may present the field second and so on. Accordingly the client may customize the order of the fields presented by the GUI. Column may be representative of a width for the text boxes when displayed on the GUI. Accordingly the client may enter a desired width and the text box may be reshaped by the GUI to the desired width.

In the depicted embodiment the display further includes a record or table name text box that may be used to retrieve data useful in populating the columns . In one embodiment by typing data into the text box e.g. text string Z WL REQ DISTIB the screen may execute a query suitable for retrieving data for the columns . In one embodiment the query may include a SQL view such as a view that may include certain relational algebra e.g. conditional query conditions abstracting one or more tables into single virtual table. The query may retrieve data from the repositories and or and then populate the columns . Other query types may be used including parameterized queries object based queries and so on. Activating a control button may then sort the queried data in the same order that will be shown when displayed in the application .

Column may be representative of a field number while column may be representative of a name for the field. Column may provide for checkmarks denoting which fields may be used as unique keys. That is the fields checked on column in combination may provide for a unique key useful in identifying a row of data in the SQL view. Column may be used to select whether or not the particular field is presented by the GUI of the application . That is fields selected via a checkmark may be presented by the GUI and manipulated by the application . Unselected fields may not be presented and thus may not be seen or used by a user interacting with the application .

Column may be used to provide a customizable text used to display the particular field in the GUI at a line level. The user may enter any desired text and the GUI may then display the typed text when displaying data associated with the field. Column may provide for an ordering of the presentation of the respective fields of data. For example an order of 1 may present the field first 2 may present the field second and so on. Accordingly the client may customize the order of the fields presented by the GUI. Column may be representative of a width for the text boxes when displayed on the GUI. Accordingly the client may enter a desired width and the text box may be reshaped by the GUI to the desired width. In one embodiment the displays and may be provided by the same executable code. That is the display may be converted into the display by selecting the line level option via the dropdown . Likewise the display may be converted into the display by selecting the detail distrib line level option via the dropdown . By providing for the displays and the techniques described herein may provide for a customization of a variety of processes and workflows for example supported by the systems and or .

For example illustrates an embodiment of a selection screen that may be displayed by the mobile device once the mobile device has connected to any one or more of the systems and or and downloaded the API data . The screen may be provided as code stored in the memory and executed by the processor . The API data may then instruct the application to display a header section and a footer section having desired textual and or graphical items such as the text header list and footer respectively. The application may also display a list of headers based on the data associated with an approval process. The user may select one of the headers and the application may then display a workflow screen as depicted in . More specifically depicts and embodiment of a workflow screen suitable for approving various items. The screen may be provided as code stored in the memory and executed by the processor . The screen may include a section useful in presenting various controls as described in more detail below to approve or deny certain items during for example a purchasing workflow.

In the depicted embodiment the application may retrieve a plurality of line items based on the header or selected in above. Each line item may include a respective checkbox . Accordingly the user may select one or more of the checkboxes and then activate the button to approve the item s or the button to deny the item s . To navigate back to the screen a back button may be activated. As mentioned above the dynamic application may reconfigure presentation accordingly each of the textual items and may have been selected to be displayed by the screen and additionally may have been customized to be displayed in the depicted order. Indeed by providing for the customization system suitable for customizing processes and workflows via the API and the dynamic application the techniques described herein may provide for the client e.g. company A a more organization centric mobile application thus improving workflow efficiency.

Technical effects include a dynamic application useful for providing one or more graphical user interfaces customizable for multiple clients. Technical effects additionally include a license server suitable for validating user and client data and for transmitting connectivity information once the aforementioned data is validated. Technical effects further include a customization system that provides customization of an application programming interface API data so that the API data may be incorporated into the dynamic application without recompilation and used to customize a GUI a process or a combination thereof.

This written description uses examples to disclose the invention including the best mode and also to enable any person skilled in the art to practice the invention including making and using any devices or systems and performing any incorporated methods. The patentable scope of the invention is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal languages of the claims.

