---

title: System and method for searching for points of interest along a route
abstract: A method and system for searching for points of interest along a route is disclosed. A relation that includes records that associate link identifiers, point of interest identifiers, and distances between the links and the points of interest is generated during the compilation process of a first version of a geographic database. The relation is stored in compiled database products. When a compiled database product is being used by a navigation system, for example, navigation application software programs use the relation to accurately and efficiently find points of interest along a computed route.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08738288&OS=08738288&RS=08738288
owner: Navteq B.V.
number: 08738288
owner_city: Veldhoven
owner_country: NL
publication_date: 20131205
---
This application is a continuation under 37 C.F.R. 1.53 b and 35 U.S.C. 120 of U.S. patent application Ser. No. 13 332 608 filed Dec. 21 2011 the disclosure of which is incorporated herein by reference in its entirety. The present patent application is related to co pending patent application Ser. No. 13 332 602 entitled SYSTEM AND METHOD FOR USING SKYLINE QUERIES TO SEARCH FOR POINTS OF INTEREST ALONG A ROUTE filed on the same date.

The present invention relates generally to routing and more particularly relates to searching for a point of interest along a route.

Navigation systems are available that provide end users such as drivers and passengers of the vehicles in which the in vehicle navigation systems are installed with various navigation related functions and features. For example some navigation systems are able to determine an optimum route to travel by roads between locations in a geographic region. Using input from the end user and optionally from equipment that can determine one s physical location such as a GPS system a navigation system can examine various routes between two locations to determine an optimum route to travel from a starting location to a destination location in a geographic region.

The navigation system may then provide the end user with information about the optimum route in the form of guidance that identifies the driving maneuvers required to be taken by the end user to travel from the starting location to the destination location. The guidance may take the form of visual and or audio instructions that are provided along the way as the end user is traveling the route. Some navigation systems are able to show detailed maps on computer displays outlining routes to destinations the types of maneuvers to be taken at various locations along the routes locations of certain types of features and so on.

Some navigation systems can also search for points of interest POIs along a computed route. POIs are locations that may be of interest to a user of a navigation system. For example POIs include hotels restaurants museums stadiums airports hospitals parks and so on.

The navigation system may perform a spatial search to generate a list of POIs along the route. The spatial search finds all POIs that are within a certain Euclidean distance from any link of the calculated route. While a spatial search is efficient it is inaccurate because it does not consider topology.

To overcome the problems associated with a spatial search the navigation system may use topological relationships to obtain a more exact list of POIs along the route. For example the navigation system could use the Dijkstra algorithm for each link in the route and report all POIs that are found while exploring the neighborhood of the links. The Dijkstra algorithm stops either after a certain amount of POIs have been reported or after exploring all links within a distance from any link of the route. While this approach is more accurate it is much more time consuming and difficult to implement.

In order to provide these and other navigating functions navigation systems use geographic data. The geographic data may be in the form of one or more databases that include data that represent physical features in a geographic region. The geographic database may include data representing the roads and intersections in a geographic region and also may include information relating to the represented roads and intersections in the geographic region such as turn restrictions at intersections speed limits along the roads street names of the various roads address ranges along the roads and so on.

A method and system for searching for a point of interest along a route is disclosed. A compiler generates a relation that associates link identifiers point of interest identifiers and distances between the links and the points of interest. The compiler starts the process of generating the relation by selecting either a link or a point of interest from a first version of a geographic database. After selecting a link the compiler identifies the points of interest within a distance from the link using a routing algorithm. For each identified point of interest the compiler adds a record into the relation that includes the link s identifier the point of interest s identifier and the distance between the link and the point of interest. Alternatively the compiler selects a point of interest and identifies the links within a distance from the point of interest using a reverse routing algorithm. In either scenario the compiler repeats the process until all or a portion of the links or points of interest have been selected.

The relation is stored in a compiled database product such as a geographic database used on a navigation system platform e.g. in vehicle navigation system personal navigation device mobile telephone server with mapping application . As a result of the relation being stored in the geographic database the navigation system can accurately find points of interest along a calculated route or a current location efficiently.

These as well as other aspects and advantages will become apparent to those of ordinary skill in the art by reading the following detailed description with reference where appropriate to the accompanying drawings. Further it is understood that this summary is merely an example and is not intended to limit the scope of the invention as claimed.

The master version of the geographic database includes data about a road network located in the coverage area. The data about the road network include various kinds of information such as the geographic coordinates of positions of the roads street names of the roads addresses ranges along the roads turn restrictions at intersections of roads and so on.

The master version of the geographic database also includes data about points of interest in the covered area. Points of interest may include hotels restaurants museums stadiums offices automobile dealerships auto repair shops etc. The master version of the geographic database may include data about the locations of these points of interests. The master version of the geographic database may also include data about places such as cities towns or other communities. The master version of the geographic database may include other kinds of information.

The master version of the geographic database is maintained as the copy that has the most up to date data relating to the coverage area. Accordingly the master version of the geographic database is updated expanded and or otherwise modified on a regular and continuing basis. To facilitate these operations the master version of the geographic database is stored in a format that facilitates updating maintenance and development. For example the data in the master version may be uncompressed. Examples of suitable formats include Oracle Spatial and VSAM although other formats both proprietary and non proprietary including GDF may be suitable. In general the format of the master database is not suitable for use in navigation systems.

The master version of the geographic database is used to make compiled database products . In one method of operation data from the master version of the geographic database is first compiled into an intermediate or delivery format such as GDF. Then the database in the intermediate or delivery format is used to make the compiled database products . The compiled database products are made using a compiler . The compiler is a software program run on an appropriate computer platform. The compiler obtains geographic data from the intermediate format database which was formed from the master geographic database and organizes the data into a format or formats to produce the compiled or working version of the geographic databases . The format of the compiled geographic database products facilitates use of the geographic data in the end users systems for navigation related purposes.

The compiled database products may include only portions of all the data in the master version of the geographic database . For example the compiled database products may include data that relate to only one or more specific sub areas within the coverage area of the master version of the geographic database . Further the compiled database products may include fewer than all the data attributes that describe geographic features represented in the master version of the geographic database .

The compiled database products are used on various kinds of computing platforms. For example the compiled database products are used in navigation systems such as in vehicle navigation systems and hand held portable navigation systems personal computers including desktop and notebook computers and other kinds of devices such as tablets mobile telephones personal digital assistants and so on. The compiled database products are also used on networked computing platforms and environments including systems connected to the Internet.

The compiled database products are stored on media that are suitable for the hardware platforms on which they are used. For example the compiled database products may be stored on CD ROM disks hard drives DVD disks flash memory or other types of media that are available now or that become available in the future.

In the compiled database products the geographic data are organized differently than in the master or intermediate versions of the geographic database . A compiled database is organized arranged structured and stored in a form that facilitates the use of the data in the computing platform in which it is installed. A compiled database product may also be stored in a compressed format on the media on which it is located.

To facilitate the search of POIs along a route a new data attribute is stored in the compiled databases . This new attribute referred to as distance is generated by the compiler using data stored in the master or intermediate versions of the geographic database . The distance attribute is the distance between a link and a point of interest. A link represents a portion of a road. A point of interest is a location that a person may be interested in traveling to.

Also during compilation the compiler creates a relation that contains all links within a reasonable distance from a point of interest. The relation may be represented as Link2POI LinkID POIID Distance where Distance is the distance attribute. The reasonable distance value is provided as an input to the compiler . The value of the reasonable distance may be the expected maximum query distance. For example the reasonable distance may be three kilometers.

The Link2POI relation facilitates different types of POI searches. For example if a navigation system has calculated a route the navigation system can use the relation to identify all points of interest that are located along any link in the route. As another example if a point of interest is selected during destination selection the navigation system can use the relation to find all access links that serve as a destination for the routing algorithm.

The distance attribute and relation may be created using a routing algorithm as described with respect to or using a reverse routing algorithm as described with respect to .

For example at block the compiler selects a link having the link identifier LinkID of . At block the compiler uses the reasonable distance value of two kilometers to identify points of interest within that distance. Using a search algorithm the compiler identifies the points of interest having POI identifiers POIID and . POI is 0.650 km from link while POI is 1.450 km from link . At block the compiler inserts the records as depicted in Table 1.

At block the compiler determines whether there are more links in the first version of the geographic database that need to be searched. If there are more links the compiler returns to block . Otherwise the compilation process ends.

At block the compiler selects a POI represented in the first version of the database which may be the master version of the database or the intermediate version derived therefrom. At block the compiler identifies all links located within the reasonable distance value of the POI. At block for all identified links the compiler inserts a new record into the Link2POI relation. At block the compiler determines whether there are more POIs in the first version of the geographic database that need to be searched. If there are more POIs the compiler returns to block . Otherwise the compilation process ends.

At the completion of compilation the Link2POI relation is the same regardless of whether the compiler runs the compilation process or the compilation process . Depending on the number of links and POIs represented in the first version of the database the Link2POI relation can become quite large.

Binary Large Objects BLOBs may be used to reduce the size of the Link2POI relation. A BLOB is a collection of binary data stored as a single entity in a database management system. In one example the compiler stores the information contained in the Link2POI relation in a relation Link2BlobPOI LinkID BLOBPOI where BLOBPOI contains all POIs that are accessible from the link of this row within the reasonable distance. The BLOB may be encoded using a compressed binary encoding e.g. delta encoding of POI IDs and or delta encoding of the distance values. Additionally or alternatively the compiler may store the information contained in the Link2BLOBPOI relation using binary compressed BLOBPOI columns for example by using zlib.

In order to access the relation Link2BlobPOI LinkID BLOBPOI conveniently the compiler may generate a virtual table v Link2POI LinkID POIIID Distance on the basis of the table Link2BlobPOI LinkID BLOBPOI . The system querying the v Link2POI virtual table does so in a similar manner as described with respect to querying the relation Link2POI for example using SQL. When accessing the relation v Link2POI the virtual table reads from the table Link2BlobPOI the column BlobPOI and then provides the POIs and their distances through the table v Link2POI to the system performing the query.

Besides the smaller database size the use of the BLOBs has another advantage. As the table Link2BLOBPOI contains fewer entries than the table Link2POI there are also fewer entries stored in the B tree which is used for indexing the LinkID values in the tables Link2POI and Link2BLOBPOI. The less entries to be indexed the better for the SQL querying performance done by the navigation system and the inserting performance done by the compiler .

Note that instead of storing the binary encoded POIs and distances in a BLOB column of a relation they may also be stored directly as a flexible attribute of the link which is used in the navigation database standard NDS . Link attributes are described with respect to .

Another way of reducing the size of the Link2POI relation is to vary the reasonable distance value based on the type of road represented by a link. There are more points of interest in a city than in a rural area. Thus using a smaller reasonable distance value when compiling city streets reduces the size of the relation. For example the reasonable distance value may be one kilometer when compiling city streets and three kilometers when compiling highways. As another example the reasonable distance value may be proportional to the inverse of POI density.

Still another way for reducing the size of the Link2POI relation is to create another relation Link2Link. When there are multiple points of interest within a reasonable distance from a link a separate record is generated in the Link2POI relation for each POI. Instead of storing a separate record for each POI the compiler installs a single record in the Link2Link relation having the format Link2Link Link From Link To Distance and another record in the relation AccessLink4POIs LinkID POIID . The AccessLink4POIs relation is typically already available in a geographic database to identify the set of links from which a POI can be directly accessed. Now the Link2POI relation can be used in a view command as follows.

The geographic database is an example compiled database product produced by the compiler using one of the compilation processes . The geographic database contains at least one database record also referred to as entity or entry for each link also referred to as segment in a geographic region. The link data record includes a link ID by which the data record can be identified in the geographic database .

Each link data record has associated with it information such as attributes fields etc. that describes features of the represented road segment. For example the link data record includes a speed limit attribute that includes data indicating a speed limit or speed category i.e. the maximum permitted vehicular speed of travel on the represented road link. As another example the link data record includes a classification attribute that includes data indicating whether the represented road link is part of a controlled access road such as an expressway an arterial road or a local road. As there may be many other attributes associated with a link depicts an other data attribute .

Each road link is associated with two nodes. One node represents the point at one end of the road link and the other node represents the point at the other end of the road link. The node at either end of a road link may correspond to a location at which the road meets another road i.e. an intersection or where the road dead ends. Accordingly the link data record also includes a first node ID for the first end of the link and a second node ID for the second end of the link. The first node ID and the second node ID are also located in a node record .

As described the node record includes a node ID by which the data record can be identified in the geographic database . The node record also includes the geographic coordinates e.g. the latitude and longitude of the node. As there may be many other attributes associated with a node depicts an other data attribute .

Each road link may also be associated with one or more points of interest. Accordingly the link data record also includes a point of interest ID for each point of interest associated with the link. The point of interest ID is also located in a POI record .

The POI record includes a POI ID by which the data record can be identified in the geographic database . The POI record also includes the distance determined during the compilation process . The POI record may also include attributes for the type or category of a point of interest e.g. restaurant hotel city hall police station historical marker ATM golf course etc. the location of the point of interest a phone number hours of operation web page and so on. As there may be many other attributes associated with a point of interest depicts an other data attribute .

The geographic database also includes indexes . The indexes provide cross references search trees and or other data finding techniques. The indexes include the Link2POI relation and variations described herein. One variation to the Link2POI relation is adding additional columns.

For example the column Category may be added to the relation to support queries such as Give me all POIs along the route for a certain category. In this example the Link2POI relation has the format Link2POI LinkID POIID Category Distance . This example also works with the BLOB approach with the Link2BLOBPOI relation having the format Link2BLOBPOI LinkID Category BLOBPOI .

As another example the column Time may be added to the relation to support queries such as Give me all POIs that can be reached in five minutes. Data in the Time column is the time to travel from link having the LinkID to the POI having the POIID. In some systems the Time column may replace the Distance column in the Link2POI relation. This example also works with the BLOB approach as the relation Link2BLOBPOI LinkID BLOBPOI where the BLOBPOI column contains the time necessary to reach a POI from a certain link.

The navigation system also includes a positioning system . The positioning system may utilize GPS type technology a dead reckoning type system or combinations of these or other systems all of which are known in the art. The positioning system may include suitable sensing devices that measure the traveling distance speed direction orientation and so on. The positioning system may also include a GPS system. The positioning system outputs a signal to the processor . The navigation application software programs that run on the processor use the signal from the positioning system to determine the location direction orientation etc. of the computing platform .

The navigation system also includes a user interface that allows the end user to input information into the navigation system and obtain information from the navigation system . The input information may include a request for navigation features and functions of the navigation system . To provide navigation features and functions the navigation system uses a geographic database . One example of a geographic database is the geographic database depicted in .

In one embodiment the geographic database is stored on a storage medium such as a CD ROM or DVD that is installed in the drive so that the geographic database can be read and used by the navigation system . In one embodiment the navigation system also includes a storage device such as a hard disk or memory card on which a portion of the geographic database is stored. In one embodiment the geographic database may be a geographic database published by NAVTEQ North America LLC of Chicago Ill. The geographic database does not have to be physically provided at the location of the navigation system . In alternative embodiments some or the entire geographic database may be located remotely from the rest of the navigation system and portions of the geographic data provided via a communications system as needed.

In one exemplary type of system the navigation application software programs load from the non volatile memory storage device into a random access memory RAM associated with the processor . The processor also receives input from the user interface . The navigation system uses the geographic database stored on the storage medium and or storage device possibly in conjunction with the outputs from the positioning system and the communications system to provide various navigation features and functions. The navigation application software programs may include separate applications or subprograms that provide the various navigation related features and functions. The navigation functions and features may include destination selection identifying one or more places to be used as a destination based on user input route calculation determining a route from an origin to a destination route guidance providing detailed directions for reaching a destination map display and positioning e.g. map matching . The navigation application software programs also include a point of interest search application which is described with reference to . Other functions and programming may be included in the navigation system .

The navigation application software programs may be written in a suitable computer programming language such as C or Java although other programming languages are also suitable. All of the components described above may be conventional or other than conventional and the manufacture and use of these components are known to those of skill in the art.

At block the route calculation program calculates a route from the starting point to the destination. The route calculation program may use any suitable routing algorithm such as the Dijkstra algorithm or the A algorithm. The calculated route is represented by a sequence of links.

At block the POI search program retrieves a list of POI identifiers for POIs located within a reasonable distance from the route. The POI search program queries the relation Link2POI using the route as a query object to retrieve the list of POI identifiers. Using SQL as a non limiting example the POI search program may use the following query to obtain the POI list.

At block the POI search program retrieves information regarding the POIs identified in the POI list obtained at block . For example the POI search program may obtain location category or name from the point of interest record associated with the POI identifier.

At block the navigation system provides search results to the user. For example the route guidance program may provide audible guidance that a particular POI is located at a distance from the user s current position on the route. As another example the map display application may present the POIs on a map display along with the user s current position.

The relation Link2POI also supports queries like Order all POIs relative to the distance of the current car position or Find all POIs reachable within Dist Query from the current car position. After the positioning application locates the link associated with the navigation system s current position CP i.e. LinkCP the POI search program may perform the following queries.

By generating and storing the relation Link2POI LinkID POIID Distance and any alternatives described herein in a geographic database prior to use a navigation system or other system using the database can accurately identify points of interest along a route more efficiently. While a standalone navigation system example was described in detail the geographic database that includes the relation may be stored on a server and queried by a client device. For example a client device such as a mobile telephone may send a route to a server and the server returns a list of points of interest to the client device. It is also possible that both the route calculation and the compilation of the POIs along the route are performed on the server. In this example the client device sends the origin and the destination to the server and the server returns the calculated route and associated POIs to the client device.

It is intended that the foregoing detailed description be regarded as illustrative rather than limiting and that it is understood that the following claims including all equivalents are intended to define the scope of the invention. The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

