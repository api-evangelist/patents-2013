---

title: Minimum-maximum filtering of graphical texture data
abstract: Texture filter logic suitable for determining a minimum or maximum texel value from a plurality of texel values associated with a filter footprint of arbitrary shape and size. In embodiments, logic circuitry includes a plurality of min/max comparison block stages is configured to perform comparisons and determine a min/max value of predetermined number of texel groups. In embodiments, the logic circuitry further includes a number of min/max collectors to accommodate filter footprints having more texel groups than the predetermined number accommodated by the min/max comparison block stages. Iterative comparisons may be performed until all texel groups in the given footprint have been compared. In further embodiments, the logic circuitry outputs four min/max texel values, which may then be further processed with a final comparison stages to arrive at one min/max value for a footprint.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09355490&OS=09355490&RS=09355490
owner: INTEL CORPORATION
number: 09355490
owner_city: Santa Clara
owner_country: US
publication_date: 20131114
---
Embodiments of the implementation generally relate to computer graphics and more particularly relate to sampling and filtering of texture data.

Graphics rendering particularly for three dimensional 3D graphics applications is one of the most processing intensive activities performed by personal computers. Graphics co processors are available on most modern day personal computers. is a system employing a graphics processor and a central processor each coupled to a system memory e.g. DRAM eDRAM etc. by a bus. Central processor and graphics processor may be disposed on a single piece of silicon i.e. a single chip solution or integrated at a package board or system level. Graphics processor includes a plurality of parallel processing sub systems or slices . Each slice may be replicated any number of times for greater parallel graphics processing power. Within slice there are a number of execution units EU also known as shader cores or simply cores. Each EU contains scalar integer and floating point arithmetic units that execute instructions. Each EU has an instruction set architecture ISA may support context switching and pre emptive multi tasking and may be essentially a complete x86 core for example. Along with EUs slice includes a level two L2 cache e.g. SRAM eDRAM etc. and texture sampler . Texture sampler includes fixed function logic e.g. state machines . Texture sampler may communicate with EU via cache . Cache may function as a texture cache that is a read only memory to texture sampler holding large arrays of predetermined texture data for use in texture mapping when a graphic is rendered for display by a platform hosting system .

The transformation of scene information source data into displayable images requires a number of functionalities referred to in aggregate as a 3D graphics rendering pipeline. is flow diagram depicting certain operations particular to a texture mapping portion of the graphics rendering pipeline. Texture mapping generally entails imaging a textured signal onto a primitive s geometry for example giving the appearance of pixel level detail on more coarsely rendered polygon meshes that are manipulated on a vertex basis. At operation texture coordinates are assigned to vertices of a given polygon. Generally a texture is a digital image comprising an array of texels texture elements which may be individually addressed based on location within a two dimensional u v coordinate space or in a three dimensional u v s coordinate space. In the u v coordinate space u is the width and v is the height and may be mapped between 0 and 1 based on the texture width and height. At operation the texture coordinates are interpolated at each pixel within the polygon. At operation a texture color for each pixel is fetched into cache based on the interpolated texture coordinate. At operation the texture is sampled and filtered to arrive at a particular texel color at each pixel. Often there is a disparity between a number of sample texture elements texels and the source texture image and the number of picture elements pixels to which the image is mapped. If a texture is too large or too small for a given polygon the texture is filtered to fit the space. A magnification filter enlarges zooms in a texture a minification filter reduces zooms out the texture to fit into a smaller area. Texture magnification maps few texels to many pixels by repeating the sampled texel for a plurality of addresses for example providing a blurrier image. Texture minification maps many texels to few pixels by combining more than one texel value into a single value. This can cause aliasing or jagged edges and antialiasing techniques become important to reduce visual artifacts. The goal of texture filtering then is to compute the average value of the image over an area around each pixel for example through averaging of many texels associated with a given pixel.

Texture filtering has largely been performed by fixed function logic found in texture sampler . Such texture samplers have a fixed filter footprint shape associated with a type of texture filtering such as point sampling bi linear filtering tri linear filtering and anisotropic filtering. As the filtering methods become increasingly complex and as uses for texture data continues to expand for example being used for lighting and other surface properties in addition to color a sampler with a fixed function filter has become inefficient and or insufficient. As such shader programs instantiated by EU have taken larger roles in texture mapping for example resulting in the architecture of system illustrated in . In system EU implements a filter footprint in an application layer and a plurality of texture requests in u v space associated with footprint are sent to the texture sampler . Texture sampler then fetches texture data into the cache for each of the u v addresses associated with filter footprint . EU executing instructions defined in the application layer then accumulates texture data . As such texture data for an entire footprint is passed through the texture sampler with no data reduction because filtering is off loaded from fixed function logic onto EU . In this configuration however sampler chip area occupied by fixed function logic is wasted. Another issue with this architecture is reduced cache usage efficiency. With multiple sampler messages sent from a kernel there s a higher probability that the interleaved messages from multiple EUs will cause many cache evictions. Furthermore texture mapping bandwidth is potentially constrained with the greater amount of data communicated between EU and texture sampler since texture data is not significantly processed and or reduced by texture sampler . Another disadvantage of the system architecture depicted in is that filtering performed by EU may require more power and may be slower than if implemented with optimized purpose built logic within texture sampler . Therefore the programmability afforded with shader based filtering may be particularly disadvantageous for mobile devices executing graphics intensive applications where the greater power demand translates into reduced battery life.

One or more embodiments are described with reference to the enclosed figures. While specific configurations and arrangements are depicted and discussed in detail it should be understood that this is done for illustrative purposes only. Persons skilled in the relevant art will recognize that other configurations and arrangements are possible without departing from the spirit and scope of the description. It will be apparent to those skilled in the relevant art that techniques and or arrangements described herein may be employed in a variety of other systems and applications other than what is described in detail herein.

Reference is made in the following detailed description to the accompanying drawings which form a part hereof and illustrate exemplary embodiments. Further it is to be understood that other embodiments may be utilized and structural and or logical changes may be made without departing from the scope of claimed subject matter. Therefore the following detailed description is not to be taken in a limiting sense and the scope of claimed subject matter is defined solely by the appended claims and their equivalents.

In the following description numerous details are set forth however it will be apparent to one skilled in the art that the present implementation may be practiced without these specific details. Well known methods and devices are shown in block diagram form rather than in detail to avoid obscuring the present implementation. Reference throughout this specification to an embodiment or one embodiment means that a particular feature structure function or characteristic described in connection with the embodiment is included in at least one embodiment of the implementation. Thus the appearances of the phrase in an embodiment or in one embodiment in various places throughout this specification are not necessarily referring to the same embodiment of the implementation. Furthermore the particular features structures functions or characteristics described in the context of an embodiment may be combined in any suitable manner in one or more embodiments. For example a first embodiment may be combined with a second embodiment anywhere the particular features structures functions or characteristics associated with the two embodiments are not mutually exclusive.

As used in the description of the implementation and the appended claims the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will also be understood that the term and or as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items.

As used in throughout this description and in the claims a list of items joined by the term at least one of or one or more of can mean any combination of the listed terms. For example the phrase at least one of A B or C can mean A B C A and B A and C B and C or A B and C.

The terms coupled and connected along with their derivatives may be used herein to describe functional or structural relationships between components. It should be understood that these terms are not intended as synonyms for each other. Rather in particular embodiments connected may be used to indicate that two or more elements are in direct physical optical or electrical contact with each other. Coupled may be used to indicated that two or more elements are in either direct or indirect with other intervening elements between them physical optical or electrical contact with each other and or that the two or more elements co operate or interact with each other e.g. as in a cause an effect relationship .

Some portions of the detailed descriptions provide herein are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as calculating computing determining estimating storing collecting displaying receiving consolidating generating updating or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s circuitry including registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

While the following description sets forth various implementations that may be manifested in architectures such system on a chip SoC architectures or graphics processors for example implementation of the techniques and or arrangements described herein are not restricted to particular architectures and or computing systems and may be implemented by any architecture and or computing system for similar purposes. For example various architectures employing for example multiple integrated circuit IC chips and or packages and or various computing devices and or consumer electronic CE devices such as set top boxes smart phones etc. may implement the techniques and or arrangements described herein. Further while the following description may set forth numerous specific details such as logic implementations types and interrelationships of system components logic partitioning integration choices etc. claimed subject matter may be practiced without such specific details. Furthermore some material such as for example control structures and full software instruction sequences may not be shown in detail in order not to obscure the material disclosed herein.

Certain portions of the material disclosed herein are implemented in hardware for example as logic circuitry in a graphics processor. Certain other portions may be implemented in hardware firmware software or any combination thereof. At least some of the material disclosed herein may also be implemented as instructions stored on a machine readable medium which may be read and executed by one or more processors. A machine readable medium may include any medium and or mechanism for storing or transmitting information in a form readable by a machine e.g. a computing device . For example a machine readable medium may include read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices electrical optical acoustical or other similarly non transitory tangible media.

Systems apparatus articles and methods are described below including a multi mode texture sampler capable of flexible filtering operations providing a high performance and low power solution for 2D and 3D visual computing applications. is a graph comparing certain sampler architectures that may be employed by a graphics processor with respect to their relative power requirements and programmability. Near the origin is a fixed function sampler filter offering for example a bi linear texture filter. Highly optimized filter function logic may implement such a filter very economically for lowest power and high efficiency. However the lack of programmability of this filter is unable to accommodate any application specific filter. On the other extreme is the shader implementing an fully programmable ISA filter which may accommodate any application specific filtering operation but consumes the most power. One step down in power and programmability from the shader filter is a sampler with an ISA filter within sampler. For such an architecture the sampler has some of the functionality currently found in a shader core EU e.g. a programmable register based scalar instruction set integer logic flow control and memory access in addition to the conversion and special functions typical of texture operations. The ISA filter in sampler can be expected to require power similar to the shader core filter implementation and the greater sampler complexity requires significant increases in chip area. For further comparison the power and programmability attributes of the exemplary multi mode MM sampler with a flexible filter in accordance with embodiments herein is also depicted in . The MM sampler embodiments described herein provide a significant increase in filter programmability indeed arguably enabling the sampler to perform most any texture filtering currently implemented on an ISA filter. However with only a slight increase in power if any relative to a fixed function sampler.

Relative to shader based filters the multi mode texture sampler embodiments described herein may further provide more balanced heterogeneous computing for example as depicted in the graphics processor architecture of . In exemplary architecture EU is to perform vector math higher level rendering algorithms and memory writes etc. When texture mapping is needed a texture address u v is communicated to a multi mode MM texture sampler . For a given texture address MM texture sampler is to fetch texture data for a variety of footprints and reduce texture data by processing with MM filter accumulator . MM filter accumulator is suitable for providing output values corresponding to a weighted average over the variety of filter footprints . MM texture sampler returns to the EU reduced data corresponding a sampled filtered pixel color R G B at each pixel. Unlike a fixed function texture sampler MM texture sampler is configurable to accommodate both a wide variety of footprints and allow for a footprint to be significantly wider than the bi linear 2 2 texel footprint often employed in fixed function minification filtering. The MM texture sampler can require less power and reduced EU to sampler communication while still providing a greater level functionality such as lighting shadowing effects heretofore available only through shader based filters. In exemplary embodiments in addition to supporting flexible footprints MM texture sampler further supports legacy fix function modes such as point and or linear sampling and bilinear and or trilinear filter modes.

Filter coefficients are an additional input to MM texture sampler . Filter coefficients may be stored in memory entered for example as one or more coefficient tables through API . API may be implemented for example as a set of extensions to an existing graphics processor API such as but not limited to DirectX and OpenGL. API exposes coefficient tables to an application layer and may allow the tables to be populated with predetermined values appropriate for a given filter. As one example an application layer routine that evaluates a Gaussian blur function may be executed to automatically generate coefficients values stored in coefficient tables . Fixed memory allocations for storing values in coefficient table s may be made based on the size of the predetermined bounding region within which a footprint is defined as well as the mode of the MM texture sampler.

In embodiments MM texture sampler is selectively operable in both a separable filter mode and a non separable filter mode for any of a plurality of programmable filter footprints. In the exemplary embodiment the non separable filter mode implements the filter function 

In embodiments API further exposes a filter type ID that is indicative of the mode in which MM texture sampler is to operate while remaining in a given state. For example filter type ID may store a flag bit etc. specifying the non separable or separable filter mode. In further embodiments API may additionally expose a filter shape ID . MM sampler and more specifically DG may utilize the filter shape ID to efficiently generate contributing sub sample addresses i.e. those addresses within the predetermined bounding region having non zero filter coefficients . In one embodiment of the separable filter mode filter shape ID stores the filter height h and width w of the separable filter. In one embodiment of the non separable filter mode filter shape ID stores a bit mask that specifies filter coefficients within the bounding region that are non zero. Such a bit mask may be generated by a graphics processor driver for example based on entries in the coefficient table s .

As further illustrated in MM texture sampler includes MM filter logic FL unit which performs filtering and returns a color value e.g. R B G R B G A etc. at each pixel based on the filter mode filter footprint texel values and filter coefficient values. This returned value may then be utilized in output pipeline and output to display or utilized in a hidden layer calculation etc. . MM FL includes flexible filter block FFB having logic circuitry to perform filtering over any flexible footprint provided in either separable or non separable filter modes. MM FL further includes accumulator that is to accumulate a plurality of flexible filter block outputs to generate a weighted average over a given flexible filter footprint. MM FL may further include a divider not depicted to normalize output from FFB or accumulator before returning the filter value to EU . As such MM FL is configurable to perform weighted accumulation on colors of all texels within the footprint for example as defined by filter type ID and or filter shape ID . In further embodiments as described elsewhere herein MM FL is sufficiently generalized to also perform conventional bi linear filtering at a rate unimpeded by the more flexible architecture of MM FL unit .

In embodiments a filter logic unit includes logic to determine a minimum and or maximum texel value over a given filter footprint. In the exemplary embodiment depicted in FL includes the flexible min max logic which takes as an input cached texel data and outputs min max texel values to EU . Advanced 3D graphics rendering techniques have increasingly employed the use of minimum and maximum values within a footprint. Applications where such min max filtering may be useful include but are not limited to shadow generation where the minimum and maximum of all values in a footprint are useful to evaluate the effective coverage or softness of a shadow. For embodiments where the filter footprint may vary the technique employed for determining a min max of texels associated with the footprint is also advantageously flexible. While a shader based min max implementation may offer such flexibility a solution of this type cannot provide optimal performance and also incurs a significant power consumption penalty relative to fixed function logic. Exemplary embodiments herein therefore entail a flexible min max hardware logic unit as part of the texture filter logic. This architecture provides an efficient solution in part because the texel data can be processed for a given footprint through the flexible min max logic circuitry as it is fetched into the cache by the sampler.

A more detailed description of the texture data processing techniques and microarchitecture of components introduced in exemplary system are now discussed in turn.

Further explanation of an exemplary multi mode flexible texture filter method is described in the context of . In accordance with the exemplary embodiment method is performed by the system depicted in . In accordance with other embodiments a texture sampler having an arbitrary alternative hardware architecture performs method . For example a texture sampler having only one of a separable and non separable filter mode may nonetheless implement certain aspects of the method . In accordance with still other embodiments a graphics processor having alternate arrangements of logic circuitry and application software may perform method . For example a texture sampler may implement only some of the functions described in the context of in hardware while other functions are implemented in software. As such while in one embodiment the method is performed by system system is not required to perform method and system need not perform every operation of method .

Method begins at operation with a texture sampler accessing a filter type identifier to determine whether to enter a non separable filter state or a separable filter state. At operation for either a non separable or a separable filter the texture sampler may further access a filter shape identifier to determine the filter footprint parameters. A footprint includes all texels that contribute to a filtered texture value. illustrates a variety of exemplary footprints that may be programmed within the exemplary 8 8 bounding regions in accordance with embodiments. A large dot in represents an output texel sample associated with a non zero filter coefficient that therefore contributes to the particular filtered value while a small dot is a non contributing texel associated a zero valued coefficient. Notably because embodiments herein enable designation of a vast number of arbitrary footprints the eight examples depicted in do not represent an exclusive listing but instead are merely to show the great variety of permissible filter shapes and sizes. Filter footprint for example has the same size as a conventional bi linear interpolation filter footprint while footprint is useful for a Gaussian filter. Footprints and are all exemplary anisotropic filter shapes. Footprint is useful for a bi cubic filter and footprint illustrates a maximum 8 8 texel filter.

In the exemplary embodiment any of a plurality of filter footprints may be defined within a predetermined bounding region. A particular footprint may be associated with a given sampler state permitting a filter footprint changes with each sampler state change if desired. The number of different filter footprints possible for a given texture sampler is therefore scalable with the number of filter states that are permissible. depicts a plurality of footprints that may each be associated with a given state of a multi mode flexible texture sampler in accordance with embodiments. For each of footprints there are a fixed number of texels within an 8 8 bounding region e.g. N . This dimensionality may vary however as an implementation detail. In one illustrative embodiment a first filter footprint suitable for an anisotropic filter is applied in one filter state while another footprint suitable for a Gaussian filter is applied in another filter state.

Returning to upon receiving a texture request at operation for example in the form of a texture address from a shader core the texture sampler generates a sequence of texel sub sample addresses u v at operation based on the filter footprint. The filter footprint is applied to the input texture address u v by referencing the sampling positions associated with the footprint to the input texture address. In the exemplary embodiment the bounding region e.g. in is centered at the input texture address u v with output sampling positions then referenced to addresses u v . In embodiments sub sample addresses u v are generated for each of a predetermined number of samples associated with a group of neighboring texels that contain at least one contributing texel. This group of neighboring texels represents a minimum granularity for generation of output samples from any given input address and any given footprint. In one embodiment this minimum granularity is a texel quad or 2 2 of neighboring texels. depicts the exemplary texel quad inclusive of texels T T T and Trepresented by a 2 2 of sampling addresses. Embodiments herein leverage the texel quad as an atomic addressing unit advantageous in many respects because of the significant amounts of sampler logic circuitry designed to efficiently utilize pixel locality. For example values associated with a 2 2 address sequence can be efficiently fetched into a single cache line from memory. Hence even where a footprint includes only one texel such as depicted in a sequence of four sub sample addresses u v are generated. For example in texel quad that contains one contributing texel specified by footprint one sub sample address for each of texel T T T and Tis generated for a given input texture address u v .

Dashed boxes in further illustrate exemplary texel quads for each illustrated footprint. For example footprint results in generation of four texel quads and . For each quad through four sub sample addresses are generated for a total of 16 sub samples for a given input texture address u v . Similarly footprint results in generation of 12 u v sub sample addresses corresponding to three texel quads. Generation of sub sample address may proceed over a single or multiple clock cycles. In further embodiments logic circuitry within the texture sampler e.g. within the data generator internally sequences the sub sample addresses following one or more algorithm to minimize the number of texel quads generated for a given footprint and or to maximize coherency of sampling positions etc. In further advantageous embodiments the bounding regions e.g. N in are dimensioned to contain an even multiple of the multi texel sampling group of minimum granularity. For example as shown in for an 8 8 texel bounding region footprint fills the bounding region and a sequence of 16 texel quads are generated corresponding to 64 output sub sample addresses u v for an input texture address u v at each pixel.

Notably any of the footprints depicted in may be implemented in either separable or non separable modes of the texture sampler. In the separable filter mode the footprint is defined as the product of two footprints in 1D space. The filter shape identifier may then be indicative of a 1D width vector associated with a first 1D footprint and a 1D height vector associated with a second 1D footprint for example. The texture sampler then generates four sub sample addresses for each texel quad containing at least one texel specified by a first 1D footprint having a first programmable number of texels e.g. programmable width w and a second 1D footprint having a second programmable number of texels e.g. programmable height h . With the predetermined bounding region referenced to the input texture address u v sub sampling positions specified in the separable filter footprint may be addressed as u v .

In the non separable filter mode where there is one coefficient Cfor each texel within the bounding region four sub sample addresses are generated for each texel quad that contains at least one texel having a non zero coefficient value. In this mode the filter coefficient table may serve to specify the footprint with the non zero coefficient values being the only sampling positions contributing to the filter. For such embodiments all coefficients may be read to generate a sequence of sub sample addresses. In further embodiments a sampling mask may be generated from the coefficient table. As one example 16 bits may specify an 8 8 bounding region with each bit of the mask indicating one or a few coherent sampling positions e.g. one 2 2 quad within the bounding region of the corresponding filter. Notably with all the sub sample addresses u v now generated for all multi texel groupings containing at least one contributing texel processing of each sub sample address can efficiently proceed through the filter logic circuitry for each input texture address communicated between shader core and texture sampler.

Returning to method continues with fetching filter coefficients into the cache. In embodiments coefficient values are fetched for each texel sub sample address in a manner dependent on the filter mode. While at least one filter coefficient is needed for each sub sample address u v only one filter coefficient Cis utilized in the non separable filter mode while two filter coefficients H Vare employed in the separable filter mode. Coefficient precision may vary with implementation. For example 8 bit or 16 bit coefficients may be supported in either separable or non separable modes. In one exemplary embodiment multiple levels of precision e.g. selectable between 8 bit and 16 bit are supported for a coefficient e.g. C . In certain separable mode embodiments values from two coefficient tables one for Hand one for V are cached for each sub sample address. Also in certain non separable filter mode embodiments coefficients are accessed based only on the non fractional portion of the input texture address with any fractional portions of an input texture address ignored e.g. rounded . Hence non separable filters may provide texel level precision. For certain separable filter mode embodiments however the cached coefficients values are based on or a function of or dependent on the fractional portion of the input texture address. Such embodiments offer sub texel precision. Further description of such fractional addressing for filter coefficients and other aspects of the separable filter mode are provided further below in the context of following discussion of method .

Continuing in reference to a texel color value corresponding to each sub sample address u v is fetched from memory into the texel data cache at operation . Any techniques known in the art may be utilized at operation as embodiments are not limited in this respect. At operation sub sampled texture data is filtered based on the texel color value and coefficient value associated with each texel sub sample address. For example the filter function equation provided above may be implemented with filter logic circuitry that multiplies the filter coefficient e.g. C at each sub sample address u v with the color value of the corresponding texel T at each sub sample address u v . The resulting color value for each sub sample address is then passed to an accumulator which may also be implemented in the filtering logic circuitry of the sampler. In the accumulator values are accumulated in each color channel e.g. R B G over all of the sub sample addresses u v . The accumulated color is then returned at operation e.g. to EU as the sampled and filtered color for a pixel which may also be packed along with filtered colors corresponding to other pixels. While method is generally applicable to both non separable and separable filter modes various operations in method e.g. and are dependent on the filter mode. Additional aspects particular to the separable filter mode are now described in greater detail in the context of .

Continuing with description of method using the above technique to properly offset horizontal and vertical coefficients the coefficients are fetched from memory into the coefficient cache following the sequencing of the texel groupings of the minimum granularity that were generated at operation . In the exemplary embodiment where this minimum grouping is the texel quad containing 2 2 neighboring texels four coefficients for each texel quad e.g. the two horizontal coefficients and the two vertical coefficients and in are advantageously fetched from memory into one cache line. A number of such coefficient cache lines may be sequenced over the number of texel quads generated for the specified separable filter footprint e.g. two cache lines for two texel quads sixteen cache lines for sixteen quads etc. . The separable filter equation above may then be implemented with the cached vertical and horizontal coefficient for each sub sample address multiplied together to form a compound 2D coefficient at operation . This is further illustrated for the exemplary 2 2 texel quad in where horizontal coefficients H H are multiplied by vertical coefficients Vand Vto arrive at compound coefficients HVand HV. Horizontal coefficients Hand Hare each similarly multiplied by vertical coefficients Vand Vto arrive at compound coefficients HVand HV. At this point method can return to operation in method where the cached lines of filter coefficients are the compound coefficients output from method . Operations and of method then proceed as further exemplified in where the compound filter coefficients are then multiplied with the texel color values T T T and Tfor the corresponding quad of sub sample addresses which may be similarly stored in a single cache line . The resulting weighted texel color values are then accumulated over all sub sample addresses sequenced for the separable footprint to arrive at the filtered color value output from the texture sampler at operation .

Further description of a multi mode filter logic unit configurable for a weighted averaging of texel colors in addition to bilinear filtering is now provided in the context of . Such multi mode filter logic unit has flexibility to support the multiple sampler modes described above for weighted averaging over any particular filter footprint and also perform efficient bilinear interpolation as needed. For the sake of clarity configurable filter architectures and multi mode filtering methods are described in the context of MM FL unit depicted in . Although one or more of these features so described may be advantageously incorporated into MM FL unit it is noted that one or more of these features may be incorporated into a graphics processing system in a number of alternative manners. As such one or more features found in filter logic unit embodiments may be implemented without one or more of the features described above in the context of a multi mode sampler. For example one or more multi mode filter logic embodiments do not require a flexible footprint mode just as one or more multi mode sampler supporting a flexible footprint does not require multi mode filter logic. Nevertheless embodiments incorporating a multi mode sampler supporting a flexible footprint mode with a multi mode filter logic unit have a synergy that will be clear to one of ordinary skill.

In embodiments a graphics processing system includes a configurable or flexible texture filter suitable for implementing a multi mode filtering method. is a flow diagram illustrating a multi mode filtering method in accordance with an embodiment. Method begins with receiving a filter mode signal at operation . The filter mode signal at least differentiates between a bilinear filter mode and a flexible filter mode. In the bilinear filter mode texel data e.g. color values is weighted at operation with a bilinear filter using the sub texel fractional address to arrive at a filtered color output at operation . In the flexible filter mode texel data is weighted at operation based on predetermined texel weighting coefficient values that may or may not be dependent on the sub texel fractional address. For example in a non separable filter mode as described above the coefficients received at operation in the flexible filter mode are independent of the fractional address while the coefficients have a sub texel dependence in the separable filter mode.

In response to determining the mode signal is indicative of the bilinear filter mode at operation method proceeds to operation where filter logic performs the bilinear interpolation i.e. bilerp over four texel values received at operation . For the exemplary embodiment where a single 2 2 texel quad was sub sampled based on the texture address e.g. equivalent to quad for footprint in FIG. SA a single cache line read includes these four neighboring texel values. The bilerp is performed using coefficients that are indicative of the fractional texture address and which are received at operation .

In response to determining the mode signal is indicative of the flexible filter mode at operation method proceeds to operation where the filter logic generates a weighted average over at least four texel values received at operation . For the exemplary embodiment where a number of 2 2 texel quads were sub sampled as u v based on the texture address and footprint e.g. any of the footprints through depicted in a single cache line read may include the four neighboring texel values. The weighted average over one texel quad is generated using four predetermined weighting coefficients each coefficient being indicative of a weighting associated with the corresponding texel in the quad. Upon arriving at the filtered color at operation method is complete and the weighted average color may be then returned to an accumulator e.g. accumulator in for further averaging over a plurality of texel quads mapped to the filter footprint and or returned to a shader core e.g. EU in for subsequent output of a graphical object to a display screen.

The logic circuitry of filter logic unit further includes at least a pair of flexible filter blocks FFB that are coupled to the filter mode signal input and operable in a plurality of modes selectable by the filter mode signal. In one exemplary embodiment each FFB is configurable to perform a portion of the bilerp or similarly perform a portion of the flexible weighted averaging over a texel quad. As described further below with circuitry of an FFB responsible for only a portion of a given one of the multiple filtering functions each FFB may advantageously include the same circuitry and so represent a scalable filter logic block that is fully utilized regardless of the filtering mode. Such a microarchitecture design makes efficient use of chip area and reduces power consumption. In the exemplary microarchitecture the filtering is apportioned between two FFB such that circuitry represented by a pair of FFB is operable in a first mode to perform the bilinear interpolation over the group of four neighboring texel values based on two input coefficients indicative of a fractional address associated with the four texels read in for a given input address. Similarly circuitry represented by a pair of FFB is also operable in a second mode to generate the weighted average over the group of four neighboring texel values based on four coefficients each indicative of a weighting associated with one of four texel values read in for a given filter footprint. Averaging over four texels may be then further accumulated over the footprint for example by accumulator in .

In the exemplary embodiment depicted in filter logic unit includes four FFB and . Responsive to the filter mode signal circuitry represented by FFB and FFB is operable in a first mode to perform the bilinear interpolation over a group of four neighboring texel values received at texel value input line A using coefficients received from coefficient input line A. Circuitry represented by the FFB and is operable in a second mode to generate the weighted average over the group of four neighboring texel values from input line A using coefficients received from input line A. In this exemplary embodiment an FFB pair is staged in the bilinear filter mode with the bilerp serialized into a horizontal phase handled by one FFB and a vertical phase handled by the second FFB. In the flexible filter mode FFB pairs are not so staged but rather each FFB instead generates a weighted average over two of the four texels in parallel. The weighted average is then accumulated to arrive at a weighted average of one four texel quad. With this microarchitecture multiplexer distributes coefficients received on input line A to each of FFB and . In the bilinear filter mode the coefficients are associated with a first dimension of a fractional address e.g. . Multiplexer similarly distributes coefficients associated with the second dimension of the fractional address e.g. from coefficient input line B. Coefficients based on are output to FFB for use in the second phase of the staged bilerp filtering.

In embodiments a selector is coupled between a pair of filter logic blocks to selectively stage two flexible filter blocks. The selector may either pass output from an upstream filter block to a downstream filter block or to an output stage responsible for further processing such as accumulation. In the exemplary embodiment depicted in output from FFB is passed to selector . Selector is further coupled to filter mode signal input and in response to a bilinear filter mode signal passes output from FFB to an input of FFB . Similarly output from FFB is coupled to selector which like selector is further coupled to filter mode signal input . In response to a bilinear filter mode signal selector passes output from FFB to an input of FFB . FFB is coupled to output stage and outputs a result of the second phase of the staged bilerp filtering based the coefficient received from multiplexer for a first texel quad. FFB similarly provides to output stage results of the second phase of the staged bilerp filtering with the coefficient received from multiplexer for a second texel quad.

Alternatively in response to a flexible filter mode signal selectors pass output from FFB respectively to output stage . Likewise in response to a flexible filter mode signal FFB and receive texel values for a second texel quad through texel value input line B which are processed using weighting coefficients received from coefficient signal input line B and passed to output stage . Output stage is further coupled to filter mode signal input line . Responsive to the filter mode signal output stage may pass signals received from selector and or and or FFB and or FFB and or FFB accumulate any of these received signals and or normalize one or more these received signals and or interpolate between a plurality of these received signals. Output stage is further coupled to output signal line over which the result from flexible filter logic unit is conveyed to an external destination.

With the multi mode filtering method and architecture of flexible filter logic unit as described above aspects of the method and architecture are described below in further detail in the context of the bilinear filter mode in and C and in the context of the flexible filter mode in .

In the exemplary embodiment depicted in each flexible filter block and is to generate a pair of linear interpolated values from four texel values and one dimension of a fractional address. Multiplexer is communicatively coupled to a coefficient memory storing an input texture address u v . A coefficient associated with one texture address is read in and output as to FFB . FFB is communicatively coupled to a texel memory such as texel cache in and reads in texel values T T T and Tfor a nearest neighboring texel quad associated with a first texture address. FFB performs the first lerp e.g. horizontal to generate the pair of linear interpolated values T and T . FFB is communicatively coupled to the texel memory and reads in texel values T T T and Tfor the nearest neighboring texel quad associated with a second texture address. FFB performs another first lerp to generate another pair of linear interpolated values T T for example by applying the equations above to the second texel quad.

FFB is communicatively coupled to FFB e.g. by selector shown in with FFB similarly coupled to FFB . In the exemplary embodiment the second lerp performed by FFB FFB is performed on interpolated values T and T T T that are split into high and low bit portions e.g. T T and T T or T T and T T . Splitting the interpolated values from the first lerp phase is advantageous for at least the reason that FFB and may then all utilize logic of the same bit width e.g. 8 bit and the number of texel value inputs is the same permitting the same microarchitecture within each FFB. Where 8 bit logic is employed in the FFB and each texel value T T T Tand has an 8 bit representation and the interpolated values T and T have 16 bit representations and likewise for T T . Convertor converts the wide bit lerp values into high bit portions T T and low bit portions T T each of these being for example 8 bit representations. Output of convertor is communicatively coupled to input of FFB . This architecture is replicated with convertor and FFB . FFB and are also communicatively coupled to multiplexer which is further communicatively coupled to a coefficient memory from which a second coefficient associated with a texture address is read in and output as to FFB . Similarly coefficient is output to FFB . FFB are then to perform a second lerp e.g. vertical lerp to generate the bilinear interpolated value T and T respectively. Output stage may either output the bilinear interpolated values T and T as bilinear filtered results or in response to a trilinear mode signal perform a further interpolation between T and T based on a coefficient for example using any conventional technique for scaling bilerp values between two LOD.

At operation these weighted texel pairs are then accumulated summed at operation to arrive at a weighted average for one texel quad. In further embodiments the accumulated value may be divided by a normalization factor. The method then completes at operation with output of the flexible weighted average for example to the accumulator in .

In the exemplary embodiment depicted in each flexible filter block and is to generate a sum of a first and second of the texel values with the first texel value scaled by a first coefficient and the second texel value scaled by a second coefficient. Multiplexer is communicatively coupled to a coefficient memory such as a coefficient cache from which four coefficients w w w and wassociated with one texture address is read in with wwoutput to FFB and w woutput to FFB . FFB is communicatively coupled to a texel memory such as texel cache in and receives texel values Tand Tfor the nearest neighboring texel quad associated with a first texture address. FFB is similarly coupled to receive texel values Tand Tfor the first texture address. Implementing the flexible weighting function above FFB generates T as the sum of a first texel value Tscaled by a first coefficient wand a second texel value Tscaled by a second coefficient w. FFB likewise generates T as the sum of a first texel value Tscaled by a first coefficient wand a second texel value Tscaled by a second coefficient w. FFB and are communicatively coupled to output stage . Output stage then operates as an accumulator to add the sums T and T which are output from filter logic as a weighted sum for one texel quad to the one or more output signal line. FFB and may similarly output weighted sums T and T for another texel quad which may be further accumulated with the sum of T and T in output stage .

With the multi mode operation of the plurality of flexible filter blocks described above a more detailed description of the microarchitecture of one flexible filter block is described below in the context of . is a block diagram of a flexible filter block in a filter logic unit configured into a bilinear filter mode in accordance with embodiments. is a block diagram of the flexible filter block of configured in a flexible filter mode in accordance with embodiments.

Referring first to flexible filter block FFB illustrates an exemplary microarchitecture in one embodiment that is utilized by each FFB illustrated in any of the filter logic units depicted in or B. In other embodiments however flexible filter block may be incorporated into alternatively designed filter logic units. FFB illustrates circuitry in a state associated with a filter mode signal indicative of a bilinear trilinear filter mode. FFB includes a coefficient input to receive a coefficient associated with either a predetermined fractional address e.g. or or a predetermined texel weighting coefficient e.g. wor w . In the bilinear filter mode this coefficient is for example. FFB further includes two texel value inputs A B each to receive a texel color value. A first multiplier has a first input coupled to the coefficient input and a second input coupled to texel value input A. A second multiplier has a first input coupled to the first coefficient input through an invertor and a second input coupled to the second texel value input B. An adder is coupled to an output of first multiplier and an output of second multiplier . The coupling between multiplier and adder is through a switch that is responsive to the filter mode signal. In the bilinear mode switch is closed to pass a texel value e.g. T as scaled by the complement of or which is added to the product of another texel value e.g. T as scaled by or to generate the first interpolated value e.g. T . This logic is replicated within the filter block by inputs A and B multipliers invertor adder and switch to generate the second interpolated value e.g. T thereby implementing one phase of a bilinear interpolation.

Coupled to output the adders and is accumulator which is further coupled to the filter mode signal and is to either add together or pass the outputs of the adders based on the filter mode signal and whether the first or second lerp phase is being performed. For example when in the bilinear mode but performing a first lerp phase accumulator is to pass the data received from adders and e.g. as T and T . When in the bilinear mode but performing a second lerp phase accumulator performs the shifted addition of the data received from adders and to assemble the bilinear interpolated value T .

In FFB is in a second state in response to a filter mode signal indicative of a flexible filter mode. In this state switches and are open and coefficients received at inputs and are each multiplied by texel values received at inputs A and A respectively. These scaled values pass through to accumulator . In the flexible filter mode accumulator is to sum the received values and output a weighted average of two texels as described elsewhere herein.

Further description of a flexible min max filter logic unit configurable for a determination of minimum and or maximum texel values over a given footprint is now provided in the context of . Such a min max logic unit has hardware flexibility to support the multiple sampler modes described above and output the minimum texel value s and or maximum texel value s over any particular filter footprint as needed. For the sake of clarity flexible min max filtering methods and microarchitectures are described in the context of a system where the min max logic unit is an integrated circuit component of MM FL unit depicted in . Although one or more of the features of the flexible min max filter logic unit may be advantageously incorporated into MM FL unit it is noted that one or more of the features of the flexible min max filter logic may be incorporated into a graphics processing system in a number of alternative manners independent of other aspects of MM FL unit . As such one or more features found in the min max logic unit embodiments describe herein may be implemented without one or more of the features described above in the context of multi mode filter logic. For example one or more flexible min max logic unit embodiments do not require or rely upon any further capability of a filter to perform any additional form of filtering e.g. weighted averaging over a footprint. Likewise multi mode filter logic architecture and methods particular to non min max filtering techniques described elsewhere herein e.g. weighted averaging do not require any embodiment of a flexible min max logic unit. Nevertheless embodiments incorporating a multi mode sampler supporting a flexible footprint mode along with a flexible min max logic unit have a synergy that will be clear to one of ordinary skill. Even more synergistic attributes will be evident in exemplary embodiments where flexible min max logic is incorporated with both a multi mode sampler supporting a flexible footprint mode and a multi mode filter logic unit supporting weighted averaging over a footprint.

In embodiments a graphics processing system includes a flexible min max texture filter suitable for implementing a method for determining a min max texel value for a plurality of texel values associated with a flexible filter footprint. is a flow diagram of a method for determining a min max texel value for a plurality of texel values associated with a filter footprint in accordance with one embodiment. Method begins at operation with receipt of texel data associated with a particular filter footprint e.g. any of the footprints depicted in . In an exemplary embodiment the texel data entails texel color values that are received in blocks of four nearest neighboring texel 2 2 quads. Such a 2 2 block of texel values may be advantageously read in as a single cache line.

At operation the received texel data is processed through a min max binary comparison tree. While such a tree may be made arbitrarily wide in the exemplary embodiment provisions are made to allow for a footprint to cover more texels than can be processed in one pass through the tree. This architecture permits the footprint and min max logic to be scalable. This architecture also makes efficient use of chip area by compacting logic circuitry implementing the comparison tree to a size that can be utilized well for both small and large footprints. Where the tree has fewer inputs than a maximum permissible size of the footprint e.g. a 64 texel bounding domain depicted in texel data associated with the footprint is iteratively processed through the tree at operation . At operation a cumulative comparison is performed to compare a min max texel value generated in one iteration with a min max texel value determined in another iteration. At operation the maximum or minimum texel value determined by the cumulative comparison over the iterations needed to compare all texel values within a footprint is stored.

As described further below depending on the utilization of the comparison tree for a given iteration there may be one or more cumulative comparison performed and therefore more than one min max texel value resulting from the iterations performed to cover a particular footprint. Although more than one min max texel value may be generated the number of min max texel values output is fixed. These outputs of the iterative processing may be output as min max results at operation for example to an EU core . Alternatively a fixed output stage within the min max logic circuitry may further perform a comparison of all min max values output for a particular footprint to arrive at a single min max result that is output e.g. to an EU at operation .

In embodiments the binary comparison tree determines both group level and multi group min max texel values. is a flow diagram of a method that further illustrates stages of the binary comparison performed in method in accordance with an embodiment. Method begins again with operation where texel values are received at inputs of the min max tree logic circuitry. At operation a comparison of texel values within a texel group is performed to determine a min max texel value for a particular group i.e. a group level min max value . In the exemplary embodiment where the texel group is the 2 2 texel quad three comparisons may be made to determine one group level min max value. Each of two texel pairs in the quad are compared and then the min max from each pair or sub group is compared to determine the group level min max for the one group. A number n of such first comparisons may be performed for as many groups as permitted by the input width of the min max tree circuitry.

At operation a comparison of the group level min max texel values determined by the first comparison is then performed to determine a multi group min max texel value. With a binary tree architecture the number of such comparisons is equal to half the number of groups input into the tree n 2 . Depending on the input width of the tree one or more binary comparison stages may be employed to arrive at one min max value for all texel data input into the tree.

At operation the minimum or maximum multi group min max texel value is determined over all the iterations of operations and needed to process all texel values associated with a given footprint through the min max tree. As noted above iterations may be performed where the input width of the tree logic is smaller than the maximum allowable footprint. Iterations may not be needed as a function of the particular footprint being implemented. Regardless of footprint size and tree logic input width however embodiments of the binary tree logic include provisions to process as few as one texel group because a footprint may include only one such group or a final iteration may conclude with one texel group entering the tree. Method concludes with outputting the min max result s at operation .

Referring to the min max unit receives texel data associated with a given footprint through inputs which together provide an input data width of sixteen texel values e.g. T T . Eight texel values e.g. T T enter through input and eight texel values e.g. T T enter through input . For the exemplary embodiment where a group of texels includes four nearest neighboring texels e.g. 2 2 texel quad depicted in the exemplary tree circuit has an input width of four texel groups. Inputs may be responsible for formatting texel data and or distributing the texel data by group to the appropriate tree circuit branch.

Communicatively coupled to inputs is first comparison circuitry responsible for comparisons to determine a group level min max texel value for each group input into the tree. Various min max M M comparison logic blocks within first comparison circuitry are all coupled to a same min max control signal line denoted by dashed line in . A min max control signal passed on the min max control signal line specifies whether the comparison circuitry is to determine a minimum or maximum texel value. As further shown pairs of texel values e.g. T T are passed to inputs of min max comparison blocks and . Similarly pairs of texel values e.g. T T are passed to inputs of min max M M comparison blocks and . These first stage min max comparison blocks are to perform the operations and of method . Each block is to output one sub group min max texel value based on a comparison of texel values associated with a first or second pair of texels in each texel group. As shown in for example inputs of min max comparison block receive texel values T Tand output the minimum or maximum of Tand Tas a first sub group min max texel value. Inputs of min max comparison block receive texel values T Tand output the minimum or maximum of Tand Tas a second sub group min max texel value.

Communicatively coupled to the first stage min max logic bocks are second stage min max comparison blocks. Each second stage min max logic block takes a pair of sub group min max texel values as inputs and output one group level min max texel value. As shown in inputs of min max comparison block are coupled to outputs of min max comparison blocks and inputs of min max comparison block are coupled to outputs of min max comparison blocks . Second stage comparison blocks and are similarly coupled to first stage comparison blocks and respectively. Comparison blocks and are each to perform the operation outputting a group level min max texel value based on a comparison of a first and second sub group min max texel value. For example comparison block outputs T T T or Tas a min max texel value T for the one texel group T T.

Second comparison circuitry is coupled to outputs of first comparison circuitry . Various min max M M comparison logic blocks within second comparison circuitry are also all coupled to the min max control signal line as denoted by dashed line. Second comparison circuitry includes third stage min max logic bocks that are communicatively coupled to second stage min max comparison blocks. Each third stage min max comparison block is to take a pair of group level min max texel values as inputs and output one multi group min max texel value. As shown in inputs of min max comparison block are coupled to outputs of min max comparison blocks . Third stage comparison block is similarly coupled to second stage comparison blocks and . Comparison blocks and are to perform the operations and respectively. Comparison block outputs a first multi group min max texel value based on a comparison of group level min max texel values associated with a first pair of texel groups. For example comparison block outputs a min max texel value T for the two texel groups including texel values T T. Comparison block outputs a second multi group min max texel value based on a comparison of group level min max texel values associated with a second pair of texel groups. For example comparison block outputs a min max texel value T for the two texel groups including texel values T T.

Second comparison circuitry further includes a fourth stage min max comparison block coupled to the third stage min max logic bocks. A fourth stage min max comparison block takes a pair of multi group min max texel values as inputs and outputs one multi group min max texel value thereby further reducing the input texel values to a min max statistic. As shown in inputs of min max comparison block are coupled to outputs of min max comparison blocks . Fourth stage comparison block is to perform the operation outputting a third multi group min max texel value based on a comparison of first and second multi group min max texel values. For example logic block outputs a min max texel value T for the four texel groups including texel values T T.

As further depicted in the min max logic unit further includes cumulative comparison circuitry coupled to at least the second comparison circuitry of the min max tree. In the exemplary embodiment the cumulative comparison circuitry includes a plurality of min max collectors M MC one for each texel group accommodated by the tree inputs. Each min max collector is communicatively coupled to an output of at least second comparison circuitry . More specifically each input of min max collector and is coupled to the output of min max comparison block and is to receive the same min max texel value i.e. T . Each min max collector is further coupled to the same min max control signal line denoted by dashed line so as to receive a same min max control signal.

In the exemplary embodiment min max collectors and are each further coupled to the output of min max comparison block so as to further receive a lower order min max multi group texel value i.e. T . Likewise min max collectors and are each further coupled to the output of min max comparison block . This secondary coupling to second comparison circuitry is to allow for partial utilization of the min max tree in any given texel processing iteration for a footprint. In a further embodiment each min max collector is communicatively coupled to first comparison circuitry to receive different group level min max texel values i.e. T . For example an input of min max collector is further coupled to an output of min max logic unit while min max collector is further coupled to min max logic unit . Likewise an input of min max collector is further coupled to an output of min max logic unit while min max collector is further coupled to min max logic unit .

With the exemplary architecture each min max collector is configured to perform operation in where different group level min max texel values are separately compared to the same multi group min max texel values to arrive at a plurality of minimum or maximum values. Each min max value determined by a min max collector is stored at operation for comparison to other maximum or minimum texel values generated by the various nodes of the tree circuitry over the number of iterations needed to cover the footprint. After all iterations are complete each min max collector then provides one min max texel value output e.g. Result Result Result and Result at operation . With the exemplary architecture therefore texels associated with a flexible footprint containing a variable number of texel groups are reduced to a min max statistic having fixed size e.g. four min max results . Four min max results can then be readily processed in an output stage with any conventional technique suitable for any fixed bi linear texture sample to arrive at a single min max texel value.

In embodiments each min max comparison block of a min max tree includes logic circuitry having a same microarchitecture. is a block diagram of a min max comparison block employed in the min max logic circuit tree depicted in in accordance with an embodiment. Min max comparison block includes one or more data input signal line to receive texel values e.g. T T and one or more control signal line to receive a min max control signal. Min max comparison block further includes logic circuitry to pass to one or more data output signal line the larger of two values received on the one or more data input signal line in response to receiving on the one or more control signal line a first control signal indicative of a maximum filter mode. In response to a second control signal indicative of a minimum filter mode the logic circuitry of block is to pass the smaller value of the two values.

In the specific embodiment depicted in min max comparison block includes subtraction unit coupled to the data input signal line s . Subtraction unit is to output a difference value e.g. T T . A min max selector is coupled to an output of subtraction unit to the input signal line and to the control input signal line. The selector is to differentiate between two values e.g. T T received on the data input signal lines based on an output of the subtraction unit . The selector is to pass to the data output signal line the larger of two values received on the data input signal line s in response to receiving on the control signal line a first control signal indicative of a maximum filter mode and to pass to the data output the smaller value of the two values in response to a second control signal indicative of a minimum filter mode.

In embodiments each min max collector of a min max tree includes logic circuitry having a same microarchitecture. is a block diagram of a min max collector employed in the cumulative comparison circuitry depicted in in accordance with an embodiment. Min max collector includes a min max selector such as min max selector . Min max selector is coupled to an output of subtraction unit as well as to an input data signal line to receive at least a multi group min max texel value e.g. T . Subtraction unit includes inputs coupled to the input data signal line and to an output of buffer that is to store a predetermined default value or a previously determined min max value. Buffer may be any storage of sufficient width to store the min max texel value such as a 32 bit register for storing a 32 bit min max texel value. Min max selector is to pass to one or more data output signal line the larger of two values received from the input data signal line and the value in buffer in response to receiving a first min max control signal indicative of a maximum filter mode. Min max selector is further to pass the smaller of two values received from the input data signal line and the value in buffer in response to receiving a second min max control signal indicative of a minimum filter mode. Buffer has an input coupled to the data output signal and is updated with the data signal e.g. T output by min max selector .

For the exemplary embodiment depicted in min max collector accommodates multiple input min max values for example from the three min max comparison blocks and depicted in . In selector is to switch between a first input signal line configured to provide a group level min max texel value e.g. T and a second input signal line configured to provide a multi group min max texel value e.g. T . Selector may be further configured to switch to a third input signal line configured to provide additional multi group min max texel values e.g. T . Selector may in some embodiments have states set based on the min max control signal. Alternatively values from all three texel value inputs may be passed to min max selector having a wider input width. Logic circuitry of min max selector coupled to an output of selector and an output of buffer is to select between the min max texel value generated by one iteration through the min max tree circuitry and a default value or a min max texel value stored from another prior iteration.

In the exemplary microarchitecture embodiments illustrated in where there is no contributing texel value e.g. where less than a full width of the min max tree is needed a predetermined default value may be passed through the various stages in the min max tree as well as through the min max collectors e.g. stored in buffer . The default value may be any value that ensures a contributing texel will always defeat the default value in a comparison. Microarchitectures utilizing a default value are however only one embodiment and many alternative microarchitectures achieving the same function are possible. As one example a status flag may be passed through min max tree circuitry and each comparison result then determined based on the status flag as well as the input texel values.

In various implementations system includes a platform coupled to a HID . Platform may receive captured personal media data from a personal media data services device s a personal media data delivery device s or other similar content source. A navigation controller including one or more navigation features may be used to interact with for example platform and or HID . Each of these components is described in greater detail below.

In various implementations platform may include any combination of a chipset processor memory storage graphics subsystem applications and or radio . Chipset may provide intercommunication among processor memory storage graphics subsystem applications and or radio . For example chipset may include a storage adapter not depicted capable of providing intercommunication with storage .

Processor may be implemented as a Complex Instruction Set Computer CISC or Reduced Instruction Set Computer RISC processors x86 instruction set compatible processors multi core or any other microprocessor or central processing unit CPU . In various implementations processor may be a multi core processor s multi core mobile processor s and so forth. In one exemplary embodiment processor invokes or otherwise implements processes and or methods of the CMMS and the various modules described in as components of CMMS elsewhere herein.

Memory may be implemented as a volatile memory device such as but not limited to a Random Access Memory RAM Dynamic Random Access Memory DRAM or Static RAM SRAM .

Storage may be implemented as a non volatile storage device such as but not limited to a magnetic disk drive optical disk drive tape drive an internal storage device an attached storage device flash memory battery backed up SDRAM synchronous DRAM and or a network accessible storage device. In various implementations storage may include technology to increase the storage performance enhanced protection for valuable digital media when multiple hard drives are included for example.

Graphics subsystem may perform processing of images such as still or video media data for display. Graphics subsystem may be a graphics processing unit GPU or a visual processing unit VPU for example. An analog or digital interface may be used to communicatively couple graphics subsystem and display . For example the interface may be any of a High Definition Multimedia Interface Display Port wireless HDMI and or wireless HD compliant techniques. Graphics subsystem may be integrated into processor or chipset . In some implementations graphics subsystem may be a stand alone card communicatively coupled to chipset .

The texture sampler features and related texture sampling and filtering techniques described herein may be implemented in various hardware architectures. For example graphics and or video functionality may be integrated within a chipset. Alternatively a discrete graphics and or video processor may be used. As still another embodiment the methods and functions described herein may be provided by a general purpose processor including a multi core processor. In further embodiments the methods and functions may be implemented in a purpose built consumer electronics device.

Radio may include one or more radios capable of transmitting and receiving signals using various suitable wireless communications techniques. Such techniques may involve communications across one or more wireless networks. Example wireless networks include but are not limited to wireless local area networks WLANs wireless personal area networks WPANs wireless metropolitan area network WMANs cellular networks and satellite networks. In communicating across such networks radio may operate in accordance with one or more applicable standards in any version.

In various implementations HID may include any television type monitor or display. HID may include for example a computer display screen touch screen display video monitor television like device and or a television. HID may be digital and or analog. In various implementations HID may be a holographic display. Also HID may be a transparent surface that may receive a visual projection. Such projections may convey various forms of information images and or objects. For example such projections may be a visual overlay for a mobile augmented reality MAR application. Under the control of one or more software applications platform may display user interface on HID .

In various implementations personal media services device s may be hosted by any national international and or independent service and thus accessible to platform via the Internet for example. Personal media services device s may be coupled to platform and or to display . Platform and or personal services device s may be coupled to a network to communicate e.g. send and or receive media information to and from network . Personal media delivery device s also may be coupled to platform and or to HID .

In various implementations personal media data services device s may include a cable television box personal computer network telephone Internet enabled devices or appliance capable of delivering digital information and or content and any other similar device capable of unidirectionally or bidirectionally communicating content between a media data provider and platform via network or directly. It will be appreciated that the content may be communicated unidirectionally and or bidirectionally to and from any one of the components in system and a provider via network . Examples of personal media include any captured media information including for example video music medical and gaming information and so forth.

Personal media data services device s may receive content including media information with examples of content providers including any cable or satellite television or radio or Internet content providers. The provided examples are not meant to limit implementations in accordance with the present disclosure in any way.

In various implementations platform may receive control signals from navigation controller having one or more navigation features. The navigation features of controller may be used to interact with user interface for example. In embodiments navigation controller may be a pointing device that may be a computer hardware component specifically a human interface device that allows a user to input spatial e.g. continuous and multi dimensional data into a computer. Many systems such as graphical user interfaces GUI and televisions and monitors allow the user to control and provide data to the computer or television using physical gestures.

Movements of the navigation features of controller may be replicated on a display e.g. HID by movements of a pointer cursor focus ring or other visual indicators displayed on the display. For example under the control of software applications the navigation features located on navigation controller may be mapped to virtual navigation features displayed on user interface for example. In embodiments controller may not be a separate component but may be integrated into platform and or HID . The present disclosure however is not limited to the elements or in the context shown or described herein.

In various implementations drivers not shown may include technology to enable users to instantly turn on and off platform like a television with the touch of a button after initial boot up when enabled for example. Program logic may allow platform to stream content to media adaptors or other personal media services device s or personal media delivery device s even when the platform is turned off In addition chipset may include hardware and or software support for 8.1 surround sound audio and or high definition 7.1 surround sound audio for example. Drivers may include a graphics driver for integrated graphics platforms. In embodiments the graphics driver may comprise a peripheral component interconnect PCI Express graphics card.

In various implementations any one or more of the components shown in system may be integrated. For example platform and personal media data services device s may be integrated or platform and captured media data delivery device s may be integrated or platform personal media services device s and personal media delivery device s may be integrated for example. In various embodiments platform and HID may be an integrated unit. HID and content service device s may be integrated or HID and personal media delivery device s may be integrated for example. These examples are not meant to limit the present disclosure.

In various embodiments system may be implemented as a wireless system a wired system or a combination of both. When implemented as a wireless system system may include components and interfaces suitable for communicating over a wireless shared media such as one or more antennas transmitters receivers transceivers amplifiers filters control logic and so forth. An example of wireless shared media may include portions of a wireless spectrum such as the RF spectrum and so forth. When implemented as a wired system system may include components and interfaces suitable for communicating over wired communications media such as input output I O adapters physical connectors to connect the I O adapter with a corresponding wired communications medium a network interface card MC disc controller video controller audio controller and the like. Examples of wired communications media may include a wire cable metal leads printed circuit board PCB backplane switch fabric semiconductor material twisted pair wire co axial cable fiber optics and so forth.

Platform may establish one or more logical or physical channels to communicate information. The information may include media information and control information. Media information may refer to any data representing content meant for a user. Examples of content may include for example data from a voice conversation videoconference streaming video electronic mail email message voice mail message alphanumeric symbols graphics image video text and so forth. Data from a voice conversation may be for example speech information silence periods background noise comfort noise tones and so forth. Control information may refer to any data representing commands instructions or control words meant for an automated system. For example control information may be used to route media information through a system or instruct a node to process the media information in a predetermined manner. The embodiments however are not limited to the elements or in the context shown or described in .

As described above system may be embodied in varying physical styles or form factors. illustrates embodiments of a small form factor device in which system may be embodied. In embodiments for example device may be implemented as a mobile computing device having wireless capabilities. A mobile computing device may refer to any device having a processing system and a mobile power source or supply such as one or more batteries for example.

As described above examples of a mobile computing device may include a personal computer PC laptop computer ultra laptop computer tablet touch pad portable computer handheld computer palmtop computer personal digital assistant PDA cellular telephone combination cellular telephone PDA television smart device e.g. smart phone smart tablet or smart television mobile internet device MID messaging device data communication device and so forth.

Examples of a mobile computing device also may include computers configured to be worn by a person such as a wrist computer finger computer ring computer eyeglass computer belt clip computer arm band computer shoe computers clothing computers and other wearable computers. In various embodiments for example a mobile computing device may be implemented as a smart phone capable of executing computer applications as well as voice communications and or data communications. Although some embodiments may be described with a mobile computing device implemented as a smart phone by way of example it may be appreciated that other embodiments may be implemented using other wireless mobile computing devices as well. The embodiments are not limited in this context.

As shown in device may include a housing a display an input output I O device and an antenna . Device also may include navigation features . Display may include any suitable display unit for displaying information appropriate for a mobile computing device. I O device may include any suitable I O device for entering information into a mobile computing device. Examples for I O device may include an alphanumeric keyboard a numeric keypad a touch pad input keys buttons switches rocker switches microphones speakers voice recognition device and software and so forth. Information also may be entered into device by way of microphone not shown . Such information may be digitized by a voice recognition device not shown . The embodiments are not limited in this context.

Various embodiments described herein may be implemented using hardware elements software elements or a combination of both. Examples of hardware elements or modules include processors microprocessors circuitry circuit elements e.g. transistors resistors capacitors inductors and so forth integrated circuits application specific integrated circuits ASIC programmable logic devices PLD digital signal processors DSP field programmable gate array FPGA logic gates registers semiconductor device chips microchips chip sets and so forth. Examples of software elements or modules include programs applications computer programs application programs system programs machine programs operating system software middleware firmware routines subroutines functions methods procedures software interfaces application programming interfaces API instruction sets computing code computer code code segments computer code segments words values symbols or any combination thereof. Determining whether an embodiment is implemented using hardware elements and or software elements may vary in accordance with any number of factors considered for the choice of design such as but not limited to desired computational rate power levels heat tolerances processing cycle budget input data rates output data rates memory resources data bus speeds and other design or performance constraints.

One or more aspects of at least one embodiment may be implemented by representative instructions stored on a machine readable storage medium. Such instructions may reside completely or at least partially within a main memory and or within a processor during execution thereof by the machine the main memory and the processor portions storing the instructions then also constituting a machine readable storage media. Instructions representing various logic within the processor which when read by a machine may also cause the machine to fabricate logic to perform the techniques described herein. Such representations known as IP cores may be stored on a tangible machine readable medium and supplied to various customers or manufacturing facilities to load into the fabrication machines that actually make the logic or processor.

While certain features set forth herein have been described with reference to various implementations this description is not intended to be construed in a limiting sense. Hence various modifications of the implementations described herein as well as other implementations which are apparent to persons skilled in the art to which the present disclosure pertains are deemed to lie within the spirit and scope of the present disclosure.

In one or more first embodiments a graphics processing system with a min max texture filter includes input circuitry to receive texel data for a plurality of texel groups associated with a filter footprint wherein each texel group includes four nearest neighboring texels. The min max texture filter includes comparison circuitry coupled to the input circuitry to compare pairs of texel values to determine a minimum or maximum value for a set of texel inputs associated with one comparison iteration. The min max texture filter includes cumulative comparison circuitry coupled to the comparison circuitry to accumulate the maximum or minimum texel value over a number of comparison iterations to compare all texel values in the plurality of texel groups associated with the footprint.

In furtherance of the one or more first embodiments the comparison circuitry further includes a first comparison of min max texel values within texel groups to determine group level min max texel values. The comparison circuitry further includes second comparison circuitry coupled to the first comparison circuitry to perform a second comparison of group level min max texel values to determine a multi group min max texel value. The cumulative comparison circuitry is coupled to at least the second comparison circuitry to accumulate the maximum or minimum multi group min max texel value over a number of iterations of the first and second comparisons sufficient to compare all texel values in the plurality of texel groups associated with the footprint

In furtherance of the one or more first embodiments the comparison circuitry further includes a first comparison of min max texel values within texel groups to determine group level min max texel values. Second comparison circuitry is coupled to first comparison circuitry to perform a second comparison of group level min max texel values to determine a multi group min max texel value. The cumulative comparison circuitry is coupled to at least the second comparison circuitry to accumulate the maximum or minimum multi group min max texel value over a number of iterations of the first and second comparisons sufficient to compare all texel values in the plurality of texel groups associated with the footprint.

In furtherance of the one or more first embodiments the cumulative comparison circuitry further comprises a plurality of min max collector coupled to receive a same min max control signal. Each min max collector is communicatively coupled to first comparison circuitry to receive different group level min max texel values. Each min max collector is communicatively coupled to second comparison circuitry to receive the same multi group min max values. Each min max collector is to compare the different group level min max texel values to the same multi group min max texel values and store the maximum or minimum texel value determined over the number of iterations.

In furtherance of the one or more first embodiments the input circuitry comprises one or more input to receive texel data for n texel groups. The input circuitry includes first comparison circuitry including 2n first stage min max comparison blocks coupled to the input circuitry wherein each first stage comparison block is to receive two texel values and output one sub group min max texel value. The input circuitry includes n second stage min max comparison block coupled to the first stage min max comparison blocks wherein each second stage comparison block is to receive two sub group min max texel values and output one group level min max texel value. Second comparison circuitry includes n 2 third stage min max comparison blocks coupled to the second stage min max comparison blocks wherein each third stage comparison block is to receive two group level min max texel values and output one multi group min max texel value. The cumulative comparison circuitry includes n min max collectors wherein each min max collector is communicatively coupled to one of the second stage min max comparison blocks and one of the third stage min max comparison blocks.

In furtherance of the one or more first embodiments the input circuitry includes one or more input to receive texel data for four texel groups. The input circuitry is coupled to first comparison circuitry having eight first stage min max comparison blocks coupled to the input circuitry wherein each first stage comparison block is to receive two texel values and output one sub group min max texel value. The first comparison circuitry further includes four second stage min max comparison blocks coupled to the first stage min max comparison blocks. Each second stage comparison block is to receive two sub group min max texel values and output one group level min max texel value. The first comparison circuitry is coupled to second comparison circuitry including two third stage min max comparison blocks coupled to the second stage min max comparison blocks wherein each third stage comparison block is to receive two group level min max texel values and output one multi group min max texel value. The cumulative comparison circuitry includes four min max collectors. Each second stage min max comparison blocks is communicatively coupled to one of the min max collectors. Each of the third stage min max comparison blocks is communicatively coupled to two of the min max collectors.

In furtherance of the one or more first embodiments the input circuitry comprises one or more input to receive texel data for four texel groups. The input circuitry is coupled to first comparison circuitry having eight first stage min max comparison blocks coupled to the input circuitry wherein each first stage comparison block is to receive two texel values and output one sub group min max texel value. The first comparison circuitry further includes four second stage min max comparison blocks coupled to the first stage min max comparison blocks wherein each second stage comparison block is to receive two sub group min max texel values and output one group level min max texel value. The first comparison circuitry is coupled to second comparison circuitry having two third stage min max comparison blocks coupled to the second stage min max comparison blocks wherein each third stage comparison block is to receive two group level min max texel values and output one multi group min max texel value. A fourth stage min max comparison block is coupled to the third stage min max comparison blocks wherein the fourth stage comparison block is to receive two multi group min max texel values and output one multi group min max texel value. The cumulative comparison circuitry includes four min max collectors. Each min max collector is communicatively coupled to one of the second stage min max comparison blocks one of the third stage min max comparison blocks and the fourth stage min max comparison block.

In furtherance of the one or more first embodiments the input circuitry includes one or more input to receive texel data for four texel groups. The input circuitry is coupled to first comparison circuitry having eight first stage min max comparison blocks coupled to the input circuitry wherein each first stage comparison block is to receive two texel values and output one sub group min max texel value. The first comparison circuitry further includes four second stage min max comparison block coupled to the first stage min max comparison blocks wherein each second stage comparison block is to receive two sub group min max texel values and output one group level min max texel value. The first comparison circuitry is coupled to second comparison circuitry having two third stage min max comparison block coupled to the second stage min max comparison blocks wherein each third stage comparison block is to receive two group level min max texel values and output one multi group min max texel value. The second comparison circuitry further includes a fourth stage min max comparison block coupled to the third stage min max comparison blocks wherein the fourth stage comparison block is to receive two multi group min max texel values and output one multi group min max texel value. The cumulative comparison circuitry comprises four min max collectors. Each of the second stage min max comparison blocks is communicatively coupled to one of the min max collectors. Each of the third stage min max comparison blocks is communicatively coupled to two of the min max collectors. The fourth stage min max comparison block is communicatively coupled to four of the min max collectors.

In furtherance of the one or more first embodiments the comparison circuitry comprises a plurality of min max comparison blocks each min max comparison block further includes one or more data input signal line one or more control signal line and logic circuitry to pass to one or more data output signal line the larger of two values received on the one or more data input signal line in response to receiving on the one or more control signal line a first control signal indicative of a maximum filter mode and to pass to the data output the smaller value of the two values in response to a second control signal indicative of a minimum filter mode.

In furtherance of the one or more first embodiments the comparison circuitry comprises a plurality of min max comparison blocks. Each min max comparison block further includes a data input signal line a control signal line a data output signal line a subtraction unit coupled to the pair of data input signal line and a selector coupled to an output of the subtraction unit to the input signal line and to the control input signal line. The selector is to differentiate between two values received on the data input signal line based on an output of the subtraction unit and pass to the data output signal line the larger of two values received on the data input signal line in response to receiving on the control signal line a first control signal indicative of a maximum filter mode and to pass to the data output the smaller value of the two values in response to a second control signal indicative of a minimum filter mode.

In furtherance of the one or more first embodiments the cumulative comparison circuitry further comprises an input data signal line to receive the multi group min max texel value. The cumulative comparison circuitry further comprises a buffer to store a predetermined default value or a previously determined min max value. The cumulative comparison circuitry further comprises circuitry coupled to the input data signal line and an output of the buffer the circuitry to pass to one or more data output signal line the larger of two values received from the input data signal line and the buffer output in response to receiving a first control signal indicative of a maximum filter mode and to pass the smaller of two values received from the input data signal line and the buffer output in response to receiving a second control signal indicative of a minimum filter mode. The cumulative comparison circuitry further comprises an update signal line coupling the data output signal to an input of the buffer.

In furtherance of the one or more first embodiments the cumulative comparison circuitry further includes a selector to select between a first input signal line configured to provide a group level min max texel value and a second input signal line configured to provide a multi group min max texel value. The cumulative comparison circuitry further includes a buffer to store a predetermined default value or a previously determined min max values. The cumulative comparison circuitry further includes logic circuitry coupled to an output of the selector and an output of the buffer the logic circuitry to pass to one or more data output signal line the larger of two values received from the selector and the buffer in response to receiving a first control signal indicative of a maximum filter mode and to pass the smaller of two values received from the selector and the buffer in response to receiving a second control signal indicative of a minimum filter mode. The cumulative comparison circuitry further includes an update signal line coupling the data output signal to an input of the buffer.

In one or more second embodiments a method for determining a min max texel value for a plurality of texel values associated with a filter footprint includes receiving texel data for texel groups associated with the footprint wherein each texel group includes four nearest neighboring texels. The method includes iteratively processing the texel data through a binary comparison logic tree. The method includes performing a cumulative comparison to compare a min max texel value determined in one iteration with a min max value determined in another iteration over the number of iterations needed to compare all texel values in the plurality of texel groups associated with the footprint. The method includes storing the maximum or minimum texel value determined from each cumulative comparison.

In furtherance of the one or more second embodiments processing the texel data through the binary comparison logic tree further includes performing a first comparison of texel values within texel groups to determine group level min max texel values and performing a second comparison of group level min max texel values to determine a multi group min max texel value. The cumulative comparison determines a minimum or maximum multi group min max texel value for the number of iterations.

In furtherance of the one or more second embodiments the method further includes sending a min max control signal to a plurality of min max comparison blocks and a plurality of min max collectors. Processing the texel data through the binary comparison logic tree is based on the min max control signal the logic tree including a plurality of stages each stage including a min max comparison block controlled by the min max control signal. The cumulative comparison further includes separately comparing a plurality of different group level min max texel values generated by one iteration to a same multi group min max value generated in another iteration and storing the maximum or minimum texel value determined from each separate comparison over the iterations performed for the footprint.

In furtherance of the one or more second embodiments a first comparison is performed. The first comparison includes determining a first sub group min max texel value based on a comparison of texel values associated with a first pair of texels in a texel group. Performing the first comparison further includes determining a second sub group min max texel value based on a comparison of texel values associated with a second pair of texels in the texel group. Performing the first comparison further includes determining the group level min max texel value based on a comparison of the first and second sub group min max texel values. Performing the second comparison includes determining a first multi group min max texel value based on a comparison of group level min max texel values associated with a first pair of texel groups. Performing the second comparison includes determining a second multi group min max texel value based on a comparison of group level min max texel values associated with a second pair of texel groups. Performing the second comparison includes determining a third multi group min max texel value associated with the first and second pair of texel groups based on a comparison of the first and second multi group min max texel values.

In furtherance of the one or more second embodiments receiving the texel data comprises receiving texel data for more than four texel groups. First and second comparisons are performed for a first iteration to determine a first multi group min max texel value. At least the first comparison is performed to determine one or more second group level min max texel value. The cumulative comparison includes determining the maximum or minimum of the first multi group min max texel value and the one or more second group level min max texel value.

In furtherance of the one or more second embodiments a first comparison is performed. The first comparison includes determining eight sub group min max texel values based on eight comparisons of texel values associated with pairs of texels in each of the texel groups. The first comparison includes determining four group level min max texel value based on four comparisons of pairs of sub group min max texel values. A second comparison is performed. The second comparison includes determining a first and second multi group min max texel value based on two comparisons of group level min max texel values associated with pairs of texel groups. The second comparison includes determining a third multi group min max texel value associated with the first and second pair of texel groups based on a comparison of the first and second multi group min max texel values. The cumulative comparison includes separately comparing a plurality of different group level min max texel values to the third multi group min max value to determine a plurality of maximum or minimum values.

In furtherance of the one or more second embodiments the cumulative comparison further includes receiving the multi group min max texel value. The cumulative comparison further includes storing a predetermined default value or a previously determined min max value. The cumulative comparison further includes passing to one or more data output signal line the larger of the received texel value or stored value in response to receiving a first control signal indicative of a maximum filter mode and passing the smaller of the received texel value or stored value in response to receiving a second control signal indicative of a minimum filter mode. The cumulative comparison further includes updating the stored value with the value passed to the one or more data output signal line.

In one or more third embodiments a computer readable media stores instructions thereon which when executed by a processor cause the processor to perform a method for determining a min max texel value for a plurality of texel values associated with a filter footprint. The method includes receiving texel data for texel groups associated with the footprint wherein each texel group includes four nearest neighboring texels. The method includes iteratively processing the texel data through a binary comparison logic tree. The method includes performing a cumulative comparison to compare a min max texel value determined in one iteration with a min max value determined in another iteration over the number of iterations needed to compare all texel values in the plurality of texel groups associated with the footprint. The method includes storing the maximum or minimum texel value determined from each cumulative comparison.

In furtherance of the one or more second embodiments the media further includes instructions for performing a first comparison by determining a first sub group min max texel value based on a comparison of texel values associated with a first pair of texels in a texel group. The media further includes instructions for performing a first comparison further by determining a second sub group min max texel value based on a comparison of texel values associated with a second pair of texels in the texel group. The media further includes instructions for performing a first comparison further by determining the group level min max texel value based on a comparison of the first and second sub group min max texel values. The media further includes instructions for performing a second comparison by determining a first multi group min max texel value based on a comparison of group level min max texel values associated with a first pair of texel groups. The media further includes instructions for performing the second comparison further by determining a second multi group min max texel value based on a comparison of group level min max texel values associated with a second pair of texel groups. The media further includes instructions for performing a second comparison further by determining a third multi group min max texel value associated with the first and second pair of texel groups based on a comparison of the first and second multi group min max texel values.

It will be recognized that the implementation is not limited to the embodiments so described but can be practiced with modification and alteration without departing from the scope of the appended claims. For example the above embodiments may include specific combination of features. However the above embodiments are not limited in this regard and in various implementations the above embodiments may include the undertaking only a subset of such features undertaking a different order of such features undertaking a different combination of such features and or undertaking additional features than those features explicitly listed. The scope of the implementation should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

