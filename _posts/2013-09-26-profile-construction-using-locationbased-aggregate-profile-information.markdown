---

title: Profile construction using location-based aggregate profile information
abstract: Systems and methods are disclosed for creating a user profile for a subject user based on historical aggregate profile data for locations at which the subject user was previously located. In one embodiment, one or more location and time period pairs are determined for the subject user, each defining a previous location of the subject user and a time period during which the subject user was at the location. For a plurality of location and time period pairs, a plurality of historical aggregate profiles for a corresponding plurality of sub-bands within the time period defined by each location and time period pair in the plurality of location and time period pairs is obtained. A user profile for the subject user is created based on the plurality of historical aggregate profiles for the corresponding plurality of sub-bands based on relevancy ratings for the plurality of sub-bands.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09053169&OS=09053169&RS=09053169
owner: Waldeck Technology, LLC
number: 09053169
owner_city: Wilmington
owner_country: US
publication_date: 20130926
---
The present application is a continuation of U.S. patent application Ser. No. 12 764 150 filed on Apr. 21 2010 now U.S. Pat. No. 8 554 770 entitled Profile Construction Using Location Based Aggregate Profile Information which claims the benefit of provisional patent application Ser. No. 61 173 625 filed Apr. 29 2009 the disclosures of which are hereby incorporated herein by reference in its entirety.

The present disclosure relates to an automated process for creating a user profile of a subject user.

Many systems and services rely on user profiles of their users. However oftentimes users do not want to take the time to adequately complete their user profiles. As such there is a need for a system and method for creating user profiles for users that requires minimal user input from the users.

Systems and methods are disclosed for creating a user profile for a subject user based on historical aggregate profile data for locations at which the subject user was previously located. In one embodiment one or more location and time period pairs are determined for the subject user. Each location and time period pair defines a previous location of the subject user and a time period during which the subject user was at the previous location. For a plurality of location and time period pairs a plurality of historical aggregate profiles for a corresponding plurality of sub bands within the time period defined by each location and time period pair in the plurality of location and time period pairs is obtained. A user profile for the subject user is created based on the plurality of historical aggregate profiles for the corresponding plurality of sub bands based on relevancy ratings for the plurality of sub bands. For each location and time period pair the historical aggregate profile data is generally an aggregation of user profiles of a number of users relevant to location and time period pair. A user profile for the subject user is then created based on the historical aggregate profile data for the one or more location and time period pairs. The user profile for the subject user is created based on the plurality of historical aggregate profiles for the corresponding plurality of sub bands by for each location and time period pair in the plurality of location and timer periods of the one or more location and time period pairs combining the plurality of historical aggregate profiles for the plurality of sub bands within the time period defined by the location and time period pair based on relevancy ratings for the plurality of sub bands to provide a consolidated profile for the location and time period pair by merging at least a subset of each historical aggregate profile of the plurality of historical aggregate profiles into the consolidated profile for the location and time period pair if the relevancy rating for one of the plurality of sub bands that corresponds to the historical aggregate profile is greater than or equal to a predefined cut off value

Those skilled in the art will appreciate the scope of the present invention and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the invention and illustrate the best mode of practicing the invention. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the invention and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

As discussed below in detail the MAP server operates to obtain current locations including location updates and user profiles of the users through N of the mobile devices through N. The current locations of the users through N can be expressed as positional geographic coordinates such as latitude longitude pairs and a height vector if applicable or any other similar information capable of identifying a given physical point in space in a two dimensional or three dimensional coordinate system. Using the current locations and user profiles of the users through N the MAP server is enabled to provide a number of features such as but not limited to maintaining a historical record of anonymized user profile data by location generating aggregate profile data over time for a Point of Interest POI or Area of Interest AOI using the historical record of anonymized user profile data identifying crowds of users using current locations and or user profiles of the users through N and generating aggregate profiles for crowds of users at a POI or in an AOI using the current user profiles of users in the crowds. While not essential for additional information regarding the MAP server the interested reader is directed to U.S. patent application Ser. No. 12 645 535 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT U.S. patent application Ser. No. 12 645 532 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT U.S. patent application Ser. No. 12 645 539 entitled ANONYMOUS CROWD TRACKING U.S. patent application Ser. No. 12 645 544 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS U.S. patent application Ser. No. 12 645 546 entitled CROWD FORMATION FOR MOBILE DEVICE USERS U.S. patent application Ser. No. 12 645 556 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT and U.S. patent application Ser. No. 12 645 560 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS all of which were filed on Dec. 23 2009 and are hereby incorporated herein by reference in their entireties. Note that while the MAP server is illustrated as a single server for simplicity and ease of discussion it should be appreciated that the MAP server may be implemented as a single physical server or multiple physical servers operating in a collaborative manner for purposes of redundancy and or load sharing.

In general the one or more profile servers operate to store user profiles for a number of persons including the users through N of the mobile devices through N. For example the one or more profile servers may be servers providing social network services such as the Facebook social networking service the MySpace social networking service the LinkedIN social networking service and or the like. The MAP server may directly or indirectly obtain user profiles of some if not all of the users through N from the one or more profile servers . The location server generally operates to receive location updates from the mobile devices through N and make the location updates available to entities such as for instance the MAP server . In one exemplary embodiment the location server is a server operating to provide Yahoo s FireEagle service. Before proceeding it should be noted that while the system of illustrates an embodiment where the one or more profile servers and the location server are separate from the MAP server the present disclosure is not limited thereto. In an alternative embodiment the functionality of the one or more profile servers and or the location server may be implemented within the MAP server .

The mobile devices through N may be mobile smart phones portable media player devices mobile gaming devices or the like. Some exemplary mobile devices that may be programmed or otherwise configured to operate as the mobile devices through N are the Apple iPhone the Palm Pre the Sam sung Rogue the Blackberry Storm and the Apple iPod Touch device. However this list of exemplary mobile devices is not exhaustive and is not intended to limit the scope of the present disclosure.

The mobile devices through N include MAP clients through N MAP applications through N third party applications through N and location functions through N respectively. Using the mobile device as an example the MAP client is preferably implemented in software. In general in the preferred embodiment the MAP client is a middleware layer operating to interface an application layer i.e. the MAP application and the third party applications to the MAP server . More specifically the MAP client enables the MAP application and the third party applications to request and receive data from the MAP server . In addition the MAP client enables applications such as the MAP application and the third party applications to access data from the MAP server . Note that the MAP clients through N may alternatively be implemented with the MAP applications through N and or the third party applications through N.

The MAP application is also preferably implemented in software. The MAP application generally provides a user interface component between the user and the MAP server . More specifically among other things the MAP application may enable the user to initiate historical requests for historical data e.g. historical aggregate profile data or crowd requests for crowd data e.g. aggregate profile data and or crowd characteristics data from the MAP server for a POI or AOI. The MAP application also enables the user to configure various settings.

The third party applications are preferably implemented in software. The third party applications operate to access the MAP server via the MAP client . The third party applications may utilize data obtained from the MAP server in any desired manner. As an example one of the third party applications may be a gaming application that utilizes historical aggregate profile data to notify the user of POIs or AOIs where persons having an interest in the game have historically congregated.

The location function may be implemented in hardware software or a combination thereof. In general the location function operates to 8 determine or otherwise obtain the location of the mobile device . For example the location function may be or include a Global Positioning System GPS receiver.

The subscriber device is a physical device such as a personal computer a mobile computer e.g. a notebook computer a netbook computer a tablet computer etc. a mobile smart phone or the like. The subscriber associated with the subscriber device is a person or entity. In general the subscriber device enables the subscriber to access the MAP server via a web browser to obtain various types of data preferably for a fee. For example the subscriber may pay a fee to have access to historical aggregate profile data for one or more POIs and or one or more AOIs pay a fee to have access to crowd data such as aggregate profiles for crowds located at one or more POIs and or located in one or more AOIs pay a fee to track crowds or the like. Note that the web browser is exemplary. In another embodiment the subscriber device is enabled to access the MAP server via a custom application.

The third party server is a physical server that has access to data from the MAP server such as historical aggregate profile data for one or more POIs or one or more AOIs or crowd data such as aggregate profiles for one or more crowds at one or more POIs or within one or more AOIs. Based on the data from the MAP server the third party server operates to provide a service such as for example targeted advertising. For example the third party server may obtain anonymous aggregate profile data for one or more crowds located at a POI and then provide targeted advertising to known users located at the POI based on the anonymous aggregate profile data. Note that while targeted advertising is mentioned as an exemplary service provided by the third party server other types of services may additionally or alternatively be provided. Other types of services that may be provided by the third party server will be apparent to one of ordinary skill in the art upon reading this disclosure.

Lastly in this embodiment the MAP server includes a profile creation function . The profile creation function is preferably implemented in software but is not limited thereto. As discussed below in detail the profile creation function operates to create user profiles for subject users based on historical aggregate profile data for locations at which the subject users were previously located. The subject users may include but are not limited to the users through N the subscriber users of social networking services hosted by the one or more profile servers and or users associated with the third party server . Using the user as an example the profile creation function operates to create the user profile of the user based on historical aggregate profile data for a number of previous locations at which the user was previously located during corresponding time periods during which the user was at those previous locations.

Before describing the operation of the profile creation function in detail E provide a description of some of the features of the MAP server that may be utilized directly or indirectly by the profile creation function . is a block diagram of the MAP server of according to one embodiment of the present disclosure. As illustrated the MAP server includes an application layer a business logic layer and a persistence layer . The application layer includes a user web application a mobile client server protocol component and one or more data Application Programming Interfaces APIs . The user web application is preferably implemented in software and operates to provide a web interface for users such as the subscriber to access the MAP server via a web browser. The mobile client server protocol component is preferably implemented in software and operates to provide an interface between the MAP server and the MAP clients through N hosted by the mobile devices through N. The data APIs enable third party services such as that hosted by the third party server to access the MAP server .

The business logic layer includes a profile manager a location manager a history manager a crowd analyzer and an aggregation engine each of which is preferably implemented in software. In addition in the embodiment of the business logic layer also includes the profile creation function . Note however that in the embodiment of the business logic layer does not include the profile creation function . In general the profile manager manages the creation and storage of user profiles of the users through N. In the embodiment of the profile manager utilizes the profile creation function to create and store user profiles for at least some if not all of the users through N. In addition for any of the users through N whose user profiles are not created by the profile creation function the profile manager obtains user profiles for those users directly or indirectly from the one or more profile servers and stores corresponding user profiles at the MAP server . In the embodiment of the profile manager obtains user profiles of the users through N indirectly or directly from the one or more profile servers and stores corresponding user profiles for the users through N at the MAP server .

The location manager operates to obtain the current locations of the users through N including location updates. As discussed below the current locations of the users through N may be obtained directly from the mobile devices through N and or obtained from the location server . The location manager stores the current locations of the users through N along with the user profiles of the users through N in corresponding user records in the persistence layer .

The history manager generally operates to maintain a historical record of anonymized user profile data by location. The crowd analyzer operates to form crowds of users. In one embodiment the crowd analyzer utilizes a spatial crowd formation algorithm. However the present disclosure is not limited thereto. In addition the crowd analyzer may further characterize crowds to reflect degree of fragmentation best case and worst case degree of separation DOS and or degree of bi directionality of relationships. Still further the crowd analyzer may also operate to track crowds. The aggregation engine generally operates to provide aggregate profile data as needed. The aggregate profile data may be historical aggregate profile data for one or more geographic locations e.g. one or more POIs or one or more geographic areas e.g. one or more AOIs or aggregate profile data for crowd s currently at one or more geographic locations or in one or more geographic areas.

The persistence layer includes an object mapping layer and a datastore . The object mapping layer is preferably implemented in software. The datastore is preferably a relational database which is implemented in a combination of hardware i.e. physical data storage hardware and software i.e. relational database software . In this embodiment the business logic layer is implemented in an object oriented programming language such as for example Java. As such the object mapping layer operates to map objects used in the business logic layer to relational database entities stored in the datastore . Note that in one embodiment data is stored in the datastore in a Resource Description Framework RDF compatible format.

In an alternative embodiment rather than being a relational database the datastore may be implemented as an RDF datastore. More specifically the RDF datastore may be compatible with RDF technology adopted by Semantic Web activities. Namely the RDF datastore may use the Friend Of A12 Friend FOAF vocabulary for describing people their social networks and their interests. In this embodiment the MAP server may be designed to accept raw FOAF files describing persons their friends and their interests. These FOAF files are currently output by some social networking services such as LiveJournal and Facebook . The MAP server may then persist RDF descriptions of the users through N as a proprietary extension of the FOAF vocabulary that includes additional properties desired for the system .

Using the current locations of the users through N and the user profiles of the users through N the MAP server can provide a number of features. A first feature that may be provided by the MAP server is historical storage of anonymized user profile data by location which as discussed below can be utilized to provide historical aggregate profiles for desired locations or areas. This historical storage of anonymized user profile data by location is performed by the history manager of the MAP server . More specifically as illustrated in in the preferred embodiment the history manager maintains lists of users located in a number of geographic regions or location buckets. Preferably the location buckets are defined by floor latitude longitude to a desired resolution. The higher the resolution the smaller the size of the location buckets. For example in one embodiment the location buckets are defined by floor latitude longitude to a resolution of 1 10 000of a degree such that the lower left hand corners of the squares illustrated in are defined by the floor latitude longitude values at a resolution of 1 10 000of a degree. In the example of users are represented as dots and location buckets through have lists of 1 3 2 1 1 2 1 2 and 3 users respectively.

As discussed below in detail at a predetermined time interval such as for example minutes the history manager makes a copy of the lists of users in the location buckets anonymizes the user profiles of the users in the lists to provide anonymized user profile data for the corresponding location buckets and stores the anonymized user profile data in a number of history objects. In one embodiment a history object is stored for each location bucket having at least one user. In another embodiment a quadtree algorithm is used to efficiently create history objects for geographic regions i.e. groups of one or more adjoining location buckets .

After determining the location bucket for the location of the user the history manager determines whether the user is new to the location bucket step . In other words the history manager determines whether the user is already on the list of users for the location bucket. If the user is new to the location bucket the history manager creates an entry for the user in the list of users for the location bucket step . Returning to step if the user is not new to the location bucket the history manager updates the entry for the user in the list of users for the location bucket step . At this point whether proceeding from step or the user is flagged as active in the list of users for the location bucket step .

The history manager then determines whether the user has moved from another location bucket step . More specifically the history manager determines whether the user is included in the list of users for another location bucket and is currently flagged as active in that list. If the user has not moved from another location bucket the process proceeds to step . If the user has moved from another location bucket the history manager flags the user as inactive in the list of users for the other location bucket from which the user has moved step .

At this point whether proceeding from step or the history manager determines whether it is time to persist step . More specifically as mentioned above the history manager operates to persist history objects at a predetermined time interval such as for example every minutes. Thus the history manager determines that it is time to persist if the predetermined time interval has expired. If it is not time to persist the process returns to step and is repeated for a next received location update which will typically be for another user. If it is time to persist the history manager creates a copy of the lists of users for the location buckets and passes the copy of the lists to an anonymization and storage process step . In this embodiment the anonymization and storage process is a separate process performed by the history manager . The history manager then removes inactive users from the lists of users for the location buckets step . The process then returns to step and is repeated for a next received location update which will typically be for another user.

For anonymization an anonymous user record is created from the user record . In the anonymous user record the user ID is replaced with a new user ID that is not connected back to the user which is also referred to herein as an anonymous user ID. This new user ID is different than any other user ID used for anonymous user records created from the user record of the user for any previous or subsequent time periods. In this manner anonymous user records for a single user created over time cannot be linked to one another.

In addition anonymous profile category records through M are created for the profile category records through M. In the anonymous profile category records through M the user ID is replaced with a new user which may be the same new user ID included in the anonymous user record . The anonymous profile category records through M include the same category IDs and lists of keywords as the corresponding profile category records through M. Note that the location of the user is not stored in the anonymous user record . With respect to location it is sufficient that the anonymous user record is linked to a location bucket.

In another embodiment the history manager performs anonymization in a manner similar to that described above with respect to . However in this embodiment the profile category records for the group of users in a location bucket or the group of users in a number of location buckets representing a node in a quadtree data structure see below may be selectively randomized among the anonymous user records of those users. In other words each anonymous user record would have a user profile including a selectively randomized set of profile category records including keywords from a cumulative list of profile category records for all of the users in the group.

In yet another embodiment rather than creating anonymous user records for the users in the lists maintained for the location buckets the history manager may perform anonymization by storing an aggregate user profile for each location bucket or each group of location buckets representing a node in a quadtree data structure see below . The aggregate user profile may include a list of all keywords and potentially the number of occurrences of each keyword in the user profiles of the corresponding group of users. In this manner the data stored by the history manager is not connected back to the users through N.

Each history object includes location information timing information data and quadtree data structure information. The location information included in the history object defines a combined geographic area of the location bucket s forming the corresponding node of the quadtree data structure. For example the location information may be latitude and longitude coordinates for a northeast corner of the combined geographic area of the node of the quadtree data structure and a southwest corner of the combined geographic area for the node of the quadtree data structure. The timing information includes information defining a time window for the history object which may be for example a start time for the corresponding time interval and an end time for the corresponding time interval. The data includes the anonymized user profile data for the users in the list s maintained for the location bucket s forming the node of the quadtree data structure for which the history object is stored. In addition the data may include a total number of users in the location bucket s forming the node of the quadtree data structure. Lastly the quadtree data structure information includes information defining a quadtree depth of the node in the quadtree data structure.

In order to form the quadtree data structure the history manager determines whether there are any more base quadtree regions to process step . If there are more base quadtree regions to process the history manager sets a current node to the next base quadtree region to process which for the first iteration is the first base quadtree region step . The history manager then determines whether the number of users in the current node is greater than a predefined maximum number of users and whether a current quadtree depth is less than a maximum quadtree depth step . In one embodiment the maximum quadtree depth may be reached when the current node corresponds to a single location bucket. However the maximum quadtree depth may be set such that the maximum quadtree depth is reached before the current node reaches a single location bucket.

If the number of users in the current node is greater than the predefined maximum number of users and the current quadtree depth is less than a maximum quadtree depth the history manager creates a number of child nodes for the current node step . More specifically the history manager creates a child node for each quadrant of the current node. The users in the current node are then assigned to the appropriate child nodes based on the location buckets in which the users are located step and the current node is then set to the first child node step . At this point the process returns to step and is repeated.

Once the number of users in the current node is not greater than the predefined maximum number of users or the maximum quadtree depth has been reached the history manager determines whether the current node has any more sibling nodes step . Sibling nodes are child nodes of the same parent node. If so the history manager sets the current node to the next sibling node of the current node step and the process returns to step and is repeated. Once there are no more sibling nodes to process the history manager determines whether the current node has a parent node step . If so since the parent node has already been processed the history manager determines whether the parent node has any sibling nodes that need to be processed step . If not the process returns to step and is repeated. If the parent node has any sibling nodes that need to be processed the history manager sets the next sibling node of the parent node to be processed as the current node step . From this point the process returns to step and is repeated. Returning to step if the current node does not have a parent node the process returns to step and is repeated until there are no more base quadtree regions to process. Once there are no more base quadtree regions to process the finished quadtree data structure is returned to the process of such that the history manager can then store the history objects for nodes in the quadtree data structure having at least one user step .

Next the history manager determines whether the number of users in the child node is greater than the predetermined maximum which again for this example is 3. Since the number of users in the child node is greater than 3 the history manager divides the child node into four child nodes through as illustrated in . The child nodes through are children of the child node . The history manager then determines whether the number of users in the child node is greater than the predetermined maximum number of users which again is 3. Since there are more than 3 users in the child node the history manager further divides 21 the child node into four child nodes through as illustrated in .

The history manager then determines whether the number of users in the child node is greater than the predetermined maximum number of users which again is 3. Since the number of users in the child node is not greater than the predetermined maximum number of users the child node is identified as a node for the finished quadtree data structure and the history manager proceeds to process the sibling nodes of the child node which are the child nodes through . Since the number of users in each of the child nodes through is less than or equal to the predetermined maximum number of users the child nodes through are also identified as nodes for the finished quadtree data structure.

Once the history manager has finished processing the child nodes through the history manager identifies the parent node of the child nodes through which in this case is the child node . The history manager then processes the sibling nodes of the child node which are the child nodes through . In this example the number of users in each of the child nodes through is less than the predetermined maximum number of users. As such the child nodes through are identified as nodes for the finished quadtree data structure.

Once the history manager has finished processing the child nodes through the history manager identifies the parent node of the child nodes through which in this case is the child node . The history manager then processes the sibling nodes of the child node which are the child nodes through . More specifically the history manager determines that the child node includes more than the predetermined maximum number of users and as such divides the child node into four child nodes through as illustrated in . Because the number of users in each of the child nodes through is not greater than the predetermined maximum number of users the child nodes through are identified as nodes for the finished quadtree data structure. Then the history manager proceeds to process the child nodes and . Since the number of users in each of the child nodes and is not greater than the predetermined maximum number of users the child nodes and are identified as nodes for the finished quadtree data structure. Thus at completion the quadtree data structure for the base quadtree region includes the child nodes through the child nodes through the child nodes through and the child nodes and as illustrated in .

As discussed above the history manager stores a history object for each of the nodes in the quadtree data structure including at least one user. As such in this example the history manager stores history objects for the child nodes and the child nodes and the child nodes and and the child node . However no history objects are stored for the nodes that do not have any users i.e. the child nodes and the child node the child nodes and and the child node .

The sources for the previous locations of the subject user may generally include any source of previous locations of the subject user and corresponding times at which the subject user was located at those previous locations. For example the sources for the previous locations of the subject user may be the location server a mobile telecommunications service provider of the subject user a network node s maintaining a historical record of network accesses made by a mobile device of the subject user an electronic calendar maintained by or for the subject user a financial institution providing financial services to the subject user or the like. Regarding the location server the user information may include credentials e.g. a username and or password that enable the profile creation function to access previous locations stored by the location server for the subject user and times at which the subject user was at those previous locations. Regarding the mobile telecommunications service provider as will be appreciated by one having ordinary skill in the art the mobile telecommunications service provider typically maintains a record of data that is or can be used to derive previous locations at which the subject user was located and times at which the subject user was at those previous locations. As such the user information may include credentials e.g. a username and or password that enable the profile creation function to access the mobile telecommunications service provider of the subject user to obtain information defining a number of previous locations of the subject user and times at which the subject user was at those previous locations.

In a similar manner one or more network nodes may track wireless Local Area Network LAN access points e.g. WiFi hotspots at which a mobile device of the subject user has accessed the network . Locations of such LAN access points are known via services such as Skyhook Wireless. As such the user information may include information enabling the profile creation function to obtain information defining LAN access points from which the mobile device of the subject user has accessed the network and the times of those network accesses. The profile creation function may then obtain the locations of the LAN access points and store those locations as previous locations of the subject user.

A financial institution of the subject user maintains records of financial transactions e.g. credit card payments conducted by the subject user as well as locations at which the financial transactions were conducted and times at which the financial transactions were conducted. As such the user information may include information that enables the profile creation function to obtain previous locations of the subject user and times at which the subject user was at those previous locations from the financial institution.

The one or more sources of previous locations of the subject user may additionally or alternatively include geo tagged content associated with the subject user. The geo tagged content may be for example geo tagged electronic correspondence such as emails text messages tweets or the like that have been tagged with the location of the subject user at the time of sending the electronic correspondence. As another example the geo tagged content may be digital pictures captured by a digital camera of the subject user that is equipped with a GPS receiver and that tags the digital pictures with locations and times at which the digital pictures were captured by the digital camera. As such the user information may include information enabling the profile creation function to obtain the previous locations of the subject user and corresponding times at which the subject user was at those locations using geo tags applied to content associated with the subject user. In a similar manner content e.g. pictures or videos associated with the subject user may be analyzed to determine locations at which the content was created where the determined locations can be combined with times at which the content was created to provide previous locations of the subject user and times at which the subject user was at those previous locations.

The one or more sources of the user interests of the subject user may be for example one or more of the profile servers or one or more websites. More specifically the user information may include credentials e.g. username and or password enabling the profile creation function to access a user profile of the subject user from one or more social networking services e.g. Facebook MySpace Linked In or the like hosted by the one or more profile servers . Interests of the subject user may then be extracted from the user profile s of the subject user obtained from such sources. In addition or alternatively the user information may include Uniform Resource Locators URLs of one or more websites that may be crawled or otherwise analyzed to determine interests of the subject user.

In addition to or as an alternative to identifying one or more sources for the previous locations and user interests of the subject user the user information may include information manually entered by the subject user that defines one or more previous locations of the subject user and corresponding times at which the subject user was at those previous locations. Likewise the user information may include information manually entered by the subject user that defines one or more interests of the subject user.

Next the profile creation function obtains information regarding the previous locations and interests of the subject user from the identified sources step . More specifically for each identified source of previous locations of the subject user the profile creation function obtains information from the identified source that defines previous locations of the subject user and corresponding times at which the subject user was at those previous locations. For each identified source of user interests for the subject user the profile creation function obtains information representative of user interests of the subject user from the source and then normalizes the information into a set of interests or keywords recognized by the MAP server .

The profile creation function then generates a list of location and time period pairs for the subject user step . Each location and time period pair defines a previous location of the subject user and a time period during which the subject user was at the previous location. The previous location of the subject user may be expressed as a specific geographic location such as for example geographic coordinates or as a geographic area such as for example a geographic area defined as a predefined maximum distance from a specific geographic location. In order to generate the list of location and time period pairs the profile creation function analyzes information obtained from the identified sources of previous locations of the subject user. The manner in which the information is analyzed may vary depending on the source of the information.

In one embodiment a source of the previous locations of the subject user may provide a location history of the subject user that includes a list of geographic coordinates and corresponding timestamps defining times at which the subject user was located at the locations defined by the geographic coordinates. In this case the profile creation function may analyze the location history of the subject user to provide a number of corresponding location and time period pairs. Assuming that the location history includes frequent location updates for the subject user during the analysis the profile creation function may identify groups of entries in the location history that are adjacent in time and have locations within a defined degree of tolerance from one another. Each identified group may be used to define a location and time period pair. The location for the location and time period pair may be an average or center of mass of the geographic coordinates for the entries in the group or a geographic area encompassing all of the geographic coordinates for the entries in the group. The time period for the location and time period pair may be a time period starting at an earliest timestamp of the entries in the group and ending at a latest timestamp of the entries in the group. When determining the time period for the location and time period pair an amount of time it would take to travel from the location for the last entry in time for the group to the location for the first entry for the next group of entries in the location history may also be considered. For example the time period may be extended based on the amount of time it would take to travel from the location for the last entry in time for the group to the location for the first entry for the next group of entries in the location history.

In another embodiment a location and time period pair is generated from information defining a single previous location of the subject user and a corresponding time at which the subject user was at the previous location. If the timing information provided from the source is precise e.g. a specific time on a specific date then the profile creation function may create the location and time period pair by setting the location of the location and time period pair to the previous location of the subject user as defined by the information from the source. The time period for the location and time period pair may then be defined as a time period that extends a predefined amount of time before and after the precise time identified in the information from the source. For example if the precise time identified in the information from the source is 11 30 AM on a particular day the time period for the location and time period pair may be 10 30 AM to 12 30 PM on the particular day. In contrast if the timing information from the source is imprecise e.g. a specific date with no time of day the profile creation function may create the location and time period pair by setting the location of the location and time period pair to the previous location of the subject user as defined by the information from the source and the time period for the location and time period pair to a time period corresponding to the imprecise timing information from the source e.g. 12 00 AM to 12 00 PM on the specific date identified in the information from the source .

The profile creation function also generates a list of weighted user interests for the subject user step . As discussed above in one embodiment the profile creation function obtains information representing user interests of the subject user from the one or more identified sources and then normalizes the information into a number of keywords recognized by the MAP server and representing the user interests of the subject user. Weights are preferably assigned to the user interests of the subject user. For example for each user interest a weight may be assigned to the user interest based on a number of occurrences of the user interest in the information obtained from the one or more sources. For example if the sources include a single website keyword analysis may be performed on the website to extract one or more keywords expressing user interests of the subject user where weights are assigned to those keywords based on the number of occurrences of those keywords in the website.

Next the profile creation function obtains historical aggregate profile data for each location and time period pair step . As described below in detail the profile creation function sends a historical request to the aggregation engine of the MAP server for each location and time period pair. For each location and time period pair the aggregation engine aggregates the anonymized user profile data stored in historical records that are relevant to the location and time period pair to provide historical aggregate profile data for the location and time period pair. In the preferred embodiment the time period is divided into a number of sub bands and the historical aggregate profile data for the location and time period pair includes a historical aggregate profile for each of the sub bands. The historical aggregate profile for a sub band includes a list of keywords or interests appearing in the user profiles stored in the historical records that are relevant to the location and sub band i.e. the user profiles that contributed to the historical aggregate profile for the sub band . In addition for each keyword in the list the historical aggregate profile preferably includes a representation value that is indicative of a degree to which the keyword is represented or included in the user profiles from the relevant historical records that contributed to the historical aggregate profile. In one embodiment for each keyword in the list the representation value is a number of occurrences or user matches for the keyword in the user profiles stored in the historical records that are relevant to the location and sub band. In another embodiment for each keyword in the list the representation value is a ratio of a number of occurrences for the keyword in the user profiles stored in the historical records that are relevant to the location and sub band to a total number of users for the historical records that are relevant to the location and sub band.

The profile creation function then processes the historical aggregate profile data to provide a consolidated profile for each location and time period pair step . More specifically for each location and time period pair the historical aggregate profile data for the location and time period pair is consolidated or combined to provide a consolidated profile for the location and time period pair. The profile creation function then merges similar consolidated profiles from the consolidated profiles created for the location and time period pairs to thereby provide one or more unique profiles step . The profile creation function then creates a user profile for the subject user based on one or more of the unique profiles step . In one embodiment the profile creation function automatically selects one of the unique profiles as the user profile of the subject user. For example the profile creation function may obtain an aggregate profile of a crowd of users in which the subject user is currently located from the MAP server . The profile creation function may then select one of the unique profiles created in step that is most similar to the aggregate profile of the crowd of users in which the subject user is currently located as the user profile of the subject user. In another embodiment the profile creation function enables the subject user to select one of the unique profiles as his or her user profile. In another embodiment the profile creation function enables the subject user to modify one of the unique profiles to provide his or her user profile. In yet another embodiment the profile creation function enables the subject user to combine one or more of the unique profiles or subsets of one or more of the unique profiles to provide his or her user profile. At this point the user profile of the subject user may be stored or otherwise utilized.

The relevancy rating of the sub band may depend on how the time period for the location and time period pair was defined a degree of similarity between the historical aggregate profile for the sub band and the user interests of the subject user a degree of similarity between additional descriptive information for the location of the location and time period pair and the user interests of the subject user or a combination thereof. Note that the manner in which the time period was defined preferably influences the relevancy rating of the sub band more than the degree of similarity between the historical aggregate profile for the sub band and the user interests of the subject user and the degree of similarity between additional descriptive information for the location of the location and time period pair and the user interests of the subject user. Similarly the degree of similarity between the historical aggregate profile for the sub band and the user interests of the subject user preferably influences the relevancy rating of the sub band more than the degree of similarity between additional descriptive information for the location of the location and time period pair and the user interests of the subject user.

More specifically in one embodiment if the time period for the location and time period pair was manually defined by the subject user then the sub bands within the time period are assigned a higher relevancy rating than sub bands for time periods that were not manually defined by the subject user. In addition if the time period is imprecise in that the subject user was not likely at the corresponding location for the entire time period the profile creation function may first determine a time or subset of the time period during which it is most likely that the subject user was at the corresponding location. The time or subset of the time period during which it is most likely that the subject user was at the corresponding location may be determined based on for example a comparison of additional information known about the location and possibly the user interests of the subject user. For example if the time period is a particular week and the location is a location at which different types of events e.g. concerts sporting events etc. are held types of events held at the location during the particular week may be determined and compared to the user interests of the subject user. Based on the comparison the profile creation function can determine the particular day during the week and possibly a particular time period within a particular day during which the subject user was most likely to be at the location. Then the sub bands of the time period for the location and time period pair corresponding to the time during which the subject user was most likely at the location are assigned a higher relevancy rating than the other sub bands in the time period. Still further if the time period for the location and time period pair is a time period encompassing a specific time at which it is known that the subject user was at the location then the sub band that includes the specific time at which it is known that the subject user was at the location is given a greater relevancy rating than the other sub bands. In addition the relevancy ratings of the sub bands may decrease as they move out from the sub band that includes the specific time at which it is known that the subject user was at the location.

The relevancy rating of the location and time period pair may also depend on the similarity of the location and time period pair to other location and time period pairs. If the one or more sub bands within the time period for the location and time period pair are the same as one or more sub bands within a time period of another location and time period pair having the same or substantially the same location then the relevancy rating s of the one or more sub bands within the time period for the location and time period pair may be adjusted accordingly. For example if the other location and time period pair has a narrower time period and was manually defined by the subject user then the relevancy ratings of the one or more sub bands within the time period of the location and time period pair may be increased as compared to the relevancy ratings of the other sub bands within the time period for the location and time period pair e.g. set to a maximum value .

Next the profile creation function determines whether a relevancy rating has been determined for the last sub band in the time period for the location and time period pair step . If not the process returns to step and is repeated for the next sub band. Once relevancy ratings have been determined for all of the sub bands the profile creation function sorts the historical aggregate profiles for the sub bands according to the relevancy ratings of the sub bands to provide a sorted list of historical aggregate profiles for the location and time period pair step . Note that step is optional.

The profile creation function then gets the relevancy rating for the next historical aggregate profile in the sorted list of historical aggregate profiles for the location and time period pair step . The relevancy rating for the historical aggregate profile is the relevancy rating determined for the sub band for which the historical aggregate profile has been provided. Next the profile creation function determines whether the relevancy rating for the historical aggregate profile is greater than or equal to a predefined cut off value step . The predefined cut off value is a minimum relevancy rating required before a historical aggregate profile for a sub band contributes to the consolidated profile for the location and time period pair. In one embodiment the predefined cut off value may vary depending on a highest relevancy rating for all of the sub bands of the time period for the location and time period pair a number of sub bands in the time period for the location and time period pair or both. For instance the predefined cut off value may decrease as the highest relevancy rating for all of the sub bands decreases and increase as the number of sub bands increases. If the relevancy rating is less than the predefined cut off value the process proceeds to step . If the relevancy rating is greater than or equal to the predefined cut off value the profile creation function determines whether the relevancy rating is greater than or equal to a predefined threshold value step . The predefined threshold value is greater than the predefined cut off value. In one embodiment the predefined threshold value is half a difference between a maximum relevancy rating and the predefined cut off value plus the predefined cut off value.

If the relevancy rating is greater than or equal to the predefined threshold value the profile creation function merges the complete historical aggregate profile for the sub band into the consolidated profile for the location and time period pair step . More specifically for each keyword or interest in the historical aggregate profile for the sub band the profile creation function adds the keyword to the consolidated profile if the keyword is not already included in the consolidated profile along with the representation value for the keyword. If the keyword is already included in the consolidated profile the profile creation function computes an average of or otherwise combines the representation value for the keyword from the historical aggregate profile for the sub band and the representation value for the keyword in the consolidated profile for the location and time period pair. This average or combined representation value is then stored as the new representation value for the keyword in the consolidated profile. Thus the consolidated profile for the location and time period pair is generated to include a list of keywords or interests appearing in the historical aggregate profiles for the sub bands of the time period and for each keyword a combined e.g. average representation value for the keyword among the historical aggregate profiles for the sub bands of the time period.

Returning to step if the relevancy rating is less than the predefined threshold value the profile creation function merges a subset of the historical aggregate profile for the sub band into the consolidated profile for the location and time period pair step . Specifically the profile creation function only merges keywords or interests from the historical aggregate profile for the sub band that are already included in the consolidated profile for the location and time period pair into the consolidated profile. In one embodiment when merging interests from the historical aggregate profile into the consolidated profile the profile creation function computes an average of the representation value for the keyword from the historical aggregate profile for the sub band and the representation value for the keyword from the consolidated profile. The resulting average is then stored as the representation value for the keyword in the consolidated profile.

At this point whether proceeding from step or the profile creation function determines whether the last historical aggregate profile in the sorted list of historical aggregate profiles for the location and time period pair has been processed step . If not the process returns to step and is repeated for the next historical aggregate profile in the sorted list. Once all of the historical aggregate profiles in the sorted list are processed the process ends.

Returning to step if there are more unique profiles the profile creation function gets the next unique profile for the subject user step . The profile creation function then determines a degree of similarity between the consolidated profile and the unique profile step . In one embodiment the consolidated profile includes a list of keywords or interests and corresponding representation values for the keywords as described above. In a similar manner the unique profile includes a list of keywords and corresponding representation values for the keywords. The degree of similarity may then be computed based on a number of matching keywords in the consolidated profile and the unique profile and the differences between the representation values for the matching interests. The higher the number of matching keywords and the lower the differences between the representation values for the matching keywords the higher the degree of similarity. The degree of similarity may additionally or alternatively be a function of a comparison of relative positions of matching keywords in the consolidated and unique profiles in terms of representation values. For instance if a keyword has the highest representation value in the consolidated profile but has the lowest representation value in the unique profile then the two profiles may be determined to have a low degree of similarity even if the difference between the representation values for that keyword in the consolidated and unique profiles is small.

The profile creation function then determines whether the degree of similarity is greater than or equal to a predefined cut off value step . If not the process returns to step and is repeated. Otherwise the profile creation function merges the consolidated profile into the unique profile step . When merging the consolidated profile into the unique profile for each keyword or interest in the consolidated profile the keyword is added to the unique profile if the keyword is not already included in the unique profile along with the representation value for the keyword from the consolidated profile. If the keyword is already included in the unique profile the profile creation function computes averages of or otherwise combines the representation value for the keyword from the consolidated profile and a representation value for the keyword in the unique profile to provide an average or combined representation value. The averaged or combined representation value is then stored as the new representation value for the keyword in the unique profile. At this point whether proceeding from step or the profile creation function determines whether the last consolidated profile has been processed step . If not the process returns to step and is repeated for the next consolidated profile. Once all of the consolidated profiles for the location and time period pairs for the subject user are processed the process ends.

Next the history manager obtains history objects relevant to the bounding box and the time window for the historical request from the datastore of the MAP server step . The relevant history objects are history objects recorded for time periods within or intersecting the time window for the historical request and for locations or geographic areas within or intersecting the bounding box for the historical request. The history manager also determines sub band size step . In one exemplary embodiment the sub band size is 1 10of the amount of time from the start of the time window to the end of the time window for the historical request. For example if the amount of time in the time window for the historical request is one day the sub band size may be set to 1 10of a day which is 2.4 hours. In an alternative embodiment the time window for the historical request is divided into a number of sub bands of a predefined size such as for example a number of minute sub bands.

The history manager then sorts the relevant history objects into the appropriate sub bands of the time window for the historical request. More specifically in this embodiment the history manager creates an empty list for each of the sub bands of the time window step . Then the history manager gets the next history object from the history objects identified in step as being relevant to the historical request step and adds that history object to the list s for the appropriate sub band s step . Note that if the history object is recorded for a time period that overlaps two or more of the sub bands then the history object may be added to all of the sub bands to which the history object is relevant. The history manager then determines whether there are more relevant history objects to sort into the sub bands step . If so the process returns to step and is repeated until all of the relevant history objects have been sorted into the appropriate sub bands.

Once sorting is complete the history manager determines an equivalent depth of the bounding box D within the quadtree data structures used to store the history objects step . More specifically the area of the base quadtree region e.g. the base quadtree region is referred to as A. Then at each depth of the quadtree the area of the corresponding quadtree nodes is A. In other words the area of a child node is of the area of the parent node of that child node. The history manager determines the equivalent depth of the bounding box D by determining a quadtree depth at which the area of the corresponding quadtree nodes most closely matches an area of the bounding box A .

Note that the equivalent quadtree depth of the bounding box D determined in step is used below in order to efficiently determine the ratios of the area of the bounding box A to areas of the relevant history objects A . However in an alternative embodiment the ratios of the area of the bounding box A to the areas of the relevant history objects A may be otherwise computed in which case step would not be needed.

At this point the process proceeds to where the history manager gets the list for the next sub band of the time window for the historical request step . The history manager then gets the next history object in the list for the sub band step . Next the history manager sets a relevancy weight for the history object where the relevancy weight is indicative of a relevancy of the history object to the bounding box step . For instance a history object includes anonymized user profile data for a corresponding geographic area. If that geographic area is within or significantly overlaps the bounding box then the history object will have a high relevancy weight. However if the geographic area only overlaps the bounding box slightly then the history object will have a low relevancy weight. In this embodiment the relevancy weight for the history object is set to an approximate ratio of the area of the bounding box A to an area of the history object A computed based on a difference between the quadtree depth of the history object D and the equivalent quadtree depth of the bounding box D . The quadtree depth of the history object D is stored in the history object. More specifically in one embodiment the relevancy weight of the history object is set according to the following 

Next the history manager generates an aggregate profile for the history object step . In order to generate the aggregate profile for the history object the history manager compares the user profiles of the anonymous user records stored in the history object to one another. In general the aggregate profile for the history object includes a list of keywords or interests appearing in the user profiles of the anonymous user records in the history object. In addition the aggregate profile for the history object includes representation values for the keywords in the list of keywords where the representation values define a degree to which the keywords are represented or included in the user profiles of the anonymous user records in the history object. In one embodiment the representation value for each keyword includes a number of user matches or number of occurrences for the keyword in the user profiles of the anonymous user records in the historical record. In another embodiment the representation value for each keyword includes a ratio of a number of user matches or number of occurrences for the keyword to a total number of anonymous users in the historical record.

The history manager then determines whether there are more history objects in the list for the sub band step . If so the process returns to step and is repeated until all of the history objects in the list for the output sub band have been processed. Once all of the history objects in the list for the sub band have been processed the history manager combines the aggregate profiles of the history objects in the sub band to provide a combined aggregate profile for the sub band which is also referred to herein as a historical aggregate profile for the sub band. More specifically in this embodiment the history manager computes the historical aggregate profile for the sub band as a weighted average of the aggregate profiles for the history objects in the sub band using the relevancy weights of the history objects step . In one embodiment the aggregate profiles for the history objects in the sub band include the number of user matches or number of occurrences for each keyword or interest in the historical aggregate profiles. As such the historical aggregate profile for the sub band includes a weighted average of the number of user matches from the aggregate profiles generated for the historical objects relevant to the sub band which may be computed as 

Next the history manager determines whether there are more sub bands to process step . If so the process returns to step and is repeated until the lists for all of the sub bands have been processed. Once all of the sub bands have been processed the history manager outputs the historical aggregate profiles for the sub bands as historical aggregate profile data for the location and time period pair step .

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present invention. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

