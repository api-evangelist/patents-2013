---

title: Countering security threats with the domain name system
abstract: Described herein are methods, systems, and apparatus in which the functionality of a DNS server is modified to take into account security intelligence when determining an answer to return in response to a requesting client. Such a DNS server may consider a variety of security characteristics about the client and/or the client's request, as described more fully herein. Such a DNS server can react to clients in a variety of ways based on the threat assessment, preferably in a way that proactively counters or mitigates the perceived threat.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467461&OS=09467461&RS=09467461
owner: Akamai Technologies Inc.
number: 09467461
owner_city: Cambridge
owner_country: US
publication_date: 20131221
---
This application generally relates to distributed data processing systems to the Internet and the domain name system DNS and to cyber security and attack mitigation techniques.

Internet resources are located using Internet Protocol IP addresses. IP addresses typically point to a machine or set of machines depending on network configurations. In the past the IPv4 protocol has been used for these addresses but more recently primarily due to the explosion of connected devices and the need for a larger address space a transition to IPv6 addressing has begun.

The domain name system DNS is a system that maps human friendly names to IP addresses. DNS is a hierarchical system made up of DNS servers also referred to as name servers that are configured with software running on appropriate hardware to provide application layer name lookup services. Individual DNS servers may be managed by many different entities public quasi public or private depending on their role and function. Generally speaking given a request to resolve a given hostname such as www.foo.com the DNS system returns a set of one or more IP addresses pointing to machines that provide resources e.g. content from a web server or media server services accessed through an application programming interface associated with that domain name. Various intermediate steps including recursive lookups and name aliasing e.g. canonical name or CNAME may occur in the lookup process.

Some DNS servers are recursive DNS servers which are usually the type provided by an Internet Service Provider for its subscribers. These DNS servers typically resolve hostnames on behalf of end user devices such as a person s laptop tablet or smartphone. More recently public or so called open DNS servers have become more popular. Such public DNS servers allow virtually anyone not just ISP subscribers to make requests and get DNS answers.

Some DNS servers are authoritative DNS servers that are designated as authoritative for particular domains. Such DNS servers typically respond to requests from recursive DNS servers which may then cache the response enhancing the scalability of the system .

A wide variety of information about the domain name system is available. RFC 1035 among many others specifies message formats rules and mechanisms used in DNS. RFC 2671 specifies extension mechanisms to DNS. RFC 6891 refines those extension mechanisms. One such extension currently under development is called the EDNS0 client subnet extension mechanism which specifies a mechanism by which a given DNS server can include client IP address information e.g. an IP address or a portion thereof as defined by a netmask about the originator of the request when it makes an upstream request to another DNS server. More information is provided in an IETF Internet Engineering Task Force draft titled Client Subnet in DNS Requests by C. Contavalli et al. Jul. 4 2013.

Due to its central role in the operation of the Internet the domain name system is sometimes the target of attack or just as maliciously used by attackers to find machines that they wish to attack such as those hosting a particular website or web application. The systems methods and apparatus described herein can be used to enhance the security of the domain name system and the Internet resources located using it and provide other benefits and advantages that will become clear in light of the teachings hereof.

According to this disclosure a DNS server is modified to take into account security intelligence when determining a DNS answer to return in response to a client. Such a DNS server may consider a variety of security characteristics about the client and or the client s request as described more fully herein. Such a DNS server can react in a variety of ways based on the security assessment preferably in a way that proactively counters or mitigates the perceived threat.

For example a DNS server might respond with different IP addresses or more specifically different sets of one or more IP addresses depending on the security assessment. The different sets of IP addresses can be used for example to direct the client to certain machines as a threat mitigation strategy. Hence for high threat clients the client may be directed to machines equipped to deal with the perceived threat in a desired way by virtue of them running particular security software their capacity their location their configuration or other feature.

Alternatively the DNS server might not respond to clients that are determined to be a threat. Or the DNS server might respond with misleading unhelpful or delayed answers. A variety of countermeasures may be available the particular countermeasures to invoke can depend on the particular security characteristics threat level and situation and will be described in more detail herein.

In a preferred embodiment a given DNS server leverages an IP reputation service to score a client and thereby determine a threat level based on the IP address of the requesting client. Other factors such as the location e.g. country or network of the requesting client request rate history and the like may also be incorporated into the assessment.

In some instances the DNS server taking such countermeasures is a recursive DNS server in which case the requesting client is generally an end user client machine. However the teachings hereof may also be implemented in an authoritative DNS server in which case the authoritative DNS server can base its answer on the security characteristics of a requesting client DNS server or preferably on the security characteristics of the end user client that originated the DNS request. This latter approach preferably leverages a mechanism allowing visibility into end user client IP address information such as the Enhanced DNS0 client subnet extension field.

The subject matter described herein has a wide variety of applications in content delivery and online platform architectures. The teachings hereof can be used advantageously in a DNS service provided by a content delivery network CDN to better control and mitigate threats directed against the CDN s distributed content server platform among other things.

The foregoing description merely refers to examples of the invention for purposes of overview. It is not limiting and the teachings hereof may be realized in a variety of systems methods apparatus and non transitory computer readable media. It should also be noted that the allocation of functions to particular machines is not limiting as the functions recited herein may be combined or split amongst different machines in a variety of ways.

The following description sets forth embodiments of the invention to provide an overall understanding of the principles of the structure function manufacture and use of the methods and apparatus disclosed herein. The systems methods and apparatus described herein and illustrated in the accompanying drawings are non limiting examples the claims alone define the scope of protection that is sought. The features described or illustrated in connection with one exemplary embodiment may be combined with the features of other embodiments. Such modifications and variations are intended to be included within the scope of the present invention. All patents publications and references cited herein are expressly incorporated herein by reference in their entirety. In this document the term e.g. is used as an abbreviation for the non limiting phrase for example. 

In accordance with the teachings hereof a conventional DNS server e g running name service software such as BIND can be modified to have the ability to consider security intelligence when determining an answer to return in response to resolve a domain name. The security characteristics of the requesting client e.g. obtained from an IP reputation service built into or otherwise available to the DNS server are preferably used to decide whether to provide a real or default answer that is internet protocol IP addresses or aliases that will point the client to content servers providing content under the given domain name or a misleading or false answer for example an answer that points to slower content servers or servers that are equipped with additional security mechanisms tarpits honeypots or the like and which may or may not have content associated with the domain name. A variety of countermeasures are possible. The particular choice of answer may depend on what is known about the client the severity of threat assessment and the level of confidence of the threat assessment.

The teachings hereof apply in several different contexts. Implemented in a recursive DNS server the requesting client is typically an end user client device. The IP address of the end user device is known to the DNS server since it generally receives the DNS query from the client device and the request includes a source IP address. In the case of an intermediate recursive DNS server or an authoritative DNS server the IP address of the end user client device that originated the query may not be known as typically the query is received from another DNS server. In such cases the DNS server can use the IP address of the requesting client DNS server. Preferably however the DNS server obtains the end user client device IP address or alternatively a portion of the IP address preferably including the network and client subnet using the EDNS0 client subnet extension field which allows a requesting DNS server to pass DNS query originator IP address information to an upstream DNS server.

The teachings hereof apply without limitation to a DNS service provided by a content delivery network CDN . In such a context the teachings hereof may be used by the CDN to better control and mitigate threats directed against the CDN s distributed content server platform. Typically a CDN has many distributed resources and can classify these resources in terms of service and capabilities. Thus clients that are deemed to be threats or potential threats can be given answers that direct the clients to particular sets of machines in the CDN sometimes called regions or point of presence or POP that may be designated for handling such traffic. Such sets of machines may be lower performing e.g. allowed to suffer heavier loads and or DDOS attacks so that the rest of the CDN may perform better and or may have built in enhanced security mechanisms such as enhanced malware detection firewalls reduced feature sets tarpits and or enhanced logging for subsequent analysis. Such sets of machines may or may not store permit access to the normal resources otherwise available to clients. In the context of a typical CDN with reverse proxy servers this may mean that the servers simply do not provide the requested content or provide alternate content. Alternatively they may retrieve content from an origin server but cache content with increased time to live TTLs than elsewhere in the CDN so that heavy request load attacks on the CDN infrastructure result in relatively fewer forward requests back to origin.

As illustrated in the recursive DNS server via threat assessment module accesses a variety of services to provide security intelligence and determine a threat level of the client device .

Preferably IP reputation service is used to look up the reputation of the requesting client device based on its IP address. A variety of commercial IP reputation databases are available from various vendors including for example Symantec CommTouch Webroot and others. Moreover open source IP reputation projects such as Honeypot and dshield.org can be leveraged. The reputation service may be located locally or remotely to the DNS server .

The reputation service typically returns a threat score and a confidence number of the given score. The DNS server may combine this score with other factors such as the location of the client from location service e.g. which could be geographic location based on IP address or network location based on IP address request history of the client known to the DNS server e.g. the rate at which that client has been sending requests in some time period or information about the DNS request itself as determined by a request analyzer service e.g. malformed headers or suspicious content as may be detected by firewall rules to arrive at an overall threat level assessment.

Generalizing the DNS server may employ any kind of security intelligence and or services such as independently or in combination to make a threat assessment.

The DNS server returns an answer based on the overall threat level and how that level compares to predefined thresholds categories with which the DNS server is configured. Depending on the threat level the DNS server may not perform a recursive lookup within the DNS system i.e. to authoritative DNS servers per usual name resolution procedures but rather perform some predefined configured action. For example the configured action may be to return a particular IP address that represents and points to resources specifically designed to handle threats. For example an ISP operating the DNS server may have particular ISP resources to handle this situation.

In other cases the DNS server may perform the recursive lookup but use a DNS extension field to inform an upstream DNS server of the threat with a field indicating a threat score that the DNS server has determined for the particular client so that the upstream DNS server may tailor its answers accordingly. Then the DNS server can relay the answer e.g. the IP address that it gets from the upstream DNS server e.g. the authoritative server which is presumed to have taken the threat characteristics into account. Along these lines answers from upstream DNS servers may be annotated according to an agreed upon format so that the DNS server can cache them appropriately. For example some answers may be marked as valid only for no threat or low threat clients that have a threat score below a defined threshold. A common scoring system can be agreed upon. Other answers can be marked as valid to return for medium threat clients high threat clients and so on.

The characteristics score returned from the service is used to calculate a threat level score. If more than one service is used then the various characteristics scores returned from the services are combined into an aggregate threat level score. At step the threat level score compared with a configured threshold below which all clients are considered good . If the client does not trigger this threshold then the DNS server invokes normal name server processing to provide an answer to the client as indicated by step . Step may involve retrieving a record from cache or performing a recursive lookup process with other DNS servers to obtain the appropriate answer as known in the art for DNS server operation.

If the client exceeds the threshold threat level then at step the DNS server must determine what action to take. A variety of configurable options may be available and the DNS server may choose amongst them based on the severity of threat. In other words in some embodiments the DNS server may maintain several different threat level categories bracketed by threat level scores and may take a different configurable action in response to a client falling in each category.

Explanations of possible actions are provided below. It should be understood that the actions are meant to be illustrative and not an exhaustive list of potential actions nor represent actions that are necessary required 

In this embodiment authoritative DNS server makes a threat determination in any manner as was described above with respect to recursive DNS server in leveraging security intelligence and services such as . Preferably the DNS server leverages a client IP reputation service and uses the client IP address information provided by the downstream DNS server to make a threat level assessment.

If the client IP address information is not available a threat assessment can be made using the IP of the requesting DNS server although the confidence level of the threat assessment generally would be lower because as a result. Note that as mentioned with respect to in an alternate embodiment the downstream DNS server can determine a threat level score based on client device s IP address and pass that assessment to the authoritative DNS server with its DNS request . In that case the authoritative DNS determines how to proceed in light of supplied threat score and it does not have to rely on the IP address of the requesting DNS server for scoring.

DNS server returns an answer based on the determined threat level score. Preferably the answer is a set of IP addresses that is denoted such that downstream DNS server knows to cache the answer as valid only for requests from client IP addresses falling within the given specified subnet or for clients falling within a certain threat score range.

At box the determined threat level is compared to a threshold level. If the level does not exceed the configured minimum threshold the DNS server proceeds in a conventional manner to obtain an answer from its DNS records e.g. the answer typically being a set of one or more IP addresses or possibly a CNAME alias or other answer according to domain name system conventions and responds to the requesting DNS server with the answer. If the level exceeds the minimum threshold then flow moves to box where the DNS server determines what alternative action to take. A variety of actions are possible. illustrates some examples of possible actions the DNS server can i make note of the request but return an answer as usual ii invoke a configured response for the given threat level category such as an alternate set of IP addresses or iii ask another service or machine such as a mapping system or threat mitigation in a CDN for the response that should be provided . This last option may be useful where the alternate set of IP addresses may need to change rapidly over time in response to server loads and or attacks. Boxes indicate how the DNS sever may include an EDNS0 client subnet extension field in its answer so that downstream DNS servers like DNS server may cache the answer and use it to answer future requests only from clients falling within the indicated subnet.

The use of the requesting DNS server s IP address for the IP reputation service lookup indicated by box is not ideal as both low threat and high threat clients may be originating DNS queries to that DNS server. Therefore the minimum thresholds for taking countermeasure action in this case may be higher than otherwise so as to avoid false positives. Put another way preferably this approach is used in limited circumstances such as where the threat level score for the requesting DNS server is very high. Also this approach might be used if it is desired to block traffic from a certain geography or certain network ISP associated with the DNS server and or otherwise treat such traffic in a special manner.

Alternatively when the originating client IP address information is not known the DNS server does not invoke threat assessment routines but returns an answer pointing to a content server in a default manner. Since the content server will be contacted directly by the end user client machine with a content request and thus have the client IP address the content server can assess the threat at that time. Assuming a threat is detected the content server can mitigate the threat itself or respond to the client s request with a redirect e.g. HTTP redirect sending the client to a different domain name that has been reserved for threats and that is recognized at the DNS server as such assume the DNS server is also authoritative for this red flag domain name . When the client attempts to resolve this red flag domain name the DNS server knows that originating client of the DNS query is a threat. In other words the DNS server is configured to recognize that all name resolution requests to the red flag domain should be resolved to resources that can mitigate the threat or otherwise as set out by box of .

A wide variety of threat mitigation or countermeasure actions may be taken. In addition to those that are described elsewhere in this disclosure a DNS server might take any of the following actions in certain embodiments upon detection of a threat 

The techniques described above are advantageously employed in a content delivery network. Content delivery networks CDNs are known the art as a kind of distributed computing system. Often a CDN is operated and managed by a service provider. The service provider typically provides the content delivery service on behalf of third parties. A distributed system of this type typically refers to a collection of autonomous computers linked by a network or networks together with the software systems protocols and techniques designed to facilitate various services such as content delivery or the support of outsourced site infrastructure. This infrastructure is shared by multiple tenants typically content providers. The infrastructure is generally used for the storage caching or transmission of content such as web pages streaming media and applications on behalf of such content providers. The platform may also provide ancillary technologies used therewith including without limitation DNS query handling provisioning data monitoring and reporting content targeting personalization and business intelligence.

The DNS service provided by a CDN may be a name service for its own managed servers or a name service productized for customer servers. In either case it may be modified to employ the DNS security features described herein. Because a CDN typically has many resources deployed in a variety of locations the result of the security analysis can be used in a variety of ways. For example 

A bad client could be directed via returned IP address to a set of machines deployed in the CDN to handle attacks or to a suboptimal e.g. topologically distant but low load set of machines that may be able to handle the potential flood of traffic e.g. in DDOS attack . Since the client has been found to be bad the high latency performance provided by the distant machines is not an issue.

Typically content providers offload their content delivery by aliasing e.g. by a DNS CNAME given content provider domains or sub domains to domains that are managed by the service provider s authoritative domain name service. The service provider s domain name service directs end user client machines that desire content to the distributed computer system or more particularly to one of the CDN servers in the platform to obtain the content more reliably and efficiently. The CDN servers respond to the client requests for example by fetching requested content from a local cache from another CDN server from the origin server associated with the content provider or other source.

For cacheable content CDN servers typically employ on a caching model that relies on setting a time to live TTL for each cacheable object. After it is fetched the object may be stored locally at a given CDN server until the TTL expires at which time is typically re validated or refreshed from the origin server .

Although not shown in detail in the distributed computer system may also include other infrastructure such as a distributed data collection system that collects usage and other data from the CDN servers aggregates that data across a set of CDN servers at a particular POP and passes that data to other back end systems and to facilitate monitoring logging alerts billing management and other operational and administrative functions. Distributed network agents monitor the network as well as the server loads and provide network traffic and load data to a DNS query handling mechanism . A distributed data transport mechanism may be used to distribute control information e.g. metadata to manage content to facilitate load balancing and the like to the CDN servers to configure them.

As illustrated in a given machine in the CDN platform comprises commodity hardware e.g. a microprocessor running an operating system kernel such as Linux or variant that supports one or more applications . To facilitate content delivery services for example given machines typically run a set of applications such as an HTTP proxy a name server a local monitoring process a distributed data collection process and the like. The HTTP proxy typically includes a manager process for managing a cache and delivery of content from the machine. For streaming media the machine may include one or more media servers such as a Windows Media Server WMS or Flash server as required by the supported media formats.

A given CDN server shown in may be configured to provide one or more extended content delivery features preferably on a domain specific content provider specific basis preferably using configuration files that are distributed to the CDN servers using a configuration system. U.S. Pat. No. 7 240 100 the contents of which are hereby incorporated by reference describe a useful infrastructure for delivering and managing CDN server content control information. More information about a CDN platform can be found in U.S. Pat. Nos. 6 108 703 and 7 596 619 the teachings of which are hereby incorporated by reference in their entirety.

In a typical operation a content provider identifies a content provider domain or sub domain that it desires to have served by the CDN. The CDN service provider associates e.g. via a canonical name or CNAME or other aliasing technique the content provider domain with a CDN hostname and the CDN provider then provides that CDN hostname to the content provider. When a DNS query to the content provider domain or sub domain is received at the content provider s domain name servers those servers respond by returning the CDN hostname. That network hostname points to the CDN and that hostname is then resolved through the CDN name service. To that end the CDN name service returns one or more IP addresses. The requesting client application e.g. browser then makes a content request e.g. via HTTP or HTTPS to a CDN server machine associated with the IP address. The request includes a host header that includes the original content provider domain or sub domain. Upon receipt of the request with the host header the CDN server checks its configuration file to determine whether the content domain or sub domain requested is actually being handled by the CDN. If so the CDN server applies its content handling rules and directives for that domain or sub domain as specified in the configuration. These content handling rules and directives may be located within an XML based metadata configuration file as described previously.

The subject matter described herein may be implemented with conventional computer systems as modified by the teachings hereof with the processes and functional characteristics an processes described above realized in special purpose hardware general purpose hardware configured by software stored therein for special purposes or a combination thereof.

Software may include one or several discrete programs. A given function may comprise part of any given module process execution thread or other such programming construct. Generalizing each function described above may be implemented as computer code namely as a set of computer instructions executable in one or more microprocessors to provide a special purpose machine. In one embodiment an entire network of machines specially suited to handle the security situations described herein may be employed potentially as a portion of or adjunct the remainder of a content delivery network platform. The DNS servers described above may be directed to this special purpose security network using the teachings described herein.

The code may be executed using conventional apparatus such as a microprocessor in a computer digital data processing device or other computing apparatus as modified by the teachings hereof. In one embodiment such software may be implemented in a programming language that runs in conjunction with a proxy on a standard Intel hardware platform running an operating system such as Linux. The functionality may be built into the proxy code or it may be executed as an adjunct to that code.

While in some cases above a particular order of operations performed by certain embodiments is set forth it should be understood that such order is exemplary and that they may be performed in a different order combined or the like. Moreover some of the functions may be combined or shared in given instructions program sequences code portions and the like. References in the specification to a given embodiment indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic.

Computer system includes a microprocessor coupled to bus . In some systems multiple microprocessor and or microprocessor cores may be employed. Computer system further includes a main memory such as a random access memory RAM or other storage device coupled to the bus for storing information and instructions to be executed by microprocessor . A read only memory ROM is coupled to the bus for storing information and instructions for microprocessor . As another form of memory a non volatile storage device such as a magnetic disk solid state memory e.g. flash memory or optical disk is provided and coupled to bus for storing information and instructions. Other application specific integrated circuits ASICs field programmable gate arrays FPGAs or circuitry may be included in the computer system to perform functions described herein.

Although the computer system is often managed remotely via a communication interface for local administration purposes the system may have a peripheral interface communicatively couples computer system to a user display that displays the output of software executing on the computer system and an input device e.g. a keyboard mouse trackpad touchscreen that communicates user input and instructions to the computer system . The peripheral interface may include interface circuitry and logic for local buses such as Universal Serial Bus USB or other communication links.

Computer system is coupled to a communication interface that provides a link between the system bus and an external communication link. The communication interface provides a network link . The communication interface may represent an Ethernet or other network interface card NIC a wireless interface modem an optical interface or other kind of input output interface.

Network link provides data communication through one or more networks to other devices. Such devices include other computer systems that are part of a local area network LAN . Furthermore the network link provides a link via an internet service provider ISP to the Internet . In turn the Internet may provide a link to other computing systems such as a remote server and or a remote client . Network link and such networks may transmit data using packet switched circuit switched or other data transmission approaches.

In operation the computer system may implement the functionality described herein as a result of the microprocessor executing program code. Such code may be read from or stored on a non transitory computer readable medium such as memory ROM or storage device . Other forms of non transitory computer readable media include disks tapes magnetic media CD ROMs optical media RAM PROM EPROM and EEPROM. Any other non transitory computer readable medium may be employed. Executing code may also be read from network link e.g. following storage in an interface buffer local memory or other circuitry .

A client device may be a conventional desktop laptop or other Internet accessible machine running a web browser or other rendering engine. A client device may also be a forward proxy Tor node or cloud provider edge machine. A client device may also be a mobile device. Any wireless client device may be utilized e.g. a cellphone pager a personal digital assistant PDA e.g. with GPRS NIC a mobile computer with a smartphone client tablet or the like. Other mobile devices in which the technique may be practiced include any access protocol enabled device e.g. iOS based device an Android based device other mobile OS based device or the like that is capable of sending and receiving data in a wireless manner using a wireless protocol. Typical wireless protocols include WiFi GSM GPRS CDMA or WiMax. These protocols implement the ISO OSI Physical and Data Link layers Layers 1 2 upon which a traditional networking stack is built complete with IP TCP SSL TLS and HTTP. The WAP wireless access protocol also provides a set of network communication layers e.g. WDP WTLS WTP and corresponding functionality used with GSM and CDMA wireless networks among others.

In a representative embodiment a mobile device is a cellular telephone that operates over GPRS General Packet Radio Service which is a data technology for GSM networks. Generalizing a mobile device as used herein is a 3G or next generation compliant device that includes a subscriber identity module SIM which is a smart card that carries subscriber specific information mobile equipment e.g. radio and associated signal processing devices a man machine interface MMI and one or more interfaces to external devices e.g. computers PDAs and the like . The techniques disclosed herein are not limited for use with a mobile device that uses a particular access protocol. The mobile device typically also has support for wireless local area network WLAN technologies such as Wi Fi. WLAN is based on IEEE 802.11 standards. The teachings disclosed herein are not limited to any particular mode or application layer for mobile device communications.

It should be understood that the foregoing has presented certain embodiments of the invention that should not be construed as limiting. For example certain language syntax and instructions have been presented above for illustrative purposes and they should not be construed as limiting. It is contemplated that those skilled in the art will recognize other possible implementations in view of this disclosure and in accordance with its scope and spirit. The appended claims define the subject matter for which protection is sought.

It is noted that trademarks appearing herein are the property of their respective owners and used for identification and descriptive purposes only given the nature of the subject matter at issue and not to imply endorsement or affiliation in any way.

