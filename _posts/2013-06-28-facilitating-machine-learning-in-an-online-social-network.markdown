---

title: Facilitating machine learning in an online social network
abstract: Automatic machine-learning processes and systems for an online social network are described. During operation of the online social network, a system can automatically collect labeled training events, obtain snapshots of raw entity data associated with subjects from the collected training events, produce training examples by generating features for each training event using the snapshots of entity data and current entity data, and split the training examples into a training set and a test set. Next, the system can use a machine-learning technique to train a set of models and to select the best model based on one or more evaluation metrics using the training set. The system can then evaluate the performance of the best model on the test set. If the performance of the best model satisfies a performance criterion, the system can use the best model to predict responses for the online social network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09082084&OS=09082084&RS=09082084
owner: LinkedIn Corporation
number: 09082084
owner_city: Mountain View
owner_country: US
publication_date: 20130628
---
The disclosed embodiments generally relate to techniques for optimizing the performance of online social networks. More specifically the disclosed embodiments relate to a system and a method for facilitating automated machine learning operations to optimize the performance of an online social network.

Perhaps the most significant development on the Internet in recent years has been the rapid proliferation of online social networks such as LinkedIn and Facebook . Billions of users are presently accessing such social networks to connect with friends and acquaintances and to share personal and professional information. During operation such online social networks make millions of decisions each day for example to determine which news articles will be interesting to specific users to determine whether user comments constitute spam or to determine which types of subscription offers to present to a given user. The quality of these decisions directly affects user satisfaction and subscription revenue and is therefore critically important to the success of an online social network.

However designing a system to make good decisions can be a challenging task because a user s preferences and associated behavior can change over time. Moreover an online social network makes decisions for a wide variety of different purposes. Hence it is desirable for the same decision making methodology to be easily adaptable for these different purposes.

The following description is presented to enable any person skilled in the art to make and use the disclosed embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the disclosed embodiments. Thus the disclosed embodiments are not limited to the embodiments shown but are to be accorded the widest scope consistent with the principles and features disclosed herein.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing code and or data now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored on a non transitory computer readable storage medium as described above. When a system reads and executes the code and or data stored on the non transitory computer readable storage medium the system performs the methods and processes embodied as data structures and code and stored within the non transitory computer readable storage medium.

Furthermore the methods and processes described below can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The disclosed embodiments relate to a system that facilitates an automatic machine learning process for an online social network. During operation of the online social network the system automatically collects labeled training events and also obtains snapshots of raw entity data associated with subjects from the collected training events. This raw entity data enables the system to easily re train models in the future with accurate feature values. Next the system generates features for each training event using the snapshots of entity data and current entity data to produce training examples. The system then splits the training examples into a training set and a test set. Next the system uses a machine learning technique to train a set of models and to select the best model based on one or more evaluation metrics using the training set. The system then evaluates the performance of the best model on the test set. If the performance of the best model satisfies a performance criterion the system uses the best model to predict responses for the online social network.

In some embodiments the system repeats this process to continually update a model that predicts responses for the online social network.

In some embodiments evaluating the performance of the best model involves using a crowd sourcing evaluation technique which selects training examples from the test set and compares predictions of the best model with predictions of humans on the selected training examples. The system can also use a crowd sourcing evaluation technique to refine models.

The above described technique is described in more detail below but first we describe an exemplary system that uses the technique.

More specifically desktop systems and include browsers not shown which are operated by users and respectively. Note that the terms user and member are used interchangeably throughout this specification and the attached claims. Also note that desktop systems and can generally include any type of computer system that can interact with the online professional network through a browser. For example desktop systems and can include a personal computer system a server computer system or even a laptop computer system. During operation browsers in desktop systems and interact with a desktop front end wherein desktop front end provides services that make requests to various back end systems as is described in more detail below. Although only one desktop front end is illustrated in in general computing environment can include a large number of desktop front ends. This enables the online professional network to simultaneously interact with thousands or even millions of users.

Mobile devices and which are operated by users and respectively can generally include any type of portable electronic device that can interact with the online professional network through a mobile application. For example these portable electronic devices can include a smartphone a tablet computer a network connected music player a gaming console and possibly a laptop computer system.

As mentioned above mobile devices and execute mobile applications that function as portals to the online professional network. Although the illustrated embodiment shows only two mobile devices and in general computing environment can include a large number of mobile devices and associated mobile application instances possibly thousands or millions that simultaneously access the online professional network.

These mobile applications interact with the online professional network through mobile front end wherein mobile front end includes services that make requests to various back end systems as is described in more detail below. Computing environment can generally include a large number of mobile front end systems and is not limited to a single mobile front end system as is illustrated in . Moreover mobile devices and communicate with mobile front end through one or more networks not shown such as a Wi Fi network a Bluetooth network or a cellular data network.

During operation users and of desktop systems and respectively perform various actions while interacting with the online professional network through a browser based interface. For example these actions can include browsing the user s home page sending an email message to another user editing the user s personal profile page or searching for a specific user. These actions cause services in desktop front end to generate requests which are sent to back end systems through load balancer .

Similarly users and of portable electronic devices and respectively perform various actions while interacting with the online professional network through associated mobile applications. These actions cause services in mobile front end to generate requests which are sent to back end systems through load balancer .

Requests from desktop front end and mobile front end are sent to load balancer which decides which back end system will receive each request. This decision can be based on a number of factors including the load on each back end system and the priority of each request relative to other requests. For example if a particular back end system is lightly loaded and other back end systems and are more heavily loaded load balancer can decide to send the next request to back end system .

The relative priority of requests can also affect how load balancer directs requests. Some requests are relatively low priority such as requests associated with background tasks that perform data mining operations whereas other requests are higher priority such as a request to load a home page for a waiting user. Load balancer can direct higher priority tasks to lightly loaded back end systems and can ensure that these back end systems which are running the higher priority tasks remain lightly loaded. Conversely load balancer can direct lower priority tasks to more highly loaded back end systems which are processing other lower priority tasks.

During operation back end systems service requests received from load balancer which can involve reading from and writing to non volatile storage device such as disk drives or solid state storage.

During operation the system illustrated in runs a model training and evaluation module which uses machine learning techniques to train models that make predictions for online social networks. For example model training and evaluation module can train a model which is sent to production system to recognize user comments that constitute spam. This enables the online professional network to filter out such comments before the comments are displayed by the online professional network.

During operation model training and evaluation module collects training examples from storage system wherein the training examples include various features that can be used to determine a specific response to be predicted. Next model training and evaluation module uses training examples to train and evaluate one or more models that can be pushed to production system to make decisions for production system .

While evaluating a model a crowdsourcing module not illustrated within model training and evaluation module can send selected training examples and associated responses produced by the model to crowd sourcing application programming interface API . This enables model training and evaluation module to solicit opinions of a number of users possibly hundreds of thousands of users about the accuracy of the responses.

The operation of model training and evaluation module is described in more detail below with reference to but first we describe the general structure of a decision making model.

Model uses these features to generate a predicted response . This predicted response can be a Boolean value for example representing whether a specific comment posted by a member of the online professional network is spam. Predicted response can also be a numerical value for example estimating how much subscription revenue the online professional network will make from a specific member.

Model can generally be implemented and trained using any one of a large number of possible machine learning techniques including but not limited to logistic regression neural networks decision tree learning association rule learning genetic programming inductive logic programming support vector machines cluster analysis Bayesian networks reinforcement learning representation learning similarity learning and sparse dictionary learning. Moreover the system that trains these models has a modular structure that allows components for different machine learning techniques to be used by the system.

A feature vector and its associated response are referred to as a training example wherein a training example can be used to train various models to make predictions for the online professional network as is described in more detail below with reference to the flow charts in .

Next the system performs snapshotting operations for the selected training events to preserve copies of raw data with subjects e.g. member article job etc. from the selected training events wherein the copies are referred to as snapshots step . Note that the system can possibly remove all personal identifiable information from each snapshot to protect the privacy of members of the online social network.

These snapshots can be quite useful because if a user subsequently wants to experiment with using new features or signals with a model it is hard to do so if the features are not preserved. There also exist cases where a training event is associated with a time period instead of a single point in time. For these cases the system can create snapshots of entity data at the beginning of the time period to be used later.

Finally for each selected training event the system extracts user defined features that are used to predict a response for the training event to produce a training example step . Before the training events are collected the system enables a user to define the training examples by identifying responses to be predicted and also the features that are used to predict the responses. For example suppose a user wants to define a training example to predict whether a member will click on a news article based on the member s occupation and educational background. In this case the features will include the member s occupation and the member s education degrees obtained and the response will indicate whether the member clicked on the news article.

The system then runs the set of models on the training set and selects a best model based on one or more evaluation metrics step . For example the system can select the best model based on the accuracy of prediction.

After a best model is selected the system runs the best model on the test set and evaluates the performance of the best model step . Finally if the performance of the best model satisfies a performance criterion the system can use the best model to predict responses for the online social network step .

In one example the model determines a recruiting intent for a normal member of an online professional network. For example a normal member of the online professional network who is not a professional recruiter may become interested in hiring an employee in which case the member s intent becomes focused on recruiting. In this case the online professional network can infer this change in intent from the member s actions and can provide a different view to the member to facilitate the recruiting process. The online professional network can also recommend a recruiting product to the member.

Note that a normal member who has recruiting intent is likely to perform certain actions. For example the member may browse through a large number of member profiles and may perform keyword searches using terms such as programmer the member may also post listings for jobs. Hence to detect recruiting intent the system can define features to be the number of profiles the member has looked at recently the number of searches the user has performed using hiring oriented keywords and the number of jobs a member has posted. The system can sample a set of active recruiters as members with strong recruiting intent and sample a set of members as members without recruiting intent. Next the system can use a machine learning technique to establish correlations between these features and a member s recruiting intent. At a later time the normal member may hire an employee in which case the member s behavior and inferred intent will change.

Another example relates to determining whether an article is spam. In this case the system can use a crowd sourcing technique which asks a number of crowdsourcing workers to specify which articles in a collection of articles are spam. Next the system can define features associated with the contents of the articles. The system can then use a machine learning technique to determine correlations between the features and articles that are labeled as spam.

Another example is the problem of determining the lifetime value of a subscriber to the online professional network. This can be accomplished by taking training examples from historical data. More specifically the system can define features associated with profiles of subscribers and can look into historical data to determine how long their subscriptions lasted and how much revenue was obtained from each subscriber. Next if a subscriber converts on a specific subscription plan the system can apply machine learning techniques to determine how much total dollar booking value the system will likely obtain from the subscriber.

The foregoing descriptions of disclosed embodiments have been presented only for purposes of illustration and description. They are not intended to be exhaustive or to limit the disclosed embodiments to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the disclosed embodiments. The scope of the disclosed embodiments is defined by the appended claims.

