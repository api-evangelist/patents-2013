---

title: Set top box architecture with application based security definitions
abstract: A media processing device, such as a set top box, having selectable hardware and software components for forming media pathways compliant with security definitions provided by downloaded or preinstalled software applications. Such applications may include, for example, a downloadable conditional access security or DRM element/definition. A corresponding certification process can entail certifying a portion of an overall secure pathway, with one or more applications providing the final portion of the certification. Alternatively, predefined conditional access mechanisms are provided, with an application establishing which mechanism is to be used. In various embodiments, a set top box or resident software application may exchange capabilities with other devices in a media consumption network to compare against the requirements of the software application. Once the information exchange is complete, the software application may select which one or more modes of operation or media pathways, if any, that it will permit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09355253&OS=09355253&RS=09355253
owner: Broadcom Corporation
number: 09355253
owner_city: Irvine
owner_country: US
publication_date: 20130103
---
The present U.S. Utility Patent Application claims priority pursuant to 35 U.S.C. 119 e to the following U.S. Provisional Patent Applications which are hereby incorporated herein by reference in their entirety and made part of the present U.S. Utility Patent Application for all purposes 

1. U.S. Provisional Patent Application Ser. No. 61 715 785 entitled INTEGRATION OF UNTRUSTED FRAMEWORK COMPONENTS WITH A SECURE OPERATING SYSTEM ENVIRONMENT filed Oct. 18 2012.

2. U.S. Provisional Patent Application Ser. No. 61 725 964 entitled INTEGRATION OF UNTRUSTED APPLICATIONS AND FRAMEWORKS WITH A SECURE OPERATING SYSTEM ENVIRONMENT filed Nov. 13 2012.

3. U.S. Provisional Patent Application Ser. No. 61 733 958 entitled SECURITY AND CERTIFICATION IN A SET TOP BOX DEVICE HAVING A MIXED OPERATING SYSTEM OR FRAMEWORK ENVIRONMENT filed Dec. 6 2012.

4. U.S. Provisional Patent Application Ser. No. 61 734 700 entitled SET TOP BOX ARCHITECTURE SUPPORTING MIXED SECURE AND UNSECURE MEDIA PATHWAYS filed Dec. 7 2012.

5. U.S. Provisional Patent Application Ser. No. 61 745 065 entitled SET TOP BOX ARCHITECTURE WITH APPLICATION BASED SECURITY DEFINITIONS filed Dec. 21 2012.

The present invention relates generally to media processing systems and more particularly to establishing and maintaining media pathways that are compliant with security definitions provided by one or more software applications.

Attempts to accommodate relatively untrusted software applications or frameworks in certain types of devices may complicate applicable certification processes that are performed in accordance with one or more industry defined certification standards or testing procedures. For example vendor certification of many set top boxes used by cable operators is conducted via rigid certification processes that test interoperability and security compliance for devices that implement specifications such as DOCSIS PacketCable CableHome and OpenCable . Successful certification of such devices typically requires full end to end security. Likewise digital rights management DRM and other technologies implemented in a particular device or component such as a system on a chip may require distinct certification processes which do not allow certain interactions with an unsecured operating system OS environment or software framework. When implemented in a cable set top box cable modem media terminal adapter or like cable service device certain specifications may require that a digital certificate be embedded in the device at the time of manufacture. Such certificates underpin a number of security features including device authentication and content integrity. By way of example a digital certificate embedded in such devices helps prevent pirating of services by allowing a content provider or service operator to authenticate a device requesting services.

In general any unsecured portions of a media pathway in a set top box or like device if not isolated will cause the certification of such pathway to fail. Most conventional set top boxes are designed to provide a single secure and certified pathway through the various elements or components of the device. In some recent multi processor set top boxes a conventional certified pathway is separated from untrusted components by creating a hardware boundary between the two. In particular a first processing module is utilized to provide secure functionality e.g. decoding operations while a separate processing module with a lower security level is used to support an untrusted framework.

As is known a software framework may provide application programming interface functionality and services that are not offered by an underlying operating system and may thereby offer a level of platform independence in certain implementations. Frameworks are often designed to be a reusable and adaptable software system or subsystem. For example A Android has become one of the fastest growing operating systems frameworks for mobile devices. Android which builds on contributions from the open source Linux community provides development tools and reusable components for building applications that can be deployed across many different types of devices such as a smartphone or tablet device.

A typical Android framework is a multi user Linux based system in which each Android application is a different user having code that runs in general isolation from other applications. Such process isolation or application sandbox provides a certain level of security. However various components processes threads etc. used by an application may not entail sufficient protection when integrated in a set top box type device resulting in Android being considered an untrusted framework when used in such devices. For example an application that visits an arbitrary web page or receives code from an unverified third party may result in untrusted JavaScript code being executed on a set top box possibly with elevated privileges. Such code might exploit weakness in other code e.g. browser code and receive unauthorized access to file systems etc. thereby compromising the security of a device exposing protected data or introducing system instability.

As indicated above the processing unit of some devices may have multiple processors or processing cores in order to provide higher performance and or multi tasking capabilities. In some of these multi processor systems when multiple applications or programs are running access control is typically needed to separate the functionality of the applications running on multiple processors. Separation or segregation of different applications and or tasks running on different processors helps to ensure that one application does not interfere with the execution of another. Likewise data assigned to one processor should not be accessed by another processor unless that data is shared between the two processors. Such separation is typically handled through use of virtual memory with each process having a unique view of memory that is not accessible from outside processes. Hardware access can be handled through a kernel or device driver interface which provides some level of security. Even in a multi processor system in which one processor environment provides trusted or secure operations while another operates in an unsecure or restricted environment however there can be a substantial possibility of an incursion from the unsecure zone into the secure zone when the operating system is managing the separation.

For example in a set top box that allows a user to receive television signals and also allows the user to access the Internet the secure environment may run applications including a secure set top box application pertaining to the reception decryption and display of certain channels or content provided by a cable or satellite provider or other service operator. The unsecure environment in the set top box may execute applications such as Android based applications that allow a user to access the Internet for web browsing gaming etc. In this example the content provider would generally not want the user or anyone else to access the applications pertaining to broadcast or premium channels. However if there is commonality in software that controls the accesses to both environments such as running the same operating system to manage accesses in both environments then there may be a heightened risk of access violations. Such violations whether intentional or non intentional could result in an unsecure breach into the secure applications of the set top box such as a web originated intrusion into protected television channels.

Accordingly there is a need to obtain an efficient way to integrate untrusted frameworks and applications with a secure operating system environment such as that of a set top box device while also maintaining compliance and flexibility with respect to applicable certification procedures and security measures.

While certain embodiments are described in conjunction with an Android framework and or Linux operating system other embodiments of the present invention may be practiced with a variety of current or future operating systems kernels and frameworks and employ a variety of computing circuits devices servers and or systems that might utilize multiple processors processing cores and or processing circuits. Further certain of the illustrations herein describe a processing module a processor or a CPU e.g. CPU1 CPU2 for a device that provides a processing function in the described embodiments. However it is appreciated that a variety of other devices and or nomenclature may be used in other embodiments to provide for the processing function in practicing the invention. The invention may be readily adapted to other usages where multiple processing environments zones domains etc. exist in which separation and or segregation between two or more zones is desired. Likewise while certain embodiments are described as implemented by a set top box STB or like media processing device performing trusted media processing operations the novel architectures and methodologies are applicable in whole or in part to other devices including media consumption devices such as PVR s DVD players access points televisions computing devices smartphones etc. As used herein conditional access CA refers to the protection of content by requiring certain criteria to be met before granting access to this content while DRM refers to any technology that inhibits uses of digital content that are not desired or intended by the content provider.

A novel set top box or other media processing device architecture employing application based security definitions is described herein. In various embodiments of the disclosure instead of an end to end security definition being managed by a service operator or defined content itself software applications downloaded or preinstalled utilized by the media processing device include a full or partial security definition. For example each such application may include a downloadable conditional access security dCAS or downloadable DRM element definition. A corresponding certification process might entail for example certifying a part of an overall secure pathway with one or more applications providing the final portion of the certification. Alternatively a predefined plurality of conditional access mechanisms may be provided with a downloaded application establishing which mechanism is to be used. It may then be possible to certify a secure boundary without regard to the conditional access requirements of a particular company or media.

Referring now to a media processing device utilizing security definitions provided by software applications in accordance with an embodiment of the present disclosure is shown. In this embodiment security definitions provided by one or more software applications are utilized in the key management and certification support system to establish secure certified and unsecure media pathways supported through multiple hardware accelerated and software pathway elements. For example key management functionality may entail associating different keys with different functions enabling or controlling certain interfaces controlling how keys are generated stored and accessed etc. In addition the key management and certification support system can register certified CA and DRM systems which may be defined in whole or part by software applications and associated pathways and permitted operations in the media processing device . The security processor may service pathway configuration requests from the key management and certification support system and may be further operable to detect attempts from the restricted operating system environment to exploit the media pathway or nodes thereof in an unauthorized manner restrict access to a certified pathway etc.

In operation processing of content and application software from trusted sources such as service operator may be restricted to trusted or certified pathway components such as secure memory trusted secure processing circuitry and one or more secure hardware software acceleration functions in order to generate an output stream s . Likewise processing of content and application software from untrusted sources such as certain web based sources may be restricted to untrusted components such as generic or unsecured memory generic or unsecured processing circuitry and unsecured hardware software acceleration functions . Depending on requisite security levels and other considerations the effective boundaries between trusted and untrusted components may fluctuate in a dynamic manner as described more fully below.

In a media processing device capable of supporting multiple hardware accelerated and software pathway elements an entire secure or unsecure pathway can be adaptively constructed and adapted from pathway configurations providing for example maximum hardware acceleration and highest output quality to non accelerated low output quality. Each pathway node may have one or more software and or one or more hardware underpinnings that enable servicing of multiple simultaneous media streams.

In this manner for example an application can be installed which completes certification requirements associated with a particular service operator or content provider. Base certified pathways may be utilized as specified by the software application along with additional requirements that may also be specified by the software application in order to complete a certified pathway.

Selection and management of the respective components within the device or system to effectuate delivery of signals or media may be made based upon the secure or unsecure nature of a component current or anticipated availability of components historical availability of components the performance level and power consumption of components etc. Different sets of components may be adaptively employed to ensure composited compliance with one or more security compliance constraints provided by a software application s . Such constraints may be applied for example on a source or content specific basis to establish multiple secure and unsecure pathways such as might be used in multistreaming applications . As described more fully below security or compliance definitions to a given media item or software application may be flexible enough to allow crossover operations between restricted and privileged portions of a media processing device.

In some embodiments it is noted that components may have associated quality and security characteristics. The security characteristics may involve specific functionality within such component but may also involve the underlying system security. For example a given pathway node may have a certified secure dedicated hardware component or a certified secure software component if running on underlying secure hardware e.g. a secure processor . If running on unsecure hardware the same or nearly so secure software component might be deemed only partially secure or unsecure. Security levels of currently available pathways might also be constrained and dynamic pathway adaptations may be triggered by various limitations or resource competition.

In one example depending on the multi stream demands dynamic adaptation of overall resource pathways can be performed to support for example simultaneous decoding encoding or transcoding pathways. Further certain device and framework functional blocks including hardware acceleration components can have multiple processing options hardware software and combinations thereof which may each coexist and be supported with duplicate counterparts e.g. hardware copies and software instancing . Each such block can have particular security and performance quality characteristics. Based upon such characteristics and current availability in view of other pre existing stream pathways further pathways can be constructed and dynamically adapted having various overall performance and security qualities. So long as an end to end pathway meets minimum security requirements such as imposed by an application a service operator or content provider a pathway may be commissioned to establish or replace a current pathway.

Further in certain embodiments such as simultaneous multistreaming environments multiple software applications may interact at various media pathway nodes to guarantee end to end security at levels required to support multiple media flows. Such software applications may be internal and or external to a host media processing device.

In various embodiments a set top box or like device or a resident software application itself may exchange capabilities with other devices in a media consumption network e.g. PVR s DVD players access points televisions computing devices smartphones etc. to compare against the requirements of the software application. Such exchanges may occur for example between counterpart software applications residing on a set top box and recipient device. Once the information exchange is complete the software application may select which one or more modes of operation if any that it will permit. If the set top box cannot support such modes due to resource competition or otherwise such modes become unavailable. If available a set of modes of operation can be selected and dynamically switched to other of such modes on the fly during a media stream delivery which may require coordination with the application or the source to support the transition and possibly requiring quality changes in the media stream .

In this manner for example an application can be installed which completes certification requirements associated with a particular service operator or content provider. Base certified pathways may be utilized as defined by the software application along with additional requirements that may also be specified by the software application in order to complete a certified pathway.

In one example a service operator or content provider may simultaneously deliver multiple versions perhaps of different quality of a media item or broadcast for delivery via a software application over a platinum pathway a gold pathway and an uncertified pathway. In addition different versions e.g. versions 1 3 of a media item may be available supported by differing levels of security or quality of service QoS . For example a high definition or 3D version of a movie may have higher security requirements than a lower resolution version of the movie. In certain embodiments if the media processing device is unable to support delivery of a high definition version of a media item the item might be delivered via a lower security pathway that utilizes transcoding functions to produce a lower quality version that can be delivered by the device. Alternatively a media source or content provider may provide the differing versions of a media item for selective or adaptive delivery based on the characteristics such as QoS or security level of an available media pathway. Further content or portions of content from a particular media source may be deliverable via a relatively unsecure pathway. For example a movie streaming service may place no restrictions on movie trailers the first few minutes of a movie lower resolution versions of a movie etc.

It is also noted that security requirements relating to a particular media item may be updated or modified over time. That is to say pathway selection and adaptation may be based upon characteristics of a media item media recipient media source characteristics of other media streams in a multi stream environment pathway component availability overall device performance etc. that may vary over time such that any given consideration may have a relatively higher weight at one time and a relatively lower weight at another time. In addition different respective considerations may be employed at different respective times.

In some implementations a media processing device might offer multiple secure and unsecure media pathway constructs from which a subset might be acceptable for a particular media item or media stream delivery. As additional streams are added prior streams may limit the overall acceptable subset. Pathway adaptation and arbitration may cause an ongoing stream to use a different media pathway construct to make room for the new stream. Pathway acceptability may be determined and managed by a software application the media source media processing device or by the content itself or related metadata .

In addition to associated security characteristics components in a pathway construct may have inherent output quality characteristics. Thus an acceptable pathway from a security standpoint may carry with it a corresponding quality. For example a relatively low security pathway might be limited to use with dated movie releases lower resolutions or frame rates embedded or overlaid advertising etc.

As will be understood the embodiments of disclose described herein may apply to both upstream and downstream communications. More specifically an upstream pathway portion a downstream pathway portion and a middle portion including a media processing device may be configured in accordance with end to end security requirements. Alternatively or for a given media item portions of a media pathway configuration may have differing levels of associated security such as a secure upstream portion and a relatively unsecure downstream portion possibly involving a second tier of certification or an uncertified mode of operation . As will be appreciated many other combinations are possible.

In one such example a pay per view type of media stream requiring full end to end security may be interrupted by changing a channel to a normal broadcast television channel. This channel may entail full service operator head end to set top box security but allow unsecure set top box to television media delivery. Tuning the channel again to or otherwise selecting a freely distributed Internet video source might permit fully uncertified and unsecure media pathways from a server source to the television. Similarly interacting with the set top box to select a PVR source or content from a tethered DVD player might permit use of fully uncertified unsecure pathways. As noted the imposition permission of available security levels might be dictated by the media itself or in associated metadata or managed by the media source.

In certain implementations a content provider may evaluate downstream security capabilities and offer multiple pathway constructs along with various pricing options. Upon user selection e.g. via interaction with a set top box or software application a particular pathway construct may be enabled. Further an interface may be provided to indicate active pathway options. Selection of an additional media source might trigger such interface to for example prioritize one pathway construct over another force a PVR non real time delivery postponed viewing increase security and cost associated with a particular pathway construct etc.

In step which may precede step in some embodiments a first set of selectable device hardware software components such as hardware accelerators a v decoders DRM functions decryption encryption blocks etc. is identified the set of components conforming to security requirements provided by the software application. A second set of such components is then identified in step . Next in step at least one of the set of components is selected for use in establishing step a media pathway conforming to the security or certification requirements identified in step . Selection of the set of components may be performed by the media processing device using the security certification requirements by software application itself by the software application in conjunction with other external internal software applications such as might be installed on a recipient device by a media source acting through the software application etc. After the media pathway is established it is then utilized as shown in step to perform media processing operations relating to the software application.

As shown in step in this embodiment of the disclosure the set of components specified by the selected operation mode is dynamically modified to form a new media pathway. This new media pathway may also be compliant with the certification requirement. In step the media related operations are then continued over the new media pathway. Such pathway adaptation may be necessitated for example by pathway deterioration processing bottlenecks perhaps due to simultaneous multi stream processing processing node unavailability costs per the direction of a viewer etc. Further adaptive pathway transitions may require quality or performance downgrades or upgrades such as may be necessitated if the new media pathway is not compliant with the certification requirement.

The following Figures illustrate integration of untrusted software and software frameworks such as an Android framework with secure operating system OS kernel environments within a secure device such as a certified set top box device in accordance with various embodiments of the present disclosure. As will be understood such untrusted software components may be utilized in certain media pathways as permitted by application defined security requirements. In general an OS kernel may be viewed as the heart or ring 0 of the operating system providing an interface between system hardware components and the rest of the operating system and installed applications. As described more fully below a secure software abstraction layer is provided to isolate access to underlying software hardware and secure components of the device.

Communications and data exchanges between untrusted software frameworks and a secure OS kernel may occur via a secure access layer or interface comprised of a secure access client and secure access server for example elements and of that support an API and secure inter process communication IPC calls or kernel drivers. In certain embodiments the secure access client may be part of or accessible by a framework while the associated secure access server is incorporated in a secure operating environment or executed as a secure kernel module. In operation the secure access interface may help prevent system breaches or destabilization resulting from bad data or parameters by performing without limitation parameter validation checking and peripheral range checking through hardware when applicable handle validation direct indirect heap pointer validation heap isolation and release of hardware resources following termination of a restricted process. The secure access server may limit access to server side libraries and return errors in response to invalid or illegal parameters passed by clients. The secure access interface may further perform watchdog functions to free resources reserved for runaway or unstable clients.

Software frameworks may support varying degrees of collaboration and dependencies between applications. However the interfaces used by applications to provide services and communicate with other applications or an underlying operating system must be secured to defend against breaches and general malfeasance. As noted above in the Description of the Related Art and without rigid hardware isolation and separate execution environments the potential for execution of unauthorized code from an untrusted framework may compromise overall system security and negatively impact established certified or secured pathways absent methodologies and architectures e.g. a secure access server such as those described herein.

Referring now to an untrusted framework and a framework aggregator as clients of a secure operating system environment in accordance with various embodiments of the present disclosure is shown. In the illustrated embodiment the framework aggregator may be employed to embrace and extend operation with a wide variety of frameworks 1 n in order to support a wide variety of untrusted applications . In this manner for example a service provider can provide secure access to system resources to third party frameworks and other middleware offerings. Such offerings may include by way of example and without limitation AA AF Apple iOS Microsoft S J applets and like side by side technologies. The framework aggregator may include a set of tailored operating system libraries and HTML capabilities to support such technologies as well as user interface web engine access etc.

In certain embodiments user interfaces supported by the framework aggregator may enable a user to launch applications supported by the untrusted framework . For example an Android framework and or framework aggregator may offer a series of APIs or buttons including an Android button that provides a visual display of available Android applications. Further the Android framework and framework aggregator may share a graphics screen. In this manner it may not be necessary to port functionality into the Android framework that might otherwise be necessary. It is noted that in a given device an Android framework may be built using a different tool chain than that utilized by other frameworks supported by the framework aggregator and support execution of a different set of applications .

In the illustrated embodiment the untrusted framework and the framework aggregator can access a secure or trusted root operating system such as Linux based operating system and or underlying hardware such as secure set top box hardware components via an access server operating in concert with access clients and and a software abstraction layer API . In this illustrated embodiment an access client enables secure communications between the untrusted framework and access server while the framework aggregator is similarly supported by an access client . Access server and access clients and can be configured to incorporate DRM related code that enables secure DRM operations involving relevant set top box functionality.

A complete or partial Linux operating system instance including any necessary software patches is provided to support execution of the untrusted framework and the access client may further function to govern communications between the untrusted framework and the complete or partial Linux operating system instance . Linux kernel components of an Android software stack may include for example a display driver a USB driver a keypad driver a WiFi driver an audio driver power management a binder IPC driver a Bluetooth driver a flash memory driver etc. In addition the framework may include an API or one or more buttons that enable for example a visual display of available applications which may be executed on the untrusted framework using for example application IPC calls .

In one embodiment execution of the untrusted framework including components thereof as well as untrusted applications is performed using process isolation techniques. Such process isolation techniques may entail for example utilizing virtual address space where the address space for a first process is different than that of a second process. Inter process memory access may be prohibited or tightly controlled in certain implementations e.g. where system policies permit processes to collaborate over IPC channels such as shared memory or local sockets .

In the illustrated embodiment untrusted client applications and frameworks interact with secure portions of an underlying set top box platform including the set top box application certified operator supplied applications and secure Linux kernel environment through application IPC calls and an access minimal client that accesses minimal guest Linux services access . Likewise applications in a trusted user mode or privileged operating system environment receive full access to host Linux services access via an access client . The trusted user mode environment can be supported by a full host root filesystem while a minimal guest root filesystem on a separate partition or disk can support the untrusted user mode or restricted operating system environment.

In some embodiments certain resources of a set top box platform such as media processing and hardware acceleration resources for audio video encoding and decoding rendering of 2D and 3D graphics using a standardized API such as Open Graphics Library or OpenGL DRM encryption decryption etc. and networking interfaces may be accessed by untrusted client applications frameworks through IPC calls communicated through network sockets. Likewise events such as IR control signals may be communicated from a set top box platform to untrusted client applications frameworks through IPC calls such as a call into an Android API or button .

In one exemplary embodiment the primary set top box application is constructed as an Android application executed in a virtual machine container s . Depending on the capabilities of the relevant Android framework non standard API s or libraries may be required to support certain set top box functionality such as PVR picture in picture transcoding and channel tuning operations. Further this approach may require special interfacing e.g. passing a string to an interface to create an encode path as part of a hardware call or provision of non standard functions or even applications to address services and functions that may be lacking in a relevant framework or required for certification. For example an Android framework might be extended to include non standard functionality without negatively impacting compatibility by providing services that are hidden under the Android porting layers and receive and interpret uniform resource identifiers URIs passed through such layers.

In addition to an access client the Android framework of the illustrated embodiment may include trusted certified and or untrusted applications and application support JavaScript interpretation browser functions plug ins e.g. an Adobe Flash plug in and a Dalvik virtual machine. In some embodiments certified applications may be downloaded from or supplied by a service operator content provider cloud based source or the like. The Android framework further includes platform or operating system access functionality that enables limited access to necessary components of the secure Linux kernel environment through a minimal guest Linux services access interface .

A variety of virtualization techniques may be employed in various embodiments according to the present disclosure including implementations utilizing virtual systems running on either a shared operating system kernel or separate operating system kernels. Selection of a particular approach may depend on the required level of isolation as well as availability of processing and memory resources. In the illustrated embodiment the untrusted Android framework is executed in a first virtual machine VM guest Linux container s such as an LXC or Linux resource container to provide further isolation from secure processes and resources. In this embodiment the STB application may similarly operate in a second VM host Linux container having full host Linux services access . Briefly and in general container based virtualization or operating system level virtualization allows a kernel to run with a plurality of isolated virtual machines or virtual environments installed on top of it. Each virtual environment may be dedicated to run a particular application and is typically not a complete operating system instance but rather a partial instance of the operating system that works with a virtualization layer or hardware resource abstraction layer in the host operating system kernel.

Although virtualization may mitigate the need for hardware separation of untrusted components in certain embodiments multiple processors having different levels of security may benefit from virtual container constructs which operate wholly via one of such processors while other containers may span multiple processors. In one such embodiment a first processor s may be dedicated to execution of non secure functionality while a second secure processor s may be dedicated to conventional STB functionality. In various alternate embodiments an untrusted framework may be hardware sandboxed via for example non processor hardware peripherals memory isolation from processors and or peripherals etc. Various other divisions between secure and untrusted software and hardware are contemplated e.g. dividing an untrusted framework or applications themselves into a trusted portion and an untrusted portion examples of which are described below. Further by utilizing hardware and operating system virtualization features multiple operating systems may run simultaneously on the same hardware.

Using an example involving a web browser the portion of the browser that executes potentially unsafe Flash or JavaScript code such as a rendering engine can be executed in the untrusted virtual machine container with limited file system and peripheral access while the portion of the browser that has access to underlying platform hardware and sensitive operating system resources can be executed in one or more trusted virtual machine containers . In further embodiments the trusted portion may comprise a secure clone of a framework or modified version of a framework that supports secure applications and or secure portions of applications. In such embodiments unsecure applications or portions thereof may be executed by portions of a framework residing in an untrusted or restricted user domain or container. Various approaches to hardware sandboxing may be employed to further isolate untrusted portions of a framework and to support restricted operating system domains or environments.

The secure Linux kernel environment of this embodiment includes a secure access kernel driver and an access server that provides a full access interface to support trusted user mode functionality and a guest access interface to support untrusted user mode functionality. Full host Linux services access and minimal guest Linux services access are provided to the trusted and untrusted user mode environments respectively. As above the trusted user mode environment can be supported by a full host root filesystem while a minimal guest root filesystem on a separate partition or disk supports the untrusted user mode environment.

In one embodiment CPU1 and CPU2 are both segregated into separate and distinct zones when in a sandboxing mode. In another embodiment the trusted CPU1 is set up having its own segregated regions of memory and also given access rights over some or all address ranges of memory mapped portions of CPU2. Generally when operating in separate or segregated zones environments or domains the two CPUs operate on different applications so that CPU1 executes one set of instructions while CPU2 executes a different set of instructions. Segregation or separation of this nature is typically referred to as sandboxing or sandbox mode. The purpose of most sandboxing is to prevent one zone from accessing functionality in the other zone or to have controlled access of one zone into another. In some instances both zones may be limited from having access to the other zone or only have controlled access between zones. In some applications one zone may be regarded as a secure privileged or trusted zone and the other as a restricted non secure or non trusted zone in which access by the applications operating on the non secure zone are prevented or controlled from accessing certain applications running in the secure zone.

As noted above a number of devices utilize multiple processors or processing cores to run separate programs applications etc. In a situation where one zone is not to have access to a second zone one way to ensure this separation is by checking the accesses to the system memory. That is by ensuring accesses that are allocated to CPU1 are not accessed by CPU2 unless the location of the access is a shared location applications running on CPU2 may be prevented from breaching the functional separation. One way to achieve this protection is to provide an access check and access control to ensure that the correct processing module is accessing a permitted location for that processing module. In the illustrated embodiment CPU1 and CPU2 may communicate directly through a network socket IPC calls etc.

The STB gateway of the illustrated embodiment interacts with a residential network infrastructure and external media systems via one or more wired and wireless networks links. The wired and wireless networks links may utilize one or more of various transmission media such as coaxial cable shielded twisted pair cable fiber optic cable power line wires and wireless media radio frequencies microwave satellite infrared etc. and operate in accordance with a variety of communication and networking protocols TCP IP UPnP IPv6 etc. . In addition the wired and wireless networks links may comprise a multi hop network utilizing a spanning tree protocol direct wireless connections peer to peer links etc.

The external media systems may comprise for example one or more of cable satellite and or terrestrial televisions systems. Various headend equipment and services can be utilized by these systems such as a cable headend that receives television signals for further processing and distribution and may offer various other services such as internet connectivity and VoIP services.

The STB gateway of the illustrated embodiment includes a broadcast unicast multicast front end that operates to receive uncompressed or compressed digital video digital audio and other data signals from either the external media systems or residential network infrastructure for further processing and distribution. The front end comprises tuner circuitry operable to isolate particular channels. Signals from the tuner circuitry are then provided to analog to digital ADC circuitry and demodulation circuitry for conversion into binary format stream. Once in binary format forward error correction FEC circuitry checks the integrity of the received binary stream. Audio video and data extracted from the binary stream may then be decoded e.g. by decoding into formats suitable for consumption by downstream devices. It is noted that demodulation circuitry may support one or more modulation techniques such as Quadrature Phase Shift Keying QPSK Quadrature Amplitude Modulation QAM Coded Orthogonal Frequency Division Multiplexing COFDM etc.

The front end may be integrated into one or more semiconductor devices that may further support for example interactive digital television networked DVR functionality IP video over DOCSIS applications and 3D graphics support. In addition multiple tuner circuitry including in band and out of band tuners ADC circuitry and demodulation circuitry may be provided for different modulation schemes and television standards such as PAL NTSC ATSC SECAM DVB C DVB T 2 DVB H ISDB T DMB Open Cable .

In one alternative embodiment of the disclosure functionality of the STB gateway is performed by a smartphone or mobile computing device. In this embodiment the front end comprises one or more wireless interfaces including PHY and baseband functions such as a cellular 3G 4G IMT Advanced etc. or wide area network HetNet Wi Fi WiMax etc. interface. The interface may support one or more modulation and multiplexing techniques such as OFDM OFDMA SC FDMA QPSK QAM 64QAM CSMA MIMO etc. In the illustrated embodiment the wireless interface comprises a transceiver analog to digital ADC and digital to analog DAC circuitry demodulation and modulation circuitry and FEC such as turbo codes or LDPC codes circuitry . Encoding decoding and transcoding functions may be provided by processing circuitry and storage .

The STB gateway also includes wide area network interface circuitry for communicating with residential network infrastructure and or external media system . Through the communication interface circuitry the STB gateway may communicate directly with upstream resources or offer bidirectional bridged communications between such resources and devices e.g. devices coupled to the STB gateway . As noted above software applications hosted by the STB gateway may work in concert with counterpart applications located in other devices of a media distribution network to provide appropriate security definitions and define media pathways of varying levels of security.

In the embodiment of STB gateway interacts with a variety of devices via communication interface circuitry . For example a television or display interface module communicates with a digital television or other media display device to relay television programming and enable available interactive media services. In certain embodiments the television or display interface module might include a remote user interface RUI server. Similarly an audio interface provides audio programming or audio library access to an audio system . The communication interface circuitry further comprises a remote control interface for receiving control signals from a remote control . In addition to traditional remote control operations the remote control may further offer voice and or gesture control signals that are relayed or mapped to relevant consumer devices. User interfaces are also provided for communications with one or more user interface devices . Gaming interfaces function to provide interactive communications with a gaming system . Such communications may involve for example online multiplayer gaming between members of a social network and or external players in a gaming platform. Power management interface functionality is provided to enable power saving operations between devices .

The STB gateway of the illustrated embodiment includes processing circuitry operating system s and storage components of which may be comprised of hardware software or combinations thereof services support and decoding encoding transcoding functionality to support network interactions such as those described above. Services support in this embodiment includes various functions such as power management bridging and media server receiver services . Other traditional features of a STB gateway may also be included. For example the processing circuitry may include a system on a chip or like device s that provide components such as a core processor audio video decoder media processor DSP graphics core encryption decryption core adaptive transcoding etc.

As may be used herein the terms substantially and approximately provides an industry accepted tolerance for its corresponding term and or relativity between items. Such an industry accepted tolerance ranges from less than one percent to fifty percent and corresponds to but is not limited to component values integrated circuit process variations temperature variations rise and fall times and or thermal noise. Such relativity between items ranges from a difference of a few percent to magnitude differences. As may also be used herein the term s operably coupled to coupled to and or coupling includes direct coupling between items and or indirect coupling between items via an intervening item e.g. an item includes but is not limited to a component an element a circuit and or a module where for indirect coupling the intervening item does not modify the information of a signal but may adjust its current level voltage level and or power level. As may further be used herein inferred coupling i.e. where one element is coupled to another element by inference includes direct and indirect coupling between two items in the same manner as coupled to . As may even further be used herein the term operable to or operably coupled to indicates that an item includes one or more of power connections input s output s etc. to perform when activated one or more its corresponding functions and may further include inferred coupling to one or more other items. As may still further be used herein the term associated with includes direct and or indirect coupling of separate items and or one item being embedded within another item. As may be used herein the term compares favorably indicates that a comparison between two or more items signals etc. provides a desired relationship. For example when the desired relationship is that signal 1 has a greater magnitude than signal 2 a favorable comparison may be achieved when the magnitude of signal 1 is greater than that of signal 2 or when the magnitude of signal 2 is less than that of signal 1.

As may also be used herein the terms processing module module processing circuit and or processing unit may be a single processing device or a plurality of processing devices. Such a processing device may be a microprocessor micro controller digital signal processor microcomputer central processing unit field programmable gate array programmable logic device state machine logic circuitry analog circuitry digital circuitry and or any device that manipulates signals analog and or digital based on hard coding of the circuitry and or operational instructions. The processing module module processing circuit and or processing unit may have an associated memory and or an integrated memory element which may be a single memory device a plurality of memory devices and or embedded circuitry of the processing module module processing circuit and or processing unit. Such a memory device may be a read only memory random access memory volatile memory non volatile memory static memory dynamic memory flash memory cache memory and or any device that stores digital information. Note that if the processing module module processing circuit and or processing unit includes more than one processing device the processing devices may be centrally located e.g. directly coupled together via a wired and or wireless bus structure or may be distributedly located e.g. cloud computing via indirect coupling via a local area network and or a wide area network . Further note that if the processing module module processing circuit and or processing unit implements one or more of its functions via a state machine analog circuitry digital circuitry and or logic circuitry the memory and or memory element storing the corresponding operational instructions may be embedded within or external to the circuitry comprising the state machine analog circuitry digital circuitry and or logic circuitry. Still further note that the memory element may store and the processing module module processing circuit and or processing unit executes hard coded and or operational instructions corresponding to at least some of the steps and or functions illustrated in one or more of the Figures. Such a memory device or memory element can be included in an article of manufacture.

The present invention has been described above with the aid of method steps illustrating the performance of specified functions and relationships thereof. The boundaries and sequence of these functional building blocks and method steps have been arbitrarily defined herein for convenience of description. Alternate boundaries and sequences can be defined so long as the specified functions and relationships are appropriately performed. Any such alternate boundaries or sequences are thus within the scope and spirit of the claimed invention. Further the boundaries of these functional building blocks have been arbitrarily defined for convenience of description. Alternate boundaries could be defined as long as the certain significant functions are appropriately performed. Similarly flow diagram blocks may also have been arbitrarily defined herein to illustrate certain significant functionality. To the extent used the flow diagram block boundaries and sequence could have been defined otherwise and still perform the certain significant functionality. Such alternate definitions of both functional building blocks and flow diagram blocks and sequences are thus within the scope and spirit of the claimed invention. One of average skill in the art will also recognize that the functional building blocks and other illustrative blocks modules and components herein can be implemented as illustrated or by discrete components application specific integrated circuits processors executing appropriate software and the like or any combination thereof.

The present invention may have also been described at least in part in terms of one or more embodiments. An embodiment of the present invention is used herein to illustrate the present invention an aspect thereof a feature thereof a concept thereof and or an example thereof. A physical embodiment of an apparatus an article of manufacture a machine and or of a process that embodies the present invention may include one or more of the aspects features concepts examples etc. described with reference to one or more of the embodiments discussed herein. Further from figure to figure the embodiments may incorporate the same or similarly named functions steps modules etc. that may use the same or different reference numbers and as such the functions steps modules etc. may be the same or similar functions steps modules etc. or different ones.

Unless specifically stated to the contra signals to from and or between elements in a figure of any of the figures presented herein may be analog or digital continuous time or discrete time and single ended or differential. For instance if a signal path is shown as a single ended path it also represents a differential signal path. Similarly if a signal path is shown as a differential path it also represents a single ended signal path. While one or more particular architectures are described herein other architectures can likewise be implemented that use one or more data buses not expressly shown direct connectivity between elements and or indirect coupling between other elements as recognized by one of average skill in the art.

The term module is used in the description of the various embodiments of the present invention. A module includes a functional block that is implemented via hardware to perform one or module functions such as the processing of one or more input signals to produce one or more output signals. The hardware that implements the module may itself operate in conjunction software and or firmware. As used herein a module may contain one or more sub modules that themselves are modules.

While particular combinations of various functions and features of the present invention have been expressly described herein other combinations of these features and functions are likewise possible. The present invention is not limited by the particular examples disclosed herein and expressly incorporates these other combinations.

