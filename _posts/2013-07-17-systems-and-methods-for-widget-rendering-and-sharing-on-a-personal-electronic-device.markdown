---

title: Systems and methods for widget rendering and sharing on a personal electronic device
abstract: Systems and methods for providing, sharing, storing and playing widgets and associated media content on a personal audiovisual device, such as a digital photo frame, are described. In one implementation, widgets may be selected by a user for rendering based on capabilities of a user's device, with the widgets then provided to the device for playback. Digital content such as audio files, images, and/or video may be rendered in conjunction with playback of the widget. Widgets may be shared between users so as to facilitate sharing of media content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09344522&OS=09344522&RS=09344522
owner: BBY SOLUTIONS, INC.
number: 09344522
owner_city: Richfield
owner_country: US
publication_date: 20130717
---
This application is a continuation of U.S. patent application Ser. No. 12 715 331 filed Mar. 1 2010 which is related to and claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application Ser. No. 61 156 418 entitled SYSTEM AND METHOD FOR WIDGET SHARING AMONG NETWORKED ELECTRONIC DEVICES filed on Feb. 27 2009 to U.S. Provisional Patent Application Ser. No. 61 156 432 entitled SYSTEM AND METHOD FOR RENDERING CONTENT ON A NETWORKED ELECTRONIC DEVICE THROUGH EXECUTION OF USER DEFINED WIDGETS filed on Feb. 27 2009 and to U.S. Provisional Patent Application Ser. No. 61 156 436 entitled NETWORKED ELECTRONIC DEVICE FOR EXECUTING USER DEFINED WIDGET SEQUENCES filed on Feb. 27 2009. In addition this application is a continuation in part of and claims priority to co pending U.S. Utility patent application Ser. No. 11 845 018 entitled CONFIGURABLE PERSONAL AUDIOVISUAL DEVICE FOR USE IN NETWORKED APPLICATION SHARING SYSTEM which claims priority under 35 U.S.C. 119 e to U.S. Provisional Application Ser. No. 60 805 830 entitled CONFIGURABLE PERSONAL AUDIOVISUAL DEVICE FOR USE IN NETWORKED APPLICATION SHARING SYSTEM to U.S. Provisional Application Ser. No. 60 823 491 entitled SYSTEM AND METHOD FOR TRANSFERRING ELECTRONIC CONTENT TO NETWORKED PERSONAL AUDIOVISUAL DEVICES to U.S. Provisional Application Ser. No. 60 823 493 entitled NETWORKED PERSONAL AUDIOVISUAL DEVICE HAVING FLEXIBLE HOUSING to U.S. Provisional Application Ser. No. 60 823 496 entitled SYSTEM AND METHOD FOR AUTOMATICALLY UPDATING THE SOFTWARE OF A NETWORKED PERSONAL AUDIOVISUAL DEVICE to U.S. Provisional Application Ser. No. 60 945 900 entitled REGISTRATION SYSTEMS AND METHODS FOR PERSONALIZED PORTABLE DEVICES and to U.S. Provisional Application Ser. No. 60 869 297 entitled SYSTEM AND METHODS FOR LOCATION MOTION AND CONTACT DETECTION AND TRACKING IN A NETWORKED AUDIOVISUAL DEVICE. The content of each of these applications is hereby incorporated by reference herein in its entirety for all purposes.

The present invention is directed generally to the field of personal electronic devices and downloadable applications for rendering and sharing thereon. More specifically but not exclusively the invention relates to systems and methods for selecting downloading rendering and sharing widgets on personal electronic devices such as digital photo frames.

It is well known that broadband Internet connectivity is becoming substantially more pervasive among consumers as a result of competition among service providers utilizing various different technologies such as cable digital subscriber line DSL wireless networks and satellite. In many households personal computers PCs constitute the primary users of bandwidth furnished by these broadband connections. In order to facilitate sharing of the Internet connection among PCs in a given household a variety of wired and wireless home networking technologies have been utilized.

As a result of the impracticality of installing Ethernet cable throughout a residence RF based wireless networking technology is becoming increasingly commonplace among consumers. Although systems based upon the 802.11b or Wi Fi wireless networking standard may currently be the most pervasive versions of the 802.11 standard offering increased bandwidth have been introduced and yet higher bandwidth approaches have been proposed. In addition future wireless networks based on technologies such as Wi Max LTE and others will likely substantially increase available bandwidth.

Increased bandwidth available to the home has increased the usage of a number of different services such as Internet based delivery of digital audio video and graphic content. However since many of these services are facilitated by a desktop or notebook PC capable of communication over a broadband Internet connection users are forced to remain physically close to their respective computers in order to utilize these services. Although other strategies to leverage the availability of broadband Internet connectivity within the home are currently being developed many of these approaches involve creation of a relatively powerful costly centralized communications hub e.g. a PC with enhanced media capabilities or a multi purpose cable set top box . Unfortunately this typically requires either the purchase of an expensive hardware device or extended subscription plan and constrains the extent to which Internet enabled entertainment or other services are enjoyed outside of the immediate vicinity of the centralized hub device.

Accordingly there is a need in the art for new technologies for delivering content to user devices such as personal electronic devices.

The present invention is directed generally towards systems and methods for providing sharing sending receiving and playing widgets in a personal electronics device. I one exemplary embodiment a digital photo frame and associated service provider system may be provided to allow a user to render digital content in conjunction with one or more widgets as well as send digital content in conjunction with widgets to other associated users of the system.

Various additional aspects of the present invention are further described below in conjunction with the appended drawings.

Certain of the above referenced copending applications describe a system comprised of a set of personalized audiovisual devices in Internet based communication with a service provider. Such personalized audiovisual devices are commercially distributed under the trademark CHUMBY and may also be referred to herein as CHUMBY devices . During communication with the service provider each CHUMBY device periodically receives a set of application programs or widgets which are sequentially executed by the CHUMBY device after being received from the service provider or locally from a personal computer e.g. via a USB connection . Since each CHUMBY device is typically Internet enabled each may also be remotely configured and otherwise personalized via the CHUMBY service provider through a Web browser executed by a remote terminal e.g. a PC or wireless handset . Such personalization may include for example specifying the set of widgets provided to a given CHUMBY device as well as their sequence and priority of execution.

As is described hereinafter users may configure a CHUMBY device via an interface provided by the CHUMBY service provider may drag and drop icons representative of various widgets onto a rectangular or other portion of the interface representative of the screen of the CHUMBY device being configured. Alternatively a user may select textual and or graphical representations of widgets and select a button or other graphical representation of a user interface UI control to add the widget to the CHUMBY device being configured. In these ways the layout of the screen of the CHUMBY device may be remotely configured by the owner of the device. Although each CHUMBY device will preferably be capable of being configured in this manner in certain embodiments each may also come loaded with a default set of widgets e.g. an alarm clock widget disposed to be executed by the CHUMBY device upon its registration with the CHUMBY service provider. Once a CHUMBY device has been configured i.e. with either a default or user specified configuration it may execute the widgets defined by the configuration without user intervention. Alternatively users may opt to stay on a given widget by explicitly instantiating the system interface on the device and selecting a stay UI control. If a user has explicitly selected a widget to stay the sequential execution of widgets can be continued by terminating the stay command via the system interface. If a user interacts with a widget which presents user interface controls to the user through one of a number of alternative input methods such as via a touchscreen or accelerometer the currently active widget will continue to execute on the device until some timeout period expires following the cessation of user interaction with the widget.

The configuration of a CHUMBY device may also specify the events or conditions under which the sequence of execution of widgets is to be altered or interrupted and allows certain widgets to be accorded the highest available priority with respect to execution. For example an alarm clock widget could be granted such priority in order to ensure that its alarm function would not be prevented from being actuated at the scheduled time due to contemporaneous execution of another widget. In one embodiment the Web interface provided by the CHUMBY service provider is in the form of a timeline enabling the sequence of execution of the widgets associated with a given CHUMBY device to be controlled in an intuitive manner. In an exemplary implementation the timeline defines the order in which the widgets are to be played in a constantly repeating sequence that is the timeline is representative of the complete set of widgets played by a given CHUMBY device as well as their relative order and duration of execution. However certain widgets e.g. the alarm clock widget can be specified to be actuated at a given time by appropriately setting the applicable configuration element of such widgets.

Although in exemplary embodiments it is not contemplated that more than a single content related widget be operative at any given time a system configuration widget may be utilized to run concurrently with each such content related widget in order to for example control the relative priority of execution of such content related widgets and system settings such as loudness brightness navigation and the like.

In one embodiment CHUMBY devices are each capable of wireless communication in accordance with an accepted wireless networking standard such as the 802.11b or 802.11g standard. Accordingly in homes or other environments containing one or more wireless access points multiple CHUMBY devices may be distributed throughout the coverage area of the access points. Alternatively a CHUMBY device may use a wired connection as a backup to or in lieu of a wireless connection to the extent convenient or necessary.

The interface presented by each CHUMBY device may be changed in accordance with the nature of the widget currently being executed by the device. For example a clock radio widget could be employed to produce audio and visual imagery consistent with a conventional alarm clock at an appointed time in the morning. In exemplary embodiments the clock radio widget would allow for the selection of a standard wake up chime or choice of several different audio programs. Later in the day the device interface could be devoted to a rotating selection of several standard information screens such as news headlines local weather sports scores stock market updates horoscope and the like.

Users of CHUMBY devices may also optionally participate in a CHUMBY Network along with other users by logging on to a Web site e.g. www.chumby.com hosted by the CHUMBY service provider. At this site also referred to hereinafter as the CHUMBY site a user will be able to register with the CHUMBY Network and access services enabling the basic capabilities of the user s CHUMBY device. Basic capabilities may comprise for example the opportunity to send receive widgets and other content to from other CHUMBY users for improved personalization of the device s generic information features more detailed alarm setting capabilities and better selection and configuration of audio capabilities.

Registration with the CHUMBY Network may enable members of the Network to access a wide array of widgets. It is contemplated that certain of such widgets would be developed by the entity operating the CHUMBY Network while other widgets would be developed by independent developers. In addition members of the CHUMBY Network would also be able to communicate with the CHUMBY devices of other members provided that permission for such communication has been authorized by the other members. Such communication could entail for example the sending of a widget and corresponding data from the CHUMBY service provider to a member of the CHUMBY Network the receiving member in response to a request sent to the CHUMBY service provider by another member the sending member . For example a sending member could after receiving permission from a receiving member request the CHUMBY service provider to send a photo viewer widget to the receiving member. In addition the sending member could specify that a link be established between the photo viewer widget and pictures uploaded by the sending member to the CHUMBY service provider. In this way the receiving member could without any effort other than providing authorization to the sending member enable their CHUMBY device to essentially automatically receive and display a sequence of photos provided by the sending member. Similarly while traveling a sending member could send a personalized wake up message to the CHUMBY device of a consenting receiving member. Finally a sending member could send widgets to a group of receiving members included on a buddy list of the sending member which could be established after the receipt of suitable permissions from those proposed to be included on the list.

In an exemplary embodiment members of the CHUMBY Network are enabled to completely configure through any Web browser their respective CHUMBY devices by specifying a set of premium widget programs or content to play or be shown rotationally or in some other user defined sequence on their respective CHUMBY devices. Such premium widgets and content may include for example webcam shots RSS readers filtered news reports personalized stock performance data short animations or movies podcasts or audio files to function as the audio sources for alarms or reminders scheduled to be triggered at different times throughout the day.

It is noted that the word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments.

Referring again to the system also includes a plurality of user computers disposed for communication with the service provider via an access network not shown and the Internet . Each user computer executes a Web browser capable of displaying Web pages generated by the service provider through which a user may configure one or more CHUMBY personal audiovisual devices . As mentioned above such configuration may include for example specifying a set of widgets to be sent to a particular device and their sequence of execution adjusting audio or visual parameters relating to such execution defining and managing a user s CHUMBY network including for example defining a buddy list comprised of other CHUMBY users with respect to which the device is permitted to communicate and defining the layout or other aspects of the user interface presented through the screen of the device . To this end a given Web browser may when in communication with the service provider present a rectangular configuration window which displays the widgets currently configured to play within the named channel . By dragging and dropping iconic representations of widgets or content files into such a configuration window a user may personalize the behavior and user interface presented by the corresponding CHUMBY device . Alternatively a user may select textual and or graphical representations of widgets and select a button or other graphical representation of a user interface control to add the widget to the CHUMBY device being configured. Moreover users may access the service provider via a Web browser for the purpose of sending widgets or other information to other users for execution or display by their respective CHUMBY devices . In one embodiment the service provider maintains a record of the permissions granted among users of CHUMBY devices in order to determine which users are authorized to provide via the service provider a given user with widgets messages or other information and vice versa. Such permissions may be granted or withdrawn by a given user via appropriate pages presented by a Web browser in communication with the service provider .

In the exemplary embodiment a configuration window may be utilized to configure one or more CHUMBY devices consistent with the permissions granted by the users of such devices . In addition a user of a given CHUMBY device may elect to have the interface of the device mirror or otherwise replicate that of another device subject to the requisite permissions being granted. Similarly one or more CHUMBY devices may be configured to mirror the interface for a virtual CHUMBY device or vice versa defined via a configuration window.

Different users of a given CHUMBY device may be accorded different roles or privileges in configuring the device . For example user granted supervisory privileges could be given the authority to filter or monitor the widgets or content sent to the CHUMBY device . This would enable for example parents to manage and or monitor the widgets and content executed and displayed by the one or more CHUMBY devices used by their children. Moreover administrators of the system would typically possess an elevated level of privilege relative to users of CHUMBY devices within the system . Also if a specific widget performs functions requiring communication with a web site controlled by a third party in order to access content the developer of the widget may create a hierarchical user model to regulate such access and perhaps the functions of the widget .

Attention is now directed to which illustrates an exemplary distribution of CHUMBY devices throughout a residence or other building having a number of rooms . In the embodiment of each CHUMBY device is equipped with wireless transceiver e.g. a Wi Fi transceiver to facilitate communication with one or more access points . Each access point is interconnected with an access network by way of for example a local area network thereby enabling Internet based communication to be established between the service provider and the devices within the residence .

Turning now to a block diagrammatic representation is provided of the principal components of an embodiment of a CHUMBY device of the present invention. As shown the device includes a central processing unit CPU memory including volatile e.g. SDRAM and non volatile memory e.g. flash memory an audio interface a wireless communications interface and a sensor interface . In an exemplary implementation the CPU comprises a microprocessor e.g. based upon an ARM core configured to run a Linux kernel and having attendant capabilities for graphics rendering. The device may or may not include a battery backup unit which serves to preserve real time information in the event of a power outage and may also serve as a primary power source if the user desires untethered operation. The battery may or may not be rechargeable. The operating system is made aware of the power status and actively configures the CHUMBY device and the running widget to either save power or modify the user interface consistent with untethered operation.

The device may or may not include a Security Module not shown If included the Security Module serves to store secrets and compute authentication algorithms in a fashion that fully isolates core security routines from otherwise unsecured code running on CPU . The secret storage and authentication capability may or may not be used by the client server communication protocol to enable authenticated and encrypted communication capabilities for among other things financial transactions. The Security Module is initialized in such a way that there is no default mapping of the secrets contained within the module versus the identity of the hardware of the user. Furthermore the secrets are revocable and a routine may exist for generating new secrets based upon a master secret that is never associated with a specific user s profile. This enables opt in policies for privacy and a limited ability to revoke identity information barring forensic network analysis thereby enabling anonymity as well. The anonymous trust network can be extended with a variety of client server protocols to enable a wide range of anonymous transactions including but not limited to cash and content transactions.

As shown software comprising widgets or other applications received from the service provider are stored in memory and loaded into SDRAM or non volatile memory for execution by the CPU . In one embodiment widgets are downloaded from the service provider to CHUMBY devices in the format of a Adobe Flash file also referred to as a Flash movie . As is known by those skilled in the art Flash movies are usually accorded a .swf file extension and may be played by a Flash Player developed and distributed by Adobe Systems. Accordingly the memory also includes a Flash Player as well as a copy of the operating system executed by the CPU . In other embodiments widgets may be developed in accordance with other formats and played by players compatible with such other formats.

In the exemplary embodiment widgets are not permanently stored in memory of CHUMBY devices. Rather widgets are executed by the CPU and then either discarded or cached in temporary memory for future use. This enables widgets to be pushed from the service provider as necessary to support the sequence of widget execution specified for each CHUMBY device. That is the service provider may operate to provide a stream of widgets to each CHUMBY device where the widgets within each such stream are temporarily cached within the memory of the applicable CHUMBY device until their execution. This enables the service provider and or the creator of each widget program to maintain a degree of control over the content and behavior of each widget program since each such program is typically not permanently downloaded thereby facilitating modification but is rather temporarily cached and erased after some predetermined time has passed or a memory use threshold has been reached.

The CHUMBY device also includes a liquid crystal display LCD controlled by an LCD controller which may or may not be integrated into the CPU . The display visually renders iconic representations of the widget programs stored within the CHUMBY device and images generated in connection with the execution of such widgets by the CPU . In an exemplary implementation a touchscreen overlays the LCD and is responsive to a touchscreen controller . In one embodiment a user may induce the CHUMBY device to enter a control panel mode by touching the a sensor such as the squeeze sensor not shown in touchscreen or other sensor device. In an exemplary embodiment widgets and the system control panel may present the user with different user interface or UI elements to enable the user to interact with the widget system control panel. These UI elements may include but are not limited to buttons scroll bars drop down combo boxes and menus. When a user touches the screen to interact with one of these UI elements the touchscreen controller informs the CPU that the touchscreen has been touched at a specific location and that location is converted by the CPU to a UI control actuation event based on the configuration of the currently displayed widget or system control panel screen not shown in . In alternate implementations the LCD and touchscreen may comprise an integral device controlled by an integrated controller.

Turning to there is shown an exemplary user interface generated by the LCD during operation of the CHUMBY device in control panel mode. As shown the interface defines an mute button a channel button a night button a music button a settings button a clock button a delete button a rate button a send button a stay button a right arrow button a left arrow button and a hide control panel mode button . Selection of the mute button toggles the mute state of the CHUMBY device. Selection of the channel button instantiates another control panel screen which enables users to view the content of all of their CHUMBY channels and or select a new channel to be loaded and run on the CHUMBY device. A channel is a collection of widgets configured by a user in a named grouping via an interaction between a page rendered on a web browser and the CHUMBY service provider such collection of widgets generally running on the CHUMBY device in a sequential repetitive fashion.

Selection of the night button places the CHUMBY device into a night mode in which the screen is dimmed and a low intensity clock is displayed. Selection of the music button instantiates another control panel screen which enables the user to interact with and control various continuous music sources such as for example MP3 players storage devices and music services. Such sources may reside on either the local network or on the Internet. Selection of the settings button instantiates another control panel screen which enables the user to configure various CHUMBY device settings such as for example wireless network setup speaker volume and touchscreen calibration. Selection of the clock button instantiates another control panel screen which enables the user to configure the time date and alarm functions of CHUMBY device. Selection of the delete button deletes the currently displayed widget to be deleted with user confirmation from the current channel . Selection of the rate button instantiates another control panel screen which enables the user to provide a rating on a fixed scale for the currently displayed widget. Selection of the send button icon instantiates another control panel screen which displays a personalized list of other users of CHUMBY users to which it may be desired to send widgets or otherwise communicate. Selection of the stay button toggles the stay state of the currently selected widget. When the stay state of a widget is selected the widget plays continuously on the CHUMBY device. Selection of the right arrow button or left arrow button causes the CHUMBY device to display the previous or next widget in the channel respectively. A user may from any Web browser access a Web page generated by the service provider and designate a favorite widget. Alternatively a user may press a virtual touchscreen based button on his or her CHUMBY device to designate the current widget as the new favorite widget. When the user then selects the heart shaped icon not shown in on his or her CHUMBY device an iconic representation of this favorite widget e.g. a clock widget replaces the heart shaped icon and enables the user to immediately activate i.e. cause the CPU to execute the program instructions corresponding to such favorite widget. Alternatively selection of the heart shaped icon or other predefined icon results in the CHUMBY device becoming configured in accordance with a favorite or other profile rather than executing a favorite widget. Of course certain profiles may be specified to include only a single widget such as for example an alarm clock or photo viewer widget.

Referring again to selection of the right arrow button advances one widget in a user defined or default widget sequence channel or just skips ahead in implementations in which widgets are chosen to be displayed randomly. Similarly selection of the left arrow button results in going back one widget in the user defined or default widget sequence channel . As the buttons and are selected an iconic representation or avatar corresponding to the currently active widget is displayed in a display box . If it is desired to return to the currently active widget the hide control panel mode button is selected and the control panel mode interface changes to a screen through which the user views the sequence of widgets currently configured to be executing on the CHUMBY device.

In certain embodiments a physical button element not shown may be provided proximate the LCD screen to enable navigation through menus and the like presented by the LCD screen . In one implementation this button element is cross shaped in order to facilitate two dimensional navigation and may further include a smaller dedicated button e.g. in the center of the cross associated with a specific widget e.g. clock widget . Pressing this dedicated widget would interrupt the operation of all other widgets.

In implementations in which two dimensional navigation through the user interface of the CHUMBY device is supported users may be provided with the ability to navigate forward and back in the configured widget timeline. Similarly users may navigate up and down a stack of related widgets. This function depends on the implementation of the concept of widget categories i.e. associating widgets into logical categories that can be displayed sequentially if configured to be displayed. An example of a category could be News . Widgets included within this category could include for example a local news widget a sports news widget an entertainment news widget a business news widget and the like. For each category there would be a default widget which is designated by the user on the CHUMBY web site for each category selected to be displayed by the user s CHUMBY device.

If more than one widget in a category is selected then the widgets are conceptually stacked with the default widget being 

If a widget for a given category e.g. News is displayed and there exist additional widgets in the category which are also configured for display then in the exemplary embodiment these additional widgets are stacked below the displayed widget. In this case the user may take some predefined action with respect to the user s CHUMBY device e.g. perhaps selecting a control on the touchscreen or accessing a function via the control panel which is instantiated via actuating the squeeze sensor in order to cause the next widget in the stack for that category to be displayed. The CHUMBY device may be configured such that taking further predefined actions of the same type will cause the widgets either above or below in the stack to be displayed as designated by the user. The last widget that is displayed in the stack for the applicable category when the CHUMBY device cycles to the next widget category will be the widget displayed in the next cycle for the just exited category e.g News .

The tabular illustration below provides a conceptual layout of exemplary widget stacks in various categories 

The following provides a conceptual representation of the case in which the user has navigated into widget stacks for News Entertainment and Sports 

Referring now to a block diagrammatic representation is provided of the server components and other infrastructure which may be utilized to facilitate the operations of the CHUMBY service provider . It is understood that the representation of is functional in nature and single or multiple computers may be adapted to execute software designed to perform one or more than one of the functions described below. For example the functionality provided by the load balancers may be provided by a single load balancing device or multiple load balancing devices. Similarly each of the servers represented in may be realized using either a single server computer or using a cluster comprised of primary secondary and backup server computers interconnected in configurations familiar to those skilled in the art.

As shown in one or more Web servers are used to define the Web interface presented by the CHUMBY service provider to users or other interested parties. A system database may include among other things CHUMBY user account information CHUMBY device configuration information CHUMBY widget configuration and instance information marketing materials press information and contact information relating to the CHUMBY service that is served by the Web servers . Also included may be information relating to registration and first level support.

A user account server maintains user account data in the system database and provides authentication services to the other servers depicted in .

One or more widget servers are used to serve widgets to CHUMBY devices . Each widget server will typically be sufficiently powerful to encrypt and sign widgets on demand. In addition each server will be configured to store and forward widgets being sent from one user to another.

The service provider may also utilize a number of content servers to provide information e.g. new weather stock market information to CHUMBY devices . In an exemplary embodiment all content servers function in a pull mode of operation that is CHUMBY device polls the applicable content server for new data on some periodic basis. Each response from a content server preferably contains the schedule and frequency for subsequent polls. For example a content server disposed to provide stock market information can change the polling frequency to reflect whether or not the stock market is open. In other implementations a CHUMBY device may be provided with the capability to change polling frequencies on the basis of for example environmental conditions e.g. ambient room brightness or other factors. One or more of the content servers may be used for serving certain types of content uploaded by users for use on their own or other CHUMBY devices and stored within the system database .

The CHUMBY service provider will typically maintain a small number of load balanced Network Time Protocol NTP servers to provide time to CHUMBY devices . Each such server will be configured to fetch their time from a primary NTP server which fetches time from an upstream external public NTP server. If the primary NTP server is inoperative secondary NTP servers will synchronize with a random selection of upstream servers. If all servers are unavailable a CHUMBY device will either fetch time information from random public NTP servers or simply have its time adjusted via user input. In one embodiment each CHUMBY device requests time upon connecting to the Internet and at jittered intervals thereafter no more frequently than once a day.

Turning now to a database model diagram is provided of an exemplary object oriented database schema utilized by the system database . As shown the schema includes the following tables buddies categories CHUMBY devices parameters profiles skins users widget instance widgets ratings registrations activations movies templates thumbnails. Each rectangular object in is an entity object representation of a table in the database with the primary key denoted with the acronym PK ownership relationships indicated by dashed arrows which originate at the owned entity and terminate at the owning entity and which are keyed by the asterisked column in the owned object and solid arrows indicating a relationship between entities. Although the type of information contained within a number of these tables will be readily apparent to those skilled in the art in view of the discussion herein a simplified example of various steps performed during user registration and the adding of a widget to a profile is provided in order to further illuminate the structure of the database schema .

In one embodiment the user registration and account creation process is initiated by a user through submission via a Web browser of a CHUMBY ID so as to identify a particular CHUMBY device . The act of creating a user account results in the construction of a default profile and one or more widget instances each of which is automatically assigned to the CHUMBY device as identified by its CHUMBY ID currently being registered. When a user adds a widget to the user s profile the user is presented with a list of potential categories based upon information within the categories table. The user then selects a category from the categories table and the user is presented with a list of widgets belonging to the chosen category. After the user chooses a widget a widget instance is constructed and information is entered into the appropriate fields e.g. profile id widget id index . The user is then presented a user interface via the Web browser for editing the widget specific parameters associated with the selected widget. In response to the user s parameter selections records are appropriately updated in the parameters table.

In general it is contemplated that embodiments of the invention will be implemented such that each CHUMBY device will function as a client relative to various servers existing within the CHUMBY service provider . In these embodiments the CHUMBY devices do not engage in direct communication with each other but may do so via independent client sever relationships established with the service provider . In this way the service provider may facilitate the communication of a variety of different types of executable files e.g. widgets or other computer programs audio clips short Flash movies etc. among CHUMBY devices subject to the permission of the content owner and potential recipient. A user may designate that a widget or other content be sent to another user or to the members of a user s buddy list or the like. This designation may be made via a Web browser in communication with the service provider or directly through the interface of the user s CHUMBY device .

In one embodiment executable files may be created by users of CHUMBY devices or other third parties and loaded within the system database after being approved by the entity operating the service provider . Once a widget or other executable file has been created and stored within the system database it is made available for use by all those users of CHUMBY devices that have been granted the requisite permission. Various schemes for granting permissions among and between users are possible. For example one such type of permission could entail that any user X that is given permission by a user Y to send widgets to user Y s CHUMBY device may select any widget for which user X has usage rights and send such widget to user Y s CHUMBY device. Other restrictions could be placed on the transferability of widgets or other files from the service provider to a CHUMBY device at the request of another user. For example a user could be provided with the capability to lock certain widgets on only the user s CHUMBY device or a CHUMBY device could reach a full state and advertise itself as being incapable of receiving any additional widgets.

Although widgets and other executable files could be transferred between the service provider and CHUMBY devices in a number of different formats in one embodiment such transfers will occur in the Flash movie format i.e. as .swf files when not signed or encrypted . In this case the process for downloading widgets from the service provider includes receiving a notification at a CHUMBY device that a new widget is ready for downloading. Since in the exemplary embodiment each CHUMBY device acts in a pull mode each device periodically polls the service provider and inquires as to whether any configuration changes are available to load. In the case in which a new widget is available for downloading the CHUMBY device will generally use standard HTTP or HTTPS protocols in downloading the applicable widget file.

Attention is now directed to which are a series of signal flow diagrams representative of the client server communication protocol established between a CHUMBY device and the CHUMBY service provider . As mentioned above each CHUMBY device functions as a client relative to the CHUMBY service provider . In one embodiment the basic protocol established between each CHUMBY device and the corresponding server entity of the CHUMBY service provider may be characterized as XML using a Representational State Transfer REST architecture transmitted using HTTP. In general the CHUMBY device issues periodic HTTP GET or POST requests and the service provider responds with a block of XML. The CHUMBY device will use HTTP GET for relatively simple requests and POST for more complex requests which will be in encapsulated in XML. Individual data elements are uniquely identified by Global Unique Identifiers GUID . In one embodiment there will be some form of cryptographic key exchange and transactions will be encrypted using those keys. Furthermore XML may be compressed in order to facilitate transfer between the CHUMBY device and the CHUMBY service provider .

Each CHUMBY device will have a unique GUID. In some embodiments time codes will be represented in ISO 8061 format.

Referring to a signal flow diagram illustratively represents one manner in which a CHUMBY configuration is provided to a CHUMBY device by the service provider . In one embodiment each CHUMBY device operates in accordance with a configuration which specifies the profile to be loaded by the CHUMBY device under various conditions. The user specifies the profile for the CHUMBY device via a web interface at the CHUMBY web site. The profile contains several operational parameters for the CHUMBY device .

As shown in the requesting of a configuration is initiated when the CHUMBY device sends an HTTP GET request containing the GUID of the requested configuration to a CHUMBY configuration object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and retrieves the requested configuration from the system database stage . If the requested configuration exists the service provider responds with an XML based configuration if not the service provider responds with an XML based error message stage . An exemplary XML based response generated by the service provider is given below 

Once the response is received by the CHUMBY device it is processed by the Master Controller stage . If an error is instead received it is processed by the Master Controller as well stage .

Referring to a signal flow diagram illustratively represents one manner in which a profile is provided to a CHUMBY device by the service provider . In one embodiment each CHUMBY device operates in accordance with a profile which specifies the set of widgets to be executed by the CHUMBY device under various conditions. This enables a user to specify that a certain subset of the available set of widgets is to be instantiated and utilized during a particular time frame based upon the location of the user s CHUMBY device or the skin or housing within which the CHUMBY device is currently seated. For instance the user may desire that local weather and traffic information be provided while the user is located at home but would prefer that airline flight information be available from the CHUMBY device when the user is traveling.

As shown in the requesting of a profile is initiated when the CHUMBY device sends an HTTP GET request containing the GUID of the requested profile to a profile object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and retrieves the requested profile from the system database stage . If the requested profile exists the service provider responds with an XML based profile if not the service provider responds with an XML based error message stage . An exemplary XML based response generated by the service provider is given below 

Once the response is received by the CHUMBY device it is processed by the Master Controller stage . If an error is instead received it is processed by the Master Controller as well stage .

Each Profile has a name a description a skin and a list of Widget Instances . The Profile will be periodically refetched in order to reflect changes made by the owner for instance adding and removing Widget Instances. The Profile may also contain a buddies of node which contains information about users and profiles that have indicated the owner of the Profile to be a buddy in order to facilitate the sending of widget instances.

The CHUMBY device processes each Widget Instance in turn fetching the settings for each widget and the Widget itself and displays the Widget with the settings encapsulated by the Widget Instance.

A process similar to that described with reference to may be used to change a profile. An example of an HTTP POST containing an the GUID of the profile to modify and an XML based request to change a profile generated by the CHUMBY device is given below 

An exemplary XML based response corresponding to such a request which contains the updated profile could be provided by the service provider as follows 

Turning now to there are shown signal flow diagrams representative of the communication of widget instance information from the CHUMBY device to the service provider and vice versa. In one embodiment the set of parameters associated with a widget instance determine the user specified manner in which the behavior of the widget is modified when executed by a CHUMBY device . That is the parameters fetched by the CHUMBY device from the service provider for a given widget constitute the user s customized settings rather than dynamic content. For example in the case of a stock ticker widget the applicable parameters could comprise the names and symbols of the stocks within the user s portfolios but would not define or relate to the current prices of the stocks which would be furnished by another service supplied by the service provider .

As shown the widget instance change operation is initiated when the CHUMBY device sends an HTTP POST and an XML request to a widget instance object within the system database maintained by the service provider stage . This type of UPLOAD operation informs the service that the parameters of a specific widget instance have been updated by the applicable user. As shown the updated parameters are received by the service provider stage and are attempted to be written to a corresponding widget instance object within the system database stage . If this attempted write operation is unsuccessful stage the service provider responds with an error message that is processed by the requesting CHUMBY device stage . If the write operation is successful the newly updated widget instance are retrieved from the system database stage and sent to the applicable CHUMBY device stage .

Once received the widget instance is processed by the CHUMBY device stage . In general the processing of the parameters contained in a widget instance are dependent upon the characteristics of the particular widget. In certain cases the parameters may be sufficient to enable the widget to display information while other widgets may use the parameters to fetch content from another service. As an example of the former consider a clock widget capable of displaying information following receipt of a parameter indicating a time zone. In contrast a stock widget may have stock symbols as parameters and use such symbols to fetch quote information.

Referring now to there is shown a signal flow diagram illustrating an exemplary widget instance download operation in which the service provider is requested to push values of widget specific parameters to a requesting CHUMBY device . The requesting of a parameter download is initiated when the CHUMBY device sends an HTTP GET containing the GUID of the requested widget instance request to a parameter object within the system database maintained by the service provider stage . An example of such a request in the case of a weather widget is provided below 

The service provider receives the request stage and retrieves the requested parameters from the system database stage . If the requested parameters exist the service provider responds with an XML based widget instance message stage . Using the example of a weather widget which utilizes a zip code to identify the location for which weather is to be retrieved such a message could comprise 

The CHUMBY device uses the GUID in the widget tag to fetch the information about the Widget to be displayed. Once the widget has been started it is passed the name value pairs in the widget parameters section in order to customize the behavior of the widget. The mode tag indicates how long the widget is to be played. A value of default in the mode attribute indicates that the timing will be specified by the widget description an attribute value of timeout will use the duration specified in the time attribute in seconds and the value of cooperative will display the widget until the user explicitly commands it to stop through a UI element or the widget itself indicates that it wishes to discontinue operation. The presence of a received node indicates that the widget instance has been sent by a buddy. The value of the accepted attribute indicates whether or not the widget instance has been accepted by the recipient which is done either through the web interface or through the UI of the device. The forward attribute indicates whether this widget instance can be sent on to another user.

If the requested parameters do not exist a default widget instance is attempted to be retrieved from the system database stage . If such a widget instance exists stage the service provider responds with an XML based parameters message that is processed by the CHUMBY device upon receipt stage . If such a default widget instance does not exist an error message is returned to the CHUMBY device stage .

Referring now to a signal flow diagram is provided which illustratively represents the process of downloading the code for a widget e.g. a .swf file from the service provider for execution on a CHUMBY device . The process is initiated when the CHUMBY device sends an HTTP GET request containing the GUID of the requested widget to a specific widget description object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and attempts to retrieve the requested widget description from the system database or other data source available to the service provider stage . If the requested widget description is able to be retrieved the service provider responds with an XML based widget description message if not the service provider responds with an XML based error message stage . An exemplary XML based response generated by the service provider is given below 

Once the requested widget description is received by the CHUMBY device the CHUMBY device uses the URL referencing the movie for the requested widget to download the movie e.g. .swf file from the service provider . The CHUMBY device sends an HTTP GET request containing the GUID of the requested movie to a specific movie object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and attempts to retrieve the requested movie from the system database or other data source available to the service provider stage . If the requested movie is able to be retrieved the service provider responds with the .swf file which implements the movie if not the service provider responds with an XML based error message stage . Once the requested movie is received by the CHUMBY device it is loaded by the Master Controller and queued for subsequent execution stage . If an error is instead received it is processed accordingly stage .

Referring now to a signal flow diagram is provided which illustratively represents the process of obtaining content from the service provider for a widget of a CHUMBY device . The process is initiated when the CHUMBY device sends an HTTP GET and an optional XML request to a specific content object within the system database maintained by the service provider stage . An example of such a request for content for a tide widget is provided below 

The service provider receives the request stage and attempts to retrieve the requested content from the system database internal content service external content service or other data source available to the service provider stage . If the requested content is able to be retrieved the service provider responds with an XML based content message if not the service provider responds with an XML based error message stage . Once the requested content is received by the CHUMBY device corresponding audiovisual output is generated by the device for the benefit of its user stage . If an error is instead received it is processed accordingly stage . An exemplary XML based response generated by the service provider is given below 

In the case where content is retrieved directly from an external content service provider i.e. from other than the service provider a series of web based transactions most likely HTTP and or XML based defined by such content service provider will take place between the CHUMBY device and such provider.

CHUMBY devices may optionally include a hardware security module which in one implementation is accessed via a character driver interface in the operating system OS of the device . The module may or may not be installed. When the module is not installed the OS preferably virtualizes the hardware security module by emulating it in software. While losing all the tamper resistance benefits of a hardware module this feature enables cost reduction savings while maintaining protocol interoperability with a secured system.

The hardware security module of a CHUMBY device may be implemented in a number of ways. As an example the hardware security module may be implemented using a monolithic security processor or a cryptographic Smart Card module. This module or its emulated counterpart is capable of at a minimum the following operations 1 storage of secret numbers in hardware 2 the ability to compute public key signatures 3 the ability to compute one way cryptographic hashes and 4 the ability to generate trusted random numbers.

During the manufacturing process the hardware security module or its emulated counterpart is initialized with a set of secret numbers that are only known to the module and to the CHUMBY service provider . These secret numbers may or may not consist of public and private keys. If the numbers consist of public and private keys then a mutual key pair is stored by both the CHUMBY service provider and the hardware module along with a putative insecure identifier number for the pair. Furthermore these numbers are preferably not recorded by the CHUMBY service provider in association with any other identifying information such as the MAC address for the WLAN interface or any other serial numbers that are stored in insecure memory for customer service purposes.

When the user or service wishes to initiate a strong authenticated transaction the CHUMBY device sends the putative insecure key pair identifier to the service provider . The service provider looks up the putative insecure key pair identifier and issues a challenge to the hardware module consisting of a random number In particular the challenge is packetized and sent through the Internet to the CHUMBY device . The device unpacks the challenge and passes it directly to the hardware module. The hardware module adds another random number to the packet and signs the pair of numbers along with other transaction information such as the version number of the protocol with a private key that is only known to the CHUMBY cryptoprocessor. In addition an owner key may optionally be encrypted to the server public key. Again this message is packetized and transmitted by the device to the service provider over the Internet. Upon receipt the service provider verifies the signature of the packet using the device s public key which was generated and recorded at the time of manufacture and indexed by the hash of the putative insecure key pair identifier. The CHUMBY device is deemed authentic if the signature is correct and the signed packet contains the exact random number that was generated by the service provider in the first step of the challenge. The service provide also decrypts the owner key whose purpose is discussed in the next paragraph. At the conclusion of this transaction the service provider has authenticated the device and can fall back to any number of session keys that can be either dynamically generated or statically stored for further secured transactions. Advantageously this authentication transaction does not involve uniquely associating the hardware module with user information. Rather the service provider is simply aware of the existence of the approved hardware module and upon completion of the authentication transaction may safely trust the integrity of the secrets stored therein.

The owner key comprises a random number or one of a set of random numbers generated at the time of manufacture and stored only within the cryptographic processor. The owner key is transmitted to the server encrypted using the server public key and used as a shared secret to protect any other secrets user passwords credit card information etc. that may be stored on the server. Once a user decides they no longer wish to continue with the service or desire to sell or transfer their CHUMBY device or otherwise wish to revoke any secrets entrusted to the server the user can instruct the cryptographic processor to delete the key from memory thereby abolishing the server s ability to decrypt the secrets entrusted to it.

A user of the device may opt out of privacy mode and provide identifying information as required by some billing services such as credit cards and banks. Optionally an anonymous cash based transaction network can be established where accounts are opened and managed only by secrets contained within the hardware module.

To enable limited revocation of user identifying information the specific embodiment of the master authentication protocol should operate on a set of clean room servers with a multiplicity of connections that are trusted by the CHUMBY service provider and authenticated session keys are then passed on laterally to the content servers. Thus the anonymity of the master authentication key is nominally preserved although it is possible to recreate and correlate transactions from forensic logs and transaction timings. The use of multiple servers and multiple connections along with network routing randomization techniques can be used to increase the anonymization resistance to forensic logging cf. Tor network but this configuration is in no way essential to the network s operation.

Attention is now directed to which are a set of flowcharts representative of the calibration registration and initial operation of a CHUMBY device and associated account management functions.

In one embodiment a CHUMBY device downloads configuration information from the service provider each time it is powered on or otherwise re establishes communication with the service provider . However a minimal amount of widget and configuration information may be locally stored on a CHUMBY device so that it may continue to function in the absence of network connectivity. For example a clock widget may be permanently stored on a CHUMBY device so that its clock function could remain operational at all times. A CHUMBY device will typically include sufficient memory capacity to hold configuration information received from the service provider for all of the widgets to be executed by the device up to some reasonable number of widgets. If a user changes the configuration for a CHUMBY device through the Web site maintained by the service provider a polling function implemented on the corresponding CHUMBY device will typically be used to pull the modified configuration information from the service provider . Alternatively an operation may be manually initiated via the interface of the corresponding CHUMBY device in order to obtain this information e.g. an Update My CHUMBY Device Now operation .

Attention is now directed to which are a set of flowcharts representative of Web based widget selection removal and configuration processes contemplated by embodiments of the present invention. Screen shots of exemplary user interfaces presented by the Web browser or alternatively the screen of the applicable CHUMBY personal audiovisual device which are used to facilitate certain of these processes are illustrated in .

Turning now to a top level flowchart is provided of exemplary Web based interaction occurring between a device user and the service provider with regard to adding removing and configuring widget profiles relative to the user s CHUMBY device. Alternatively this interaction between a device user and the service provider may be effected through user interface screens presented by the user s CHUMBY device in lieu of the Web browser . Although a user may have the impression that a CHUMBY device itself is being configured through the process of in the exemplary embodiment a profile currently assigned to the user s CHUMBY device is instead configured.

As shown in the user logs in to the user s account maintained with the service provider via a Web browser stage and proceeds to the user s home page or the equivalent stage . From this home page the user selects a Set Up device tab or the like stage and the Web browser presents a corresponding Set Up page stage . The user then selects the CHUMBY device profile to be configured from a list based upon either the device s serial number or description stage . The current configuration for the selected device profile is then retrieved from the system database and loaded into the device stage . Once this has occurred the user selects an action to be performed as is illustrated by stage . Such actions may include for example adding deleting or editing widget profiles. If the user opts to add widget profiles stage then the Web browser displays an Add Widgets Page through which widget profiles may be added to the current configuration of the applicable CHUMBY device in the manner described below with reference to stage . If the user instead chooses to delete widget profiles from such current configuration stage then a Delete Widgets Page is presented through which the deletion operation may be completed consistent with the approach described below with reference to stage . Alternatively the user may select another CHUMBY device profile to configure stage or simply exit and return to the user s home page stage .

Turning now to an alternate top level flowchart is provided of exemplary Web based interaction occurring between a device user and the service provider with regard to adding removing and configuring widget profiles relative to the user s CHUMBY device. Although a user may have the impression that a CHUMBY device itself is being configured through the process of in the exemplary embodiment a profile currently assigned to the user s CHUMBY device is instead configured.

As shown in the user logs in to the user s account maintained with the service provider via a Web browser stage and proceeds to the user s MY CHUMBY page or the equivalent as is illustrated by stage . From this MY CHUMBY page the user optionally selects the CHUMBY device to be configured from a list or the like as is illustrated by stage and the Web browser loads the currently configured widget channel into the current page stage . The user then optionally selects the CHUMBY widget channel to be configured from a list or the like as is illustrated by stage . The current channel configuration for the selected CHUMBY device is then updated in the system database loaded into the current page stage and loaded by the currently selected CHUMBY device stage . At any point the user may select the Edit Channel option stage following which a Edit Channel Page is presented as is illustrated by stage with the widget configuration for the selected channel is loaded into the page stage . Once this has occurred the user may select an action to be performed stage . Such actions may include for example changing renaming deleting or creating new widget channels adding widgets to removing widgets from changing playback order of widgets within or configuring widgets within the selected channel. If the user opts to perform a widget action stage then the widget instance for the affected widget and or the configuration for the selected channel within the system database are updated which subsequently effects a corresponding update to the local copy of the channel configuration of all CHUMBY devices currently playing the selected channel stage . If the user opts to perform a channel action stage then the configuration for the selected channel within the system database is updated which subsequently effects a corresponding update to the local copy of the channel configuration of all CHUMBY devices currently playing the selected channel stage . Alternatively the user may select another channel to configure stage or navigate to another page stages .

If the user decides to exit the process of adding widgets to the current configuration the user may perform one of several actions including but not limited to select another CHUMBY device to configure navigate to another page on the CHUMBY site log out from the CHUMBY site or close the applicable browser window stage . If the user instead chooses to save the current widget configuration for the applicable CHUMBY device stage the user selects a Submit Commit Ok or similar button to cause any changes made to be recorded in the system database stage . After either saving the current widget configuration or electing to exit the process the user may be directed to a predefined page stage .

If the user decides to exit the process of adding widgets to the current configuration the user may perform one of several actions including but not limited to select another channel to configure as is illustrated by navigate to another page on the CHUMBY site stage log out from the CHUMBY site or close the applicable browser window.

Referring now to a flowchart is provided which is representative of exemplary Web based interaction occurring between a device user and the service provider in connection with the removal of widgets from the current configuration of the user s CHUMBY device. Alternatively this interaction between a device user and the service provider may be effected through user interface screens presented by the user s CHUMBY device in lieu of the Web browser . Upon being presented with the EDIT CHANNEL Page as is illustrated by stage the user may elect to either de activate a selected widget stage delete or remove a selected widget stage or select some other widget channel and or page navigation operation stage . If widget de activation is chosen the user is prompted to confirm the choice stage . Once such confirmation has been provided the widget is marked as inactive on the page currently being rendered by the Web browser stage . In addition the widget instance configuration for the selected channel is updated within the system database stage and any CHUMBY devices currently displaying the selected channel are updated. Similarly if it is instead chosen to delete the selected widget the user is optionally prompted to confirm the choice stage . Once the widget is deleted or after optionally required confirmation has been provided the widget is removed from the page currently being rendered by the Web browser stage the widget instance is deleted from the channel configuration in the system database stage and any CHUMBY devices currently displaying the selected channel are updated. If confirmation to de activate or delete the selected widget is required but not provided stages and the operation is aborted.

Referring now to an alternate flowchart is provided which is representative of exemplary interaction occurring via the CHUMBY device of a user between such user and the service provider in connection with the removal of widgets from the current configuration of the user s CHUMBY device. With a widget displayed on the screen of the CHUMBY device stage the user performs the gesture which selects the Control Panel stage . Upon being presented with the Control Panel as is illustrated by stage which displays the avatar for the current widget stage the user may optionally use the widget navigation controls to singly or iteratively select a new current widget stage in which case the new current widget is loaded stage and its avatar displayed stage . The user may then elect to delete or remove the current widget by selecting DELETE stage . If widget deletion is chosen the user is prompted to confirm the choice as is illustrated by stage . If the user confirms the deletion stage the widget instance is deleted from the channel on the CHUMBY device and the widget instance is deleted from the channel configuration in the system database stage . If confirmation is not provided the operation is aborted. At this point the delete confirmation screen is exited stage and the Control Panel is displayed. The user has the option to select HIDE CONTROL PANEL stage which exits the control panel and resumes normal widget play.

In an exemplary embodiment the service provider populates a corresponding widget and parameters tables within the system database in accordance with the user s parameter selections. In this regard the widget table may include an XML based param desc xml field containing instructions enabling the construction of associated records in parameters table. For example for a clock widget the XML based instructions could indicate that a time zone should be a valid parameter and could also be utilized to create appropriate records in the parameters table.

Users of CHUMBY devices may be provided with an interface to allow to facilitate sending electronic greeting cards in the form of rich Flash animations. Upon visiting a predefined web site e.g. http greetings.chumby.com and optionally being authenticated by presenting appropriate credentials a user will be presented with a catalog of CHUMBY Greetings . In one embodiment access to certain CHUMBY Greetings may be dependent on membership status. Any authenticated user irrespective of the number of registered CHUMBY devices will have the permission to send CHUMBY Greetings to one or more arbitrary email addresses or alternatively one or more users registered with the CHUMBY network. If a visitor to the web site is aware of the globally and temporally unique email address of an existing CHUMBY device the account name in which the CHUMBY device is registered or other means of identifying individual CHUMBY devices they may specify CHUMBY Greetings to be forwarded directly to such a device using the existing widget transfer infrastructure of the service provider . Upon receipt at the CHUMBY device the transferred CHUMBY Greetings will be added to the channel or profile in which the recipient has designated for receipt of widgets or other delivered content. Once the widget has been delivered to a channel or profile the recipient will have the option of accepting or rejecting the delivered content. In the event that a user accepts the CHUMBY the CHUMBY Greeting will be added to the recipient s widget slideshow rotation in accordance with the applicable profile of the device. In one example a visitor to the web site may choose to assign a certain level of priority to a CHUMBY Greeting such that it may be displayed by the recipient CHUMBY device immediately following actuation of the device s alarm function. Alternatively a priority assigned to a CHUMBY Greeting may define the placement of the CHUMBY Greeting in the recipient s widget rotation.

CHUMBY Greetings sent to email addresses that are not bound to physical CHUMBY devices will be forwarded as an SMTP email message. This message will originate from for example greetings chumby.com or a user supplied email address and will contain a URL or hyperlink pointing to a temporary web page hosting the Flash movie comprising the CHUMBY Greeting in addition to an optional user defined message. Authenticated users will have the ability to select one or more peers from their CHUMBY Buddy List as recipients of a preconfigured CHUMBY Greeting. In one embodiment of CHUMBY Greetings a subscription may be required for access to certain features such as CHUMBY Greetings. In such an embodiment users subscribing to the CHUMBY Network will have access to premium CHUMBY Greetings. In one embodiment CHUMBY may wish to elect a pay per view model where the use of a premium CHUMBY Greetings may be charged as a micro transaction. In one embodiment CHUMBY Greeting recipients that are not bound to physical CHUMBY devices will be presented with an option to forward the CHUMBY Greeting to alternate email addresses or physical CHUMBY devices.

In certain embodiments profiles pertinent to various specialty interests or activities e.g. sports cooking may be developed and maintained by the service provider or other users of CHUMBY devices. Each such profile or channel could be subscribed to by interested users of CHUMBY devices. This may be considered a special case of mirroring to a virtual CHUMBY device as described above but would further involve effort on the part of the owners of each channel to keep its widget set and other content updated. Channels could somewhat broadly focus upon a particular subject e.g. recipes football or could be more specific in nature e.g. vegetarian recipes NFL football .

The CHUMBY enabled client devices may typically be configured either through a user computer not shown disposed for communication with the service provider or directly through the user interfaces of such client devices. When a user computer is utilized a user may configured one or more CHUMBY enabled client devices through interaction with a Web browser displaying pages generated by the central service provider. As mentioned above such configuration may include for example specifying a set of widgets i.e. small Flash based applications which present content media services and the like to the user via a CHUMBY enabled client device to be sent to a particular CHUMBY enabled client device and their sequence of execution. Such configuration may further include adjusting audio or visual parameters relating to such execution defining and managing a user s CHUMBY network and defining the layout or other aspects of the user interface presented through the screen of the CHUMBY enabled client device.

In one embodiment each CHUMBY enabled client device includes an Open Source software stack built on a Linux core. Services and utilities such as btplay httpd zeroconf and DLNA plug into the Linux core. Adobe Flash Lite 3.x is used as the presentation and content media rendering layer enabling the chumby network and CHUMBY widgets to provide a flexible adaptable rich media experience to users or CHUMBY enabled client devices. With the exception of the Adobe Flash component in one embodiment the entire CHUMBY enabled client software stack is Open Source. In one embodiment user interface and widget player of each CHUMBY enabled client device are written entirely in Adobe Flash. This enables the appearance of the user interface elements to be easily adapted to various screen sizes orientations and device types.

Due to the open nature of the CHUMBY client software it is easily ported to a broad variety of architectures and devices. In one embodiment a client device requires only a compatible version of Flash and an IP based connection to the Internet to be capable of being configured to operate as a CHUMBY enabled client device. Although in certain implementations it is preferred that a CHUMBY enabled client device include a Linux operating system this is not requirement and it is possible to port the CHUMBY client software to any number of device operating systems including for example variants of Microsoft Windows.

During operation of a CHUMBY enabled client device software comprising widgets or other applications is received from the central service provider is stored within memory for execution by the processor of the device. In one embodiment widgets are downloaded from the service provider to CHUMBY devices in the format of a Flash Lite file also referred to as a Flash movie . The memory of the device also includes a Flash Player for playing the widgets received by the device.

Referring to in one embodiment the CHUMBY cloud services are delivered through a web based application the CHUMBY network application that runs on redundant load balanced Linux based Sun servers. The data layer may be implemented on a MySQL cluster and the application presentation and services layers may be implemented in Ruby on Rails.

As is described hereinafter the CHUMBY network may be configured to provide at least the following services.

1. A user facing web site at for example www.chumby.com which provides an intuitive easy to use interface for CHUMBY users to activate manage and configure all of their CHUMBY enabled client devices manage and configure their CHUMBY widgets and channels playlists of widgets and manage their CHUMBY social network of friends and family chums . The CHUMBY web site may also supports the open platform developer community through developer mini sites for widget software and hardware development.

2. An XML based web services API which the supports the activation management configuration operation of and widget delivery to all CHUMBY enabled client devices. All CHUMBY enabled client devices activated on the CHUMBY network preferably retrieve their configurations and widgets via the CHUMBY network. Software updates for CHUMBY enabled client devices are also managed via the CHUMBY network. When a new update is available for a user s CHUMBY enabled client device the user is notified and given the option to install the update automatically.

The CHUMBY network provides a one stop service for users to activate and manage all of their CHUMBY enabled client devices. Each device is preferably uniquely identified and bound to a single user s CHUMBY account. A user can activate and manage any number of CHUMBY enabled client devices against a single account or across multiple accounts but a device can generally only be active in one account at a given time . This advantageously permits a user to easily get a newly acquired CHUMBY enabled client devices up on the CHUMBY network running the same widgets as are being executed by the user s existing CHUMBY enabled client devices. No new account creation widget configuration or learning curve is required.

Because in exemplary embodiments CHUMBY enabled client devices are connected to the Internet and widgets are written in Flash users of CHUMBY enabled client devices may have access to virtually every type of content available on the Internet. Below are various examples of the type of media content and services potentially available to CHUMBY enabled client devices via the CHUMBY network 

Widgets for desired content or services can be quickly developed and deployed via the open CHUMBY network. CHUMBY enabled client devices support interactivity so users can not only watch or listen to content but engage in a variety of other activities. Such activities of a user could include for example i interacting with the widgets executed by the user s CHUMBY enabled client device and related content services delivered therethrough ii sending widgets via the CHUMBY network to their chums iii replying to their friend requests iv bidding on their auctions v changing the widget channel they are watching v engaging in a game with another CHUMBY user.

The CHUMBY network also advantageously facilitates various forms of advertising. As is known many advertisements delivered via the Internet today have already been developed in Flash. Since CHUMBY widgets may also be implemented in Flash it is apparent that CHUMBY widgets may easily interface with new or existing ad servers and services to deliver advertisements in widgets or advertisements that are widgets via the CHUMBY network. These advertisements may include images video audio or mixed media and or requests for interaction such as touch here for more information send me email with details or a coupon offer code or buy now Advertisements could take the form of interactive games delivered through CHUMBY widgets.

Advertisements may also be targeted to CHUMBY users devices based on anonymized demographic information age gender zip code education level and psychographic data widgets played content viewed music listened to day part usage etc to create a highly effective campaign.

Turning now to there is shown a screen shot of an exemplary user interface presented by a CHUMBY enabled client device. As is indicated by user selection of a Widgets screen button in a left pane of the user interface results in display of a Widget Categories view in a right pane of the user interface. Similar forms of user interface screens may be presented by CHUMBY enabled client devices to support settings and configurations options for widgets streaming audio and other configurable selections. Alternatively hard or soft key buttons on CHUMBY enabled client devices may be utilized to select such setting and configuration options.

A CHUMBY widget is generally configurable in a manner specified by the widget author s . Certain widgets will require a user to enter configuration information such as postal code news type sports business world etc account information or stock ticker symbols before displaying meaningful information. Other widgets may display default information in the absence of configuration or may not require any configuration whatsoever.

In one embodiment CHUMBY widgets are characterized with respect to a range of hardware characteristics supported or required in connection with the execution of such widgets. Such characteristics will typically be made visible in the various widget catalogs which a user may access via the CHUMBY web site in connection with selecting widgets for playing on the user s CHUMBY enabled client device. A more complete discussion of an exemplary process for characterization selection and deployment of widgets suitable for various types of CHUMBY enabled client devices is set forth in Appendix A.

If a CHUMBY widget allows to user to select from one or more information feeds then the user will have the option to do so. Numerous widgets may be developed which enable access to feeds for weather news sports comedy entertainment video and audio content. The user may select to play any or all of these feeds at any time and in any order.

It is a feature of typical embodiments of the invention that CHUMBY enabled client devices are not required to display a home page or similar operational or start up page. The author of a CHUMBY widget determines the way in which the content is to be presented to the user upon being rendered by a CHUMBY enabled client device. Such content can be text and simple images video audio or some other combination of the above. In various embodiments the user interface of a CHUMBY enabled client device can simultaneously display any number of active widgets subject only to screen size and resolution constraints.

CHUMBY widgets can be configured to update from feeds or any other data source API or web services interface at any desired interval. In one embodiment a user may nonetheless select to play one or more widgets at any time and the selected widget s will play immediately.

In general CHUMBY enabled client devices are typically configured to deliver content and media through the use of widgets. However this is not a requirement and for example services such as streaming audio may be delivered via a discrete audio subsystem enabling a user to play music and other audio while widgets are also playing . In exemplary embodiments widgets comprise individual Flash based applications capable of retrieving content and media from services and interfaces on the CHUMBY network. Such content and media may in the form of text e.g. RSS feeds images photos animations streaming video information from commercial Web sites e.g. eBay auctions or information from social networks. In exemplary embodiments widgets can be built to serve up essentially any type of media or content or service desired. New widgets are immediately available to users on the CHUMBY network when published and updates to existing widgets propagate to the users who are using them within a matter of minutes. This framework provides a network operator with the ability to provide a constantly evolving and improving set of applications and services to users CHUMBY enabled client devices.

Turning now to there is shown a front view of a CHUMBY enabled device in the form of a digital photo frame hereinafter a ChumbyFrame configured for insertion within a companion docking device. provides an additional views of such a docking device provides a rear view of a radio docking device and another view of a docking device into which a ChumbyFrame has been inserted.

In an exemplary embodiment a ChumbyFrame includes internal media storage capacity and hardware and software capable of enabling a variety of features and functionality including 

Additional details of example hardware and associated software and processes for implementing the above as well as other functionality are further described below.

Attention is now directed to which illustrates details of a system including an exemplary embodiment of the present invention as a digital photo frame device which may for example be a CHUMBY personal audiovisual device . It is noted that device is shown as a digital picture or photo frame such as may be implemented as shown in however other implementations such as in cellular phones PDAs or other mobile devices televisions set top boxes and or other similar or equivalent electronic devices configured to render media content.

As shown in device is typically configured with one or more processors which are coupled to a memory which may comprise one or more physical memory devices. Memory may include memory devices such as DRAM FLASH SRAM EEPROM or other memory devices as are known or developed in the art. In some embodiments memory may include physical memory stored in the device as well as the capability of the device to incorporate external or portable memory via an external memory interface such as by using Compact Flash Secure Digital Memory Stick USB or other portable memory devices. This may be done via a plug in slot or port on device such as is shown in and or via a USB port or other memory compatible connector.

Device also includes a display which may be an LCD display element or other visual display such as for example is shown in . The display may be coupled to and or incorporated with user interface which may be configured to allow a user to input information to the device via keys pads touchscreen buttons mice or via other input elements. The user interface may be used in conjunction with display to allow the device to receive input as well as display visual output.

In addition device may include an audio element which may allow for rendering of audible output such as voice music text to speech and or other audio content. Additional peripherals may include a microphone for receiving input and or other peripherals as are know or developed in the art.

In addition device may include a network interface . Interface may be used to couple device to one or more networks via wired or wireless connections. Interface typically facilitates Internet connectivity to communicate with server system to receive and send widgets and content. This may be done via Ethernet USB Firewire WiFi WiMax Cellular LTE or other networking technologies and interfaces.

In a typical system a plurality of devices are coupled to network which further provides connectivity to a Content and Widget Server System . This system may be part of a Chumby system as described previously herein. Widget system may be configured to store and widgets as described previously herein and may be further configured to provide the widgets to devices associated with a plurality of users. Widget provision may be based on requests received from a user of a first of the plurality of devices and or may be provided to a second user or additional users via associated devices at the request of the first user. In typical embodiments of a system consistent with the present invention users of device may be enabled to share content such as media files audio video etc as well as photos audio clips and or other media content.

Content and widget provisioning and sharing may be facilitated by system which may be Chumby system as described previously herein. In addition system may be configured to interface with users via a standard web interface such as a web browser provided on a computer . This may be used to support user selection and provision of widgets and or other content.

In a typical implementation of device memory may be configured with computer code for execution on the processor to implement control as well as other functionality. This functionality may be provided in the form of modules as shown in . In this example memory which may comprise one or more physical memory spaces. These modules may include a widget player module configured to play or render widgets and associated content such as audio files photos video and or other content. In one example the widgets and or associated content may be in form of Adobe Flash code modules however other formats may also be used.

In addition a widget manager module may be included in a control panel module. Additional modules may include a utilities layer a device operating system which may in one example be based on Linux. Memory may also include spaces for storage of widgets and may also include other functional modules for implementing utility programs or other applications. A data media storage space may also be included in memory for storage of content to be rendered on device such as digital photos audio files MP3 AAC WAV etc. video files text files and or other content.

Utilities layer may be configured to receive store and provide a plurality of client software modules accessible to the widget player module . The client software modules may include one or more modules to provide a client runtime environment facilitating operation of the widget player.

Processor is coupled to memory . This may be a direct connection to memory and or may also include coupling via other electronic components in device .

In typical implementations widgets are received at device via network interface from the Internet and stored in the memory . Upon receipt a subset of the instances of the plurality of widget programs may be temporarily stored within the memory with additional widget programs subsequently received from over the network and also temporarily stored within the memory.

In a typical implementation one or more of the widgets programs are configured so as to manage media content stored in the device s memory. This may be used to allow for the same widget program to execute different content on different user s devices and or on different devices associated with a single user.

The widget player of device may be configured to provide services furnished by one or more of a plurality of client software modules during execution of the widget programs and the client software modules may be configured to provide a client runtime environment facilitating operation of the widget player.

As noted previously the widget programs may be in the form of Adobe Flash code. In a typical embodiment the widgets may be provided in the form of Flash Lite movies and one or more of the client software modules may be a Flash Lite player.

In typical implementations one of the widget programs is an Internet radio application with an associated client software module configured as an audio streaming utility disposed to stream audio content to device .

In addition to digital picture or photo frame embodiments other embodiments may be in the form of a television or television plug in module or set top box a game console a cell phone a PDA a network or a portable computing device.

Memory may include or comprise in part a computer program product which may be a computer readable medium. An example of this is shown as medium B of . Medium B include multiple modules to perform functionality as previously described.

Attention is now directed to which illustrates an example process for providing widgets to a device from a server such as in server system . Process may begin at stage where a plurality of widgets may be stored in a database in server system . In addition information may be received at system from one or more devices at stage . This information may come directly from the device and or may be provided by a proxy or other device such as a computer associated with the device user.

At stage a display may be provided to a user showing a selection of widgets compatible with the device characteristics. These device characteristics may vary in different forms of devices and therefore server system may evaluate the particular device s activated characteristics and provide a list or display of appropriate widgets. Device characteristics typically include information about the device s hardware capabilities such as processor speed network connectivity memory capacity peripherals audio and or video rendering capability display sizes as well as other device hardware characteristics. The device characteristics may also include device software characteristics such as operating systems used available application programs networking and or other software characteristics. The device characteristics may also include connectivity characteristics such as information regarding the available bandwidth of the device s network connectivity.

The widget compatibility may then be provided to a user via a different interface such as via a web interface provided on a web browser of a user s computer . This may be done in the form of a display or list of compatible widgets. A typical example of widget selections are shown on the web page of Chumby Industries at www.chumby.com which can be accessed from any computer web browser.

The user may then make a selection of one or more widgets to be provided to the user s device and the selected widgets may then be provided to the device at stage . The user s device may then render the one or more widgets at stage . Widget rendering may be done as described previously herein.

Attention is now directed to which illustrates a process A that may be used to render a set of widgets on a device such as device . At stage a show widget which references a plurality of items associated with media content may be defined. A sequence of widgets comprising a channel may then be defined with the show widget being included in sequence of widgets comprising the channel. The sequence of widgets may then be executed in conjunction with the user interface with the media content being rendered upon execution of the show widget. In one implementation one or more of the plurality of items is a digital photo album with the photos stored in a memory of the device such as memory .

In one implementation a first photo album of digital photos may be stored in the memory of the device and a second album may be stored remotely such as on server system or on another site such as online photo sites Photobucket or Flicker.

Alternately and or in addition media content items may be video content in the form of video files audio content or other types of content. These may be stored locally or remotely. Remotely stored content may be Internet accessible photo audio and or video content such as may be available on web sites such as Facebook YouTube MySpace or other online sites configured to store media content.

Modules for implementing various versions of process A may be stored on a medium such as medium B as shown in .

Attention is now directed to which illustrates one method of user operation of an electronic device such as a picture frame device to provide local and remotely stored content such as photos stored in a plurality of digital photo albums. At stage a user may define a first album of first digital media content that is stored within a local memory of device . At stage a user may define a second album of content that is accessible from a remote server system such as from system or another remote server system . At stage a show widget may be defined or selected with the show widget including or referencing the first album and said second album and or the associated content. The show widget may then be executed with the user interface of device rendering the first digital media content and the second digital media content. As noted previously memory may include memory stored in device as well as memory in the form of an external memory card or other plug in memory device. In some implementations the local memory stored media content may be stored on the memory card or other memory device. Alternately or in addition other locally accessible memory such as memory accessible via a local area network LAN or other local network may store the digital media content.

In various implementations multiple sets of widgets may be provided to device in the form of different channels such as is described previously herein. In one implementation a user may device an album widget including media content stored in the local memory and an additional album widget associated with remotely accessible content. These widgets may be included in a plurality of channels provided to the device .

Attention is now directed to which illustrates a process for associating widgets with albums. At stage a first album widget may be defined in response to a user input where the user input may be received through a user interface of the portable electronic device. The first album widget may include and or may be associated with a first set of digital media content stored within a local memory of the device. The local memory may be internal to the device and or may be in a removable device such as a compact flash or other type of memory card. At stage a second album widget may be defined and associated with a second set of digital media content located remotely from the device. The content may be accessible from a remote server. At stage the first album widget may be added to a first channel where the first channel includes a sequence of widgets executable by the device. At stage the second album widget may be added to a second channel with the second channel including a second sequence of widgets. Widgets included in one or both of these channels may then be executed on the device.

In rendering the widgets on the device widgets included in one or both of the channels may reference for playback audio files images or photos video files or combinations of these. This content may be stored either on the device or referenced to an external storage such as an external website server or database.

In another embodiment a service provider and associated system may be used to provide widget and or content sharing functionality. This may be done by a first user sending a request to the service provider to send media and or widgets to a second user such as a chum.

In one example the content may be in the form of a slideshow with the photos stored on the server and the slideshow rendered on the second user s device in response the first user s transmission of a request to send the content. One or more digital photos may be selected for playback and these may be selected from a digital photo library on the second user s device and or on the server. A user interface may be provided on the service provider s site to allow the first user and or the second user to select photos for rendering. This may use a drag and drop interface to facilitate fast selection of photos for rendering.

In another embodiment a first user may be allowed to send an invitation to a second user such as a chum to receive content. An example embodiment of a process B to implement this is shown in . At stage the service provider receives an invitation from a first user to establish an association with a second user such as a chum. At stage an invitation is sent to a device associated with the second user. If the second user chooses to accept he may send an acceptance which is received at stage . After receipt the service provider may then send a widget to facilitate connection to the second user. The widget may be generated in response to information provided by the first system user to the one of the plurality of personal electronic devices where the device is capable of executing the instance of the widget.

The first user may also be provided with an interface to facilitate sending digital media content to the second user and the digital media content may be uploaded to the service provider such as at a web site of the service provider. This may be done as was described previously with respect to .

The service provider will typically allow invitations to be provided to multiple other user s associated with the first user and in some cases transmission of invitations may be automated based on for example contact information address books or other information provided from the first user. The service provider may also provide an interface to allow display of a profile or other information associated with the first user as well as other users. The profile may include information associated with widgets that are available from different users. This may be based on an associative relationship established between multiple users. Profile information may also facilitate a display of widgets and or associated content that are capable of being rendered on particular user s device or devices.

Various examples and additional details of embodiments of an electronic device such as a CHUMBY device are further described below in conjunction with associated drawing figures.

Attention is now directed to which provides a block diagrammatic representation of the principal electronic hardware components of an embodiment of a ChumbyFrame device of the present invention. As shown the device includes a central processing unit e.g. an ARM9 processor memory including volatile e.g. SDRAM and non volatile memory e.g. Flash memory 802.11b g network connectivity 8 LCD touch screen USB hub and media card interface ports stereo speakers headphone out and microphone.

Turning now to there is illustrated an exemplary welcome screen rendered by a ChumbyFrame device following the completion of a boot sequence of the device. Screen illustrates example widgets shown by icons that a user may select.

Chums Network Chums forms the foundation for sharing via a ChumbyFrame device and provides the following the destination for drag n drop sharing of personal photos personal video and widgets the interface for a user to invite others to be their chum The interface to accept invites the interface to configure a user s personal chum profile.

My Chums Options List of user s chums Name Invitations Invite someone to be a Chum Invite people who have accounts in network Search profiles Username Last name Invite by username last name email.

Requester must have account and be logged in. Invite with email address might be out of network . Import email addresses from Webmail accounts. Enter email address. Email will contain link to take them to site where they can log in or create an account. When they log in they will be taken to an accept invite area. What about reminders Been deleted Not been deleted.

Possible responses Accept Accepting an invitation makes relationship bidirectional Ignore Deny with or without notification deny always deletes from receivers list.

View status of sent invitations Accepted status Option to Delete from history There should be the ability to cancel a chum relationship

My Configuration Set Policy for my profile. Who can view What is visible to searches What they can view as a result of a search parental settings.

Availability for interactive sessions chat voice videoOptions for a Selected chum View selected chums profile View names of received widgets from selected chum

Sending Widgets Sending process to a chum. Widgets from a channel or catalog slideshows and collections of photos can be sent. Photos and videos are uploaded to designated upload site when the widget is sent. The widget points to the media on the photo sharing site. A collection of photos are automatically made into a slideshow widget when sending. So you can drag n drop a collection of photos on a chum . Users will be requested to input a name or provided the option to rename. Messages can be created and attached when sending a widget that will be displayed when the widget is played

Sending process to an email address Slideshows and collections of photos can be sent to an email address. Widgets can only be sent to chums. Photos and videos are uploaded to designated upload site. An email is sent with the link to the photos embedded in the email. Email will contain some chumby promotional content and a link to chumby.com to register but the recipient will not be required to be a registered on the network to view. Over time the promotional material can get more dynamic and targeted. The created message will be embedded in the email.

Drag n Drop rules Dropping on Chums menu System prompts for target Email address or chum s name For collection of photos Prompt for widget name. For widgets or slideshows provide rename option.

Option to attach a message drop on specific chum For collection of photos Prompt for widget name for widgets or slideshows provide rename option Option to attach a message. User should be required to have a chumby account to view photos. When a widget is created to be sent it will be listed in the sent area for a chum but the widget will not be accessible by the sender. It must be clear to sender that it will not be. Messages attached to a sent widget are embedded in widget and displayed by widget

Sharing and Chum Event Notification Key events Receipt of invitation request Receipt of widget when it automatically appears in channel Receipt of widget when it is waiting acceptance New photos are waiting from photosharing site.

Notification process Icon is displayed in play window to indicate that there are pending events requiring a response. On entering control panel the status window will contain the status information and the appropriate navigation to process the events will be highlighted like channels is highlighted today indicating that there are widgets awaiting acceptance .

Examples of Creating Widgets from local Photos and Videos A collection of local photos and videos can be sent to a chum as a slideshow widget. The Photos Video may be sent by dragging and dropping a collection of photos videos onto the chum category or a specific chum. When dropped the collection is made into a slideshow widget and sent to the destination chum s . A CHUMBYframe may provide the capability to have a widget that views local photos as part of a user channel. For example when a collection of local photos and or videos are drag n dropped onto a channel a local slideshow widget is put in the channel that will point to the collection. The photos are typically not moved for local slideshow widgets and local slideshow widgets are typically only usable on the device where the photos are resident. When sent the local slideshow widgets may follow the same rules as sending a collection of local photos.

User of Local Slideshow Widgets Local slideshow widgets show widgets may be created when a user drags n drops a local collection of media onto a channel. The widget will reference local content. User will have access to the following local slideshow widgets from the chumby catalog.

Use of Internal Memory ALL photos when played the Internal Memory ALL photos widget may displays photos from the ALL internal album using the default playing effects. If there are no photos in the internal memory the widget will display a quick message saying No Photos in internal memory. 

Inserted Memory Card ALL photos when played the Inserted Memory Card ALL photos widget will play any photos that are contained on an inserted memory card using the default playing effects. The widget may be configured to be tolerant of changing cards removing cards in the middle no card being inserted. If there are no photos in the inserted memory card the widget will display a quick message saying No Photos in internal memory If multiple devices are inserted the user will be asked to define which device to use.

Use of PC on a LAN ALL photos When played the PC on a LAN ALL photos widget may play any photos that are contained on a discovered networked PC using the default playing effects. If multiple connected PCs are detected the widget will ask for the name of the PC to use. The widget will ask the user to go to a PC and approve the connection if PCs are not enabled. The widget may be configured to be fault tolerant of connection problems and display for example No photos available . A Best of chumby section may be provided to contain the Internal Memory ALL photos and the Inserted Memory Card ALL photos widget out of the box. If users plays Best of Chumby they will get their photos intermixed with chumby content.

Sending Photos Video as a Slideshow Widget Photos Video may be sent to a chum as a slideshow widget by dragging and dropping a collection of photos videos onto the chum category or a specific chum. When dropped on the chum category the user will be presented a modal dialogue that asks to select the destination chum s . When dropped on a specific chum the collection will be sent to the specific chum. When the collection of photos and or video is located on the client the sent slideshow widget will reference the specific photos. If a selected group of photos is sent the widget will reference the specific photos that are selected. If an album or a favorite is sent the widget will reference the specific contents of the album when the widget was sent. The photos may be uploaded to the designated upload site and the sent widget references the photos and contains the appropriate credentials to access the photos. When a selection of photos is sent from a photosharing site the sent widget references the photos on the photosharing site. The photos are typically not moved and the sent widget references the photos on the appropriate photosharing site and contains the appropriate credentials to access the photos.

When an album or favorite is sent from a photosharing site the sent widget references the container and when the widget is played it will show the current contents of the container e.g. All my Flickr photos. The photos are typically not moved and the sent widget references the container on the appropriate photosharing site and contains the appropriate credentials to access the photos.

Designated Upload Site A Designated Upload Site may be used as a repository for shared photos and videos. By using an intermediary store in the cloud the receiver does not need to have access to the senders frame and the photos do not have to be downloaded to the destination frame. The user may be requested to activate the upload site during account activation on the Web Site. The activation wizard should be extendable to add multiple possible upload sites. If the designated upload site is not set the first time a user attempts to send they will be requested to create and enter their credentials. The user must be able to enter their user name and password from the client. the client users will be informed that if they don t have a Photo bucket account that they need to go to Photo bucket and create an account before they can send to chums. From the web the account creation process can be more guided like Flickr and Face book are. An option to set the Designated Upload Site may be made available from the photosharing site configuration screens.

Adding Local Photos and Video to a Channel Photos Videos may be added to a channel by dragging and dropping onto a channel. When dropped on the chumby category the user will be ask for the destination channel. If the user only has one channel it will be added to that channel. If dropped on a specific channel the resulting widget will be added to the target channel. When a local album or is added to a channel the resulting widget contains a reference to the photos and when the widget is played it will show the current contents. The photos are typically not moved and the widget references the container on the appropriate photosharing site and contains the appropriate credentials to access the photos.

When an album or favorite from a photosharing is added to a channel the resulting widget contains a reference to the photos and when the widget is played it will show the current contents. The photos are typically not moved and the widget references the container on the appropriate photosharing site and contains the appropriate credentials to access the photos.

When a selection of photos from a photosharing site is added to a channel the resulting widget points to the specific photos. The photos are typically not moved and the sent widget references the photos on the appropriate photosharing site and contains the appropriate credentials to access the photos.

When a selection of internal photos is added to a channel the resulting widget only points to the specific photos. The photos are typically not moved and the sent widget references the photos on the appropriate photosharing site and contains the appropriate credentials to access the photos.

Drag n Drop When dragging destinations in left sidebar will designate if they are legal drop points and dragged icon will indicate when areas are not available for dropping

On drop Drop modal dialogue will be displayed. The system will acknowledge that the operation has been started. The status bar will reflect status. Operations that are not allowed while the operation is being performed will be blocked. When sending a Send Modal Dialogue is displayed when the collection is dropped onto a legitimate send target. Display type of reference specific photos are being sent or a reference to the container is being sent.

Name Rename If sending a collection of photos there may be a system supplied name that the user can edit. If sending an album or favorite the name of the album or an Option to Parameterize but can send with defaults.

Widget play time Option to attach a message When adding to a channel an Add to channel dialogue is displayed when the collection is dropped onto a legitimate add to channel target. Display type of reference specific photos are being sent or a reference to the container is being sent. Name Rename. If sending a collection of photos there will be a system supplied name that the user can edit. If sending an album or favorite the name of the album or option to Parameterize but can send with defaults. Widget play time Option to attach a message References Descriptions. A message will appear when the photos are dropped that will inform the user of the type of reference that is being sent or placed in a channel. One of the following messages may be displayed

When a selected collection of photos is sent The x selected photos will be sent as a slideshow widget to . When a selected collection of photos static content is added to a channel The x selected photos will be added as a slideshow widget to channel. When a local album or an Internet photosharing album dynamic content is added to a channel Adding album to channel as a slideshow widget. The widget will display the most current contents of the album when played. When an Internet photosharing album dynamic content is sent to a chum Sending album to chum as a slideshow widget. The widget will display the most current contents of the album when played. When sending a local album to a chum static content photos from album name zz will be copied from the album. The slideshow widget will not reflect any new additions or changes to the album .

 Sending Photos via Email An additional feature may be to allow sending photos via email. Selecting an email address instead of a chum can be accomplished by adding the option to send to an email address when dropping on the general chums category. The same references will apply for sending by email except that instead of sending a widget an email is sent with a reference embedded in the email.

The following are product specification details of an exemplary embodiment of a CHUMBY frame consistent with the present invention.

It is noted that in various embodiments the present invention relates to one or more processes such as are described and or illustrated herein. These processes are typically implemented in one or more modules as are described herein and such modules may include computer software stored on a computer readable medium and or in a computer memory or other instruction storage device including instructions configured to be executed by one or more microprocessors or other digital instructions execution mechanisms to perform the described process steps or stages.

It is further noted that while the processes described and illustrated herein may include particular steps or stages it is apparent that other processes including fewer more or different stages than those described and shown are also within the spirit and scope of the present invention. Accordingly as noted previously the processes and associated modules shown herein are provided for purposes of illustration not limitation.

Some embodiments of the present invention may include computer software and or computer hardware software combinations configured to implement one or more processes or functions associated with the present invention such as those described herein. These embodiments may be in the form of modules implementing functionality in software and or hardware software combinations. Embodiments may also take the form of a computer storage product with a computer readable medium having computer code thereon for performing various computer implemented operations such as operations related to functionality as described herein. The media and computer code may be those specially designed and constructed for the purposes of the present invention or they may be of the kind well known and available to those having skill in the computer software arts or they may be a combination of both.

Examples of computer readable media within the spirit and scope of the present invention include but are not limited to magnetic media such as hard disks optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute program code such as programmable microcontrollers application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM memory devices. Examples of computer code may include machine code such as produced by a compiler or other machine code generation mechanisms scripting programs and or other code or files containing higher level code that are executed by a computer using an interpreter or other code execution mechanism.

Computer code may be comprised of one or more modules executing a particular process or processes to provide useful results and the modules may communicate with one another via means known or developed in the art. For example some embodiments of the invention may be implemented using assembly language Java C C C scripting languages and or other programming languages and software development tools as are known or developed in the art. Other embodiments of the invention may be implemented in hardwired circuitry in place of or in combination with machine executable software instructions.

The foregoing description for purposes of explanation used specific nomenclature to provide a thorough understanding of the invention. However it will be apparent to one skilled in the art that specific details are not required in order to practice the invention. Thus the foregoing descriptions of specific embodiments of the invention are presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed obviously many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications. They thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the following claims and their equivalents define the scope of the invention.

