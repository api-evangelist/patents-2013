---

title: Indexed electronic book annotations
abstract: A request for annotations identifying a user, an electronic content item (e.g., an electronic book), and a portion of the electronic content item is received from a client device. A set of annotations is identified that correspond to the identified portion of the electronic content item and an unlocked subset of this set of annotations is determined based on an access history of the identified user that indicates electronic content the identified user has previously accessed. At least one annotation from the unlocked subset is sent to the client device for presentation in conjunction with the identified electronic content item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09323733&OS=09323733&RS=09323733
owner: Google Inc.
number: 09323733
owner_city: Mountain View
owner_country: US
publication_date: 20131217
---
This application claims the benefit of U.S. Provisional Application No. 61 831 495 filed Jun. 5 2013 entitled Indexed Electronic Book Annotations which is incorporated herein by reference in its entirety.

The subject matter described herein generally relates to the field of electronic content and in particular to providing annotations within electronic books.

Electronic books ebooks come in a variety of formats such as the International Digital Publishing Forum s electronic publication EPUB standard and the Portable Document Format PDF . Ebooks can be read using a variety of devices such as dedicated reading devices and general purpose mobile devices tablet computers laptop computers and desktop computers. Each device includes reading software an ereader that displays an ebook to a user. An ereader that enables a user to interact with an ebook is generally specific to a particular device a particular ebook format and or a particular ebook.

There is a long tradition of readers adding marginalia and other annotations to books. Such annotations provide a snapshot of what readers were thinking as they read the books and can enhance both the financial and experiential value of a book.

The above and other problems are addressed by a method non transitory computer readable storage medium and computer system for providing electronic content annotations. An embodiment of the method comprises receiving a request for annotations identifying a user an electronic content item and a portion of the electronic content item from a client device. The method also comprises identifying a set of annotations that correspond to the identified portion of the electronic content item and determining an unlocked subset of the set of annotations that are available for presentation to the identified user based on an access history of the identified user that indicates electronic content the user has accessed. The method further comprises sending at least one annotation from the unlocked subset to the client device for presentation in conjunction with the identified electronic content item.

An embodiment of the computer system for providing electronic content annotations includes a non transitory computer readable storage medium storing executable computer program code and a processor for executing the computer program code. The computer program code comprises instructions for sending a request for annotations identifying the user an electronic content item and a portion of the electronic content item. The computer program code also comprises instructions for receiving an unlocked subset of annotations that are available for presentation to the identified user the unlocked subset having been selected from a corpus of annotations by identifying a set of annotations from the corpus that correspond to the identified portion of the electronic content item and selecting the unlocked subset from the set of annotations based on an access history of the identified user that indicates electronic content the user has accessed. The computer program code further comprises instructions for presenting at least one annotation from the unlocked subset in conjunction with the identified electronic content item.

An embodiment of the non transitory computer readable storage medium stores executable computer program code for providing electronic content annotations. The executable computer program code comprises instructions for receiving a request for annotations identifying a user an electronic content item and a portion of the electronic content item from a client device. The executable computer program code also comprises instructions for identifying a set of annotations that correspond to the identified portion of the electronic content item and determining an unlocked subset of the set of annotations that are available for presentation to the identified user based on an access history of the identified user that indicates electronic content the user has accessed. The executable computer program code further comprises instructions for sending at least one annotation from the unlocked subset to the client device for presentation in conjunction with the identified electronic content item.

The Figures FIGS. and the following description describe certain embodiments by way of illustration only. The embodiments described are for presenting annotations in conjunction with an electronic book ebook . However other embodiments present annotations in conjunction with other types of electronic content that contain a narrative such as TV series series of articles audiobooks and the like. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein. Reference will now be made to several embodiments examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality.

In one embodiment the network uses standard communications technologies and or protocols and can include the Internet. Thus the network can include links using technologies such as Ethernet 802.11 worldwide interoperability for microwave access WiMAX 2G 3G 4G mobile communications protocols digital subscriber line DSL asynchronous transfer mode ATM InfiniBand PCI Express Advanced Switching etc. Similarly the networking protocols used on the network can include multiprotocol label switching MPLS transmission control protocol Internet protocol TCP IP User Datagram Protocol UDP hypertext transport protocol HTTP simple mail transfer protocol SMTP file transfer protocol FTP etc. The data exchanged over the network can be represented using technologies and or formats including image data in binary form e.g. Portable Network Graphics PNG hypertext markup language HTML extensible markup language XML etc. In addition all or some of the links can be encrypted using conventional encryption technologies such as secure sockets layer SSL transport layer security TLS virtual private networks VPNs Internet Protocol security IPsec etc. In another embodiment the entities on the network can use custom and or dedicated data communications technologies instead of or in addition to the ones described above.

The client devices can be any computing device capable of presenting an electronic book to a reader such as desktop PCs laptops smartphones tablets electronic book readers and the like. As discussed above although only three client devices are shown in practice there are many e.g. millions of client devices that can communicate with the cloud provider facility using the network .

The cloud provided facility provides cloud computing services to the client devices . The cloud computing services can include providing a one time download of software e.g. a smartphone app and other content providing cloud based software or using a combination of both approaches e.g. a one time download of an electronic book reader application that displays ebook material that is stored in the cloud . In the illustrated embodiment the cloud provider facility includes an ebook subsystem an annotation subsystem a network interface and a reader data store . Other embodiments of the cloud provider facility include different and or additional components. In addition the functions may be distributed among the components in a different manner than described herein.

The network interface enables the various components of the cloud provider facility to communicate with each other internally as well as with the client devices via the network . In some embodiments the cloud provider facility is made up of multiple computers in many different geographical locations. In such embodiments the network interface directs network traffic to an appropriate one of the computers to ensure efficient operation of the cloud provider facility . For example the network interface may act in a load balancing capacity distributing requests from client devices in approximately equal proportion to a plurality of servers.

The ebook subsystem stores a corpus of ebooks and makes them available to readers for purchase licensing rental subscription and or free download at a client device via the network . For example the ebook subsystem may be maintained as part of a web based store such as GOOGLE PLAY . Each ebook has an ebook ID that uniquely identifies the ebook within the computing environment .

An ebook includes content and metadata. The ebook content includes an electronic collection of text and possibly additional types of content such as images and or sound . For example the ebook content includes the content of a book such as would be printed on the pages of a traditional paper based book. All of the text in the collection may be from a single source or the collection may contain text from different sources. The text may have originated in a traditional paper based format e.g. a physical book or newspaper or it may have originated in a digital format e.g. electronic files in a format such as Portable Document Format PDF EPUB format or flowing text format . The content of an ebook is divided into segments so that portions of the content can be transferred loaded and or consumed separately. For example an ebook can include one segment for each chapter. As used herein the term portion is used to mean a subset of the content of an ebook ranging from a single character to the entirety of the content inclusive. In various embodiments a portion is identified in one or more ways including position relative to the start of the content e.g. 48.2 to 48.4 from the start of the content absolute position in the content e.g. page 5 paragraph 2 words 1 to 5 absolute position on a page e.g. page 12 coordinates 12 10 to coordinates 20 18 and the like.

The ebook metadata includes bibliographical information about the ebook such as the book ID title author publication date edition version number number of pages number of chapters etc. The ebook metadata also includes a list of segments into which the ebook s content is divided. A segment is represented in the list by a segment ID that uniquely identifies the segment within the ebook e.g. a chapter number . The ebook metadata can also indicate directly or be used to identify ebooks that are related to each other. Examples of related books include a plurality of books in a series of novels a plurality of books written by the same author a history textbook and a novel relating to the same time period a textbook and a reference that is cited in the textbook and the like.

The reader data store stores user profile data for readers. A reader accesses the functionality provided by the cloud provided facility by logging in e.g. by providing a username and password from a client device . Each reader has a user ID e.g. the reader s username that uniquely identifies the reader within the computing environment . The user ID is stored as a part of a corresponding user profile in the reader data store . In some embodiments a user profile stored in the reader data store includes data describing the corresponding reader s reading history including the books the reader has previously read as well as books the reader is currently reading and the portions of those books the reader has already read.

In situations in which the reader data store client device or other entities collect personal information about readers or may make use of personal information the readers may be provided with an opportunity to control whether programs or features collect reader information e.g. information about a reader s social network social actions or activities profession a reader s preferences or a reader s current location or to control whether and or how to receive content from the cloud provider facility that may be more relevant to the reader. In addition certain data may be treated in one or more ways before it is stored or used so that personally identifiable information is removed. For example a reader s identity may be treated so that no personally identifiable information can be determined for the reader or a reader s geographic location may be generalized where location information is obtained such as to a city ZIP code or state level so that a particular location of a reader cannot be determined. Thus the reader may have control over how information about the reader is collected and used.

The annotation subsystem stores a corpus of annotations that correspond to the ebooks made available to the client devices by the ebook subsystem . The annotation subsystem also provides an interface with which the client devices can access the annotations via the network . In one embodiment the annotation subsystem provides an application programming interface API with which an application e.g. ereader software running on a client device can access the annotations.

In one embodiment the annotations in the corpus are indexed by at least the corresponding ebook portions e.g. a chapter paragraph sentence word or page position to which the annotation corresponds . The annotation subsystem identifies annotations that correspond to the ebook portion identified in the request using the annotation index. A subset of the identified annotations is then determined based on the requested annotation classification and or a comparison of the features of the reader s and the author s respective reading histories. The annotation subsystem then sends the subset of the annotations to the client device for display in conjunction with the ebook. In one embodiment the features of the reader s and author s reading histories comprise a current reading position within the ebook.

A reader uses a client device to download an ebook from the ebook subsystem of the cloud provider facility via the network and network interface . The client device sends a request to the annotation subsystem for annotations that correspond to at least a portion of the downloaded ebook. The request can identify one or more annotation classifications and or features of the reader s reading history. Alternatively this data can be pre obtained and stored in the reader data store and accessed as required. The client device receives the requested annotations and displays the annotations to the reader.

The storage device includes one or more non transitory computer readable storage media such as a hard drive compact disk read only memory CD ROM DVD or a solid state memory device. The memory holds instructions and data used by the processor . The pointing device is used in combination with the keyboard to input data into the computer system . The graphics adapter displays images and other information on the display device . In some embodiments the display device includes a touch screen capability for receiving user input and selections. The network adapter couples the computer system to the network . Some embodiments of the computer have different and or other components than those shown in . For example cloud provider facility can be formed of multiple blade servers and lack a display device keyboard and or other components while the client device can be a smartphone and include a touch screen that provides on screen keyboard and pointing device functionality.

The computer is adapted to execute computer program modules for providing functionality described herein. As used herein the term module refers to computer program instructions and or other logic used to provide the specified functionality. Thus a module can be implemented in hardware firmware and or software. In one embodiment program modules formed of executable computer program instructions are stored on the storage device loaded into the memory and executed by the processor .

The ereader module presents electronic books to a reader using the client device . The ebook can be presented visually on a screen of the client device and or as audio book e.g. a pre recorded narrator reading or using text to speech technology . The ereader module also communicates with the ebook subsystem of the cloud provider facility via the network in order to obtain ebooks. In one embodiment the ereader module is a JavaScript program that executes on the client device in conjunction with a web browser also executing on the client device and obtains ebooks from the web based store provided by the ebook subsystem .

The annotation authoring module provides a user interface in conjunction with the ebook being displayed by the ereader module that enables a reader to add annotations to an ebook. The annotations include annotation content and annotation metadata. Annotation content as used herein is the body of an annotation that is provided by the annotation author to be displayed when the annotation is viewed by other readers and can include text images audio recordings video and the like Annotation metadata as used herein is any additional information about the annotation that is stored in the networked computing environment such as the specific ebook and portion thereof to which the annotation corresponds the identity of the annotation s author information about the annotation content e.g. subject matter information about the annotation s author the date and time at which the annotation was created and the like.

In order to add an annotation the reader selects a portion of the ebook e.g. by highlighting the portion using a user interface of the reader s client device and provides the annotation content e.g. by typing a text annotation using a keyboard or taking a photograph with a smartphone s built in camera etc. . The annotation authoring module then adds metadata to the annotation indicating that the annotation corresponds to the portion of the ebook the reader selected. Alternatively annotations can be added in other ways for example the reader may provide the annotation content first and then select a portion of an ebook to which the annotation is to correspond.

In one embodiment the annotation authoring module defines the portion of ebook to which the annotation corresponds as a position range including a start position and an end position. Each position is an internal marker for a position within an ebook and includes e.g. a paragraph indicator and an offset within that paragraph. Some ebooks include one or more images each of which has a specified position on a specified page. The image positions can be used to determine where a content range starts and or ends so that images within the content range can be indicated.

The annotation metadata can also include an indication of the annotation author s reading history at the time the annotation was created to provide context for the annotation. In one embodiment the reader data store includes an indication of which portions of the ebook the annotation author read prior to making the annotation. The annotation authoring module includes this indication in the annotation metadata. This provides an indication of the context in which the author is adding the annotation. For example a set of annotations discussing a character s motives may be attached to chapter one of a book by the members of a book club. The context of an annotation in the set that was added by a reader after reading only chapter one is very different than the context of an annotation that was added by a reader who returns to the discussion having read the entirety of the ebook. In a related embodiment the annotation authoring module further includes metadata indicating portions of ebooks that are related to the ebook being annotated that have been read by the annotation author. The related books read by the annotation author may also influence the context of the annotation. In other embodiments the metadata includes indications of portions of the ebook which the reader is required to have read before the annotation is made available for display to the reader. These required portions can be manually identified by the author and or generated automatically by the annotation authoring module based on the author s reading history. For example certain portions of an ebook may be identified as critical e.g. containing key plot developments and the required portions are those critical portions that the author has read at the time the annotation is created.

In some embodiments the metadata for an annotation also includes a classification for the annotation that identifies the type of subject matter included in the annotation content e.g. background information character development plot theory possible character motive general discussion historical context etc. . In one such embodiment the annotation authoring module presents a reader with a list of available classifications when authoring an annotation e.g. with a plurality of radio buttons and prompts the reader to select the classification that best applies. In another such embodiment an annotation can be assigned multiple classifications e.g. by using a plurality of check boxes . In one embodiment a reader can create new classifications to assign to annotations.

In some embodiments the metadata for an annotation also includes access permission data that determines which other readers can view the annotation for example public all readers just friends e.g. those readers the author has previously added to a list of friends a specific group of friends e.g. a book club a specific individual etc. In one such embodiment the annotation authoring module uses an application programming interface API provided by a social networking site e.g. GOOGLE to leverage the friends network and access permission functionality of the social networking site for this purpose.

In a related embodiment when a reader authors a new annotation the user interface provided by the annotation authoring module includes a control to enable reader to share the annotation. The annotation authoring module is configured to use the social network API to share the annotation to the reader s profile on the social networking site. In another related embodiment readers can also share their own and or other reader s annotations to their social network profiles at any time. However a reader may be prevented from sharing an annotation with people who do not have permission to view the original annotation.

The annotation display module obtains annotations that correspond to the ebook being displayed by the ereader module and presents the annotations to the reader in conjunction with the ebook. The annotation display module can obtain annotations from the annotation subsystem of the cloud provider server the local data store of the client device and or other sources e.g. another client device on a local network .

In one embodiment the annotation display module sends a request for annotations corresponding to a currently displayed portion of an ebook to the annotation subsystem of the cloud provider server via the network . The request includes the displayed ebook s ebook ID an indication of the currently displayed portion e.g. a page number and the reader s user ID. The request can also include a set of filter criteria indicating classifications of annotation to include and or not include e.g. the request may specify that only annotations that are tagged as providing historical context should be included or that annotations tagged as theories should be excluded etc. In another embodiment when a reader obtains an ebook the annotation display module downloads all of the annotations available to the reader for that ebook. The annotation display module may also make regular checks for newly available annotations at appropriate times such as each time the reader accesses the ebook or as part of a regular update process e.g. once a day .

The annotation display module provides an indication of portions of an ebook that have corresponding annotations e.g. using visual effects such as highlighting underlining coloring and the like . In one embodiment different indications are used depending on the classification of the corresponding set of annotations. For example a portion of an ebook that is annotated with historical context information may be highlighted in blue while a portion of the ebook annotated with a discussion regarding character motive may be highlighted in green with other colors being used for additional classifications of annotation.

The annotation display module presents the annotations in conjunction with the corresponding portions of the ebook displayed by the ereader module . In one embodiment the annotation display module provides a user interface control that enables the reader to toggle between display of the ebook content and display of the corresponding annotations e.g. a discussion by a study group on the historical context of a passage in a set text . In this way the reader can quickly switch between viewing a set of annotations discussing a portion of a book and the portion of the book itself. The annotation authoring module may provide user interface controls to enable the reader to add an annotation while viewing a set of annotations e.g. to add a comment to an on going discussion . In another embodiment the annotation display module displays annotations at the same time as the corresponding portion of the ebook and provides a user interface control to toggle display of annotations on and off. For example the annotations can be displayed in the margins near to the corresponding portion of the ebook.

The local data store stores data such as executable applications e.g. an ereader ebooks or portions thereof and annotations. In one embodiment annotations created by the annotation authoring module are initially stored in the local data store and later uploaded to the cloud provider facility e.g. when the reader next logs in . In this way the reader is not limited to authoring annotations only when on line. In a related embodiment the annotation display module downloads and caches annotations to the local data store at a time prior to the reader accessing the corresponding portions of an ebook. For example as described above the annotation display module may download annotations corresponding to an ebook at substantially the same time that the ebook is downloaded.

The annotation repository stores a corpus of annotations including metadata and an index of the stored annotations. In one embodiment the annotations stored in the annotation repository are indexed by corresponding ebook ID and corresponding ebook portion. In other embodiments the annotations are indexed based on different and or additional metadata.

The request processing module receives requests from client devices and processes those requests. The request processing module provides an interface or interfaces with which client devices create access and manage annotations within the networked computing environment . In one embodiment the request processing module processes two types of request from client devices store requests and retrieve requests.

A store request includes an annotation and corresponding metadata to be added to the annotation repository . For example after a reader creates an annotation the annotation authoring module sends a store request including the annotation to the request processing module via the network . On receiving the store request the request processing module passes the request to the indexing module .

The indexing module analyzes the annotation metadata to identify indexing data e.g. ebook ID ebook portion . As mentioned previously in one embodiment the annotations stored in the annotation repository are indexed by ebook ID and ebook portion. The indexing module identifies this data from the annotation metadata adds the annotation to the annotation repository and adds corresponding entries in the annotation index indicating the location of the annotation in the annotation repository and the correspondence between the annotation and the identified ebook and ebook portion. In other embodiments the annotations are also indexed by additional aspects available in the metadata such as the annotation context based on the author s reading history the annotation classification and the like.

A retrieve request includes a set of annotation criteria for identifying annotations in the annotation repository to send to a client device . In one embodiment the annotation criteria include an ebook ID a position range a user ID and optionally an indication of one or more annotation classifications. On receiving the retrieve request the request processing module queries the annotation repository for annotations that correspond to the received annotation criteria. The annotation index is used to identify a set of annotations that correspond to the ebook ID and position range. The set of annotations is then further processed to identify a subset of the identified annotations that correspond to all of the annotation criteria. Correspondence between a particular annotation and the received annotation criteria is determined by comparing elements of the criteria with the metadata of the particular annotation with a correspondence being identified if the elements match.

The request processing module identifies annotations that correspond to the ebook ID included in the retrieve request. In one embodiment an exact match is required. In another embodiment the ebook ID need only indicate an ebook that includes at least some of the same content as the ebook identified by the particular annotation s metadata. For example an annotation initially added to the first edition of a book is likely to be relevant when reading the second edition of the same book. The position range is similarly used to identify annotations that correspond to the portion of the ebook for which annotations were requested. Generally an annotation is considered a match if the position range included in the retrieve request overlaps with the position range indicated by the annotation s metadata although other match requirements may be used e.g. at least 50 overlap between the position range included in the retrieve request and the position range indicated in the annotation s metadata .

The position module identifies annotations corresponding to other instances of the ebook content identified in the retrieve request that occur in similar ebooks. Similar ebooks have at least some content in common with each other for example different editions of an ebook collections of short stories with some common content and the like. In one embodiment the position module translates content locations between similar ebooks so that annotations associated with any particular instance of a portion of ebook content can be retrieved for display in conjunction with any other instance of the same portion of ebook content. For example if a client device requests annotations for a particular passage of the first edition of an ebook any annotations corresponding to the same content in the second edition of the ebook are also likely to be of interest to the reader. However if content has been added in the second edition the content of the particular passage in the first edition will appear in a different relative position in the second edition of the ebook.

In some embodiments the position module determines that a portion of the ebook corresponds to a portion in a similar ebook if each portion contains substantially the same content. In this instance substantially the same is used to mean that the two portions contain only minor differences that do not substantively affect the meaning of and or information provided by the content. For example two portions that differ only due to the correction of a typographical error included in a later edition of a book are considered to be substantially the same. In one such embodiment the two portions are compared character by character and are considered substantially the same if more than a threshold e.g. 95 of the characters match. In other embodiments other methods of determining whether two portions contain substantially the same content are used.

In some embodiments the position module keeps track of position information indicating correspondences between annotated portions of an ebooks and corresponding portions of similar ebooks. Position information includes for example a pair of ebook IDs identifying similar ebooks and a pair of position ranges indicating where corresponding content can be found . Position information can also include the content before the annotated content the annotated content itself and the content after the annotated content. In one such embodiment the position module uses the position information to locate the annotated portion of an old version of an ebook within a new version of the same ebook by searching the text of the new version of the ebook. Thus the portion of the new version that corresponds to the portion of the old version can be stored and the annotation in the old version made available to reader s requesting annotations for the corresponding portion of the new version.

In another embodiment this problem is addressed by a dedicated content tracking system not shown providing a content tracking service. The content tracking system keeps track of position information indicating correspondences between portions of related ebooks. The position module sends a request to the content tracking system including an ebook ID and position range. In response the content tracking system provides a set of ebook IDs and position ranges indicating corresponding content in related ebooks. In other embodiments other methods of determining correspondences between portions of similar ebooks are used.

The unlock module determines whether the user ID included in the retrieve request has unlocked access to the identified annotations including the annotations in the book and or in related books. An annotation is locked with regards to a particular user ID if the user ID is permitted to access the annotation but has not yet met one or more unlock criteria associated with the annotation that relate to the reader s reading history. A locked annotation is not available for display to the reader corresponding to the user ID. The annotation becomes unlocked and hence available for display once the user ID has met the unlock criteria.

For a given annotation the unlock module compares the reader s reading history either included in the retrieve request and or retrieved from reader data store to annotation metadata describing the reading history of the annotation author at the time the annotation was created to determine whether the annotation should be made available to the reader. A reading history comprises an indication of which portions of the current ebook the reader has read. The reading history may also include an indication of the reader s reading progress in related ebooks e.g. other books in a series .

In some embodiments a reading history for a particular ebook comprises a reading position indicator that indicates the point in the ebook that marks the divide between content that the reader has and has not read. In one such embodiment the ereader module positions this indicator at the end of the portion nearest to the end of the ebook that has been displayed for more than a threshold period of time ranging from zero seconds i.e. the portion has been displayed at some point to about 120 seconds a reasonable period of time for the reader to have read the portion . In another such embodiment the indicator is positioned at the end of the portion nearest to the end of the ebook that has been displayed for which all preceding portions have also been displayed. In yet another such embodiment gaze tracking is used to more precisely determine which content the reader has read.

In other embodiments which portions of the ebook content the reader has read is determined on a portion by portion basis with one or more granularities e.g. chapter by chapter page by page paragraph by paragraph and the like depending on the particular requirements of the embodiment. In one such embodiment the ereader module determines that the reader has read a particular paragraph if that paragraph has been displayed for more than a threshold period of time. In another such embodiment the ereader module uses gaze tracking to more precisely determine which portions the reader has read.

To determine whether an annotation is unlocked the unlock module compares the reading history of the reader with the reading history of the annotation s author determined in the manner described above with reference to the reader at the time the annotation was created. In one embodiment the metadata of an annotation stored in the annotation repository includes an indication of the author s reading history e.g. where in the book the author has read up to at the time that the annotation was created and the unlock criteria include that the reader has read at least as much of the book as the author had when the annotation was created. The unlock module compares the reader s current reading history to the author s reading history included in the metadata with the annotation only being available to the reader unlocked if the user has read at least as much of the book as the author had at the time the annotation was created. In some embodiments the unlock module keeps track of annotations that have been displayed to the reader and or that the reader has added annotation replies to. The unlock module then notifies the reader when additional corresponding annotations have been unlocked as the reader progresses through the ebook.

For example after reading page 4 of a book a first reader adds an annotation to page 4 asking the other members of a book club for their thoughts regarding how the plot is likely to develop. A second reader in the book club after reading page 4 sees the annotation and adds a reply also an annotation to it immediately with a prediction. Later after reading to page 10 the first reader returns to the annotations on page 4 and adds a further reply congratulating the second reader for making a correct prediction. At a later time a third reader reaches page 4 of the book. Because the third reader has reached page 4 but has not yet reached page 10 the unlock module allows the third reader to access the annotation asking for predictions and the annotation making a prediction but not the annotation indicating that the prediction is correct. The third reader adds a further reply making a different incorrect prediction. Thus the third reader s enjoyment of the book is not spoiled by annotations that include knowledge gained from sections of the book that the third reader is yet to read. When the third reader reaches page 10 and unlocks the reply congratulating the second reader on making a correct prediction the third reader is automatically notified that an additional annotation has been unlocked and provided with a link back to the earlier annotations the initial annotation and the replies .

In other embodiments additional features of readers and authors reading histories are used to determine whether the unlock criteria have been met and annotations are unlocked. In one embodiment the unlock module also considers other books that the reader and annotation s author have read. In this case the unlock criteria include requiring that the reader requesting an annotation has read at least some of the other books in a series that the annotation s author had read at the time the annotation was created. For example the unlock criteria for an annotation associated with a portion of the first book in a series may include requiring that the reader has read at least as much of the second book in the series as the author had at the time the annotation was created. In this way the reader s enjoyment of the series is not spoiled by annotations that include information from later books in the series before the reader has had chance to read those later books.

In some embodiments the unlock criteria used is dependent on additional factors. In one such embodiment different unlock criteria are used for different classifications of annotation. For example annotations classified as historical context might be unlocked for all readers as this type of annotation provides additional information not directly obtained from the book whereas annotations classified as theories are unlocked only when the reader has read at least as much of the book as the author had when the annotation was created as this type of annotation is likely to contain information obtained from within the book and thus be more likely to spoil the reader s enjoyment of the book if revealed too early.

In another such embodiment different unlock criteria are used for different types of book. When reading a textbook for a class a reader will most likely be interested in all of the annotations that are available regardless of the author s reading history. In contrast when reading a thriller novel the reader is unlikely to want to see an annotation in chapter 1 that reveals a key plot twist from later in the novel. Thus the unlock criteria used for different types of ebook can be manually and or automatically customized to the particular type of ebook. For example a reader may customize the annotation display module to use no unlock criteria for all annotations in textbooks author reading history based unlock criteria for just annotations classified as theories in biographies and author reading history based unlock criteria for all annotations in fiction books.

The filter module filters the available annotations e.g. those annotations that the unlock module determines are unlocked based on annotation metadata. The filter module uses filter criteria that identify one or more metadata features to determine whether the annotation is made available to a reader. The filter criteria can be included in the retrieve request and or obtained from the reader data store using the provided user ID. The filter criteria may identify features that indicate a particular annotation should be provided to the reader or features that indicate that the reader should be prevented from accessing the particular annotation.

In one embodiment the filter module identifies the user profile stored in the reader data store corresponding to the user ID provided in the retrieve request. The user profile includes an indication of one or more classifications of annotation to provide to the user ID e.g. historical context theories character profiles etc. Alternatively the classifications of annotations to provide is included in the retrieve request. The filter module uses the indicated annotation classifications as filter criteria and filters the available annotations such that only those of the identified classifications are returned to the client device .

In another embodiment the filter criteria used by the filter module includes access permission data. As described above with reference to an annotation stored in the annotation repository can include access permission data indicating which user IDs have permission to access the annotation. The request processing module compares the user ID included in the retrieve request with the access permission data to determine whether the user ID has permission to access the particular annotation. In other embodiments different and or additional filter criteria are used to identify which annotations should be sent to the client device .

Once the annotation subsystem has identified one or more annotations that meet the criteria provided in the retrieve request are unlocked and or have not been filtered out the one or more annotations are sent to the requesting client device via the network . Alternatively determining whether annotations are unlocked and or annotation filtering can be performed by the requesting client device . In one embodiment all of the annotations are identified and then sent to the client device in bulk. In another embodiment corresponding annotations are sent to the client device as they are identified.

In step the annotation subsystem receives a retrieve request for annotations from a client device . In one embodiment the retrieve request includes an ebook ID identifying the ebook for which annotations are requested a position range identifying a portion of the identified ebook for which annotations are requested and a user ID identifying a reader using the client device . The retrieve request may also contain filter criteria and or reading history data corresponding to the reader. Alternatively the filter criteria and or reading history data can be retrieved from the reader data store as required using the user ID.

In step the annotations subsystem searches the annotation repository using the index to produce a set of annotations that correspond to the ebook portion identified by the ebook ID and position range included in the retrieve request. In one embodiment the set of annotations includes annotations that are associated with corresponding portions of ebooks that are similar to the ebooks identified by the ebook ID as described above with reference to the position module . In another embodiment an annotation is only determined to correspond to the identified ebook portion if the annotation is directly associated with the ebook portion.

In step the annotations subsystem determines which of the set of annotations have been unlocked based on the reading history data associated with the user ID included in the retrieve request. Thus the annotations subsystem produces a subset of unlocked annotations from the set of annotations. As previously described the reading history data may be included in the retrieve request or it may be retrieved from the reader data store . In one embodiment the reading history data comprises an indication of a position in the identified ebook that the reader has read up to. This position is compared to annotation metadata indicating the reading history of the author of the annotation at the time the annotation was created. If the reading history data associated with the user ID indicates that the reader has read up to or beyond the point in the ebook that the annotation author had reached when the annotation was created then the annotation is included in the subset of unlocked annotations. Conversely if the reader has not yet reached the point that the author had reached when the annotation was created the annotation is considered locked and not included in the unlocked annotations subset.

In step the annotation subsystem filters the unlocked annotations subset to produce a subset of filtered annotations by comparing annotation metadata with filter criteria that identify one or more classifications of annotation that the reader wishes to receive. As previously described the filter criteria may be included in the retrieve request or they may be retrieved from the reader data store . In one embodiment the filter criteria include a list of annotation classifications e.g. historical context theories character profiles etc. that the reader wishes to be displayed at the client . The metadata of each unlocked annotation is compared to the list with only those annotations that are tagged with a classification that is one the list being included in the filtered annotations subset. In other embodiments other filter criteria such as profile information of the author are used.

At step the annotation subsystem sends the filtered annotations subset to the client device for display to the reader in conjunction with the ebook. As described previously in other embodiments the steps of the method are performed in different orders and by different entities. In one such embodiment the annotation subsystem sends the unlocked annotations subset to the client device i.e. the annotations subsystem does not perform the filtering step . The filtering step is then performed by the client device for example using filter parameters set by the reader using the ereader module and stored locally in the local data store .

Some portions of above description describe the embodiments in terms of algorithmic processes or operations. These algorithmic descriptions and representations are commonly used by those skilled in the data processing arts to convey the substance of their work effectively to others skilled in the art. These operations while described functionally computationally or logically are understood to be implemented by computer programs comprising instructions for execution by a processor or equivalent electrical circuits microcode or the like. Furthermore it has also proven convenient at times to refer to these arrangements of functional operations as modules without loss of generality. The described operations and their associated modules may be embodied in software firmware hardware or any combinations thereof.

As used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some embodiments may be described using the expression coupled and connected along with their derivatives. It should be understood that these terms are not intended as synonyms for each other. For example some embodiments may be described using the term connected to indicate that two or more elements are in direct physical or electrical contact with each other. In another example some embodiments may be described using the term coupled to indicate that two or more elements are in direct physical or electrical contact. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. The embodiments are not limited in this context.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process method article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present .

In addition use of the a or an are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the disclosure. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and process for providing indexed ebook annotations. Thus while particular embodiments and applications have been illustrated and described it is to be understood that the described subject matter is not limited to the precise construction and components disclosed herein and that various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus disclosed herein. The scope of the invention is to be limited only by the following claims.

