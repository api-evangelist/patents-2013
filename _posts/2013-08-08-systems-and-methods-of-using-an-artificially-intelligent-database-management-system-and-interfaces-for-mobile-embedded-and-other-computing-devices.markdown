---

title: Systems and methods of using an artificially intelligent database management system and interfaces for mobile, embedded, and other computing devices
abstract: The current disclosure generally relates to database management systems (DBMSs) and may be generally directed to methods and systems of using artificial intelligence (i.e. machine learning and/or anticipation functionalities, etc.) to learn a user's use of a DBMS, store this “knowledge” in a knowledgebase, and anticipate the user's future operating intentions. The current disclosure may also be generally directed to associative methods and systems of constructing DBMS commands. The current disclosure may also be generally directed to methods and systems of using a simplified DBMS command language (SDCL) for associative DBMS command construction. The current disclosure may also be generally directed to artificially intelligent methods and systems for associative DBMS command construction. The current disclosure may also be generally directed to methods and systems for associative DBMS command construction through voice input. Other methods, systems, features, elements and/or their embodiments are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09367806&OS=09367806&RS=09367806
owner: 
number: 09367806
owner_city: 
owner_country: 
publication_date: 20130808
---
The current disclosure generally relates to database management systems. More specifically the present disclosure is generally directed to systems and methods for database management systems and their applications on mobile embedded and other computing devices and applications.

As processing power and memory become more affordable and compact mobile embedded and other computing devices are being designed to include greater functionality. For instance today s mobile embedded and other computing devices such as cellular enabled computing devices i.e. Smartphones etc. may comprise various applications for the users in addition to the basic telephonic functionality.

On the other hand database management systems DBMSs are often used on conventional systems for storing managing and or manipulating structured data by inputting often complicated complex and lengthy DBMS related instructions to be executed by the DBMS to perform operations on data stored in databases or on databases themselves. As such operating the DBMS may often be a time consuming task reserved for expensive and well trained DBMS operators thereby also incurring additional cost in order to perform operations on the data.

As DBMSs are traditionally reserved for execution on conventional database servers personal desktop computers or other more traditional computing devices most DBMS management platforms count on the user to be very well versed in DBMS operation and commands in addition to having readily available a keyboard and a mouse for input a full size display for output and plentiful processing power with a permanent network connection and a plethora of bandwidth for operation. Such conditions however should not be assumed for mobile and embedded computing device operations in which a user may not have access to a full size display mouse or a standard keyboard in order to operate a DBMS. Furthermore an average user of a mobile device may not be highly trained in DBMS operation and yet may need to operate a DBMS or a DBMS application. Therefore in order to accommodate such a user of a mobile or embedded device to more efficiently and conveniently operate a DBMS via the mobile or embedded device platform new approaches to DBMS design functioning and interfacing are herein introduced enabling the user to realize the benefits of modern DBMS applications while utilizing a new advanced DBMS operating functionalities presented below. To that extent the present disclosure provides solutions to the at least aforementioned issues by providing advanced DBMS application functionalities accessible via mobile embedded and other computing devices that allow a user to utilize these functionalities on the go.

Concerning the advanced functionalities the current disclosure discloses artificial intelligence i.e. machine learning and or anticipation functionalities etc. to learn the user s use of the DBMS store this knowledge in a knowledgebase and anticipate the user s future operating intentions with minimal or no user input. With respect to user interfacing the current disclosure discloses an associative method of constructing DBMS commands a simplified DBMS command language SDCL for associative DBMS command construction and an artificially intelligent method for associative DBMS command construction. Also the current disclosure discloses a method for associative DBMS command construction through voice input.

In one aspect the present disclosure relates to an interface for an artificially intelligent database management system. In some embodiments an interface of a database management system may be operating on a mobile device. The interface may be configured to receive a sequence of instruction sets. Each instruction set may be for performing an operation on data stored in a database. The sequence of instruction sets may comprise a first instruction set followed by a second instruction set. The interface may disassemble the first instruction set into a first plurality of portions and the second instruction set into a second plurality of portions. The interface may perform one or more database operations corresponding to the first instruction set followed by the operations corresponding to the second instruction set. The interface may receive a new instruction set for performing an operation on data stored in a database. The interface may disassemble the new instruction set into a new plurality of portions for comparing the new plurality of portions with the first plurality of portions and the second plurality of portions. The interface may also select to display on the mobile device the second instruction set as an option to be selected by a user responsive to a determination that the portions of the new instruction set substantially match the portions of the first instruction set and that the second instruction set follows in sequence the first instruction set.

In another aspect the present disclosure relates to a system accessed from a mobile device. The system may include a database management system DBMS configured to store a sequence of instruction sets where each instruction set is for performing an operation on data stored in a database and the sequence of instruction sets comprises a first instruction set followed by a second instruction set and the first instruction set comprises a first plurality of portions and the second instruction set comprises the second plurality of portions. The DBMS may also be configured to receive a new instruction set for performing an operation on a database and to disassemble the new instruction set into a new plurality of portions for comparing the new plurality of portions with the first plurality of portions and the second plurality of portions. The DBMS may also be configured to compare one or more of the new plurality of portions of the new instruction set with one or more of the first plurality of portions of the first instruction set. The DBMS may further be configured to transmit to the mobile device a second instruction set as an option to be selected by a user responsive to a determination that the portions of the new instruction set substantially match the portions of the first instruction set and that the second instruction set follows in sequence the first instruction set.

In one aspect the present disclosure relates to an interface for a database management system DBMS . In some embodiments an interface of a database management system may be operating on a mobile device. The interface may be configured to receive from the DBMS a plurality of collections of instruction set portions for assembling instruction sets for performing operations on a database. The interface may associate each of a plurality of keys of a mobile device with each of a plurality of instruction set portions from a first collection from the plurality of collections. The interface may display on the mobile device for a selection by a user the plurality of instruction set portions from the first collection. The interface may receive from a database management system DBMS a first portion of a new instruction set assembled using a first instruction set portion from the plurality of instruction set portions from the first collection the first instruction set portion selected by the user. The interface may re associate each of the plurality of keys of the mobile device with each of a plurality of instruction set portions from a second collection from the plurality of collections. The interface may display on the mobile device for a selection by the user the plurality of instruction set portions from the second collection. The interface may receive from the DBMS a second portion of the new instruction set the second portion assembled to follow the first portion of the new instruction set the second portion of the new instruction set assembled using a second instruction set portion from the plurality of instruction set portions from the second collection the second instruction set portion selected by the user. The interface may re associate each of the plurality of keys of the mobile device with each of a plurality of instruction set portions from a third collection from the plurality of collections. The interface may display on the mobile device for a selection by the user the plurality of instruction set portions from the third collection. The interface may receive from the DBMS a third portion of the new instruction set the third portion assembled to follow the second portion of the new instruction set the third portion of the new instruction set assembled using a third instruction set portion from the plurality of instruction set portions from the third collection the third instruction set portion selected by the user.

In another aspect the present disclosure relates to a system accessed from a mobile device. The system may include a database management system DBMS configured to maintain a plurality of collections of instruction set portions for assembling instruction sets for performing operations on a database. The DBMS may also be configured to assemble by the DBMS a first portion of a new instruction set using a first instruction set portion from a plurality of instruction set portions from a first collection the first instruction set portion selected via a mobile device key associated with the first instruction set portion. The DBMS may also be configured to assemble by the DBMS a second portion of the new instruction set using a second instruction set portion from a plurality of instruction set portions from a second collection the second instruction set portion selected via a mobile device key associated with the second instruction set portion the second portion of the new instruction set following the first portion of the new instruction set. The DBMS may further be configured to assemble by the DBMS a third portion of the new instruction set using a third instruction set portion from a plurality of instruction set portions from a third collection the third instruction set portion selected via a mobile device key associated with the third instruction set portion the third portion of the new instruction set following the second portion of the new instruction set.

In one aspect the present disclosure relates to an interface for a database management system. In some embodiments an interface of a database management system may be operating on a mobile device. The interface may be configured to receive from the DBMS a plurality of collections of instruction set portions for assembling instruction sets for performing operations on a database. The interface may associate each of a plurality of user phrases with each of a plurality of instruction set portions from a first collection from the plurality of collections. The interface may display on the mobile device for a selection by a user the plurality of instruction set portions from the first collection. The interface may receive from a database management system DBMS a first portion of a new instruction set assembled using a first instruction set portion from the plurality of instruction set portions from the first collection the first instruction set portion selected by the user. The interface may re associate each of the plurality of user phrases with each of a plurality of instruction set portions from a second collection from the plurality of collections. The interface may display on the mobile device for a selection by the user the plurality of instruction set portions from the second collection. The interface may receive from the DBMS a second portion of the new instruction set the second portion assembled to follow the first portion of the new instruction set the second portion of the new instruction set assembled using a second instruction set portion from the plurality of instruction set portions from the second collection the second instruction set portion selected by the user. The interface may re associate each of the plurality of user phrases with each of a plurality of instruction set portions from a third collection from the plurality of collections. The interface may display on the mobile device for a selection by the user the plurality of instruction set portions from the third collection. The interface may receive from the DBMS a third portion of the new instruction set the third portion assembled to follow the second portion of the new instruction set the third portion of the new instruction set assembled using a third instruction set portion from the plurality of instruction set portions from the third collection the third instruction set portion selected by the user.

In another aspect the present disclosure relates to a system accessed from a mobile device. The system may include a database management system DBMS configured to maintain a plurality of collections of instruction set portions for assembling instruction sets for performing operations on a database. The DBMS may also be configured to assemble by the DBMS a first portion of a new instruction set using a first instruction set portion from a plurality of instruction set portions from a first collection the first instruction set portion selected on a mobile device via a user phrase associated with the first instruction set portion. The DBMS may also be configured to assemble by the DBMS a second portion of the new instruction set using a second instruction set portion from a plurality of instruction set portions from a second collection the second instruction set portion selected on a mobile device via a user phrase associated with the second instruction set portion the second portion of the new instruction set following the first portion of the new instruction set. The DBMS may further be configured to assemble by the DBMS a third portion of the new instruction set using a third instruction set portion from a plurality of instruction set portions from a third collection the third instruction set portion selected on a mobile device via a user phrase associated with the third instruction set portion the third portion of the new instruction set following the second portion of the new instruction set.

In one aspect the present disclosure relates to an interface for an artificially intelligent database management system. In some embodiments an interface of a database management system may be operating on a mobile device. The interface may be configured to receive a sequence of instruction set portions of an instruction set for performing an operation on data stored in a database. The sequence of instruction set portions may comprise a first instruction set portion followed by a second instruction set portion. The interface may receive a new instruction set portion of a new instruction set for performing an operation on data stored in a database. The interface may compare the new instruction set portion with the first instruction set portion and the second instruction set portion. The interface may also select to display on the mobile device the second instruction set portion as an option to be selected by a user responsive to a determination that the new instruction set portion substantially match the first instruction set portion and that the second instruction set portion follows in sequence the first instruction set portion.

In another aspect the present disclosure relates to a system accessed from a mobile device. The system may include a database management system DBMS configured to store a sequence of instruction set portions of an instruction set for performing an operation on data stored in a database and the sequence of instruction set portions comprises a first instruction set portion followed by a second instruction set portion. The DBMS may also be configured to receive a new instruction set portion of a new instruction set for performing an operation on a database. The DBMS may also be configured to compare the new instruction set portion with the first instruction set portion and the second instruction set portion. The DBMS may further be configured to transmit to the mobile device the second instruction set portion as an option to be selected by a user responsive to a determination that the new instruction set portion substantially matches the first instruction set portion and that the second instruction set portion follows in sequence the first instruction set portion.

In one aspect the present disclosure relates to an interface for an artificially intelligent database management system. In some embodiments an interface of a database management system may be operating on a mobile device. The interface may be configured to receive a first portion of a new instruction set for performing an operation on data stored in a database and a second portion of the new instruction set for performing the operation on data stored in the database. The interface may disassemble the first and the second portions of the new instruction set for comparing the first and the second portions with a stored plurality of instruction sets. The interface may also select to display on the mobile device a third portion of a first instruction set of the stored plurality of instruction sets responsive to a determination that the first instruction set includes a first portion that substantially matches the first portion of the new instruction set and a second portion that substantially matches the second portion of the new instruction set. The interface may further be configured to select to display on the mobile device the third portion of a first instruction set responsive to a further determination that the third portion of the first instruction set follows the first portion of the first instruction set and the second portion of the first instruction set.

In another aspect the present disclosure relates to a system accessed from a mobile device. The system may include a database management system DBMS configured to store one or more instruction sets each instruction set of the stored one or more instruction sets including instructions for an operation to be performed on data stored in one or more databases. The DBMS may also be configured to receive from an interface for the DBMS a first portion of a new instruction set for performing an operation on data stored in a database and a second portion of the new instruction set for performing the operation on data stored in the database. The DBMS may also be configured to compare the first and the second portions of the new instruction set with instruction sets from the one or more stored instruction sets. The DBMS may further be configured to transmit to the interface a third portion of a first instruction set of the stored plurality of instruction sets in response to a determination that the first portion of the first instruction set substantially matches the first portion of the new instruction set and that the second portion of the first instruction set substantially matches the second portion of the new instruction set. The DBMS may further be configured to transmit to the interface the third portion of a first instruction set responsive to a further determination that that the third portion of the first instruction set follows the first portion of the first instruction set and the second portion of the first instruction set.

In one aspect the present disclosure relates to a system for interfacing with a database management system. The system may include an interface of a database management system operating on a mobile device. The interface may be configured to receive a first portion of a new instruction set for performing an operation on data stored in a database and a second portion of the new instruction set for performing the operation on data stored in the database. The interface may also be configured to disassemble the first and the second portions of the new instruction set for comparing the first and the second portions with a stored plurality of instruction sets. The interface may further be configured to select to display on the mobile device a first instruction set of the stored plurality of instruction sets. The selection to display on the mobile device of the first instruction set may be responsive to a determination that the first instruction set includes portions that substantially match the first and the second portions of the new instruction set.

In some embodiments the interface is further configured to select to display on the mobile device a second instruction set of the stored plurality of instruction sets. The second instruction set may be selected to be displayed responsive to a determination that the second instruction set includes portions that substantially match the first and the second portions of the new instruction set. In further embodiments the interface is also configured to receive a third portion of the new instruction set for performing the operation on data stored in the database. The interface may also be configured to disassemble the third portion of the new instruction set for comparing the first the second and the third portions with a stored plurality of instruction sets and to select for display on the mobile device a third instruction set of the stored plurality of instruction sets responsive to a determination that the third instruction set includes portions that substantially match the first the second and the third portions of the new instruction set. The interface may also be configured to select to display the third instruction set as a preferred option for a user s selection with respect to the first instruction set and the second instruction set.

In some embodiments the interface is further configured to select to display on the mobile device the first instruction set responsive to receiving the determination from the database management system. In certain embodiments the interface is further configured to select to display on the mobile device the first instruction set as an option to be selected by a user. In some embodiments the interface is further configured to transmit the first instruction set for execution by the database management system responsive to a user s selection of the first instruction set. In yet some embodiments the interface is further configured to select to display on the mobile device the first instruction set prior to receiving by the interface a final portion of the new instruction set the final portion following at least the first and the second portions of the new instruction set. In certain embodiments the interface is further configured to receive instructions for the database management system to operate on data in the database. In further embodiment the interface is further configured to disassemble the new instruction set into a plurality of portions including the first portion and the second portion as the new instruction set is being received by the interface.

In some embodiments each of the stored plurality of instruction sets include a different set of instructions for operating by the database management system on data stored in one or more databases. In some embodiments the stored plurality of instruction sets comprise instruction sets previously entered by one or more users via the interface the instruction sets for instructing the database management system to perform operations on data stored in one or more databases. In further embodiments the stored plurality of instruction sets comprise instruction sets previously entered by a plurality of different users via a plurality of interfaces the instruction sets for instructing the database management system to perform operations on data stored in one or more databases.

In some embodiments the operation on data stored in a database comprises one of or a combination of accessing modifying creating or deleting a database. In some embodiments the operation on data stored in a database comprises one of or a combination of accessing modifying creating or deleting a table of a database. In some embodiments the operation on data stored in a database comprises one of or a combination of accessing modifying creating or deleting of a row column or cell within a table of a database. In some embodiments the operation on data stored in a database comprises one of or a combination of accessing modifying creating or deleting a report view relation user account and or other objects in a DBMS.

In some aspects the present disclosure relates to a non transitory computer readable medium storing a program causing a computer to execute an interface for a database management system. The program may comprise an interface for a database management system configured to receive a first portion of a new instruction set for performing an operation on data stored in a database receive a second portion of the new instruction set for performing the operation on data stored in the database disassemble the first and the second portions of the new instruction set for comparing the first and the second portions with a stored plurality of instruction sets and select to display on the mobile device a first instruction set of the stored plurality of instruction sets responsive to a determination that the first instruction set includes portions that substantially match the first and the second portions of the new instruction set.

In some aspects the present disclosure relates to a non transitory computer readable medium storing a program causing a computer to execute a database management system. The program may comprise a database management system DBMS configured to store one or more instruction sets each instruction set of the stored one or more instruction sets including instructions for an operation to be performed on data stored in one or more databases receive from an interface for the DBMS a first portion of a new instruction set for performing an operation on data stored in a database and a second portion of the new instruction set for performing the operation on data stored in the database compare the first and the second portions of the new instruction set with instruction sets from the one or more stored instruction sets and transmit to the interface a first instruction set of the stored plurality of instruction sets in response to a determination that the first and the second portions of the new instruction set substantially match portions of the first instruction set.

In some aspects the present disclosure relates to a system accessed from a mobile device. The system may include a database management system DBMS . The DBMS may be configured to store one or more instruction sets each instruction set of the stored one or more instruction sets including instructions for an operation to be performed on data stored in one or more databases. The DBMS may be configured to receive from an interface for the DBMS a first portion of a new instruction set for performing an operation on data stored in a database and a second portion of the new instruction set for performing the operation on data stored in the database. The DBMS may also be configured to compare the first and the second portions of the new instruction set with instruction sets from the one or more stored instruction sets. The DBMS may further be configured to transmit to the interface a first instruction set of the stored plurality of instruction sets in response to a determination that the first and the second portions of the new instruction set substantially match portions of the first instruction set.

In some embodiments the DBMS is further configured to receive from the interface a third portion of the new instruction set for performing the operation on data stored in the database. In further embodiments the DBMS is also configured to compare the first the second and the third portions of the new instruction set with instruction sets from the one or more stored instruction sets and to transmit to the interface a second instruction set of the stored plurality of instruction sets responsive to a determination that the first second and third portions of the new instruction set substantially match portions of the second instruction set.

In some embodiments the DBMS is further configured to store an instruction set previously entered via the interface as an instruction set of the one or more stored instruction sets. In further embodiments the DBMS is further configured to execute the first instruction set responsive to a selection by the user. In some embodiments the DBMS is further configured transmit to the interface a second instruction set of the one or more stored instruction sets responsive to a determination that the first and the second portions of the new instruction set substantially match portions of the second instruction set.

In some embodiments the DBMS is further configured to transmit to the interface the first instruction set prior to receiving by the interface a final portion of the new instruction set the final portion following at least the first and the second portions of the new instruction set. In some embodiments the one or more stored instruction sets comprise instruction sets previously entered by one or more users via the interface to instruct the DBMS to perform operations on one or more databases. In yet further embodiments the one or more stored instruction sets comprise instruction sets previously entered by a plurality of different users via a plurality of interfaces to instruct the DBMS to perform operations on one or more databases.

In still some embodiments the operation on data stored in the database comprises one of or a combination of accessing modifying creating or deleting of an entry within a table of the database. In further embodiments the operation on data stored in the database comprises one of accessing modifying creating or deleting a table of the database. In still further embodiments the operation on data stored in the database comprises one of accessing modifying creating or deleting the database.

In certain aspects the present disclosure relates to systems and methods for using a mobile processing system for anticipating instructions of a user for implementation via a DBMS. The systems and methods may include and utilize an artificially intelligent database management system AI DBMS an interface through which a user can input AI DBMS operating instructions a disassembling unit for disassembling the AI DBMS operating instructions and a maintained list of the user s past operating instructions that includes various past AI DBMS instructions. The system may structure the user s past AI DBMS operating instructions as knowledge of the user s use of the AI DBMS and store them along with other stored prior AI DBMS operating instructions in a knowledgebase. The system may then anticipate the user s future operating intentions based on the knowledgebase and assemble the AI DBMS operating instructions based on the anticipating.

In some embodiments the AI DBMS comprises an underlying DBMS through which the user can perform one or more of accessing managing and or manipulating a data. In some embodiments performing operations on data in a database includes one or more of accessing managing and or manipulating data. For example accessing managing and or manipulating data may include one or more of or a combination of 1 accessing creating altering and deleting one or more a database within the underlying DBMS 2 accessing creating altering and deleting one or more a table within the one or more database 3 accessing creating altering deleting searching sorting and rearranging one or more a column a row and a data cell within the one or more table 4 accessing creating altering and deleting one or more a report view within the one or more the database 5 accessing creating altering and deleting one or more a relation among the one or more the table and or the report view and 6 accessing creating altering and deleting one or more a user account and its privileges.

In some embodiments the interface through which a user can input AI DBMS operating instructions includes a means of inputting one or more of alphanumeric acoustic tactile and visual operating instructions. In further embodiments the AI DBMS operating instructions includes a structured query language SQL statement. In some embodiments the disassembling of the AI DBMS operating instructions includes disassembling a structured query language SQL statement into its instruction set portions which may also be referred to as the instruction set portions. In some embodiments the maintaining a list of the user s past operating instructions includes a data structure for storing a specific number of the user s past operating instructions. In some embodiments structuring the user s past AI DBMS operating instructions as knowledge of the user s use of the AI DBMS includes creating a knowledge cell 1 in which some of the user s past AI DBMS operating instructions are copied into the knowledge cell s anticipatory operating instructions and 2 in which some of the user s past AI DBMS operating instructions are copied into the knowledge cell s comparative operating instructions. In some embodiments the entries in such knowledge cells may then be used for anticipating instruction sets which the user is intending to implement by comparing the user s recently implemented instruction sets against the stored prior instruction sets from the knowledge cells in the knowledgebase. In other embodiments the entries in such knowledge cells may then be used for anticipating the instruction set which the user is intending to input by comparing the instruction set portions being inputted against the stored prior instruction sets from the knowledge cells in the knowledgebase. In yet other embodiments the entries in such knowledge cells may then be used for anticipating the instruction set portions which the user is intending to input by comparing the instruction set portions being inputted against the stored prior instruction set portions from the knowledge cells in the knowledgebase.

In some embodiments storing the knowledge of the user s use of the AI DBMS instructions in a knowledgebase includes a data structure for storing the knowledge cells. The knowledgebase may include local or remote knowledgebases into which the instruction sets can be stored. In some embodiments anticipating of the user s operating intentions based on the knowledgebase information includes performing a substantial similarity comparison between the user s recently implemented operating instructions and the operating instructions in the knowledgebase. In other embodiments anticipating of the user s operating intentions based on the knowledgebase information includes performing a substantial similarity comparison between the user s recently inputted portions of an operating instruction and the operating instructions in the knowledgebase. In yet other embodiments anticipating of the user s operating intentions based on the knowledgebase information includes performing a substantial similarity comparison between the user s recently inputted portions of an operating instruction and the portions of operating instructions in the knowledgebase. In some embodiments the assembling AI DBMS operating instructions based on the anticipating includes assembling a structured query language SQL statement from its instruction set portions.

In some aspects the present disclosure relates to a non transient machine readable medium that stores executable instructions the executable instructions causing a machine to perform operations comprising defining an artificially intelligent database management system AI DBMS generating an interface through which a user can input AI DBMS operating instructions disassembling the AI DBMS operating instructions maintaining a list of the user s past operating instructions structuring the user s past AI DBMS operating instructions as knowledge of the user s use of the AI DBMS storing the knowledge of the user s use of the AI DBMS in a knowledgebase determining the user s intended AI DBMS operating instructions based on comparing the user s recent AI DBMS operating instructions and the data stored in the knowledgebase and assembling the intended AI DBMS operating instruction set based on the comparison.

Other features and advantages of the current disclosure will become apparent from the following description including the claims and drawings.

Like reference numerals in different figures indicate like elements. Horizontal or vertical . . . and other such indicia may be used to indicate additional instances of the same type of element. n m n m n m or other such indicia may represent any integers or sequential numbers that follow the sequence where they are indicated. Any of these indicia may be used interchangeably according to the context and space available.

The disclosed systems and methods of using an artificially intelligent DBMS and interfaces for mobile embedded and other computing devices both artificially intelligent DBMS and interfaces herein referred to individually or collectively as AI DBMS AI DBMS or Smart DBMS includes advanced features and functionalities to enable a user to operate a DBMS i.e. perform operations on data databases tables reports relations user accounts and or other objects or elements within a DBMS etc. using a mobile embedded or other computing device.

In some embodiments AI DBMS may include machine learning functionality enabling the AI DBMS to learn the user s uses of the DBMS and store this knowledge in a knowledgebase for a future operation. Then using this stored knowledge AI DBMS may anticipate the user s future operating intentions. These functionalities enable a user to realize the standard DBMS operations on a mobile embedded or other computing device as well as greatly extend the standard operations through enabling artificially intelligent DBMS operations that may require minimal or no user input.

Referring now to an embodiment of a computing device also referred to as the Mobile Device in which the features of the present invention may be implemented is illustrated. In brief overview devices or systems described herein may include functions algorithms hardware or software or a combination thereof that may be implemented or executed on any type and form of computing device such as a computer a mobile device a server a video gaming device a television device a GPS receiver a media player an embedded device or any other type and form of a computing device capable of performing the operations described herein. depicts a block diagram of a computing device which may include hardware software or a combination of hardware and software providing the structure on which the embodiments of the present disclosure are practiced. Computing device may include a central processing unit which may also be referred to as a main processor that may include one or more memory ports and one or more input output ports also referred to I O ports such as the I O ports A and B. Computing device may further include a main memory unit which may be connected to the remainder of the components of the computing device via a bus and or may be directly connected to the main processor via memory port . The computing device of a computing device may also include a visual display device such as a monitor projector or glasses a keyboard and or a pointing device such as a mouse interfaced with the remainder of the device via an I O control . Each computing device may also include additional optional elements such as one or more input output devices . Main processor may comprise or be interfaced with a cache memory . Storage may comprise memory which provides an operating system also referred to as OS additional software operating on the OS and data space in which additional data or information may be stored. Alternative memory device may be connected to the remaining components of the computing environment via bus . A network interface may also be interfaced with the bus and be used to communicate with external computing devices via an external network. Any or all of the described elements of the computing device may be directly or operatively connected with each other or with other additional elements as depicted on or using any other connection means known in the art in alternate embodiments.

Main processor includes any logic circuitry that responds to and processes instructions fetched from the main memory unit . Main processor may also include any combination of hardware and software for implementing and executing logic functions or algorithms. Main processor may include a single core or a multi core processor. Main processor may comprise any functionality for loading an operating system and operating any software thereon. In many embodiments the central processing unit is provided by a microprocessing or a processing unit such as for example Snapdragon processors produced by Qualcomm Inc. processors by Intel Corporation of Mountain View Calif. those manufactured by Motorola Corporation of Schaumburg Ill. those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor those manufactured by International Business Machines of White Plains N.Y. those manufactured by Advanced Micro Devices of Sunnyvale Calif. or any computing unit for performing similar functions. The computing device may be based on any of these processors or any other processor capable of operating as described herein whether on a mobile or embedded device or a larger more conventional machine.

Main memory unit may include one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor such as Static random access memory SRAM Flash memory Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDEC SRAM PC100 SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM or Ferroelectric RAM FRAM . The main memory may be based on any of the above described memory chips or any other available memory chips capable of operating as described herein. In some embodiments the main processor communicates with main memory via a system bus . In some embodiments of a computing device comprising computing device the processor communicates directly with main memory via a memory port .

Computing device may further include alternative memory such as an SD memory slot a USB memory stick an optical drive such as a CD ROM drive a CD R RW drive a DVD ROM drive or a BlueRay disc a hard drive or any other device that may include non volatile memory suitable for storing data or installing software and programs. Computing device may further include a storage device which may include any type and form of non volatile memory for storing an operating system OS which may include any type and form of Windows OS Mac OS Unix OS Linux OS Android OS iPhone OS mobile version of Windows OS or any other OS that may operate on the computing device . Computing device may also include software and or data space for storing additional data or information. In some embodiments an alternative memory may be used as the storage device . Additionally OS and or the software may be run from a bootable medium for example a flash drive a bootable CD such as KNOPPIX a bootable CD for GNU Linux that is available as a GNU Linux distribution from knoppix.net.

Computing device may include a network interface to interface to a Local Area Network LAN Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines wired or wireless connections LAN or WAN links i.e. 802.11 T1 T3 56 kb X.25 broadband connections e.g. ISDN Frame Relay ATM or some combination of any or all of the above. Network interface may include Bluetooth or WiFi capability. The network interface may comprise a built in network adapter network interface card PCMCIA network card card bus network adapter wireless network adapter Bluetooth adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein.

Still referring to I O devices may be present in various shapes and forms in the computing device . Input devices may include joysticks keyboards mice trackpads touchscreens trackballs microphones drawing tablets gloves video game components for inputting video game data or a video camera. Output devices may include video displays touchscreens speakers transceivers for sending and receiving data. I O devices may be controlled by an I O control . The I O control may control one or more I O devices such as a keyboard and a pointing device e.g. a joystick a mouse or an optical pen. I O control may also comprise an interface between an external detector such as a video camera or a microphone and the computing device. I O control may enable any type and form of a detecting device such as a video camera to be interfaced with other components of the computing device . Furthermore an I O device may also provide storage and or an alternative memory for the computing device. In still other embodiments the computing device may provide USB connections to receive handheld USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. of Los Alamitos Calif.

In some embodiments the computing environment may comprise or be connected to multiple display devices . Display devices may each be of the same or different type and or form. I O devices and or the I O control may comprise any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection and use of multiple display devices or multiple detection devices.

In one example computing device includes any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices or any I O devices such as video camera devices. In one embodiment a video adapter may comprise multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple displays . In other embodiments one or more of the display devices may be provided by one or more other computing devices such as computing devices connected to a remote computing device via a network.

In further embodiments an I O device may be a bridge between the system bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire 800 bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus.

Computing environment on the computing device may operate under the control of operating systems which may control scheduling of tasks and access to system resources. The computing device may be running any operating system including mobile device or desktop machine operating systems including Android OS iPhone OS Windows 8 OS or any other version of OS for running a computing device. For example with respect to operating systems the computing device may use different releases of the Unix and Linux operating systems any version of the Mac OS for Macintosh computers any embedded operating system any real time operating system any open source operating system any video gaming operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein. Typical operating systems include WINDOWS XP Windows 7 Windows 8 all of which are manufactured by Microsoft Corporation of Redmond Wash. MacOS iPhone OS manufactured by Apple Computer of Cupertino Calif. OS 2 manufactured by International Business Machines of Armonk N.Y. and Linux a freely available operating system distributed by Caldera Corp. of Salt Lake City Utah or any type and or form of a Unix operating system among others. Similarly any other operating systems by Android or Apple can be utilized just as those of the Microsoft.

In other embodiments the computing device may have any different combination of processors operating systems and input output devices consistent with the device s purpose and structure. For example in one embodiment the computing device includes a Snapdragon by Qualcomm Inc. or Tegra processors by nVidia or any other mobile device processor or a microprocessor for a similar application. In this embodiment the smartphone device may be operated under the control of the Android iPhone OS PalmOS or any other operating system of a similar purpose. The device may then also include a stylus input device as well as a five way navigator device. In another example the computing device includes a Wii video game console released by Nintendo Co. operating an es operating system. In this embodiment the I O devices may include a video camera or an infrared camera for recording or tracking movements of a player or a participant of a Wii video game. Other I O devices may include a joystick a keyboard or an RF wireless remote control device. Similarly the computing device may be tailored to any workstation mobile or desktop computer laptop or notebook computer Smartphone device or tablet server handheld computer gaming device embedded device or any other computer or computing product or other type and form of computing or telecommunications device and that has sufficient processor power and memory capacity to perform the operations described herein.

Still referring to from a perspective of a general architecture and variations of the underlying operating environment in which the features of the present disclosure may be implemented the current disclosure is not limited to the use with the configurations shown in the figures or described in the specification and it may find applicability in any operating computing communication electronic and or processing environment. The environment may include various different model infrastructures such as web services distributed computing grid computing and other infrastructures.

Various implementations of the methods systems and techniques described herein can be realized in digital electronic circuitry integrated circuitry specially designed application specific integrated circuits ASICs field programmable gate arrays FPGAs computer hardware firmware software virtual machines and or combinations thereof including their structural logical and or physical equivalents. The various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

A computer program also known as program software software application script or code includes machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in a low level assembly machine language. Any language used may be a compiled or an interpreted language. A computer program may be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program may be stored in a portion of a file that holds other programs or data i.e. one or more scripts stored in a markup language document etc. in a single file dedicated to the program in question or in multiple coordinated files i.e. files that store one or more modules sub programs or portions of code etc. . A computer program may be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The methods systems and techniques described herein may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A computing device may be embedded in another device such as a tablet computer a mobile telephone a personal digital assistant PDA a media player an audio or video player a Global Positioning System GPS receiver a game console a portable storage device i.e. a USB flash drive etc. gateway a router a hub a digital video recorder a set top box an automobile entertainment system an automobile navigation system a television device a residential gateway a refrigerator a washing machine a factory automation device an assembly line device a factory floor monitoring device to name just a few. The processor and the memory may be supplemented by or incorporated in special purpose logic circuitry.

As used herein the terms machine readable medium and computer readable medium refer to any computer program product apparatus and or device used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor. A machine readable medium may include both a volatile and non volatile medium a removable and non removable medium a communication medium and a storage medium. A communication medium may include computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any other form of information delivery medium known in the art.

The methods systems and techniques described herein can be implemented in a computing system that includes a back end component i.e. a data server etc. or that includes a middleware component i.e. an application server etc. or that includes a front end component i.e. a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the methods systems and techniques described herein etc. or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication i.e. a communication network etc. . Examples of communication networks include the Internet an intranet an extranet a local area network LAN a wide area network WAN a personal area network PAN a home area network HAN a campus area network CAN a metropolitan area network MAN a global area network GAN a storage area network SAN virtual network a virtual private network VPN Bluetooth network a wireless network a wireless LAN a radio network a HomePNA a power line communication network a G.hn network an optical fiber network an Ethernet network an active networking network a client server network a peer to peer network a bus network a star network a ring network a mesh network a star bus network a tree network a hierarchical topology network or any type of network known in the art.

Any of the files shown in the figures or described in the specification may reside in any repository accessible by an implementation of the methods systems and techniques described herein. In each instance where a specific file or file type is mentioned other files file types or formats may be substituted.

Where a reference to a data structure is used herein it should be understood that any variety of data structures may be used such as for example array list linked list doubly linked list queue tree heap graph map grid matrix multi dimensional matrix table database DBMS file and or any other type or form of a data structure.

Where a reference to a storing data object item or any element is used herein it should be understood that any data object item or element stored may be a pointer to the data object item or any element stored somewhere else.

Referring to an embodiment of a Mobile Device implementing the AI DBMS is illustrated. User may operate a Mobile Device which Mobile Device may further include Core Program Underlying DBMS DBMS Artificial Intelligence the Input Interface the Keyboard the Output Interface the Display the Memory and the Physical Storage Medium . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

To clarify the context of the embodiment illustrated by the User may utilize AI DBMS on a Mobile Device . Mobile Device may include the Core Program that may accept the User s operating instructions and may issue corresponding DBMS Commands to access manage and or manipulate i.e. access store create add delete modify or rearrange data databases tables reports relations user accounts and or other DBMS objects or elements etc. the Underlying DBMS . DBMS command may be any instruction set operation Structured Query Language SQL statement computer command instruction or any other command understood by a DBMS and these terms may be used interchangeably herein. Mobile Device may include the Underlying DBMS that receives and executes an instruction set and returns execution results. The User may interact with the Core Program through inputting operating instructions via Keyboard and Input Interface or another input device and its associated interface. User may also interact with the Core Program through viewing results via Display and Output Interface or another output device and its associated interface. DBMS Artificial Intelligence may provide the functionality of learning i.e. recording etc. the User s use of the Underlying DBMS structuring this use into usable knowledge storing it into a knowledgebase for future use and anticipating the User s future operating intentions. Mobile Device may include the Memory as temporary storage and the Physical Storage Medium as permanent storage.

Mobile Device may be any mobile computer a mobile phone a Smartphone i.e. iPhone Windows Phone Blackberry Android phone etc. a tablet a personal digital assistant PDA or another similar type of mobile device capable of implementating the functionalities described herein. The main processor of the Mobile Device may include hardware and software for executing instructions and processing data operatively coupled with aforementioned memory for storing the instructions and data. The memory may also include applications such as AI DBMS applications and functions discussed herein. The main processor of the Mobile Device may also access a computer readable medium including a volatile and nonvolatile medium a removable and non removable medium a communication medium a storage medium and other similar type of computer readable medium. The processor may be operatively coupled with an output device such as a Liquid Crystal Display LCD to show information to the user. An input device such as a key pad keyboard and or touch screen may also be operatively coupled with the processor to enable the user to input instructions. The memory may store software that can provide functionality when executed by the processor. The software may include a user interface that enables a user to interact with the mobile device and a mobile operating system that provides system functionality. A modern mobile operating system combines the features of a personal computer operating system with high resolution display touchscreen cellular network connectivity bluetooth WiFi GPS mobile navigation microphone camera video camera voice recorder speech recognition music player near field communication PDA and other features and applications. Examples of a mobile operating system include iOS Android Windows Mobile BlackBerry OS Symbian OS Palm OS and other mobile operating systems.

Mobile Device may also be or include an embedded device which may be any device or system with a dedicated function within a larger device or system. Embedded systems may range from the simplest ones dedicated to one task with no user interfaces to complex ones with advanced user interfaces that resemble modern desktop computer systems. Simple embedded devices use buttons light emitting diodes LEDs graphic or character LCDs with a simple menu system. More sophisticated devices may use a graphical screen with touch sensing or screen edge buttons where the meaning of the buttons may change with the screen. Examples of devices that include an embedded device may include a gaming device a media player a digital still or video camera a pager a television device a set top box a personal navigation device a global positioning system GPS receiver a digital watch a DVD player a printer a microwave oven a washing machine a dishwasher a thermostat a automobile a factory controller a telephone a router a network bridge or another similar type of embedded device. The embedded device may include one or more elements described in the Mobile Device above such as the main processor any of the aforementioned memory the network interface computer readable medium the output device the input device the user interface the software the operating system etc. Examples of an operating system for the embedded device include MicroC OS II QNX VxWorks eCos TinyOS Windows Embedded Embedded Linux and other embedded operating systems.

Other computing device may be any computing device including a traditional computing device with all of its processing storage communication networking input and output interfacing and other functionalities. Examples of the traditional computing device may include a personal desktop computer a server a mainframe computer or another similar type of the traditional computing device. The traditional computing device may include one or more elements described in the Mobile Device above such as the main processor any of the aforementioned memory the network interface computer readable medium the output device the input device the user interface the software the operating system etc. Examples of an operating system for a traditional computing device include Windows MacOS Linux Unix and other similar operating systems.

AI DBMS included in the Mobile Device may be any software hardware or a combination of software and hardware for providing machine learning anticipating and or other functionalities described herein. Similarly AI DBMS may be any hardware software or a combination of hardware and software for providing an interface with a DBMS. In some embodiments AI DBMS may include a software application or a function acting as an interface between a user and a DBMS. In further embodiments AI DBMS may include a software application or a function for an interface with one or more databases as a part of a general DBMS operating and providing one or more databases. For example AI DBMS may be executed by the processor that may accept a user s instructions transmit them to the processor for execution determine through processing that the user s intended instruction set for operating a DBMS is a particular instruction set and transmit results back to the user including the determined particular instruction set to be presented to the user.

In some embodiments AI DBMS may be implemented as a Java Micro Edition ME Java Standard Edition SE or other Java Editions application or program. Java ME is specifically designed for mobile and embedded devices and provides a robust and flexible environment for applications with flexible user interfaces robust security built in network protocols powerful application programming interfaces DBMS connectivity and interfacing functionality file manipulation capabilities and support for networked and offline applications. Applications based on Java ME are portable across many devices yet leverage each device s native capabilities.

In another embodiment AI DBMS may be a Java SE application as the traditional computing devices support it and more mobile and embedded devices continue to support it. Java SE supports the feature sets of most Smartphones and a broad range of high end connected devices while still fitting within their resource constraints. Java platforms include one or more basic application programming interfaces APIs and virtual machine features that comprise a runtime environment for software applications. The use of Java platforms may provide core application functionality for software applications such as AI DBMS that may be executed on mobile embedded and other computing devices.

AI DBMS may be a software application that includes a Java program written for a Java platform and is an example of an application that may execute on a mobile embedded and other computing device. A Java program or application may provide a wide range of user level functionality that may be used in applications such as AI DBMS including but not limited to providing an Internet browser to a user displaying text and graphics playing and recording audio media displaying and recording visual media communicating with another mobile device and other functionality. AI DBMS is programming language platform and operating system independent. Besides the platforms and operating systems previously described programming languages additional to Java may include C C Cobol Java Script Tcl Visual Basic Pascal VB Script Perl PHP and other programming languages or functions capable of implementing the functionalities described herein.

In some embodiments AI DBMS may be implemented as a Xlet within the Java platform. A Xlet is a Java applet or application configured to execute on a mobile embedded and other computing device that may be a part of the Java TV specification and may use a Personal Basis Profile PBP of a Connected Device Configuration CDC for the Java ME platform. A Xlet may be managed by a special purpose application management software built into the mobile embedded and other computing device.

Core Program may be any hardware software or a combination of hardware and software directing and controlling the flow of instructions and data among the elements of AI DBMS system. Core Program may be directly or operatively coupled with Underlying DBMS DBMS Artificial Intelligence Input Interface Output Interface and or other elements of the AI DBMS system to produce desired results. Core Program may be initiated by the User or it may be initiated automatically when the Mobile Device turns on. Core Program may run continuously as a deamon or it may run only as long as the User needs it.

Core program as shown in an embodiment illustrated in may be directly or operatively connected to the Underlying DBMS through the ODBC JDBC API the ODBC JDBC Bridge and or the Native ODBC JDBC Driver in one example. The inter process interaction may occur on a single mobile embedded or other computing device or between two or more mobile embedded or other computing devices over a network. Other elements or types of connections such as a specialized database interface a socket an operating system command a global function a local function a direct command etc. may be included or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate implementations of the interaction between the Core Program and the Underlying DBMS .

Upon connecting to the Underlying DBMS the Core Program may transmit to the Underlying DBMS an instruction set understood by the Underlying DBMS . Subsequently the Underlying DBMS may perform an operation that corresponds to the instruction set and may transmit results to the Core Program for presentation to the User . In the case that the instruction set used is a SQL statement it would be platform independent and supported by a vast majority of commercial and open source DBMSs. It should be clear to one of ordinary skill in the art that the instruction set i.e. SQL statement etc. discussed herein as an example may be replaced by any type or form of instruction set or statement in any other language or script as needed to conform to a given DBMS.

Input Interface may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for processing input events of the Keyboard or other input devices for use by the Core Program or other elements of the current disclosure. The Input Interface may be Java keyboard listener keypad listener touch screen listener mouse listener trackball listener any device driver i.e. audio video keyboard mouse or other driver speech recognizer video recognizer or any other input interface. Input Interface may be or comprise any functionality of I O control keyboard and or I O device .

Keyboard may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for inputting letters numbers and or symbols into the Mobile Device . Keyboard may be suited or specialized for a mobile device tablet or a Smartphone. Keyboard may be or comprise any functionality of keyboard I O device and or I O control . In one implementation Keyboard may be an element of the current disclosure through which the User inputs operating instructions by pressing keys or buttons. Other input devices for detecting user input may be utilized in place of the Keyboard such as keypad touch screen external keyboard mouse trackball microphone video or still camera tactile input device or any other input device.

Output Interface may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for processing output from the Core Program or other elements of the current disclosure for presentation to a user. In some embodiments Output Interface may include functions and algorithms for processing the results from the Core Program for viewing by the User . The Output Interface may be a Java graphical user interface an acoustical output interface tactile output interface any device driver i.e. audio video or other driver or any other output interface. Output interface may be or comprise any functionality of I O control display devices and or I O device .

Display may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for displaying information to a user. In some embodiments Display may comprise functions and algorithms for showing AI DBMS results to the User . Other output devices for conveying information may be utilized such as a projector an external monitor a speaker tactile output device or any other output device. Display may be or comprise any functionality of display devices I O control and or I O device .

Memory may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing data or information in an electronic format. Memory may be or comprise any functionality of storage cache and or main memory . In some embodiments memory may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for temporarily storing programs and or data currently running on the Mobile Device .

Physical storage medium may also comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing data and information in an electronic format. In one implementation the Physical Storage Medium may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for permanently storing the Core Program Underlying DBMS data files and any supporting data structures and or other needed items. The Physical Storage Medium may be a hard drive a microSD card a flash drive or any other type of physical storage medium. Physical storage medium may be or comprise any functionality of storage .

Referring to Underlying DBMS may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing managing and or manipulating data and or any supporting data structures i.e. databases tables etc. . Underlying DBMS may comprise software functionality for performing operations which a User of the Underlying DBMS may want to perform.

As shown in an embodiment illustrated in Underlying DBMS may include data generally organized in Databases . The Database may be a collection of data generally organized in Tables . The term database when used casually often refers to a DBMS and the data it contains as well as the supporting data structures such as databases tables reports relations user accounts and their privileges etc. Underlying DBMS may be a relational DBMS in which case the Tables and or Reports Views may be linked and Relations among the Tables and or Reports Views may be defined. Furthermore Underlying DBMS may be or include any data structure or system that may store any type or form of data on which data operations described herein may be performed.

Underlying DBMS may include instruction sets in the form of structured query language SQL capabilities. SQL is a computer language used to access manage and manipulate data in DBMSs although other similar languages having similar capabilities may be utilized as needed. An example of a SQL statement is as follows SELECT col1 col2 col3 . . . FROM tbl1 tbl2 tbl3 . . . ORDER BY col1 col2 col3 . . . . In this SQL statement col1 col2 col3 . . . represents the Columns to be selected tbl1 tbl2 tbl3 . . . represents the names of Tables from which to obtain data and col1 col2 col3 . . . represents the Columns by which to sort the resulting Report View .

In some embodiments User may not need to input instruction sets such as SQL statements to operate a DBMS. User may utilize software application with a graphical user interface or program that generates instruction sets understood by the Underlying DBMS . For example a report generating program i.e. Chrystal Reports etc. or a visual DBMS application i.e. Microsoft Access etc. may provide input fields selectable lists drop down menus buttons or other graphical elements to enable a User to create instruction sets in a point and click manner without ever typing SQL code for example.

The User may access manage and or manipulate the Underlying DBMS and the Underlying DBMS may store manage and or manipulate data and or supporting data structures responsive to the User . User s accessing managing and or manipulating and or Underlying DBMS s storing managing and or manipulating data and or supporting data structures may include 1 storing accessing creating altering and or deleting one or more Database within the Underlying DBMS 2 storing accessing creating altering and or deleting one or more Table within the one or more Database 3 storing accessing creating altering deleting searching sorting and or rearranging one or more Column Row and or Data Cell generally also referred to as data within the one or more Table 4 storing accessing creating altering and or deleting one or more Report View within the one or more Database 5 storing accessing creating altering and or deleting one or more Relation among the one or more Table and or Report View 6 storing accessing creating altering and or deleting one or more User Account and its privileges and 7 other operations.

Referring to an embodiment of a typical SQL compliant DBMS is illustrated where the Underlying DBMS may include the following process flow elements the Query Processing which may include Precompiler Parser and Execution Engine . Transaction Management also included in this implementation may comprise Transaction Manager and Log Manager . Storage Management also included in Underlying DBMS in this implementation may comprise Buffer Manager and Storage Manager . Any of the aforementioned components may be stored on or connected to either directly or operatively memory and or physical storage medium .

Precompiler In some embodiments Precompiler may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for extracting the relevant SQL statement s or other DBMS command s embedded in the Core Program s instruction set or for translating the instruction set into corresponding SQL statement s or other DBMS command s . The instruction may come from an API or directly from an application program such as the Core Program . The Precompiler may process Core Program s instruction set into SQL statement or any other DBMS command format that the Underlying DBMS understands.

Parser In some embodiments Parser may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for parsing the SQL statement s or other DBMS command s that were deciphered from the Core Program s instruction set. At this stage the objective of the Parser may be to create a parse tree structure based on the SQL statement s or other DBMS command s so that it may be easily understood by the other elements later in the Underlying DBMS execution flow.

Execution Engine In some embodiments Execution Engine may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for executing the SQL statement s or other DBMS command s that were deciphered from the Core Program s instruction set against a Database and or any of its components to perform an operation on a Database and or any of its components. For example this operation may involve 1 accessing adding modifying or deleting a Database 2 accessing adding modifying or deleting a Table 3 accessing adding modifying or deleting any of the Columns Rows or Data Cells of the Tables in the Database and or 4 any other similar operation normally implemented by a DBMS. When executing SQL statement s or other DBMS command s a plurality of lower level operations may generally be performed by the Underlying DBMS in a predetermined order including issuing a read or write request to the Physical Storage Medium .

Transaction Manager In some embodiments Transaction Manager may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for ensuring that a transaction is executed properly in accordance with particular rules of the DBMS SQL and or any other applicable system rules. The transaction is a single unit of work that has one or more SQL statement s or other DBMS command s in it. Transaction Manager may also include functionality for resolving any deadlock situations that may occur during the process such as for example during a situation when two transactions cannot continue because they each have some data that the other needs to proceed.

Log Manager In some embodiments Log Manager may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for logging every operation executed by the Underlying DBMS . It may do so by storing a log on the Physical Storage Medium .

Buffer Manager In some embodiments Buffer Manager may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for allocating and managing the Memory . Buffer Manager may include functionality to allocate resources for accessing managing and or manipulating data. Buffer Manager may take in formatted requests and decide how much Memory to allocate per buffer and how many buffers to allocate per request.

Storage Manager In some embodiments Storage Manager may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for retrieving and storing data in memory. For example Storage Manager may include functionality at the lowest level to make requests through the underlying Physical Storage Medium controller not shown i.e. hard disk controller etc. or the operating system to retrieve data from or store data to the Physical Storage Medium . The Physical Storage Medium controller may be a device configured to provide an interface for retrieving and storing data and any supporting data structures in physical files.

Other additional elements such as data definition language DDL compiler query preprocessor security manager integration manager query optimizer recovery manager concurrency manager control manager resource manager communications manager lock manager page and cache manager etc. may be included or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate implementations of the Underlying DBMS . Also some features may be included in alternate implementations of the Underlying DBMS such as maintaining the integrity and security of stored data indices that provide fast access to data items that hold particular values statistical data that store statistical information about the data etc.

The current disclosure is independent of the type of Underlying DBMS it uses that may include any DBMS that can be executed on the operating environments previously described such as Advantage Database Server EffiProz ElevateDB Embedded InnoDB Empress Embedded Database Extensible Storage Engine eXtremeDB Firebird Embedded HSQLDB Informix Dynamic Server InfinityDB InterBase ITTIA DB NexusDB Raima Database Manager ScimoreDB SolidDB SQLite SQL Server Compact Valentina DB VistaDB Oracle Microsoft SQL Server MySQL Informix Sybase and other DBMSs. Underlying DBMS may also be a single database multiple databases a single table multiple tables a single file multiple files a file system a single data structure multiple data structures a data structure system a single system multiple systems or any other data structure or a combination of the aforementioned data structures for storing managing and or manipulating digital data.

Referring to DBMS Artificial Intelligence may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for learning the User s past operating instructions and or anticipating the User s future operating intentions. DBMS Artificial intelligence may comprise functions and algorithms for determining one or more instruction sets or sequences of instruction sets which the user may be interested in running. DBMS Artificial intelligence may also include functions and algorithms for identifying a particular number of selected instruction sets to be presented to the user as selections of the instruction sets or sequences of instruction sets which the system has determined the user may want to execute. The particular number of instruction sets to be presented may vary based on the determinations of the DBMS Artificial Intelligence or it may alternatively be predetermined. The DBMS Artificial Intelligence may be directly or operatively connected to the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

DBMS Artificial Intelligence may include a Command Disassembler an Operation List a Knowledge Structuring Unit a Knowledgebase a Decision making Unit a User Confirmation Unit and a Command Assembler . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to Command Disassembler may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for disassembling an Instruction Set into its Instruction Set Portions also referred to as Inst Set Por or subsets of the Instruction Set . Command Disassembler may be directly or operatively connected to the Core Program and the Operation List and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Instruction Set may be a SQL Statement any DBMS command any computer command any instruction or instruction set used to access manage and or manipulate i.e. add delete change etc. data and the supporting data structures i.e. databases tables relations user accounts etc. in the Underlying DBMS . Instruction Set may be issued in structured query language SQL a language utilized by many standard DBMSs or in any programming language understood by the Underlying DBMS . Instruction Set may comprise a number of commands keywords instructions operators variables values objects functions and or other components for performing a particular operation.

When an Instruction Set such as the one in is processed by Command Disassembler the Instruction Set may be divided or split into one or more Instruction Set Portions which Instruction Set Portions may then be stored in an Operation . The Operation may be any data structure i.e. array list linked list doubly linked list queue table file etc. comprising one or more data fields that may store Instruction Set Portions of a particular Instruction Set . Therefore an Instruction Set may correspond to a particular Operation identified by that particular Instruction Set and vice versa. Also the Instruction Set may be referred to as the Operation and vice versa as this Operation may be a representation of this particular Instruction Set . In effect an Instruction Set and its corresponding Operation may be logical equivalents where the Operation may comprise Instruction Set s Instruction Set Portions and Extra Info about the Instruction Set and or other relevant extra info. Therefore Instruction Set and Operation may be used interchangeably herein.

Instruction Set Portions may comprise particular commands keywords i.e. SELECT FROM INSERT etc. instructions operators i.e. etc. variables values objects i.e. table database report view etc. functions i.e. FIRST MIN MAX etc. and or other components some or all of these components may be used interchangeably herein for performing or specifying a particular portion of the Instruction Set . For example an Instruction Set Portion may include a keyword SELECT to indicate a type of operation to perform. Keywords FROM and WHERE may also be used to facilitate the operation and identify the data on which a particular command is to be performed. In addition keywords may include a particular variable such as a particular Database name or a particular Row or Column within a particular Table or a particular data stored in a particular location in the Database .

Command Disassembler may comprise functions and or algorithms for identifying and recognizing specific commands keywords instructions operators variables values objects functions and or other components included within an Instruction Set . In some embodiments the specific commands keywords instructions operators variables values objects functions and or other components may be included in a lexicon stored in a data structure i.e. a list array table etc. containing all possible or most used commands keywords instructions operators variables values objects functions and or other components that may generally be used in SQL or other DBMS language used and or the ones that may specifically be used in the Underlying DBMS . This data structure may be predefined and may change as the objects or other elements within the Underlying DBMS change. In one example in response to changing the name of a table within a database the data structure would update this table s name in itself so Command Disassembler may recognize the updated table name as an Instruction Set Portion in its next run. In other embodiments the data structure containing the lexicon may be created on fly or as needed by the AI DBMS system by 1 reading the Underlying DBMS objects or other elements meta data data dictionary and or 2 including other typical Instruction Set Portions i.e. SQL or other language keywords operators functions etc. used in DBMSs.

Still referring to in one example the keyword SELECT is an Instruction Set Portion of the Instruction Set and therefore it is extracted and stored in a data field of the Operation . The next Instruction Set Portion that is extracted and stored is the Col1 Col2 . . . representing the columns to be selected. The next Instruction Set Portion that is extracted and stored is the keyword FROM . The next Instruction Set Portion that is extracted and stored is the Tbl1 Tbl2 . . . representing the names of tables from which to obtain data. The next Instruction Set Portion that is extracted and stored is the keyword WHERE . The next Instruction Set Portion that is extracted and stored is the Col1 Operator1 Val1 AND Col2 Operator2 Val2 . . . representing columns operators and values used in restricting output results. The next Instruction Set Portion that is extracted and stored is the keyword ORDER BY . The next Instruction Set Portion that is extracted and stored is the Col1 Col2 . . . representing columns by which to sort the resulting data set. The next Instruction Set Portion that is extracted and stored is the keyword GROUP BY . The next Instruction Set Portion that is extracted and stored in a data field of the Operation is the Col1 Col2 . . . representing columns by which to group the resulting data set. Other Instruction Set Portions not shown may be utilized in alternate embodiments such as functions including 1 MIN MAX SUM FIRST LAST etc. 2 operators including OR LESS THAN GREATER THAN etc. 3 objects including databases relations user accounts privileges etc. and 4 other Instruction Set Portions including all their variations.

Various types of Instruction Sets will have different Instruction Set Portions stored in Operation data fields. For example INSERT type of Instruction Set would not have SELECT FROM WHERE ORDER BY and GROUP BY keywords and their associated objects and operators. Instead INSERT type of Instruction Set would have different keywords objects and operators such as INSERT and INTO keywords and their associated objects and operators.

In addition to Instruction Set s Instruction Set Portions extra information or Extra Info such as a time stamp may also be stored in the data fields within the Operation . Time stamp of when the Instruction Set is executed may be useful for anticipation of the User s future operating intentions related to a specific time frame. Other Extra Info may be included in the Operation such as user specific information group user information any context information such as the type of business for which the AI DBMS is used the type of computing device executing the AI DBMS the type of user novice moderate skilled expert and other context information version of the Underlying DBMS etc. to provide as much information as possible for best anticipation of the User s future operating intentions. Also Command Disassembler may be more detailed in its disassembling of the Instruction Set in which case every keyword operator value and other portions of the Instruction Set may be captured and stored as an Instruction Set Portion in the Operation . In general when the Instruction Set is disassembled into its Instruction Set Portions and stored in the Operation it becomes easier to compare to other Instruction Sets or Operations .

Referring to Operation List Instruction Set List also referred to as Operation List or Instruction Set List may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing one or more Operations and or their corresponding Instruction Sets . In some embodiments Operation List may include any data structure i.e. array list linked list table etc. that may store one or more Operations and or their corresponding Instruction Sets . The Operation List may be directly or operatively connected to the Command Disassembler Knowledge Structuring Unit and the Decision making Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Operation List may receive Operations or Instruction Sets from the Command Disassembler and store a number of Operations or Instruction Sets that were most recently used or implemented by the system. The number of Operations or Instruction Sets most recently used or implemented may vary depending on the embodiments. For example in some embodiments anywhere between 1 and 10000 most recently used or implemented Operations or Instruction Sets may be stored. In some embodiments the number of stored Operations or Instruction Sets is between 2 and 10 such as for example 2 5 6 or 9. In other embodiments the number of Operations or Instruction Sets is between 10 and 50 such as for example 12 15 20 30 40 or 50 Operations or Instruction Sets . In further embodiments the number of Operations or Instruction Sets stored is between 50 and 200 such as for example 50 70 80 100 130 180 or 200 Operations or Instruction Sets . In further embodiments the number of Operations or Instruction Sets stored is between 200 and 10000 such as for example 500 1000 3000 5000 8000 or 10000. The number of Operations or Instruction Sets may be any number even greater than 1000. The number of most recently used or implemented Operations or Instruction Sets stored may be even greater than 10000 as one of ordinary skill in the art would recognize that the number of stored Operations or Instruction Sets may be any number that may be stored in any memory or storage described herein.

In one embodiment in which the last nine Operations or Instruction Sets are stored in the Operation List Operations or Instruction Sets may be identified such that the current Operation or Instruction Set is identified as Operation n the most recent Operation or Instruction Set prior to the current may be identified as Operation n 1 and so on until the least most recent Operation or Instruction Set being stored is labeled as Operation n 8. In such embodiments each time the Operation List receives another new Operation or Instruction Set from the Command Disassembler it may erase the least recent Operation or Instruction Set such as the Operation n 8 and insert the current Operation or Instruction Set received as Operation n. Naturally all the most recently used or implemented Operations or Instruction Sets that are stored in this list or queue may be shifted by one count further towards Operation n 8. This way the system may maintain a queue of stored most recently used or implemented Operations or Instruction Sets where the queue may include any number of stored Operations or Instruction Sets as previously described.

In one example illustrated in the Operation List may represent a hypothetical situation where the User may create a table and perform two repetitions of INSERT UPDATE DELETE and SELECT type operations.

Referring to Knowledge Structuring Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for structuring the knowledge of the User s use of Operations or Instruction Sets for anticipating future Operations or Instruction Sets . Knowledge Structuring Unit may include functions and algorithms for structuring the stored sequence i.e. Operation List of User s Operations or Instruction Sets into usable knowledge for future anticipating of the User s operating intentions. Knowledge Structuring Unit may include the functionality to produce any variations of Operations or Instruction Sets that may ever be used by a User . Knowledge Structuring Unit may be directly or operatively connected to the Operation List and Knowledgebase and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In some embodiments Knowledge Structuring Unit may receive the current Operation List and may create a Knowledge Cell by copying for example Operation n from the Operation List into Operation n 4 of the Knowledge Cell by copying Operation n 1 from the Operation List into Operation n 3 of the Knowledge Cell by copying Operation n 2 from the Operation List into Operation n 2 of the Knowledge Cell and so forth. Knowledge Cell may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing a recorded sequence of the User s operating instructions i.e. Operations or Instruction Sets . In effect when a Knowledge Cell is created it may include any data structure i.e. array list linked list table etc. that may store a recorded sequence of the User s operating instructions i.e. Operations or Instruction Sets where for example Operation n Operation n 1 Operation n 2 Operation n 3 and Operation n 4 may later be used for comparison with the then User s current and recent operating instructions and Operation n 1 Operation n 2 Operation n 3 and Operation n 4 may later be used for anticipation of the User s future operating intentions i.e. future Operations or Instruction Sets . In some embodiments Operations or Instruction Sets within the Knowledge Cell with an order number greater than n may be anticipatory and the rest of the Operations or Instruction Sets may be comparative although this particular split may differ in alternate embodiments. Any number of comparative and any number of anticipatory Operations or Instruction Sets may be included in a Knowledge Cell and any number of Knowledge Cells may be used in the AI DBMS system. In one embodiment one long Knowledge Cell may be used in which case comparisons of Operations or Instruction Sets may be performed in a traversing pattern as explained below. Also as indicated by the up and down vertical dotted arrows the copying of Operation n from the Operation List into the Knowledge Cell may start at any Operation n m through Operation n m of the Knowledge Cell . This way the number of comparative and anticipatory Operations or Instruction Sets may differ and they can be determined either by the user or the system itself. For example a Knowledge Cell may include only one anticipatory Operation or Instruction Set in the case where the copying of the Operation List into the Knowledge Cell starts with copying Operation n of the Operation List into Operation n 1 of the Knowledge Cell . In another example a Knowledge Cell may include four anticipatory Operations or Instruction Sets in the case where the copying of the Operation List into the Knowledge Cell starts with copying Operation n of the Operation List into Operation n 4 of the Knowledge Cell .

Referring to Knowledgebase may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing a plurality of Operations or Instruction Sets . Knowledgebase may include functions and algorithms for storing a plurality of Operations or Instruction Sets generally structured into one or more Knowledge Cells although Operations or Instruction Sets may be stored directly in the Knowledgebase and need not be structured into or use Knowledge Cells . Knowledgebase may include the functionality for storing Knowledge Cells or Operations or Instruction Sets in a particular order to enable easier access and usage of stored data. Knowledgebase may also include the functionality for managing and or modifying and or providing Knowledge Cells or Operations or Instruction Sets as necessary. Knowledgebase may comprise the functionality to store and manage all the Knowledge Cells or Operations or Instruction Sets that were used or implemented by any users in the past. Knowledgebase may store any variations of Knowledge Cells or Operations or Instruction Sets that may ever be used by a user. Knowledgebase may be directly or operatively connected to the Knowledge Structuring Unit and the Decision making Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

As shown in Knowledgebase may include a table a vertical representation of records in a table is shown although one or more tables databases files or any other data structures or data repositories may be used. Knowledgebase may include an entire DBMS dedicated to Knowledgebase functionalities in some embodiments. For example in the case of a single table being used as the Knowledgebase a Knowledge Cell may be stored within the table where each of the Operations or Instruction Sets of the Knowledge Cell may be a record with a common Knowledge Cell Identifier ID that signifies its association with its parent Knowledge Cell . Each record within the table may contain data fields i.e. Instruction Set Portions of the corresponding Operation or Instruction Set . Later in the process a simple call to the table to read all records with a specific Knowledge Cell ID would reconstruct the Knowledge Cell . Knowledgebase may reside within the Underlying DBMS in some embodiments or it may reside anywhere outside the Underlying DBMS in other embodiments.

In some embodiments Operations or Instruction Sets may be stored directly within the Knowledgebase without using Knowledge Cell as the intermediary data structure. In these embodiments Operations or Instruction Sets may be stored in one or more sequences i.e. tables lists arrays etc. of the Knowledgebase . Furthermore comparisons of Operations or Instruction Sets later described may be performed by traversing the one or more sequences of Operations or Instruction Sets to find a match. In one example Knowledgebase may include all of User s Operations or Instruction Sets in a single long sequence i.e. table list array etc. or it may record User s Operations or Instruction Sets in daily weekly monthly yearly or other periodic sequences i.e. monthly tables monthly lists monthly arrays etc. in another example. In the case of a single long sequence for example the comparisons of Operations or Instruction Sets later described would compare Operations or Instruction Sets in the current Operation List with subsequences of the single long sequence in incremental or other traversing pattern. The incremental traversing pattern of comparison may start from one of the ends of the single long sequence and move the comparison subsequence up or down the list one incremental Operation or Instruction Set at a time. Other traversing patterns or algorithms may be employed such as starting from the middle of the sequence and subdividing the resulting sub sequences in a recursive pattern or any other traversing pattern or algorithm.

Referring to the Decision making Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for anticipating the User s future operating intentions i.e. future Operations or Instruction Sets . Decision making Unit may comprise algorithms functions rules and logic to enable the system to determine which Operation or Instruction Set the User may intend or is most likely to use or implement. Similarly Decision making Unit may comprise the functionality to determine which Operation or Instruction Set the user is second most likely to use or implement which Operation or Instruction Set the user is third most likely to use or implement and so on. Furthermore Decision making Unit may comprise the functionality to determine the sequence or order in which the user may intend or is most likely to use or implement Operations or Instruction Sets . The Decision making Unit may be directly or operatively connected to the Operation List and the Knowledgebase and or other elements to facilitate the overall system operation and implement the functionalities described herein.

As shown in Decision making Unit may anticipate the User s future operating intentions i.e. future Operations or Instruction Sets by performing Substantial Similarity Comparisons between the current Operation List and Knowledge Cells stored in the Knowledgebase . This may be done by performing Substantial Similarity Comparisons one Knowledge Cell at a time by traversing a one long knowledge cell or by other similar algorithms.

Substantial Similarity Comparison may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for comparing or matching Operations or Instruction Sets . Substantial Similarity Comparison may include functions and algorithms for comparing or matching Operations or Instruction Sets from the Operation List with 1 Operations or Instruction Sets stored in a Knowledgebase or 2 Operations or Instruction Sets from the Knowledge Cells stored in a Knowledgebase . In some embodiments the comparing or matching may include comparing Operations or Instruction Sets from the Operation List with comparative Operations or Instruction Sets from the Knowledge Cells stored in a Knowledgebase . Substantial Similarity Comparison may comprise algorithms functions and or logic for performing matching or comparisons and for determining that while a perfect match is not found a substantially similar match has been found. Substantial Similarity Comparison may therefore identify an Operation or Instruction Set from an Operation List that is most like an Operation or Instruction Set from a Knowledge Cell in a Knowledgebase even if the Operation or Instruction Set from the Operation List is different from the Operation or Instruction Set in the Knowledge Cell .

In some embodiments such as one illustrated in Substantial Similarity Comparison may include comparing a particular number of User s most recently implemented Operations or Instruction Sets such as for example Operation n Operation n 1 Operation n 2 Operation n 3 Operation n 4 etc. from the Operations List with the corresponding Operations or Instruction Sets from the Knowledge Cells in the Knowledgebase . If a substantially similar pattern of User s most recently implemented Operations or Instruction Sets such as for example Operation n Operation n 1 Operation n 2 Operation n 3 Operation n 4 etc. is found subsequent User s operating intentions i.e. future Operations or Instruction Sets may be anticipated in the anticipatory Operations or Instruction Sets such as for example Operation n 1 Operation n 2 Operation n 3 Operation n 4 etc. . Any number of Operations or Instruction Sets may be compared in alternate embodiments of the Substantial Similarity Comparisons .

Still referring to each Substantial Similarity Comparison may comprise a Comparison Strictness Function . Although illustrates each Substantial Similarity Comparison including its own dedicated Comparison Strictness Function in some embodiments Comparison Strictness Function may be a single function in connection with a Decision making Unit servicing multitude Substantial Similarity Comparisons . Comparison Strictness Function may comprise hardware software or a combination of hardware and software for determining the strictness criteria for finding a substantial similarity match between the Operations or Instruction Sets in the Operation List and the Knowledgebase . As appropriately strict rules for substantial similarity need to be defined in the Substantial Similarity Comparisons if the rules are too strict the Substantial Similarity Comparisons may not find a matching Knowledge Cell in the Knowledgebase . On the other hand if the rules are too flexible the Substantial Similarity Comparisons may find too many matching Knowledge Cells and may anticipate inaccurate User s future operating intentions i.e. future Operations or Instruction Sets . Comparison Strictness Function may therefore include the functionality for setting and resetting the strictness of rules for finding the substantially similar matches thereby fine tuning the Substantial Similarity Comparisons so that the rules for finding the match are not too strict nor too lenient.

The appropriately strict rules for substantial similarity may be defined for the current disclosure based on the type of DBMS application experience testing logs inquiry analysis synthesis or other techniques in alternate implementations. As such the strictness rules of the Comparison Strictness Function may be set by the user or by AI DBMS administrator based on such experience and knowledge. In one implementation substantial similarity may be achieved when most of the Instruction Set Portions of the User s most recently implemented Operations or Instruction Sets such as for example five Operations or Instruction Sets i.e. Operation n Operation n 1 Operation n 2 Operation n 3 and Operation n 4 in the Operations List substantially match the Instruction Set Portions of the corresponding i.e. comparative Operations or Instruction Sets from a Knowledge Cell . Alternatively total equivalence may be found when all Instruction Set Portions of the User s most recently implemented Operations or Instruction Sets from the Operation List match the Instruction Set Portions of all corresponding i.e. comparative Operations or Instruction Sets from a Knowledge Cell within the Knowledgebase . In other embodiments when a total equivalence match is not found Substantial Similarity Comparison may omit values operators or other components from the comparison although values operators or other components are captured as sub segments of Instruction Set Portions .

Comparison Strictness Function may comprise algorithms functions and logic to automatically adjust its level of strictness for finding a best substantial similarity match between the Operations or Instruction Sets in the Operation List and the corresponding i.e. comparative Operations or Instruction Sets in the Knowledgebase i.e. Knowledge Cells stored in the Knowledgebase or Operations or Instruction Sets stored in the Knowledgebase . Depending on the design various levels of strictness may be used. In some embodiments Comparison Strictness Function may set the rules to search for a substantial similarity by finding perfect matches between the Operations or Instruction Sets in the Operation List and the corresponding i.e. comparative Operations or Instruction Sets in the Knowledgebase . If such a match is not found Comparison Strictness Function may decrease the strictness level. In some embodiments in response to decreasing the strictness level Comparison Strictness Function may set the strictness of the rules to search for a substantial similarity in terms of a total equivalence with respect to command portions of the Operation or Instruction Set only thereby tolerating mismatches in variable names such as the names of databases or tables. Comparison Strictness Function may choose to relax the rules in response to determining that no total equivalence match had been found. For example in such embodiments a substantial similarity may be achieved when a match is found in terms of a correct operation but for a different database than the one the user wants to operate on. In such instances upon presenting the user with the substantial similarity match i.e. substantially similar Knowledge Cell the AI DBMS may give the user an anticipatory Operation or Instruction Set from the matched Knowledge Cell allowing the user to change the variable names into the ones desired still saving the user work on inputting the commands. In further embodiments Comparison Strictness Function may upon determining that a perfect match is not found allow for matching all but one of the Operations or Instruction Sets from the Operation List and the corresponding i.e. comparative Operations or Instruction Sets in the Knowledgebase . In further embodiments the Comparison Strictness Function may set the rules to find a match with all but two or more Operations or Instruction Sets from the Operation List and the corresponding i.e. comparative Operations or Instruction Sets in the Knowledgebase .

All the aforementioned settings of strictness of the substantial similarity match may be set or reset by the Comparison Strictness Function in response of another strictness level determination. For example Comparison Strictness Function may adjust a strictness level for identifying a substantial similarity match for an Operation or Instruction Set whose Instruction Set Portions corresponding to command words are a total match with Instruction Set Portions of an Operation or Instruction Set in a Knowledgebase while tolerating mismatches in table names database names and similar. Such an adjustment in strictness may be done by the Comparison Strictness Function in response to determining that a total equivalence match for an entire Operation or Instruction Set is not found in the Knowledgebase . Similarly Comparison Strictness Function may adjust the strictness level for identifying a substantial similarity match for an Operation or Instruction Set whose Instruction Set Portions match all but one Instruction Set Portion of an Operation or Instruction Set in a Knowledgebase . Also Comparison Strictness Function may adjust the strictness level for identifying a substantial similarity match for an Operation or Instruction Set whose Instruction Set Portions match all but two or more Instruction Set Portions of an Operation or Instruction Set in a Knowledgebase . Such an adjustment in strictness may be done by the Comparison Strictness Function in response to determining that not a sufficient number of matches had been found using a higher strictness level.

Comparison Strictness Function may therefore increase and decrease the strictness of the rules for finding a substantial similarity match depending on whether or not perfect matches i.e. perfect equivalents between the compared Operations or Instruction Sets had been found. As such Comparison Strictness Function may utilize two thresholds the upper and a lower threshold to determine the strictness of the rules used for determining the substantial similarity match. The upper threshold may correspond to the number of substantial similarity matches that are too high to be presented to the user i.e. too many matching results too vague suggestions . Alternatively the lower threshold may correspond to the strictness level that results in too few results to be presented to the user. Comparison Strictness Function may make any combination of the aforementioned adjustments to achieve that the number of substantial similarity matches between the Operations or Instruction Sets in the Operation List and the corresponding i.e. comparative Operations or Instruction Sets in the Knowledgebase falls between the upper and the lower threshold. As such Comparison Strictness Function may keep adjusting the strictness rules for finding the substantially similar match until both thresholds are satisfied thereby adjusting the results until the best set of results is found.

In one embodiment Comparison Strictness Function may adjust the strictness level by choosing the number of Operations or Instruction Sets that it will use to find a substantial similarity match. For example as a user implements first three Operations or Instruction Sets Comparison Strictness Function may run these three Operations or Instruction Sets against Knowledge Cells in the Knowledgebase . If the Substantial Similarity Comparison provides a number of matching results i.e. results that have perfect equivalence that is above a particular threshold the Comparison Strictness Function may decide to increase the strictness of the rules to decrease the number of results. In response Substantial Similarity Comparison may then decide to wait for the user to add a fourth Operation or Instruction Set thereby allowing the Substantial Similarity Comparison to use the fourth Operation or Instruction Set in addition to the earlier three to find a smaller number of matching results. Once the user adds the fourth Operation or Instruction Set the Substantial Similarity Comparison may use all four Operations or Instruction Sets to find a match. If the number of matching results i.e. results that perfectly match or total equivalences is sufficiently small the system may present the user with these results. If however the number of matching results is still too high the Comparison Strictness Function may determine to further increase the strictness by requiring the user to add additional Operations or Instruction Sets and thereby further narrow the search results before presenting the user with the suggested results. In some embodiments Operations or Instruction Sets added may include a portion of an Operation or Instruction Set such as a first one or more Instruction Set Portions or one or more letters or one or more keywords commands phrases etc. of such Instruction Set Portions .

To increase comparison accuracy Extra Info i.e. time stamp user specific information group user information etc. besides Instruction Set Portions may be recorded at the creation of an Operation by the Command Disassembler as previously described. Substantial Similarity Comparison may use this additional information for finding the best match between the Operations or Instruction Sets in the Operation List and the corresponding i.e. comparative Operations or Instruction Sets in the Knowledgebase . Concerning time stamp User may perform some operations such as data backup periodically such as for example during a specific time of day week month year or any other time period. The Substantial Similarity Comparison may utilize the time stamp in the comparisons to determine the best match in the case of these time sensitive Operations or Instruction Sets .

Another technique for increasing comparison accuracy and or adjusting strictness level of the Comparison Strictness Function may be to assign an importance index i.e. on a scale from 1 to 10 to each Instruction Set Portion and or Extra Info . This way the Substantial Similarity Comparison may focus more on the comparison of for example command words keywords and or objects and less on operators and time stamps for certain types of Operations or Instruction Sets .

Another technique for increasing comparison accuracy and or adjusting strictness level of the Comparison Strictness Function may be to include semantic analysis in the Substantial Similarity Comparison . For example an Operation or Instruction Set from the Operation List may contain a table called Customers. Instead of looking for the exact name match in the corresponding i.e. comparative Operation or Instruction Set from the Knowledgebase the Substantial Similarity Comparison may employ semantic analysis and attempt to match Cust Cst Cstm Cstmr Cstmrs or other variations of the table name with a meaning Customers. This semantic analysis method is not limited to the use only with meanings of object names such as database names table names column names etc. This approach may be utilized with any differing field or segment of an Operation or Instruction Set with a potentially same meaning such as various operators with same meanings various values with same meanings various keywords with same meanings etc.

Another technique that may be used is for the Substantial Similarity Comparison to assign comparison accuracy not shown during the comparison process based on how well matched are the Operations or Instruction Sets of the Operation List to the Operations or Instruction Sets of a Knowledge Cell in the Knowledgebase . An indicator of comparison accuracy with a scale from 1 to 10 may be utilized for example. The indicator of comparison accuracy may then be stored in the Operations or Instruction Sets of the Substantially Similar Knowledge Cell . Comparison accuracy information may be useful later in the User Confirmation process step to help automate the confirmation process.

Referring to Confirmation Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for confirming the User s anticipated operating intentions i.e. anticipatory Operations or Instruction Sets with the User . Confirmation Unit may comprise algorithms and functions to enable the system to confirm the Operations or Instruction Sets that the AI DBMS determined i.e. via the substantial similarity comparison could be the Operations or Instruction Sets which the user may want to use or implement. Confirmation Unit may be directly or operatively connected to the Decision making Unit and the Command Assembler and or other elements to facilitate the overall system operation and implement the functionalities described herein.

As shown in Confirmation Unit may include Substantially Similar Knowledge Cell Context Interpreter User Confirmation process step and Operation List . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments. The Substantially Similar Knowledge Cell may be a product of the Decision making Unit and may be the knowledge cell whose comparative Operations or Instruction Sets are substantially similar to the User s most recently implemented Operations or Instruction Sets from the Operation List .

The context in which Operations or Instruction Sets from the Operation List were performed may be analyzed by the Context Interpreter . In some embodiments context may be defined as 1 any segment of the Instruction Set not captured as an Instruction Set Portion in an Operation 2 any sub segment of an Instruction Set Portion within an Operation that is not used in the Substantial Similarity Comparison or 3 any information about Operations or Instruction Sets from the Operation List that may be useful in anticipating User s operating intentions future Operations or Instruction Sets . In effect Context Interpreter may perform an extra analysis step and it may attempt to capture all information and or elements that may have been omitted by the Command Disassembler by the Substantial Similarity Comparison or by other process steps.

An example of Context Interpreter s usefulness is the fact that values may be omitted from Substantial Similarity Comparisons in some embodiments as previously described. It is Context Interpreter s responsibility to discover the values or ranges of values used in the User s recent Operations or Instruction Sets by extracting the values from their Instruction Set Portions . User Confirmation process steps may then take these values or ranges of values modify anticipatory Operations or Instruction Sets such as for example Operation n 1 Operation n 2 Operation n 3 Operation n 5 etc. according to these values or ranges of values and present the modified anticipatory Operations or Instruction Sets to the User for confirmation before executing them.

User Confirmation may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for automating user confirmation if the Substantially Similar Knowledge Cell contains comparison accuracy information as previously described such as for example an instance in which one or more comparative Operations or Instruction Sets were found to be a perfect or highly accurate match. In such instances anticipatory Operations or Instruction Sets from the Substantially Similar Knowledge Cell may be automatically executed by AI DBMS without asking the user to confirm them. As such anticipatory Operations or Instruction Sets from the Substantially Similar Knowledge Cell with complete or high comparison accuracy may be executed without the need to confirm with User . Conversely anticipatory Operations or Instruction Sets from the Substantially Similar Knowledge Cell with less than high comparison accuracy may be presented to User for confirmation including presenting the comparison accuracy information for User s consideration.

Referring to Command Assembler may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for assembling an Instruction Set . Command Assembler may include functions and algorithms for assembling an Instruction Set from the Instruction Set Portions stored in the Operation . Alternatively when a complete Instruction Set is known and no assembly of various Instruction Set Portions is needed Command Assembler may simply verify that the Instruction Set is ready for implementation by the AI DBMS. Command Assembler may be directly or operatively connected to Confirmation Unit and Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

As shown in Command Assembler may assemble Instruction Set from the Instruction Set Portions stored in the data fields of the Operation . Command Assembler in effect performs the reverse action relative to the Command Disassembler .

In some embodiments when anticipatory Operations or Instruction Sets are known and ready to execute Command Assembler or any other element of the current disclosure may trigger an external function or process of the system within which AI DBMS may operate. For example in an embodiment where AI DBMS may be used or embedded within a television device embodiment later described AI DBMS may trigger a video recording process in response to anticipating a User s switching i.e. selecting or performing a SELECT type DBMS operation to a favorite channel. In another embodiment where AI DBMS may be used or embedded within a cellular telephone AI DBMS may trigger a calling process in response to anticipating User s input i.e. inserting or performing an INSERT type DBMS operation of a new contact in the contact list.

In yet some embodiments an Instruction Set may be passed directly to the Operation List without being disassembled in which case Command Disassembler may be omitted from the overall system. In these embodiments Operation List Knowledge Cells and Knowledgebase may all include original Instruction Sets instead of disassembled Operations . Therefore Substantial Similarity Comparisons between the Instruction Sets in the Operation List and the corresponding i.e. comparative Instruction Sets in the Knowledgebase may be performed either directly i.e. letter for letter word for word etc. or indirectly by performing extraction or disassembling of Instruction Set Portions in the comparison step.

In further embodiments AI DBMS may be configured to run automatically i.e. autonomously etc. and or perform DBMS operations. For example AI DBMS and or Artificial Intelligence may periodically i.e. daily weekly monthly yearly etc. automatically run to analyze i.e. through the Substantial Similarity Comparison process etc. time stamps of all of the Operations or Instruction Sets in the Knowledgebase to determine which Operations or Instruction Sets the User may have implemented in particular time periods. If repetitive Operations or Instruction Sets may have been found they may be executed automatically with or without User s confirmation depending for example on how accurate or confident the substantial similarity match may be. Other patterns in addition to analyzing the time stamp may be analyzed in alternate embodiments.

Referring to in some aspects of the present disclosure AI DBMS may be implemented to include additional information either within the Knowledgebase within additional knowledgebases or within any other part of the AI DBMS system. This additional information may assist the Substantial Similarity Comparison and or other process steps and or elements in the performance of their respective functions i.e. more accurately anticipate user s future DBMS operating intentions etc. . As shown in AI DBMS may comprise additional knowledgebases that in this example may include User Specific Information Group Specific Information and or other additional knowledgebases. These additional knowledgebases may be directly or operatively coupled with the Knowledgebase or with any other elements of the current disclosure as needed.

User Specific Information or User Specific Info may comprise hardware software or a combination of hardware and software for storing information pertaining to a specific user. There may be plurality of User Specific Infos on the system one for each user. User Specific Info may include the information on the most prevalent Operations or Instruction Sets the user may be using information on databases on which the user may have most often performed operations information on types of Operations or Instruction Sets the user most often performs information on the sequence of Operations or Instruction Sets which the user may perform or have performed most often and more. User Specific Info may further include the information along with a timestamp for each Operation or Instruction Set which the user has performed in the past thereby allowing the system to determine which Operations or Instruction Sets the user has most recently been using and which Operations or Instruction Sets the user has not used in a while.

Group Specific Information or Group Specific Info may comprise hardware software or a combination of hardware and software for storing information pertaining to a group of users. The group of users may be a group having a particular access level to the AI DBMS such as for example group of administrators group of general users group of managers group of guests and more. Each group may be given a different access level and different level of control over the system. There may be plurality of or Group Specific Infos on the system one for each group of users. Group Specific Info may include the information on the most prevalent Operations or Instruction Sets the users of the group may be using information on databases on which the users of the group may have most often performed operations information on types of operations the users of the group most often perform information on the sequence of Operations or Instruction Sets which the users of the group may perform or have perform most often and more. Group Specific Info may further include the information along with a timestamp for each Operation or Instruction Set which the users of the group have performed in the past thereby allowing the system to determine which Operations or Instruction Sets the users of the group have most recently been using and which Operations or Instruction Sets the user have not used in a while.

In some embodiments the Core Program and the Underlying DBMS may be provided as distinct elements executing on the same computing device.

Referring to an embodiment is illustrated in which the Core Program may execute on the User s Mobile Device and the Underlying DBMS may execute on a remote Computing Device . Remote Computing Device may be any device remote from the Mobile Device such as a remote computer a remote server a remote Mobile Device or another similar type of remote computing device to which the Core Program may connect over the Network . In this implementation the Core Program may use a database interface and or an associated API for the Java platform to connect to the remote DBMS. One of ordinary skill in the art will recognize that the remote Computing Device may include any functionality of a Mobile Device including any memory processing and or similar components which may be utilized by the features of the present disclosure.

Referring to an embodiment is illustrated in which the Underlying DBMS may execute on the User s Mobile Device and the Core Program may execute on a remote Computing Device and the Core Program may connect to the local Underlying DBMS over the Network . In this implementation the Core Program may use a database interface and or an associated API for the platform where it runs to connect to the local Underlying DBMS .

Referring to an embodiment is illustrated in which the Core Program includes Underlying DBMS Functionality . In this integrated implementation the Core Program includes database libraries not shown comprising subroutines configured to perform database operations including low level operations such as locking transaction logging shared buffer management memory management and other operations. Database libraries may include definitions of one or more interfaces for database and application connectivity and interfacing via an internal or external socket based bridge based or other type of connection. Database libraries may also define instruction sets operations DBMS commands instructions or any computer commands the Underlying DBMS Functionality can accept and understand and define handling of any SQL statements or any DBMS commands or instruction sets. Database libraries may be configured to execute on any type of operating system. The Core Program may include one or more database files. Each database file may be a computer file configured to store data in an integrated collection of structured records. Each database file may be accessed by the database library. In this integrated implementation database operations may be performed using pre made or custom database libraries that may be loaded and linked at the initiation of the Core Program .

Referring to an embodiment is illustrated in which the Underlying DBMS may include DBMS Artificial Intelligence . In this integrated implementation DBMS Artificial Intelligence may be or may directly or operatively connect to internal functions processes libraries files data structures and or other elements of the Underlying DBMS . Underlying DBMS may be directly or operatively connected to the Input Interface the Output Interface and or other elements to facilitate the overall system operation and implement the functionalities described herein. The Core Program may optionally be omitted in this integrated implementation.

In some embodiments Knowledgebase may be local i.e. local Knowledgebase and it may reside on the User s Mobile Device . Such local Knowledgebase may be stored in a local table local file or other local data structure or data repository and it may include knowledge of the use of the Underlying DBMS by the local User i.e. owner of the mobile device .

Referring to an embodiment is illustrated in which Knowledgebase i.e. global Knowledgebase may reside on a remote Computing Device i.e. application server etc. on a Network i.e. corporate enterprise network Internet etc. . Such global Knowledgebase may be stored in a remote table remote file or other remote data structure or data repository. Furthermore such global Knowledgebase may include knowledge i.e. Knowledge Cells of the use of the Underlying DBMS by any number of Users wherever on the Network they may be located. In turn all these Users may utilize the global Knowledgebase to anticipate their future operating intentions i.e. future Operations or Instruction Sets . In one implementation global Knowledgebase may reside on a remote Computing Device on the Internet as an online service to all the world s Users who wish to disclose their use of the Underlying DBMS and or utilize the global Knowledgebase to automate their DBMS operation with AI DBMS functionalities described herein.

In some embodiments AI DBMS may include DBMS Artificial Intelligence i.e. local DBMS Artificial Intelligence residing and executing on the User s Mobile Device .

Referring to an embodiment is illustrated in which DBMS Artificial Intelligence i.e. global DBMS Artificial Intelligence may reside and execute on a remote Computing Device i.e. application server etc. on a Network . In this implementation the Core Program executing on the Mobile Device may connect with the DBMS Artificial Intelligence through the Network to achieve desired results.

Referring to the illustration shows an embodiment of a method for predicting instruction sets that the user is most likely to use next based on sequences of prior used instruction sets. The method may therefore be used by a user on a mobile device operating an interface for an AI DBMS to perform operations on the back end DBMS i.e. Underlying DBMS .

In brief overview at step a mobile device receives a sequence of instruction sets for performing operations on a database. The sequence may include an order of consecutive instruction sets such as for example a first instruction set followed by a second instruction set. At step the first and second instruction sets are processed into instruction set portions. At step the sequence of the instruction sets is stored along with their corresponding portions of instruction sets into a knowledgebase that comprises plurality of instruction set sequences along with their corresponding portions. At step the mobile device receives a new instruction set for performing an operation on a database. At step the new instruction set is processed into instruction set portions. At step one or more portions of the new instruction set is compared with the portions of instruction sets in the knowledgebase. At step a determination is made that there is a substantial similarity between the one or more portions of the new instruction set and one or more portions of the first instruction set. At step the new instruction set is executed by performing on a database an operation corresponding to the new instruction set. At step the second instruction set along with its portions is displayed on the mobile device as options to be selected by a user. At step the second instruction set or any of its portions are modified should the user decide to modify the second instruction set or its portions. At step the operation defined by the second instruction set or the modified second instruction set is performed on the database.

At step a mobile device receives a sequence of instruction sets. Each instruction set may indicate or identify one or more operations to be performed on some data in some database. The sequence may include a first instruction set followed by a second instruction set which may also be followed by a third instruction set and so on. Any instruction set may be received by the interface for a DMBS. Any instruction set may be received by any component of the AI DBMS. Instruction sets of the sequence may be received by the mobile device or by any other mobile device or a computing device in general.

At step the first and the second instruction sets of the sequence of instruction sets are processed into instruction set portions. In some embodiments each of the instruction sets from the sequence are disassembled or parsed into portions. In other embodiments the instruction sets are separated into commands keywords instructions operators variables values objects functions and or other components etc. Processing may also include identifying the type of each instruction set in terms of the commands used. Specifically determinations may be made to identify if each instruction set is for modifying data selecting data accessing data creating a database creating a row or a column within a database making a new entry etc. Processing may further include creating a timestamp of the time when each instruction set has been received or executed. Processing may further include identifying a user which entered each instruction set or identifying a group to which the user belongs. Processing may include assigning a weight to each of the instruction sets or their portions. Processing may further include creating any extra information pertinent for facilitating AI DBMS functionalities described herein. Processing may include any action or operation by or for a Command Disassembler .

At step the sequence of instruction sets is stored into a knowledgebase along with the portions of the instruction sets. The knowledgebase may comprise any number of instruction sets instruction set portions and or instruction set sequences each of which may be stored in various arrangements including tables databases DBMSs memory structures data structures etc. In some embodiments knowledgebase may include sequences of instruction sets instruction sets and or instruction set portions from the mobile device via which the sequences of instruction sets instruction sets and or instruction set portions are received. In other embodiments knowledgebase may include sequences of instruction sets instruction sets and or instruction set portions from any number of computing devices. Knowledgebase or additional knowledgebases may also be populated to include the user specific and or group specific informations gathered with respect to the instruction set. Also stored in knowledgebase may be the weight assigned to each instruction set or its portions. Storing may include any action or operation by or for a Knowledgebase or Knowledge Structuring Unit .

At step a new instruction set for performing an operation on a database is received by the mobile device. The new instruction set may identify or indicate any operation to be performed on a database indicated herein. For instance the new instruction set may include an instruction to select add delete or modify an entry add delete or modify a column add delete or modify a table add delete or modify a database add delete or modify a relation add delete or modify a user account etc. The one or more portions of the new instruction set may be for performing some operation on some database managed by the AI DBMS. The new instruction set or one or more of its portions may be stored into operation lists.

At step the new instruction set is processed into instruction set portions. In some embodiments the new instruction set is disassembled or parsed into portions which may include commands keywords instructions operators variables values objects functions and or other components etc. Processing may also include identifying the type of the new instruction set in terms of the commands used. Specifically determinations may be made to identify if the new instruction set is for modifying data selecting data accessing data creating a database creating a row or a column within a database making a new entry etc. Processing may further include creating a timestamp of the time when the new instruction set has been received. Processing may further include identifying a user which entered the new instruction set or identifying a group to which the user belongs. Processing may include assigning a weight to each of the new instruction sets or their portions. Processing may further include creating any extra information pertinent for facilitating AI DBMS functionalities described herein. Processing may include any action or operation by or for a Command Disassembler .

At step one or more portions of the new instruction set is compared with the portions of instruction sets in the knowledgebase. In one embodiment the one or more portions of the new instruction set are compared as a single string of characters with a plurality of portions of instruction sets in the knowledgebase. In other embodiments comparison may be implemented by treating each instruction set portion as a separate string to be matched independently. In further embodiments comparison is implemented by matching all of one or more portions of the new instruction set with one or more portions of an instruction set stored in a knowledgebase. Comparison may be implemented by matching all but one of the one or more portions of the new instruction set with one or more portions of an instruction set stored in a knowledgebase. Comparison may also be implemented by matching all but two of one or more portions of the new instruction set with one or more portions of an instruction set stored in a knowledgebase. In some embodiments comparison may also be implemented by comparing the one or more portions of the new instruction set with portions of the instruction sets from the knowledgebase factoring in the weights for each of the instruction set portions from the knowledgebase. As such matching some portions of the instruction set from the knowledgebase may be more important than other portions having smaller weight. In further embodiments comparison may be implemented by comparing the new instruction set with the instruction sets from the knowledgebase factoring in the weights for each of the instruction sets from the knowledgebase. As such matching some of the instruction sets from the knowledgebase may be more important than other instruction sets having smaller weight.

At step a determination is made if there is a substantial similarity between the one or more portions of the new instruction set and one or more portions of the instruction sets stored in the knowledgebase such as the first instruction set. In one embodiment during the comparison of the one or more portions of the new instruction set and the portions of the first instruction set a perfect match may be found. In other embodiments AI DBMS may find a plurality of perfect matches with a plurality of stored instruction sets. If the number of matches exceeds a threshold for maximum number of substantial similarity results strictness level for determining a substantial match may be modified to include an additional one or more portions of the new instruction set in order to narrow down or reduce the number of the perfect matching results. In some embodiments if no perfect match is found or if a number of matches is lower than a threshold for minimum amount of substantially matching results then strictness level may be reduced to allow for finding a match that is imperfect. In some embodiments a strictness level may be reduced to allow for a match for more important portions of the one or more portions of the new instruction set to be matched with the instruction sets in the knowledgebase. The more important portions of the one or more portions of the new instruction set may be portions including command words or keywords. For example a substantial match may be found when SQL keywords from the one or more portions of the new instruction set match SQL keywords and or the order of such keywords in one or more stored instruction sets in the knowledgebase even if one or more variable names data names or database names are not matched. Substantial match may also be found when a strictness level is reduced to allow a match to have all but one of the one or more portions of the new instruction set matching an instruction set in the knowledgebase. Similarly a substantial match may be found when a strictness level is reduced to allow a match to have all but two of the one or more portions of the new instruction set matching an instruction set in the knowledgebase. Likewise a substantial match may be found when a strictness level is reduced to allow a match to have all but three of the one or more portions of the new instruction set matching an instruction set in the knowledgebase. The one two or three non matched portions of the instruction set may be portions having smaller or smallest weight. For example the non matched portions of the instruction set may be variable names database names or other portions of the instruction set that may be less important than the commands or keywords for example. Determination of substantial similarity between the one or more portions of the new instruction set and the first instruction set may include any one of or any combination of substantial similarity determination techniques or embodiments discussed herein.

At step the new instruction set is executed by performing on a database operation indicated by or corresponding to the new instruction set. In some embodiments the new instruction set may be executed earlier or later in the process or not executed at all. The operation performed may include creating or deleting a database. The operation performed may include adding or deleting an entry within a database. The operation performed may include adding or deleting a row or a column within a database. The operation performed may include selecting an entry within a database. The operation performed may include any DBMS operation described herein.

At step the mobile device displays the second instruction set or its portions as options to be selected by a user. The second instruction set may be displayed in response to determining that the first instruction set is the most substantial match with the new instruction set and that the second instruction set immediately follows the first instruction set. In some embodiments AI DBMS may select the second instruction set for display on the mobile device responsive to the determination at step . In further embodiments the second instruction set may be displayed along with one or more instruction sets that may immediately follow the second instruction set.

At step the second instruction set may be modified. In one example the second instruction set may be modified to indicate the same database as was indicated in the new instruction set. In another example the second instruction set may be modified to indicate the same table or report view as was indicated in the new instruction set. In a further example the second instruction set may be modified to indicate the same column or entry as was indicated in the new instruction set etc.

At step the operation defined by or corresponding to the second instruction set or the modified second instruction set is performed on a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting of a row column or cell within a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a report view relation user account and or other objects in a DBMS. The operation performed may include any DBMS operation described herein.

Referring to in some aspects the teaching presented by the current disclosure may be implemented to include an associative method of constructing Operations or Instruction Sets . This embodiment may enable a user to create an Operation or Instruction Set i.e. enter instruction set portions by inputting Keys of an input device i.e. Keyboard touch screen wheel controls remote control etc. where each Key may be associated with an Instruction Set Portion of the Operation or Instruction Set . As such User may use Keys associated with Instruction Set Portions to input key by key i.e. instruction set portion by instruction set portion an Operation or Instruction Set until the user completes inputting the entire Operation or Instruction Set . A Key may include any press able key of the Keyboard any push able button of the Mobile Device or an external input device i.e. joystick etc. any touch able areas of a touch screen any click able component of the Mobile Device or an external input device i.e. mouse etc. any slide able component of the Mobile Device or an external input device a text field selectable list drop down menu or other graphical or physical elements that may enable a User to input instructions or data.

As shown for example in User may use Mobile Device that may include the Core Program the Underlying DBMS the Input Interface the Keyboard the Output Interface the Display the Memory the Physical Storage Medium and the Associative DBMS Command Constructor . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to Associative DBMS Command Constructor may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for constructing an Operation or Instruction Set . Associative DBMS Command Constructor may include functions and algorithms for constructing an Operation or Instruction Set by associating Keys of a Keyboard for example with Instruction Set Portions of the Operation or Instruction Set . Associative DBMS Command Constructor may include functions and algorithms for constructing an Operation or Instruction Set by associating Keys of a Keyboard for example with Instruction Set Portions of the Operation or Instruction Set based on the Level in the constructing process. The Associative DBMS Command Constructor may be directly or operatively connected to the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Associative DBMS Command Constructor may include an Associative Control Unit a Key Association Database a Key Re association Unit an Associative Selection Creator and a Command Assembler . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to Associative Control Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for managing and or controlling the Operation or Instruction Set construction process. Associative Control Unit may include functions and algorithms for 1 recognizing the type of Operation or Instruction Set the User is constructing 2 associating the Instruction Set Portions with the Levels based on the type of Operation or Instruction Set 3 keeping track of the Level up to which the Operation or Instruction Set is constructed and or 4 storing the inputted Instruction Set Portions within the Operation . The Associative Control Unit may be directly or operatively connected to the Core Program the Key Association Database the Key Re association Unit the Associative Selection Creator and the Command Assembler and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In one example at the initiation of the Associative DBMS Command Constructor User may be offered a Selection of the type of the Operation or Instruction Set the User wishes to construct based on the LVL1 Association Table within the Key Association Database . User may press the 1 Key on the Keyboard . The 1 Key may be associated with the SELECT Instruction Set Portion within the LVL1 Association Table . The SELECT Instruction Set Portion indicates the type of Operation or Instruction Set as the SELECT type of Operation or Instruction Set i.e. SELECT type SQL statement and therefore it may be stored in a data field of the Operation and associated with the LVL1 Level . The next Instruction Set Portion that is at LVL2 Level may be the FROM keyword that has only one association i.e. FROM for the SELECT type Operation or Instruction Set and no User selection may be needed. The next Selection the User is offered may be at LVL3 Level to choose the Tbl1 Tbl2 . . . representing the names of tables from which to obtain data. The next Selection the User is offered may be at LVL4 Level to choose the Col1 Col2 . . . representing the columns to be selected. The next Selection the User is offered may be at LVL5 Level to choose the WHERE ORDER BY or GROUP BY keyword. In the case of 1 Key being pressed by the User at LVL5 Level indicating the WHERE Instruction Set Portion the next Selection the User is offered may be at LVL6 Level to choose the Col1 Operator1 Val1 AND Col2 Operator2 Val2 . . . representing columns operators and values used in restricting output results. Since the Col1 Operator1 Val1 AND Col2 Operator2 Val2 . . . Instruction Set Portion may contain more than one object operator and or value sub selections may be offered for each. The next Selection the User is offered may be at LVL7 Level to choose the WHERE ORDER BY or GROUP BY keyword. In the case of 2 Key being pressed by the User at LVL7 Level indicating the ORDER BY Instruction Set Portion the next Selection the User is offered may be at LVL8 Level to choose the Col1 Col2 . . . representing columns by which to sort the resulting data set. The next Selection the User is offered may be at LVL9 Level to choose the WHERE ORDER BY or GROUP BY keyword. In the case of 3 Key being pressed by the User at LVL9 Level indicating the GROUP BY Instruction Set Portion the next Selection the User is offered may be at LVL10 Level to choose the Col1 Col2 . . . representing columns by which to group the resulting data set. Other Instruction Set Portions not shown may be utilized in alternate embodiments such as functions including MIN MAX SUM FIRST LAST etc. operators including OR LESS THAN GREATER THAN etc. objects including databases relations user accounts privileges etc. etc.

In some aspects of the current disclosure the purpose of Levels may be to rearrange the inherent SQL if SQL is used as the instruction set type to perform AI DBMS operations order of constructing Operations or Instruction Sets in a user friendly order in which the User i.e. non technical user thinks of constructing Operations or Instruction Sets . This option to rearrange the order is available where rearrangement is appropriate or where the User chooses. Therefore as shown in after the SELECT keyword at LVL1 Level the FROM keyword is executed at LVL2 Level the Tbl1 Tbl2 . . . selection is executed at LVL3 Level the Col1 Col2 . . . selection is executed at LVL4 Level and so forth. This user friendly order of constructing the Operation or Instruction Set may be preferred by the User because it allows the User to first select a table from a list of tables within the database and then select column s from a list of columns within the selected table. Conversely the inherent SQL syntax such as for example SELECT Col1 Col2 . . . FROM Tbl1 Tbl2 . . . etc. assumes often wrongly that the user knows which columns are included within the table. Any Instruction Set Portions or other components of the Operation or Instruction Set may be rearranged using Levels and or any order of rearrangement may be utilized.

At each Level the Associative Control Unit may interact with 1 the Control Program to receive the User s inputted Key 2 the Key Association Database to obtain the Association Table containing the Instruction Set Portions appropriate for the currently inputted Key and the currently executing Level 3 the Key Re association Unit that re associates the Keys of the Keyboard with the appropriate Instruction Set Portions for the currently executing Level 4 the Associative Selection Creator that creates the Selections appropriate for the currently executing Level and or 5 other elements. When all needed Instruction Set Portions at their respective Levels are inputted the Associative Control Unit may send the completed Operation to the Command Assembler for assembling the Instruction Set for execution. In some embodiments Key Re association Unit may optionally be omitted. In such embodiments Associative Control Unit may receive the User s inputted Key from the Control Program and look up the associated Instruction Set Portion in the Association Table containing the Instruction Set Portions appropriate for the currently inputted Key and the currently executing Level .

Referring to Key Association Database may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing the associations between Keys and the corresponding Instruction Set Portions . Key Association Database may include functions and algorithms for providing one or more Association Tables where each Association Table may include a column for the Keys and a column for the corresponding Instruction Set Portions appropriate for the currently executing Level . The Key column in the Association Table may represent the Keys on the mobile device s Keyboard . The Instruction Set Portion or Inst Set Por column may represent the Instruction Set Portions of an Operation or Instruction Set appropriate for the currently executing Level . Key Association Database may be directly or operatively connected to the Associative Control Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In some embodiments an Association Table may be implemented in any table a database linked arrays linked queues a hash table or any data structure that can store associated elements i.e. column value pairs etc. . Any or all Association Tables within a Key Association Database may be included in one Association Table in alternate embodiments. Association Tables may be pre defined for every possible operation on each of the objects i.e. tables databases etc. in the Underlying DBMS . If pre defined Association Tables may change as the objects in the Underlying DBMS change. For example if the name of a database in the Underlying DBMS changes the Association Tables used for key associations related to this database may change to reflect the changed database name. Alternatively Association Tables may be created on fly or as needed in anticipation of the upcoming Instruction Set Portion that the User may wish to enter.

Referring to Key Re association Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for associating or re associating Keys of an input device i.e. Keyboard mouse touch screen control wheel remote control etc. with Instruction Set Portions of an Operation or Instruction Set . Key Re association Unit may include functions and algorithms for associating or re associating Keys of an input device i.e. Keyboard mouse touch screen control wheel remote control etc. with Instruction Set Portions of an Operation or Instruction Set appropriate for the currently executing Level . As shown for example in at LVL7 Level the 1 2 and 3 Keys may be associated with WHERE ORDER BY and GROUP BY Instruction Set Portions respectively. Once the User presses the 2 Key for example Key Re association Unit may re associate the Keys of the Keyboard using the LVL8 Association Table as shown. Key Re association Unit may be directly or operatively connected to the Associative Control Unit the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Referring to Associative Selection Creator may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for creating or re creating Selections for consideration by the user. Associative Selection Creator may include functions and algorithms for creating or re creating Selections for consideration by the user appropriate for the currently executing Level . As shown for example in at LVL7 Level the Display may include a Selection that shows WHERE ORDER BY and GROUP BY Instruction Set Portions and their associated Keys . Once the User presses the 2 Key for example Associative Selection Creator may create a Selection using the LVL8 Association Table as shown. Associative Selection Creator may be directly or operatively connected to the Associative Control Unit the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In some embodiments the associative method of constructing Operations or Instruction Sets may include Command Assembler which Command Assembler may be directly or operatively connected to the Associative Control Unit the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein. Once all the needed Instruction Set Portions are inputted at their respective Levels as tracked by the Associative Control Unit the complete Operation may be sent to the Command Assembler for assembling of the Instruction Set for execution. The functioning of the Command Assembler is equivalent of the Command Assembler previously described.

In other embodiments the associative method of constructing Operations or Instruction Sets may construct an Instruction Set without ever using the Operation as an intermediary data structure to store Instruction Set Portions . For example as the User inputs the required Instruction Set Portions as tracked by the Associative Control Unit at various Levels the Associative Control Unit may append the incoming Instruction Set Portions as strings of characters to arrive at a complete Instruction Set . In this implementation without using Operations Command Assembler s functionality may be omitted or not fully utilized.

Referring to the illustration shows an embodiment of a method for associative construction of instruction sets through key input. The method may therefore be used by a user on a mobile device operating an interface for an AI DBMS to perform operations on the back end DBMS i.e. Underlying DBMS .

In brief overview at step a plurality of collections of instruction set portions to be used to assemble a new instruction set for performing an operation on a database are maintained on a mobile device. At step the keys of the mobile device are associated with the instruction set portions of the first collection. At step instruction set portions of the first collection along with their associated keys are displayed on the mobile device for a selection by a user. At step user selects a first key associated with an instruction set portion of the first collection. At step a first portion of the new instruction set is assembled using the instruction set portion associated with the selected first key. At step the keys of the mobile device are re associated with instruction set portions of the second collection. At step the instruction set portions of the second collection along with their associated keys are displayed on the mobile device. At step the user selects a second key associated with an instruction set portion of the second collection. At step a second portion of the new instruction set is assembled using the instruction set portion associated with the second key. At step a determination is made if the new instruction set can be determined using method later described. At step steps are repeated for all subsequent portions of the new instruction set until the new instruction set s completion. At step the operation defined by the new instruction set is performed on the database.

In further detail at step a plurality of collections of instruction set portions are maintained on a mobile device. The instruction set portions may be used to assemble a new instruction set for performing an operation on some data in a database. The collections of instruction set portions may be maintained organized and or stored in various arrangements including tables databases DBMSs memory structures data structures etc. In some embodiments the collections of instruction set portions may be ordered to include a first collection followed by a second collection which may also be followed by a third collection and so on to complete the instruction set. The first collection of instruction set portions may include all possible or most likely first instruction set portions where the user may select among the possibilities the second collection of instruction set portions may include all possible or most likely second instruction set portions where the user may select among the possibilities and so on. In some embodiments the collections of instruction set portions may be pre defined for all possible or most used operations on each of the objects i.e. tables databases reports views relations user accounts etc. in the DBMS and the collections of instruction set portions may change as the objects in the DBMS change. In other embodiments the collections of instruction set portions may be created on fly or as needed in anticipation of the upcoming instruction set portion that the user may wish to enter.

At step the keys of the mobile device are associated with the instruction set portions of the first collection. A key may include any press able key of a keyboard any push able button of the mobile device any touch able areas of a touch screen any click able component of the mobile device any slide able component of the mobile device a text field selectable list drop down menu or other physical or graphical elements that may enable a user to input instructions or data. Keys of any internal or external input device such as keyboard mouse touch screen control wheel remote control etc. may be used and or associated with the instruction set portions of the first collection. In some embodiments the first collection of instruction set portions may be included in a data structure such as a table comprising a column for the keys and a column for the associated instruction set portions of the first collection. Therefore an association may be established between a key and an instruction set portion of the first collection in the same row of the table. Associating may include any action or operation by or for a Key Re association Unit .

At step instruction set portions of the first collection along with their associated keys are displayed on the mobile device for a selection by a user. The user may view on the display of the mobile device which keys of the mobile device may be associated with specific instruction set portions of the first collection. In some embodiments the display may include keys pointing with arrows or other such signs or indicia to their associated instruction set portions of the first collection indicating the associations for user s consideration. Displaying may include any action or operation by or for an Associative Selection Creator .

At step user selects a first key associated with an instruction set portion of the first collection. The first key may be received by the interface for a DMBS. The first key may be received by the mobile device or by any other mobile device or a computing device in general. The first key may be received by any component of the AI DBMS. User may select the first key by using a key of the mobile device associated with one of the instruction set portions of the first collection. The associated instruction set portion of the first collection may identify or indicate one or more commands keywords instructions operators variables values objects functions and or other components of the new instruction set to be assembled.

At step a first portion of the new instruction set is assembled using the instruction set portion associated with the selected first key. In some embodiments assembling may include storing the first instruction set portion in a data structure such as an array linked list table etc. comprising all known instruction set portions of the new instruction set. In other embodiments assembling may include appending the first instruction set portion to a string of characters in the case of the first instruction set portion an empty string containing the known instruction set portions of the new instruction set. Assembling may include any action or operation by or for an Associative Control Unit .

At step the keys of the mobile device are re associated with instruction set portions of the second collection. Step may include any action or operation described in Step as applicable.

At step the instruction set portions of the second collection along with their associated keys are displayed on the mobile device. Step may include any action or operation described in Step as applicable.

At step the user selects a second key associated with an instruction set portion of the second collection. Step may include any action or operation described in Step as applicable.

At step a second portion of the new instruction set is assembled using the instruction set portion associated with the second key. Step may include any action or operation described in Step as applicable.

At step a determination is made if the new instruction set can be determined using method later described. In some embodiments method may be used for predicting the new instruction set by comparing its known instruction set portions with instruction set portions of prior stored instructions sets. Therefore if enough instruction set portions of the new instruction set are known the new instruction set may be identified before the user inputs all needed instruction set portions.

At step steps are repeated for all subsequent portions of the new instruction set until the new instruction set s completion. Steps may be performed repeatedly with subsequent collections of instruction set portions to assemble the new instruction set one instruction set portion at a time. Once all the needed instruction set portions are known the new instruction set may be complete. In embodiments where the intermediary data structure i.e. array linked list table etc. is used for storing known instruction set portions of the new instruction set as previously described the complete new instruction set may be assembled from the instruction set portions in the data structure before being sent to DBMS for execution. Assembling may include any action or operation by or for a Command Assembler . In embodiments where appending is performed of known instruction set portions the new instruction set as previously described the complete new instruction set may be directly sent to DBMS for execution.

At step the operation defined by the new instruction set is performed on the database. The operation defined by or corresponding to the assembled new instruction set is executed on a DBMS. The operation performed may include one of or a combination of accessing modifying creating or deleting a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting of a row column or cell within a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a report view relation user account and or other objects in a DBMS. The operation performed may include any DBMS operation described herein.

Referring to in some aspects the teaching presented by the current disclosure may be implemented to include a Simplified DBMS Command Language SDCL for associative Operation or Instruction Set construction. In some embodiments SDCL may include collections of Phrases that a non technical user may typically associate with Instruction Set Portions of an Operation or Instruction Set . Phrase may include one or more letters one or more numbers one or more symbols one or more alphanumeric or any other characters a word an acronym a group of words or acronyms or a sentence each including all of its semantic variations. User may input Phrases through the Keyboard touch screen key pad or any other input device that includes a means of inputting instructions or data. These embodiments may enable a non technical user to create Operations or Instruction Sets through an associative method in which each Phrase may be associated with an Instruction Set Portion of the Operation or Instruction Set .

As shown in User may use a Mobile Device that may include the Core Program the Underlying DBMS the Input Interface the Keyboard the Output Interface the Display the Memory the Physical Storage Medium and the Associative SDCL Constructor . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to Associative SDCL Constructor may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for constructing an Operation or Instruction Set . Associative SDCL Constructor may include functions and algorithms for constructing an Operation or Instruction Set by associating Phrases with Instruction Set Portions of the Operation or Instruction Set . Associative SDCL Constructor may include functions and algorithms for constructing an Operation or Instruction Set by associating Phrases with Instruction Set Portions of the Operation or Instruction Set appropriate for the currently executing Level . Associative SDCL Constructor may be directly or operatively connected to the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Associative SDCL Constructor may include Associative Control Unit SDCL Association Database Phrase Re association Unit Associative Selection Creator and Command Assembler . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to SDCL Association Database may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing associations between Phrases and the corresponding Instruction Set Portions . SDCL Association Database may include functions and algorithms for providing Association Tables where each Association Table may include a column for the Phrases and a column for the corresponding Instruction Set Portions appropriate for the currently executing Level . The Phrase column in the Association Table may represent Phrases that User i.e. non technical user may typically associate with the Instruction Set Portions of an Operation or Instruction Set . The Instruction Set Portion or Inst Set Por column may represent the Instruction Set Portions of an Operation or Instruction Set appropriate for the currently executing Level . SDCL Association Database may be directly or operatively connected to the Associative Control Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In one example at the initiation of the Associative SDCL Constructor User may input or select a Phrase GET DATA . The Phrase GET DATA may be associated with the SELECT Instruction Set Portion within the LVL1 Association Table . The SELECT Instruction Set Portion indicates the type of Operation or Instruction Set as the SELECT type of Operation or Instruction Set i.e. SELECT type SQL statement and therefore it may be stored in a data field of the Operation and associated with the LVL1 Level . The next Phrase the User may be required to input or select is at LVL2 Level to input or select one of the Phrases associated with the keyword FROM . The next Phrase the User may be required to input or select is at LVL3 Level to input or select Tbl1 Tbl2 . . . representing the names of tables from which to obtain data. The next Phrase the User may be required to input or select is at LVL4 Level to input or select Col1 Col2 . . . representing the columns to be selected. The next Phrase the User may be required to input or select is at LVL5 Level to input or select WHERE ORDER BY or GROUP BY keyword. In the case of FILTER Phrase being inputted or selected by the User at LVL5 Level indicating the WHERE Instruction Set Portion the next Phrase the User may be required to input or select is at LVL6 Level to input or select Col1 Operator1 Vail AND Col2 Operator2 Val2 . . . representing columns operators and values used in restricting output results. Since Col1 Operator1 Val1 AND Col2 Operator2 Val2 . . . may contain more than one object operator and or value sub inputs may be required for each in one embodiment. The next Phrase the User may be required to input or select is at LVL7 Level to input or select WHERE ORDER BY or GROUP BY keyword. In the case of SORT Phrase being inputted or selected by the User at LVL7 Level indicating the ORDER BY Instruction Set Portion the next Phrase the User may be required to input or select is at LVL8 Level to input or select Col1 Col2 . . . representing columns by which to sort the resulting data set. The next Phrase the User may be required to input or select is at LVL9 Level to input or select WHERE ORDER BY or GROUP BY keyword. In the case of SUMMARIZE Phrase being inputted or selected by the User at LVL9 Level indicating the GROUP BY Instruction Set Portion the next Phrase the User may be required to input or select is at LVL10 Level to input or select Col1 Col2 . . . representing columns by which to group the resulting data set. Other Instruction Set Portions not shown may be utilized in alternate embodiments such as functions including MIN MAX SUM FIRST LAST etc. operators including OR LESS THAN GREATER THAN etc. objects including databases relations user accounts privileges etc. etc.

At each Level the Associative Control Unit may interact with 1 the Control Program to obtain the User s inputted or selected Phrase 2 the SDCL Association Database to obtain the Association Table containing the Instruction Set Portions appropriate for the currently inputted Phrase and currently executing Level 3 the Phrase Re association Unit that re associates Phrases with appropriate Instruction Set Portions for the currently executing Level 4 the Associative Selection Creator that creates the Selections appropriate for the currently executing Level and or 5 other elements. When all needed Instruction Set Portions at their respective Levels are inputted or selected the Associative Control Unit may send the completed Operation to the Command Assembler for assembling the Instruction Set for execution. In some embodiments Phrase Re association Unit may optionally be omitted. In such embodiments Associative Control Unit may receive the User s inputted Phrase from the Control Program and look up the associated Instruction Set Portion in the Association Table containing the Instruction Set Portions appropriate for the currently inputted Phrase and the currently executing Level .

It should be understood that Phrases and their associated Instruction Set Portions included in this LVL1 Association Table are examples of some possible Phrases that may be included in this LVL1 Association Table or any other Association Table . Any Phrases and their associated Instruction Set Portions included in this LVL1 Association Table or any other Association Table may be defined by the User or system administrator or by AI DBMS itself through a Phrase recording process i.e. recording user phrases as the user uses them and asking the user to assign associated Instruction Set Portions . Phrases and their associated Instruction Set Portions may also be defined based on the type of DBMS application experience testing logs inquiry analysis synthesis or other techniques in alternate implementations. In general other additional Phrases and their associated Instruction Set Portions may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Phrase Re association Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for associating or re associating Phrases with Instruction Set Portions of an Operation or Instruction Set . Phrase Re association Unit may include functions and algorithms for associating or re associating Phrases with Instruction Set Portions of an Operation or Instruction Set appropriate for the currently executing Level . For example at LVL7 Level the Phrase Re association Unit may associate Phrases with Instruction Set Portions using the LVL7 Association Table containing Instruction Set Portions WHERE ORDER BY and GROUP BY and their associated Phrases . Once User inputs a Phrase SORT for example indicating ORDER BY Instruction Set Portions Phrase Re association Unit may re associate Phrases using the LVL8 Association Table containing Instruction Set Portions Col1 Col2 etc. and their associated Phrases indicating the columns by which to sort the resulting data set. Phrase Re association Unit may be directly or operatively connected to the Associative Control Unit the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein. Phrase Re association Unit may include some or all the features and embodiments of the previously described Key Re association Unit .

Associative Selection Creator may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for creating or re creating Selections for consideration by the user. Associative Selection Creator may include functions and algorithms for creating or re creating Selections for consideration by the user appropriate for the currently executing Level . For example at LVL7 Level the Display may include a Selection that may show entries of the LVL7 Association Table containing Instruction Set Portions WHERE ORDER BY and GROUP BY and their associated Phrases . Once User inputs a Phrase SORT for example indicating ORDER BY Instruction Set Portions Associative Selection Creator may create a Selection using the LVL8 Association Table containing Instruction Set Portions Col1 Col2 etc. and their associated Phrases indicating the columns by which to sort the resulting data set. Associative Selection Creator may be directly or operatively connected to the Associative Control Unit the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein. Associative Selection Creator may include some or all the features and embodiments of the previously described Associative Selection Creator .

In some embodiments User may input an entire sentence that may then be matched against Association Tables to decipher the Phrases and or their associated Instruction Set Portions . For example User may input a sentence SHOW DATA IN Tbl4 . The words in this sentence may then be matched with the Phrases in LVL1 Association Table and it is found that SHOW DATA is a Phrase within the LVL1 Association Table . The Phrase SHOW DATA may be associated with the SELECT Instruction Set Portion it may indicate the type of Operation or Instruction Set as the SELECT type of Operation or Instruction Set i.e. SELECT type SQL statement and therefore it may be stored in a data field of the Operation and associated with LVL1 Level . The words in the rest of the sentence IN Tbl4 may then be matched with the Phrases in LVL2 Association Table and it is found that IN is a Phrase within the LVL2 Association Table . The Phrase IN may be associated with the FROM Instruction Set Portion and therefore it may be stored in a data field of the Operation and associated with LVL2 Level . The words in the rest of the sentence Tbl4 may then be matched with the Phrases in LVL3 Association Table and it is found that Tbl4 is a Phrase within the LVL3 Association Table . The Phrase Tbl4 may be associated with the Tbl4 Instruction Set Portion and therefore it may be stored in a data field of the Operation and associated with LVL3 Level . The described matching process may continue for any number of words or phrases in the sentence and for any number of Association Tables . If User wishes to construct a longer or more detailed Operation or Instruction Set that may include filtered sorted and or summarized results etc. additional Phrases and or their Instruction Set Portions may then be obtained from the User in the associative process previously described.

Referring to the illustration shows an embodiment of a method for associative construction of instruction sets through phrase input. The method may therefore be used by a user on a mobile device operating an interface for an AI DBMS to perform operations on the back end DBMS i.e. Underlying DBMS .

In brief overview at step a plurality of collections of instruction set portions to be used to assemble a new instruction set for performing an operation on a database are maintained on a mobile device. At step user preferred phrases are associated with the instruction set portions of the first collection. At step instruction set portions of the first collection along with their associated phrases are displayed on the mobile device for a selection by a user. At step user inputs or selects a first phrase associated with an instruction set portion of the first collection. At step a first portion of the new instruction set is assembled using the instruction set portion associated with the selected first phrase. At step the phrases are re associated with instruction set portions of the second collection. At step the instruction set portions of the second collection along with their associated phrases are displayed on the mobile device. At step the user inputs or selects a second phrase associated with an instruction set portion of the second collection. At step a second portion of the new instruction set is assembled using the instruction set portion associated with the second phrase. At step a determination is made if the new instruction set can be determined using method later described. At step steps are repeated for all subsequent portions of the new instruction set until the new instruction set s completion. At step the operation defined by the new instruction set is performed on the database.

In further detail at step a plurality of collections of instruction set portions are maintained on a mobile device. The instruction set portions may be used to assemble a new instruction set for performing an operation on some data in a database. The collections of instruction set portions may be maintained organized and or stored in various arrangements including tables databases DBMSs memory structures data structures etc. In some embodiments the collections of instruction set portions may be ordered to include a first collection followed by a second collection which may also be followed by a third collection and so on to complete the instruction set. The first collection of instruction set portions may include all possible or most likely first instruction set portions where the user may select among the possibilities the second collection of instruction set portions may include all possible or most likely second instruction set portions where the user may select among the possibilities and so on. In some embodiments the collections of instruction set portions may be pre defined for all possible or most used operations on each of the objects i.e. tables databases reports views relations user accounts etc. in the DBMS and the collections of instruction set portions may change as the objects in the DBMS change. In other embodiments the collections of instruction set portions may be created on fly or as needed in anticipation of the upcoming instruction set portion that the user may wish to enter.

At step user preferred phrases are associated with the instruction set portions of the first collection. In some embodiments a phrase may include one or more letters one or more numbers one or more symbols one or more alphanumeric or any other characters a word an acronym a group of words or acronyms or a sentence each including all of its semantic variations. In some embodiments user preferred phrases may include phrases that a non technical user may typically associate with instruction set portions of an instruction set such as the new instruction set. Phrases may be inputted through any internal or external input device such as keyboard mouse touch screen control wheel remote control microphone etc. In some embodiments the first collection of instruction set portions may be included in a data structure such as a table comprising a column for the phrases and a column for the associated instruction set portions of the first collection. Therefore an association may be established between a phrase and an instruction set portion of the first collection in the same row of the table. Associating may include any action or operation by or for a Phrase Re association Unit .

At step instruction set portions of the first collection along with their associated phrases are displayed on the mobile device for a selection by a user. The user may view on the display of the mobile device which phrases may be associated with specific instruction set portions of the first collection. In some embodiments the display may include phrases pointing with arrows or other such signs or indicia to their associated instruction set portions of the first collection indicating the associations for user s consideration. Displaying may include any action or operation by or for an Associative Selection Creator .

At step user inputs or selects a first phrase associated with an instruction set portion of the first collection. The first phrase may be received by the interface for a DMBS. The first phrase may be received by the mobile device or by any other mobile device or a computing device in general. The first phrase may be received by any component of the AI DBMS. User may input or select the first phrase by using the keyboard of the mobile device for example and the first phrase may be associated with one of the instruction set portions of the first collection. The associated instruction set portion of the first collection may identify or indicate one or more commands keywords instructions operators variables values objects functions and or other components of the new instruction set to be assembled.

At step a first portion of the new instruction set is assembled using the instruction set portion associated with the selected first phrase. In some embodiments assembling may include storing the first instruction set portion in a data structure such as an array linked list table etc. comprising all known instruction set portions of the new instruction set. In other embodiments assembling may include appending the first instruction set portion to a string of characters in the case of the first instruction set portion an empty string containing the known instruction set portions of the new instruction set. Assembling may include any action or operation by or for an Associative Control Unit .

At step the phrases are re associated with instruction set portions of the second collection. Step may include any action or operation described in Step as applicable.

At step the instruction set portions of the second collection along with their associated phrases are displayed on the mobile device. Step may include any action or operation described in Step as applicable.

At step the user inputs or selects a second phrase associated with an instruction set portion of the second collection. Step may include any action or operation described in Step as applicable.

At step a second portion of the new instruction set is assembled using the instruction set portion associated with the second phrase. Step may include any action or operation described in Step as applicable.

At step a determination is made if the new instruction set can be determined using method later described. In some embodiments method may be used for predicting the new instruction set by comparing its known instruction set portions with instruction set portions of prior stored instructions sets. Therefore if enough instruction set portions of the new instruction set are known the new instruction set may be identified before the user inputs all needed instruction set portions.

At step steps are repeated for all subsequent portions of the new instruction set until the new instruction set s completion. Steps may be performed repeatedly with subsequent collections of instruction set portions to assemble the new instruction set one instruction set portion at a time. Once all the needed instruction set portions are known the new instruction set may be complete. In embodiments where the intermediary data structure i.e. array linked list table etc. is used for storing known instruction set portions of the new instruction set as previously described the complete new instruction set may be assembled from the instruction set portions in the data structure before being sent to DBMS for execution. Assembling may include any action or operation by or for a Command Assembler . In embodiments where appending is performed of known instruction set portions the new instruction set as previously described the complete new instruction set may be directly sent to DBMS for execution.

At step the operation defined by the new instruction set is performed on the database. The operation defined by or corresponding to the assembled new instruction set is executed on a DBMS. The operation performed may include one of or a combination of accessing modifying creating or deleting a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting of a row column or cell within a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a report view relation user account and or other objects in a DBMS. The operation performed may include any DBMS operation described herein.

Referring to in some aspects the teaching presented by the current disclosure may be implemented to include a SDCL for associative Operation or Instruction Set construction and speech recognition for voice input.

As shown in User may use a Mobile Device that may include the Core Program the Underlying DBMS the Input Interface the Keyboard the Output Interface the Display the Memory the Physical Storage Medium the Associative SDCL Constructor the Speech Recognizer and the Microphone . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

In some embodiments Speech Recognizer may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for processing input events of the Microphone for use by the Core Program or other elements of the current disclosure. Speech Recognizer may include functions and algorithms for listening to voice events on the Microphone interpreting the voice events as User s voice commands and transmitting the voice commands for use by the Core Program . Speech Recognizer may fall under the general description of the previously described Input Interface and while it includes all the aforementioned embodiments it is described separately in this embodiment to offer additional detail on its functioning. Speech Recognizer may be implemented by utilizing 1 a Mobile Device operating system s speech recognition functionality such as iOS s Voice Services Siri etc. which may come inherently as the part of the mobile device package 2 a Java Speech API JSAPI or any of its implementations such as The Cloud Garden Sphinx etc. or 3 applications or engines providing speech recognition functionality such as OpenEars Dragon Mobile iSpeech CeedVocal Flite Julius etc. AI DBMS with Speech Recognizer may enable User to construct Operations or Instruction Sets 1 by issuing voice commands i.e. phrases etc. combined with the associative SDCL constructing process previously described 2 by issuing voice commands combined with the key associative DBMS command constructing process previously described or 3 by issuing voice commands only.

In some embodiments AI DBMS may use the Mobile Device operating system s speech recognition functionality as the Speech Recognizer . The Core Program may use the operating system s native speech recognition API such as the iOS Voice Services to obtain User s voice commands. This way Microphone may detect User s voice event the iOS Voice Services may interpret the voice event as User s voice command and make the voice event available as data i.e. text instruction instruction set command object data structure etc. to the Core Program and the Core Program may pass the data to the Associative SDCL Constructor as a Phrase for associating with Instruction Set Portions .

In other embodiments AI DBMS may use a Java Speech API JSAPI implementation as the Speech Recognizer . The Core Program may use a JSAPI implementation such as The Cloud Garden to obtain User s voice commands. This way Microphone may detect User s voice event the Cloud Garden JSAPI may interpret the voice event as User s voice command and make the voice event available as data i.e. text instruction instruction set command object data structure etc. to the Core Program and the Core Program may pass the data to the Associative SDCL Constructor as a Phrase for associating with Instruction Set Portions .

In further embodiments AI DBMS may use applications or engines providing speech recognition functionality as the Speech Recognizer . The Core Program may use an application or engine such as the OpenEars Software Development Kit SDK to obtain User s voice commands. This way Microphone may detect User s voice event the OpenEars SDK may interpret the voice event as User s voice command and make the voice event available as data i.e. text instruction instruction set command object data structure etc. to the Core Program and the Core Program may pass the data to the Associative SDCL Constructor as a Phrase for associating with Instruction Set Portions .

Depending on resource availability Speech Recognizer may be implemented as keyword spotting or as full speech recognition. Keyword spotting may attempt to find only a select group of words and or phrases and because of this limited lexicon it consumes fewer resources. In the case of keyword spotting implementation Phrases within Association Tables may define the select group of words and or phrases to be searched. Full speech recognition may attempt to find all the words and or phrases that have been spoken and because of this broader lexicon it consumes significant resources. In the case of full speech recognition implementation the broadness of words and or phrases would by definition include all the Phrases within the Association Tables . In some embodiments both keyword spotting and full speech recognition implementations may include a database of words and or phrases located locally on the Mobile Device or remotely on a remote Computing Device accessible over the Network .

Microphone may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for receiving and or detecting User s voice events or inputs. Most modern mobile devices include Microphone as one of the input devices.

Referring to in some aspects the teaching presented by the current disclosure may be implemented to include artificial intelligence i.e. machine learning and or anticipation functionalities etc. to anticipate Instruction Set Portions in an Operation or Instruction Set construction process. This embodiment may enable a user to input one or more Instruction Set Portions of an Operation or Instruction Set and AI DBMS may anticipate one or more subsequent Instruction Set Portions or the entire Operation or Instruction Set that the User may want or is most likely to implement. The anticipation of Instruction Set Portions may be combined with 1 the previously described associative method of constructing Operations or Instruction Sets via phrase input 2 the previously described associative method of constructing Operations or Instruction Sets via key input and or 3 any other method system element or feature of the current disclosure.

An embodiment is illustrated in where the anticipation of Instruction Set Portions may be combined with the previously described associative method of constructing Operations or Instruction Sets via phrase input. Associative SDCL Constructor may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for constructing an Operation or Instruction Set by associating Phrases with Instruction Set Portions of the Operation or Instruction Set as previously described. In some embodiments Associative SDCL Constructor may include artificial intelligence i.e. machine learning and or anticipation functionalities etc. to learn the Phrases that the User used in the past and anticipate future Phrases and or their associated Instruction Set Portions to be used in the Operation or Instruction Set construction process. In other embodiments Associative SDCL Constructor may include artificial intelligence i.e. machine learning and or anticipation functionalities etc. to learn the Instruction Set Portions that the User used in the past and anticipate future Instruction Set Portions to be used in the Operation or Instruction Set construction process. Since Phrases may be associated with Instruction Set Portions a Phrase may correspond to a particular Instruction Set Portion identified by that particular Phrase and vice versa. Also the Phrase may be referred to as the Instruction Set Portion and vice versa as this Instruction Set Portion may be a representation of this particular Phrase . In effect a Phrase and its corresponding Instruction Set Portion may be logical equivalents where the Instruction Set Portion may be understood or preferred by the system and the Phrase may be understood or preferred by the User . Therefore Phrase and Instruction Set Portion may be used interchangeably in descriptions of some embodiments. Associative SDCL Constructor may be directly or operatively connected to the Core Program and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Associative SDCL Constructor may include the Associative Control Unit the SDCL Association Database the Phrase Re association Unit the Associative Selection Creator the Command Assembler and the Associative SDCL Artificial Intelligence . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to in some embodiments Associative SDCL Artificial Intelligence may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for anticipating User s future Phrases Instruction Set Portions and or full Operations or Instruction Sets in an Operation or Instruction Set construction process. The Associative SDCL Artificial Intelligence may be directly or operatively connected to the Associative Control Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Associative SDCL Artificial Intelligence may include a Phrase List a Knowledge Structuring Unit a Knowledgebase a Decision making Unit and a User Confirmation Unit . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Referring to Phrase List may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing User s recently used Phrases or Instruction Set Portions . Phrase List may include some or all the features and embodiments of the previously described Operation List . While depicts examples of Phrases that each includes only one textual element i.e. string of characters etc. a Phrase may be implemented to include one or more portions of a textual element such as the previously described Instruction Set Portions in which case a Phrase may be or include a data structure such as the Operation storing those portions of a textual element. Therefore in one example Col1 Col2 . . . Phrase may be implemented as a data structure comprising Col1 portion Col2 portion and or additional . . . portions. Phrase List may be directly or operatively connected to the Associative Control Unit Knowledge Structuring Unit and the Decision making Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

Phrase List may receive a Phrase or Instruction Set Portion from the Associative Control Unit and store any number of Phrases or Instruction Set Portions that were recently used or implemented by the system. The number of Phrases or Instruction Set Portions recently used or implemented may vary depending on the embodiments and one of ordinary skill in the art would recognize that the number of stored Phrases or Instruction Set Portions may be any number that may be stored in any memory or storage described herein as previously described.

In one embodiment in which the last five Phrases or Instruction Set Portions may be stored in the Phrase List Phrases or Instruction Set Portions may be identified such that the current Phrase or Instruction Set Portion is identified as Phrase n the most recent Phrase or Instruction Set Portion prior to the current may be identified as Phrase n 1 and so on until the least most recent Phrase or Instruction Set Portion being stored is labeled as Phrase n 4. In such embodiments each time the Phrase List receives another new Phrase or Instruction Set Portion from the Associative Control Unit it may erase the least recent Phrase or Instruction Set Portion such as Phrase n 4 and insert the new Phrase or Instruction Set Portion received as Phrase n. Naturally all the most recently used or implemented Phrases or Instruction Set Portions that are stored in this list or queue may be shifted by one count further towards Phrase n 4. This way the system may maintain a queue of stored recently used or implemented Phrases or Instruction Set Portions where the queue may include any number of stored Phrases or Instruction Set Portions as previously described.

Still referring to in one example Phrase List may represent a hypothetical situation where the User started constructing a SELECT type of Operation or Instruction Set with Phrases SHOW DATA IN Tbl4 Col1 Col2 . . . and FILTER that may be associated with Instruction Set Portions SELECT FROM Tbl4 Col1 Col2 . . . and WHERE respectively.

Referring to Knowledge Structuring Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for structuring the knowledge of the User s use of Phrases or Instruction Set Portions for anticipating future Phrases or Instruction Set Portions . Knowledge Structuring Unit may include functions and algorithms for structuring the stored sequence i.e. Phrase List of User s Phrases or Instruction Set Portions into usable knowledge for future anticipating of the User s Phrases or Instruction Set Portions or operating intentions. Knowledge Structuring Unit may include some or all the features and embodiments of the previously described Knowledge Structuring Unit . Knowledge Structuring Unit may include the functionality to produce any variations of Phrases or Instruction Set Portions that may ever be used by a user. The Knowledge Structuring Unit may be directly or operatively connected to the Phrase List Knowledgebase and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In one example Knowledge Structuring Unit may receive the current Phrase List and may create a Knowledge Cell by copying Phrase n from the Phrase List into Phrase n 2 of the Knowledge Cell by copying Phrase n 1 from the Phrase List into Phrase n 1 of the Knowledge Cell by copying Phrase n 2 from the Phrase List into Phrase n of the Knowledge Cell and so forth. Knowledge Cell may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing a recorded sequence of the User s Phrases or Instruction Set Portions . In effect when a Knowledge Cell is created it may include any data structure i.e. array list linked list table etc. that may store a recorded sequence of the User s Phrases or Instruction Set Portions where for example Phrase n Phrase n 1 and Phrase n 2 may later be used for comparison with the then User s current and recent Phrases or Instruction Set Portions and Phrase n 1 and Phrase n 2 may later be used for anticipation of the User s future Phrases or Instruction Set Portions . Knowledge Cell may include some or all the features and embodiments of the previously described Knowledge Cell .

Referring to in some embodiments Knowledgebase may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing a plurality of Phrases or Instruction Set Portions . Knowledgebase may include functions and algorithms for storing a plurality of Phrases or Instruction Set Portions generally structured into one or more Knowledge Cells although Phrases or Instruction Set Portions may be stored directly in the Knowledgebase and need not be structured into or use Knowledge Cells . Knowledgebase may include the functionality for storing Knowledge Cells or Phrases or Instruction Set Portions in a particular order to enable easier access and usage of stored data. Knowledgebase may also include the functionality for managing and or modifying and or providing Knowledge Cells or Phrases or Instruction Set Portions as necessary. Knowledgebase may comprise the functionality to store and manage all the Knowledge Cells or Phrases or Instruction Set Portions that were used or implemented by any users in the past. Knowledgebase may store any variations of Knowledge Cells or Phrases or Instruction Set Portions that may ever be used by a user. Knowledgebase may include some or all the features and embodiments of the previously described Knowledgebase . Knowledgebase may be directly or operatively connected to the Knowledge Structuring Unit and the Decision making Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

As shown in Knowledgebase may include a table a vertical representation of records in a table is shown although one or more tables databases files or any other data structures or data repositories may be used. Knowledgebase may include an entire DBMS dedicated to Knowledgebase functionalities in some embodiments. For example in the case of a single table being used as the Knowledgebase a Knowledge Cell may be stored within the table where each of the Phrases or Instruction Set Portions such as for example Phrase n 2 Phrase n 1 Phrase n Phrase n 1 Phrase n 2 etc. of the Knowledge Cell may be a record with a common Knowledge Cell Identifier ID that signifies its association with its parent Knowledge Cell . Later in the process a simple call to the table to read all records with a specific Knowledge Cell ID would reconstruct the Knowledge Cell . Knowledge Cell ID may include some or all the features and embodiments of the previously described Knowledge Cell ID . In other embodiments all Phrases or Instruction Set Portions such as for example Phrase n 2 Phrase n 1 Phrase n Phrase n 1 Phrase n 2 etc. of a Knowledge Cell may be stored in a single record within the table. Knowledgebase may reside within the Underlying DBMS in some embodiments or it may reside anywhere outside the Underlying DBMS in other embodiments.

Referring to Decision making Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for anticipating User s future Phrases or Instruction Set Portions and or Operations or Instruction Sets . Decision making Unit may comprise algorithms functions rules and logic to enable the system to determine which Phrase or Instruction Set Portion the User may intend or is most likely to use or implement. Similarly Decision making Unit may comprise the functionality to determine which Phrase or Instruction Set Portion the user is second most likely to use or implement which Phrase or Instruction Set Portion the user is third most likely to use or implement and so on. Furthermore Decision making Unit may comprise the functionality to determine the sequence or order in which the user may intend or is most likely to use or implement Phrases or Instruction Set Portions . Decision making Unit may include some or all the features and embodiments of the previously described Decision making Unit . The Decision making Unit may be directly or operatively connected to the Phrase List and the Knowledgebase and or other elements to facilitate the overall system operation and implement the functionalities described herein.

In some embodiments AI DBMS may anticipate one or more Phrases or Instruction Set Portions the user may intend to enter while the User is entering initial Phrases or Instruction Set Portions of an Operation or Instruction Set . In other embodiments AI DBMS may anticipate a full Operation or Instruction Set while the User is entering initial Phrases or Instruction Set Portions .

Decision making Unit may anticipate the User s future Phrases or Instruction Set Portions by performing Substantial Similarity Comparisons between the current Phrase List and the Knowledge Cells stored in the Knowledgebase . Substantial Similarity Comparison and the included Comparison Strictness Function may include some or all the features and embodiments of the previously described Substantial Similarity Comparison and Comparison Strictness Function respectively.

As previously described Substantial Similarity Comparison may comprise algorithms functions and or logic for performing matching or comparisons and for determining that while a perfect match is not found a substantially similar match has been found. Substantial Similarity Comparison may therefore identify a sequence of Phrases or Instruction Set Portions from a Phrase List that is most like a sequence of Phrases or Instruction Set Portions from a Knowledge Cell in a Knowledgebase even if the sequence of Phrases or Instruction Set Portions from the Phrase List is different from the sequence of Phrases or Instruction Set Portions in the Knowledge Cell . Furthermore Substantial Similarity Comparison may also identify a Phrase or Instruction Set Portion from a Phrase List that is most like a Phrase or Instruction Set Portion from a Knowledge Cell in a Knowledgebase even if the Phrase or Instruction Set Portion from the Phrase List is different from the Phrase or Instruction Set Portion in the Knowledge Cell .

As previously described Comparison Strictness Function may also adjust the strictness level by choosing the number of Phrases or Instruction Set Portions that it will use to find a substantial similarity match between the Phrases or Instruction Set Portions in the Phrase List and the corresponding i.e. comparative Phrases or Instruction Set Portions in the Knowledgebase . For example as a User is inputting first three Phrases or Instruction Set Portions of an Operation or Instruction Set the User may intend to implement Comparison Strictness Function may run these three Phrases or Instruction Set Portions against Phrases or Instruction Set Portions in the Knowledgebase . If the Substantial Similarity Comparison provides a number of matching results results that have perfect equivalence that is above a particular threshold the Comparison Strictness Function may decide to increase the strictness of the rules to decrease the number of results. AI DBMS may then decide to wait for the User to add the fourth Phrase or Instruction Set Portion thereby allowing the Substantial Similarity Comparison to use the fourth Phrase or Instruction Set Portion in addition to the earlier three to find a smaller number of matching results. Once the user adds the fourth Phrase or Instruction Set Portion the Substantial Similarity Comparison may use all four Phrases or Instruction Set Portions to find a match. If the number of matching results results that perfectly match i.e. total equivalence is sufficiently small the system may present the User with these results. If however the number of matching results is still too high the Comparison Strictness Function may determine to further increase the strictness by requiring the user to add additional Phrases or Instruction Set Portions and thereby further narrow the search results before presenting the user with the suggested results. In some embodiments Phrases or Instruction Set Portions added may include a portion of a command or a keyword such as a first one or more letters of a Phrase or Instruction Set Portion .

Comparison Strictness Function may therefore increase and decrease the strictness of the rules for finding a substantial similarity match depending on the number of Phrases or Instruction Set Portions the user has already entered and or whether or not perfect matches had been found. As such Comparison Strictness Function may utilize two thresholds the upper and a lower threshold to determine the strictness of the rules used for determining the substantial similarity match. The upper threshold may correspond to the number of substantial similarity matches that are too high to be presented to the user i.e. too many matching results too vague suggestions . Alternatively the lower threshold may correspond to the strictness level that results in too few results to be presented to the user. Comparison Strictness Function may make any combination of the aforementioned adjustments to achieve that the number of substantial similarity matches falls between the upper and the lower threshold. As such Comparison Strictness Function may keep adjusting the strictness rules for finding the substantially similar match until both thresholds are satisfied thereby adjusting the results until the best set of results is found.

Referring to in some embodiments Confirmation Unit may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for confirming the User s anticipated Phrases or Instruction Set Portions and or Operations or Instruction Sets with the User . Confirmation Unit may comprise algorithms and functions to enable the system to confirm the Phrases or Instruction Set Portions and or Operations or Instruction Sets that the AI DBMS determined i.e. via the substantial similarity comparison could be the Phrases or Instruction Set Portions or Operations or Instruction Sets which the user may want to use or implement. Confirmation Unit may include some or all the features and embodiments of the previously described Confirmation Unit . Confirmation Unit may be directly or operatively connected to the Decision making Unit and the Associative Control Unit and or other elements to facilitate the overall system operation and implement the functionalities described herein.

As shown in Confirmation Unit may include a Substantially Similar Knowledge Cell a Context Interpreter a User Confirmation process step and the Phrase List . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments. Substantially Similar Knowledge Cell Context Interpreter and User Confirmation process step may include some or all the features and embodiments of the previously described Substantially Similar Knowledge Cell Context Interpreter and User Confirmation process step respectively.

The context in which the Phrases or Instruction Set Portions from the Phrase List were performed may be analyzed by the Context Interpreter . In one embodiment context may be defined as any sub segment of a Phrase or Instruction Set Portion that is not used in the Substantial Similarity Comparison or any information about the Phrases or Instruction Set Portions from the Phrase List that may be useful in anticipating User s future Phrases or Instruction Set Portions or Operations or Instruction Sets . In effect Context Interpreter may represent an extra analysis step and it may attempt to capture all information and or elements that may have been omitted by the Substantial Similarity Comparison and or by the other process steps or elements.

As previously described an example of Context Interpreter s usefulness is the fact that values may be omitted from Substantial Similarity Comparisons in some embodiments. It is Context Interpreter s responsibility to discover the values or the ranges of values used in the User s recent Phrases or Instruction Set Portions by extracting the values from the Phrases or Instruction Set Portions .

Referring to the illustration shows an embodiment of a method for predicting instruction set portions that the user is most likely to use next based on sequences of prior used instruction set portions. The method may therefore be used by a user on a mobile device operating an interface for an AI DBMS to perform operations on the back end DBMS i.e. Underlying DBMS .

In brief overview at step a mobile device receives a sequence of first and second instruction set portions of an instruction set for performing an operation on a database. The sequence may include an order of consecutive instruction set portions such as for example a first instruction set portion followed by a second instruction set portion. At step the sequence of the instruction set portions is stored into a knowledgebase that comprises plurality sequences of instruction set portions. At step the mobile device receives a new instruction set portion of a new instruction set for performing an operation on a database. At step the new instruction set portion is compared with instruction set portions in the knowledgebase. At step a determination is made that there is a substantial similarity between the new instruction set portion and the first instruction set portion. At step the second instruction set portion is displayed on the mobile device as an option to be selected by a user. At step the second instruction set portion is modified in response to edits by the user should the user decide to modify the second instruction set portion. At step a portion of the new instruction set is assembled using the new instruction set portion and a different portion of the new instruction set is assembled using the second instruction set portion or the modified second instruction set portion. At step steps are repeated for all subsequent portions of the new instruction set until the new instruction set s completion. At step the operation defined by the new instruction set is performed on the database.

In further detail at step a mobile device receives a sequence of first and second instruction set portions of an instruction set for performing an operation on a database. Each instruction set portion may indicate or identify one or more commands keywords instructions operators variables values objects functions and or other components of an instruction set for performing an operation on some data in some database. The sequence may include a first instruction set portion followed by a second instruction set portion which may also be followed by a third instruction set portion and so on. Instruction set portions of the sequence may be received by the interface for a DMBS. Instruction set portions of the sequence may be received by any component of the AI DBMS. Instruction set portions of the sequence may be received by the mobile device or by any other mobile device or a computing device in general.

At step the sequence of the instruction set portions is stored into a knowledgebase that comprises plurality sequences of instruction set portions. The knowledgebase may comprise any number of instruction set portions and or sequences of instruction set portions each of which may be stored in various arrangements including tables database memory structures data structures etc. In some embodiments knowledgebase may include instruction set portions and or sequences of instruction set portions from the mobile device via which the instruction set portions and or sequences are received. In other embodiments knowledgebase may include instruction set portions and or sequences of instruction set portions from any number of computing devices. Knowledgebase or additional knowledgebases may also be populated to include the user specific and or group specific informations gathered with respect to the instruction set portions and or sequences of instruction set portions. Also stored in knowledgebase may be the weight assigned to each instruction set portion.

At step the mobile device receives a new instruction set portion of a new instruction set for performing an operation on a database. The new instruction set portion may identify or indicate any commands keywords instructions operators variables values objects functions and or other components of an instruction set for performing an operation on a database indicated herein. For instance the new instruction set portion may include a keyword DELETE indicating an operation to delete an entry in a database. In another example the new instruction set portion may include keyword s CREATE TABLE indicating an operation to create a table in a database. The new instruction set portion may include any keyword s to indicate any other operations such as for example to select add delete or modify an entry add delete or modify a column add delete or modify a table add delete or modify a database add delete or modify a relation add delete or modify a user account etc. The new instruction set portion of the new instruction set may be for performing some operation on some database managed by the AI DBMS. The new instruction set portion may be stored into instruction set portion lists.

At step the new instruction set portion is compared with instruction set portions in the knowledgebase. In one embodiment the new instruction set portion may be compared as a single string of characters with a plurality of instruction set portions in the knowledgebase. In other embodiments comparison may be implemented by treating each of one or more components i.e. words etc. of an instruction set portion as a separate string to be matched independently. In further embodiments comparison may be implemented by matching one or more components of the new instruction set portion with one or more components of the instruction set portions stored in a knowledgebase. In yet further embodiments comparison may also be implemented by matching all but one of one or more components of the new instruction set portion with one or more components of an instruction set portion stored in a knowledgebase. Comparison may also be implemented by matching all but two of one or more components of the new instruction set portion with one or more components of an instruction set portion stored in a knowledgebase. Comparison may also be implemented by matching one or more components of the new instruction set portion with one or more components of the instruction set portions from the knowledgebase factoring in the weights for each of the components of instruction set portions from the knowledgebase. As such matching some components of the instruction set portions from the knowledgebase may be more important than other components having smaller weight.

At step a determination is made that there is a substantial similarity between the new instruction set portion and instruction set portions in the knowledgebase such as the first instruction set portion. In one embodiment during the comparison of the one or more components of the new instruction set portion and the one or more components of the first instruction set portion a perfect match may be found. In other embodiments AI DBMS may find a plurality of perfect matches with a plurality of instruction set portions stored in a knowledgebase. If the number of matches exceeds a threshold for maximum number of substantial similarity results strictness level for determining a substantial similarity match may be modified to include an additional one or more components of the new instruction set portion in order to narrow down or reduce the number of the perfect matching results. In some embodiments if no perfect match is found or if a number of matches is lower than a threshold for minimum amount of substantially matching results then strictness level may be reduced to allow for finding a match that is imperfect. In some embodiments a strictness level may be reduced to allow for a match for more important components of the one or more components of the new instruction set portion to be matched with the components of instruction set portions in the knowledgebase. The more important components i.e. words etc. of the one or more components of the new instruction set portion may be components including command words or keywords. For example a substantial match may be found when SQL keywords from the one or more components of the new instruction set portion match SQL keywords and or the order of such keywords from one or more components of instruction set portions in the knowledgebase even if one or more variable names data names or database names are not matched. Substantial match may also be found when a strictness level is reduced to allow a match to have all but one of the one or more components of the new instruction set portion matching an instruction set portion in the knowledgebase. Similarly a substantial match may be found when a strictness level is reduced to allow a match to have all but two of the one or more components of the new instruction set portion matching an instruction set portion in the knowledgebase. Likewise a substantial match may be found when a strictness level is reduced to allow a match to have all but three of the one or more components of the new instruction set portion matching an instruction set portion in the knowledgebase. The one two or three non matched components of the new instruction set portion may be components having smaller or smallest weight. For example the non matched components of the new instruction set portion may be variable names database names or other components of the instruction set portion that may be less important than the commands or keywords for example. Determination of substantial similarity between the one or more components of the new instruction set portion and the first instruction set portion may include any one of or any combination of substantial similarity determination techniques or embodiments discussed herein.

At step the second instruction set portion is displayed on the mobile device as an option to be selected by a user. The second instruction set portion may be displayed in response to determining that the first instruction set portion may be the most substantial match with the new instruction set portion and that the second instruction set portion immediately follows the first instruction set portion. In some embodiments AI DBMS may select the second instruction set portion for display on the mobile device responsive to the determination at step . In further embodiments the second instruction set portion may be displayed along with one or more instruction set portions that may immediately follow the second instruction set portion.

At step the second instruction set portion is modified in response to edits by the user should the user decide to modify the second instruction set portion. In one example the second instruction set portion may be modified to indicate the same column as was indicated in previously used instruction set portions of the new instruction set. In another example the second instruction set portion may be modified to indicate an appropriate value to be used in the new instruction set.

At step a portion of the new instruction set is assembled using the new instruction set portion and a different portion of the new instruction set is assembled using the second instruction set portion or the modified second instruction set portion. In some embodiments assembling may include storing the new instruction set portion and the second instruction set portion or the modified second instruction set portion in a data structure such as an array linked list table etc. comprising all known instruction set portions of the new instruction set. In other embodiments assembling may include appending the new instruction set portion and the second instruction set portion or the modified second instruction set portion to a string of characters containing the known instruction set portions of the new instruction set. Assembling may include any action or operation by or for an Associative Control Unit .

At step steps are repeated for all subsequent portions of the new instruction set until the new instruction set s completion. Once all the needed instruction set portions are known the instruction set may be complete. In embodiments where the intermediary data structure i.e. array linked list table etc. is used for storing known instruction set portions as previously described the new instruction set may be assembled from the instruction set portions in the data structure before being sent to DBMS for execution. Assembling may include any action or operation by or for a Command Assembler . In embodiments where appending is performed of known instruction set portions as previously described the new instruction set may be directly sent to DBMS for execution.

At step the operation defined by the new instruction set is performed on the database. The operation performed may include one of or a combination of accessing modifying creating or deleting a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting of a row column or cell within a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a report view relation user account and or other objects in a DBMS. The operation performed may include any DBMS operation described herein.

Referring to an embodiment of a method for implementing the functionality of an AI DBMS via an interface is illustrated. In brief overview at step a first instruction set for performing an operation on a database is received. At step the first instruction set is processed into instruction set portions. At step instruction set portions are stored into a knowledgebase that comprises plurality of other instruction sets each having their own instruction set portions. At step one or more portions of a new instruction set that is entered by a user is received the new instruction set for performing an operation on a database. At step the one or more portions of the new instruction set are compared with the portions of the plurality of instruction sets stored in the knowledgebase. At step AI DBMS determines that there is a substantial similarity between the one or more portions of the new instruction set and the first instruction set stored in the knowledgebase. At step the first instruction set is displayed on the mobile device as an option to be selected by the user. At step the interface provides the means for the user to further modify the selected first instruction set should the user decide to do so. At step the operation defined by the first instruction set or the modified instruction set is performed on the database.

In further detail at step an interface for the AI DBMS receives a first instruction set for performing an operation on a database. The first instruction set may include commands and instructions along with data names and variable names identifying the specific operation to be taken on a specific database. The first instruction set may be received by the interface for a DBMS. The first instruction set may be received by any component of the AI DBMS.

At step the first instruction set is processed into instruction set portions. In some embodiment the first instruction set is disassembled into a plurality of portions. Each of the portions may be further processed. Processing may also include identifying the type of the first instruction set in terms of the commands used. Specifically determinations may be made to identify if the first instruction set is for modifying data selecting data accessing data creating a database creating a row or a column within a database making a new entry or similar nature or type of the first instruction set. Processing may further include creating a timestamp of the time when the first instruction set has been received. Processing may further include identifying a user which entered the first instruction set or identifying a group to which the user belongs. Processing may include assigning a weight to each of the portions of the first instruction set. Processing may include any action or operation by or for a Command Disassembler .

At step instruction set along with its disassembled instruction set portions may be stored in a knowledgebase that comprises a plurality of instruction sets each of which includes a plurality of portions of its own. In some embodiments instruction sets may be stored in a data structure for storing instruction sets such as a table of the knowledgebase. Instruction set portions may be stored in knowledge cells where each group of instruction sets forms a knowledge cell. Knowledgebase or additional knowledgebases may also be populated to include the user specific and or group specific informations gathered with respect to the first instruction set. Also stored in knowledgebase may be the weight assigned to each of the portions of the first instruction set.

At step one or more portions of a new instruction set entered by a user on the mobile device is received. The one or more portions of the new instruction set may be for performing some operation on some database managed by the AI DBMS. In some embodiments the user enters in sequence one two or three portions of a new instruction set which the user intends to enter into the mobile device to perform an operation defined by that new instruction set on a particular data in a database. As the user enters the one or more portions of the new instruction set and before the user completes entering the entire new instruction set the one or more portions of the new instruction set may be received by a component of the AI DBMS such as the Associative SDCL Artificial Intelligence or DBMS Artificial Intelligence . One or more portions of the new instruction set may be stored into operations lists.

At step the received one or more portions of the new instruction set are compared with the portions of the instruction sets in the knowledgebase. The one or more portions of the new instruction set may be compared with any of the portions of the instruction sets in the knowledgebase. In one embodiment the one or more portions of the new instruction set are compared as a single string of characters with a plurality of portions of instruction sets in the knowledgebase. In other embodiments comparison may be implemented by treating each instruction set portion as a separate string to be matched independently. In further embodiments comparison is implemented by matching all of one or more portions of the new instruction set with one or more portions of an instruction set stored in a knowledgebase. Comparison may be implemented by matching all but one of the one or more portions of the new instruction set with one or more portions of an instruction set stored in a knowledgebase. Comparison may also be implemented by matching all but two of one or more portions of the new instruction set with one or more portions of an instruction set stored in a knowledgebase. Comparison may also be implemented by comparing the one or more portions of the new instruction set with portions of the instruction sets from the knowledgebase factoring in the weights for each of the instruction set portions from the knowledgebase. As such matching some portions of the instruction sets from the knowledgebase may be more important than other portions having smaller weight.

At step AI DBMS determines that there is a substantial similarity between the one or more portions of the new instruction set and the first instruction set stored in the knowledgebase. In one embodiment during the comparison of the one or more portions of the new instruction set and the portions of the first instruction set a perfect match may be found. In other embodiments AI DBMS may find a plurality of perfect matches with a plurality of stored instruction sets. If the number of matches exceeds a threshold for maximum number of substantial similarity results strictness level for determining a substantial match may be modified to include an additional one or more portions of the new instruction set in order to narrow down or reduce the number of the perfect matching results.

Still at in some embodiments if no perfect match is found or if a number of matches is lower than a threshold for minimum amount of substantially matching results then strictness level may be reduced to allow for finding a match that is imperfect. In some embodiments a strictness level may be reduced to allow for a match for more important portions of the one or more portions of the new instruction set to be matched with the instruction sets in the knowledgebase. The more important portions of the one or more portions of the new instruction set may be portions including command words or keywords. For example a substantial match may be found when SQL keywords from the one or more portions of the new instruction set match SQL keywords and the order of such keywords in one or more stored instruction sets in the knowledgebase even if one or more variable names data names or database names are not matched. Substantial match may also be found when a strictness level is reduced to allow a match to have all but one portion of the one or more portions of the new instruction set matching an instruction set in the knowledgebase. Similarly a substantial match may be found when a strictness level is reduced to allow a match to have all but two portions of the one or more portions of the new instruction set matching an instruction set in the knowledgebase. Likewise a substantial match may be found when a strictness level is reduced to allow a match to have all but three portions of the one or more portions of the new instruction set matching an instruction set in the knowledgebase. The one two or three non matched portions of the instruction set may be portions having smaller or smallest weight. For example the non matched portions of the instruction set may be variable names database names or other portions of the instruction set that may be less important than the command keywords for example. Determination of substantial similarity between the one or more portions of the new instruction set and the first instruction set may include any one of or any combination of substantial similarity determination techniques or embodiments discussed herein.

At step mobile device may display the first instruction set as an option to be selected by a user. The first instruction set may be displayed in response to determining that the first instruction set is the most substantial match with the one or more portions of the new instruction set. In some embodiments AI DBMS may select the first instruction set for display on the mobile device responsive to the determination at step . In further embodiments the first instruction set may be displayed along with one or more instruction sets that are also identified as substantially similar or substantially matching the one or more portions of the new instruction set at step .

At step the first instruction set may be modified in response to edits by the user. If a user decides that the first instruction set is very similar to the instruction set the user wanted to enter aside for a few changes for example the user may modify the first instruction set. In some embodiments interface for the AI DBMS may provide the means for the user to modify the first instruction set upon the selection of the first instruction set on the display of the mobile device by the user.

At step AI DBMS performs the operation defined by the first instruction set or the modified first instruction set if the first instruction set has been modified at step on the DBMS. The operation performed may include one of or a combination of accessing modifying creating or deleting a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting of a row column or cell within a table of a database. The operation performed may include one of or a combination of accessing modifying creating or deleting a report view relation user account and or other objects in a DBMS. The operation performed may include any DBMS operation described herein.

Referring to in some aspects the teaching presented by the current disclosure may be implemented in exemplary embodiments to provide AI DBMS functionalities for a media player. Such embodiments may include artificial intelligence i.e. machine learning and or anticipation functionalities etc. to learn the user s use of the media DBMS store this knowledge in a knowledgebase and anticipate the user s future operating intentions to help the user in his her use of the media player. Such embodiments may also include the associative method of constructing Operations or Instruction Sets via key input the SDCL for associative construction of Operations or Instruction Sets via phrase input speech recognition for voice input and or other methods systems elements or features and their embodiments as previously described. AI DBMS may be used by the User on a Media Player and the Media Player may further include Core Program DBMS Artificial Intelligence Input Interface Output Interface Display Memory Physical Storage Medium Associative DBMS Command Constructor Associative SDCL Constructor Speech Recognizer Microphone Underlying Media DBMS Sound Interface Speaker and Media Player Controls . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Media Player may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for playing media. Examples of Media Player include a music player such as an iPod a video player such as a DVD player a picture player a television device a media capable computer a media capable cellular phone such as a Smartphone a media capable tablet and other media players.

In some embodiments Underlying Media DBMS may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing managing and or manipulating various types of media or references thereto. The media may include music video pictures and other media generally included in digital files. In one example the media files or references thereto may be stored as Rows in a single Table within a single Database . In another example the media files or references thereto may be stored as Rows in multiple Tables within multiple Databases based on the type of content the media files contain i.e. tables for specific authors and databases for specific genres of music or video etc. . Columns may be provided to include additional information such as author authorship date copyright information and other additional information pertinent to the media file. Underlying Media DBMS may reside on the User s Media Player or it may reside on a remote Computing Device accessible over a Network and if on a remote Computing Device the Underlying Media DBMS may be available as a network service i.e. music or video streaming service etc. as previously described. User may access manage and or manipulate the Underlying Media DBMS by using a control means and or an associated interface of the Media Player and or by using the previously described associative methods of constructing Operations or Instruction Sets via key phrase and or voice inputs or a combination thereof.

In one example each time User wishes to play a media file on the Media Player User may issue an operating instruction i.e. Instruction Set or Operation etc. to the Underlying Media DBMS to retrieve the media file or a reference thereto to be played. Responsive to the User s operating instruction to retrieve the media file or a reference thereto Underlying Media DBMS may perform a SELECT type of Instruction Set or Operation i.e. SELECT type of SQL statement or any other SELECT type of DBMS command etc. . In another example each time User wishes to delete a media file or a reference thereto on the Media Player User may issue an operating instruction i.e. Instruction Set or Operation etc. to the Underlying Media DBMS to delete the media file or a reference thereto. Responsive to the User s operating instruction to delete the media file or a reference thereto Underlying Media DBMS may perform a DELETE type of Instruction Set or Operation i.e. DELETE type of SQL statement or any other DELETE type of DBMS command etc. . Furthermore AI DBMS may learn the User s operating instructions such as the media file or a reference thereto retrieving or deleting instructions store them for future use and anticipate them in the future as previously described.

In some embodiments Media Player may include the associative method of constructing Operations or Instruction Sets via key input as previously described. In one example Keys of the Media Player Controls or other input device may be associated with Instruction Set Portions of an Instruction Set or Operation for retrieving a media file to be played from the Underlying Media DBMS . As such User may initially be offered a Selection on the Media Player s Display to input a Key indicating that the User wishes to play a media file. The next Selection the User may be offered may be to input a Key indicating in which play list i.e. table in a database is the media file the User wishes to play. The next Selection the User may be offered may be to input a Key indicating which specific media file i.e. row in a table the User wishes to play. AI DBMS may assemble Instruction Set or Operation from the inputted Keys and their associated Instruction Set Portions to facilitate the User s operating instructions on the Underlying Media DBMS as previously described.

In other embodiments Media Player may include the SDCL for associative construction of Operations or Instruction Sets via phrase or voice input as previously described. In one example Phrases i.e. user preferred phrases etc. may be associated with Instruction Set Portions of an Instruction Set or Operation for retrieving a media file to be played from the Underlying Media DBMS . As such User may initially be offered a Selection on the Media Player s Display to input a Phrase i.e. PLAY etc. indicating that the User wishes to play a media file. The next Selection the User may be offered may be to input a Phrase i.e. MY FAVORITE LIST etc. indicating in which play list i.e. table in a database is the media file the User wishes to play. The next Selection the User may be offered may be to input a Phrase i.e. LOVE SONG etc. indicating which specific media file i.e. row in a table the User wishes to play. AI DBMS may assemble Instruction Set or Operation from the inputted Phrases and their associated Instruction Set Portions to facilitate the User s operating instructions on the Underlying Media DBMS as previously described.

In one exemplary embodiment Media Player may be a music player such as an iPod. Underlying Media DBMS may include music files or references to music files with either or both the Underlying Media DBMS and the music files stored in the Media Player s Memory and or Physical Storage Medium . As the User selects music files to play DBMS Artificial Intelligence may learn the User s music playing selections i.e. Instruction Sets or Operations store this knowledge i.e. Knowledge Cells etc. in the Knowledgebase and anticipate the User s future music playing intentions i.e. future anticipatory Instruction Sets or Operations as previously described. User may input his her music playing instructions 1 by using the music player s native control means such as iPod s control wheel and the associated control program i.e. interface etc. that interprets the control wheel s input events and generates requests to access manage and or manipulate the Underlying Media DBMS and or 2 by using the previously described associative methods of constructing Instruction Sets or Operations via key phrase and voice inputs or a combination thereof.

In another exemplary embodiment Media Player may be a network connected television device with network browsing capabilities. Underlying Media DBMS may include video files or references to video files with either or both the Underlying Media DBMS and the video files stored or on a remote Computing Device accessible over a Network as a network service. As the User selects video files to play DBMS Artificial Intelligence may learn the User s video playing selections i.e. Instruction Sets or Operations store this knowledge i.e. Knowledge Cells etc. in the Knowledgebase and anticipate the User s future video playing intentions i.e. future anticipatory Instruction Sets or Operations as previously described. Additionally as previously described a global Knowledgebase including video playing knowledge i.e. Knowledge Cells etc. of other users may be available to User to guide his her future video playing intentions. User may input his her video playing instructions 1 by using the television device s native control means such as a remote control and the associated control program i.e. interface etc. that interprets the remote control s input events and generates requests to access manage and or manipulate the Underlying Media DBMS and or 2 by using the previously described associative methods of constructing Instruction Sets or Operations via key phrase and voice inputs or a combination thereof.

In yet another exemplary embodiment Media Player may be a standard television device without network browsing capabilities. Underlying Media DBMS may include cable satellite on the air or other video channels or references thereto. Underlying Media DBMS may also include information on the User s preferred settings such as volume color contrast brightness and other settings for various types of channels and video content. As the User selects video channels to watch DBMS Artificial Intelligence may learn the User s channel watching selections i.e. Instruction Sets or Operations the timing of the channel watching selections and the User s preferred settings for the various types of channels and video content store this knowledge i.e. Knowledge Cells etc. in the Knowledgebase and anticipate the User s future channel watching intentions i.e. future anticipatory Instruction Sets or Operations as previously described. In one example User may watch specific channels at specific times as many television watchers do when they watch daily or weekly scheduled shows and AI DBMS may learn the channels and the times i.e. using the time stamp etc. and automatically switch to these channels at their specific times and if the User is not at home AI DBMS may trigger a recording process for later recorded channel watching. In another example while watching his her favorite show User may switch to other channels during commercials in specific time intervals and AI DBMS may learn the channels and the time intervals i.e. using time stamp etc. and automatically switch the channels to avoid commercials. In yet another example User may change volume color contrast brightness and other settings based on the User s preferences for various types of channels and content and AI DBMS may learn the User s preferred settings i.e. using Extra Infos etc. for the specific channels and content and adjust the settings automatically. User may input his her video playing instructions 1 by using the television device s native control means such as a remote control and the associated control program i.e. interface etc. that interprets the remote control s input events and generates requests to access manage and or manipulate the Underlying Media DBMS and or 2 by using the previously described associative methods of constructing Instruction Sets or Operations via key phrase and voice inputs or a combination thereof.

Sound Interface may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for processing output from the Core Program or other elements of the current disclosure for listening by the User . Sound Interface falls under the general description of the previously described Output Interface and it is described separately in this embodiment to offer additional detail on its functioning. Sound Interface may be or include a sound driver a Java sound API a built in sound interface or any other sound interface.

Speaker may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for providing sound to the User . Speaker may be a built in or an external speaker headphone or any other sound producing device.

Media Player Controls may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for inputting operating instructions or data. Media Player Controls may include a means of inputting operating instructions or data by pressing keys or buttons touching keys or buttons clicking keys or buttons sliding physical components or manipulating other physical or other elements. Examples of Media Player Controls include a control wheel i.e. iPod s control wheel etc. a keypad a touch screen a keyboard or any other input or control device.

Referring to in some aspects the teaching presented by the current disclosure may be implemented in exemplary embodiments to provide AI DBMS functionalities for a GPS receiver. Such embodiments may include artificial intelligence i.e. machine learning and or anticipation functionalities etc. to learn the user s use of the global locations DBMS store this knowledge in a knowledgebase and anticipate the user s future operating intentions to help the user in his her use of the GPS receiver. Such embodiments may also include the associative method of constructing Operations or Instruction Sets via key input the SDCL for associative construction of Operations or Instruction Sets via phrase input speech recognition for voice input and or other methods systems elements or features and their embodiments as previously described.

AI DBMS may be used by the User on a GPS Receiver and the GPS Receiver may further include Core Program DBMS Artificial Intelligence Input Interface Output Interface Display Memory Physical Storage Medium Associative DBMS Command Constructor Associative SDCL Constructor Speech Recognizer Microphone Sound Interface Speaker Underlying Locations DBMS and Touch Screen . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

GPS Receiver may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for GPS functionalities. Examples of the GPS Receiver include a hand held GPS receiver a built in GPS receiver i.e. built in a car or boat etc. GPS capable cellular telephone i.e. Smartphone etc. and other GPS receivers.

In some embodiments Underlying Locations DBMS may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing managing and or manipulating location references. Location references may include latitude longitude altitude coordinates street addresses distances from a fixed point and other location references. In one example location references may be stored as Rows in a single Table within a single Database . In another example location references may be stored as Rows in multiple Tables within multiple Databases based on the geographic groupings i.e. tables for specific cities and databases for specific countries etc. . Columns may be provided to include additional information such as population historic facts general climate facts and other additional information pertinent to a specific location reference. Underlying Locations DBMS may reside on the User s GPS Receiver or it may reside on a remote Computing Device accessible over a Network and if on a remote Computing Device the Underlying Locations DBMS may be available as a network service i.e. service for updating location references etc. as previously described. User may access manage and or manipulate the Underlying Locations DBMS by using a control means and or an associated interface of the GPS Receiver and or by using the previously described associative methods of constructing Operations or Instruction Sets via key phrase and or voice inputs or a combination thereof.

In one example each time User wishes to visit a location stored on the GPS Receiver User may issue an operating instruction i.e. Instruction Set or Operation etc. to the Underlying Locations DBMS to retrieve the location reference i.e. latitude longitude altitude coordinates address etc. to be visited. Responsive to the User s operating instruction to retrieve the location reference Underlying Locations DBMS may perform a SELECT type of Instruction Set or Operation i.e. SELECT type of SQL statement or any other SELECT type of DBMS command etc. . In another example each time User wishes to delete a location reference on the GPS Receiver User may issue an operating instruction i.e. Instruction Set or Operation etc. to the Underlying Locations DBMS to delete the location reference. Responsive to the User s operating instruction to delete the location reference Underlying Locations DBMS may perform a DELETE type of Instruction Set or Operation i.e. DELETE type of SQL statement or any other DELETE type of DBMS command etc. . Furthermore AI DBMS may learn the User s operating instructions such as the location reference retrieving or deleting instructions store them for future use and anticipate them in the future as previously described.

In some embodiments GPS Receiver may include the associative method of constructing Operations or Instruction Sets via key input as previously described. For example Keys of the Touch Screen or other input device may be associated with Instruction Set Portions of an Instruction Set or Operation for retrieving a location reference of a location to be visited from the Underlying Locations DBMS . As such User may initially be offered a Selection on the GPS Receiver s Display to input a Key indicating that the User wishes to visit a location. The next Selection the User may be offered may be to input a Key indicating in which city i.e. table in a database is the location the User wishes to visit. The next Selection the User may be offered may be to input a Key indicating which specific location i.e. row in a table the User wishes to visit. AI DBMS may assemble Instruction Set or Operation from the inputted Keys and their associated Instruction Set Portions to facilitate the User s operating instructions on the Underlying Locations DBMS as previously described.

In other embodiments GPS Receiver may include the SDCL for associative construction of Operations or Instruction Sets via phrase or voice input as previously described. For example Phrases i.e. user preferred phrases etc. may be associated with Instruction Set Portions of an Instruction Set or Operation for retrieving a location reference of a location to be visited from the Underlying Locations DBMS . As such User may initially be offered a Selection on the GPS Receiver s Display to input a Phrase i.e. GO TO etc. indicating that the User wishes to visit a location. The next Selection the User may be offered may be to input a Phrase i.e. LOS ANGELES etc. indicating in which city i.e. table in a database is the location the User wishes to visit. The next Selection the User may be offered may be to input a Phrase i.e. SCIENCE MUSEUM etc. indicating which specific location i.e. row in a table the User wishes to visit. AI DBMS may assemble Instruction Set or Operation from the inputted Phrases and their associated Instruction Set Portions to facilitate the User s operating instructions on the Underlying Locations DBMS as previously described.

In one exemplary embodiment GPS Receiver may be a network connected GPS receiver. Underlying Locations DBMS may include location references stored in the GPS Receiver s Memory and or Physical Storage Medium . As the User selects location references to visit DBMS Artificial Intelligence may learn the User s selections i.e. Instruction Sets or Operations of location references store this knowledge i.e. Knowledge Cells etc. in the Knowledgebase and anticipate the User s future location visiting intentions i.e. future anticipatory Instruction Sets or Operations as previously described. Additionally as previously described a global Knowledgebase including location visiting knowledge i.e. Knowledge Cells etc. of other users may be available to User to guide his her future location visiting intentions. In one example User may come to a city for the first time and look for places of interest to visit. After User discovers and visits a great restaurant and or an interesting museum AI DBMS may anticipate the User s future location references based on the sequence of location visits of other users in the global Knowledgebase who visited the same restaurant and or the museum. User may input his her location visiting instructions 1 by using GPS Receiver s native control means such as the Touch Screen and the associated control program i.e. interface etc. that interprets the touch screen s input events and generates requests to access manage and or manipulate the Underlying Locations DBMS and or 2 by using the previously described associative methods of constructing Instruction Sets or Operations via key phrase and voice inputs or a combination thereof.

Touch Screen may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for inputting operating instructions or data. Touch Screen may include a means of inputting operating instructions or data by touching areas of the Touch Screen representing keys or buttons sliding Touch Screen s slider components or manipulating other Touch Screen elements.

Referring to in some aspects the teaching presented by the current disclosure may be implemented in exemplary embodiments to provide AI DBMS functionalities for a business operation. Such embodiments may include artificial intelligence i.e. machine learning and or anticipation functionalities etc. to learn the user s use of the business operation DBMS store this knowledge in a knowledgebase and anticipate the user s future operating intentions to help the user in his her running the business operation. Such embodiments may also include the associative method of constructing Operations or Instruction Sets via key input the SDCL for associative construction of Operations or Instruction Sets via phrase input speech recognition for voice input and or other methods systems elements or features and their embodiments as previously described.

AI DBMS may be used by the User on a Personal Computer and the Personal Computer may further include Core Program DBMS Artificial Intelligence Input Interface Keyboard Output Interface Display Memory Physical Storage Medium Associative DBMS Command Constructor Associative SDCL Constructor Speech Recognizer Microphone Sound Interface Speaker and Underlying Business Operation DBMS . Other additional elements may be included as needed or some of the disclosed ones may be excluded or a combination thereof may be utilized in alternate embodiments.

Personal Computer may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for computing functionalities. Examples of the Personal Computer include a desktop computer a mobile computer such as a laptop or tablet computer computing capable cellular telephone i.e. Smartphone etc. and other personal computers.

In some embodiments Underlying Business Operation DBMS may comprise any hardware software or a combination of hardware and software and or it may include functions and algorithms for storing managing and or manipulating various business operation data. Business operation data may include sales inventory payroll employee benefits financial and other business operation data. In a small business example business operation data may be stored as Rows in a single or multiple Tables within a single Database . In an enterprise organization example business operation data may be stored as Rows in multiple Tables within multiple Databases based on the organizational departments i.e. tables for specific functions within a department and databases for specific departments etc. . Underlying Business Operation DBMS may reside on the User s Personal Computer or it may reside on a remote Computing Device accessible over a Network and if on a remote Computing Device the Underlying Business Operation DBMS may be available as a network service i.e. database service for multiple users to connect and use etc. as previously described. User may access manage and or manipulate the Underlying Business Operation DBMS by using a control means and or an associated interface of the Personal Computer and or by using the previously described associative methods of constructing Operations or Instruction Sets via key phrase and or voice inputs or a combination thereof.

In one example each time User wishes to view a business operation data on the Personal Computer User may issue an operating instruction i.e. Instruction Set or Operation etc. to the Underlying Business Operation DBMS to retrieve the business operation data to be viewed. Responsive to the User s operating instruction to retrieve the business operation data Underlying Business Operation DBMS may perform a SELECT type of Instruction Set or Operation i.e. SELECT type of SQL statement or any other SELECT type of DBMS command etc. . In another example each time User wishes to delete a business operation data on the Personal Computer User may issue an operating instruction i.e. Instruction Set or Operation etc. to the Underlying Business Operation DBMS to delete the business operation data. Responsive to the User s operating instruction to delete the business operation data Underlying Business Operation DBMS may perform a DELETE type of Instruction Set or Operation i.e. DELETE type of SQL statement or any other DELETE type of DBMS command etc. . Furthermore AI DBMS may learn the User s operating instructions such as the business operation data retrieving or deleting instructions store them for future use and anticipate them in the future as previously described.

In some embodiments Personal Computer may include the associative method of constructing Operations or Instruction Sets via key input as previously described. In one example Keys of the Keyboard or other input device may be associated with Instruction Set Portions of an Instruction Set or Operation for retrieving a business operation data to be viewed from the Underlying Business Operation DBMS . As such User may initially be offered a Selection on the Personal Computer s Display to input a Key indicating that the User wishes to view a business operation data. The next Selection the User may be offered may be to input a Key indicating in which table i.e. table in a database is the business operation data the User wishes to view. The next Selection the User may be offered may be to input a Key indicating which specific business operation data i.e. row in a table the User wishes to view. AI DBMS may assemble Instruction Set or Operation from the inputted Keys and their associated Instruction Set Portions to facilitate the User s operating instructions on the Underlying Business Operation DBMS as previously described.

In other embodiments Personal Computer may include the SDCL for associative construction of Operations or Instruction Sets via phrase or voice input as previously described. In one example Phrases i.e. user preferred phrases etc. may be associated with Instruction Set Portions of an Instruction Set or Operation for retrieving a business operation data to be viewed from the Underlying Business Operation DBMS . As such User may initially be offered a Selection on the Personal Computer s Display to input a Phrase i.e. GET DATA etc. indicating that the User wishes to view a business operation data. The next Selection the User may be offered may be to input a Phrase i.e. SALES etc. indicating in which table i.e. table in a database is the business operation data the User wishes to view. The next Selection the User may be offered may be to input a Phrase i.e. 2013 FORD FOCUS etc. indicating which specific business operation data i.e. row in a table the User wishes to view. AI DBMS may assemble Instruction Set or Operation from the inputted Phrases and their associated Instruction Set Portions to facilitate the User s operating instructions on the Underlying Business Operation DBMS as previously described.

In one exemplary embodiment Personal Computer may be a network connected desktop computer. Underlying Business Operation DBMS may reside on a remote Computing Device accessible over a Network i.e. enterprise network or virtual private network over the Internet etc. . As the User performs select insert update delete and other operations on the business operation data DBMS Artificial Intelligence may learn User s operations i.e. Instruction Sets or Operations store this knowledge i.e. Knowledge Cells etc. in the Knowledgebase and anticipate the User s future operating intentions i.e. future anticipatory Instruction Sets or Operations as previously described. In one example User may be responsible for maintaining sales and inventory Tables within one or multiple Databases . When a sale is made User may need to perform several insert update and or other operations such as inserting a Row into the sales Table and updating a Row in the inventory Table for each product sold. Each product may have its separate sales and inventory Tables and User may need to perform update operations on multiple sales and inventory Tables . After performing insert and update operations for one or more initial sale transactions AI DBMS may learn the User s sequence of operations for each sale transaction and perform the corresponding operations automatically. In another example User may be responsible for financial reporting. This type of reporting is often a daily weekly monthly and or yearly scheduled process of creating same or similar reports with updated times dates or other filtering information. After creating one or more scheduled Reports Views AI DBMS may learn the timing i.e. using time stamp etc. of the User s Reports Views creation and create future Reports Views automatically. User may input his her business operation DBMS instructions 1 by using the previously described Keyboard and Input Interface to access manage and or manipulate the Underlying Business Operation DBMS and or 2 by using the previously described associative methods of constructing Instruction Sets or Operations via key phrase and voice inputs or a combination thereof.

In another exemplary embodiment Personal Computer may be a network connected mobile computer. Underlying Business Operation DBMS may be stored in the Personal Computer s Memory or Physical Storage Medium . Also User may be a non technical small business user attempting to create a Database with several business operation Tables i.e. sales inventory etc. . As previously described a global Knowledgebase including Database and Table creation knowledge i.e. Knowledge Cells etc. of other users may be available to User to guide his her Database and Table creation intentions. In one example User may be a professional painter and wish to create a database for a business that sells paintings. User may wish to organize his her paintings for sale into several Tables based on the topic of the paintings i.e. a Table for paintings of nature a Table for paintings of animals etc. . After User creates an initial empty Database titled paintings for sale AI DBMS may anticipate the user s table creation intentions i.e. future anticipatory Instruction Sets or Operations based on the sequence of table creations of other users in the global Knowledgebase who created a paintings for sale or its semantic variations Database in a similar small business context. User may input his her business operation DBMS instructions 1 by using the previously described Keyboard and Input Interface to access manage and or manipulate the Underlying Business Operation DBMS and or 2 by using the previously described associative methods of constructing Instruction Sets or Operations via key phrase and voice inputs or a combination thereof.

A number of embodiments have been described herein. While this specification contains many specific implementation details these should not be construed as limitations on the scope of any inventions or of what may be claimed but rather as descriptions of features specific to particular embodiments. It will be understood that various modifications may be made without departing from the spirit and scope of the invention. The logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other or additional steps may be provided or some of the steps may be eliminated from the described flows and or other components may be added to or removed from the described methods systems and techniques. Further the various aspects and disclosed methods systems and techniques can be combined in whole or in part with each other to produce additional implementations. Moreover the separation of various components in the embodiments described herein should not be understood as requiring such separation in all embodiments and it should be understood that the described components may generally be integrated together in a single software product or packaged into multiple software products. Accordingly other embodiments are within the scope of the following claims.

