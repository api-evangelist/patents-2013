---

title: Retrieving stored data using a web service
abstract: Retrieving stored data using a web service is provided. An access request from a user account may be received at a web service via a proxy. The web service may decode information received in the access request. The web service may then authorize the user account utilizing the decoded information. The web service may then determine a request type based on the access request. The web service may then send a response based on the determined request type, which is based on data retrieved from a data store.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09165031&OS=09165031&RS=09165031
owner: Microsoft Technology Licensing, LLC
number: 09165031
owner_city: Redmond
owner_country: US
publication_date: 20130613
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

Computer and software users have grown accustomed to user friendly software applications that help them write calculate organize prepare presentations and reports and the like. Project management applications for example allow users to create reports from data retrieved using SQL queries which directly access a project database. However with the advent of cloud based computing user access to server platforms for retrieving data is provided remotely on a software as a service basis from the cloud. As a result these users no longer have direct access to required databases e.g. SQL databases which are typically utilized for retrieving data and generating reports. It is with respect to these considerations and others that the various embodiments of the present invention have been made.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are provided for retrieving stored data using a web service. An access request from a user account may be received at a web service via a proxy. The web service may decode information received in the access request. The web service may then authorize the user account utilizing the decoded information. The web service may then determine a request type based on the access request. The web service may then send a response based on the determined request type which is based on data retrieved from a data store.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are illustrative only and are not restrictive of the invention as claimed.

Embodiments are provided for retrieving stored data using a web service. An access request from a user account may be received at a web service via a proxy. The web service may decode information received in the access request. The web service may then authorize the user account utilizing the decoded information. The web service may then determine a request type based on the access request. The web service may then send a response based on the determined request type which is based on data retrieved from a data store.

In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These embodiments may be combined other embodiments may be utilized and structural changes may be made without departing from the spirit or scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

Referring now to the drawings in which like numerals represent like elements through the several figures various aspects of the present invention will be described. is a block diagram illustrating a network architecture for retrieving stored data using a web service in accordance with an embodiment. The network architecture includes a client computing device which is in communication with a proxy . The proxy which may comprise a router is in communication with the client computing device and a computing device . The computing device which may comprise an application server is in communication with the proxy and a data store . The data store may comprise a Structured Query Language SQL server.

The client computing device may store user accounts and reports . In accordance with an embodiment the user accounts may comprise access credentials for multiple tenants of a project service which may store data related to thousands of customers. For example on a given client device multiple user accounts may exist which link to separate tenants. It should be also understood that in accordance with an embodiment a customer may deploy an on premises version of the project service which could be specific for a single customer.

It should be appreciated that the project service may be configured such that each tenant e.g. a customer or company may only be provided access to specific data related to their organization. The reports may comprise project data reports which may be created from data stored on the data store . The client computing device may be configured to transmit a request query to the proxy . The request query may comprise a hypertext transfer protocol HTTP for accessing the computing device via the proxy . It should be understood that in accordance with this embodiment the client computing device may only access the proxy and thus may not have access to the computing device or any services provided thereon . The request query may also include a user request for data from the data store . The client computing device may also be configured to receive a response A from the computing device via the proxy .

The proxy may be configured to receive the request query from the computing device which is used to authenticate a user account. The proxy may further be configured to append header information not shown which is utilized to create an enriched request query A to the computing device . In accordance with this embodiment the appended header information may include an original uniform resource locator URL . It should be understood that the client computing device may maintain an open connection with the proxy which returns results from the computing device i.e. the application server . The appended header information may further include the user account of the requesting user which may be used by the computing device for authorization purposes and a tracking globally unique identifier GUID which may be used to mark entries for a single request in a similar fashion for multiple computing devices . The proxy is also configured to receive the response A from the computing device for delivery to the client computing device .

The computing device may comprise a web service application . The web service application is configured to provide a service which receives the request query A from the proxy sends an SQL query B for retrieving requested data from the data store receives an SQL response comprising the requested data and sends the response A to the proxy for delivery to the client computing device . In accordance with the present embodiment the web service application may utilize the Open Data Protocol OData protocol. As should be understood by those skilled in the art the OData protocol is a data access protocol designed to provide standard create read update and delete CRUD access to a data source including but not limited to SQL databases via a Web or cloud service. It should understood be however that the embodiments described herein are not limited to the OData protocol. For example in some embodiments the web service application may utilize a Representational State Transfer REST web Application Programming Interface API which is also known as a RESTful web API. REST is a style of software architecture for distributed systems such as the World Wide Web. RESTful web APIs are web APIs implemented using HTTP and REST principles. In accordance with the present embodiment the web service application may be further be configured to utilize the original URL discussed above when building navigational links in the response A so as to ensure the links are usable by the client computing device . The web service application may further be configured to utilize the user accounts for authorizing access to predetermined data in the data store . The web service application may further be configured to decode the header information received from the proxy utilize this information to authorize user requests e.g. the request query received from one of the user accounts on the client computing device and build the response A according to user permissions for accessing the data store . In authorizing user requests the web service application may utilize the OAuth standard. As known to those skilled in the art OAuth is an open standard for authorization which provides a method for clients to access server resources on behalf of a resource owner such as a different client or an end user . OAuth also provides a process for end users to authorize third party access to their server resources without sharing their credentials typically a username and password pair using user agent redirections. It should be understood however that other authorization standards may also be utilized. In accordance with this embodiment the web service application may comprise project management server software which stores project data i.e. the data which may include projects tasks and resources in a central SQL server database i.e. the data store protected from unauthorized access and corruption. For example the web service application may comprise the PROJECT SERVER project management software from MICROSOFT CORPORATION of Redmond Wash. It should be appreciated however that other project management software from other manufacturers also may be utilized in accordance with the various embodiments described herein. Those skilled in the art should further appreciate that in accordance with various embodiments the web service application is not limited to project management server software but may comprise any software which provides a service enabling secure access to data stored in a centralized database.

The computing device may also comprise a defined set of entities . The entities may be the result of a model of the data store which is created using logical relationships. The entities may be presented to a user associated with the user accounts after the user had attempted to connect and successfully authenticated to the web service provided by the computing device . It should be appreciated that the entities presented from the aforementioned web service provides a schema which facilitates the creation of reports by users without requiring knowledge of SQL or SQL extensions including but not limited to Transact SQL T SQL . It should be understood that a model may be utilized for the building of metadata that describes a schema of the results returned by the web service application . The metadata may be separated into classifications which comprise properties . In particular the metadata may be separated entity properties i.e. entities that are included in the web service application and dynamic entity properties i.e. entities added by customers e.g. custom fields . It should be understood in accordance with an embodiment the entities and their non dynamic properties may be compiled from a markup language file e.g. XML in order to facilitate editing. In this manner the model may be altered quickly and easily when reacting to customer feedback.

It should be further understood that the web service application may be configured to consider markup language e.g. XML defined in the model and add custom definitions as properties to the appropriate entity definition. It should be appreciated that by utilizing the entities and the properties end users may add new fields to an SQL database without needing to modify SQL statements in order to report on them. It should be further appreciated that program code defining the model does not need to be re compiled after custom fields have been added to the data store . Thus the custom fields are made available on the fly thereby allowing a user to take advantage of them immediately. The entities and the properties will be described in greater detail below with respect to .

The routine begins at operation where the web service application executing on the computing device may receive an access request from a user account via the proxy . For example the web service application may receive an access request from a user account in the request query A received from the proxy .

From operation the routine continues to operation where the web service application executing on the computing device may decode information received in the request query A from the proxy .

From operation the routine continues to operation where the web service application executing on the computing device may authorize a user account using the decoded information received in the request query A from the proxy. As discussed above with respect to the user account authorization may be limited to predetermined data in the data store .

From operation the routine continues to operation where the web service application executing on the computing device may determine whether metadata has been requested in the access request received at operation . If at operation the web service application determines that metadata has not been requested then the routine continues to operation . If at operation the web service application determines that metadata has been requested then the routine branches to operation .

At operation the web service executing on the computing device may receive a query from a user account . For example the query may be received from the request query A sent by the proxy . The query may be based on the entities and include a dynamic query which comprises a query of the one or more custom field definitions in the dynamic entity properties B.

From operation the routine continues to operation where the web service application executing on the computing device may retrieve the data from the data store . In order to retrieve the data the web service application may for example create the SQL query B by translating entity and property names utilized in the request query A to SQL send the SQL query B to the data store and retrieve SQL data from the data store . The web service application may then utilize the retrieved SQL data in building the response A for a requesting user account on the client computing device .

From operation the routine continues to operation where the web service application executing on the computing device may build an output including the response A using the retrieved data from the data store .

From operation the routine continues to operation where the web service application executing on the computing device may send the response A to a user account on the computing device . From operation the routine then ends.

Returning now to operation upon a determination that metadata has been requested the routine branches to operation where the web service application executing on the computing device may return entities including static entity properties A and dynamic entity properties B for creating the reports . As discussed above with respect to the dynamic entity properties B may comprise one or more custom field definitions added as properties to a corresponding entity definition e.g. a Projects entity . From operation the routine then ends.

The computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks solid state storage devices SSD flash memory or tape. Such additional storage is illustrated in by a removable storage and a non removable storage . The computing device may also have input device s such as a keyboard a mouse a pen a sound input device e.g. a microphone for voice input a touch input device for receiving gestures an accelerometer or rotational sensor etc. Output device s such as a display speakers a printer etc. may also be included. The aforementioned devices are examples and others may be used. The computing device may include one or more communication connections allowing communications with other computing devices . Examples of suitable communication connections include but are not limited to RF transmitter receiver and or transceiver circuitry universal serial bus USB parallel and or serial ports.

Furthermore various embodiments may be practiced in an electrical circuit comprising discrete electronic elements packaged or integrated electronic chips containing logic gates a circuit utilizing a microprocessor or on a single chip containing electronic elements or microprocessors. For example various embodiments may be practiced via a system on a chip SOC where each or many of the components illustrated in may be integrated onto a single integrated circuit. Such an SOC device may include one or more processing units graphics units communications units system virtualization units and various application functionality all of which are integrated or burned onto the chip substrate as a single integrated circuit. When operating via an SOC the functionality described herein may operate via application specific logic integrated with other components of the computing device system on the single integrated circuit chip . Embodiments may also be practiced using other technologies capable of performing logical operations such as for example AND OR and NOT including but not limited to mechanical optical fluidic and quantum technologies. In addition embodiments may be practiced within a general purpose computer or in any other circuits or systems.

The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures or program modules. The system memory the removable storage device and the non removable storage device are all computer storage media examples i.e. memory storage. Computer storage media may include RAM ROM electrically erasable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other article of manufacture which can be used to store information and which can be accessed by the computing device . Any such computer storage media may be part of the computing device . Computer storage media does not include a carrier wave or other propagated or modulated data signal.

Communication media may be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media.

Various embodiments are described above with reference to block diagrams and or operational illustrations of methods systems and computer program products. The functions acts noted in the blocks may occur out of the order as shown in any flow diagram. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality acts involved.

The description and illustration of one or more embodiments provided in this application are not intended to limit or restrict the scope of the invention as claimed in any way. The embodiments examples and details provided in this application are considered sufficient to convey possession and enable others to make and use the best mode of claimed invention. The claimed invention should not be construed as being limited to any embodiment example or detail provided in this application. Regardless of whether shown and described in combination or separately the various features both structural and methodological are intended to be selectively included or omitted to produce an embodiment with a particular set of features. Having been provided with the description and illustration of the present application one skilled in the art may envision variations modifications and alternate embodiments falling within the spirit of the broader aspects of the general inventive concept embodied in this application that do not depart from the broader scope of the claimed invention.

