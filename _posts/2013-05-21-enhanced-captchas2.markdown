---

title: Enhanced captchas
abstract: Concepts and technologies are described herein for providing enhanced Completely Automated Public Turing tests to Tell Computers and Humans Apart (“CAPTCHAs”). According to some of the concepts and technologies disclosed herein, a CAPTCHA service may be configured to generate CAPTCHAs enhanced with watermarks and/or other enhancements. The CAPTCHA service may provide the enhanced CAPTCHAs to user services, such as Websites, Web services, and other services that utilize or are capable of utilizing CAPTCHAs as a security feature. The watermarks and/or other enhancements may contain information associated with users of the user services so that the enhanced CAPTCHAs are more difficult to break by unauthorized entities, including automated programs such as “bots.” According to other concepts and technologies disclosed herein, a CAPTCHA breaking service is provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09563763&OS=09563763&RS=09563763
owner: Amazon Technologies, Inc.
number: 09563763
owner_city: Seattle
owner_country: US
publication_date: 20130521
---
A Completely Automated Public Turing test to Tell Computers and Humans Apart CAPTCHA is a challenge response test used in computing to verify that a response is provided by a human being rather than a computer. CAPTCHAs typically include one or more characters that have been distorted in some manner so as to make it difficult or in some cases impossible for a computer to provide the correct response. Common forms of distortion include introducing noise creating a distorted background warping characters waving characters crowding characters and using strikethrough lines.

Websites often use CAPTCHAs as a layer of security to prevent potentially malicious activity from automated programs such as bots. For example an automated program may be configured to add spam such as unwanted advertisements to a Website or provide false information into online forms. Other automated programs may force repeated requests to servers that may cause the servers to slow down or even fail for example.

CAPTCHAs are becoming increasingly more difficult for human beings to solve. This is at least in part due to advancements in artificial intelligence that have made it possible for computers to solve CAPTCHAs that rely on simple distortion techniques such as those described above. In an effort to reduce the solvability of CAPTCHAs the techniques used to obscure characters for CAPTCHAs are becoming increasingly more complex often to the point of being unreadable or marginally readable by human beings. This may frustrate users and may even deter some users from using a Website or service that utilizes CAPTCHAs.

The following detailed description is directed to generating and providing enhanced CAPTCHAs. According to some of the concepts and technologies disclosed herein a CAPTCHA service may be configured to generate CAPTCHAs enhanced with watermarks and or other enhancements. The CAPTCHA service may provide the enhanced CAPTCHAs to user services such as Websites Web services and other services that utilize or are capable of utilizing CAPTCHAs as a security feature. The watermarks and or other enhancements may contain information associated with users of the user services so that the enhanced CAPTCHAs are more difficult to solve or break by unauthorized entities including automated programs such as bots. According to other concepts and technologies disclosed herein a CAPTCHA breaking service is provided.

It should be appreciated that the subject matter presented herein may be implemented as a computer process a computer controlled apparatus a computing system or an article of manufacture such as a computer readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types.

Those skilled in the art will also appreciate that aspects of the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein including multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers handheld computers personal digital assistants e book readers cellular telephone devices special purposed hardware devices network appliances and the like. The embodiments described herein may be practiced in distributed execution environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed execution environment program modules may be located in both local and remote memory storage devices.

In the following detailed description references are made to the accompanying drawings that form a part hereof and that show by way of illustration specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures.

The operating environment shown in includes a computing system operating as a part of and or in communication with a network . According to various implementations of the concepts and technologies disclosed herein the computing system can include a user computing device such as a tablet computing device a personal computer PC a desktop computer a laptop computer a notebook computer a cellular phone or smartphone other mobile computing devices a personal digital assistant PDA or the like. An example architecture that may be used to implement the computing system is illustrated and described below with reference to .

According to some other embodiments the functionality of the computing system can be provided at least in part by a cloud based computing platform that can be provided by one or more application servers Web servers data storage systems network appliances dedicated hardware devices and or other server computers or computing devices. For purposes of illustrating and describing the concepts and technologies disclosed herein the functionality of the computing system is described herein as being provided by a user computing device. In light of the alternative embodiments of the computing system described above it should be understood that this example is illustrative and should not be construed as being limiting in any way.

The computing system can communicate via the network to access various services described herein. For example the computing system can access a user service and a CAPTCHA service via the network . The functionality of the user service and the CAPTCHA service can be provided by one or more application servers Web servers data storage systems network appliances dedicated hardware devices and or other server computers or computing devices.

The user service can utilize the CAPTCHA service to provide standard and or enhanced CAPTCHAs as a security feature to eliminate or at least mitigate unwanted access to the user service as will be described in greater detail below. In some embodiments the user service and the CAPTCHA service are provided by or for the same entity such as an e commerce Website an e mail service a distributed computing service or any other service that utilizes or is capable of utilizing CAPTCHAs. The network may be a local area network LAN a wide area network WAN the Internet or any other networking topology known in the art that connects the computing system to the user service and the CAPTCHA service .

The computing system can be configured to execute an operating system and one or more application programs such as for example a Web browser application a native application application and or other application programs. The operating system is a computer program for controlling the operation of the computing system . The application programs are executable programs configured to execute on top of the operating system to provide various functionality described herein.

In particular the Web browser is a software application executing on the computing system for retrieving presenting and traversing information resources. The Web browser can provide the computing system access to the user service the CAPTCHA service and or other information resources through one or more uniform resource identifiers URIs .

The application is a software application executing on the computing system for accessing the user service . The application may be a native software application configured to access the user service . Alternatively the application may be a hybrid software application configured to access the user service via a Web component built in to a native container of the application . A user can access the user service and or the CAPTCHA service via the Web browser and or the application .

The user service can include a CAPTCHA service module through which to access the CAPTCHA service . The CAPTCHA service module can include code for accessing the CAPTCHA service via one or more application programming interfaces APIs exposed by the CAPTCHA service . The CAPTCHA service module can be coded in any programming language known to those skilled in the art. The CAPTCHA service module may be utilized by a plug in installed in the Web browser to access features provided by the CAPTCHA service .

The user service can also include user data stored in one or more databases or other data structures on one or more physical storage components not shown such as for example hard drives solid state drives or tape drives. The user data can include any data associated with one or more users of the user service . The user data may be associated with user accounts or may be standalone data. The user data might include one or more usernames passwords personal identification numbers other authentication credentials social security numbers e mail addresses physical addresses user account histories user purchase histories e.g. for implementations in which the user service is an e commerce Website user device information e.g. MAC address and or IP address of the computing system and or other computing systems other data associated with one or more users other data associated with the computing system other data associated with other computing systems combinations thereof and the like. The user service can provide at least a portion of the user data to the CAPTCHA service for use by the CAPTCHA service in generating enhanced CAPTCHAs as will be described below in detail.

Enhanced CAPTCHAs are CAPTCHAs that include one or more enhancements. An enhancement may be a watermark enhancement. An enhancement may be the character s of the CAPTCHA being generated based at least partially upon the user data . For example an enhanced CAPTCHA may include characters that resemble or spell out a username a user s e mail address or any of the user data . Alternatively an enhanced CAPTCHA might directly or indirectly request a user to insert some personally identifiable information such as their name e mail address physical address telephone number the name of a product they recently purchased the last four digits of their credit card number on file with the user service or any other information that may be recognizable to a user but not recognizable or at least less recognizable to other entities including other users bots and other automated systems that are attempting to solve or break the CAPTCHA.

An enhanced CAPTCHA that includes a watermark enhancement is referred to herein as a watermarked CAPTCHA. A watermark enhancement may be visible or invisible. A visible watermark enhancement can at least partially overlay the characters of a CAPTCHA. A visible watermark enhancement can be presented above below or adjacent to a character string of a CAPTCHA or any of the individual characters of a CAPTCHA. A visible watermark enhancement additionally or alternatively can be embedded in one or more of the characters of a CAPTCHA.

An invisible watermark enhancement can insert a pattern of bits into the CAPTCHA to encode a message which can then be recovered using a recovery scheme. In some embodiments the watermark message includes at least a portion of the user data or other information associated with a user of the user service . Invisible watermarks can be inserted into CAPTCHAs in accordance with any known digital watermarking techniques and others not yet realized.

Some examples of enhanced CAPTCHAs that contain visible watermarks and other enhancements are illustrated and described with reference to . It should be understood that these examples are merely illustrative and should not be construed as being limiting in any way.

The CAPTCHA service can include one or more server computers and or other computing systems configured to execute one or more modules to generate validate and break standard CAPTCHAs watermarked CAPTCHAs other enhanced CAPTCHAs or any combination thereof. In particular the server computers can execute a generate CAPTCHA module to generate CAPTCHAs including standard CAPTCHAs watermarked CAPTCHAs other enhanced CAPTCHAs or any combination thereof. The server computers can execute a validate CAPTCHA module to validate CAPTCHA responses received from the user service and or other services not shown that utilize CAPTCHAs. The server computers can execute a break CAPTCHA module to break i.e. solve CAPTCHAs at the request of the user service and or other services not shown as will be described below in greater detail.

It should be understood that the generate CAPTCHA module the validate CAPTCHA module and the break CAPTCHA module can be coded in any programming language known to those skilled in the art. It also should be understood that the generate CAPTCHA module the validate CAPTCHA module and the break CAPTCHA module may execute on the same server computer or on different server computers which may be co located or distributed.

The generate CAPTCHA module in some embodiments can create characters by random generation for use in creating CAPTCHAs. In some other embodiments the generate CAPTCHA module can utilize at least a portion of the user data or other data received from the user service or another service or computing system e.g. the computing system for use in creating CAPTCHAs. The generate CAPTCHA module can apply any distortion or other techniques to distort or otherwise obscure the characters. It should be understood that the characters of a CAPTCHA may be provided without any distortion and instead rely on the additional security features provided by watermarks and or other enhancements for security. The generate CAPTCHA module can also create visible and invisible watermarks and apply watermarks to CAPTCHAs.

CAPTCHAs generated by the generate CAPTCHA module can be stored in a CAPTCHA storage component CAPTCHA storage which may be implemented using any number of storage devices such as for example hard disks solid state drives disk arrays tape drives combinations thereof and the like. In the illustrated example the CAPTCHA storage stores one or more standard CAPTCHAs one or more watermarked CAPTCHAs and one or more other enhanced CAPTCHAs . The CAPTCHA storage may store CAPTCHAs in association with one or more users identified by the user data . Although the CAPTCHA storage is illustrated as being co located with the server computers the CAPTCHA storage may be implemented remote from the server computers . Moreover storage devices utilized by the CAPTCHA storage may be co located or distributed. In some embodiments the CAPTCHA storage is hosted by or for the user service as an alternative to the illustrated embodiment.

The generate CAPTCHA module can generate CAPTCHA solutions for use by the validate CAPTCHA module . CAPTCHA solutions may be stored along with or separate from corresponding CAPTCHAs in a table or other data structure within the CAPTCHA storage . CAPTCHA solutions may be hashed or protected by other security measures in accordance with any hashing or security technology to eliminate or at least mitigate unauthorized breaking of CAPTCHAs. In some embodiments the generate CAPTCHA module provides the CAPTCHA solutions for an enhanced CAPTCHA to the CAPTCHA service module along with the enhanced CAPTCHA. The CAPTCHA service module can then utilize the solutions at the appropriate time to determine if a received solution for a CAPTCHA is a correct solution.

In some embodiments the generate CAPTCHA module determines values for CAPTCHAs and assigns values to CAPTCHAs. The values may be monetary values or other values e.g. points values or other proprietary values that can be charged by the CAPTCHA service to the user service and or other services for using the CAPTCHA generated by the CAPTCHA service . The CAPTCHA service in some embodiments keeps a portion e.g. a percentage of CAPTCHA values and gives another portion e.g. another percentage to the user service if the user service elects to have CAPTCHAs broken by the break CAPTCHA module as will be described below in greater detail.

In some embodiments CAPTCHAs generated by the CAPTCHA module include associated metadata. The metadata might describe for example a link to a generated CAPTCHA along with the value associated with the CAPTCHA. The metadata might also provide other information intended for use by the break CAPTCHA module described below in generating a correct solution to a CAPTCHA. The metadata might also contain other types of information.

The validate CAPTCHA module can be called by the user service and more particularly the CAPTCHA service module to validate input e.g. a character string provided to the user service in response to presentation of a CAPTCHA by the user service . The validate CAPTCHA module can compare the input received from the user service to a stored CAPTCHA solution to determine whether the input is correct. If so the validate CAPTCHA module can instruct the user service to allow the user or other entity that provided the input to access the user service . If the input received from the user service is incorrect the validate CAPTCHA module can instruct the user service to deny the user or other entity that provided the input to access the user service .

The break CAPTCHA module can provide a CAPTCHA breaking service to compliment the CAPTCHA generation service provided by the generate CAPTCHA module . For any number of reasons the user service may elect to allow a user or other entity including a bot or other automated program to access the user service without having to provide the correct input for a CAPTCHA to obtain access to the user service . However rather than removing the security layer provided by a CAPTCHA the user service can selectively allow the CAPTCHA to be broken. In particular the user service can call the break CAPTCHA module to break a CAPTCHA and in exchange the CAPTCHA service can provide the user service with at least a portion of a value e.g. a pre defined percentage of the value assigned to the CAPTCHA. In some embodiments the break CAPTCHA module provides an API through which a caller can obtain cost data i.e. the cost to break the enhanced CAPTCHA or other metadata associated with a particular enhanced CAPTCHA.

In this manner the user service can receive benefit from the security provided by a CAPTCHA to selectively allow access to the user service and to selectively allow the CAPTCHA to be broken by the break CAPTCHA module to allow users or other entities including bots or other automated programs that might be unable to provide the correct response to solve the CAPTCHA to access the user service yet still receive some benefit in the form of at least a portion of the value for doing so.

In some embodiments the CAPTCHA service module or other component of the user service is configured to implement calls to the break CAPTCHA module based upon certain criteria to selectively allow breaking of CAPTCHAs. For example the user service may provide a search engine that from time to time receives multiple search queries in quick succession which may be behavior indicative of an automated program configured to submit automated queries to the search engine with or without malicious intent.

In this example the user service might be configured to present a CAPTCHA in response to a pre defined number of search queries within a specified period of time and may determine to allow the automated program to circumvent the CAPTCHA by calling the break CAPTCHA module to break the CAPTCHA. In this manner the user service can receive some benefit monetary or otherwise in the form of at least a portion of the value associated with the CAPTCHA from allowing the automated program to continue to access the user service . The user service may determine that the value is worth allowing the automated program to access the user service . It should be understood that the search engine example provided above is merely one example of a user service that could receive benefit from the selective CAPTCHA breaking service described herein and should not be construed as being limiting in any way.

It should be appreciated that the services provided by the generate CAPTCHA module the validate CAPTCHA module and or the break CAPTCHA module might be offered to various customers. For example in one particular implementation a first customer might utilize the generate CAPTCHA module to generate a CAPTCHA in the manner presented herein. A second customer might utilize the break CAPTCHA module to break the CAPTCHA generated for the first customer. The break CAPTCHA module might also be configured to charge a fee to the second customer for breaking the CAPTCHA.

Turning now to user interface diagrams A H for several illustrative examples of enhanced CAPTCHAs will be described in detail. Each user interface diagram of the user interface diagrams A H includes a CAPTCHA element A H an input element A H a submit button A H and an enhanced CAPTCHA A H. It should be understood that the user interfaces shown in the user interface diagrams A H may include additional or alternative user interface elements than will now be described. It also should be understood that the user interface diagrams A H may be designed with any number and combination of colors patterns gradients shapes sizes and or other visual elements. As such the examples shown in are illustrative and should not be construed as being limiting in any way.

The input elements A H allow a user or other entity to provide a solution to the enhanced CAPTCHAs A H shown in the CAPTCHA elements A H. The submit buttons A H allow a user or other entity to submit the solution entered in the input elements A H. The CAPTCHA elements A H and the enhanced CAPTCHAs A H will now be described in greater detail.

The CAPTCHA elements A H are user interface elements configured to present one or more standard CAPTCHAs watermarked CAPTCHAs other enhanced CAPTCHAs or combinations thereof. Although each of the CAPTCHA elements A H shows one CAPTCHA i.e. one of the enhanced CAPTCHAs A H it should be understood that the CAPTCHA elements A H may be configured to present two or more standard CAPTCHAs watermarked CAPTCHAs and or other enhanced CAPTCHAs.

The illustrated CAPTCHA element A contains the enhanced CAPTCHA A which is an enhanced CAPTCHA designed with a watermark enhancement A containing an e mail address associated with a user. The illustrated CAPTCHA element B contains the enhanced CAPTCHA B which is an enhanced CAPTCHA with a watermark enhancement B containing some personally identifiable information shown as the word INFO embedded within the enhanced CAPTCHA B associated with a user.

The illustrated CAPTCHA element C contains the enhanced CAPTCHA C which is an enhanced CAPTCHA containing characters generated based upon a username associated with a user. In some embodiments the enhanced CAPTCHA C is the username associated with a user. In some other embodiments the enhanced CAPTCHA C indirectly requests that a user provide his or her username into the input element C as a solution for the enhanced CAPTCHA C. Likewise the enhanced CAPTCHA D contained in the CAPTCHA element D may be generated based upon a birthday associated with a user and may be the birthday of the user or a request that the user provide his or her birthday into the input element D as a solution for the enhanced CAPTCHA D.

The inclusion of a user s email address a user s username or a user s birthday as in the illustrated examples or any other personally identifiable information in a watermarked CAPTCHA or other enhanced CAPTCHA can deter malicious activity by tying the challenge response test provided by a particular CAPTCHA to a particular user. Moreover a system used to break a CAPTCHA may be deterred from attempting to break a watermarked or other enhanced CAPTCHA that includes personally identifiable information. Such systems may include for example crowdsourcing marketplaces that compensate human beings for performing tasks e.g. breaking CAPTCHAs that require or are at least better suited to human intelligence rather than artificial intelligence.

The inclusion of personally identifiable information in a watermarked CAPTCHA or other enhanced CAPTCHA can also improve readability by the user associated with the personally identifiable information. Because such a user is more likely to be able to identify their own personally identifiable information i.e. their own e mail address this information might be distorted or otherwise modified in an enhanced CAPTCHA to a greater extent than non personally identifiable information. By including user data in a visible portion of a CAPTCHA in this way the difficulty of a CAPTCHA can be increased for an arbitrary user while decreasing the difficulty of solving the CAPTCHA for the user that is associated with the personally identifiable information presented in the enhanced CAPTCHA. In this regard the personally identifying information inserted into in a CAPTCHA might be selected such that a user knowing the personally identifying information is more likely to provide a correct solution to the CAPTCHA than a user that does not know the personally identifying information.

The watermark enhancements A B shown in respectively are visible. Alternatively the watermark enhancements A B may be made invisible as described above. As an invisible watermark the watermark enhancements A B can embed personally identifiable information of a user into the CAPTCHAs A B to prevent or at least deter the enhanced CAPTCHAs A B from being broken by a CAPTCHA breaking service that does not have the correct solution.

In some embodiments the watermark enhancements in an enhanced CAPTCHA are invisible and include encoded data that is intended for consumption by another service or component. For instance in some embodiments an enhanced CAPTCHA might include an invisible watermark containing data for use by the break CAPTCHA module or another component.

The CAPTCHA elements E H contain other enhanced CAPTCHAs. In particular the CAPTCHA element E contains the enhanced CAPTCHA E which is an enhanced CAPTCHA designed to indirectly ask a question regarding the last purchase made by a user. A bot or other automated program for example would attempt to decipher the words LAST PURCHASE and input that as the solution choice. The input of the words LAST PURCHASE into the input element E however would be incorrect and cause the user service to deny the bot or other automated program access to the user service . The correct solution in this example would be the last purchase made by the user not the words LAST PURCHASE. The details regarding the last purchase may be derived from the user data and may relate to a general product category a specific product type or a specific product name for example.

The CAPTCHA element F contains the enhanced CAPTCHA F which is an enhanced CAPTCHA designed to indirectly ask a question regarding the last four digits of a user s credit card. A bot or other automated program for example would attempt to decipher the words LAST 4 DIGITS CREDIT C and input that as the solution choice. The input LAST 4 DIGITS CREDIT C into the input element F however would be incorrect and cause the user service to deny the bot or other automated program access to the user service . The correct solution in this example would be the last four digits of the user s credit card not the words LAST 4 DIGITS CREDIT C. The details regarding the last four digits of the user s credit card may be derived from the user data and may be associated with a user account of an e commerce Website for example.

The CAPTCHA element G contains the enhanced CAPTCHA G which is an enhanced CAPTCHA designed to indirectly ask a question regarding where a user s home is located e.g. a physical home address associated with a user . In this example a picture of a house is used to convey the subject of the question being asked. The house picture is shown only for example and should not be construed as being limiting in any way. However the house picture may be incorporated into the enhanced CAPTCHA G so as to obscure the enhanced CAPTCHA G or otherwise make it more difficult for a bot or other automated program from being able to break the enhanced CAPTCHA G.

The CAPTCHA element H contains the enhanced CAPTCHA H which is an enhanced CAPTCHA designed to indirectly ask a question regarding a user s favorite car e.g. make model or make and model . In this example a picture of a tire is used to convey the subject of the question being asked. The tire picture is shown only for example and should not be construed as being limiting in any way. However the tire picture may be incorporated into the enhanced CAPTCHA H in some manner so as to obscure the enhanced CAPTCHA H or otherwise make it more difficult for a bot or other automated program from being able to break the enhanced CAPTCHA H.

Turning now to aspects of a method for generating and providing the CAPTCHA service will be described in detail according to an illustrative embodiment. It should be appreciated that the logical operations described herein with respect to and are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 3 as interconnected machine logic circuits or circuit modules within the computing system. The implementation of the various components described herein is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in and described herein. These operations may also be performed in parallel or in a different order than those described herein.

For purposes of illustrating and describing some of the concepts of the present disclosure the method is described as being performed by the CAPTCHA service and more particularly the server computer s executing the generate CAPTCHA module and the validate CAPTCHA described herein above. It should be understood that additional and or alternative devices and or network nodes can provide the functionality described herein via execution of one or more modules applications and or other software. Thus the illustrated embodiments are illustrative and should not be viewed as being limiting in any way.

The method begins at operation where the CAPTCHA service receives a request from the user service to generate a watermarked CAPTCHA. Although the method is described as being particular to a watermarked CAPTCHA it should be understood that operations of the method may be utilized to generate other enhanced CAPTCHAs as will be explained below.

From operation the method proceeds to operation where the CAPTCHA service obtains at least a portion of the user data from the user service . In some embodiments the CAPTCHA service requests at least the portion of the user data from the user service in response to the request received from the user service at operation . In some other embodiments the user service provides at least the portion of the user data along with the request. In some other embodiments the user service provides at least the portion of the user data prior to sending the request to generate the watermarked CAPTCHA to the CAPTCHA service . In these embodiments the request can identify at least the portion of the user data that was previously provided to the CAPTCHA service .

From operation the method proceeds to operation where the CAPTCHA service generates a CAPTCHA by generating one or more characters. The characters used in the CAPTCHA can be generated randomly. Alternatively the characters can be generated based upon at least the portion of the user data such as in the examples shown in . Also at operation the CAPTCHA service distorts or otherwise obscures the characters to form the CAPTCHA. Any distortion and or obscuration technique s can be used. It should be understood that in some implementations the characters are not distorted or otherwise obscured in any way with the exception of a watermark or other enhancement. The solution to the CAPTCHA might also be generated and or stored at the time the CAPTCHA service generates the CAPTCHA.

From operation the method proceeds to operation where the CAPTCHA service generates a watermark based at least partially upon at least the portion of the user data obtained at operation . From operation the method proceeds to operation where the CAPTCHA service applies the watermark to the CAPTCHA generated at operation . The watermark can be applied above below adjacent to or embedded within the CAPTCHA or particular characters thereof.

In alternative embodiments the CAPTCHA service can utilize at least the portion of the user data to generate other enhanced CAPTCHAs instead of watermarked CAPTCHAs. In these alternative embodiments operation and operation are not performed. In other alternative embodiments the CAPTCHA service can utilize at least the portion of the user data to generate watermarked CAPTCHAs in addition to other enhanced CAPTCHAs. Combinations of watermarks and other enhancements may be applied to a single CAPTCHA.

From operation the method proceeds to operation where the CAPTCHA service stores the watermarked CAPTCHA in the CAPTCHA storage . The CAPTCHA service may also store the correct CAPTCHA solution associated with the watermarked CAPTCHA in the CAPTCHA storage .

From operation the method proceeds to operation where the CAPTCHA service sends the watermarked CAPTCHA to the user service . The user service can present the watermarked CAPTCHA and receive input of a solution in response. From operation the method proceeds to operation where the CAPTCHA service receives the CAPTCHA solution from the user service .

From operation the method proceeds to operation where the CAPTCHA service compares the received CAPTCHA solution to the correct CAPTCHA solution. At operation the CAPTCHA service determines if the received CAPTCHA solution matches the correct CAPTCHA solution. If the CAPTCHA service determines that the received CAPTCHA solution matches the correct CAPTCHA solution the method proceeds to operation where the CAPTCHA service instructs the user service to allow access. The method then proceeds to operation where the method ends. If the CAPTCHA service determines that the received CAPTCHA solution does not match the correct CAPTCHA solution the method proceeds to operation where the method ends.

Turning now to aspects of a method for providing a CAPTCHA breaking service will be described in detail according to an illustrative embodiment. The method begins at operation where the CAPTCHA service generates a CAPTCHA. From operation the method proceeds to operation where the CAPTCHA service determines a value of the CAPTCHA and associates the value with the CAPTCHA. The CAPTCHA may be stored in association with the value in the CAPTCHA storage .

In some embodiments the value associated with a CAPTCHA might be permitted to fluctuate dynamically based upon various parameters. For example the value associated with a CAPTCHA might fluctuate dynamically based upon the current processing load on the generate CAPTCHA module and or the break CAPTCHA module . The value might also fluctuate based upon other parameters in other embodiments.

From operation the method proceeds to operation where the CAPTCHA service receives a request for the CAPTCHA from the user service . From operation the method proceeds to operation where the CAPTCHA service provides the CAPTCHA to the user service in response to the request. The CAPTCHA service might charge the user service the value computed at operation .

From operation the method proceeds to operation where the CAPTCHA service receives a request from the user service to break the CAPTCHA. In some embodiments the request includes a payment for breaking the CAPTCHA. The payment for breaking the CAPTCHA might be all or a portion of the value of the CAPTCHA computed at operation . The request might also contain other types of data.

From operation the method proceeds to operation wherein the CAPTCHA service and more particularly the break CAPTCHA module generates a correct CAPTCHA solution for the CAPTCHA. As mentioned above the correct solution to the CAPTCHA might also be generated and or stored at the time the CAPTCHA service generates the CAPTCHA. The CAPTCHA service might utilize metadata contained in the CAPTCHA or within a watermark in the CAPTCHA during the breaking of the CAPTCHA. The CAPTCHA service then sends the correct CAPTCHA solution to the user service at operation .

In some embodiments the break CAPTCHA module overrides the validate CAPTCHA module to retrieve the correct CAPTCHA solution. In other words the validate CAPTCHA module may expect a CAPTCHA solution from the user service such as described at operation of the method and instead may receive an override command from the break CAPTCHA module instructing the validate CAPTCHA module to provide the correct CAPTCHA solution to the user service .

In some other embodiments the break CAPTCHA module provides or utilizes a CAPTCHA breaking service to break the CAPTCHA. The CAPTCHA breaking service in some embodiments is provided by a crowdsourcing marketplace that utilizes human intelligence to perform tasks. The humans that perform tasks for the crowdsourcing marketplace may be compensated directly by the CAPTCHA service indirectly by the CAPTCHA service through the crowdsourcing marketplace or in some other manner.

From operation the method proceeds to operation where the CAPTCHA service provides to the user service all or a percentage of the value associated with the CAPTCHA. The CAPTCHA service can provide the percentage via an electronic transaction or any other means. From operation the method proceeds to operation where the method ends.

The computer includes a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment one or more central processing units CPUs operate in conjunction with a chipset . The CPUs may be standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .

The CPUs perform operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

The chipset provides an interface between the CPUs and the remainder of the components and devices on the baseboard . The chipset may provide an interface to a random access memory RAM used as the main memory in the computer . The chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that help to startup the computer and to transfer information between the various components and devices. The ROM or NVRAM may also store other software components necessary for the operation of the computer in accordance with the embodiments described herein.

The computer may operate in a networked environment using logical connections to remote computing devices and computer systems through a network such as the network . The chipset may include functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. The NIC is capable of connecting the computer to other computing devices over the network . It should be appreciated that multiple NICs may be present in the computer connecting the computer to other types of networks and remote computer systems.

The computer may be connected to a mass storage device that provides non volatile storage for the computer. The mass storage device may store system programs application programs other program modules and data which have been described in greater detail herein. The mass storage device may be connected to the computer through a storage controller connected to the chipset . The mass storage device may consist of one or more physical storage units. The storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

The computer may store data on the mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether the mass storage device is characterized as primary or secondary storage and the like.

For example the computer may store information to the mass storage device by issuing instructions through the storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. The computer may further read information from the mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to the mass storage device described above the computer may have access to other computer readable storage media to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by the computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

The mass storage device may store an operating system such as the operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises the LINUX operating system. According to another embodiment the operating system comprises the WINDOWS SERVER operating system from MICROSOFT Corporation. According to further embodiments the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device may store other system or application programs and data utilized by the computer such as the Web browser the application the generate CAPTCHA module the validate CAPTCHA module the break CAPTCHA module and or any of the other software components and data described herein above. The mass storage device might also store the user data the CAPTCHA service module the standard CAPTCHA s the watermarked CAPTCHA s the other enhanced CAPTCHA s and or other programs and or data not specifically identified herein.

In one embodiment the mass storage device or other computer readable storage media is encoded with computer executable instructions which when loaded into the computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform the computer by specifying how the CPUs transition between states as described above. According to one embodiment the computer has access to computer readable storage media storing computer executable instructions which when executed by the computer perform the methods described above with regard to and .

The computer may also include one or more input output controllers for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly the input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that the computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

Based on the foregoing it should be appreciated that technologies for generating and providing enhanced CAPTCHAs and providing a CAPTCHA breaking service have been presented herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

