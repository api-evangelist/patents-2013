---

title: Query data acquisition and analysis
abstract: Described in this disclosure are systems and techniques for acquiring query data which includes an execution plan descriptive of how queries used to access a database are processed. In one implementation, an inquiry analysis system uses a copy of a production system to generate execution plan information. The copy includes tables, relationships, metadata, and so forth, but may omit data in the tables, allowing for a compact installation. By analyzing the query data, usage trends, inefficient queries, unused fields, and so forth may be determined and used for maintenance or performance improvements.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09489423&OS=09489423&RS=09489423
owner: Amazon Technologies, Inc.
number: 09489423
owner_city: Reno
owner_country: US
publication_date: 20130822
---
Databases store information associated with various endeavors such as e commerce communication medicine education government and so forth. Database size continues to grow at a tremendous rate with databases now routinely exceeding several terabytes. The number of inquiries made to those databases has also grown.

Certain implementations and embodiments will now be described more fully below with reference to the accompanying figures in which various aspects are shown. However various aspects may be implemented in many different forms and should not be construed as limited to the implementations set forth herein. Like numbers refer to like elements throughout.

Online merchants service providers and other organizations use ever increasing amounts of data to provide various services. This data may be stored in databases. Databases and the tools used to manipulate the data in those databases continue to grow in size and complexity. Databases having billions of records and terabytes of data are becoming more and more commonplace. The organizations using these databases are using ever more sophisticated interactions with these databases. For example an online merchant may have hundreds or thousands of different business units which engage in different interactions with a given database on a daily basis.

Databases may be broadly segregated into two categories relational and non relational. Relational databases store information in data structures often conceptualized as tables. In a relational database a particular position at a row and column conveys information about the piece of information. For example each row in a table may be associated with a single customer while a column may store a telephone number. In comparison non relational databases may use key value pairing to store data.

Users may interact with databases manually or using tools which produce output in one or more programming languages designed for use with the databases. For example information in a relational database may be manipulated using one or more expressions phrased in structured query language SQL statement. A database management module parses the query such as a SQL statement and performs one or more actions against the data in the database. A user may formulate a query manually or by using a retrieval system. For example the user may create a SQL statement by hand or may use an interface to generate the SQL statement from an inquiry.

Traditional database systems may not provide details about processed queries. Information that may be captured may be short lived or contain little or no detail. As a result users may lack the data to gain insight into the operation of those traditional systems. This may result in inefficient administration operation and maintenance of the databases.

Described in this application are systems and techniques for collecting and analyzing query data. The query data may include one or more of the inquiry made the query resulting from the inquiry an execution plan associated with the query or other information. The execution plan comprises detailed information about processing the query. For example the execution plan may include data about operations performed indices used costs and so forth. This disclosure describes the databases as relational for ease of illustration and not necessarily as a limitation.

An inquiry analysis system is configured to maintain a shadow database. The shadow database duplicates the data structures and metadata associated with a production database but may not include data. For example copies are made of the table structures of a relational database information about usage statistics table relationships but data is omitted from the tables. Queries which have been successfully executed by the production database are provided to the inquiry analysis system. The inquiry analysis system processes the query by executing the query against the shadow database to generate the execution plan. A query logging module is configured to generate and collect the query data from this execution. Once collected an inquiry analysis module may be used to process information requests against the query data. Because the shadow database is representative of the production database the execution plan generated by the shadow database may be considered representative of the execution plan of the same query on the production system. The inquiry analysis system may maintain the shadow database separately from the production database. For example the inquiry analysis system may be executed on a separate server. This configuration decouples the operation of the production database from that of the shadow database. As a result the operation of the query logging module may not impact operation of the production database. Furthermore the inquiry analysis system may defer execution of queries for a later time compared to the production system in which timeliness in executing the queries may be important.

Once collected a user or automated process may analyze the query data. For example the user may analyze the query data for time periods accessed in order to determine what data to move to archival storage or delete. Continuing the example should the query data indicate that queries are made against order data which is less than two weeks old order data which is more than two weeks old may be transferred to another table database storage device s and so forth. In another example the query data may be analyzed to determine which columns are no longer being used so they may be deprecated.

The system and techniques are thus able to generate the query data which is representative of the production system without impacting the production system. Analysis of the query data may assist in the maintenance administration and operation of the databases. This may improve the overall experience of users interacting with the database as well as of end users accessing services which rely on those databases.

The user may use a user device to access a retrieval system . The retrieval system may comprise a server or other computing device configured to provide a user interface with which the user may interact to initiate one or more operations with regard to a database. The retrieval system may include a user interface module configured to provide the user interface. In one implementation the user interface may comprise a web page configured to present information to and receive user input from the user device . In another implementation the user interface module may provide an application program interface API allowing applications executing on the user device or other computing devices to access and initiate the one or more operations. A query generation module is configured to accept input received using the user interface module and process that input. In one implementation the user may use the user device to send an inquiry to the retrieval system . The user interface module may receive the inquiry . The user interface module passes the inquiry to the query generation module which is configured to generate a query . In some implementations the query generation module may generate multiple queries from the single inquiry . Likewise in some implementation a single query may result from multiple inquiries . For ease of illustration and not by way of limitation the following discussion refers to a single inquiry and a single query .

The retrieval system may be configured to accept the inquiry . The inquiry may be in one of many different formats configurations languages and so forth. For example the inquiry may comprise a selection from a predefined set of queries or reports may accept natural language input and so forth. The query generation module uses the information in the inquiry to produce one or more queries . The one or more queries are configured for use with a production database system . For example the query may be a structured query language SQL statement compatible with the production database system .

The production database system receives the query . A database management module for the production database system is coupled to one or more production databases . The production database comprises one or more data structures configured to store information. The production database may comprise a relational database in which the data structures include tables which are related to one another. Stored in the one or more tables are data . For example the table may be configured to store attributes about particular orders while the data is information about the order. The production database may comprise a non relational database such as a key value store. In some implementations the production database may include relational and non relational data structures.

The production database may also include metadata . The metadata provides information about the data structures the data operation of the database management module statistics associated with operation of the database and so forth. For example the metadata may comprise information about database schema such as relationships between two or more tables indices cost data associated with execution of the query by the database management module metrics associated with access to the production database by the database management module and so forth. The metadata may be stored in one or more data structures. For example the metadata for the relational database may be stored in a table.

The database management module processes the query to perform one or more operations on the tables or other data structures the data therein the metadata and so forth. The processing may include generating an execution plan . The execution plan provides information indicative of execution of the query against the production database . For example the execution plan may provide information such as primary keys used tables accessed join methods used filter operations sort operations aggregation operations and so forth. The execution plan may also provide information such as the cost and cardinality of operations what sets of partitions have been accessed where parallel execution is used and so forth.

The execution plan provides insight into how the database management module is interpreting and executing the query . The operation of the database management module and thus the execution plan may be dependent on various factors such as the data structures present in the production database the metadata and so forth. As used in this disclosure unless otherwise indicated cost indicates one or more metrics descriptive of resources used such as processor memory network bandwidth and so forth. For example the metadata may indicate that a particular table is more costly to access. Based on the metadata indicating this costliness the database management module may parse the query to minimize interactions with that table .

In some implementations the production database system may not generate the execution plan in a form which is usable outside of the database management module . For example to improve performance the production database system may be configured to omit generation and storage of execution plans during processing of the queries . This may become particularly acute in high volume situations. For example where the database management module is processing hundreds of thousands of different queries each day it may be infeasible to generate and store the execution plans at the production database system .

The database management module may generate query results based on the processing of the query . The query results may include acknowledgement that an update to data has been completed a portion of the data which has been retrieved and so forth. The query results may be returned to the retrieval system for additional processing or for delivery to the user device .

Users may generate information requests instead of or in addition to generating the inquiry . The information request is configured to elicit information about how the query is processed. For example the information request may be configured to determine date ranges which are included in one or more of the queries . Or the information request may see information about filters which are used in the queries . By making the information requests and using the results users such as system administrators business managers and so forth may gain insight into how the production database system is being used. These insights may allow for improved management such as easier deprecation of unused columns improving table structures to facilitate common join operations and so forth.

The user may use a user device to generate or transfer the information request . For example the user interface module may be configured to allow the user to formulate the information request . An inquiry analysis system receives the information request . For example the user device or the retrieval system may send the information request to the inquiry analysis system .

The inquiry analysis system is configured to process one or more queries and respond to the information request . The inquiry analysis system includes a database management module . The inquiry analysis system may receive the one or more queries from the production database system the retrieval system or another source.

The database management module may be similar or identical to the database management module of the production database system . The database management module supports operations with a shadow database . For example the query may be executed by the database management module to query the shadow database .

The shadow database is configured to provide a representation of the production database but may omit the data . For example the shadow database may duplicate the tables and metadata of the production database . In one implementation the shadow database may include a subset of the data . For example a sampling of data may be included in the shadow database . By omitting the data or using a reduced set of the data the shadow database uses fewer resources to process the queries . For example with the shadow database which omits the data may be only a few hundred megabytes compared to the many terabytes of the production database . As a result the inquiry analysis system is able to process the queries and information requests quickly and with potentially less costly hardware.

Fidelity of the shadow database may be maintained by updating the shadow database based on changes to the production database . For example operations which use a data definition language which affect table structures in the production database may be sent to the shadow database to duplicate those changes. In some implementations periodic updates may be used. For example the metadata in the production database may be copied to the shadow database on a weekly basis.

The inquiry analysis system may include a query logging module . The query logging module is configured to maintain query data . The query data may include one or more of the inquiry the query the execution plan information about who made the information request and so forth. The query logging module may be configured to initiate generation of the execution plan access information such as the execution plan and so forth. For example the production database system and the inquiry analysis system may use the Oracle database system by Oracle Corporation of Redwood City Calif. In this example the query logging module may use the EXPLAIN PLAN statement to generate and store the execution plan for the query which is being processed.

The query data provides information about execution and operation of the query against the shadow database . As described above the shadow database is representative of the production database . For example the shadow database may duplicate the tables the metadata and so forth while omitting the data . The database management module operates as a deterministic system in that particular input produces the same output. Thus the same query executed by the database management module on the shadow database will produce the same or a substantially similar execution plan as that generated by the database management module using the production database . As a result the production database system remains free to respond to the queries while the inquiry analysis system builds and maintains the query data with details about those queries .

The query logging module may perform other functions as well. In one implementation different versions of the shadow database may be maintained for analytical purposes. For example a system administrator may test proposed changes to the tables the metadata and so forth. The query logging module may also be configured to maintain information about changes over time to the shadow database . For example metadata indicative of costs associated with processing a particular query may be stored and maintained for analysis.

Processing of the queries may be done as queries are received based on processing of the information request on a periodic basis or a combination thereof. For example the inquiry analysis system may be configured to process all queries upon receipt. In some implementations a query may fail or generate an error due to a difference between the production database and the shadow database . In these implementations the query may be stored and executed to generate query data at a later time.

The query logging module may be configured to execute queries which have been previously run to generate new query data . For example the shadow database may differ from the production database . As a result metadata modified in the production database may not yet have been copied to the shadow database . The queries may be re processed and updates made to the query data .

An inquiry analysis module is configured to process the information request and generate analysis output based on the query data . For example based on the information request for date ranges in the queries the analysis output may include information indicating that the queries are for date ranges in the last seven days in the current year and for the year previous. The administrator may modify operation of the production database system using this analysis output . For example the administrator may maintain a table which stores information for the last seven days of the current year and the year previous and execute subsequent queries against this table . As a result resources used by the database management module to process such queries may be reduced time to provide the query results may be reduced and so forth.

The inquiry analysis module may be configured to generate notifications based on the analysis output meeting one or more conditions or criteria. For example a notification may be generated when the data range of a query is beyond the last seven days of the current year and the year previous. These notifications may be provided to users such as system administrators.

The user devices the retrieval system the production database system the inquiry analysis system and so forth may be coupled to one another using one or more networks. These networks may include a cabled local area network LAN wireless local area network WLAN wide area network WAN wireless wide area network WWAN personal area networks PAN and so forth. For example the network may couple to the Internet or other data service enabling the transmission of information such that the user device is at one location while the retrieval system is at another.

The inquiry analysis system provide query data and analysis output which is useful in the administration operation and maintenance of the production database system . This information is provided without burdening the production database system which is performing tasks associated with the operation of the organization.

The query may be considered to have four main sections a projection an object access an access predicate and a filter predicate . Each of these sections may in turn have additional details or expressions. The projection defines a group of one or more columns from one of the tables . The object access specifies information about the tables or views used in the query and may designate shortened names. The access predicate links two or more tables together. For example the access predicate may include join conditions used for associating data in two different tables . The filter predicate returns a subset of data based on specified criteria.

An exemplary query is depicted in this illustration. The projection comprises the SELECT portion the object access comprises the FROM portion and the access predicates and the filter predicates comprise the WHERE portion. The database management module parses out the projection the object access the access predicates and the filter predicates and executes the appropriate actions against the database.

The inquiry analysis system may be used to analyze one or more of these sections of the query . For example the information request may ask for information about what tables are being accessed. The analysis output based on the query data for the exemplary query may return the names of the tables so headers all and so lines all .

In this illustration the execution plan provides information about the order of operations and what operations were provided by the database management module . For example the presence of several nested loops is shown here. The execution plan may include extensive information indicative of the operation of the query . The information provided may be determined by the capabilities of the database management module to generate this information.

The information format and so forth of the execution plan may vary based on operation of the database management module configuration settings and so forth. For example the execution plan may include the SQL expression illustrated in the exemplary query as well as the information depicted here.

At the retrieval system generates the query based on the inquiry . For example the query generation module may use the inquiry to generate a query which is formatted as a SQL expression. At the query is sent to the production database system . At the production database system executes the query . As a result of the execution query results may be generated. These query results may be sent to the retrieval system or another device.

At the production database system may send an indication that the query successfully executed. This indication may be used to prevent unsuccessful or improper queries from being passed along to the inquiry analysis system .

Based on the indication at the retrieval system may send the query to the inquiry analysis system . As described above at the inquiry analysis system may generate the query data . For example the query data may comprise the inquiry the query the execution plan and so forth.

In some implementations the sequence may be altered from that described above. For example the query may be initially sent to the inquiry analysis system . Execution on the production database system may be deferred until the query has been successfully executed on the inquiry analysis system against the shadow database .

At the retrieval system generates the information request for query data . For example the user may have used the user device to enter in a request for a listing of the top five tables which have been queried in the past week.

At the information request is sent to the inquiry analysis system . At the inquiry analysis system processes the information request and generates the analysis output . For example the inquiry analysis module may process the information request and generate analysis output comprising a listing of the top five tables as requested by the user .

At the inquiry analysis system sends the analysis output to the retrieval system . The retrieval system may present the analysis output to the user by way of the user interface provided by the user interface module . In other implementations the analysis output may be directed to another device such as the user device .

The I O interface s may couple to one or more I O devices . The I O devices may include input devices such as one or more of a camera a microphone a touch sensor a button and so forth. The I O devices may also include output devices such as one or more of a display audio speakers haptic output devices and so forth. The display may comprise an electrophoretic display projector liquid crystal display interferometric display light emitting diode display and so forth. In some embodiments the I O devices may be physically incorporated with the user device or may be externally placed.

The user device may also include one or more communication interfaces . The communication interfaces are configured to provide communications with the user device the retrieval system the production database system the inquiry analysis system routers access points other servers and so forth. The communication interfaces may include devices configured to couple to one or more networks including PANs LANs WLANs WANs WWANs and so forth.

The user device may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the user device .

As shown in the user device includes one or more memories . The memory comprises one or more computer readable storage media CRSM . The CRSM may be any one or more of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium a mechanical computer storage medium and so forth. The memory provides storage of computer readable instructions data structures program modules and other data for the operation of the user device .

The memory may include at least one operating system OS module . The OS module is configured to manage hardware resource devices such as the I O interfaces the I O devices the communication interfaces and provide various services to applications or modules executing on the processors . Also stored in the memory may be one or more of the following modules. These modules may be executed as foreground applications background tasks daemons and so forth.

A user interface module is configured to provide one or more user interface elements to the user with the I O devices and to accept inputs received from the I O devices . The user interface may include one or more visual audible or haptic elements. For example the user interface may be configured to provide a graphic user interface an audible user interface and so forth. The user interface may be configured to present information using the I O devices .

A communication module is configured to support communication between the user devices and other devices. In some implementations the communication module may support encrypted communications. For example hypertext transport protocol secured HTTPS or transport layer security TLS may be supported.

One or more application modules may also be stored in the memory . For example the application modules may include a web browser a front end application configured to interface with the retrieval system and so forth. Other modules may also be present. For example a user authentication module may be configured to authenticate the user accessing the user device .

The memory may also include a datastore to store information. The datastore may use a flat file database linked list tree executable code or other data structure to store the information. In some implementations the datastore or a portion of the datastore may be distributed across one or more other devices including servers network attached storage devices and so forth.

As depicted here the datastore may store the inquiry query results analysis output and so forth. Other data may also be stored. For example the other data may include user preferences configuration files and so forth.

The server may include one or more processors configured to execute one or more stored instructions. The processors may comprise one or more cores. The server may include one or more I O interface s to allow the processor or other portions of the server to communicate with other devices. The I O interfaces may comprise I2C SPI USB RS 232 and so forth.

The I O interface s may couple to one or more I O devices . The I O devices may include input devices such as one or more of a keyboard mouse and so forth. The I O devices may also include output devices such as indicator lights a display for use by administrative or maintenance personnel a printer and so forth. In some embodiments the I O devices may be physically incorporated with the server or may be externally placed.

The server may also include one or more communication interfaces . The communication interfaces are configured to provide communications with the user device the web server routers access points other servers and so forth. The communication interfaces may include devices configured to couple to one or more networks including PANs LANs WLANs WANs WWANs and so forth.

The server may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the server .

As shown in the server includes one or more memories . The memory comprises one or more CRSM. The memory provides storage of computer readable instructions data structures program modules and other data for the operation of the server .

The memory may include at least one OS module . The OS module is configured to manage hardware resource devices such as the I O interfaces the I O devices the communication interfaces and provide various services to applications or modules executing on the processors . Also stored in the memory may be one or more of the following modules. These modules may be executed as foreground applications background tasks daemons and so forth.

A communication module is configured to support communication with other devices using the network. In some implementations the communication module may support encrypted communications. For example HTTPS or TLS may be supported.

As described above the user interface module may be configured to provide one or more application programming interfaces web interfaces and so forth. The user interface module may be configured to accept inputs and send outputs using the I O interfaces the communication interfaces or both.

The query generation module may be stored in the memory . The query generation module may be configured to generate one or more queries based on one or more inquiries . For example the query generation module may transform a natural language input into a SQL statement.

The database management module processes the query against the database to which it is coupled. For example the database management module may execute the query to perform one or more operations on the tables or other data structures the data therein the metadata and so forth. In some implementations the database management module may be configured to generate the execution plan for a query . The database management module may be coupled to one or more databases. For example the database management module executing on the server which is configured to support the production database system may be coupled to the production database .

As described above the query logging module is configured to generate query data based on queries provided for processing. The query logging module may also perform other actions such as configuring the database management module the queries to be processed or both to generate the execution plan .

The inquiry analysis module may also be stored in the memory . The inquiry analysis module is configured to process the information request and generate analysis output based on the query data .

Other modules may also be present. In one implementation an authentication module may be configured to authenticate the user or device accessing the server . For example the authentication module may verify that the user has proper permissions to generate the inquiry or the information request .

The memory may also include a datastore to store information. The datastore may use a flat file database linked list tree executable code or other data structure to store the information. In some implementations the datastore or a portion of the datastore may be distributed across one or more other devices including servers network attached storage devices and so forth.

As depicted here the datastore may store the production database the execution plan the query results the shadow database the query data the analysis output and so forth. Other data may also be stored. For example the other data may include configuration settings access permissions and so forth.

While the server is described above in terms of a single device one or more devices such as a server cluster virtual server and so forth may provide the same or similar functionality. For example the retrieval system the production database system the inquiry analysis system and so forth may be executed on virtual servers in a distributed computing environment accessing data such as the production database and or the shadow database which are stored in distributed storage servers.

Block receives a first set of data structures such as table structure data from a first database. The table structure data may be indicative of one or more tables in a relational database. For example the first database may be the production database .

Block receives metadata associated with the first database. Continuing the example the metadata may be from the production database . As described above the metadata may include information indicative of one or more of relationships between two or more tables cost data associated query execution by the first database metrics associated with access to the first database and so forth.

Block generates a second database based on the first set of data structures and the metadata . For example the shadow database may be generated using the table structure data and the metadata from the production database. The second database may duplicate at least in part the first database.

In one implementation the shadow database may comprise the tables and the metadata but may be empty of data . In another implementation the shadow database may include a subset or sample of the data . For example 1 of the total data may be copied to the shadow database . Use of this subset may be used to provide sample output to the user or device making the inquiry .

As a result of containing no or little data the shadow database may use significantly fewer resources compared to the production database . For example the production database may have petabytes of data while the shadow database has none or very little.

Block receives the query . As described above the query may comprise expressions in a data manipulation language such as a SQL statement. The query may be received from the user device the retrieval system or from another device system or process.

In some implementations the query may include or be associated with information indicative of an account such as a user or device account. For example a user account identifier of the user accessing the user device may be included in the query .

Block generates the execution plan based on parsing the query using the second database. For example the database management module of the inquiry analysis system may process the query against the shadow database . As described above the execution plan comprises information indicative of execution of the query against one or more tables in the second database.

Block stores the query data which may comprise the query and the execution plan . For example the query data may be maintained as another table in the shadow database . In some implementations the query data may also comprises the information indicative of the account associated with the query .

Over time the production database may experience changes. For example new columns may be added to the table other columns removed and so forth. Block receives an expression configured to perform one or more changes on at least a portion of the production database . For example the production database system may forward an expression to add a new column to the table to the inquiry analysis system . The expression may be expressed in a data definition language.

Block updates the shadow database based at least in part on the expression. For example the new column may be added to the table . Once the updates are complete the shadow database once again duplicates the structure of the production database .

Block receives the inquiry . For example the user interface module of the retrieval system may receive the inquiry from the user device . As described above in some implementations the user interface module may be used to generate the inquiry .

Block generates the query based on the inquiry . For example the query generation module may accept a natural language inquiry and generate the query as a SQL expression.

Block executes the query on the production database . For example the database management module may receive and process the query against the production database . In some implementations the database management module may provide an acknowledgement or confirmation of successful execution of the query .

Block sends the query to the inquiry analysis system . In some implementations other information such as the inquiry identification information of the user identification information of the user device and so forth may also be sent.

The action of block may be based on the receipt of the acknowledgement or confirmation of successful execution of the query . For example queries which successfully run would be passed to the inquiry analysis system while queries which fail would not.

In another implementation all queries may be passed to the inquiry analysis system . In this implementation the inquiry analysis system may be configured to store query data about these failed queries or discard that information.

Block receives the information request . For example the inquiry analysis system may receive the information request from the retrieval system .

Block accesses the query data . As described above the query data may include one or more of the inquiry the query the execution plan and so forth.

Block generates the analysis output . The analysis output may be based on the information request and the stored query data . The analysis output may include a variety of information including but not limited to the following Information about one or more date ranges used against one of the one or more tables. For example the queries in the query data are searching for data which within a seven day date range. Information about one or more filter conditions used against the one or more tables may be provided. For example details about the filter predicates used. The analysis output may include information about one or more join keys used between a plurality of the one or more tables . Information about frequency of use of one or more columns in the one or more tables may be provided. For example a histogram indicating how often the columns are accessed may be included in the analysis output . The analysis output may also be used to identify common join conditions validate queries are using recommended join conditions and so forth.

In one implementation the analysis may provide a notification or alarm. One or more threshold parameters may be accessed. Based on a comparison between the analysis output and the one or more threshold parameters one or more notifications may be generated and sent. For example a threshold parameter may include access to a restricted table . The analysis output may indicate that an inquiry has been made which includes the restricted table . A notification may be generated and provided to a system administrator indicating access to the restricted table .

The analysis output may also be based at least in part on different tables metadata and so forth. For example the shadow database may maintain different versions of metadata . These different versions of metadata tables or both may be historical such as the metadata from the past year or may be generated such as to test a particular operational scenario.

The inquiry analysis system may be configured to receive first metadata metadata associated with the production database . The shadow database duplicates as second metadata at least in part the first metadata associated with the production database . For example most but not all of the metadata may be copied. The query may be executed based at least in part on the first metadata producing a first execution plan and again using the second metadata producing a second execution plan . The query data from processing both the first metadata and the second metadata may then be stored. The results from executing the same query against the potentially different metadata may provide additional information to administrators about how changes in the metadata affect operation of the database management module .

Block sends the analysis output . For example the inquiry analysis system may send the analysis output to the retrieval system using the network. The user may access the analysis output using the user device . With access to the analysis output the user may be able to make better decisions about how to manage operate or maintain the databases.

Those having ordinary skill in the art will readily recognize that certain steps or operations illustrated in the figures above can be eliminated or taken in an alternate order. Moreover the methods described above may be implemented as one or more software programs for a computer system and are encoded in a computer readable storage medium as instructions executable on one or more processors.

The computer readable storage medium can be any one of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium and so forth. Separate instances of these programs can be executed on or distributed across separate computer systems. Thus although certain steps have been described as being performed by certain devices software programs processes or entities this need not be the case and a variety of alternative implementations will be understood by those having ordinary skill in the art.

Additionally those having ordinary skill in the art readily recognize that the techniques described above can be utilized in a variety of devices environments and situations.

Although the present disclosure is written with respect to specific embodiments and implementations various changes and modifications may be suggested to one skilled in the art and it is intended that the present disclosure encompass such changes and modifications that fall within the scope of the appended claims.

