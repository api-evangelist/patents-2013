---

title: Methods systems and articles of manufacture for implementing user access to remote resources
abstract: Methods, systems, and articles of manufacture for implementing user access to remote resources residing on an external domain. Various implementations include authenticating and authorizing a user on a first system and receiving user request to access remote resources. The first system invokes processes or modules to initiate a new session to perform auto logon on behalf of the user on a second system by using stored user's credentials and subdomain delegation techniques without user intervention. The second system authenticates and authorizes this new session to allow user access to remote resources residing thereupon. The first system further prepares the user's system to take over the new session by setting cookie(s) and also by redirecting the URL so the user may continue to use the new session to access the desired remote resources residing on the second system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09262621&OS=09262621&RS=09262621
owner: INTUIT INC.
number: 09262621
owner_city: Mountain View
owner_country: US
publication_date: 20130531
---
This application is a continuation of co pending U.S. application Ser. No. 13 097 723 filed Apr. 29 2011 now U.S. Pat. No. 8 544 069 issued Sep. 24 2013 priority of which is claimed under 35 U.S.C. 120 and the contents of which are incorporated herein by reference as though set forth in full.

Embodiments of the invention relate to on line account access. Users often have multiple online accounts that are used for various purposes. Each account may separately require different user credentials e.g. usernames and various forms of passwords in order to properly authenticate the user and to authorize the user to access various products or services offered by respective institutions of these accounts. For example a user may have a banking account with a financial institution a brokerage account with an investment banking institution or any other online accounts for other purposes. It is often tedious to manage multiple online accounts with different usernames or passwords.

One known approach is to use a single sign on SSO approach which provides access control of multiple related but perhaps independent systems by internally translating and storing different credentials for these multiple independent systems. SSO ensures that users do not actively have to enter their credential more than once by using centralized authentication server s that all these multiple related systems utilize for authentication purposes. In other words with the SSO approach the system enables a user to enter one username and one password to log on to a network once and thereby gain access to different systems or Web sites. A SSO approach may use for example a ticket granting ticket TGT where the initial sign on prompts the user for credentials and gets a TGT and additional applications requiring authentication is provided with the user s identify and use the TGT to acquire service tickets without prompting the user to re enter credentials. Another SSO approach uses the smart card based approach where the initial sign on asks a user for a smart card identification e.g. certificates or passwords stored on the smart card and additional applications also use the smart card identification without asking the user to re enter credentials. Another SSO approach with multi factor authentication with security tokens e.g. OTP tokens uses the tokens to store software that allows for seamless authentication and password filling.

Although the SSO approaches do not require the user to enter credentials more than once they involve server to server special communications and passing user credentials between the user s browser and multiple systems and thus pose greater risks of compromising the user s credentials by for example replay attacks or eavesdropping. Some approaches use OAuth that allows users to handout tokens instead of credentials to their data where each token grants access to a specific site for specific resources for a defined duration. Some approaches use OpenID that describes how users may be authenticated in a decentralized manner. The OpenID architecture obviates the need for external systems to provide own ad hoc authentication systems and allows users to consolidate digital identities. Nonetheless the SSO architecture OAuth architecture and the OpenID architecture involve custom development on the external systems hosting the remote resources.

Some known approaches use the thick client concept to simplify user s login to multiple independent systems to provide a user with a one click access to these multiple independent systems. However the thick client architecture or network typically provides rich functionality or even full functionality e.g. the login functionality independent of the central server. The thick client architecture allows the client to be fully functional even in the absence of a network connection and thus presents a greater risk of compromising user s credentials because the thick client uses the independent login functionality at the thick client to automatically log the user onto different independent system.

Disclosed are various embodiments relate to methods systems and articles of manufacture for implementing user access to remote resource including but not limited to software programs applications application suites one or more processes actions or modules of a software program application or an application suite products services information or data hereinafter remote resource that reside on an external domain.

In one or more embodiments a method or system for implementing user access to remote resource includes the process or module for receiving a user request to access remote resource residing on a parent domain of an external system. The method or the system further comprises the processes or modules for performing automatic logon on behalf of the user by using stored user credentials using thin client approach which comprises no logic on end user s system and a new session and preparing the user s system to take over and to continue to use the new session to access the remote resource in these embodiments. In some embodiments the method or the system performs the automatic logon such that the user is authenticated and authorized on the external system without any intervention from the user. In some embodiments the user s request to access the remote resource comprises only a single click on a link in the user s browser. In these embodiments a user may click on an embedded link of a remote resource on a web page indicating the user s intent to access the remote resource the method or the system responds to the user s request by performing various processes or invokes various modules to perform automatic logon on behalf of the user by using stored user credentials via a session between the system hosting the web page and the external system providing the remote resource. The method or the system may then prepare the user s browser to take over the session and further to continue the session to access the remote resource on the external system.

In some embodiments the method or the system stores various user credentials for various remote resources at a central location such as but not limited to one or more databases. In these embodiments the corresponding user credentials will be retrieved or identified by a process or module and then forwarded to an external domain upon which the remote resource that the user desires to access resides. One of the objectives is to avoid the transmission of user credentials for various remote resources between the user s system and the corresponding external systems hosting the remote resources to better safeguard the user credentials from for example eavesdropping replay attacks cookie theft session hijacking or any other means for compromising the user credentials.

In certain embodiments the method or the system provides a user with a one click access to the remote resource by using a thin client architecture without transmitting the user credentials between the use s browser or system and the external system hosting the remote resource. In certain embodiments the method or the system implements user access to remote resources without any custom development on the external systems hosting the remote resources. In certain embodiments the method or the system implements the user access to remote resources without any support for federated identity the Oauth architecture the OpenID architecture or security tokens and without any user intervention. Contrary to the SSO architecture the method or the system implements the user access to remote resources without any special communications between a first system implementing the user access to remote access and an external system hosting the remote resource in certain embodiments.

Further details of various embodiments of the invention are described in the Detailed Description section with reference to respective figures.

Various embodiments are directed to methods systems and computer program products for implementing user access to remote resources. illustrates a high level flow diagram of a method or system for implementing user access to remote resource in certain embodiments. In one or more embodiments the method or the system for implementing user access to remote resources comprises the process or module for receiving a user request to access a remote resource at . In certain embodiments the user request to access the remote resource may comprise a user s clicking on an embedded link or a button in a Web page. In these embodiments the embedded link or the button links to the remote resource that the user desires to access.

For example the user may first visit a Web page presented to the user by the first system. The user may desire to access a remote resource by locating and clicking on a link or a button or selecting an item from a menu in the Web page. In some cases the first system may provide such a link button or item as a product or service for registered users and thus requires proper authentication or authorization for the user on the first system first. The first system then performs various processes or invokes various modules to enable the user to access the desired remote resource.

The method or the system may comprise the process or module for performing automatic logon on behalf of the user by using user credentials at in certain embodiments. In one or more embodiments the method or the system initiates or identifies a new session between the first system that receives the user request and another system providing the remote resource for the automatic logon. In these embodiments the user visits the Web page presented by the first system receiving the user request via a first session and the first system initiates or identifies a second session to perform the automatic logon for the user on the second system providing the remote resource.

In one or more embodiments the method or the system stores the user credentials for authenticating or authorizing the user on one or more external systems or domains hereinafter an external system or external systems at a central location that is for example on the first system or at a location that is accessible by the first system. For example the method or the system may store these user credentials in one or more databases or other forms of data structures in certain embodiments. The method or the system may further employ encryption and decryption techniques in accessing and transmitting the user credentials to better safeguard the user credentials in certain embodiments.

The method or the system may comprise the process or module for preparing the user for taking over the new session between the first system receiving the user s request to access the remote resource and the second system providing the remote resource at in one or more embodiments. The user may then continue to use the new session to access the desired remote resource upon or after the method or the system completes the automatic logon for the user in certain embodiments. Embodiments and aspects thereof are described with further reference to .

A session may be stateful such that at least one party to the communication may need to save certain information or data about the session in certain embodiments. A session may comprise an HTTP session utilizing the application layer a TCP Transmission Control Protocol session utilizing the transport layer or a combination in certain embodiments. A session may be maintained by a process or a program defined by the data or information being exchanged in the communication in certain embodiments. For example an HTTP Hypertext Transfer Protocol session that may be used in certain embodiments between the user and the first system or between the first system and the second system may include one or more HTTP cookies that identifies state that include for example the unique session identifier information about the user s preferences or the user s authorization level.

A session may comprise a server side session a client side session or a combination of both in various embodiments. A server in some embodiments may encrypt the information or data for the session before sending the session data in any forms to the recipient. A server may also compress the information or data about the session before creating a cookie and decompress the compressed information or data later when the cookie is returned by the recipient in some embodiments. A server may further generate a unique session identifier e.g. a session token and then send it to a recipient to identify the current session for the communication in certain embodiments. In these embodiments the recipient may store the session identifier with or without other session information or data as an HTTP cookie and send it in subsequent requests. In some embodiments where the recipient only stores the session identifier but not the other session information or data the server may store such session information or data on the server and link such session information or data to the session identifier.

The process or module for receiving the request may comprise the process or module for performing authentication or authorization for the first session to allow the user to access products or services offered by the first system at in certain embodiments. The products or services may include for example an embedded link a button an item in a menu or a pop up window that links to one or more remote resources hosted by one or more external systems in certain embodiments. The process or module for receiving the request may comprise the process or module for identifying or receiving a user s request to access a remote resource via the first session in some embodiments.

For example a user may use a browser to visit a Web page presented by the first system. The first system may offer products or services to registered users and thus require proper authentication or authorization of the first user to allow access to the offered products or services. The products or services offered by the first system may comprise for example various processes or modules described in this application. Upon proper authentication or authorization the user clicks on a link embedded in the Web page presented by the first system. The first system receives the user s clicking on the link as the user s request to access a remote resource wherein the link comprises a subdomain of a second system or a remote resource but is hosted by first system.

For example upon or after receiving the user s request via the first session between the user and the first system to access a remote resource offered by the external system that is external to the first system or to the user s system the first system may identify or create the second session between the first system and the external system in response to the user s request at . It shall be noted that a system may comprise any communicating device such as but not limited to a computer a cell phone a tablet or any other devices suitable for serving communication or data exchange purposes in some embodiments. At the process or module for performing the automatic logon on behalf of the user may comprise the process or module for invoking or calling the aggregation engine of the first system to establish a connection on behalf of the user via the second session between the first system and the remote system in some embodiments.

At the process or module for performing the automatic logon on behalf of the user may comprise the process or module for identifying or retrieving the appropriate user s credentials or login logic for authenticating or authorizing the user or the second session on the external system in some embodiments. In certain embodiments the process or module for performing the automatic logon on behalf of the user may identify or retrieve the encrypted or unencrypted user credentials and login logic for the external system from one or more databases or one or more other forms of data structures.

At the process or module for performing the automatic logon on behalf of the user may comprise the process or module for performing the automatic logon for the user on the external system by transmitting the encrypted or unencrypted user credentials from the first system to the external system in certain embodiments. In certain embodiments the aggregation engine or any module performs the automatic logon by using the login logic that is identified or retrieved at . Upon receiving the user credentials the external system may then invoke its own authentication or authorization processes to authenticate or authorize the second session and allows access to various remote resources according to the level of authorization in certain embodiments. For example the external system may use its own ad hoc authentication or authorization to authenticate or authorize the second session based on the received user credentials in some embodiments. In one or more embodiments the module or the process performs the automatic logon on behalf of the user without any intervention from the user.

In certain embodiments a cookie may be transmitted back and forth between two communicating devices such that at least one of the two communicating devices knows that requests or communications are related to each other. In some embodiments a cookie may comprise various attributes that include one or more name values set by a communicating device that generates and sends the cookie in the first place in one or more embodiments. In some embodiments the various attributes may further comprise a cookie domain and a cookie path. The cookie domain and the cookie path define the scope of the cookie and communicates to the receiving communicating device that the receiving communicating device should send back to the other communicating device for the given cookie domain and cookie path.

In certain embodiments where the initial sending communicating device does not set the cookie domain and the cookie path the cookie domain and path will be default to the domain and path for the object e.g. the remote resource that was requested. In some embodiments the various attributes may further comprise cookie expiration time or maximum age or one or more flags e.g. a secure flag or an httponly flag. In some embodiments the sending communicating device may further receive user preferences and encode the received user preferences in the cookie. In one or more embodiments a cookie includes a unique session identifier for the current session between the two communicating devices. In these embodiments the back and forth transmission of the cookie between the two communicating devices ensures that the communications use the session as identified by the session identifier.

At B the aggregation process or engine identifies or retrieves user credentials for the external system in order to obtain proper authentication or authorization for accessing the remote resource in some embodiments. At B the aggregation engine or any module sends the identified or retrieved user credentials to the external system for authentication or authorization purposes in some embodiments. At B the external system authenticates or authorizes the new session to allow access to the remote resource hosted or provided thereupon based on the proper level of authentication or authorization in some embodiments.

As an illustrative example the external system may transmit a cookie to the aggregation process or engine when the aggregation process or engine identifies or creates a new session to the external system and performs the automatic logon for the user. The external system may then send a cookie including a unique session identifier for the new session to the aggregation process or engine and ask for authentication or authorization. In response the aggregation process or engine may transmit the retrieved or identified user credentials together with the cookie. The external system thus knows that the user credentials are related to the previous communications from the aggregation process or engine and uses the user credentials to authenticate or authorize the new session.

At A the process or module for invoking the aggregation process or engine to establish connection on behalf of the user via the second session further comprises creating or configuring a subdomain zone and necessary DNS domain name server records on the first system receiving the user s request to access the remote resource in some embodiments. At A the process or module may further optionally comprise the process or module for configuring a third system for the subdomain zone or the DNS records in some embodiments.

More specifically in certain embodiments the process or module for creating or modifying the DNS zone files comprises the sub process or sub module for defining attributes for the parent domain at B . The attributes may include one or more of TTL Time To Live refresh frequency expiry etc. in some embodiments. In some embodiments the process or module for creating or modifying the DNS zone files comprises the sub process or sub module for defining one or more name servers for the parent domain hosting the remote resource that the user desires to access at B . At B the process or module for creating or modifying the DNS zone files may optionally comprise the sub process or sub module for defining one or more domain level hosts or services such as the mail server the FTP server or other domain level host s or service s in some embodiments.

In certain embodiments where the name servers are also part of the parent domain the method or the system may further provide the glue records in one or more zone files in the context of subdomain delegation. A glue record comprises information or data to enable the name server providing the delegation to provide one or more IP addresses for the authoritative name server mentioned in the delegation. For example if the parent domain is www.externalsystem.com and a name server for www.externalsystem.com is ns1.externalsystem.com it can be seen that the name server is also part of the parent domain or a subdomain of the parent domain externalsystem.com. When a computing node tries to resolve the parent domain www.externalsystem.com the computing node must resolve the name server ns1.externalsystem.com first. Nonetheless there exists a circular dependency because name servers in delegation are identified by names rather than their IP addresses and further because the name server in this case belongs to a subdomain of the parent domain externalsystem.com. In these embodiments the method or the system may include the IP addresses for the name server ns1.externalsystem.com in the form of a glue records in the DNS zone file to break the circular dependency.

At B the process or module for creating or modifying the DNS zone files comprise the sub process or sub module for defining the A records or AAAA records Address records for the one or more name servers in some embodiments. The A records return a 32 bit IPv4 Internet Protocol version 4 address that maps a hostname to an IP address and the AAAA records returns a 128 bit IPv6 Internet Protocol version 6 address that also maps a hostname to an IP address. The A records may comprise for example but not limited to the IP addresses Internet Protocol addresses for the one or more name servers for resolving the one or more name servers in some embodiments. In some embodiments the A records may further comprise glue records. More details about the glue records will be described in subsequent paragraph s with reference to respective drawing figure s .

At B the process or module for creating or modifying the DNS zone files comprise the sub process or sub module for optionally defining the subdomain of the parent domain in the parent domain DNS zone files in certain embodiments. In one or more embodiments the sub process or sub module for defining the subdomain in the parent domain DNS zone files are substantially to those as described in B B and or B . For example the sub process or the sub module may define TTL refresh or expiry for the sub domain configuration in the parent domain zone files in some embodiments. The sub process or sub module may defile one or more name servers and the A records for the one or more name servers for the sub domain in the parent domain zone files in some embodiments. In some embodiments the DNS zone files for the parent domain may be constructed to store various resource records in one or more formats such as those defined by RFC 1034 and RFC 1035.

At B the process or module for creating delegation for a subdomain comprise the sub process or sub module for identifying or creating a subdomain zone in certain embodiments. In some embodiments the sub process or sub module identifies or creates the subdomain zone on the first system that receives the user request to access the remote resource. In these embodiments the first system rather than the external system hosting the parent domain may also be configured to host the subdomain. In some embodiments the sub process or the sub module may identify or create a virtual or a pseudo subdomain on the first system. In these embodiments where the sub process or sub module identifies or creates a virtual sub domain zone the sub process or the sub module may define the sub domain s configurations and the parent zone configuration in a single zone file that comprises a text file describing the sub domain a mapping between domain names and IP addresses and other resource records.

In certain embodiments the process or module for identifying or creating a subdomain zone may comprise the sub process or sub module for defining a subdomain zone at B . At B the process or module for identifying or creating a subdomain zone may comprise the sub process or sub module for identifying or defining a zone file including configurations of the subdomain in a substantially similar manner as that described with reference to B B B B and B in some embodiments. At B the process or module for creating delegation for a subdomain may further comprise the process or module for creating or modifying the DNS zone file that is identified or defined at B in some embodiments. In these embodiments the process or module may modify or create the DNS zone file based at least in part upon which system is hosting the subdomain and the DNS hierarchy of the parent domain of the subdomain by following the substantially similar processes as described with reference to B B B B and B .

For example a user logs on to the first system and clicks on an embedded link to indicate the user s request to access the remote resource. The user and the first system exchanges communications via the first session between the user and the first system. The user s clicking on the embedded link is directed to a subdomain of the parent domain of the second system which provides the remote resource hosted by the first system. By using the aforementioned subdomain delegation techniques the subdomain is successfully resolved and the first system hosting the subdomain responds by invoking an application an API application programming interface or a servlet e.g. a Java servlet residing on the first system or even on the subdomain to perform the automatic logon for the user so the user may access the remote resource on the external system.

The first system or the application the API or the servlet performs the automatic logon to the external system on behalf of the user via a second session by using the aggregation process or module. The external system subsequently authenticates and authorizes the second session to access the remote resource based on the stored user credentials transmitted by the aggregation process or module of the first system. It shall be noted that because the embedded link is directed to a subdomain that is hosted on the first system in this example the process or module for preparing the user for taking over the second session may further comprise the process or module for identifying the URL redirection that may be used to redirect the user s browser to the parent domain that hosts or provides the remote resource the user intends to access.

At the process or module for preparing the user for taking over the new session comprises the process or module for setting a browser cookie to the user s browser in some embodiments. At the process or module for preparing the user for taking over the new session comprises the process or module for redirecting the user to the parent domain so the user continues to use the second session to access the desired remote resource in some embodiments.

As an illustrative example for explaining the aforementioned process in one specific implementation the process or module may first identify for example but not limited to the unique session identifier of the second session the cookie domain and the cookie path from the first cookie sent by the external system to the first system in certain embodiments. The process or module for preparing the user for taking over the second session may then set the browser cookie by using the unique session identifier the cookie domain the cookie path and or the one or more value name pairs such that when the user takes over the session after the URL redirection the user browser may return the browser cookie to the external system to enable the external system to recognize that the user s subsequent requests are related to the initial communications for the automatic logon between the aggregation engine and the external system.

At the process or module for setting the browser cookie comprises the process or module for determining whether or not to decrypt session data or other information or data in the cookie in some embodiments. A server may encrypt various information or data before the server creates a cookie and includes such encrypted information or data in the cookie. In response the process or module may then decrypt the encrypted information or data to identify necessary information or data for setting the browser cookie for the user. The encryption and decryption of information or data may be performed by using various techniques that are known to one of ordinary skill in the art and thus will not be repeated herein.

At the process or module for setting the browser cookie may comprise the process or module for identifying the unique session identifier for the second session between the first system and the external system in some embodiments. At the process or module for setting the browser cookie may optionally comprise the process or module for identifying user preferences at the external system in some embodiments. For example the user may have visited the external system and set the user s preferences. The external system may then encode these user preferences in the first cookie and sends the first cookie to the first system when the aggregation process or module performs the automatic logon for the user in some embodiments.

At the process or module for setting the browser cookie comprise the process or module for setting the browser cookie for the user to continue to use the second session to access the desired remote resource in certain embodiments. In some embodiments the process or module may use a Web server one or more scripts or any other applications to set the browser cookie for the user. In some embodiments the browser cookie may include the unique session identifier for the second session other information or data about the second session the cookie domain and path user preferences on the external system or other attributes.

At A the method or the system for implementing user access to remote resource may comprise a process or module for invoking the aggregation process or module to perform automatic logon on behalf of the user on an external system hosting or providing the remote resource via a new session in certain embodiments. In certain embodiments the method or the system invokes the aggregation process or module to perform automatic logon for the user by using domain delegation techniques. At A the method or the system for implementing user access to remote resource may comprise a process or module for retrieving the user credentials for satisfying the authentication or authorization process on the external system in some embodiments. The method or the system may further retrieve or identify login logic for communicating with the authentication or authorization process or module of the external system. In some embodiments the method or the system stores the user credentials at a central secure location and transmits the user credentials in a secure manner to prevent the user credentials from being compromised without any system change or development effort on the second system.

At A the method or the system for implementing user access to remote resource may comprise a process or module for performing the automatic logon on the external system on behalf of the user by using the aggregation process or module and the user credentials in some embodiments. At A the method or the system for implementing user access to remote resource may comprise a process or module for receiving one or more cookies from the external system in some embodiments. For example the external system may send a cookie including information or data for the new session when the aggregation process or module initiates the automatic logon with the external system. The first system or the aggregation system may return the user credentials together with the received cookie to the external system such that the external system knows that the user credentials are related to the logon process. On the other hand the cookie enables the first system or the aggregation process or module to know which session to use to communicate with the external system for the automatic logon or which domain or path the returned cookie is to be routed to etc.

At A the method or the system for implementing user access to remote resource may also comprise a process or module for redirecting the URL for the user s browser in some embodiments. At A the method or the system for implementing user access to remote resource may comprise a process or module for setting a browser cookie to the parent domain hosting or providing the remote resource for the user in some embodiments. The method or the system may further comprise the process or module for redirecting the user s browser to the parent domain from the sub domain that is referred to during the automatic logon in some embodiments. At A the user s browser takes over and continues to use the new session to access the desired remote resource in some embodiments.

One of the products or services B offered by the first system B comprises performing various processes to enable the user to access remote resources residing on or provided by an external system B. Another product or service B offered by the first system B includes performing automatic logon on behalf of the user B without any intervention from the user. In this example the user may send a user request to the first system B to request to access the remote resources on another system such as the external system B. The first system is further configured for performing automatic logon B on behalf of the user.

For example the user may send the user request to the first system B from the user B B or B to the automatic logon B to indicate the user s intent to access the remote resource on the external system B by clicking on an embedded link or a button or by selecting an item from a menu. The automatic logon process or module calls B the aggregation engine B to perform the automatic logon. The aggregation engine B may retrieve B user credentials and the login logic from stored data B. The requested user credentials and the login logic are sent B to the aggregation engine B which then forwards B to the external system B to perform automatic logon for the user for authentication and authorization via a different session.

The external system may send a cookie B to the first system e.g. to the aggregation engine to indicate the different session that is authenticated and authorized to access the remote resource on the external system upon the completion of the automatic logon process. The aggregation engine may forward the cookie and redirection URL to the automatic logon process B which may then set the browser cookie and redirect the URL for the user s browser B from automatic logon application to the user s communication device such that the user may take over the different session. Once the browser cookie has been set and the user s browser has been redirected to the URL for the domain hosting the remote resources the use may communicate with the external system using the different session to access the remote resources on the external system.

The user s browser C is communicatively connected to a first system C to enable the user to log onto the first system to utilize various products or services C hosted on or provided by the first system C. The first system includes or is operatively connected to an aggregation engine C that is configured to perform automatic logon on behalf of the user at the external system C. The external system C is configured to comprise a parent domain C with the appropriate DNS configuration C for the parent domain the DNS zone files C . The parent domain may further include one or more subdomains.

One of the one or more subdomains subdomain A will be delegated to the first system C for the first system to perform the automatic logon and various other processes for the user to access the remote resources hosted on or provided by the external system C. One or more name servers C are configured for the parent domain C and also for delegating subdomain A to the first system. The one or more name servers may be in a subdomain of the parent domain or in a separate domain other than the parent domain residing on the external system C. Depending upon whether or not the name servers are in one or more subdomains of the parent domain glue records may be set in the DNS zone files.

The first system may be configured to host the subdomain A of the parent domain residing on the external domain. A zone may need to be created or identified for subdomain A C and the DNS configurations and DNS zone files may need to be defined created or modified accordingly. One or more name servers C also need to be identified or defined for the subdomain by using the subdomain delegation techniques that have been described in great details in some of the preceding paragraphs with reference to various drawing figures. The name servers for subdomain A may also be a part of the subdomain on the first system C a part of the parent domain on the external system C or completely reside on a separate system other than the first system C or the external system C. The DNS zone files and the DNS configuration may be updated and glue records may be needed according to where these name servers are located.

The method or the system may comprise the process or module for redirecting the user request to access the remote resource to one or more name servers of a subdomain of the parent domain at in certain embodiments. The method or the system may comprise the process or module for responding by the first system to the user s request by invoking or calling the aggregation process or module at in some embodiments. The method or the system may comprise the process or module for initiating by the aggregation process or module the automatic logon to the second system on behalf of the user by using the second session at in some embodiments. The method or the system may comprise the process or module for receiving at the first system a cookie from the second system including a unique session ID for the second session at in some embodiments.

The method or the system may comprise the process or module for retrieving user credentials and sending the retrieved user credentials to the second system via the second session by using the aggregation process or engine at in certain embodiments. The method or the system may optionally comprise the process or module for receiving and forwarding one or more additional authentication or authorization requirements back to the user to properly complete the authentication or authorization process at the second system at in some embodiments. In these embodiments the method or the system may comprise the process or module for receiving by the aggregation process or module the user s input to the request for additional information or data for authentication or authorization at the second system at .

The method or the system may comprise the process or module for transmitting the user s input to the second system by using the aggregation process or module at in some embodiments. The second system may then use the user s input transmitted by the first system to complete the authentication or authorization of the user on the second system at to allow the user to access the remote resources hosted on or provided by the second system in some embodiments.

The following example further illustrates these optional processes or modules of . For example in addition to the common user name and password certain authentication or authorization process or module utilizing multi factor authentication may require additional information or data such as a passcode generated by a security token some biometric information or data about the user additional password or identification etc. If the method or the system determines that such additional information or data may not be reasonably stored on the first system such that the aggregation process or module cannot directly retrieve or identify such additional information or data the method or the system may forward the requirement for the additional information or data to the user and await the user s feedback to properly complete the authentication or authorization on the second system in some embodiments.

The method or the system may comprise the process or module for receiving a cookie from the second system that includes a unique session identifier or session data for the second session between the first system and the second system at in some embodiments. In the embodiments encompassed by this example the user is still communicating with the first system via the first session and the authentication or authorization to use the remote resources hosted on or provided by the second system occurs between the first system and the second system even though it was the user who initially requested for access to the remote resources.

The method or the system may comprise the process or module for setting a browser cookie and providing URL redirection for the user s browser at in some embodiments. The user s browser may then take over the second session according the browser cookie and the redirected URL at in some embodiments. The user may then return the browser cookie to the second system with subsequent requests to the second system and the second system knows that these subsequent requests are related to the automatic logon and thus allows the user to continue to use the second session to access the remote resources hosted on or provided by the second system.

According to one embodiment of the invention computer system performs specific operations by one or more processors or processor cores executing one or more sequences of one or more instructions contained in system memory . Such instructions may be read into system memory from another computer readable usable storage medium such as static storage device or disk drive . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and or software. In one embodiment the term logic shall mean any combination of software or hardware that is used to implement all or part of the invention. In the single embodiment or in some embodiments the one or more processors or processor cores may be used to perform various actions such as various actions processes or modules involving determining analyzing performing actions etc. In certain embodiments at least one of the one or more processors or processor cores has the multithreading capability.

In one embodiment the term logic shall mean any combination of software or hardware that is used to implement all or part of the invention. In the single embodiment or in certain embodiments the one or more processors or processor cores may be used to perform various acts such as various acts involving determining analyzing performing actions etc. In certain embodiments at least one of the one or more processors or processor cores has the multithreading capability to execute a plurality of threads to perform various tasks as described in the preceding sections.

Various actions as described in the preceding paragraphs may be performed by using one or more processors one or more processor cores or combination thereof . For example various processes or modules involving the determining action various analysis processes or modules etc. may be performed by one or more processors one or more processor cores or combination thereof.

The term computer readable storage medium or computer usable storage medium as used herein refers to any non transitory medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory .

Common forms of computer readable storage media includes for example electromechanical disk drives such as a floppy disk a flexible disk or a hard disk a flash based RAM based such as SRAM DRAM SDRAM DDR MRAM etc. or any other solid state drives SSD a magnetic tape any other magnetic or a magneto optical medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read. For example the various forms of computer readable storage media may be used by the methods or the systems to store either temporarily or permanently information or data such as the one or more master regions one or more master output layers one or more global scratch layers various transforms and inverse transforms shapes etc.

In an embodiment of the invention execution of the sequences of instructions to practice the invention is performed by a single computer system . According to other embodiments of the invention two or more computer systems coupled by communication link e.g. LAN PTSN or wireless network may perform the sequence of instructions required to practice the invention in coordination with one another.

Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution. In an embodiment the computer system operates in conjunction with a data storage system e.g. a data storage system that includes a database that is readily accessible by the computer system . The computer system communicates with the data storage system through a data interface . A data interface which is coupled to the bus transmits and receives electrical electromagnetic or optical signals that include data streams representing various types of signal information e.g. instructions messages and data. In embodiments of the invention the functions of the data interface may be performed by the communication interface .

In the foregoing specification embodiments of the invention have been described with reference to the figures. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention and that figures and examples provided are not provided to limit the scope of embodiments. Thus the specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

Further where methods or processes described above indicate certain events occurring in certain order those of ordinary skill in the art having the benefit of this disclosure would recognize that the ordering may be modified and that such modifications are in accordance with the variations of the invention. Additionally parts of methods may be performed concurrently in a parallel process when possible as well as performed sequentially.

Accordingly embodiments are intended to exemplify alternatives modifications and equivalents that may fall within the scope of the claims.

