---

title: General property hierarchy systems and methods for web applications
abstract: Systems and methods are disclosed for configuring a web application based on a general property hierarchy. An application property scheme including one or more property hierarchy levels may be generated based on values within a system configuration file. Each level defines configuration values for various properties associated with the web application. A property retrieval subsystem of the general property hierarchy may be used to look up configuration values from the appropriate hierarchy level(s) of the application property scheme in order to configure one or more properties of the web application during its execution. The values in the system configuration file may be changed and the changes may be reflected dynamically in the application property scheme without substantial interruption to the execution of the web application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09588785&OS=09588785&RS=09588785
owner: AOL Inc.
number: 09588785
owner_city: Dulles
owner_country: US
publication_date: 20131004
---
The present disclosure relates generally to systems and methods for configuring web applications and more particularly to configuring properties of a web application.

A web application may be adapted to deliver a user experience that is customized based on a variety of target parameters. Such target parameters may include for example a country or other geographic region language or type of computing device associated with a user of the web application. In some instances a wide range of such delivery targets may need to be serviced by a single platform or global instance of the web application system. For example a web application system may need to manage relatively large combinations of various target parameters for purposes of internationalization and localization. Such a system may include a multitude of properties that need to be configured for different target users. Such properties may be configured based on configuration options that specify the most appropriate target language or other visual branding to use for each incoming user request as well as tailoring the set of application features exposed to the target user.

However existing systems for internationalization and localization use property systems that have fixed static hierarchy levels for specifying configuring application properties e.g. language country or other localization parameters . Existing systems also limit the number of hierarchy levels that can be defined. Consequently such conventional systems cannot adequately handle relatively large numbers of parameter combinations needed to support a wide range of delivery targets.

Embodiments disclose systems and methods for configuring a web application based on a general property hierarchy. According to certain embodiments one computer implemented method for configuring a web application based on a general property hierarchy includes obtaining a system configuration file via a network generating an application property scheme having one or more property hierarchy levels for configuring a web application during execution of the web application based on the obtained system configuration file the system configuration file defining configuration values for a plurality of properties at each of the one or more property hierarchy levels of the application property scheme responsive to receiving a request for a configuration value associated with at least one of the plurality of properties identifying request attributes related to at least one of the one or more property hierarchy levels based on the received request iteratively searching for the configuration value at each of the one or more property hierarchy levels of the generated application property scheme based on the identified attributes for the request and sending a response including the configuration value based on the search.

According to certain embodiments systems are disclosed for configuring a web application based on a general property hierarchy. One system includes a memory having processor readable instructions stored therein and a processor configured to access the memory and execute the processor readable instructions which when executed by the processor configures the processor to perform a plurality of functions including functions to obtain a system configuration file via a network generate an application property scheme having one or more property hierarchy levels for configuring a web application during execution of the web application based on the obtained system configuration file the system configuration file defining configuration values for a plurality of properties at each of the one or more property hierarchy levels of the application property scheme receive a request for a configuration value associated with at least one of the plurality of properties identify request attributes related to at least one of the one or more property hierarchy levels based on the received request iteratively search for the configuration value at each of the one or more property hierarchy levels of the generated application property scheme based on the identified attributes for the request and send a response including the configuration value based on the search.

According to certain embodiments a non transitory computer readable medium is disclosed as storing instructions that when executed by a computer cause the computer to perform functions to obtain a system configuration file via a network generate an application property scheme object having one or more property hierarchy levels for configuring a web application during execution of the web application based on the obtained system configuration file the system configuration file defining configuration values for a plurality of properties at each of the one or more property hierarchy levels of the application property scheme receive a request for a configuration value associated with at least one of the plurality of properties identify request attributes related to at least one of the one or more property hierarchy levels based on the received request iteratively search for the configuration value at each of the one or more property hierarchy levels of the generated application property scheme based on the identified attributes for the request and send a response including the configuration value based on the search.

Additional objects and advantages of the disclosed embodiments will be set forth in part in the description that follows and in part will be apparent from the description or may be learned by practice of the disclosed embodiments. The objects and advantages of the disclosed embodiments will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the scope of disclosed embodiments as set forth by the claims.

The present disclosure is directed to overcoming one or more of the above referenced issues. Specifically the present disclosure is directed to systems and methods for providing a highly scalable flexible and efficient mechanism for system configuration of a web application based on a general property hierarchy scheme. Reference will now be made in detail to the exemplary embodiments of the disclosure examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

As noted above the present disclosure relates to systems and methods for configuring a web application based on a general property hierarchy scheme. Such a property hierarchy scheme may have one or more property hierarchy levels defined for a plurality of properties associated with the web application. The web application may be any type of application or program executable at an application server for providing various types of functionality to users via a network interface. Such an interface may be for example a web page accessible via a web browser executable at a user s computing device. The computing device may be for example and without limitation a mobile device or a desktop computer.

An example of a web application that may be configured using a general property hierarchy scheme is a global search application that provides search query results to users of a search website. For example the global search application may interface with a search engine or third party search service and provide search results to a user via a web page based on search terms submitted by the user via a search field displayed on the web page. Furthermore the search results that are provided may be customized based on the geographic location of the particular user e.g. as derived from the originating Internet Protocol IP address of the user initiated request via the web page. As will be described in further detail below such localization of output e.g. search results for a particular user or group of users may be performed by a web application e.g. global search application based on configuration values defined for different localization parameters or properties at various levels of a general property hierarchy scheme generated for the web application.

Benefits of such a general property hierarchy scheme for configuring a web application include but are not limited to adaptability accessibility and flexibility for purposes of production support and testing. In particular a hierarchical property system may be used to manage the extreme number of combinations that would result from a wide range of delivery targets. A general property hierarchy scheme may provide a capability to define any number of hierarchy levels which allows a web application to manage an unlimited number of configurable properties for purposes of localization and internationalization for a wide range of potential target users. Furthermore such a general property hierarchy scheme may extend beyond conventional localization and internationalization solutions by allowing application behavior and presentation to be tailored not only for country language etc. but for any arbitrary criteria as may be defined by product management. Such criteria may include for example any number of partners and themes or combinations thereof e.g. brand partner or partner theme combinations. Accordingly such a property hierarchy system can grow to meet new needs of an application as it continues to evolve while also being used to support future new web applications that may be delivered on an existing platform without requiring excessive system modifications.

As will be described in further detail below a general property hierarchy system for a web application may be used to generate an application property scheme including different hierarchy levels that correspond to various attributes of the types of user requests that the web application may be configured to handle. The hierarchy levels of such an application property scheme may correspond to for example different product brands countries or third party entities e.g. partners associated with a particular brand or type of product.

In an example application server may be configured to host a web service or application that communicates with a client application executable at any of user devices and via network . For example the respective users of devices and may access different functions provided by the web application via a graphical user interface GUI of the client application. Such functions may include for example and without limitation uploading user generated data or content to a web site or alternatively requesting content from other users or third party content providers which may be downloaded to the user s device through an application interface provided by the application server .

Network may be any type of electronic network or combination of networks used for communicating digital content and data between various computing devices. Network may be for example a local area network a medium area network or a wide area network such as the Internet. While only user devices and are shown in network environment may include any number of user devices. Likewise while only management server and application server are shown in it should be understood that network environment may include additional servers as desired for a particular implementation. Further each of management server and application server may be implemented using a single server or across multiple servers e.g. in a clustered computing environment or server farm.

In the example shown in user device may be a desktop laptop or other type of personal computer user device may be a tablet device or other type of mobile computing device having a touchscreen display and user device may be a mobile device smartphone and or personal digital assistant PDA . However it should be noted that each of user devices and may be any type of electronic device configured to send and receive data such as websites multimedia content and electronic advertisements over network . Examples of such mobile computing devices include but are not limited to a laptop computer a handheld computer a personal digital assistant PDA a cellular telephone a network appliance a camera a smart phone an enhanced general packet radio service EGPRS mobile phone a media player a navigation device a portable game console or any combination of these computing devices or other types of mobile computing devices having at least one processor a local memory a display one or more user input devices and a network communication interface. The user input device s may include any type or combination of input output devices such as a display monitor touchpad touchscreen microphone camera keyboard and or mouse.

Management server and application server may each represent any of various types of servers including but not limited to a web server an application server a proxy server a network server or a server farm. Each of management server and application server may be implemented using any general purpose computer capable of serving data to other computing devices including but not limited to user devices or any other computing device not shown via network . Such a general purpose computer can include but is not limited to a server device having a processor and memory for executing and storing instructions. The memory may include any type of random access memory RAM or read only memory ROM embodied in a physical storage medium such as magnetic storage including floppy disk hard disk or magnetic tape semiconductor storage such as solid state disk SSD or flash memory optical disc storage or magneto optical disc storage. Software may include one or more applications and an operating system. Hardware can include but is not limited to a processor memory and graphical user interface display. Each server may also have multiple processors and multiple shared or separate memory components that are configured to function together within for example a clustered computing environment or server farm.

In an embodiment user devices and are each configured to execute a client application installed at the respective device. The client application at each device may be used for receiving and displaying electronic content from application server . The client application executable at each user device may be for example a web browser. The web browser may be a standalone application or integrated as a component of another mobile application executable at each of user devices and

Further each of user devices and may be configured to receive application content through an interface provided by application server via network . The application content provided by application server may be based on for example user requests initiated via a graphical user interface GUI of the client application executable at each device. The GUI of the client application executable at each of user devices and may be configured to present the content to a user at each device via a display of the respective user devices and . The GUI of the client application may include for example various control elements enabling the user to request various types of web content e.g. by submitting search queries via a search field displayed on a web page or by using navigation controls to browse different web pages.

In an example application server may be configured to communicate with one or more third party content servers not shown to retrieve content e.g. web page content via network based on the user requests that it receives from user devices or . Such content servers may be owned and or operated by any entities that publish online or electronic content. For example different content servers may be operated by different content publishers or online content providers including those associated with various search engines e mail programs RSS feed providers magazines e zines blogs or any other online site or program that distributes online content. Thus publishers may interact with user devices or management server application server or any other servers including but not limited to DNS servers ad servers content distribution network servers through one or more content distribution servers not shown via network . Thus publishers may be able to distribute electronic content to various entities located within the network environment of .

As shown in the example of application server also may be configured to communicate with management server via network to retrieve one or more system configuration files . As will be described in further detail below the system configuration file s may be used by general property hierarchy system to generate an application property framework or scheme having one or more property hierarchy levels for configuring a web application hosted at application server .

As shown in application server may include application code a set of application properties and or a general property hierarchy system . Application code may include for example code and data for a web application or service hosted at application server . Application code may be for example a software program including computer or processor readable instructions and associated data related to the web application. As such the code and data for the web application may reside locally at application server e.g. in a local memory or data store coupled to application server . In this example application properties represents a set of configurable properties associated with the web application. For example application properties may be stored in a local memory of application server and organized as part of an application property framework or scheme having one or more hierarchy levels. General property hierarchy system in this example may be configured to generate such an application property scheme based on configuration values defined in system configuration file s for various application properties.

As will be described in further detail below the configuration values defined in system configuration file s may be used by a property loading re loading subsystem of general property hierarchy system to dynamically configure the web application during its execution or during execution of application code at application server . As shown in system configuration file s may be obtained by application server from management server via network . In an example application server may send a request to management server for the system configuration file s via network . Alternatively system configuration file s may be obtained by application server from a predetermined network location accessible to both application server e.g. for retrieving the files and management server e.g. for storing the files via network . The obtained system configuration file s may then be processed by general property hierarchy system in order to generate the application property scheme having one or more hierarchy levels for configuring values for application properties at each hierarchy level as described above. Accordingly the system configuration file s may be used to define configuration values for a plurality of application properties which may be associated with the web application and referenced by application code during execution of the web application at application server . Furthermore different configuration values may be defined for the plurality of properties at each of the one or more property hierarchy levels of the application property scheme.

Also as will be described in further detail below general property hierarchy system may include additional subsystems including but not limited to a request attributes subsystem e.g. request attributes subsystem of as will be described below for processing incoming user requests received at application server from user devices or via network . The user requests may be received by for example an application interface provided by application code for intercepting user requests directed to the web application hosted at application server and initiated from a client application executable at user devices or

In an example the aforementioned request attributes subsystem of general property hierarchy system may process each incoming request to extract request attributes relevant to one or more property hierarchy levels within the generated application property hierarchy scheme associated with the web application. General property hierarchy system may then return appropriate property values for requested application properties based on the extracted request attributes and the application property hierarchy scheme. The extracted request attributes may include for example and without limitation one or more property keys that are mapped to one or more of application properties .

In a further example general property hierarchy system may also include a property retrieval subsystem e.g. property loader and flexible scheduler of as will be described below which may be configured to retrieve individual property configuration values associated with a specified property key from the appropriate property hierarchy level of the application property hierarchy scheme generated for the web application. The aforementioned subsystems of general property hierarchy system related to property loading request attributes and property retrieval will be described in further detail below in reference to the examples shown in .

In one embodiment each of management server application server or any of the aforementioned content distribution servers may provide for example an interface e.g. in the form of an application programming interface API for enabling communications between a particular service or application hosted at each of the servers and the client application executable at each of user devices and . The particular service in this example may be a web search service configured to respond to user requests e.g. search queries or content retrieval requests received from the client application via network . However it should be noted that the techniques described herein are not limited web search applications or services and that these techniques may be used for any of various other types of web applications. Such other types of web applications may include but are not limited to web applications that deliver different types of content e.g. text media or targeted advertisements for various delivery targets e.g. geographic regions languages or market segments .

While not shown in application server may be implemented using multiple servers e.g. in a server farm which may be communicatively coupled to each other via a local area network. Furthermore application server may be communicatively coupled to one or more databases or data storage devices not shown . Such data storage devices may be used to store any type of data or content accessible by application server and its components e.g. application code and general property hierarchy system . Such data or content may include for example and without limitation application properties or general text or media content for providing to user devices or via network .

In an example property loader and flexible scheduler may be components of general property hierarchy system of application server in network environment of as described above. Further application property scheme and application property scheme may be different instances of an application property scheme generated by general property system based on configuration values for various application properties defined within system configuration files . As shown in system configuration files may be loaded by for example property loader via network . Network may be implemented using for example network of as described above.

In an example a property loading sequence by property loader may be triggered at system startup e.g. startup of the general property system . Property loader may also perform a property re loading sequence which can be triggered at periodic intervals after system startup. Such a property re loading sequence may be controlled by for example flexible scheduler . Property loader may perform a similar or the same sequence of actions for both property loading and re loading. The actions performed by property loader may include but are not limited to loading or retrieving system configuration files from a designated location accessible via network . The designated location may be for example a database or other type of data store coupled to a production management server e.g. management server of as described above . The number of system configuration files may be arbitrary. For example a particular web application may specify all property key value pairs in a single configuration file or may distribute the property key value pairs into multiple separate files for better organization or easier management.

Additionally property loader may process the configuration data extracted from the retrieved system configuration file s in order to generate an application property scheme as described previously. This may include for example registering property key value pairs as defined in the system configuration file s into the appropriate hierarchy levels of the generated application property scheme.

As noted above application property scheme and application property scheme may be different instances or copies of the hierarchical application property scheme generated by the general property hierarchy system e.g. general property system of as described above based on configuration data including configuration values for different property hierarchy levels loaded from system configuration property files . Application property scheme and application property scheme may be for example different data structures used to store configuration data including values for application properties of as described above. Further the data structures corresponding to application property scheme and application property scheme may be stored at different locations in a local memory or data store accessible to application server of as described above. Such memory locations may be designated as standby and active memory locations for storing application property scheme and application property scheme respectively.

Accordingly application property scheme and application property scheme may correspond to different versions of property configuration data for the same application property scheme and the active and standby designations for the respective memory locations may be used to control read write access of application configuration property values. Furthermore the standby and active designations for each data structure and or memory location may be interchangeable. Thus as shown in the designation of the data structure and or memory location associated with application property system may be switched from standby to an active. 

To support dynamic reloading application property scheme may be generated in a standby memory location as the data is processed. If all data from system configuration files is processed without error application property scheme in the designated standby memory location e.g. associated with application properties of as described above may be considered complete. At this point property loader may issue a command to the web application e.g. to application code of as described above that changes the designated standby location corresponding to application property scheme to be the new active memory location. In addition the previous active memory location corresponding to application property scheme may become the new standby location. The new standby and active memory locations may be the designations used for the next property reloading sequence e.g. as scheduled by flexible scheduler . The use of switchable active and standby versions of the application property scheme allows property loader of the general property hierarchy system e.g. general property hierarchy system of to support dynamic reloading of configuration values for application properties e.g. application properties of as described above in a live production platform while still handling normal incoming requests.

Furthermore upon receiving an indication of a new configuration value or a change to an existing value for at least one of the plurality of properties defined in the system configuration file s flexible scheduler may trigger property loader to dynamically update the application property scheme based on the new or updated configuration value. An advantage of such dynamically updateable system configuration values includes not having to restart the web application server e.g. application server of whenever a property is modified or a new property is defined. The property reloading feature of property loader also makes it possible for the production servers to access the system configuration file s over a communication network e.g. network of . As such the system configuration file s do not need to reside locally on the web application server.

In the example shown in a request attributes subsystem of the general property hierarchy system e.g. general property hierarchy system of processes incoming user requests . User requests may include for example and without limitation requests initiated by users at various computing devices e.g. client devices or of as described above and received via a network interface of the web application or associated general property hierarchy system. Such user initiated requests may include for example web requests based on a user s interaction with one or more web pages loaded in a web browser or other type of client application executable at the user s computing device.

Request attributes subsystem may be configured to extract various request attributes from each of the user requests that are received based on the application property scheme generated for the web application by the general property hierarchy system. In an example request attributes subsystem analyzes each of the incoming user requests to extract request attributes relevant to one or more property hierarchy levels defined for application property scheme . Once a request attribute is identified and extracted request attributes subsystem may add the request attribute to a request attributes container . Request attributes container may be associated with each individual user request or a group of user requests processed by request attributes subsystem .

In some implementations request attributes container may be added to the relevant user request s to which it is associated. For example a user request may be a web request in the form of a Hypertext Transfer Protocol HTTP request and request attributes container including extracted request attributes may be added to a header or body portion of the user request. Thus in the example shown in user requests may represent one or more user requests that include associated request attributes container upon being processed by request attributes subsystem . The request attributes container for an incoming user request may be accessible to application code e.g. application code of as described above and further may be used as a parameter for retrieving property values from application property scheme as generated for the corresponding web application.

Application property scheme may include different hierarchy levels corresponding to various attributes that may be relevant to the types of user requests processed by the general property hierarchy system for the web application. In an example the hierarchy levels may correspond to different product brands countries or third party entities e.g. partners associated with a particular brand or type of product . However it should be noted that request attributes are not intended to be limited to those listed in the examples provided herein and that such request attributes may be based on any criteria e.g. partners themes etc. that may be defined by for example a product management group. Accordingly the request attributes that may be extracted from incoming user web requests in this example may include but are not limited to a brand attribute a country attribute and or a partner attribute. Request attributes subsystem may be configured to extract the brand attribute based on for example the domain of an incoming web request. The country attribute may be derived from for example the originating Internet protocol IP address associated with the incoming web request. The partner attribute may be identified based on for example a predefined parameter of the incoming request e.g. a value stored in or retrieved from an Internet or Web cookie file. The predefined parameter associated with a partner or a known third party entity associated with a product or website may be for example a unique identifier or code associated with the third party entity. The unique identifier may have been previously generated and assigned to the third party entity by the general property hierarchy system. In an example request attributes subsystem may extract request attributes from incoming user requests based on a look up table stored in a local memory which maps relevant request attributes to the appropriate values defined in the general property hierarchy system.

As shown in the example of a look up table also may be used to store a mapping of application properties to one or more property keys associated with different configuration values. In a table includes a set of resolver keys that are mapped to property keys and corresponding property values . Using the example described above in which the hierarchy levels correspond to different product brands countries or third party entities or partners the resolver keys in table may be based on the following predefined properties request attributes and corresponding resolver patterns Brand BR Country CO Partner PA and Brand Partner BR PA . In this example the Brand Partner hierarchy is a combination of the Brand and Partner properties. It should be noted that additional hierarchy levels may be defined using any combination of individual properties or any other properties as desired for a particular implementation.

In an example the entries in table may correspond to entries defined in the one or more system configuration file s . The system configuration file s may be formatted as text files or in any other format as desired for a particular implementation. In an example each entry in a text file defining different property key to value mappings may include various elements corresponding to each set of resolver keys property keys and property values . The elements for each entry may include but are not limited to the qualifier the property key and the value. The qualifier element may include for example the type of property or resolver pattern such as BR for Brand or CO for Country in addition to the corresponding resolver key i.e. the portion of each entry in the resolver keys column following the colon symbol . Thus in the example shown in the resolver keys defined for the Brand BR property include BR1 and BR2. Similarly the resolver keys defined for the Country CO property include US and GB. Examples of delimiters that may be used to separate the different components of the key and elements of each entry mapping the property key to value pairs include but are not limited to underscore symbols tab characters or spaces. However it should be noted that any type of character or symbol may be used to separate different elements and or entries defining property key value pairs within the system configuration file s .

Referring back to application code or application code of the corresponding web application may be configured to retrieve the appropriate configuration values for various properties based on request attributes extracted from each incoming user request and the property key value mappings defined in table of as described above. As described previously general property hierarchy system of may also include a property retrieval subsystem that is configured to retrieve individual property configuration values associated with a specified property key from the appropriate property hierarchy level of the application property hierarchy scheme generated for the web application. The property retrieval subsystem of such a general property hierarchy system will be described in further detail below in reference to the examples shown in .

The multiple hierarchy levels of the application property scheme generated for the web application may be based on for example production requirements specified by a product management team associated with development of the web application. For instance all properties used by product management to manage the user experience across brands locales languages and partners may be specified within the various hierarchy levels of the application property scheme. In addition there may be certain properties or features of the web application that may have limited or no exposure to product management e.g. an option to enable disable a certain application function or feature. Such system level properties also may be supported by the application property scheme for the web application for example by defining a system hierarchy level that may be designated as the base level of the multi level application property scheme. An example of such a multi level hierarchy for a web application is shown in the numbered list below where the first level corresponding to System is the base level having the lowest priority relative to the other hierarchy levels 

As shown in the example property scheme above some hierarchy levels may be defined as combinations of other hierarchy levels. However it should be noted that the priority assigned to each level may be varied as desired for a particular implementation. Thus in the example property scheme above the first level e.g. System may be assigned the highest priority and the seventh level Brand Partner Country may be assigned the lowest priority or vice versa.

In the example shown in resolver map includes a mapping of a resolver key to a property map. In this example the resolver key of resolver map may represent for example a specific occurrence of resolver pattern e.g. specific values of the request attribute s relevant to the corresponding hierarchy level as described above. Referring back to table of examples of resolver keys for the Brand Partner and Brand Partner hierarchy levels include BR1 SP1 and BR1 SP1 respectively.

Method begins with step in which request attributes for a current incoming user request are identified based on property hierarchy levels within an application property framework or scheme for a web application. The user request may originate from for example a client application executable at a user device e.g. user device or of as described above and received at an associated application server e.g. application server of hosting a web application via a communication network e.g. network of as described above . The received user request may then be redirected to the general property hierarchy system e.g. general property hierarchy system of by the web application e.g. application code of hosted at the application server. The request attributes may be stored in for example a request attributes container e.g. request attributes container of as described above associated with the current request.

In step request attributes may be retrieved from the request attributes container identified in step for the current request. Method then proceeds to steps and which include determining whether or not entries for configuring properties of the web application have been registered for the application property scheme based on the request attributes retrieved in step . Such property entries may have been loaded from one or more system configuration files associated with the web application and registered e.g. by property loader of as described above for at least one hierarchy level of the application property scheme generated for the web application.

If property entries are not registered method may proceed to step in which a null value is returned e.g. to the application code thereby signaling that entries for property configuration values for the specified property key have not been registered. However if property entries are registered method may proceed to steps and which include searching for the registered entries for the property configuration value at a first or current hierarchy level of the application property scheme. In an example the first hierarchy level in which the search is performed may be the lowest hierarchy level which may also correspond to the lowest level of priority relative to the other hierarchy levels within the application property scheme. The search for the appropriate configuration value may be based on for example a property key specified in the incoming request.

If a property configuration value corresponding to the specified property key is found in step method may proceed to step in which the configuration value may be returned in response to the incoming user request. However if the configuration value is not found method proceeds to step which may include determining whether additional hierarchy levels exist in the application property scheme associated with the web application. If no more hierarchy levels exist method proceeds to step in which a null value is returned as in step thereby indicating that no registered configuration value exists in the application property scheme for the specified property key. However if any additional hierarchy levels exist method proceeds to step which includes continuing to the next hierarchy level and then repeating one or more of steps and for the next hierarchy level.

To illustrate a practical example of method using the application property scheme described previously with respect to look up table of the request attributes container for a current incoming user request may include the following set of attributes BR BR1 PA SP1 CO US where BR is the qualifier for the Brand property PA is the qualifier for the Partner property and CO is the qualifier for the Country property as described previously. The request may also specify the following property key to be used to look up the appropriate property configuration value corresponding to each request attribute sample.property.key.1. Once the request attributes are retrieved from the request attributes container identified for the current request step the property retrieval subsystem of the general property hierarchy system may determine if the property entries corresponding to these request attributes are registered in the application property scheme step . Referring back to this may include determining whether configuration values e.g. resolver keys property keys and property values corresponding to the request attributes exist in look up table .

The property retrieval system may start the search using the property resolver e.g. property resolver B of as described above corresponding to the lowest hierarchy level which in this example may be associated with the Brand Partner property BR PA . As this hierarchy level is a combination of two request attributes the corresponding resolver key may be represented using the following pattern BR1 SP1. According to table a registered entry can be found for the property map corresponding to resolver key BR1 SP1 and property key sample.property.key.1. The property configuration value column returned for this entry step in table would be PROPVALUE 41. 

In another example the request attributes container for another incoming user request may include the following set of attributes BR BR1 PA SP2 CO US. The specified property key in the request may be the same as in the previous example i.e. sample.property.key.1. As before once the request attributes are retrieved from the request attributes container identified for the current request step the property retrieval subsystem of the general property hierarchy system may determine if the property entries corresponding to these request attributes are registered in the application property scheme step . As described above this may include determining whether configuration values e.g. resolver keys property keys and property values corresponding to the request attributes exist in look up table .

Also as before the property retrieval system may start the search using the property resolver corresponding to the lowest hierarchy level e.g. the level associated with the Brand Partner property BR PA . The corresponding resolver key may be represented using the following pattern BR1 SP2. According to table no property map exists for resolver key BR1 SP2. As it may be determined that additional hierarchy levels exist step the property retrieval system continues to iteratively search for registered entries corresponding to each of the next hierarchy levels in the application property scheme steps to . This search may continue until either a property configuration value is found or no value is found in which case a null value may be returned step . Thus the next hierarchy level may be PA and the resolver key is SP2. Although a property map exists for the resolver key SP2 there is no entry in table that corresponds to property key sample.property.key.1. Accordingly the search continues to the next hierarchy level which in this example is CO with a resolver key of US based on the corresponding request attribute . As before a property map may be found for key US but there is no entry in table for property key sample.property.key.1. Therefore the search continues to the next hierarchy level which in this example is BR with a resolver key of BR1. This time a registered entry in table exists for the property map corresponding to resolver key BR1 and property key sample.property.key.1. According to table the appropriate property configuration value in column to be returned for this entry step is PROPVALUE 11. 

Program aspects of the technology may be thought of as products or articles of manufacture typically in the form of executable code and or associated data that is carried on or embodied in a type of machine readable medium. Storage type media include any or all of the tangible memory of the computers processors or the like or associated modules thereof such as various semiconductor memories tape drives disk drives and the like which may provide non transitory storage at any time for the software programming. All or portions of the software may at times be communicated through the Internet or various other telecommunication networks. Such communications for example may enable loading of the software from one computer or processor into another for example from a management server or host computer of the mobile communication network into the computer platform of a server and or from a server to the mobile device. Thus another type of media that may bear the software elements includes optical electrical and electromagnetic waves such as used across physical interfaces between local devices through wired and optical landline networks and over various air links. The physical elements that carry such waves such as wired or wireless links optical links or the like also may be considered as media bearing the software. As used herein unless restricted to non transitory tangible storage media terms such as computer or machine readable medium refer to any medium that participates in providing instructions to a processor for execution.

The presently disclosed applications methods devices and systems may advantageously improve configuring a web application based on a general property hierarchy. Specifically the general property hierarchy system may be used to look up configuration values from the appropriate hierarchy level s of an application property scheme generated for the web application in order to configure one or more properties of the web application during its execution. The application property scheme may be generated based on values in one or more system configuration files. Any changes or updates to values in the system configuration file s may be reflected dynamically in the application property scheme without substantial interruption to the execution of the web application. Relative to conventional solutions the general property hierarchy systems and methods disclosed herein provide application production management teams with greater flexibility and more options for configuring web applications for purposes of localization and internationalization of web application features for a wide range of delivery targets.

While the presently disclosed sharing application methods devices and systems are described with exemplary reference to applications for mobile applications it should be appreciated that the presently disclosed embodiments may be applicable to any environment such as a desktop or laptop computer an automobile entertainment system a home entertainment system etc. Also as previously noted the presently disclosed embodiments may be applicable to any type of content such as text content or video content.

Other embodiments of the disclosure will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims.

