---

title: Data device to speech service bridge
abstract: The present invention provides a data device to speech service bridge. The bridge allows packet-based devices, such as, for example, the PDA and 2.5/3G cellular phone, to access voice services.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08867534&OS=08867534&RS=08867534
owner: nVoq Incorporated
number: 08867534
owner_city: Boulder
owner_country: US
publication_date: 20130401
---
This application is a continuation of U.S. patent application Ser. No. 13 448 812 now U.S. Pat. No. 8 411 675 which is a continuation of U.S. patent application Ser. No. 13 186 013 now U.S. Pat. No. 8 175 084 which is a continuation of 10 334 872 now U.S. Pat. No. 8 001 709 each of which is incorporated herein by reference as if set out in full.

This application is related to U.S. patent application Ser. No. 09 965 057 titled MEDIA SESSION FRAMEWORK USING A CONTROL MODULE TO DIRECT AND MANAGE APPLICATION AND SERVICE SERVERS filed Sep. 26 2001 now U.S. Pat. No. 6 069 508 which is incorporated herein by reference and Ser. No. 10 113 853 titled PROTOCOL INDEPENDENT CONTROL MODULE filed Mar. 29 2002 incorporated herein by reference collectively referred to as the Related Applications .

The present invention relates to delivery of applications and services and more particularly delivery of voice activated applications and services to packet based data devices using a data device to speech service bridge.

Applications today generally constitute two types of services voice applications and data applications. Voice applications are conventionally accessed using a telephone for example. Data applications are conventionally accessed using a graphical user interface such as for example a web browser.

Referring to a legacy telephony service system for accessing voice applications is shown. As shown system includes a telephone the public switch telephone network PSTN and voice applications such as for example an integrated voice response application and a voice service . Generally a user would dial the desired voice application such as a weather service using telephone . The voice application may provide a menu of choices using an audio signal that a user selects using various touch tone buttons on telephone . Based on the user s choices the voice application may provide local weather for Boston Mass. Some voice applications include access to an automatic speech recognition process which allows the user to speak responses instead of using the touch tone buttons.

Using the PSTN the user accesses the voice application using the circuit switch network and a wire or wireless telephone connection. PSTN accesses the voice applications using a physical voice line also. Input to and output from the voice applications occurs over the voice line and the systems do not provide any data interface to the service.

The legacy telephony service system has several drawbacks. In particular the legacy telephony service system has five major drawbacks. First conventionally proprietary hardware hosts the integrated voice response applications and voice services . The proprietary hardware can map audio data between voice circuits and digital audio circuits. The proprietary hardware inhibits interaction between diverse systems. Second switching between the PSTN and the network components is difficult and complex. This difficult is due in large part to the difference between the binary circuit switched protocols such as for example ISDN CAS or SS7 of the PSTN to the packet based protocols of the network components. Third access to the application and services must be tailored to the application programming interfaces API provided by the hardware vendor which are not standardized. Fourth packet based devices cannot access the service because they cannot interface with the PSTN network. Fifth packet based devices cannot access resources. such as speech recognition or text to speech processors.

Referring now to a conventional packet based data network is shown. As will be explained data network resolves some of the drawbacks associated with legacy system . Data network includes the telephone PSTN and voice service such as for example automatic speech recognition ASR or text to speech processors. In order to convert signals between PSTN and a packet based voice service a media gateway is interspersed between PSTN and packet based voice service . An exemplary media gateway is disclosed in the Related Applications which are identified above. Similar to legacy system above data network vertically integrates the voice services. Thus access to for example speech recognition or text to speech services is limited to programming APIs through the voice service runtime.

Even with the mentioned drawbacks the switch from legacy system to Voice over IP VoIP data network addressed some of the legacy system issues. In particular media gateway provides a generic or standard interface between voice circuits and digital audio circuits allowing use of diverse off the shelf hardware. Also media gateway can provide signal conversion from PSTN protocols to packet system protocols such as for example conversion from ISDN PR1 to SIP.

While initial data networks solved two basic issues the vertical integration of data network still required access to voice services through a single vendor API which required specific programming to the vendors API protocols. Standardize API programming tool such as VoiceXML and Speech Application Language Tags Salt have improved interoperability between diverse vendors. But because the runtime vendor control access to the media resources interoperability with media resources between vendors is generally not available.

A component server architecture shown in addresses the vertical integration issue. In particular architecture includes access to the media gateway which is typically via a telephone but as described in the Related Applications can be a number of devices. Media gateway converts the request into a packet based request such as a SIP packet and directs the request to a voice service runtime interface . Voice service runtime interface is connected to voice services such as for example speech recognition resource text to speech resource and streaming media resource .

In this case because the media path is not along a physical voice line wireless or wire based the user input audio can be streamed directly to speech recognition resource . Moreover the audio output of text to speech resource can be streamed directly to the user in this case through media gateway to provide the packet based to switched circuit conversions .

Locating voice service runtime interface as a separate component allows seamless interoperation with diverse media resources. The seamless operation is allowed because the vendor specific APIs are abstracted by the component framework of system . The following example demonstrates the abstracting of vendor specific APIs. Assume both vendor X and vendor Y provide text to speech resources. Vendor X uses a C based API and vendor Y uses a Java based API. Front loading vendor X and vendor Y s resource with for example a SIP RTP agent allows vendor X s resource and vendor Y s resource to be used without regard to the specific API because the request is send in a SIP RTP protocol that is converted to the appropriate API by the front loaded SIP RTP agent. Thus each resource and service in the network can be provided by different vendors without regard for the vendor specific API which allows a best of breed approach to deploying services.

In other words each vendor specific component is provided with an access agent of sorts that interfaces between the network and the component. The access agent converts a packet based standard protocol to the vendor specific protocol for the component.

Even though the component based architecture solves many drawbacks conventional systems do not adequately provide solutions for the last two major drawback of legacy system . Thus it would be desirous to develop a data access to speech service bridge that would allow packet based devices to access the services and packet based devices to access resources such as speech recognition and text to speech resources.

To attain the advantages of and in accordance with the purpose of the present invention a method for accessing telephony services and resources by handheld packet enabled devices is provided. The method comprises providing at least one communication link between at least one packet enabled data device and at least one bridge. The bridge receives at least one command from the device over the communication link that is mapped to a standardized protocol. A resource is queued based on the command and a call session between the device and resource is established. The request is then transmitted to the resource for processing.

The present invention also provides apparatuses for accessing telephony services and resources by handheld packet enabled devices. The apparatus comprises a data device communicator having at least one access port adapted to receive data from at least one data device. A command bridge is connected to the data device communicator for receiving and mapping a command to a standardized protocol. A resource termination is connected to the command bridge and is adapted to transmit data to a resource.

The foregoing and other features utilities and advantages of the invention will be apparent from the following more particular description of a preferred embodiment of the invention as illustrated in the accompanying drawings.

As mentioned above VoIP systems and legacy systems provide reasonable access to voice services and the like for telephones cellular phones using traditional wireless protocols and the like. However data devices such as personal digital assistance PDAs some personal computers newer cellular phones that use packet based protocols such as 2.5 3G cellular phones and the like cannot readily access voice services. Referring now to an embodiment of a data device to speech service bridge will described that allows data devices to access speech services.

Generally packet based devices such as PDAs access services and applications through two methods. First the PDA can download an executable file from a server and run the application or service locally. Second the application can stream to the PDA over a wireless data network which typical involves data transfer protocols such as Short Messaging System SMS Wireless Access Protocol WAP or the like. It can be appreciated however that voice services do not translate well to packet based systems.

Referring now to a data device to speech service bridge is shown. The bridge allows packet based devices such as for example the PDA and 2.5 3G cellular phone shown to access voice services . Packet based devices are shown as wireless in this case but could be connected to bridge via other methodologies. It should be noted that at present some packet enabled devices have access to voice services. The dual enabled devices packet and voice enable require both packet based protocols such as WAP and voice path protocols such as ISDN. Bridge allows a packet device to access the voice services without requiring the packet based device to have the voice path parts or protocols which reduce device costs.

Referring now to specific components forming one possible data device to speech service bridge is provided. Bridge includes a data device communicator a command bridge a voice service runtime integration and a termination . further shows voice service runtime integrated with bridge . For simplicity termination will be discussed using SIP and RTP protocols. Notice while shown as distinct devices for ease of reference the parts making up bridge as shown in could be comprised of several separate processors or integrated on one processor. Also the current embodiment contemplates building the various components using software modules components and routines but one of skill in the art would recognize on reading the disclosure that the software components could be replaced with equivalent hardware or a combination of hardware and software.

Data device communicator provides a communication interface to data device . Data device communicator could be based on various transmission protocols based on the particular implementation and is largely a matter of design choice. Some protocol examples include transmission control protocols TCP IP hypertext transfer protocols HTTP simple object access protocol SOAP and the like.

Data device communicator has a predefined port address such as a universal resource locator for Internet applications although one of skill in the art will recognize other protocols for port addresses associated with local area networks wide area networks other web based protocols or the like are possible. Thus data device interfaces with data device communicator by identifying and connecting to an available port that supports the appropriate protocol for data device . After appropriate handshaking data device can issue commands to data device communicator . The interface will accept both high and low level resource based commands such as for example speech application language tags SALT XHTML plus Voice XML X V or the like.

In operation data device communicator not only accepts commands from data device but also handles media transfer to and from the device. In particular many handheld data device have a small footprint making the conversion of media formats infeasible or at the least difficult. Thus data device communicator can be configured to translate the data device protocol to the appropriate network speech resource protocol.

Command bridge receives the commands low or high level resource commands from data device communicator . Low level resource commands are mapped to a media session framework client through the MSF portion of termination . Command bridge maps return prompts from the MSF clients to data device via data device communicator . Types of MSF clients include queues for an audio prompt queues for text to speech conversion queues for playing audio and text to speech prompts and the like. Return prompts include playing of in progress text to speech playing of complete text to speech loading of speech recognition grammar and the like. High level resource commands are mapped to voice service runtime integration .

Termination provides SIP and RTP termination for media session framework clients. The SIP and RTP termination for MSF clients is explained in detail in the Related Applications. Basically SIP provides call session management and RTP provides data transmission protocols. In operation which will be further explained in connection with flowchart below the bridge provides a mechanism by which packet based data devices can access and receive data from speech or voice applications and services. In particular termination which may be an RTP manager receives media being sent to the data device. The media is received and provided to the data device communicator and transmitted to data device using the appropriate protocols organizes the packets received by termination . Similarly media is transmitted from the packet based data device using termination .

While the MSF clients and termination can execute low level commands voice service runtime integration executes high level commands which are typically a bundling of one or more low level commands. Voice service runtime integration operates using various protocols such as for example the X V protocol above.

The process is initialized when data device accesses server step . The browser associated with data device interprets the data contained on server and identifies the need for voice services such as by reading SALT tags in a HTML document step . Based on the identification the browse determines whether voice services are needed step . For example a text to speech command may need to be played during the display of the visual HTML document. If voice services are needed the data device calls the bridge and accesses data device communicator step . Once a connection between the data device and the data device communicator is established the browser sends for example a low level text to speech queue command to the communicator step . The data device communicator receives the low level command transmits the command to the command bridge step .

To execute the command the command bridge maps the command to for example a SIP protocol step and directs the media session framework client to queue the text associated with the text to speech command step . On receiving the command the text to speech resource would add the command to a local prompt queue object step . Next the play commands would be directed to appropriate media session framework resource clients step which step is similar to the above and not repeated .

Once the commands are in place MSF client portion of termination establishes a SIP session step . The text to speech resource begins the SIP session by establishing an RTP host and port to which all audio is streamed. The resource then sent the request with the text to play step . The text to speech resource receives the request and text to play and converts it to an audio signal step . The audio signal is then transmitted to the termination via RTP transport manager portion step . The command bridge converts the audio signal to the appropriate protocol step and sends to the data device through the data device communicator step and the user hears the audio prompt at the device step .

After the audio output it is determined whether a response to the output is required step . Assuming the audio prompt requires an audio response although one of skill in the art would recognize may responses may be prompted the browser would transmit a low level command to the data device communicator to queue a grammar resource such as speech recognition step . The data device communicator would send the request to the command bridge step and the command bridge would map the command to the media session framework termination step that queues a media session framework client to load and activate the grammar resource step . A media session is then established as discussed above step and the request is sent to the resource step . The resource performs the service and returns a result step . Thus using the bridge allows packet based data devices to access voice based services.

In the case of a voice response the user may begin speaking which may include a triggering event such as pressing a button. In this case a start recognition command is sent to the resource. The data device records and transmits the voice response using its normal packet based delivery system and the bridge streams the voice input to the recognition resource using established RTP ports. The result is returned to the bridge which sends the result to the data device to be for example displayed by the data device step. Thus using the bridge allows packet based data devices to access voice based services.

While the invention has been particularly shown and described with reference to an embodiment thereof it will be understood by those skilled in the art that various other changes in the form and details may be made without departing from the spirit and scope of the invention.

