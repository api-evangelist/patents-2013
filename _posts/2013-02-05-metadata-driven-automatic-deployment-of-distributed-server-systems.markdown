---

title: Metadata driven automatic deployment of distributed server systems
abstract: Automatic and reliable deployment of system topology to computing devices within an enhanced communication system is provided. Specific roles and features associated with individual devices such as servers are defined in a centrally managed topology document, which is replicated to devices to be configured along with one or more modules for performing local configuration. Upon deployment, the module(s) determine a local device configuration, a desired configuration for the device, and update the device's configuration installing and activating roles and features assigned to the device by the topology document. Feedback regarding the results of the configuration is provided to a central management store such that administration can monitor status of devices within the system. Modifications to the assigned roles and prerequisites for supporting those roles are made dynamically through the same mechanism as system topology changes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08738748&OS=08738748&RS=08738748
owner: Microsoft Corporation
number: 08738748
owner_city: Redmond
owner_country: US
publication_date: 20130205
---
This application is a continuation of co pending U.S. patent application Ser. No. 12 792 888 filed on Jun. 3 2010 by the same inventors commonly assigned herewith.

As an alternative to Public Switched Telephone Network PSTN systems cellular phone networks have proliferated over the last decades where users with cellular phones have access to one or more networks at almost any location. Also a recent development is the wide spread use of Voice over IP VOIP telephony which uses internet protocol IP over wired and wireless networks. With the availability of such diverse types of communication networks and devices capable of taking advantage of various features of these networks enhanced communication systems bring different communication networks together providing until now unavailable functionality such as combining various modes of communication e.g. instant messaging voice calls video communications etc. . This technology is also referred to as unified communications UC . A network of servers manages end devices capable of handling a wide range of functionality and communication while facilitating communications between the more modern unified communication network devices and other networks e.g. PSTN cellular etc. .

Enhanced communication systems provide multi modal communications and other services employing a number of physical and virtual servers and specialized devices. In some cases generic local machines servers may be configured with special roles within the topology of the system and become specialized servers providing distinct functionality. Deployment of such a system and its topology can be relatively complex as more features and roles are added. Administration not only needs to be able to install particular roles but also to ensure that correct roles are installed and necessary to provide the required functionality. In a large system environment e.g. thousands of users dozens of machines may need to be installed with an error proof and efficient process.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to exclusively identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to automatic and reliable deployment of system topology to computing devices within an distributed server system. Specific roles and features associated with individual devices such as servers may be defined in a centrally managed topology document which is replicated to devices to be configured along with one or more modules for performing local configuration. Upon deployment the module s may determine a local device configuration a desired configuration for the device and update the device s configuration installing and activating roles and features assigned to the device by the topology document. Feedback regarding the results of the configuration may be provided to a central management store such that administration can monitor status of devices within the system. Modifications to the assigned roles and prerequisites for supporting those roles may be made dynamically through the same mechanism as system topology changes.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory and do not restrict aspects as claimed.

As briefly described above specific roles and features assigned to individual devices such as servers may be defined in a centrally managed topology document which may be replicated to the devices to be configured along with one or more modules for performing local deployment. The module s may determine a local device configuration a desired configuration for the device and update the device s configuration installing and activating roles and features assigned to the device by the topology document. Results of the deployment may be sent back to a central management store such that administration can monitor status of devices within the system. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and comparable computing devices. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer implemented process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program that comprises instructions for causing a computer or computing system to perform example process es . The computer readable storage medium can for example be implemented via one or more of a volatile computer memory a non volatile memory a hard drive a flash drive a floppy disk or a compact disk and comparable media.

Throughout this specification the term platform may be a combination of software and hardware components for managing multimodal communication systems. Examples of platforms include but are not limited to a hosted service executed over a plurality of servers an application executed on a single server and comparable systems. The term server generally refers to a computing device executing one or more software programs typically in a networked environment. However a server may also be implemented as a virtual server software programs executed on one or more computing devices viewed as a server on the network. More detail on these technologies and example operations is provided below. The term site as used herein refers to a geographical location and may include data centers branch offices and similar communication sub systems. The term device or computing device refers to any computing machine such as servers desktop computers special purpose machines and similar ones. Further examples of computing devices are discussed below. Furthermore the term cluster refers to a group of physical and or virtual servers which may provide the same service to a client in a transparent manner i.e. the client sees a single server while the cluster may have a plurality of servers .

In a unified communication UC system such as the one shown in diagram users may communicate via a variety of end devices which are client devices of the UC system. Each client device may be capable of executing one or more communication applications for voice communication video communication instant messaging application sharing data sharing and the like. In addition to their advanced functionality the end devices may also facilitate traditional phone calls through an external connection such as through Private Branch Exchange PBX to a Public Switched Telephone Network PSTN . Further communications through PSTN may be established with a telephone or cellular phone via cellular network tower . End devices may include any type of smart phone cellular phone any computing device executing a communication application a smart automobile console and advanced phone devices with additional functionality.

The UC system shown in diagram may include a number of servers performing different tasks. For example edge servers may reside in a perimeter network and enables connectivity through UC network s with other users such as remote user or federated server for providing connection to remote sites . A Hypertext Transfer Protocol HTTP reverse protocol proxy server may also reside along the firewall of the system. Edge servers may be specialized for functionalities such as access web conferencing audio video communications and so on. Inside the firewall a number of clusters for distinct functionalities may reside. The clusters may include web servers for communication services directory servers web conferencing servers and audio video conferencing and or application sharing servers . Depending on provided communication modalities and functionalities fewer or additional clusters may also be included in the system.

The clusters of specialized servers may communicate with a pool of registrar and user services servers . The pool of registrar and user services servers is also referred to as a data center. A UC system may have one or more data centers each of which may be at a different site. Registrar servers in the pool register end points and and facilitate their communications through the system acting as home servers of the end points. User services server s may provide presence backup monitoring and comparable management functionalities. Pool may include a cluster of registrar servers. The registrar servers may act as backups to each other. The cluster of registrar servers may also have backup clusters in other data servers as described later.

Mediation server mediates signaling and media to and from other types of networks such as a PSTN or a cellular network e.g. calls through PBX together with IP PSTN gateway . Mediation server may also act as a Session Initiation Protocol SIP user agent. In a UC system users may have one or more identities which is not necessarily limited to a phone number. The identity may take any form depending on the integrated networks such as a telephone number a Session Initiation Protocol SIP Uniform Resource Identifier URI or any other identifier. While any protocol may be used in a UC system SIP is a commonly used method. SIP is an application layer control signaling protocol for creating modifying and terminating sessions with one or more participants. It can be used to create two party multiparty or multicast sessions that include Internet telephone calls multimedia distribution and multimedia conferences. SIP is designed to be independent of the underlying transport layer.

Additional components of the UC system may include messaging server for processing voicemails and similar messages application server for specific applications and archiving server . Each of these may communicate with the data center pool of registrar and user services servers . Various components of the system may communicate using protocols like SIP HTTP and comparable ones.

As discussed previously deployment of large enhanced communication systems with a complex topology and a high number of servers features and roles can be a challenging and resource intensive task. Typical installation processes may include smart user interfaces that may handle automatic installation of prerequisites intelligent blocking of unavailable tasks and a series of wizards to walk the administrator through the creation of common roles and combinations of roles. However the administrator is still responsible in conventional approaches for making sure that the set up roles are the roles that needed to be set up and that inter computer dependencies are met. A deployment system according to embodiments may employ a central topology document defining assigned roles and features for individual devices. At deployment time or following changes to the topology the topology document may be replicated to all devices along with one or more modules responsible for local configuration. These modules may determine local machine configuration retrieve desired configuration from the topology document install and activate assigned roles and features remove unnecessary ones and report back to a central store such that device status can be monitored centrally and dynamically.

While the example system in has been described with specific components such as registrar servers mediation servers A V servers and similar devices embodiments are not limited to these components or system configurations and can be implemented with other system configuration employing fewer or additional components and other distributed server systems. Functionality of enhanced communication systems with automatic topology deployment may also be distributed among the components of the systems differently depending on component capabilities and system configurations. Furthermore embodiments are not limited to unified communication systems. The approaches discussed here may be applied to any distributed server system such as email servers business intelligence servers file servers other database applications and comparable systems in a networked communication environment using the principles described herein.

Remote users both corporate users on the internet e.g. mobile or home workers users in partner companies and federated users through interoperability with other instant messaging networks may also be served through such systems. The system may include a number of specialized clusters and individual servers communicating with each other using SIP Real time Transfer Protocol RTP for media transfer Hypertext Transfer Protocol HTTP for web servers and similar protocols as well as their extensions. Furthermore server caching such as caching of repeated requests and or caching web DNS other computer network lookups for a group of clients sharing network resources may be employed to optimize resource usage and efficiency.

In a multi faceted system such as an enhanced communication system a number of specialized servers may provide distinct functionalities such as web access servers edge servers registrar servers and comparable ones. Furthermore computing devices within the network may also be configured as end points. Thus deployment of the system initially and any changes to its topology may require configuration and reconfiguration of its components with their assigned roles and features. While some devices may be specialized hardware e.g. hardware load balancers HLBs others may be generic computing devices like servers that are simply configured to perform the assigned tasks. Individually configuring all devices and maintaining their status as the topology changes can be daunting task especially in larger networks.

As shown in diagram a topology document defining roles and features for each device in the system may be created by the administrators and stored at a central management store . An administration server may execute central deployment components for managing the topology document e.g. managing a user interface for modifying the document maintaining versions of the document creating replicas to be distributed etc. . Administration server may distribute replicas of the topology document automatically to machines that can be automatically configured via network s . When the topology document is published into the system the central deployment components may activate the environment creating necessary entries in directory servers configuring permissions and performing similar tasks. These actions may be performed with an administrative permission on the domain itself.

In distributing the replica of the topology document to the system administrative server may send the topology document by replication file copy or a similar controlled means. The agent and bootstrapper module may be transported and installed through disk replication via sysprep and ghosting SMS or similar administrative techniques for installing software remotely. The agent and bootstrapper module may be installed once and then run locally as processes. They are not invoked remotely. The document may be transported on an on going basis through replication as changes are made. In an initial installation a package that includes the document itself agent and bootstrapper module may be sent by administrative server . Package may be sent to individual computing devices e.g. servers and in a variety of ways. The packages may be sent by a software management tool like MICROSOFT SYSTEM CENTER from Microsoft Corp. of Redmond Wash. a remotely triggered installation via remote management APIs file transfer protocol FTP download or distribution by removable storage media e.g. CDs DVDs etc. .

Once the topology package arrives on a local computing device the agent may cause the bootstrapper module to be executed on the computing device and configure or reconfigure the machine or they may be already installed and executed upon detection of a new topology document . Upon configuration with assigned roles and features the computing device e.g. server may take the role of one or more of a registrar server web server edge server web conferencing server or even client .

Network s and the networks employed by the example enhanced communication system of may comprise any topology of servers clients Internet service providers and communication media. A system according to embodiments may have a static or dynamic topology. Network s may include a secure network such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s may also coordinate communication over other networks such as PSTN or cellular networks. Network s provides communication between the nodes described herein. By way of example and not limitation network s may include wireless media such as acoustic RF infrared and other wireless media. Many other configurations of computing devices applications data sources and data distribution systems may be employed to implement a communication system with automatic deployment of distributed server systems. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

As shown in diagram server may receive a topology document from an administrative server and already have agent and bootstrapper module installed. As mentioned previously the agent and the bootstrapper components may be non specific to any particular role. Thus they may be installed separately from the topology document and lie dormant until they receive a topology document that includes the current device. It should be noted that because domain related actions are performed during publishing of the topology the bootstrapper as well as the agent and replica may need only local device privileges to do their jobs.

Agent may detect any changes arrival of a new topology document and activate bootstrapper module which first discovers installed and configured roles on the server e.g. web services device management etc. . If server is being newly added there may not be any existing roles. Bootstrapper module may compare that list to the roles specified in the topology document and perform a set difference resulting in a list of roles no longer assigned to the server . Bootstrapper module may deactivate and removes those roles and determine roles that should be on the server . The module may then generate another list of prerequisites for those roles. The prerequisites may be checked and if necessary installed. Next the bootstrapper module may perform a set difference on the topology and the discovered roles this time resulting in the list of roles that should be on the server but are not. Roles e.g. edge server may be installed and configured using the configuration data in the topology. The installed roles may then be activated redefining a function of server within the system e.g. edge server .

As shown in diagram topology deployment may begin with receipt of the topology package e.g. data.zip file at a server to be configured . Next the topology document may be extracted and the local configuration discovered by a bootstrapper . The bootstrapper may be included in the topology package along with the topology document or already installed at the server. The local configuration discovery may include a determination of whether the roles specified in the topology imply or explicitly state that a local copy of the configuration should be stored on this machine e.g. in an Xds database . On the other hand a file server or a back end database server may not have a local management store e.g. Xds database replica and receive their topology from a file instead of storing at a local copy. These types of servers are not actively managed by the system but still need to be set up in a semi automatic manner. Normal roles e.g. audio video conferencing web services etc may include a local copy of the configuration and setup may be performed using the contents of the local copy which may be updated through replication. If the server does not have existing roles a set of features and roles may be built that satisfy the input topology .

If an existing configuration is discovered the bootstrapper may ensure that a related database the Xds local management store database is installed and populate the database with data from the topology document through replication which happens prior to or by the admin providing the configuration which is stored as the local configuration. Bootstrapper may install other databases like the back end database or the archiving database as described in the topology but the Xds local management database can be considered part of the bootstrapper agent. Every machine with the agent on it may have an Xds database. Certain machines may have a backend database and it may be possible that a dedicated backend does not have an agent and thus not get automatic bootstrapping . If no existing configuration is discovered bootstrapper may install the Xds database and populate that database with data from the topology document. This completes the replication store on which the deployment system is built.

If the existing configuration data either updated from an existing configuration or new for a first time installation calls for another database such as a user database that database may also be installed. Thus the database that gets populated with data from the topology document is always installed and the databases which are conditional on the configuration do not receive data from the topology document. With information from existing configuration database and or newly configured data from the topology document a set of features and roles may be built that satisfy the input topology .

Next the set of installed features and activated roles on the server may be discovered by the bootstrapper . The discovered features and roles may be compared to those built . If the comparison yields a non empty set resulting items may be deactivated and uninstalled along with any items that may depend on those in a reverse dependency order . Then the set of discovered features and roles may be updated . Another comparison may be performed between built items and discovered items . If that operation results in a non empty set resulting roles and features may be installed and activated in a dependency order after any necessary non product pre requisites are installed. The process may verify operating system configuration and features install pieces that can be installed e.g. SQL .NET PowerShell modules runtimes etc before installing roles and product features. Functions may be performed regardless of whether there is a replica on the machine. If the process arrives via there is no replica on the machine. If the process arrives via there is a replica on the machine . If there is a replica the replica may be used to send feedback to the central management store. If there is no replica the feedback may be given locally.

A deployment feedback may also be provided to a central management store such that administrators can monitor which machines have been configured which machines still need to be configured possibly offline which machines encountered errors and need attention and the like. The feedback may include an identification of the server a version identification of the processed topology a result code and any records of the installation and activation process. Since the system ensures that the topology is internally consistent the administrators may just need to make sure that the devices have successfully configured themselves to match the topology to be confident that their environment is properly deployed. In situations where the deployment agent cannot be used or is not used by choice the bootstrapper may be executed interactively and the results delivered to a local console.

The example systems in have been described with specific components such as registrar servers communication servers directory servers presence servers and the like. Embodiments are not limited to communication systems according to these example configurations. Furthermore specific protocols and deployment components are described for communication between different devices. Embodiments are also not limited to the example protocols or components discussed above. Metadata driven automatic deployment of distributed server systems according to embodiments may be implemented using protocols components and configurations other than those illustrated herein employing fewer or additional components and performing other tasks. Moreover embodiments may also be implemented in distributed server systems other than enhanced communication systems using the principles described herein.

Computing device may be a generic server or a specific server with defined functionality and receive a replica of a topology document for the system from an administration server. Upon activation of the environment by the central deployment components agent and bootstrapper may be executed independently or within the framework of a configuration application . Agent may activate bootstrapper which may check an existing configuration if any determine assigned role s and prerequisites for those roles from the replica of the topology document install and activate the assigned roles and prerequisites. Bootstrapper may also provide a feedback to the central deployment components such that local status of computing device can be monitored by the system administration. This basic configuration is illustrated in by those components within dashed line .

Computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer readable storage media. Computer readable storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer readable storage media may be part of computing device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device and comparable input devices. Output device s such as a display speakers printer and other types of output devices may also be included. These devices are well known in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other devices such as over a wired or wireless network in a distributed computing environment a satellite link a cellular link a short range network and comparable mechanisms. Other devices may include computer device s that execute communication applications other directory or policy servers and comparable devices. Communication connection s is one example of communication media. Communication media can include therein computer readable instructions data structures program modules or other data. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Example embodiments also include methods. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where a topology document is received at a server that is to be configured for one or more specific roles. The server may or may not have existing roles i.e. first time configuration vs. modification of roles and features based on system topology changes . The server may already have an agent and a bootstrapper module installed. At operation the agent may activate the bootstrapper which may first discover existing roles and features on the server if any at optional operation . The bootstrapper may then determine a list of assigned roles from the replica of the topology document at operation .

If any of the existing roles are not on the list of newly assigned roles the bootstrapper may deactivate and uninstall those roles as part of the configuration at optional operation . The bootstrapper may then install and activate new roles from the list at operation . If any prerequisites are needed those may be installed prior to installation and activation of the new roles as well. According to some embodiments the bootstrapper may stop and report status back that the installation is blocked if the automated system cannot install the pre requisites. At operation a feedback may be sent to a central store with information about the current status of the server such that system administration can monitor status of servers within the system.

The operations included in process are for illustration purposes. Providing metadata driven automatic deployment of distributed server systems according to embodiments may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

