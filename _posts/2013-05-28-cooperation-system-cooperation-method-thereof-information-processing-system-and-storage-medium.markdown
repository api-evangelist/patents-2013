---

title: Cooperation system, cooperation method thereof, information processing system, and storage medium
abstract: A client sends a request to start to use a service via an information processing system that is a cooperation source, acquires identification information indicating that authentication has been successfully performed based on group authentication information set for a group to which a user belongs, and then transmits the identification information to an information processing system that is a cooperation destination.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09413751&OS=09413751&RS=09413751
owner: Canon Kabushiki Kaisha
number: 09413751
owner_city: Tokyo
owner_country: JP
publication_date: 20130528
---
The present invention relates to a cooperation system for causing a plurality of information processing systems to cooperate with one another by single sign on a cooperation method thereof an information processing system therein and a storage medium.

Configurations for managing operation data and performing various types of processing operations on a cloud platform have been gaining popularity. A user accesses a web page provided by the cloud platform from a browser of a client personal computer PC via the Internet and displays the operation data to be viewed on the web page. For example when the user gives a document generation instruction via a screen of the PC the client PC accesses a document generation server. Subsequently the document generation server acquires the operation data on the cloud platform generates the document and then transmits the generated document to the client PC. A typical example of the cloud platform includes Salesforce CRM registered trademark of Salesforce.com.

The cloud platform and the document generation server are operated in a multi tenant manner. The tenant refers to a unit of companies or organizations that are under contract for using the cloud platform and the document generation server and a group to which the user belongs. In a service operated in a multi tenant manner one information processing system manages data of a plurality of tenants and separately manages the data of each tenant so that the data of the tenant cannot be referred to from another tenant. To make the tenant refer to only its own data the cloud platform and the document generation server authenticate the user and check the tenant. The user is authenticated using a user identification ID for identifying the user and a password which is confidential information and the tenant is checked on whether the tenant input by the user exists.

When the cloud platform and the document generation server cooperate with each other the user does not need to be authenticated by each server but the authentication can be made to cooperate with one another among the information processing systems. Conventionally techniques for making the authentication cooperate with one another among a plurality of information processing systems include a single sign on SSO structure by a security assertion markup language SAML . In the SSO by the SAML the user retains both user IDs of the information processing system an identity provider IdP providing an authentication service and an information processing system a service provider SP providing a service with an authentication result of the IdP relied. When the user receives the user authentication by the IdP the SP relies on the authentication result and authenticates user s access as the user ID managed in the SP IdP preceding . Further when the user who has not been authenticated yet by the IdP accesses the SP the SP guides the unauthenticated user to an appropriate IdP and makes the user authenticated by the IdP SP preceding . By any method the user can receive the service provided by the SP only by inputting the user authentication information in the IdP and reduce the user authentication processing in the SP thereby improving convenience.

When the SSO is performed by the SAML the user ID retained by the IdP and the user ID retained by the SP are associated with each other hereinafter referred to as user mapping to be managed. Particularly when the service always requiring identifying the user is associated with the document generation server the ID needs to be managed by the user mapping. A printing service for managing and printing the document for each user always requires identifying the user.

Further a method for associating the IDs retained by each of the plurality of information processing systems with one another has been conventionally known. Japanese Patent Application Laid Open No. 2011 221729 discusses a method in which the service providing server guides the user to access the authentication server registers the authentication information between the authentication server and the user to perform the authentication processing.

However the conventional method has problems as described below. In order for a plurality of information processing systems to perform the SSO the user mapping is essential for associating a plurality of user IDs in the information processing system of a cooperation source and a plurality of user IDs in the information processing system of a cooperation destination.

The user takes much work on the user mapping. When the number of user IDs increases the user s work increases accordingly.

The present invention is directed to a cooperation system in which group authentication information is set for a group to which a plurality of users belongs and using the group authentication information SSO is realized to reduce work of user mapping.

According to an aspect of the present invention a cooperation system includes a first information processing system for managing user authentication information about a plurality of users for each group and a second information processing system for acquiring data from the first information processing system and providing a service using the acquired data. The first information processing system includes a first authentication unit configured to receive user authentication information from a user operating a client and to authenticate the user based on the received user authentication information and a first transmission unit configured to in response to reception of a request for starting to use the service after the user is successfully authenticated transmit group authentication information set for the group to which the user belongs to the second information processing system and the second information processing system includes a second authentication unit configured to receive the transmitted group authentication information and to perform authentication based on the received group authentication information and a second transmission unit configured to after the authentication has been successfully performed based on the group authentication information transmit identification information indicating that the authentication has been successfully performed to the first information processing system wherein the first information processing system further includes an instruction unit configured to transmit the transmitted identification information to the client and to instruct the client to access the second information processing system and wherein the second information processing system further includes a verification unit configured to verify the identification information transmitted from the client performing access according to the instruction and a providing unit configured to in response to successful verification of the identification information provide the service to the user operating the client without authenticating the user operating the client.

Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.

Various exemplary embodiments features and aspects of the invention will be described in detail below with reference to the drawings.

The present invention is directed to realizing SSO by setting group authentication information for a group to which a plurality of users belongs and using the group authentication information.

More specifically an information processing system of a cooperation source for managing user authentication information corresponding to each of a plurality of users for each group receives a user s request for starting to use a service of the information processing system of the cooperation destination. In response to the user s request the information processing system of the cooperation source transmits group authentication information set for the group to which the plurality of users belongs to the information processing system of the cooperation destination and receives the authentication. The information processing system of the cooperation destination transmits the identification information indicating that the authentication has been successfully performed to the information processing system of the cooperation source. The identification information is transmitted from the information processing system of the cooperation source to a client operated by the user requesting for starting to use the service. The information processing system of the cooperation destination verifies the identification information transmitted from the client and then according to the verification of correct identification information provides the service without authenticating the user operating the client.

In the conventional technique user mapping needs to be performed between the user ID in the information processing system of the cooperation source and the user ID in the information processing system of the cooperation destination. However according to the present invention SSO can be realized using the group authentication information shared among all users belonging to the group. As a result the user does not need to perform the user mapping but may only set the group authentication information for the group to which the plurality of users belongs thereby greatly reducing troublesome processing.

According to the present exemplary embodiment a wide area network WAN is established by a World Wide Web WWW system. A local area network LAN connects configuration elements with one another. The LAN via the WAN enables the apparatuses to communicate with one another.

A client PC is an information processing apparatus operated by the user. According to a user s request the client PC issues a request for a service providing server A and a service providing server B described below and transmits it to them.

An authentication service determination server guides the client PC to access an appropriate IdP. An authentication server A and an authentication server B perform authentication and act as the authentication device in the IdP. The authentication service is not limited to the two described above. Which IdP actually authenticates the user varies depending on the user that accesses.

The service providing server A and the service providing server B provide the service for the authenticated user. The service providing server A receives the request from the client PC and then provides the document generation service for generating document data. Original data required when the document data is generated is acquired from the service providing server B for example. The service providing server B provides the service for displaying and updating the data retained according to the request from the client PC or the service providing server A . The service providing server A and the service providing server B are not limited to the document generation service and the cloud platform but may be other services.

Further the client PC the authentication service determination server the authentication server A the authentication server B the service providing server A and the service providing server B are connected with one another via the WAN or the LAN . The information processing apparatuses described above can communicate with one another. The client PC and each server may be formed on the individual LAN and also may be formed on the same LAN. They may be formed in the same PC too.

The authentication server B and the service providing server B are established as a server group in the same network in an intranet and the authentication service determination server the authentication server A and the service providing server A are established as a server group in the same network in the intranet . The former server group is referred to as a first information processing system and the latter server group is referred to as a second information processing system . The server forming each information processing system is not limited to the server discussed in the first exemplary embodiment. A server providing other services may exist.

Subsequently a case will be described where the user is identified by the user authentication and the user receives the service when the user is successfully identified. This is performed by the cooperation via the SSO by the SAML that performs the user mapping.

The client PC accesses the service providing server B . When the service providing server B receives access of the unauthenticated user it displays the authentication screen not illustrated to authenticate the user. When the user is successfully authenticated operation data is displayed.

When the service providing server A receives the access of the unauthenticated user the service providing server A causes the client PC to access the authentication service determination server . The authentication service determination server causes the client PC to access the appropriate authentication server A or authentication server B . When the authentication server A or the authentication server B authenticates the user the authentication server A or the authentication server B causes the client PC to access the service providing server A again. The service providing server A provides the user operating the client PC with the service.

The authentication service determination server stores information serving as a key for determining the authentication server for authenticating the user which is tenant information for identifying the tenant for example and the authentication server information with the information associated with each other. When the authentication service determination server receives the access of the unauthenticated user the authentication service determination server retrieves the information serving as the key for determining the authentication server from the information provided when the user accesses the authentication service determination server and then acquires the authentication server information. Subsequently the authentication service determination server guides the user to access the appropriate authentication service according to the retrieved authentication server information.

When the authentication server A receives the unauthenticated access re directed from the authentication service determination server the authentication server A displays a user authentication screen not illustrated and prompts the user to input the user ID and the password to authenticate the user. When the authentication server A has received access destination information after the authentication has been completed based on the information the user s access is re directed. For example when the service providing server A has been specified as a re direct destination after the authentication has completed the client PC is re directed to access the service providing server A . At this point as information indicating that the user has been authenticated assertion is issued and then the client PC is re directed to access the service providing server A with the assertion added. The service providing server A requests the authentication server A to verify the assertion. The authentication server A verifies whether the assertion is correct and when it is verified that the assertion is correct the authentication server A specifies the user ID managed thereby in response to the verification of the correct assertion. The specified user ID is previously associated with the user ID in the authentication server B by the user mapping.

The authentication server A issues an authentication session ID indicating that the access is from the authentic user. The authentication session ID includes an arbitrary unique character string and the authentication server A stores the user ID and the authentication session ID with the IDs associated with each other. Subsequently the authentication server A specifies the user ID based on the authentication session ID provided when the user accesses the authentication server A . The authentication session ID is added to a response page returned to a browser of the client PC by the service providing server A and stored in the browser thereof. Subsequently when the user accesses the service providing server A via the browser of the client PC the authentication session ID is transmitted to the service providing server A . The authentication session ID is valid for a predetermined time and an expiration time is managed by the authentication server A . According to the first exemplary embodiment the expiration time idling time of the authentication session ID is set to 30 minutes. The authentication session ID is transmitted to the service providing server A so that the user can receive the service provided by the service providing server A without being authenticated by the authentication server A . As described above the single sign on has an advantage in which the user does not need to input the user authentication information.

When the service providing server A receives the access re directed from the authentication server A since the user has been already authenticated the user can receive the service provided by the service providing server A . According to the first exemplary embodiment the authentication session ID may be added to an item of Cookie AUTH SESSION ID stored by the client. The authentication session ID can be added by a method other than Cookie.

Further the authentication server A includes an application programming interface API for authenticating the user when receiving the user ID and the password. The user authentication API is an interface for returning the authentication session ID to the invoker when it authenticates the user. Furthermore the authentication server A includes the API for receiving the assertion and the authentication session ID to verify adequateness of each data. The API for verifying the adequateness of the authentication session returns the verification result to the invoker.

When the authentication server B receives the unauthenticated access re directed from the authentication service determination server it displays the user authentication screen not illustrated and prompts the user to input the user ID and the password to authenticate the user. In other words the authentication server B also includes the API for authenticating the user. When the authentication server B successfully authenticates the user it generates an evidence for the success and the assertion and then re directs the client PC to access the authentication service that can verify the assertion.

As described above the user is identified by the user authentication and then the user receives the service provided depending on the identification. The cooperation system according to the first exemplary embodiment can perform the SSO and how the SSO is performed will be described in detail below in another exemplary embodiment.

As illustrated in a central processing unit CPU executes a program such as an operating system OS and an application stored in a program read only memory ROM of a ROM or loaded into a random access memory RAM from a hard disk HDD . The OS herein is an abbreviation of an operating system running on a computer and referred to as the OS hereinafter. The program for realizing processing of each flowchart described below is performed on the OS. The RAM functions as a main memory and a work area for the CPU . A keyboard controller KBC controls a keyboard KB and a key input via a pointing device not illustrated . A cathode ray tube CRT controller CRTC controls display of a CRT display . A disk controller DKC controls data access to a hard disk HD and a floppy disk FD that store various types of data. A network controller NC is connected to a network to perform communication control processing with other devices connected thereto. In the all description below a main subject on the hardware is the CPU unless otherwise specified and a main subject on software is each software module installed in the HD .

When the service providing server A receives the access from the client PC the access denial module determines whether a uniform resource locator URL accessed is registered to the unprotected resource management module .

When the URL accessed is the unprotected resource the access denial module verifies the authentication session ID and when the authentication session ID is correct the access denial module instructs the client PC to access the protected resource and then provides the user operating the client PC with the service. Further when the URL is the protected resource the access denial module determines whether the user s access has been authenticated and the unauthenticated client PC is re directed to access the authentication service determination server . When the user s access has been authenticated the document generation module described below transmits the generated document to the client PC to provide the user operating the client PC with the service.

The access denial module determines whether the user operating the client PC has been authenticated based on whether the request includes Cookie AUTH SESSION ID and whether the authentication session ID included in Cookie AUTH SESSION ID is valid.

The data acquisition module acquires the operation data from the service providing server B . The document generation module acquires a form managed by a form management module not illustrated and inserts the operation data acquired by the data acquisition module into the form to generate the document data. The document data is to be record file data such as general residence certificate and account files however may be other data. In response to the request from the client PC the page generation module generates the response page and returns it to the client PC . The response page is a screen not illustrated for for example inputting the user authentication information not illustrated and displaying the document data.

When the service providing server B accesses the URL which is the unprotected resource for acquiring the authentication session ID the access denial module retrieves a group ID and the password from the request. The authentication information acquisition module specifies the retrieved group ID and password to invoke the user authentication API of the authentication server A . When the client PC accesses the URL that is the unprotected resource for verifying the authentication session ID the access denial module retrieve the authentication session ID from a parameter portion of the URL. The authentication information verification module specifies the retrieved authentication session ID to invoke an authentication session adequateness verification API of the authentication server A . As described above the function is provided by the software module of the service providing server A .

When the service providing server B receives the access from the client PC the access denial module determines whether the user has been authenticated and when the user has not be authenticated yet the page generation module displays the user authentication screen. When the user has been authenticated the service providing server B provides the service. When the service providing server B receives the request for displaying the operation data the operation data management module or acquires the operation data. When the screen for displaying the operation data includes the button the setting management module or acquires the button setting. The page generation module generates the response page and then returns it to the client PC . Detailed description of the button setting according to the first exemplary embodiment will be described below.

The user ID and password managed by the group ID management module or are account information for identifying the tenant accessing the service providing server A and include the group ID and password. The group ID management module or manages maximum one pair of group ID and password. The group ID and password are previously issued and acquired by a certain method by the user manager and then registered via a setting screen not illustrated .

From a point of view of security it is desirable that the group ID and password of the group ID management module or be registered and updated only via an ID setting screen not illustrated . Further it is desirable that the password managed by the group ID management module or be not displayed on the ID setting screen not illustrated . Furthermore it is desirable that the group ID and password managed by the group ID management module or be able to be acquired only from the authentication information acquisition module or . The group ID and password managed by the group ID management module or should not be able to be acquired and referred to from an outside of the service providing server B .

The group authentication information refers to the group ID and password described above. According to the first exemplary embodiment one piece of group authentication information is allocated to one tenant. As a result all users belonging to the specified tenant share the group authentication information. The group authentication information is not limited to the group ID and password. The group authentication information may have any format as long as it is uniquely allocated to one tenant and its data can be used via the user authentication API of the authentication server A . For a group further divided from one tenant the present invention can be applied.

When the service providing server B receives the request for acquiring the authentication session ID from the client PC the authentication information acquisition module or acquires the group ID and password from the group ID management module or . The authentication information acquisition module or sets the acquired group ID and password to the parameter and accesses the URL of the unprotected resource for acquiring the authentication session ID of the service providing server A . The authentication information acquisition module or is publicized as the web service API for example to receive an authentication session ID acquisition request from the browser of the client PC .

Further the group ID management module or the authentication information acquisition module or the operation data management module or and the setting management module or are managed for each tenant. For the management the modules managed for each tenant maybe stored into the same HDD and the data for each tenant may be logically separated or the HDD may be separated to physically separately manage the module.

As illustrated in the portion defined to acquire or store Cookie LOGIN indicates to perform processing for transmitting Cookie LOGIN from the browser of the client PC to the service providing server A to be acquired or for storing Cookie LOGIN into the browser thereof. Cookie is temporarily stored in the server as the data by the client. The data about a communication and authentication state between the information processing system and the client is stored in the HDD of the client PC as Cookie.

The expiration time for Cookie can be set when it is stored and when the expiration time elapses Cookie can be deleted by the browser of the client PC . Cookie LOGIN is a flag for determining whether the service providing server B acquires the authentication session ID from the service providing server A using the group authentication information. When Cookie LOGIN does not exist or when the client PC determines that the expiration time set when Cookie LOGIN has been once stored has elapsed the service providing server B acquires the authentication session ID of the service providing server A . The browser of the client PC sets the acquired authentication session ID to the parameter of the URL of the unprotected resource and accesses a document generation processing URL of the unprotected resource of the service providing server A . When Cookie LOGIN is within the expiration time the browser of the client PC accesses the document generation processing URL of the protected resource of the service providing server A .

The expiration time of Cookie LOGIN according to the first exemplary embodiment is set shorter than the expiration time idling time of the authentication session ID managed by the authentication server A . Thus when Cookie LOGIN is within the expiration time the authentication session ID included in Cookie AUTH SESSION ID is always valid. Therefore even though the client PC accesses the URL of the protected resource the authentication screen for inputting the user authentication information required for authenticating the user is not displayed. Cookie AUTH SESSION ID is used for the authentication when the client PC accesses the document generation processing URL of the protected resource and is different from Cookie LOGIN . The user operating the client PC with Cookie AUTH SESSION ID can receive the service without being authenticated by the service providing server A . Cookie LOGIN is provided and the expiration time thereof is set shorter than that of Cookie AUTH SESSION ID so that the user is never authenticated by the service providing server A when the client PC accesses the service providing server A . Therefore user s convenience can be improved.

According to the first exemplary embodiment the authentication session ID is set as a value of Cookie LOGIN . However as described above only whether Cookie LOGIN is within the expiration time is determined and Cookie LOGIN itself is not verified. Thus the value other than the authentication session ID may be set as the value of Cookie LOGIN . As illustrated in Api.Session ID means that the authentication session ID of the authenticated user of the service providing server B is acquired from the session management module not illustrated of the service providing server B .

As illustrated in Api.Server URL means that the service providing server A acquires the URL for accessing the service providing server B . As illustrated in Opportunity.Id means that a record ID of the business meeting record displayed on the screen is acquired. When the user presses the button set as illustrated in JavaScript registered trademark is performed on the browser of the client PC . Another window is displayed on the browser of the client PC and the client PC is re directed to access http service a unprotected service which is the unprotected resource. As a URL parameter for accessing a parameter AUTH ID includes the authentication session ID issued by the service providing server A based on the group authentication information a parameter sessionid includes the session ID of the authenticated user of the service providing server B a parameter serverurl includes a URL parameter for accessing the service providing server B and a parameter recordid includes a record ID of the business meeting record.

In step S the browser of the client PC acquires Cookie LOGIN from the HDD thereof. In step S the browser of the client PC determines whether Cookie LOGIN exists in other words has been acquired. When Cookie LOGIN exists YES in step S the processing proceeds to step S and when Cookie LOGIN does not exist NO in step S the processing proceeds to step S.

When Cookie LOGIN exists in step S then instep S the browser of the client PC determines whether Cookie LOGIN is within the expiration time. When Cookie LOGIN is within the expiration time YES in S the processing proceeds to step S and when Cookie LOGIN is not within the expiration time NO in S the processing proceeds to step S.

When it is determined that Cookie LOGIN is within the expiration time in step S then in step S the browser of the client PC updates the expiration time of Cookie LOGIN . In step S the browser of the client PC sets the URL used to access http service a service which is the protected resource and then in step S the browser thereof accesses the service providing server A . By updating the expiration time of Cookie LOGIN the number of times to execute the flow for issuing new Cookie AUTH SESSION ID can be reduced.

When Cookie LOGIN does not exist NO in step S or when Cookie LOGIN is not within the expiration time NO in step S then in step S the browser of the client PC requests the service providing server B to acquire the authentication session ID. In step S the browser of the client PC determines whether the authentication session ID has been successfully acquired. When the authentication session ID has been successfully acquired YES in step S the processing proceeds to step S and when the error is returned NO in step S the processing proceeds to step S. The determination in step S can be performed based on the response from the service providing server B .

When the authentication session ID has been successfully acquired in step S then in step S the browser of the client PC retrieves the acquired authentication session ID. In step S the acquired authentication session ID is set to the URL parameter AUTH ID . Subsequently the acquired authentication session ID is stored in Cookie LOGIN . At this point the expiration time of Cookie LOGIN is set to 20 minutes. The expiration time of Cookie LOGIN does not need to be 20 minutes as long as it is shorter than the expiration time 30 minutes of the authentication session ID managed by the authentication server A . However the shorter the expiration time is the more the processing in step S is likely to be performed. Subsequently in step S the browser of the client PC sets the URL used to access http service a unprotected service which is the unprotected resource and then in step S the browser of the client PC accesses the service providing server A .

When the error is returned in step S then in step S the screen is re loaded. When the error is returned the session of the authenticated user by the service providing server B may expire for example. Alternatively the service providing server B may have failed to acquire the authentication session ID. In such cases by re loading the screen the authentication screen is displayed again on the browser of the client PC and after the user is successfully authenticated the screen can return to the screen that has been displayed right before. In step S the error screen may be displayed without re loading the screen. As described above the flow executed by the browser of the client PC ends.

In step S the service providing server B receives the authentication session ID acquisition request. In step S the authentication information acquisition module or acquires the group ID and password from the group ID management module or . In step S to request the authentication with the acquired group ID and password the authentication information acquisition module or sets the acquired group ID and password to the URL parameter and accesses the URL http service a unprotected login which is the unprotected resource. In step S the authentication information acquisition module or returns the authentication session ID included in the authentication result as a response. The flow is performed as described above and ends here.

In step S the service providing server A receives the authentication request. In step S the access denial module acquires the group ID and password from the parameter. In step S the authentication information acquisition module specifies the acquired group ID and password invokes the user authentication API of the authentication server A and then acquires the authentication session ID. In step S the authentication information acquisition module returns the acquired authentication session ID to the client PC as the response. The flow is performed as described above and ends here. The expiration time idling time of the acquired authentication session ID is 30 minutes.

In step S the service providing server A receives the access of the client PC . In step S the access denial module determines whether the URL of an access destination from the client PC is the unprotected resource. When the URL accessed is not the unprotected resource NO in step S the processing proceeds to step S and when it is the unprotected resource YES in step S the processing proceeds to step S.

In step S the access denial module determines whether the access has been authenticated. When the access has been authenticated YES in step S the processing proceeds to step S and when it has not been authenticated NO in step S the processing proceeds to step S.

In step S the access denial module determines whether the URL parameter includes the parameter AUTH ID . When the parameter AUTH ID is included YES in step S the processing proceeds to step S. When it is not included NO in step S then in step S the page generation module returns the error screen and then the flow ends.

In step S the authentication information verification module acquires the authentication session ID from the URL parameter AUTH ID . In step S the authentication information verification module specifies the acquired authentication session ID invokes the authentication session adequateness verification API of the authentication server A and then verifies whether the authentication session ID is adequate. In step S the authentication information verification module acquires the verification result of the authentication session adequateness verification API and verifies whether the result is adequate. When the acquired authentication session ID is adequate YES in step S the processing proceeds to step S. When it is not adequate NO instep S then instep S the page generation module returns the error screen and then the flow ends.

In step S the authentication information addition module adds the acquired authentication session ID to Cookie AUTH SESSION ID . In step S the page generation module forwards the request to the document generation processing URL http service a service which is the protected resource. In other words the service providing server A instructs the client PC to access the protected resource. With this arrangement the flow illustrated in is performed again and since the authentication has been performed the processing proceeds to step S. As a result the user operating the client PC can receive the service without being authenticated by the service providing server A . In step S the response may be returned to the browser of the client PC and the browser of the client PC may access the document generation processing URL http service a service .

In step S the data acquisition module acquires recordid from the parameter and performs a query for acquiring the operation data on the service providing server B . In response to the query for acquiring the operation data the service providing server B transmits the operation data to the service providing server A . Subsequently the document generation module acquires the form managed by the form management module not illustrated to generate the document data based on the acquired operation data and form. The document generation processing in step S is known and thus will not be described. The page generation module generates the response page for notifying that the document data has been generated and displaying the document data and then returns the response page to the client PC . As a result the user operating the client PC can receive the service. Once the response page is received the browser of the client PC acquires Cookie AUTH SESSION ID from the response page and stores it in the HDD of the client PC . Subsequently when the browser of the client PC accesses the service providing server A it retrieves Cookie AUTH SESSION ID from the HDD and adds Cookie AUTH SESSION ID into the request.

According to the first exemplary embodiment authentication is performed with one account e.g. group authentication information from the service providing server B to the service providing server A and the browser of the client PC accesses the unprotected resource of the service providing server A with the acquired authentication session ID the authentication screen is not displayed . Further the acquired authentication session ID is stored in Cookie of the browser and while Cookie is valid the client PC accesses the protected resource of the service providing server A . Since the authentication is always valid the authentication session ID is always valid while Cookie is valid the authentication screen is not displayed. As described above the service providing server A can be used with one account of the service providing server A regardless of the number of user accounts of the service providing server B and thus the SSO can be performed without displaying the authentication screen although the user mapping is not performed.

When the document is generated according to the present exemplary embodiment it can be also controlled not to transmit the document to the service always requiring the identification of the user.

Subsequently a second exemplary embodiment of the present invention will be described. Components similar to those of the first exemplary embodiment will not be described and only a difference will be described below. According to the second exemplary embodiment an example where a command for accessing the protected resource is not set for the button will be described. Script description for the button can be reduced. Further even when the client PC always accesses the unprotected resource by saving the verification on Cookie Auth ID a verification process of the authentication session ID by the authentication server A can be reduced.

When the authentication session ID is successfully acquired YES in step S the browser of the client PC performs steps S S and S. Further in step S the browser of the client PC sets true for the parameter check and then sets the parameter check for the URL parameter. When step S or S is performed the browser of the client PC sets http service a unprotected service which is the unprotected resource for the URL to be accessed in step S. In step S the browser of the client PC accesses the service providing server A .

According to the first or second exemplary embodiment the example where the service providing server A is accessed with the group authentication information shared among a plurality of users in the tenant is described. Since the group ID does not specify the user of another service providing server A cooperating with the service providing server B the service always requiring the identification of the user may not be able to be used. In such a case the cooperation system having the flow of the only first or second exemplary embodiment does not specifically describe the cooperation with the service providing server that provides the service of this type. A third exemplary embodiment of the present invention will describe a specific method for realizing the cooperation system for performing the SSO according to the first or second exemplary embodiment when the service requiring the identification of the user is not used and performing the SSO by the SAML with which the user mapping is performed when the service requiring the identification of the user is used.

At least one of buttons illustrated in is disposed on the screen for the operation data of the service providing server B . When two buttons are disposed on the screen for example the button having the button setting illustrated in may be disposed at an immediate right of the button . When the service requiring user s identification is not used the SSO is performed according to the first or second exemplary embodiment using the button . When the service requiring the user s identification is used using the button corresponding to the button setting illustrated in the SSO by the SAML with which the user mapping is performed is performed.

The service that does not require the user s identification according to the third exemplary embodiment includes the document generation service described in the first and second exemplary embodiments. The document generation service does not require a management as to who has generated the document. Further the service requiring the identification of the user includes a printing service for generating print data based on the generated document data and causing a printer to print the print data. Since the print data is actually printed by the printer costs need to be managed. Thus since the user needs to be identified which user has used the printing service is managed.

According to the third exemplary embodiment the button is appropriately used depending on the service to be used and when the service requiring the user s identification is used the SSO by the SMAL with which the user mapping is performed can be performed.

Embodiments of the present invention can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions recorded on a storage medium e.g. non transitory computer readable storage medium to perform the functions of one or more of the above described embodiment s of the present invention and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more of a central processing unit CPU micro processing unit MPU or other circuitry and may include a network of separate computers or separate computer processors. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

According to the above described exemplary embodiments group authentication information is set for a group to which a plurality of users belongs and the SSO is realized using the group authentication information so that the user s work of the user mapping can be reduced.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications equivalent structures and functions.

This application claims priority from Japanese Patent Application No. 2012 122910 filed May 30 2012 which is hereby incorporated by reference herein in its entirety.

