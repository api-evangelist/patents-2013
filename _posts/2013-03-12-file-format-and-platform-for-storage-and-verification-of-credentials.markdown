---

title: File format and platform for storage and verification of credentials
abstract: In various embodiments, a computer-implemented method for generating and verifying officially verifiable electronic representations may be disclosed. The method may comprise receiving, by a credential database, a request for a credential action. The credential database may be configured to store one or more credentials comprising a status indicator. The method may further comprise determining, by the credential database, a response to the credential action based on the one or more user credentials stored in the credential database and transmitting, by the credential database, the response to a client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09251531&OS=09251531&RS=09251531
owner: 
number: 09251531
owner_city: 
owner_country: 
publication_date: 20130312
---
This application claims the benefit under 35 U.S.C. 119 e of U.S. provisional patent application No. 61 740 731 filed Dec. 21 2012 entitled FILE FORMAT AND PLATFORM FOR STORAGE AND VERIFICATION OF CREDENTIALS which is hereby incorporated by reference in its entirety.

The present disclosure relates to electronic transactions and more particularly to systems methods and apparatuses for securely storing and displaying user credentials.

The rapid growth and evolution of traditional and electronic commerce markets has resulted in a wide spread demand for monetary payments by digital transactions. However currently payment systems are highly fragmented and insecure which creates a threat of data compromise and theft during the transfer and use of electronic commerce data. This threat may result in losses for corporations as well as users of such systems and these losses factor into escalating fees and client costs.

Additionally as more users move to a digital transaction model the need for digital identification also increases. As fewer users carry wallets or traditional payment forms traditional forms of ID will become less common. Current platforms are insecure and carrying digital credentials increases the risk of identity theft or fraud in transactions. What is needed is secure system for storing and displaying user credentials.

In various embodiments a computer implemented method for generating and verifying officially verifiable electronic representations may be disclosed. The method may comprise receiving by a credential database a request for a credential action. The credential database may be configured to store one or more credentials comprising a status indicator. The method may further comprise determining by the credential database a response to the credential action based on the one or more user credentials stored in the credential database and transmitting by the credential database the response to a client device.

In various embodiments a computer implemented method for requesting an officially verifiable electronic representation is disclosed. The method may comprise generating by a processor a request for a credential action. The request may comprise a credential identifier. The processor may transmit the request for the credential action to a credential database and receive a response to the request for the credential action.

In various embodiments an apparatus for generating and verifying officially verifiable electronic representations is disclosed. The apparatus may comprise a processor and a memory unit operatively coupled to the processor. The memory unit may be configured to store a plurality of instructions wherein the instructions are configured to program the processor. The processor may be programmed to maintain a credential database. The credential database may be configured to store one or more credentials comprising a status indicator. The processor may further receive a request for a credential action and determine a response to the credential action based on the one or more user credentials stored in the credential database. The processor may be programmed to transmit the response to a client device. In various embodiments a credential database may store the one or more credentials in an encrypted format which can only be decrypted by the apparatus. In various embodiments the credential database may access additional information via a network to complete a verification of a credential. In various embodiments the credential database may use additional information provided by a client such as for example passwords biometric information client GPS location information and or a unique device identifiers to complete the verification.

In various embodiments a computer implemented method for generating and verifying officially verifiable electronic representations may be disclosed. The method may comprise receiving by a credential database a request for a credential action. The credential database may be configured to store one or more credentials comprising a status indicator. The credential database may further be configured to store one or more methods for accessing one or more status indicators on a network such as for example via web service or access to a second data store. The method may further comprise determining by the credential database a response to the credential action based on the one or more user credentials stored in the credential database and transmitting by the credential database the response to a client device. The method may further incorporate additional information submitted by a client such as for example passwords device identifiers client GPS location and or biometric data in conjunction with the stored credential to determine a response to the request for a credential action.

In various embodiments a computer implemented method for requesting an officially verifiable electronic representation is disclosed. The method may comprise generating by a processor a request for a credential action. The request may comprise a credential identifier. The request may further comprise additional information to verify the credential. The processor may transmit the request for the credential action to a credential database and receive a response to the request for the credential action. In various embodiments the processor may incorporate additional information submitted by a client such as for example passwords device identifiers GPS location information and or biometric information to determine a response. In various embodiments the processor may access other data stores available via a network to determine a response.

In various embodiments an apparatus for generating and verifying officially verifiable electronic representations is disclosed. The apparatus may comprise a processor and a memory unit operatively coupled to the processor. The memory unit may be configured to store a plurality of instructions wherein the instructions are configured to program the processor. The processor may be programmed to maintain a credential database. The credential database may be configured to store one or more credentials comprising a status indicator. The processor may access other data stores via a network. The processor may access remote functionality via a network. The processor may further receive a request for a credential action and determine a response to the credential action based on the one or more user credentials stored in the credential database. The processor may be programmed to transmit the response to a client device.

Reference will now be made in detail to several embodiments including embodiments showing example implementations of systems and methods for generating storing and displaying OVER File credentials. Wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality. The figures depict example embodiments of the disclosed systems and or methods of use for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative example embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

In some embodiments an Officially Verifiable Electronic Representation OVER File may provide a secure file format and platform for the storage and verification of key user or consumer credentials. As shown in in one embodiment an OVER File management platform may comprise three main components an OVER File storage client an OVER File third party client and an OVER File generation and authorization engine . The OVER File storage client may be executed by a user device to store generated OVER Files representative of the user s credentials. The OVER File storage client may be included as part of a virtual wallet platform or may comprise a stand alone user application. The OVER File storage client may initiate generation of new OVER Files and may comprise a display function for displaying stored user credentials for third party verification. The OVER File credentials may comprise any officially verifiable electronic credential such as for example a government issued identification such as a driver s license non driver s identification card or professional license. The OVER File credentials may also comprise privately issued credentials such as for example employee identification cards merchant loyalty cards access cards insurance credentials transportation credentials or any other credential that may be electronically verified by an issuing agency.

In some embodiments an OVER File third party client may be executed by a third party device to verify the existence and validity of OVER File credentials presented by a user. The OVER File third party client may allow a third party to scan or otherwise interact with OVER File credentials displayed on a user device. The OVER File third party client may contact a remote server such as the OVER File generation and verification engine for verification of the displayed user credential as explained in more detail below. The OVER File third party client may further allow a third party to request generation of an OVER File credential for delivery to an OVER File storage client . In some embodiments the OVER File third party client may comprise a stand alone application executed by the third party device. In other embodiments the OVER File third party client may comprise an application program interface API configured to provide OVER File credential verification through a third party application.

In some embodiments an OVER File generation and authorization engine may generate OVER File credentials in response to requests from an OVER File storage client or an OVER File third party client . The OVER File credentials may be generated from data provided by a user a third party or an issuing agency or authority. The OVER File generation and authorization engine may further provide authorization of OVER File credentials requested by third parties. The OVER File generation and authorization engine may operate on a remote server. Client devices such as the user device or the third party device may communicate with the OVER File generation and authorization engine using any suitable network or communication system. In some embodiments the OVER File generation and verification engine may generate and maintain a status indicator for each stored OVER File credential configured to indicate whether the OVER File credential is currently valid.

A user may access the OVER File credential features of an OVER File storage client to add a new credential to the OVER File storage client . The user may be presented with a credential generation screen such as the credential generation screen shown in . A credential may be added manually by a user or automatically by the application. In some embodiments a user may select the method of entering the credential for example manual or automated entry using the credential generation screen. In some embodiments a user may select manual entry of the credential. The user may interact with the credential generation screen to enter information about the credential such as for example the issuing agency a credential identifier such as a credential identification number or any other information associated with the credential. For example in one embodiment a user may choose to manually enter a credential representing a rewards card for a retailer. The user may be prompted to identify the retailer a rewards card identification number and a name associated with the rewards card.

In some embodiments information for generating an OVER File credential may be automatically added to the OVER File storage client . For example information necessary for the generation of an OVER File credential may be entered by scanning an information code. The information code may be represented for example by a quick response QR Code standard one dimensional bar code alpha numeric bar code for example Type 128 and or other suitable information codes. The information code may be represented data sent by a radio transmission or by an electronic transmission broadcast over a network. In some embodiments a user device may scan an information code provided by an issuing agency. The information code may comprise information such as a credential identifier necessary for generating an OVER File and contacting an issuing agency database for verification of the credential. The information code may be provided by the issuing agency during creation of the credential and may be scanned by a user using a scan function of the user device.

In some embodiments the information code may comprise information necessary for the generation of a credential by a third party. A user may select a third party scan option for generation and delivery of a new credential. The OVER File storage client may generate a information code on the user device for scanning by the third party. The information code may comprise any necessary information for generation and delivery of the OVER File credential to the user device such as for example the user s name contact information social security number biometric information location information user selected password and or a device identifier to identify the user device. The information code may be displayed on the user device and may be scanned by a third party using a third party device. The third party device may execute an application such as the OVER File third party client for scanning the information code and contacting an OVER File generation and verification engine . The OVER File generation and verification engine may be executed by any suitable system. The OVER File generation and verification engine may comprise a credential data store such as for example a database a web service a flat file configured to store data and or any other suitable datastore. The credential datastore may comprise a memory unit formed integrally with the system configured to execute the OVER File generation and verification engine or may comprise a remote storage device such as for example a database connected to the OVER File generation and verification engine through a local area network LAN wide area network WAN or Internet connection. Although the various embodiments of the OVER File generation and verification engine are discussed with respect to an OVER File database those skilled in the art will recognize that any suitable architecture and or datastore may be employed by the OVER File generation and verification engine.

In some embodiments an issuing agency may set one or more business rules that a user may be required to meet prior to verification of the OVER File credential by the issuing agency such as being required to verify the user s identity prior to generation of the OVER File credential. For example a user attempting to add a driver s license credential may be required to visit a state DMV office. After verifying the identity of the user the DMV office may provide the user with a scannable information code for generation of an OVER File credential for the user s driver s license. The information code may comprise a credential identifier and an authorization code to enable the OVER File database to generate the OVER File credential. In some embodiments a physical credential issued by the issuing agency may contain an information code that may be scanned by the user at any time to add the credential to the OVER File storage client . For example a retailer loyalty card may comprise a scannable quick response QR code that a user may scan to add an OVER File credential of the loyalty card to a user device.

After the necessary information has been entered to generate an OVER File credential either manually or through an automated process such as scanning the generating device may contact an application gateway to deliver an OVER File generation request to an OVER File database . The OVER File database may comprise an OVER File generation and verification engine . The application gateway may request generation of an OVER File and verification of the generated OVER File credential. The OVER File database may be configured to create a new OVER File containing the entered credential information. The OVER File database may contact an issuing agency datastore such as for example an issuing agency database to verify the information contained in the OVER File generation request and to obtain additional credential information stored by the issuing agency database . Issuing agencies may comprise for example government entities such as States or licensing agencies corporations issuing credentials to employees retailers issuing loyalty or other customer identifiers or any other suitable agency for issuing credentials. Although the various embodiments are generally described as communicating with an issuing agency database those skilled in the art will recognize that issuing agencies may utilize any suitable datastore to store one or more credentials generated by the issuing agency.

The additional credential information may comprise any information stored by the issuing agency database but not provided in or contradictory to the OVER File generation request. For example in one embodiment a user may generate a credential representative of a driver s license. The user device may provide a driver s license identification number and an issuing state to the OVER File database for generation of the OVER File. The OVER File database may contact the issuing agency database such as a state DMV database and provide the driver s license identification number to the issuing agency database . The issuing agency database may respond by indicating the validity of the requested credential containing the driver s license identification number and may provide the legal name address and birth date of the person associated with the driver s license identification number. The issuing agency database may also provide an image of the requested credential for display on the user device. Once the information has been verified the OVER File database may generate a new OVER File containing the entered credential information. In some embodiments the OVER file may be generated by the issuing agency database and sent to the OVER File database for storage and distribution to the user device. The issuing agency may also provide a status indicator for the generated OVER File credential.

In some embodiments the OVER File may be delivered to a device identified in the OVER File generation request for storage. For example generated OVER File credential may be delivered to the device requesting generation of the OVER File generation such as a user device. As another example if a user provides a information code to a third party for scanning and generation of a credential the information code may contain a device identifier identifying the user device as the destination for the generated OVER File credential. Copies of the OVER File credential may be stored on both a user device and in the OVER File database . The delivered OVER File credential may be tied to a specific user device. For example the OVER File credential may contain a device identifier identifying the user device or application and or the OVER File may be encrypted in a format which requires the device identifier and or a user provided password to decrypt. The OVER File may include a hash value which requires the device identifier and or a user provided password to verify. The OVER File credential may only be usable by a device matching the device or application identifier. By tying the OVER File credential to a specific device the security of the credential is increased as an OVER File delivered to a device other than the user device for example through network snooping may be prevented from working on a device other than the user device. The delivered OVER File credential may execute a device check to verify the current device matches the specific device identifier. If the current device and the device identifier are the same the OVER File credential may be stored on the user device. If the specific device identifier and the current device are not the same the OVER File credential may be inaccessible or destroyed. In some embodiments the OVER File may require user specific information such as for example biometric information location information and or passwords to decrypt the file or to verify the OVER File credential.

The third party may initiate a third party verification process by opening a verification application such as the OVER File third party client for verifying credentials displayed on a user device. In some embodiments the verification application may be a stand alone application specifically configured for verification of OVER File credentials. In other embodiments the verification application may comprise an application capable of verification of OVER Files through an application programming interface API . The third party may use the verification application to select a scanning option to scan the information code displayed on the user device. After scanning the information code the third party verification application may contact an application gateway to provide verification of the scanned OVER File credential. The third party verification application may transmit the information contained in the information code displayed on the user device such as the credential identifier. For example an information code may comprise an issuing agency identifier and a credential identifier for the displayed credential.

The application gateway may communicate with a verification server and an OVER File database . The verification server may comprise the OVER File generation and verification engine . Although the application gateway the verification server and the OVER File database are shown as separate systems in those skilled in the art will recognize that the application gateway the verification server and the OVER File database may be combined into a single system. The OVER File database may store copies of all generated OVER File credentials. The OVER File credentials may be stored in any suitable manner such as for example on a memory unit or other suitable storage device. In some embodiments the OVER File credentials may be stored on a remote device such as a networked database and may be accessed by a reference stored in an OVER File datastore such as for example the OVERE File database. In various embodiments the reference may comprise a hash code a pointer network address and or any other suitable reference to a remotely stored file. The OVER File database may compare information received from the third party verification application such as for example a credential identifier with the OVER File credentials stored in the OVER File database . A status indicator providing the validity of the OVER File credential may be sent to the OVER File third party client. If the OVER File database determines that the credentials are valid the verification server may provide a valid status indicator to the third party device. The verification server may further provide a portion of the stored OVER File credential such as a credential image to the third party device. In some embodiments the status indicator and a portion of the stored OVER File credential may be displayed on the third party device. If the OVER File verification server determines that the credentials are invalid the OVER File verification server may transmit a status indicator indicating an invalid credential and may provide the reason for the invalid status indicator to the third party device.

The OVER File database may be in communication with one or more issuing agency databases . The issuing agency database may be maintained by an issuing agency authorized to issue one or more credentials. For example a state Department of Motor Vehicles may maintain a database comprising all driver s licenses issued by the state. The OVER File database may receive periodic updates from the issuing agency database for the OVER File credentials stored in the OVER File database . The update period may depend on the type of credential requirements of the issuing agency frequency of verification requests or other factors affecting the security requirements for a specific credential type. For example the OVER File database may receive updates on a daily basis for high security credentials such as for example driver s licenses. The OVER File database may receive updates on a weekly basis for credentials requiring a lower security level such as merchant loyalty cards. In some embodiments the OVER File database may contact the issuing agency database to begin the update process. In some embodiments the issuing agency database may initiate the update process. The OVER File database may be updated for individual OVER File credentials or may receive a batch update from an issuing agency for all OVER File credentials issued by the issuing agency.

A status indicator may be sent to the third party device to indicate the validity status of an OVER File credential matching the credential identifier associated with the OVER File credential displayed on the user device. The status indicator may comprise a valid indicator if the verification server determines that a valid OVER File credential matching the credential identifier received from the third party verification application is stored in the OVER File database and the OVER File database indicates that the OVER File credential is currently valid. The verification server may provide a response to the third party device comprising the status indicator indicating a valid credential and may provide a portion of the credential information stored in the OVER File database . For example in response to a verification request for an OVER File credential of a driver s license the verification server may provide a valid status indicator and may provide an image of the driver s license to the third party device. As another example in response to the same request the verification server may provide a valid status indicator an image of the credential holder provided by the issuing agency and the birth date of the credential holder. Those skilled in the art will recognize that the response to the verification request may be customized based on each type of credential and by each issuing agency.

In some embodiments the verification server may determine that a requested credential is invalid. For example the credential verification request may be considered invalid if an OVER File credential matching the provided credential identifier was not located in the OVER File database . In another embodiment an OVER File credential matching the provided credential identifier may be stored in the OVER File database but may be expired. In another embodiment an OVER File credential matching the provided credential identifier may be stored in the OVER File database but may not match a provided device identifier provided biometric data and or a provided password. The verification server may provide a status indicator indicating an invalid credential. The invalid status indicator may indicate why the credential is considered invalid. For example an invalid status indicator may indicate an expired credential and may display a response on the third party device that the requested credential exists but has expired. As another example the invalid status indicator may indicate that the requested credential does not exist. An invalid status indicator may be displayed on the third party device stating that there is no data available for the requested OVER File. As another example additional information submitted by the client such as for example a password biometric information and or location information may not match information stored with the credential.

The home screen may further provide one or more credential buttons for accessing a specific category of credentials such as for example insurance credentials access credentials electronic coupons loyalty card credentials transportation credentials or miscellaneous credentials . The user credentials may displayed in a wallet card design . A user may select one of the credential buttons to access OVER File credentials stored on the user device and classified in the selected category. For example a user may select the loyalty credentials button and may be presented with a list of OVER File credentials stored on the user s device that have been categorized as loyalty credentials such as for example retailer loyalty cards frequent buyer cards retailer discount cards or any other type of loyalty credential. The home screen may further comprise a new button for adding one or more new credentials and a manage button for accessing a screen for managing the OVER File credentials stored on the user device.

In some embodiments the credential generation screen may allow a user to automatically enter a credential by scanning an information code such as a barcode or quick response QR code. A user may access the scanning functionality by selecting the scan to add button . After selecting the scan to add button the scanning function of a user device may be activated to allow the user to scan an information code provided by an issuing agency. The information code may comprise the information necessary for the OVER File server to contact an issuing agency database to verify the scanned credential and to obtain additional credential information. For example in one embodiment a user may wish to add a driver s license to the stored OVER File credentials on the user device. The user may be required to go to a state department of motor vehicle DMV location to verify the user s identity. After verifying the user s identity the DMV may generate an information code for the user to scan containing the user s driver s license identification number and an authorization number.

Once the necessary information has been entered either manually or automatically the OVER File storage client may contact the OVER File generation and verification engine to generate the requested OVER File credential. The OVER File generation and verification engine may contact the issuing agency database to verify the credential using the provided information as discussed above with respect to . The issuing agency database may provide additional information associated with the requested credential and not provided during the initial entry of the credential information. For example a user request to add a driver s license may comprise a driver s license identification number. The issuing agency database may provide additional information such as the user s photo address information age information or license class information. The use of an information code for adding a user credential provides convenience and security as the user does not have to manually enter the credential information and an issuing agency can control the generation of OVER Files associated with the issuing agency s credentials.

In some embodiments a user may present a stored OVER File credential to a third party for verification. For example a user may wish to gain access to an age restricted location or purchase an age restricted product. A third party may require a user to present identification to verify the user s age prior to allowing the user access to the age restricted location or product. A user may choose to present a stored OVER File containing the user s age information such as for example an OVER File credential representative of the user s driver s license. A third party may be required to verify the validity of the presented credential. The OVER File storage client may generate a scannable information code for scanning by the third party to provide verification of the credential as described in more detail above. In another embodiment the OVER File storage client may generate an information code in the form of a networked or radio transmission such as for example a Near Field Communication NFC or Bluetooth or in the form of sensor information such as for example a bump. A credential code screen may be generated on the user device. The credential code screen may comprise a scannable information code representative of the selected OVER File credential. The third party may scan the information code using an OVER File third party client . The OVER File third party client may use the information contained in the information code to contact an OVER File generation and verification engine to verify the validity of the presented OVER File credential. In some embodiments the information code may be presented on the user device for a predetermined period of time at which point the user device may revert to a previously displayed screen such as the credential category screen . In some embodiments the user may be able to revert to the previous screen by pressing a back button .

When presenting a credential to a third party for verification the OVER File storage client may display a scannable information code as described above. In some embodiments a portion of the stored OVER File may be displayed on the user device for presentation to the third party. illustrates one embodiment of a credential display . The credential display may be configured to display a selected OVER File credential on a user device. The credential display may be standardized such that each stored OVER File credential utilizes the same fields in a similar manner. In some embodiments the credential display may be standardized based on the category in which the OVER File credential is stored. For example a first standardized display may be used for all insurance credentials and a second standardized display may be used for all loyalty credentials. A credential title field may display the name of the displayed credential. The credential name may be set by the issuing agency by the user or by the OVER File generation and verification engine . As shown in the credential display may comprise three text sections text section A text section B and text section C . Each text section may be configured to display textual information based on the type of credential selected for presentation. For example a user may select a driver s license as the displayed OVER File credential. Text section A may be configured to display the user s name as it appears on the user s driver license. Text section B may be configured to display the user s home address and birth date. Text section C may be configured to display a driver s license identification number. Those skilled in the art will recognize that any suitable textual information may be displayed in any of the available text sections . In some embodiments one or more of the text sections may be configured to display the same information regardless of the type of credential displayed. For example text section C may be configured to always display a credential identification number associated with the credential by the issuing agency. In some embodiments an image field may be included in the credential display . The image field may be configured to display an image selected by the issuing agency such as for example an image of a physical credential which forms the basis of the OVER File credential such as a driver s license a logo of the issuing agency such as a corporate logo for a loyalty card or any other image selected by the issuing agency. The image field may display the selected image as a further validity check for the displayed OVER File credential.

An information code section may be included in some embodiments of the credential display . As discussed above an information code may be displayed by the OVER File storage client for third party verification of stored OVER File credentials. An information code such as the information code shown in may be displayed with the selected OVER File credential in the information code section . By displaying the information code with other available credential information the OVER File platform may facilitate easier verification such as allowing a merchant to quickly establish whether an age restriction has been met prior to scanning the displayed information code. In addition a third party may ensure that the credential information received from the OVER File generation and verification engine matches the OVER File credential displayed on the user device.

In some embodiments one or more functions of the user device may be disabled when an OVER File credential is displayed on the user device. For example a user device may be capable of taking a screenshot of the content displayed on the device screen. In order to prevent duplication of an OVER File credential outside of the OVER File management platform the OVER File storage client may disable the screenshot capability of the user device during the time that the OVER File credential is displayed on the user device. In some embodiments all functions with the exception of the display function may be disabled for a predetermined period of time while the OVER File credential is displayed on the screen. For example the OVER File credential may be displayed for a predetermined time period such as 20 seconds during which time all functions of the user device may be disabled. After the predetermined time period the credential display may revert to a previously displayed screen such as the home screen at which point the functions of the user device may be re enabled.

In this example the computing device comprises one or more processor circuits or processing units on or more memory circuits and or storage circuit component s and one or more input output I O circuit devices . Additionally the computing device comprises a bus that allows the various circuit components and devices to communicate with one another. The bus represents one or more of any of several types of bus structures including a memory bus or local bus using any of a variety of bus architectures. The bus may comprise wired and or wireless buses.

The processing unit may be responsible for executing various software programs such as system programs applications programs and or module to provide computing and processing operations for the computing device . The processing unit may be responsible for performing various voice and data communications operations for the computing device such as transmitting and receiving voice and data information over one or more wired or wireless communication channels. Although the processing unit of the computing device includes single processor architecture as shown it may be appreciated that the computing device may use any suitable processor architecture and or any suitable number of processors in accordance with the described embodiments. In one embodiment the processing unit may be implemented using a single integrated processor.

The processing unit may be implemented as a host central processing unit CPU using any suitable processor circuit or logic device circuit such as a as a general purpose processor. The processing unit also may be implemented as a chip multiprocessor CMP dedicated processor embedded processor media processor input output I O processor co processor microprocessor controller microcontroller application specific integrated circuit ASIC field programmable gate array FPGA programmable logic device PLD or other processing device in accordance with the described embodiments.

As shown the processing unit may be coupled to the memory and or storage component s through the bus . The memory bus may comprise any suitable interface and or bus architecture for allowing the processing unit to access the memory and or storage component s . Although the memory and or storage component s may be shown as being separate from the processing unit for purposes of illustration it is worthy to note that in various embodiments some portion or the entire memory and or storage component s may be included on the same integrated circuit as the processing unit . Alternatively some portion or the entire memory and or storage component s may be disposed on an integrated circuit or other medium e.g. hard disk drive external to the integrated circuit of the processing unit . In various embodiments the computing device may comprise an expansion slot to support a multimedia and or memory card for example.

The memory and or storage component s represent one or more computer readable media. The memory and or storage component s may be implemented using any computer readable media capable of storing data such as volatile or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. The memory and or storage component s may comprise volatile media e.g. random access memory RAM and or nonvolatile media e.g. read only memory ROM Flash memory optical disks magnetic disks and the like . The memory and or storage component s may comprise fixed media e.g. RAM ROM a fixed hard drive etc. as well as removable media e.g. a Flash memory drive a removable hard drive an optical disk etc. . Examples of computer readable storage media may include without limitation RAM dynamic RAM DRAM Double Data Rate DRAM DDRAM synchronous DRAM SDRAM static RAM SRAM read only memory ROM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory e.g. NOR or NAND flash memory content addressable memory CAM polymer memory e.g. ferroelectric polymer memory phase change memory ovonic memory ferroelectric memory silicon oxide nitride oxide silicon SONOS memory magnetic or optical cards or any other type of media suitable for storing information.

The one or more I O devices allow a user to enter commands and information to the computing device and also allow information to be presented to the user and or other components or devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner biometric sensors and the like. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card etc. . The computing device may comprise an alphanumeric keypad coupled to the processing unit . The keypad may comprise for example a QWERTY key layout and an integrated number dial pad. The computing device may comprise a display coupled to the processing unit . The display may comprise any suitable visual interface for displaying content to a user of the computing device . In one embodiment for example the display may be implemented by a liquid crystal display LCD such as a touch sensitive color e.g. 76 bit color thin film transistor TFT LCD screen. The touch sensitive LCD may be used with a stylus and or a handwriting recognizer program.

The processing unit may be arranged to provide processing or computing resources to the computing device . For example the processing unit may be responsible for executing various software programs including system programs such as operating system OS and application programs. System programs generally may assist in the running of the computing device and may be directly responsible for controlling integrating and managing the individual hardware components of the computer system. The OS may be implemented for example as a Microsoft Windows OS Symbian OS Embedix OS Linux OS Binary Run time Environment for Wireless BREW OS JavaOS Android OS Apple OS or other suitable OS in accordance with the described embodiments. The computing device may comprise other system programs such as device drivers programming tools utility programs software libraries application programming interfaces APIs and so forth.

The computer also includes a network interface coupled to the bus . The network interface provides a two way data communication coupling to a local network . For example the network interface may be a digital subscriber line DSL modem satellite dish an integrated services digital network ISDN card or other data communication connection to a corresponding type of telephone line. As another example the communication interface may be a local area network LAN card effecting a data communication connection to a compatible LAN. Wireless communication means such as internal or external wireless modems may also be implemented.

In any such implementation the network interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information such as the selection of goods to be purchased the information for payment of the purchase or the address for delivery of the goods. The network interface typically provides data communication through one or more networks to other data devices. For example the network interface may effect a connection through the local network to an Internet Host Provider ISP or to data equipment operated by an ISP. The ISP in turn provides data communication services through the internet or other packet based wide area network . The local network and the internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on the network interface which carry the digital data to and from the computer system are exemplary forms of carrier waves transporting the information.

The computer can send messages and receive data including program code through the network s and the network interface . In the Internet example a server might transmit a requested code for an application program through the internet the ISP the local network the network and the network interface . In accordance with the invention one such downloaded application provides for the identification and analysis of a prospect pool and analysis of marketing metrics. The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution. In this manner computer may obtain application code in the form of a carrier wave.

In various embodiments a computer implemented method for generating and verifying officially verifiable electronic representations may be disclosed. The method may comprise receiving by a credential database a request for a credential action. The credential database may be configured to store one or more credentials comprising a status indicator. The method may further comprise determining by the credential database a response to the credential action based on the one or more user credentials stored in the credential database and transmitting by the credential database the response to a client device. The credential action may comprise generating a credential. The credential may be generated when the credential database determines that no matching credential is stored in the credential database.

In some embodiments generation of a credential may comprise requesting by the credential database the credential from an issuing agency database. The issuing agency database may be configured to store credentials issued by an issuing agency. The method may further comprise receiving by the credential database the status indicator and credential information associated with the credential transmitted by the issuing agency database and storing the credential and the status indicator in the credential database. The credential information may comprise the credential and wherein the status indicator indicates a valid credential. The response transmitted to the user device may comprise the credential and a copy of the credential may be stored in the credential database. The credential database may generate a device identifier for the credential. The device identifier may limit the credential to the client device. The status indicator may indicate an invalid credential. When the status indicator indicates an invalid credential the response transmitted to the user device may comprise the status indicator. In some embodiments the validity of the credential may additionally depend upon other information submitted by the client such as for example biometric location password device identifiers and or other user specific information.

The credential action may comprise checking a status indicator of a stored credential. The request for the credential action may comprise a credential identifier. The credential response may be determined by comparing the credential identifier with the one or more credentials stored in the credential database. When the credential identifier matches a stored credential the response to the request for the credential action may comprises the status indicator of the stored credential and may further comprise a portion of the stored credential. When the credential identifier does not match a stored credential the response to the request for the credential action comprises an invalid credential response.

In various embodiments a computer implemented method for requesting an officially verifiable electronic representation is disclosed. The method may comprise generating a processor a request for a credential action. The request may comprise a credential identifier. The method may further comprise transmitting by the processor the request for the credential action to a credential database and receiving by the processor a response to the request for the credential action. The request for credential action may comprise a credential generation.

In some embodiments a scanner may scan an information code comprising the credential identifier. The response to the request for the credential action may comprise a generated credential. The generated credential may comprise the credential identifier and additional credential information. The additional credential information may be obtained for example from the issuing agency database. The generated credential may comprise a device identifier. The device identifier may limit the generated credential to the processor. The request for the credential action may comprise a credential verification request. The response to the request for the credential action may comprise a status indicator. When the status indicator indicates a valid credential the response to the request for the credential action may comprise a credential image. When the status indicator indicates an invalid credential the response to the request for the credential action may comprise an invalidity response identifying a reason for the invalid credential.

In various embodiments an apparatus for generating and verifying officially verifiable electronic representations is disclosed. The apparatus may comprise a processor and a memory unit operatively coupled to the processor. The memory unit may be configured to store a plurality of instructions wherein the instructions are configured to program the processor. The processor may be programmed to maintain a credential database. The credential database may be configured to store one or more credentials comprising a status indicator. The credential database may be configured to store pointers to other data stores and or services accessible via a network. The processor may further receive a request for a credential action and determine a response to the credential action based on the one or more user credentials stored in the credential database. The processor may be programmed to transmit the response to a client device.

In some embodiments generation of a credential may comprise generating a request for the credential from an issuing agency database. The issuing agency database may be configured to store credentials issued by an issuing agency. The processor may receive the status indicator and credential information associated with the credential transmitted by the issuing agency database and may store the credential and the status indicator in the memory unit. The credential information may comprise the credential when the status indicator indicates a valid credential. The response transmitted to the user device may comprise the credential and a copy of the credential may be stored in the memory unit. The processor may generate a device identifier for the credential. The device identifier may limit the credential to the client device. The status indicator may indicate an invalid credential. When the status indicator indicates an invalid credential the response transmitted to the user device may comprise the status indicator.

The credential action may comprise checking a status indicator of a stored credential. The request for the credential action may comprise a credential identifier. The credential response may be determined by comparing the credential identifier with the one or more credentials stored in the memory unit. In some embodiments the response may additionally be determined by comparing other information submitted by the client such as for example location biometric information and or device identifiers with stored credentials. When the credential identifier matches a stored credential the response to the request for the credential action may comprise the status indicator of the stored credential and may further comprise a portion of the stored credential. When the credential identifier does not match a stored credential the response to the request for the credential action comprises an invalid credential response.

Various embodiments may be described herein in the general context of computer executable instructions such as software program modules and or engines being executed by a computer. Generally software program modules and or engines include any software element arranged to perform particular operations or implement particular abstract data types. Software program modules and or engines can include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. An implementation of the software program modules and or engines components and techniques may be stored on and or transmitted across some form of computer readable media. In this regard computer readable media can be any available medium or media useable to store information and accessible by a computing device. Some embodiments also may be practiced in distributed computing environments where operations are performed by one or more remote processing devices that are linked through a communications network. In a distributed computing environment software program modules and or engines may be located in both local and remote computer storage media including memory storage devices.

Although some embodiments may be illustrated and described as comprising functional components software engines and or modules performing various operations it can be appreciated that such components or modules may be implemented by one or more hardware components software components and or combination thereof. The functional components software engines and or modules may be implemented for example by logic e.g. instructions data and or code to be executed by a logic device e.g. processor . Such logic may be stored internally or externally to a logic device on one or more types of computer readable storage media. In other embodiments the functional components such as software engines and or modules may be implemented by hardware elements that may include processors microprocessors circuits circuit elements e.g. transistors resistors capacitors inductors and so forth integrated circuits application specific integrated circuits ASIC programmable logic devices PLD digital signal processors DSP field programmable gate array FPGA logic gates registers semiconductor device chips microchips chip sets and so forth.

Examples of software engines and or modules may include software components programs applications computer programs application programs system programs machine programs operating system software middleware firmware software modules routines subroutines functions methods procedures software interfaces application program interfaces API instruction sets computing code computer code code segments computer code segments words values symbols or any combination thereof. Determining whether an embodiment is implemented using hardware elements and or software elements may vary in accordance with any number of factors such as desired computational rate power levels heat tolerances processing cycle budget input data rates output data rates memory resources data bus speeds and other design or performance constraints.

In some cases various embodiments may be implemented as an article of manufacture. The article of manufacture may include a computer readable storage medium arranged to store logic instructions and or data for performing various operations of one or more embodiments. In various embodiments for example the article of manufacture may comprise a magnetic disk optical disk flash memory or firmware containing computer program instructions suitable for execution by a general purpose processor or application specific processor. The embodiments however are not limited in this context.

The functions of the various functional elements logical blocks modules and circuits elements described in connection with the embodiments disclosed herein may be implemented in the general context of computer executable instructions such as software control modules logic and or logic modules executed by the processing unit. Generally software control modules logic and or logic modules comprise any software element arranged to perform particular operations. Software control modules logic and or logic modules can comprise routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. An implementation of the software control modules logic and or logic modules and techniques may be stored on and or transmitted across some form of computer readable media. In this regard computer readable media can be any available medium or media useable to store information and accessible by a computing device. Some embodiments also may be practiced in distributed computing environments where operations are performed by one or more remote processing devices that are linked through a communications network. In a distributed computing environment software control modules logic and or logic modules may be located in both local and remote computer storage media including memory storage devices.

Additionally it is to be appreciated that the embodiments described herein illustrate example implementations and that the functional elements logical blocks modules and circuits elements may be implemented in various other ways which are consistent with the described embodiments. Furthermore the operations performed by such functional elements logical blocks modules and circuits elements may be combined and or separated for a given implementation and may be performed by a greater number or fewer number of components or modules. As will be apparent to those of skill in the art upon reading the present disclosure each of the individual embodiments described and illustrated herein has discrete components and features which may be readily separated from or combined with the features of any of the other several aspects without departing from the scope of the present disclosure. Any recited method can be carried out in the order of events recited or in any other order which is logically possible.

It is worthy to note that any reference to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is comprised in at least one embodiment. The appearances of the phrase in one embodiment or in one aspect in the specification are not necessarily all referring to the same embodiment.

Unless specifically stated otherwise it may be appreciated that terms such as processing computing calculating determining or the like refer to the action and or processes of a computer or computing system or similar electronic computing device such as a general purpose processor a DSP ASIC FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein that manipulates and or transforms data represented as physical quantities e.g. electronic within registers and or memories into other data similarly represented as physical quantities within the memories registers or other such information storage transmission or display devices.

It is worthy to note that some embodiments may be described using the expression coupled and connected along with their derivatives. These terms are not intended as synonyms for each other. For example some embodiments may be described using the terms connected and or coupled to indicate that two or more elements are in direct physical or electrical contact with each other. The term coupled however also may mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. With respect to software elements for example the term coupled may refer to interfaces message interfaces application program interface API exchanging messages and so forth.

