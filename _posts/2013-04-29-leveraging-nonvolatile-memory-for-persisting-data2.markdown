---

title: Leveraging non-volatile memory for persisting data
abstract: Data temporarily stored in volatile memory (e.g., RAM) on a host machine can be protected using a component such as an NV-DIMM, which includes components such as an ASIC, non-volatile memory, and a battery. If power is lost to the host, the battery provides the ASIC with the power needed to determine data in the volatile memory that is protected. This protected data then can be transferred to the non-volatile memory on the NV-DIMM. When power is restored, an application or other entity can contact the NV-DIMM to recover the data, which can be transferred over a sideband channel to be restored as appropriate for a prior operation. In at least some embodiments, the NV-DIMM can receive a key over the sideband channel that can be used to encrypt and decrypt the data for further security.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535828&OS=09535828&RS=09535828
owner: Amazon Technologies, Inc.
number: 09535828
owner_city: Reno
owner_country: US
publication_date: 20130429
---
As an increasing number of applications and services are being made available over networks such as the Internet an increasing number of content application and or service providers are turning to technologies such as resource sharing or cloud computing. Cloud computing in general is an approach to providing access to electronic resources through services such as Web services where the hardware and or software used to support those services is dynamically scalable to meet the needs of the services at any given time. A user or customer can obtain access to various services through the cloud or across at least one network and thus does not have to purchase and maintain the hardware associated with the services.

In many instances a customer will provide data to be stored to persistent storage or at least to be processed using one of the resources. In many instances this can result in the data being at least temporarily stored in volatile memory meaning that the data can be lost in the event of a power failure or other such event. While there are ways to attempt to protect this data the restore process generally lacks the logic needed to perform an intelligent operation with the data and prevent the data from being overwritten or otherwise compromised after being restored.

Systems and methods in accordance with various embodiments of the present disclosure overcome one or more of the above referenced and other deficiencies in conventional approaches to protecting data in an electronic environment. In particular various embodiments utilize a non volatile in line memory module NV DIMM or other such memory subsystem that is capable of being installed in a host device without modification of portions of the host such as the motherboard BIOS operating system etc. The NV DIMM can include circuitry and or components such as at least one ASIC capable of determining data stored in volatile memory on the host and causing that data to be transferred to non volatile memory on the NV DIMM. The NV DIMM can include a battery or any other appropriate secondary power source on or connected to the NV DIMM with sufficient power for the ASIC to perform operations such as to identify one or more protected pages of memory and cause data in those protected pages to be transferred to non volatile memory. The NV DIMM can include a sideband channel that enables an application entity service or component to call into the NV DIMM to recover the data independent of a main processor or primary components of the host. The data then can be recovered in an intelligent manner instead of merely restoring the data to its previous location which could then be susceptible to being overwritten or obtained by unauthorized entities.

In at least some embodiments the NV DIMM can obtain a key or other secret over the sideband channel that can be used to encrypt the backed up data stored in non volatile memory on the NV DIMM. The key will be stored in volatile memory on the NV DIMM such that when the NV DIMM finally loses power including battery power the key will no longer be stored on the NV DIMM. Such an approach protects the backed up data as the data will still be encrypted even if the NV DIMM is removed from the host since the NV DIMM will no longer contain a copy of the key. When power is restored the NV DIMM can receive another copy of the key for use in decrypting the data.

Various other applications processes and uses are presented below with respect to the various embodiments.

In various embodiments the provider environment may include various types of resources that can be utilized by multiple users or applications for a variety of different purposes. In at least some embodiments all or a portion of a given resource or set of resources might be allocated to a particular user or allocated for a particular task for at least a determined period of time. The sharing of these multi tenant resources from a provider environment is often referred to as resource sharing Web services or cloud computing among other such terms and depending upon the specific environment and or implementation. In this example the provider environment includes a plurality of resources of one or more types. These types can include for example application servers operable to process instructions provided by a user or database servers operable to process data stored in one or more data stores in response to a user request. As known for such purposes the user can also reserve at least a portion of the data storage in a given data store. Methods for enabling a user to reserve various resources and resource instances are well known in the art such that detailed description of the entire process and explanation of all possible components will not be discussed in detail herein.

In at least some embodiments an application executing on the client device that needs to access or utilize a portion of the resources which might be exposed as one or more services to which the application has subscribed can submit a request that is received to an interface layer of the provider environment . The interface layer can include application programming interfaces APIs or other exposed interfaces enabling a user to submit requests such as Web service requests to the provider environment. The interface layer in this example can also include other components as well such as at least one Web server routing components load balancers and the like. When a request to access a resource is received at the interface layer in some embodiments information for the request can be directed to a resource manager or other such system service or component configured to manage user accounts and information resource provisioning and usage and other such aspects. A resource manager receiving the request can perform tasks such as to authenticate an identity of the user submitting the request as well as to determine whether that user has an existing account with the resource provider where the account data may be stored in at least one data store in the provider environment.

An interface layer in at least one embodiment includes a scalable set of customer facing servers that can provide the various APIs and return the appropriate responses based on the API specifications. The interface layer also can include at least one API service layer that in one embodiment consists of stateless replicated servers which process the externally facing customer APIs. The interface layer can be responsible for Web service front end features such as authenticating customers based on credentials authorizing the customer throttling customer requests to the API servers validating user input and marshaling or un marshaling requests and responses. The API layer also can be responsible for reading and writing database configuration data to from the administration data store in response to the API calls. In many embodiments the Web services layer and or API service layer will be the only externally visible component or the only component that is visible to and accessible by customers of the control service. The servers of the Web services layer can be stateless and scaled horizontally as known in the art. API servers as well as the persistent data store can be spread across multiple data centers in a region for example such that the servers are resilient to single data center failures.

Each resource can include a number of different components that can be used for a variety of purposes. For example a resource can be a host machine that includes various types of storage such as random access memory flash memory disk drives and the like. When the resource is being utilized by a user for example the resource might have various information stored in RAM for performing one or more operations and might also persistently store information to one or more persistent data storage devices such as disk drives or flash memory that can be located on the resource or remote from the resource such as in a remote data store . Problems can arise however when power is lost to the resource or another such failure occurs. If information for the user is stored in volatile memory or is in the process of being written to persistent storage that data can potentially be lost as a result of the failure.

Accordingly approaches in accordance with various embodiments attempt to backup important data in the event of a power failure or other such event such that the data can be available upon recovery from the failure. As an example illustrates an example configuration of components that can be utilized in a resource such as a host machine. In this example the host has components including at least one central processing unit CPU and volatile memory such as random access memory RAM connected via one or more buses as may include one or more control buses memory buses address buses data buses system buses and the like. The buses may also connect various other components as well as may include one or more hard drives or persistent storage devices as well as one or more input output I O components as may interface with one or more data sources to transfer data to and or from the data source. Various other components can be connected as well as part of a host machine as is known for such purposes.

In one embodiment a data source might attempt to write data to persistent storage such as a drive on the host machine. The data source can submit a request with data that is received by an I O component and then temporarily stored in memory such as RAM until the data can be persistently stored to the determined drive s . Information about the operation to be performed also can be stored in RAM. As discussed however the data in RAM can be lost in the event of a power failure or other such event.

Accordingly approaches in accordance with various embodiments can take advantage of a component such as a non volatile in line memory module NV DIMM or other such non volatile module to attempt to prevent the loss of at least some of the data stored in RAM or other volatile memory which requires power to maintain the stored information. A module such as an NV DIMM can be inserted in place of a conventional DIMM or other system RAM on a motherboard of the host. The NV DIMM has an application specific integrated circuit ASIC or other such component and or circuitry that is customized to manage the storage of information stored in RAM or other volatile memory on the host. The NV DIMM includes one or more non volatile memory components such as flash memory or NAND devices and one or more batteries such as a supercap battery that can provide a limited amount of power to the ASIC in the event of a power failure of the host device. In the event of a power failure for example the ASIC can take control of the memory bus and copy the contents of volatile memory to non volatile memory up to the capacity of the non volatile memory and or the battery life of the battery . In at least some embodiments the NV DIMM can also include volatile memory at least a portion of the contents of which can also be written to non volatile memory in at least some situations.

A conventional NV DIMM can transfer data from RAM into flash memory and then upon reboot of the host can cause that data to be written back to its original location for purposes of finishing a write operation or another such action. There can be various disadvantages to such an approach however. For example it might be undesirable to write data back to its original location as the data might be overwritten by the OS. Further restoring data can potentially expose the data to parties that were not intended to be able to access the data. Various other issues with blindly restoring the data can arise as well.

Accordingly approaches in accordance with various embodiments provide some additional intelligence or logic in the ASIC to enable aspects such as the timing amount and type data backup to be controlled. Further a sideband channel or backchannel can be used to enable the data written to non volatile memory to be recovered and managed in an intelligent way rather than just restoring the data to its previous location s .

For example a request might be received from a data source to write data to a drive on or in connection with the host machine. As part of the writing process the host machine might receive the data via an I O component and at least temporarily store data in RAM on the host. With conventional components data typically is capable of being received and written to volatile memory faster than the data can be written to persistent storage such as a disk drive. Thus received data can be cached or buffered in RAM until such time as the data is able to be written to disk. The RAM might also temporarily store other types of data as well such as information for the operating system OS or other operations on the host. It might be desired to prevent loss of the data received from the data source but it might not matter whether some or all of the other types of data are recoverable. If there is sufficient non volatile memory and battery power on the host all data in volatile memory can be backed up in the event of a power failure of the host without concern over which types of data are included. It will often be the case however that there is less non volatile memory than volatile memory on a device based at least in part upon the relative cost of the different types of memory and the need for corresponding amounts of each type of memory for conventional activities.

Accordingly it can be desirable to attempt to determine which type of data should be transferred to non volatile storage by an NV DIMM in the event of a power failure. In some embodiments the ASIC can leverage a protocol that enables specific pages of RAM memory to be mapped to the non volatile memory of the NV DIMM. Depending at least in part upon the amount of non volatile memory the mapping can include a subset of the entire set of RAM. The mapping can take the form of a bitmap of pages to protect a translation list of addresses from RAM to addresses on flash etc. When the power is lost to the host the ASIC can determine the appropriate memory pages to be protected and can cause data from those pages to be stored in non volatile memory on the DIMM. Further in at least some embodiments the backing up of data might not occur instantly but might wait until such time as the ASIC has been able to determine the appropriate data and or performed any related actions then can back up the data as appropriate assuming sufficient remaining battery life . In some embodiments the ASIC can determine remaining battery life and determine when to backup data based at least in part upon the remaining battery life.

The NV DIMM in this example also has a sideband channel that can enable access to the data stored in the non volatile memory . The sideband channel can allow an application or designated component to access the stored data without automatically restoring the data to its previous location. In this example the application upon a restart or reboot can determine that there was a reboot for example and can reach out to the ASIC over the sideband channel to determine whether data was stored in response to a failure. The application can also read related data such as metadata or log information stored with the data that enables the application to determine one or more actions to perform with respect to the data. Such an approach enables the data to be restored and or utilized intelligently rather than just restoring to RAM which could potentially result in the data being lost or overwritten by an operating system or other such entity or component. As an example the application can determine that a portion of the data was being written to disk and can trigger a resume or similar operation to have the remaining data written to disk and associated with the previously written portion. Similarly if an operation was being performed using that data the application can provide that data with instructions for completing the operation. In some embodiments a portion of the data might be written back to specific memory pages of RAM that are mapped to the non volatile memory of the NV DIMM. Various other uses or applications can be determined as well within the scope of the various embodiments.

In some embodiments the sideband channel can be used to provide instructions or configuration information to the ASIC. For example a control plane component not shown could send instructions to the ASIC regarding how to process certain data and when to perform the processing in response to a failure. Similarly an application could communicate with the ASIC to indicate types of memory to be backed up memory pages to be mapped or other such information. The use of the sideband channel prevents this information from being accessible to a central processor of the host which in a shared and or multi tenant environment can prevent other users from being able to access the instructions and or data. The ability to control aspects of the ASIC over the sideband channel means that the NV DIMM and associated functionality can be utilized without changes to the motherboard OS and or BIOS in at least some embodiments. Further the NV DIMM can be accessed via conventional approaches such as by using a driver or API to access the data stored on the NV DIMM. In at least some embodiments however a separate API can be utilized to map the physical memory pages that are to be backed up to the NV DIMM. Further since the NV DIMM operates independent of the state of the entire system there is no need to worry about maintaining a state of other onboard devices of the host.

In order to further protect the backed up data approaches in accordance with various embodiments can also utilize key based encryption or other such security mechanisms. For example a keystore can generate provide and or store a copy of one or more keys or other such secrets that can be used to encrypt or protect information stored in non volatile storage on the NV DIMM . For example an application or other such entity or component can communicate with the keystore to cause the key to be provided to the ASIC over the sideband channel . Providing the key over the sideband channel which may not be visible and or accessible to the main host CPU or other such components as discussed elsewhere herein prevents the key from being intercepted by another user application or component provisioned on installed in or accessible to the host. The key can be obtained by the ASIC at each startup for example as well as in response to a key rotation or other such action. When data is written to the non volatile memory by the ASIC the ASIC can cause the data to be encrypted with the key. The key can be stored in volatile memory on the NV DIMM such that the data is protected even in the event that someone takes the physical NV DIMM out of the machine as the key will be lost once power to the NV DIMM is lost. The key can only be obtained and the data decrypted when the NV DIMM is installed in the host and able to obtain the key from the keystore at startup or another determined action or event. The key can be any appropriate secret useful to protect data and the keystore can be any appropriate system or service on the host or elsewhere capable of providing a key and securely storing a copy of that key.

A sideband channel such as those discussed above can take any of a number of different forms as may be appropriate for the particular embodiment. For example in addition to operating like standard NV RAM e.g. performing read and write operations on the RAM the NV RAM can be implemented to function like a control register that is mapped into main memory of the host computing device providing mapped and accessible I O space on the device to access the non volatile portion of the device. For example the NV RAM can have one or more APIs or other such interfaces that enable the reading and writing of data to the non volatile portion of the NV RAM in addition to the standard interfaces used to read and write to the volatile memory of the device. The NV RAM thus can appear to the OS as a storage component like a PCI device but can have at least one secondary interface that functions as the sideband channel. An OS application driver or other such entity or component then can read the persisted data from the NV RAM using the sideband channel assuming proper authentication or other such granted access. In one example an application can communicate with a driver that has been authenticated to the NV RAM and has access to the mapping of various memory ranges such that the application can access the requested data via the driver. Similarly a control plane or management component can utilize such a driver to place or update a key stored in the NV RAM and used to encrypt the data to be persisted.

In at least some embodiments an application or other such component or entity can access less than all the persisted data at various times. For example there might be 30 GB of data persisted in the NV RAM. It can be undesirable in at least some embodiments to have to read all the persisted data out of NV RAM at once as such a process can require around 30 GB of memory or other such storage to hold that data until it is processed. Approaches in accordance with various embodiments enable portions or chunks of the persisted data to be read at various times which can help to reduce and or minimize the amount of device memory that is needed to access the persisted data. The NV RAM thus can function more like a traditional disk drive wherein portions of the data can be requested and or accessed as appropriate.

Further the driver can actually mount the NV RAM as a storage device in the operating system in at least some embodiments. Such an implementation enables access as if the NV RAM is a drive or other such storage device. The NV RAM can be visible to all entities having access to the host device or only those authorized to access the NV RAM. In some embodiments the NV RAM might only be visible when there is persisted data that has not yet been read out of the NV RAM. Various other visibility options can be utilized as well. As mentioned an authorization process might be used to grant access to data persisted in the NV RAM. In other embodiments the encryption of the data will be used to protect the data from unauthorized parties as those parties will not have the appropriate decryption key.

Another advantage of being able to backup important data is that commits can be relayed to a user at the rate of DRAM for example instead of the write rate of a hard disk solid state drive SSD or other such persistent storage device. For example a user requesting to persistently store a data file can have that data written to RAM on the host before the data is written to disk. If that portion of RAM is able to be guaranteed to be recoverable in the event of a failure as the data can be written to the NV DIMM a confirmation of the storage can be provided to the user even though the data has not yet been committed to disk. In the event of a failure the remaining data can be backed up to the NV DIMM and then upon reboot the data can be recovered from the NV DIMM and the writing to disk completed. A corresponding application can talk to the NV DIMM through an appropriate driver for example to configure the ASIC to protect a corresponding portion of the pages of RAM. Each time a request to write data to a drive is received for example information for the write can be recorded as a journal entry into one of the protected pages mapped to the NV DIMM. At least one of the pages then can be designated a log for writes being performed on the host. As soon as the data is written into the NV DIMM protected pages of memory the network request can be acknowledged and the client notified that the write was completed.

As discussed above the various embodiments can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Various aspects also can be implemented as part of at least one service or Web service such as may be part of a service oriented architecture. Services such as Web services can communicate using any appropriate type of messaging such as by using messages in extensible markup language XML format and exchanged using an appropriate protocol such as SOAP derived from the Simple Object Access Protocol . Processes provided or executed by such services can be written in any appropriate language such as the Web Services Description Language WSDL . Using a language such as WSDL allows for functionality such as the automated generation of client side code in various SOAP frameworks.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP FTP UPnP NFS and CIFS. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Peri Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

