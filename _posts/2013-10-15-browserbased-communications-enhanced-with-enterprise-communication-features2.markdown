---

title: Browser-based communications enhanced with enterprise communication features
abstract: Systems and methods are described for enabling browser-to-phone and browser-to-browser communications to be enhanced with enterprise communication features. Specifically, a Collaboration Environment is disclosed with the ability to interface a browser with an enterprise communication network. The Collaboration Environment is exposed to browsers via a media server and/or websocket and is enabled to communicate with the browsers via a purpose-built library.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571529&OS=09571529&RS=09571529
owner: Avaya Inc.
number: 09571529
owner_city: Basking Ridge
owner_country: US
publication_date: 20131015
---
This application claims the benefit of U.S. Provisional Application No. 61 798 865 filed Mar. 15 2013 the entire disclosure of which is hereby incorporated herein by reference.

The present disclosure is generally directed toward communications and more specifically toward web based communications.

Web Real Time Communications WebRTC is an Application Programming Interface API definition being drafted by the World Wide Web Consortium to enable browser to browser applications for voice calling video chat and Point to Point P2P file sharing without the need for browser plugins.

With the advent of WebRTC there exists a need to support browser to phone communications as well as enhance certain aspects of browser to browser communications. In particular the corporate Information Technology IT department will begin to feel the impacts of WebRTC. This may first take the form of needing to regulate the use of browser based communications much like the use of other non secure consumer centric communications services like Skype and FaceTime need to be regulated. It could later lead to integrating browsers with WebRTC with the Session Initiation Protocol SIP based communications solutions deployed on premise so that voice and video sessions can be established between the two. And eventually it could change the way communications software is deployed in the enterprise with client based soft phones and Unified Communications UC software being replaced by browser based technologies.

Furthermore while WebRTC facilitates browser to browser communications it has been developed with the intention of facilitating browser to browser communications within a single web application e.g. a single website . WebRTC does not however easily facilitate invocation of enterprise communication applications on such browser to browser communications. This is especially true if there are multiple web applications within a single enterprise that must be invoked. Meanwhile application development in other protocols e.g. SIP H.323 etc. is relatively mature. It would be desirable to enable the already developed applications of SIP and H.323 to be used in WebRTC communications.

Some groups have begun developing WebRTC solutions that allow enterprise communication applications e.g. Private Branch eXchanges PBXs to be applied on WebRTC calls by embedding a SIP User Agent UA within the browser. This solution has a couple of shortcomings. First if the browser is to be represented as a fully functional SIP endpoint having enterprise features the embedded JavaScript SIP UA must be very rich and therefore complex. Second these solutions don t allow for some communications to proceed as pure WebRTC communications and for others to proceed as SIP based communications.

It is with respect to the above issues and other problems that the embodiments presented herein were contemplated. In particular embodiments of the present disclosure recognize that WebRTC is quite useful for browser to browser and browser to phone communications. One aspect of the present disclosure provides the ability to facilitate browser to phone communications and provide the browser with rich enterprise communication features. Currently available WebRTC technologies make the browser operate in a simple mode and therefore the browser cannot access network resources e.g. applications that are usually available to the phone for traditional SIP and H.323 communications.

Embodiments of the present disclosure therefore provide the ability to receive a request from a web application to initiate a media session examine the calling called party preferences and based on those preferences apply enterprise communication features to the call. In some embodiments the above features are provided by a Collaboration Environment CE having exposure to browsers via Hypertext Transport Protocol HTTP Websockets or indirectly via Java Message Service JMS . In some embodiments the browsers are enabled to communicate with the CE via a purpose built library such as a JavaScript library. In such an implementation the web application simply provides instructions to make a call and then the instructions enter the CE where additional call features are invoked as per a normal call directed to the phone instead of via a different dedicated websocket.

The present disclosure also provides an enhanced Application Media Server AMS that converts the WebRTC Real Time Protocol RTP stream into SIP H.323 friendly RTP. The AMS may also provide the media services to the CE services.

It is another aspect of the present disclosure to facilitate browser to browser communications when the communications traverse a network boundary where one or more communication regulations restrictions may need to be enforced e.g. at a firewall . Specifically when browser to browser communications traverse such a network boundary the need exists to leverage the enterprise communications system that already has knowledge of the regulations restrictions and can therefore enforce the regulations restrictions for the WebRTC session.

In some embodiments the interface between the browser and the enterprise communication system can be achieved by utilizing a SIP Endpoint Adapter SEA which is described in U.S. patent application Ser. No. 13 846 710 filed on Sep. 26 2012 the entire contents of which are hereby incorporated herein by reference. The SEA enables the browser or multiple browsers to be presented to the enterprise network infrastructure as a single device.

In some embodiments the Collaboration Environment CE presents a websocket or some other HTTP based protocol to browsers and such browsers are enabled to communicate with the SEA via a CE JavaScript library made available to the browser. The process begins with a user and or client device registering with a CE of an enterprise network. Once registered the CE can recognize and properly process calls placed by the user and or the user s client device as well as recognize and properly process calls directed toward the user and or the user s client device. Thus when a WebRTC communication session is established one of the browsers operated by the registered user and or the user s client device utilizes the CE JavaScript library to interface the browser with the CE of an enterprise communication network. The CE interfaces the browser with the enterprise applications e.g. call logging personal call handling applications call recording etc. and points those applications to the communication session. The CE makes the applications available and enforces any policies against the communication session on behalf of those applications. Further still the CE enables rich Unified Communications UC operations to be invoked for the communication session involving the browser. Examples of rich UC operations made available for the WebRTC call include without limitation call transfer call forward conference join call record call and block call operations.

In some embodiments the CE is configured to support communications in a number of different ways. First the CE is configured to adapt the WebRTC browser session to look like a SIP H.323 endpoint. This would generally be done by using a SEA and essentially enables legacy communication applications to be invoked for a WebRTC session. Second the CE is configured to directly invoke the protocol agnostic API to facilitate communications in a native mode of operation.

It is another aspect of the present disclosure to provide a CE with a WebRTC Protocol Adapter having a JMS websocket and a native mode enabling component. In some embodiments the Protocol Adapter communicates with a protocol agnostic feature invoker. The protocol agnostic communication feature invoker and API serve as a point in the CE where the communication applications can be invoked regardless of the type of communication session e.g. WebRTC or SIP .

In some embodiments the CE may support a native mode of operation and a traditional SIP mode of operation. When executing on a SIP call the CE will use a SEA to access the applications in the enterprise network through the SIP interface. These applications may include applications deployed on the CE. However when executing in a WebRTC call the CE will invoke only the applications deployed on the CE. The CE deployed applications are able to handle both types of calls equally well due to the protocol agnostic API.

In the native mode of operation the applications accessed by the CE are natively operating in the CE. In the SIP or H.323 mode however the applications may be operating in the CE or may be operating in a broader enterprise communications network. Regardless of the location of the applications the applications respond to the SEA as they would normally respond to any other SIP or H.323 entity. Accordingly because of the protocol agnostic communication API the WebRTC session can utilize applications that were developed for other protocols such as SIP and H.323 as an example.

In summary it is one aspect of the present disclosure to provide a system and method to enable a user s enterprise calling features e.g. features or applications invoked based on SIP calling preferences of the user to be leveraged in a WebRTC session.

It is another aspect of the present disclosure to provide a system and method to achieve a browser to browser communication session enhanced with rich enterprise communication features whereby the enterprise communication features may be applied locally e.g. within the enterprise communication network without necessarily involving the entire enterprise communication architecture.

It is another aspect of the present disclosure to provide a protocol agnostic communication API that makes SIP and or H.323 applications available for use in a WebRTC communication session.

receiving a request to bind a browser to an enterprise communication network wherein the request is received via a web based protocol and

in response to receiving the request to bind creating an association between the browser and the enterprise communication network such that the browser is enabled access to one or more applications within the enterprise communication network wherein the enterprise communication network facilitates communications with a protocol other than the web based protocol.

In some embodiments the communication session is a browser to browser communication session. In some embodiments the communication session is a browser to phone communication session.

providing a protocol agnostic Application Programming Interface API between communication applications and an application platform that enables call and media control on communication sessions 

invoking at least one of the communication applications such that a protocol used to initiate the communication session is hidden from the invoked at least one of the communication applications thereby enabling the invoked at least one of the communication applications to apply its features to the communication session without knowledge of the protocol and

enabling a web browser to access the features applied by the invoked at least one of the communication applications as if the web browser were using some protocol other than a web based protocol.

The phrases at least one one or more and and or are open ended expressions that are both conjunctive and disjunctive in operation. For example each of the expressions at least one of A B and C at least one of A B or C one or more of A B and C one or more of A B or C and A B and or C means A alone B alone C alone A and B together A and C together B and C together or A B and C together.

The term a or an entity refers to one or more of that entity. As such the terms a or an one or more and at least one can be used interchangeably herein. It is also to be noted that the terms comprising including and having can be used interchangeably.

The term automatic and variations thereof as used herein refers to any process or operation done without material human input when the process or operation is performed. However a process or operation can be automatic even though performance of the process or operation uses material or immaterial human input if the input is received before performance of the process or operation. Human input is deemed to be material if such input influences how the process or operation will be performed. Human input that consents to the performance of the process or operation is not deemed to be material .

The term address of record or address or record URI AoR refers to a URI that corresponds to a user. Unlike a contact URI or device URI a request sent to an AoR requires database lookups and service and feature operations and can result the request being sent to one or more end communication devices. An AoR is usually used in TO and FROM header fields. This is a common way to reach a person and is suitable for storing in address books and in returning missed calls.

The term computer readable medium as used herein refers to any tangible storage and or transmission medium that participates in storing and or providing instructions to a processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example NVRAM or magnetic or optical disks. Volatile media includes dynamic memory such as main memory. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium magneto optical medium a CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM solid state medium like a memory card any other memory chip or cartridge a carrier wave as described hereinafter or any other medium from which a computer can read. A digital file attachment to e mail or other self contained information archive or set of archives is considered a distribution medium equivalent to a tangible storage medium. When the computer readable media is configured as a database it is to be understood that the database may be any type of database such as relational hierarchical object oriented and or the like. Accordingly the disclosure is considered to include a tangible storage medium or distribution medium and prior art recognized equivalents and successor media in which the software implementations of the present disclosure are stored.

The term contact URI refers to a device Universal Resource Indicator URI . A device URI is typically in a CONTACT header field and is associated with a particular user for a period of time. An address of record URI can be related or bound to a contact URI.

The terms determine calculate and compute and variations thereof as used herein are used interchangeably and include any type of methodology process mathematical operation or technique.

The term module agent or tool as used herein refers to any known or later developed hardware software firmware artificial intelligence fuzzy logic or combination of hardware and software that is capable of performing the functionality associated with that element. Also while the disclosure is described in terms of exemplary embodiments it should be appreciated that individual aspects of the disclosure can be separately claimed.

The term uniform resource identifier URI is a string of characters used to identify a name or a resource.

The term uniform resource locator or universal resource locator URL is a specific character string that constitutes a reference to an Internet resource.

A user agent refers to a Session Initiation Protocol SIP enabled endpoint device. The user agent takes direction and or input from a user and acts as an agent on behalf of the user to set up and tear down media sessions.

The preceding is a simplified summary of embodiments of the disclosure to provide an understanding of some aspects of the disclosure. This summary is neither an extensive nor exhaustive overview of the disclosure and its various embodiments. It is intended neither to identify key or critical elements of the disclosure nor to delineate the scope of the disclosure but to present selected concepts of the disclosure in a simplified form as an introduction to the more detailed description presented below. As will be appreciated other embodiments of the disclosure are possible utilizing alone or in combination one or more of the features set forth above or described in detail below.

The ensuing description provides embodiments only and is not intended to limit the scope applicability or configuration of the claims. Rather the ensuing description will provide those skilled in the art with an enabling description for implementing the embodiments. It being understood that various changes may be made in the function and arrangement of elements without departing from the spirit and scope of the appended claims.

The communication network may be packet switched and or circuit switched. An illustrative communication network includes without limitation a Wide Area Network WAN such as the Internet a Public Switched Telephone Network PSTN a Plain Old Telephone Service POTS network a cellular communications network a Voice over IP VoIP network an IMS network or combinations thereof. In one configuration the communication network is a public network supporting the TCP IP suite of protocols.

The external client is generally referred to as external because it is either not under the direct control of the enterprise administering the enterprise network or has a decreased level of trust with the enterprise network as compared with communication devices and or client devices that are within the enterprise network . Illustrative types of client devices include without limitation smartphones laptops Personal Computers PCs tablets and the like. The web browser executed by the client may be stored as an application on the client or it may correspond to a cloud based application that is made available to the client via cloud based computing techniques. Non limiting examples of web browsers that may be utilized on the client include without limitation Chrome Internet Explorer Safari Firefox or any other type of application that enables the client to interface and communicate with one or more web applications e.g. websites or webservers via web based communication protocols e.g. HyperText Transport Protocol HTTP Secure HTTP SHTTP mobile web protocols lightweights web protocols etc. . also shows that each of the web applications may include a JavaScript library that interfaces to the web browser and endpoint adapter to initiate calls via WebRTC. Although not depicted it should also be appreciated that one or more web applications may be contained within the enterprise network without departing from the scope of the present disclosure.

The enterprise network may include a boundary device including a server table one or multiple communications servers including sequencing rules a Collaboration Environment CE having an endpoint adapter and one or more communication APIs one or more internal communication devices one or more internal client devices with a web browser one or more application servers which may be capable of providing one or multiple applications one or more application media servers a number of other servers and an enterprise database all of which are interconnected by a trusted or secure or private Wide Area Network WAN Local Area Network LAN or combination thereof . Some or all of the functions depicted in may be co hosted and or co resident on a single server. Alternatively or additionally some or all of the components of the enterprise network may be made available via cloud computing technologies. For instance some or all functions of the servers may be made available from a cluster of servers that may or may not necessarily be co located with the communication devices and or . In other words the enterprise network may be partially cloud based and access to the resources of the cloud based network may be obtained through the communication network . The depiction of components in is generally intended to be a logical depiction of the components of the system .

It should be further appreciated that the components of the enterprise network may facilitate traditional SIP based communications and or H.323 based communications between two or more communication endpoints e.g. client communication device and or client . The SIP and or H.323 based communications are provided in any normal fashion. As will be discussed in further detail herein however one or more components of the enterprise network may also facilitate web based communication sessions e.g. WebRTC communications where one or more web browsers and or are involved in the communication session.

In the depicted embodiment the communication network is shown as being connected to the WAN . It should be appreciated that one or more network border elements such as a firewall Session Border Controller SBC or the like may reside between the two networks. However for ease of illustration and description the system is shown without such a network border element.

The communications server is shown to include a server table which may enable the communications server to route communication requests to appropriate other communications servers that are authoritative for users within the enterprise network . While the communications server may be configured to register users within the enterprise network the CE may be configured to register a web browser to a user identity within the enterprise network thereby exposing the capabilities of the CE e.g. rich call features to the web browser for both incoming and outgoing calls.

More specifically the server table may be utilized for initially routing communications within the enterprise network to the communications server responsible for servicing a particular user e.g. User A and or User B involved in the communication session. For example if an enterprise user e.g. User B is being called by an external client device then the communications server may initially receive the inbound call determine that the call is directed toward User B reference the server table to identify the authoritative communications server for User B and route the inbound call to the authoritative communications server .

Likewise communications between internal enterprise users e.g. between communication device and client or between two internal client devices may first be serviced by the originating user s authoritative communications server during the origination phase of communications set up. After the origination phase is complete the authoritative communications server of the terminating or called user may be invoked to complete the termination phase of communications set up. In some embodiments the communications server for the originating and terminating user may be the same but this is not necessarily required. In situations where more than two enterprise users are involved in a communication session authoritative communications servers for each of the involved users may be employed without departing from the scope of the present invention. Additionally the authoritative communications servers for each user may be in the same enterprise network or in different enterprise networks which are owned by a common enterprise but are separated by the communication network .

In accordance with at least some embodiments of the present invention the mapping of user identities within a communication request does not necessarily have to occur at the communications server . For instance the mapping between an authoritative server and a user may occur at a network boundary device or within the enterprise network at some other component e.g. at CE 

The communications server can include a Private Branch eXchange PBX an enterprise switch an enterprise server combinations thereof or other type of telecommunications system switch or server. The communications server is preferably configured to execute telecommunication functions such as the suite of or Avaya Aura applications of Avaya Inc. including Communication Manager Avaya Aura Communication Manager Avaya IP Office Communication Manager Branch Session Manager System Manager MultiVantage Express and combinations thereof.

Although only a single communications server is depicted in two or more communications servers may be provided in a single enterprise network or across multiple separate LANs owned and operated by a single enterprise but separated by a communication network . In configurations where an enterprise or an enterprise network includes two or more communications servers each server may comprise similar functionality but may be provisioned for providing its features to only a subset of all enterprise users. In particular a first communications server may be authoritative for and service a first subset of enterprise users whereas a second communications server may be authoritative for and service a second subset of enterprise users where the first and second subsets of users generally do not share a common user. This is one reason why the communications server may be provided with a server table .

Additionally multiple communications servers can support a common user community. For example in geo redundant and other applications where users aren t necessarily bound to a single application server there may be a cluster of equivalent servers where a user can be serviced by any server in the cluster.

In some embodiments the sequencing rules provided on the communications server may correspond to or describe communication feature preferences for each user for which it is authoritative. The sequencing rules for a particular user are referenced by the authoritative communications server for the user to determine which if any features should be incorporated into a communication session for the user e.g. via an application and an order in which such features should be incorporated into the communication session. The communications server can actually provide communication features directly into the communication session or determine an application sequence which will be invoked during set up and used during the communication session.

It should be appreciated that the sequencing rules may be a list of preferences may be a table containing communication preferences or can be in any other suitable format. Furthermore the sequencing rules can be provisioned by users and or by administrative personnel. As shown in the sequencing rules may alternatively or additionally be provided in the CE thereby enabling the CE to sequence applications in a native mode of operations as will be described in further detail herein.

It is also to be understood that any data structure can be used to render the various preference tables including without limitation primitive composite or abstract data types linear data structures tree data structures hashes graphs and the like.

The CE may correspond to another server whose purpose is to facilitate WebRTC communications to leverage applications and other call features of the enterprise network . Another aspect of the CE includes the ability the ability to provide a platform for applications that can be invoked for WebRTC and other types of communication sessions.

With respect to the leveraging of applications if a communication session includes WebRTC e.g. at least one browser is being employed then the CE may be invoked to provide the browser and or with access to features of the enterprise network that would not be available if the simple WebRTC protocols were followed. In some embodiments the CE utilizes an endpoint adapter that makes itself available to web browsers external to the enterprise network . Additional behaviors of the endpoint adapter are described in U.S. patent application Ser. No. 13 846 710 filed on Sep. 26 2012 the entire contents of which are hereby incorporated herein by reference. In some embodiments the endpoint adapter is configured to represent the browser as a fully feature enabled endpoint using another protocol thereby enabling it to leverage all of the features of an existing enterprise communications network .

The CE may further include a protocol agnostic communications API that enables the endpoint adapter to access the various components of the enterprise network e.g. applications communication server database application media server other servers etc. . In some embodiments the endpoint adapter is configured to abstract session and or media control signaling received from the browser e.g. session and or media controls transmitted in accordance with WebRTC definitions such that they can be understood by the components of the enterprise network that do not natively support WebRTC. The protocol agnostic communications API on the other hand is configured to enable applications operating within the CE to provide their features to a communication session regardless of what protocol the underlying endpoints are utilizing. As an example the protocol agnostic communications API may be configured to abstract session and or media control signals from the specific protocol being used such that they can be understood or translated into a different protocol e.g. WebRTC to SIP WebRTC to H.323 SIP to WebRTC H.323 to WebRTC etc. .

The WAN can be secured from intrusion by untrusted parties by a gateway and or firewall located between the WAN and communication network . In some embodiments the boundary device may include the functionality of the gateway and or firewall. In some embodiments a separate gateway or firewall may be provided between the communication network and WAN . More specific examples of devices that may be provided between the communication network and WAN include a reverse proxy and a STUN TURN server.

The other servers may comprise email servers voicemail servers calendaring servers conferencing servers and other types of servers known to provide particular services to client devices. In some embodiments the other servers may also be considered application servers which provide one or more applications for use in a communication session.

The internal communication devices may be provisioned and often owned by the enterprise. Exemplary types of communication devices include without limitation any capable phone hardphone softphone SIP capable phone H.323 capable phone smartphone cellular phone PC laptop tablet and or digital telephone. Examples of suitable telephones include the 1600 2400 4600 5400 5600 9600 9620 9630 9640 9640G 9650 and Quick Edition telephones IP wireless telephones such as Avaya Inc. s IP DECT phones video phones such as Avaya Inc. s Videophone and softphones of Avaya Inc.

The enterprise database includes enterprise subscriber information such as name job title electronic address information e.g. telephone number email address instant messaging handle direct dial extension and the like subscriber contact lists e.g. contact name and electronic address information other employee records and the like. Additionally or alternatively the enterprise database may contain presence information for a user communication capabilities for a user and any other dynamic variable that is retrievable by the communication server and or CE . In some embodiments the database may comprise data in a certain structural format e.g. hierarchical database SQL database etc. or an unstructured format e.g. No SQL database etc. . The database may include persistent storage disk or may be only an in memory database.

In accordance with at least some embodiments the communications server determines an application sequence and causes one or more applications to be sequenced into a communication session in accordance with the sequencing rules . In particular the communications server is configured to analyze a particular user s sequencing rules and invoke the necessary applications and routing to fulfill such preferences. When operating in concert with the CE the communication server may determine and invoke enterprise applications for traditional phone to phone communication sessions browser to phone communication sessions and or browser to browser communication sessions. Thus although the communication server is depicted as being separate from the CE it should be appreciated that the communication server and CE may be executed on a single server and in some embodiments the functionality of one component may be incorporated into the other component e.g. CE functionality may be incorporated into the communication server or the communication server functionality may be incorporated into the CE .

Once an application sequence is determined by the communications server the communications server passes the communication establishing message to a first application in the application sequence thus allowing the first application to determine the parameters of the communication session insert itself into the control and or media stream of the communication session and thereby bind itself to the communication session. Once the first application has inserted itself into the communication session the first application either passes the communication establishing message back to the communications server to identify the next application in the application sequence e.g. based on the sequencing rules or passes the communication establishing message directly to a second application in the application sequence. Alternatively or in addition the message may be redirected rejected or the like. Moreover parties and or media servers may be added to the call by an application .

Examples of the types of applications that may be provided by the application server include without limitation call recording applications communication log services conferencing applications security applications encryption applications collaboration applications whiteboard applications mobility applications presence applications media applications messaging applications bridging applications and any other type of application that can supplement or enhance communications. As with the communications server and CE the application server or applications may be co located with the CE and or communication server or vice versa without departing from the scope of the present disclosure.

With reference now to additional details of the CE will be described in accordance with at least some embodiments of the present disclosure. Specifically the CE is shown to include a collaboration bus a call media API a first protocol adapter a second protocol adapter and a protocol agnostic feature invoker . also shows that the CE may comprise one or more native applications which may be the same or similar to the other applications described herein.

The first and second protocol adapters may be configured to perform protocol normalization such that everything else inside the CE is protocol agnostic. More specifically the protocol adapters enable the collaboration bus call media API and feature invoker to all operate in a protocol agnostic manner. Non limiting examples of suitable protocol adapters include an IMS Service Control ISC interface a plain SIP UA an Advanced SIP Telephony AST interface and a WebRTC gateway. The protocol adapters may also be configured to present a control and or signaling interface to the web applications and or browsers . In some embodiments the web applications may be configured to provide simple commands to a protocol adapter and or such as make call commands. The browsers on the other hand may utilize the JavaScript library provided by the web applications to exchange control and or status signals with the CE . Specifically the JavaScript library may provide the browsers with instructions for communicating with the protocol adapters . Moreover the exchanges between the browsers and CE may be performed in accordance with WebRTC protocols.

As can be appreciated the protocol adapters may enable the CE and its components to exchange communications within the enterprise network and outside the enterprise network e.g. with the communication network . Inside the CE however the communications may be protocol agnostic. The CE may therefore be configured to translate communications between WebRTC SIP H.323 and any other non web based protocol. As will be discussed herein the protocol adapters may enable the CE to exchange communications with the application media server thereby enabling the CE to invoke the application media server for a browser to phone or browser to browser communication session. It should be noted that the application media server may not be needed for browser to browser communication sessions since point to point RTP is supported in WebRTC however it may be desirable to include one or more application media servers to play announcements provide recording capabilities etc. for a WebRTC call.

In some embodiments the call media API enables the protocol agnostic feature invoker to invoke one or more applications contained within the CE . Advantageously the applications can be function without concern for the underlying protocol used between endpoints during a communication session.

As shown in the call media API interfaces with the protocol agnostic feature invoker via the collaboration bus . The collaboration bus may be similar in nature to an Enterprise Service Bus or JMS bus. Communications between the protocol agnostic feature invoker and call media API all pass through the collaboration bus .

The protocol agnostic feature invoker in some embodiments may utilize or have access to the sequencing rules to help determine which applications should be invoked for a particular communication session. The call media API may provide the interface between the protocol agnostic feature invoker and the applications . In some embodiments the collaboration bus call media API and protocol agnostic feature invoker may be collectively referred to as the protocol agnostic communications API .

In some embodiments the protocol adapters may communicate with the protocol agnostic feature invoker via the collaboration bus . More specifically the protocol adapters may exchange information with the protocol agnostic feature invoker via Session Description Protocol SDP messages.

With reference now to additional details of the CE and its interaction with a browser will be described in accordance with embodiments of the present disclosure. As shown in the first protocol adapter may correspond to a WebRTC gateway and the second protocol adapter may correspond to an endpoint adapter . The endpoint adapter interfaces the CE to an enterprise network such as a SIP network. It should be appreciated that the enterprise network may be a H.323 network or any other network using any type of communication protocol known in the art.

In some embodiments the web browser may correspond to a browser operating on an internal client or external client .

In accordance with at least some embodiments the browser may comprise JavaScript from the web application a CE JavaScript library exposing a CE API and a WebRTC API . As will be discussed in further detail herein the JavaScript CE API and WebRTC API may cooperate to enable the browser to exchange communications with the CE via the WebRTC gateway . In operation when the user requests a registration by clicking a URL or icon displayed in the browser the web application may receive a call or invocation command from the browser . Upon invocation the web application JavaScript may invoke a register operation on the CE API . This causes the CE API to send a register message to the WebRTC Gateway with the user s credentials. The WebRTC Gateway validates the user s credentials then invokes the SEA to register a virtual SIP endpoint with the SIP network . A binding now exists between the browser and the SIP network such that the browser appears to the SIP network as a fully functional SIP endpoint capable for making calls receiving calls and performing advanced call control operations.

Once the registration is complete the Web Application may continue interacting with the CE API in order to initiate or otherwise control calls. For instance the Web Application JavaScript may invoke a makeCall operation on the CE API to initiate a call to a particular phone number or Address of Record. This causes the CE API on the web browser to invoke a getMediaOffer to the WebRTC API on the browser . A makeCall message is then sent from the CE API to the WebRTC gateway with the media offer and the destination address.

After the registration step the CE is able to represent the browser to the enterprise communication network via the SEA . Furthermore the CE may enable the establishment of a communication session for the browser that incorporates one or more enterprise applications from the enterprise network and or one or more applications within the CE into the communication session. For applications outside the CE this may be done by the CE transmitting an INVITE message to the device addressed in the makeCall operation originally transmitted by the web browser . For applications within the CE the protocol agnostic feature invoker may invoke one or more applications via the call media API . Of course the INVITE message may traverse several servers on its way to the destination address so that one or more applications can be sequenced into the communication session. In some embodiments the CE represents the browser to all servers and communications endpoints of the enterprise network and such representations are made via SIP and or H.323 e.g. a protocol employed by the enterprise network .

The CE further comprises an endpoint adapter which may be similar or identical to the endpoint adapter depicted in . The endpoint adapter may comprise a plurality of protocol components that enable the endpoint adapter to communicate with an external session manager in any protocol understood by the session manager . In some embodiments the endpoint adapter may further be configured to invoke an external media server much like the protocol agnostic feature invoker of .

The session manager may be similar or identical to the communications server of in that the session manager may be responsible for determining an application sequence for a communication session. Alternatively or additionally feature invocation may be performed at a feature invoker internal to the CE . The internal feature invoker may be similar or identical to the protocol agnostic feature invoker and may facilitate a native mode of operation for the CE as will be discussed in further detail below. Like the endpoint adapter the feature invoker may comprise a plurality of protocol components that enable the feature invoker to exchange communications via any protocol supported by the enterprise network e.g. SIP H.323 etc. .

The CE of is also depicted as including a protocol agnostic API . This protocol agnostic API may be similar or identical to the communications API and or call media API . The protocol agnostic API may provide a conduit between the feature invoker and native applications contained within the CE . Additionally or alternatively the protocol agnostic AIP may also provide an interface between the CE and an external media server which may be part of the enterprise network or external to the enterprise network .

With reference now to methods of invoking browser to browser and or browser to phone communication sessions with the assistance of the CE will be described in accordance with embodiments of the present disclosure. It should be appreciated that the method of may be performed by any type of system architecture depicted and described herein. Specifically the architecture of and or may be employed to execute some or all of the method steps described in connection with .

The method begins when a user initiates registration of their web browser with an enterprise network via the CE step . In some embodiments registration of the web browser may include having a user provide a user name password and or other authentication information to the CE via an open web browser . It should also be noted that the CE JavaScript Library and the CE API exposed by that JavaScript library may be used for the registration step as well.

Once the registration has been initiated the method continues with the WebApp JavaScript invoking a registration method on the CE JavaScript library step . In response to the registration method being invoked the CE JavaScript library sends a registration request to the WebRTC gateway step . At this point the CE can control the registration of the browser and its user with the other network infrastructure. Accordingly the CE may continue the registration method by having the SEA send the registration request to the SIP network thereby registering the user with the enterprise network e.g. via a communications server steps and .

In some embodiments the information provided from the web browser to the CE during registration may include a user name and password. The CE may verify the authenticity of the user name and password combination or provide the information to an authentication server contained in the enterprise network . Once authenticated the CE may use its second protocol adapter e.g. a SEA to persistently represent the user and the user s browser to the enterprise network until the user logs off closes the browser or performs some other action that indicates the desire to discontinue the registration of the user with the enterprise network .

Once the user has completed registration that user has their identity and the address e.g. IP Address of the browser bound to a known identity in the enterprise network . Accordingly when the user initiates a call via the browser or receives a call directed toward their identity e.g. AoR the enterprise network is configured to begin processing the call initiation message e.g. INVITE in accordance with communication preferences of the user.

The method continues with the processing of a request to initiate a communication session at the CE step . The request to initiate a communication session may be received from the browser as a WebRTC message e.g. make call operation or the request may be received from the enterprise network e.g. as an INVITE message . In some embodiments registration of a user as discussed above in connection with steps and can occur simultaneous with before or after the receipt of a call originating from or directed toward a browser . Accordingly although step is shown as occurring after registration it should be appreciated that a communication session between the browser and CE is set up at registration time not after a request to make a call. Furthermore the CE JavaScript library may correspond to the entity that directly handles the communication session like SIP stack rather than serving as a lookup for the browser.

Regardless of when the session is initiated the browser may obtain information from the web application to facilitate a WebRTC communication session with the CE step . This information obtained at the browser may correspond to information already contained in the JavaScript CE API and or WebRTC API or it may correspond to additional script information obtained from the JavaScript library of the web server . Additionally or alternatively the CE JavaScript library may correspond to the entity that directly handles the communication session much like a SIP stack rather than serving as a lookup for the browser . This information is used by the browser or the CE JavaScript library itself to establish a connection with the WebRTC gateway step .

When the CE determines that the browser has connected thereto via the WebRTC gateway the method continues with the CE presenting the browser to the enterprise network as an enterprise user communicating on an enterprise communication device step . In other words the CE presents the browser and its user to the enterprise network in such a way that the network is unaware that the browser is communicating via WebRTC. Instead the network is allowed to utilize native protocols e.g. SIP H.323 etc. and the user operating the browser is treated as if he she were using a SIP or H.323 enabled communication device. Similarly the applications within the CE view the browser as an endpoint and have no regard for the protocols being employed between the browser and WebRTC gateway .

Based on the analysis of step one or more enterprise applications are selected for incorporation into the communication session step . The CE is capable of invoking such applications internally and or via the enterprise network as if the call was originated by a phone step . Thus the applications can be developed for SIP and or H.323 but still be used in a WebRTC call.

The CE may further invoke the application media server to convert the WebRTC stream into SIP H.323 compatible RTP step . It should be noted however that the application media server is not necessary for simple calls in the native mode of operation although it could still be used for features such as playing announcements and the like. If and when the application media server has been invoked the CE completes the call construction by sequencing any additional applications and establishing a media path via the application media server step . At this point the communication session is established between the browser or specifically the client using the browser and another device which may be another browser or a communication device .

With reference now to additional details of the CE s ability to operate in a native mode will be described in accordance with at least some embodiments of the present disclosure. Specifically depicts an architecture similar to where the protocol adapters are both WebRTC gateways . The WebRTC gateways are used to facilitate a browser to browser communication session. The browsers involved in the communication session may be internal browsers external browsers or a combination thereof. In some embodiments because the communication session solely involves browsers the CE is enabled to operate in a native mode of operation. In other words the CE does not have to utilize a SEA to present a browser to an enterprise communication network. Instead processing of the communication session and application sequencing may occur entirely within the boundaries of the CE . In other words the protocol agnostic feature invoker may solely invoke native applications via the call media API .

With reference now to a method of invoking a native or non native mode of operation at the CE will be described in accordance with embodiments of the present disclosure. The method begins after a browser has registered with the CE and when a make call request is received at the CE step . The CE then analyzes the call request and determines whether the call request was made by a browser directed to a browser and or or whether the call request came from or is directed to a traditional phone e.g. SIP enabled or H.323 enabled phone step . If the CE determines that the call is going to include two browsers e.g. the call will not involve a legacy communication protocol such as SIP or H.323 then the CE begins operating in a native mode of operation step . While in the native mode of operation the CE uses its native interface e.g. protocol agnostic feature invoker call media API and or feature invoker to access the internal applications in a protocol agnostic fashion step .

Referring back to step if the call does not involve WebRTC then the CE will invoke the traditional mode of operation step and access the enterprise applications as per a normal call step .

Following step or the method continues with the CE optionally invoking the application media server step and completing the call construction so that a media path is established between the participant s communication endpoints which may be browser based phones or a combination thereof step . As noted above one or more of the applications may have access to the media of the communication session via the application media server but this is an optional step that does not necessarily have to be followed.

In the foregoing description for the purposes of illustration methods were described in a particular order. It should be appreciated that in alternate embodiments the methods may be performed in a different order than that described. It should also be appreciated that the methods described above may be performed by hardware components or may be embodied in sequences of machine executable instructions which may be used to cause a machine such as a general purpose or special purpose processor GPU or CPU or logic circuits programmed with the instructions to perform the methods FPGA . These machine executable instructions may be stored on one or more machine readable mediums such as CD ROMs or other type of optical disks floppy diskettes ROMs RAMs EPROMs EEPROMs magnetic or optical cards flash memory or other types of machine readable mediums suitable for storing electronic instructions. Alternatively the methods may be performed by a combination of hardware and software.

Specific details were given in the description to provide a thorough understanding of the embodiments. However it will be understood by one of ordinary skill in the art that the embodiments may be practiced without these specific details. For example circuits may be shown in block diagrams in order not to obscure the embodiments in unnecessary detail. In other instances well known circuits processes algorithms structures and techniques may be shown without unnecessary detail in order to avoid obscuring the embodiments.

Also it is noted that the embodiments were described as a process which is depicted as a flowchart a flow diagram a data flow diagram a structure diagram or a block diagram. Although a flowchart may describe the operations as a sequential process many of the operations can be performed in parallel or concurrently. In addition the order of the operations may be re arranged. A process is terminated when its operations are completed but could have additional steps not included in the figure. A process may correspond to a method a function a procedure a subroutine a subprogram etc. When a process corresponds to a function its termination corresponds to a return of the function to the calling function or the main function.

Furthermore embodiments may be implemented by hardware software firmware middleware microcode hardware description languages or any combination thereof. When implemented in software firmware middleware or microcode the program code or code segments to perform the necessary tasks may be stored in a machine readable medium such as storage medium. A processor s may perform the necessary tasks. A code segment may represent a procedure a function a subprogram a program a routine a subroutine a module a software package a class or any combination of instructions data structures or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and or receiving information data arguments parameters or memory contents. Information arguments parameters data etc. may be passed forwarded or transmitted via any suitable means including memory sharing message passing token passing network transmission etc.

While illustrative embodiments of the disclosure have been described in detail herein it is to be understood that the inventive concepts may be otherwise variously embodied and employed and that the appended claims are intended to be construed to include such variations except as limited by the prior art.

