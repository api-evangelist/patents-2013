---

title: Hybrid and iterative keyword and category search technique
abstract: Provided are techniques for providing recommendations to improve a query. A query with query keywords and selected categories is received. In response to determining that the selected categories are ranked high with reference to query relevance indicator values for each of the selected categories, a query relevance indicator of the query is calculated with each subcategory using keyword relevance indicators, each subcategory is ranked based on the query relevance indicators, and the ranked subcategories are provided for use in selecting new categories to be submitted with the query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08682924&OS=08682924&RS=08682924
owner: International Business Machines Corporation
number: 08682924
owner_city: Armonk
owner_country: US
publication_date: 20130308
---
This patent application is a continuation of U.S. patent application Ser. No. 13 117 042 filed May 26 2011 which patent application is incorporated herein by reference in its entirety.

Embodiments of the invention relate to a hybrid and iterative keyword and category search for distributed computing systems and network environments and more specifically for any network based services.

The Internet and the World Wide Web WWW or Web have revolutionized information technology in the past two decades. As a human to machine and client server technology the Web enables any person with a computer connected to the Internet to access any published information on the Internet from his or her fingertips.

Web pages are documents written in for example Hypertext Markup Language HTML . Due to a vast amount of web content most web users rely on web search engines to search for useful web pages through keyword search.

To facilitate the integration of computing systems and provide more interactive user experiences and rich content to users new web technologies many of them based on Extensible Markup Language XML have been introduced in recent years. Two of these technologies are Web Services and Asynchronous JAVASCRIPT and XML AJAX . JAVASCRIPT is a trademark or registered trademark of Oracle and or its affiliates. Web Services may be described as a machine to machine distributed computing technology that overcomes the difficulties of enabling computer programs to communicate with each other in a heterogeneous computing environment. These difficulties are introduced by the different computer platforms incompatible communication protocols and various computer languages used by computer programs. As a standard based comprehensive solution to conquer these challenges Web Services is widely supported by industries. Web Services is based on a series of standards such as XML Simple Object Access Protocol SOAP and Web Services Description Language WSDL . These standards provide a common format syntax and protocols for applications running on computers and electronic devices to exchange information among them over networks. Unlike Web Services AJAX does not define a set of standards. AJAX enables web applications to send data from client to server asynchronously. AJAX can be utilized to implement RESTful Representational State Transfer Web Services.

For instance a company may create a marketplace web site for different vendors to sell their products. Examples of web services include the web site s flexible fulfillment web service and payments web service which are utilized to integrate the marketplace web site with the information systems of those vendors.

To facilitate publishing and searching web services a Universal Description Discovery and Integration UDDI standard had been developed. The UDDI standard defines how to create a web service UDDI registry to enable web service providers to publish their web services and to enable web service consumers to search and use these published web services.

A non UDDI web service registry may offer web service governance features and semantic web technologies. Such web service registries or repositories store additional web services related metadata to govern the life cycles of web services. Web Ontology Language OWL is an ontology based markup language which was originally developed in academic research to present data on the web in a machine understandable form. OWL may be used to organize the web services related metadata in a web service registry.

In conventional systems keyword search is used by a web service consumer to find proper web services in a web service registry. The keywords of a web service can be manually specified by a web service provider. An automatic keyword generation process may be used to generate keywords from web service metadata. The combination of the manual approach and the automatic approach such as letting the provider verify or modify the generated keywords may also be used.

UDDI and other registries provide query Application Programming Interfaces APIs and or Graphical User Interfaces GUIs to enable web service consumers to search for the web services published in the web service registry. With these query APIs or GUIs users provide keywords strings or other data of specific web service metadata fields to conduct the search.

For example a UDDI client may query a UDDI registry to find web services based on the name the business entity to which they belong and the category into which they fall. In this example the user provides the partial or full name of the web service the business entity and or the category to construct such a search query.

The existing web service registry technologies allow the user to search web services with composite queries. The search result of such a query is the intersection or union of the collection of the search results of the simple queries of which the composite query is made.

Provided are a method computer program product and system for providing recommendations to improve a query. A query with query keywords and selected categories is received. In response to determining that the selected categories are ranked high with reference to query relevance indicator values for each of the selected categories a query relevance indicator of the query is calculated with each subcategory using keyword relevance indicators each subcategory is ranked based on the query relevance indicators and the ranked subcategories are provided for use in selecting new categories to be submitted with the query.

In the following description reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the invention.

In embodiments services mentioned herein refer to any services implemented on an information system and that can be accessed from telecommunication networks. Services include but are not limited to web services.

The query enhancement system provides an integrated and iterative process to generate and identify the proper keywords and classification and or cluster categories for a service or services published in service registry and the identified keywords are used to enhance i.e. improve a query. The query enhancement system provides a hybrid technique that combines both keyword search and category selection search in an integrated manner. On the other hand conventional systems may combine keyword and category search as a composite query by executing two separate queries then combining the result with a logic operation such as AND or OR .

The query enhancement system has four components a classification cluster and service keyword data store keyword data store a keyword preprocessor a keyword classification cluster matching engine matching engine and a keyword thesaurus .

The query enhancement system utilizes the iterative keyword and category based process to discover for example web services available in service oriented information systems and networks. In alternative embodiments the query enhancement system may discover items other than web services.

The service registry enables service providers to publish their services and enables service consumers to search and use these published services. The service registry stores the information of the published services.

The matching engine provides a mechanism to integrate the keyword search and category browsing into a mutual correction and self correction search process by allowing users to provide feedback.

The keyword data store holds the information of the keywords of services provided by service providers or generated from service metadata as well as the relationship information between these keywords and classification cluster categories. The information in the keyword data store is retrieved or derived from the service information stored in the service registry .

The relationship information between the keywords and classification cluster categories is defined as a relevance indicator which is the weight of a keyword associated with a category and referred to herein as a keyword relevance indicator . The relevance indicator is also used as the weight of a query associated with a category and referred to herein as a query relevance indicator .

Keyword preprocessor is employed to verify that the query keywords are valid. The keyword thesaurus is employed in the process for identifying keyword synonyms. With reference to synonyms the meaning of words depends on the context in which they are used. For example the terminologies used by the server provider may be different from the ones used by the service client .

Services may be grouped into classifications or clusters. Classifications may be created by standard bodies and may have clearly defined and well understood names for subcategories. Clusters or hierarchies of clusters may be created by the service registry server implementing the iterative keyword and category search technique described herein. In certain embodiments the services are grouped into the same clusters if they have similar keywords. In certain embodiments clusters do not have well defined names. When a cluster is identified and needs to be rendered to a user the information of a typical sample service in the cluster is sent to the user. The user decides whether to select the cluster by specifying whether the sample service is similar to the one s the user is trying to find. In various embodiments a user may be a human computer program device etc.

In certain embodiments classifications used herein refer to the standard categories into which the things of the same type are grouped such as North American Industry Classification System NAICS . Usually these classifications are developed by standard bodies and can be plugged into a service registry if they are not a build in feature. Classification is a categorization mechanism which can be utilized in the keyword search technique. Nevertheless any classification has limited and fixed levels. It is possible that there are thousands or more services grouped into the same subcategory at a classification s finest level. In this case further categorization grouping is desired within this finest subcategory.

The communication between the service client and the query enhancement system is an iterative process. The service client and the query enhancement system pass keyword and classification cluster category information back and forth multiple times to identify the proper keywords and classification cluster categories for the services that a user at the service client is trying to find.

When the service client communicates with the query enhancement system the keyword preprocessor receives the query first from the service client and examines the keywords to make sure the keywords are valid such as no spelling errors. If the keyword preprocessor identifies an error in the keywords the keyword preprocessor informs the matching engine and the matching engine forwards the information to the service client in a message sent back to the service client .

The matching engine is the component implementing the matching techniques. The matching engine receives the preprocessed query from the keyword preprocessor retrieves classification cluster category keywords from the keyword data store fetches synonyms of keywords from the keyword thesaurus compares the keywords in the query and the keywords in the categories and generates an updated version of keywords and a ranked category list. The matching engine renders the modified keyword and category information back to the service client for further feedback and adjustment.

The keyword data store is the data store in which the keywords for each service and classification cluster category are stored. The query enhancement system calculates the key relevance indicator of every keyword for each category and stores these relevance indicator values in the keyword data store .

The keyword thesaurus is a thesaurus which is utilized by the matching engine to find synonyms between two sets of keywords. In certain embodiments two keywords are synonyms if they have the same or a very similar meaning

The query enhancement system enables service consumers to identify proper services published in a service registry by specifying or selecting a number of keywords and by selecting specifying proper classification or cluster categories to which the services belong in an iterative process. In particular the matching engine identifies the proper keywords and the categories to which the best fit services belong. The scope of the search for suitable services can be narrowed down efficiently by navigating down the classification and cluster hierarchy with selection of keywords at each classification and cluster level in a mutual correction process. The synonym issue is addressed with the keyword thesaurus . The query enhancement system allows service users to retrieve a list of candidate services at the end of process.

In certain embodiments the query enhancement system provides assistance on keyword selection and category identification for both service consumers and providers. The query enhancement system facilitates the service searching process by ranking the categories and guiding service users to make correct keyword selections.

With the query enhancement system intelligence is built in to utilize the relationships between queried keywords and categories to give the user recommendations i.e. suggestions and to analyze the user s feedback to do a more effective search.

The query enhancement system provides a process to collect and utilize the relationships between service keywords and the hierarchical classification and clustering categories where services belong. The same concept can be applied to other context related service metadata in a service registry as well.

More specifically by comparing the keywords supplied by a user and the keywords associated with each classification and or cluster category the matching engine may quickly identify the proper keywords and the related services with additional help from the keyword thesaurus and the feedback from the user. The user s feedback includes providing the keyword and category information about the service iteratively.

When a service registry stores the information of thousands or even millions of services it is often inefficient to require users to give the detailed and specific information about the services they want to find. Instead it may be more practical to allow the users to give a number of keywords and then make straightforward selections based on recommended keywords provided by the matching engine . That is with the query enhancement system it is the task of the matching engine to help identify the best fit services for the users.

The query enhancement system provides a matching engine to enable users to search services published in a registry in a manner similar to how a web search engine may be used to search web pages with limited or no prior knowledge about the registry structure and the exact details of the services published in the registry.

Similarly the keyword and categorization information improvement techniques employed by the query enhancement system can not only help service consumers to search services but also help service providers to document and classify their services.

In certain embodiments when a service is published in the service registry the service provider provides the keywords and classification information of the service. If a service belongs to a category then all of its keywords belong to this category and to all of its ancestor categories.

For instance if an auto insurance quote service is published in the registry the service provider may specify that this service belongs to category Insurance Agencies Brokerages in the North American Industry Classification System NAICS . This category is a subcategory of category Insurance Carriers and Related Activities which in turn is a subcategory of category Finance and Insurance . In this case all the keywords specified for this service are also keywords for category Insurance Agencies Brokerages as well as its parent category Insurance Carriers and Related Activities and grandparent category Finance and Insurance . Keywords in each category may have different weights called keyword relevance indicators associated with the category.

A relevance indicator may be described as a weight to measure how relevant two documents are. Each of the documents contains a set of keywords. A document may be a single keyword a service a query or a category.

In particular a query with a list of keywords can be viewed as a document. A category containing a collection of keywords can also be viewed as a document. Different schemes to measure similarity of documents based on the weight of their keywords have been developed in the information retrieval research such as cosine similarity Euclidean distance Dice coefficient and Jaccard index. Some of these schemes may be employed to measure the similarity between a query and a category. In conventional information retrieval systems the weights of the keywords used in some of these schemes are computed using a Term Frequency Inverse Document Frequency TF IDF based technique.

The collection of keywords of a service can also be viewed as a document. To further categorize services when a classification reaches its finest level a number of similarity schemes such as cosine similarity or Euclidean distance may be used to measure the similarity between services based on their keywords. If there are too many services in a single cluster the services in this cluster can be further divided into smaller clusters. This process can be done recursively to create a cluster hierarchy. A number of clusters or cluster hierarchies can be built in a classification hierarchy to facilitate the iterative keyword search. The techniques such as agglomerative hierarchical clustering or hierarchical frequent term based clustering developed in the field of hierarchical document clustering research may be implemented to create the cluster hierarchy.

The keyword relevance indicator RI is a measure similar to TF IDF which is a weighting scheme used to evaluate how important a term is to a document in a collection of documents.

On the same token Keyword Frequency KF of a keyword associated with a category is similar to TF. KF measures how often a keyword appears in a category. In certain embodiment it is defined as the quotient of the total number of services which contain the keyword in the category and the sum of the numbers of all the keywords each service has in the category. Equation 1 specifies KF 

In Equation 1 KFis the keyword frequency for keyword i in a category M is the total number of keywords in the category N is the total number of services in the category both i and k are integers between 1 and M for any i 1 M and j 1 N nis 1 if service j in the category has keyword i and nis 0 if service j in the category does not have keyword i and for any k 1 M and j 1 N nis 1 if service j in the category has keyword k and nis 0 if service j in the category does not have keyword k.

Equation 1 assumes that each service has the same number of keywords. If this is not the case and the services are treated equally in certain embodiments the value of n or n instead of being 1 if the service j has the keyword k may be adjusted so that the sum of

However the uniqueness measure of a keyword in a collection of services like Inverse Document Frequency IDF may not be defined at the category level in certain embodiments because categories comprising a large number of services may contain the same keyword. So the quotient of the number of categories containing the keyword and the total number of categories in an entire classification system is always equal to or close equal to 1 which renders this measure ineffective in certain embodiments. This issue is avoided if the document containing the individual keywords is defined at the service level. The document collection can be defined at the scope of the entire classification cluster domain in certain embodiments. Nevertheless it is typical that categories within the same parent category are compared. It is more accurate to measure the keyword uniqueness at the finer level by defining the document collection as the parent category categories of the specific category categories of which the keyword s uniqueness is measured. That is Inverse Service Frequency ISF at a specific category or categories in certain embodiment is defined as the log of the quotient of total number of services and the number of services containing the keyword in the parent category categories. Equation 2 specifies ISF 

In Equation 2 ISFis the inverse service frequency for keyword i in a specific category or categories of a classification system nis 1 if service j has keyword i and nis 0 if service j does not has keyword i and N is the total number of services registered in the parent category or categories.

RIis the query relevance indicator of a query with a category to measure the similarity between the query and the category. RIof a query containing a plurality of keywords is an aggregation of the keyword relevance indicators of these keywords with this category. In certain embodiments similar to the cosine similarity used with the vector space model developed in information retrieval research RIis the cosine of the angle between two multidimensional vectors representing the query and the category. Equation 4 specifies RI 

In Equation 4 RIis the keyword relevance indicator of keyword i with the category keyword i is a keyword specified in the query Mis the total number of keywords in the query RIis the keyword relevance indicator of keyword j with the category keyword j is a keyword in the category but not in the query and Mis the total number of different keywords in the category and the query i.e. Mis the size of the union of the set of the query keywords and the set of the category keywords .

Since Equation 4 based on vector space model may generate overly small RIvalues for large categories with more number of services and keywords the value of RIneeds to be adjusted in certain embodiments if the sizes of the categories under comparison are significantly different.

A simple case illustrating the above concept is shown in . If Category A has 5 services and Category A has 10 services then Category A has a total of 15 services. These services are unique. Assume that only one service in Category A contains the keyword insurance and five services in Category A contain the same keyword insurance . That means that Category A has six services containing the keyword insurance . In addition each service contains 10 keywords. In the parent category of Category A assume that one in every five services contains the keyword insurance . The keyword relevance indicator of the keyword insurance with each category is 

In the query enhancement system processes a query received from a service client . In certain embodiments the matching iteration is performed at a specific classification level in each classification system i.e. the service registry may have multiple classification systems . The query enhancement system returns the updated keyword and classification category information to the service client at the end of each iteration. The service client may then provide feedback by selecting displayed query keywords category keywords and categories and the selections are used in the next iteration. The query improvement process employed by the query enhancement system may iterate many times before it reaches the lowest category levels as is illustrated with blocks or the service client quits the process as is illustrated with blocks .

Processing begins at block with the query enhancement system receiving a query Q from the service client . Keywords in the query will be referred to as query keywords while keywords in the classification categories will be referred to as category keywords. In certain embodiments in the first iteration the query generated by the service client may include the query keywords and may or may not include the classification categories specified by the service client . However at the end of the first iteration and each subsequent iteration the query enhancement system may recommend categories and category keywords and the service client may select one or more of the category keywords to be included in the query as query keywords. In certain embodiments each query in subsequent iterations contains the keywords and the classification categories specified or confirmed by the service client . These specified or confirmed categories in the query are called selected categories. For each classification system it is possible that a query has more than one selected category.

In block the matching engine sets a current category level. In certain embodiments a new query starts at the root top category level of each classification system if the service client does not specify any classification category at the beginning At each iteration the current category level moves down zero one or multiple levels in each hierarchical classification system depending on whether the service client feedback is being used to identify the proper subcategory or subcategories. In certain embodiments if the service client changes one or more keywords in the query by itself i.e. not the recommended changes suggested by the query enhancement system the query may be treated as a new query by the query enhancement system .

In block the keyword preprocessor receives the query and preprocesses the keywords. If the keyword preprocessor identifies a spelling error or a stop word the keyword preprocessor informs the matching engine to ignore the wrongly spelt word or stop word and to forward the information to the service client to correct the query.

In block the matching engine receives the preprocessed query and determines whether the client selected categories of the query are ranked high in terms of the query relevance indicator value with each category. In certain embodiments the determination is for all of the selected categories. If one or more selected categories have low associated query relevance indicator values processing continues to block to find recommended keyword changes to eliminate the mismatch between the keywords and the selected categories of the query.

An example to illustrate the above mismatch scenario is the following one a query Q submitted by client contains three keywords insurance car and driver . The selected category is Category A depicted in . However Category A also depicted in is ranked high in terms of the query relevance indicator with query Q as shown below. Assume that the keyword relevance indicators between the keywords and the two categories are Category1 RI 0.008 RI 0.025 RI 0.030 Category2 RI 0.020 RI 0.005 RI 0.004

If all of the selected categories have high query relevance indicator values processing continues to decision block .

In block the matching engine determines whether the lowest category levels of each classification system have been reached. If so processing continues to block otherwise processing continues to block to traverse one or more levels down in each of the classification hierarchies .

In certain embodiments the lowest category level of each category of each classification system contains one or more individual services. In block the matching engine ranks the individual services that are at the lowest category levels. In block the matching engine provides the information of one or more high ranked services to the service client in response to the query. Then processing is done.

In block the matching engine fetches i.e. retrieves the keyword relevance indicator RI of each keyword in the query for each subcategory of each selected category from the keyword data store . In block the fetching may include fetching data and calculating the keyword relevance indicators. In block the matching engine calculates the query relevance indicator of the query RI with each of those subcategories using the keyword relevance indicators. The query relevance indicator for a category describes how closely the category is related to a query i.e. how similar they are in term of the keywords they have in common .

In certain embodiments other categories at the same level of the selected categories in a classification system are not recommended to or chosen by the service client . But if the query relevant indicators for these categories reach a certain threshold to show that these categories might also be related to the query the query relevance indicators of the query with each subcategory of these categories are also calculated and ranked.

In block the matching engine ranks the subcategories in each classification system based on their query relevance indicators.

In certain embodiments if the value of the query relevance indicator of a certain subcategory is significantly higher than others in a classification system the matching engine may assume that this subcategory is a selected category before the confirmation from the service client . In such embodiments the matching engine moves the current category level one more level down in the hierarchy and the matching engine calculates and ranks the relevant indicators of the subcategories of this subcategory. This process can be repeated until the matching engine reaches a point where no subcategory has a significantly high query relevance indicator value and the selection from the service client is needed.

In block the matching engine determines whether each selected category specified or confirmed by the service client includes at least one subcategory ranked high based on the ranking in block . If so the processing continues to block otherwise processing continues to block .

In block the matching engine sets the subcategory level of the current category level as the current category level. In block the matching engine sends the unchanged keywords and the newly ranked category list called subcategory list before the current category level is changed to the service client to enable the service client to select or verify new subcategories.

In block the matching engine determines whether a query with specified or confirmed keywords and categories has been received from the service client . If so the process loops back to block from block to perform another iteration of improving the query otherwise processing continues to block . In block the matching engine determines whether the service client indicates that the query should be executed in the current form or in a previous form with no further iterations to be performed e.g. via a user interface . If so processing continues to block otherwise processing is done. In certain embodiments after a period of time in which feedback is not received the matching engine determines that the service client prefers to quit the process without executing the query in the current form or in a previous form. In such a case the matching engine quits without executing the query.

In block the matching engine executes the query in the current form or in a previous form. In certain embodiments the service client is able to identify a particular previous form to be executed. In block the matching engine ranks the services based on their query relevance indicators. In block the matching engine provides a list of one or more high ranked services to the service client e.g. via the user interface . That is the matching engine provides information about the one or more services. Then processing is done i.e. quit by the service client . In certain embodiments one or more services from the list may be selected by the service client for consumption i.e. the selected services are provided .

If there is one or more selected categories which have no subcategory ranked high processing continues from block to block . This is caused by the mismatch between the keywords specified by the service client and the keywords belonging to the related categories or subcategories. In block the matching engine identifies synonyms of query keywords in category keywords that may be used to substitute matching query keywords in the query. In particular the matching engine identifies query keywords with low keyword relevance indicator values for non top ranked selected categories to match ones in non top ranked categories that may be used to replace the keywords in the query. A non top ranked selected category may be described as a selected category whose query relevance indicator value is not among the highest or none of its subcategories query relevance indicator values is among the highest.

To identify the synonyms the matching engine fetches the keyword relevance indicator values of the keywords belonging to the non top ranked selected categories in the query from the keyword data store . Then the matching engine locates the category keywords with high keyword relevance indicator values in the non top ranked categories but not in the query and vice versa i.e. locates the query keywords with low keyword relevance indicator values for the non top ranked categories . The matching engine also fetches synonyms from the keyword thesaurus and identifies any synonyms between these two groups of keywords i.e. query keywords and category keywords . If a pair of synonyms are identified one from each group i.e. one from the query keywords and one from the category keywords the recommendation is created to suggest to that the service client replace i.e. substitute the keyword in the query with the synonym belonging to the non top ranked categories. For example assume that the non top ranked selected category is Category A . The keyword auto has a high keyword relevance indicator value in Category A but not in the query Q. On the other hand the keyword car is in query Q but has a low keyword relevance indicator value in Category A . The keyword thesaurus indicates that auto and car are synonyms. Therefore a recommendation is created to suggest that the service client substitute the keyword car in the query with the keyword auto .

In block the matching engine identifies new keywords in the non top ranked categories that may be added to the query. In particular for the keywords in the non top ranked categories with high keyword relevance indicator values if they are not in the query and no synonyms for them are found at block a recommendation is created to suggest that the service client add these new keywords in the query. In certain embodiments the recommendation is provided from block when the category mismatch occurs between the choices of the service client and the ranking of the matching engine . As an example the keyword quote may be identified as such a keyword and a recommendation is created for the service client to add the keyword quote into the query Q.

In block the matching engine identifies the query keywords that are candidates to be removed from the query. In particular the matching engine examines the keywords in the query and locates ones with low keyword relevance indicator values for non top ranked categories and high keyword relevance indicator values for top ranked but not selected by the service client categories. If no synonyms in the non top ranked categories are found for these keywords at block a recommendation is created to suggest that the service client remove these keywords in the query. As an example the keyword driver may be identified as such a keyword and a recommendation is created for the service client to remove the keyword driver from the query Q.

In block the matching engine provides the keyword change recommendations and the ranked category list to the service client e.g. via the user interface . The service client may then provide feedback by selecting keywords to be used in the query and categories to be associated with the query. For example assume that the service client adopts the change recommendations by replacing keyword car with auto adding keyword quote and removing keyword driver . Also assume that the keyword relevance indicators of keyword auto with Category A and Category A are 0.006 and 0.026 and keyword relevance indicators of quote are 0.004 and 0.032 respectively. Then the query relevance indicators of query Q with these two categories after the keyword changes are 

After the changes the non top ranked category Category A has a higher relevance indicator than Category A . Category A becomes a top ranked category rated by the matching engine . The category selection mismatch between the service client and the matching engine is corrected after the query keyword change recommendations are adopted.

If the current category level is not in a hierarchical classification system but in a cluster or cluster hierarchy the process is similar. The difference is that the cluster category may not have a meaningful name in certain embodiments. Then the matching engine needs to select a typical service in the category to represent this category and render the service information to the service client . The service client decides whether the category is to be selected by specifying whether the rendered service is similar to the ones the service client is looking for.

When the process reaches to the finest categories of a classification or cluster hierarchy the current categories do not have subcategories but they contain individual services. Each service can be treated as a subcategory and their query relevance indicator will be calculated and ranked. In such embodiments the service client will receive a ranked service list to choose from rather than a category list.

Embodiments provide effective search and retrieval of relevant entries in a service repository given a user query consisting of one or more keywords. Embodiments take into consideration existing hierarchical relationships between the keywords of the services in the service repository in addition to developing a keyword query category matching scheme resulting in an efficient technique for refining the query to improve the query s accuracy and quality.

Embodiments provide an information retrieval technique that helps a user improve a query issued against a data store with hierarchical classification systems based on iterative user feedback.

With embodiments users do not need to have detailed knowledge about what and how service metadata are stored in the service registry and or the exact keywords used by the services in the first place to specify query keywords and to carry out effective keyword searches.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device solid state memory magnetic tape or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the embodiments of the invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational processing e.g. operations or steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The code implementing the described operations may further be implemented in hardware logic or circuitry e.g. an integrated circuit chip Programmable Gate Array PGA Application Specific Integrated Circuit ASIC etc. The hardware logic may be coupled to a processor to perform operations.

The keyword preprocessor and or the keyword classification cluster matching engine matching engine may be implemented as hardware e.g. hardware logic or circuitry software or a combination of hardware and software.

Input Output I O devices including but not limited to keyboards displays pointing devices etc. may be coupled to the system either directly or through intervening I O controllers .

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters .

The computer architecture may be coupled to storage e.g. a non volatile storage area such as magnetic disk drives optical disk drives a tape drive etc. . The storage may comprise an internal storage device or an attached or network accessible storage. Computer programs in storage may be loaded into the memory elements and executed by a processor in a manner known in the art.

The computer architecture may include fewer components than illustrated additional components not illustrated herein or some combination of the components illustrated and additional components. The computer architecture may comprise any computing device known in the art such as a mainframe server personal computer workstation laptop handheld computer telephony device network appliance virtualization device storage controller Personal Digital Assistant PDA tablet computer pocket Personal Computer PC network PC hand held device set top box consumer electronic minicomputer supercomputer etc.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of embodiments of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

The foregoing description of embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description but rather by the claims appended hereto. The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Since many embodiments may be made without departing from the spirit and scope of the invention the embodiments reside in the claims hereinafter appended or any subsequently filed claims and their equivalents.

