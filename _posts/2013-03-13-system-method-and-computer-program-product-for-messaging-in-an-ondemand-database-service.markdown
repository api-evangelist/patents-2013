---

title: System, method and computer program product for messaging in an on-demand database service
abstract: In accordance with embodiments, there are provided mechanisms and methods for messaging in an on-demand database service. These mechanisms and methods for messaging in an on-demand database service can enable embodiments to more flexibly message in on-demand database environments. The ability of embodiments to provide such feature may lead to enhanced messaging features which may be used for providing more effective ways of messaging in the context of on-demand databases.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436837&OS=09436837&RS=09436837
owner: salesforce.com, inc.
number: 09436837
owner_city: San Francisco
owner_country: US
publication_date: 20130313
---
This application is a continuation of U.S. application Ser. No. 13 797 798 filed Mar. 12 2013 which is a continuation of U.S. application Ser. No. 12 175 082 filed Jul. 17 2008 which claims the benefit of U.S. Provisional Patent Application No. 60 950 831 filed Jul. 19 2007 the entire contents of which are incorporated herein by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The current invention relates generally to database systems and more particularly to messaging in database systems.

The subject matter discussed in the background section should not be assumed to be prior art merely as a result of its mention in the background section. Similarly a problem mentioned in the background section or associated with the subject matter of the background section should not be assumed to have been previously recognized in the prior art. The subject matter in the background section merely represents different approaches which in and of themselves may also be inventions.

In conventional database systems users access their data resources in one logical database. A user of such a conventional system typically retrieves data from and stores data on the system using the user s own systems. A user system might remotely access one of a plurality of server systems that might in turn access the database system. Data retrieval from the system might include the issuance of a query from the user system to the database system. The database system might process the request for information received in the query and send to the user system information relevant to the request.

There is often a desire to message in the context of such database systems. For example a user of the database system may not have access to the Internet for messaging. Thus an alternative mechanism for messaging would be useful to the user.

In accordance with embodiments there are provided mechanisms and methods for messaging in an on demand database service. These mechanisms and methods for messaging in an on demand database service can enable embodiments to more flexibly message in on demand database environments. The ability of embodiments to provide such feature may lead to enhanced messaging features which may be used for providing more effective ways of messaging in the context of on demand databases.

In an embodiment and by way of example a method is provided for messaging in an on demand database service. In use a message is received using an on demand database service on behalf of an entity. Additionally a security criterion retrieved from a portion of an on demand database limited to information of the entity is applied. Furthermore a rule for processing the message if the message successfully meets the security criterion is retrieved.

While the present invention is described with reference to an embodiment in which techniques for messaging in an on demand database service are implemented in an application server providing a front end for a multi tenant database on demand service the present invention is not limited to multi tenant databases or deployment on application servers. Embodiments may be practiced using other database architectures i.e. ORACLE DB2 and the like without departing from the scope of the embodiments claimed.

Any of the above embodiments may be used alone or together with one another in any combination. Inventions encompassed within this specification may also include embodiments that are only partially mentioned or alluded to or are not mentioned or alluded to at all in this brief summary or in the abstract. Although various embodiments of the invention may have been motivated by various deficiencies with the prior art which may be discussed or alluded to in one or more places in the specification the embodiments of the invention do not necessarily address any of these deficiencies. In other words different embodiments of the invention may address different deficiencies that may be discussed in the specification. Some embodiments may only partially address some deficiencies or just one deficiency that may be discussed in the specification and some embodiments may not address any of these deficiencies.

There is often a desire to message when using on demand database systems. For example a user of the database system may not have access to the internet for messaging. Thus mechanisms and methods provided herein for messaging in an on demand database service can enable embodiments to more flexibly message. The ability of embodiments to provide such feature may lead to enhanced messaging features which may be used for providing more effective ways of messaging in the context of on demand databases.

Next mechanisms and methods for messaging in an on demand database service will be described with reference to exemplary embodiments.

In the context of the present description an on demand database service may include any service that relies on a database system that is accessible over a network. In one embodiment the on demand database service may include a multi tenant on demand database service. In the present description such multi tenant on demand database service may include any service that relies on a database system that is accessible over a network in which various elements of hardware and software of the database system may be shared by one or more customers. For instance a given application server may simultaneously process requests for a great number of customers and a given database table may store rows for a potentially much greater number of customers.

Furthermore in the context of the present description an entity refers to any individual company or organization etc. Additionally the message may be any type of electronic message. For example in various embodiments the message may include a workflow approval a mass email a single email a notification a case email a billing email a workflow request an email to create a new case a thread to a previous email an inquiry and a customer support email etc.

In one embodiment the message may be sent from the entity. Further the message may be received at the on demand database service or by an entity or database via the on demand database service.

With further reference to a security criterion retrieved from a portion of an on demand database limited to information of the entity is applied. See operation . For example the security criterion may be retrieved from a specific instance of the on demand database of an on demand database service provider the instance being associated with the entity.

The security criterion may include any type of security criterion. For example in various embodiments the security criterion may include a sender policy framework SPF validation a sender address validation a transport layer security TLS authentication anti virus verification anti spam verification etc.

In one embodiment the security criterion may be managed by the on demand database service controlling the on demand database. Furthermore a rule for processing the message if the message successfully meets the security criterion is retrieved. See operation . As an option the retrieving may include retrieving the rule on behalf of the entity. For example the entity may have defined the rule for processing the message.

In this case the rule may include any rule or set of rules for processing the message. For example in one embodiment the rule may include creating a lead in the portion of the on demand database based upon information contained in the message. In this case the lead may include a customer lead.

In another embodiment the rule may include sending the message to a case stored in the portion of the on demand database. For example the message may be sent to a file associated with information contained in the message. In still another embodiment the rule may include creating a contact in the portion of the on demand database based upon information contained in the message. In yet another embodiment the rule may include invoking a custom code to process the message.

In either case the message may be processed by applying the retrieved rule. As an option processing resources used to process the message may be limited by applying a rate limit to a resource count tracked on behalf of processing the message. As another option the rule for processing the message may be installed from an application exchange platform. Of course these are options that may or may not be implemented in various embodiments.

As shown an administrator may have the ability to enable inbound messages for an entity. First the administrator may specify global permissions required for inbound message processing. Next the administrator may setup new email addresses and activate a new email account linked to a rule e.g. defined in Apex Code such that a unique email account is established that may be used to receive inbound emails. It should be noted that several different email addresses may be linked to the same rule.

In one embodiment the administrator may access a setup interface for enabling the messaging capability of an organization and to choose what types of security validation criteria to add to the inbound emails. For example the administrator may implement security criteria such as SPF validation e.g. limit to specific domains sender address validation on a per rule basis and TLS verification.

The administrator may also determine what rules may be available to users for creating unique email addresses. For example the administrator may allow a user to have full control over rules and the code that can be applied and executed for processing messages.

In one embodiment the administrator may first be presented with a splash page where the administrator may have to agree to enable a messaging feature to proceed. shows a splash page that may be displayed to an administrator in accordance with one embodiment.

Once the inbound message feature is enabled the administrator may be able to define a set of inbound mail rules that may be supported by the entity e.g. supported in an organization and the security criteria to be enforced across the set of rules. This may cause an install of packages that support these functions from packages that an on demand service provider has defined or from packages a customer partner of the on demand database service has created.

When enabling a rule for an inbound message the administrator may also be able to choose whether the rule is only allowed to be invoked by a message from the senders initially established email address. shows an interface for establishing rules and security criteria for messages associated with an entity in accordance with one embodiment. Using this interface the administrator may view all active rules versions of application interfaces being used the number of entities using email addresses linked to the rule and the security criteria enabled.

Additionally the administrator may edit the settings for the entity. For example the administrator may edit whether the entity uses SPF and or TLS validation for inbound messages or whether to disable the feature completely. shows an interface for verifying security criteria used for messaging in accordance with one embodiment.

As shown a user may generate an inbound email address. In one embodiment the user may be presented with an overview of email addresses already enabled. If there are no email addresses the user may have the option to create a new email address.

In this way users may be able to select from a list of rules and email addresses that the administrator may have enabled. The users may select to use the default rule name or provide a customized local name for the new email address and or rule. shows an interface for generating an inbound email address in accordance with one embodiment. shows an interface allowing a user to select rules to implement in accordance with one embodiment.

In one embodiment a domain portion of the created address may be of the format seemingly random string.in.salesforce.com. As an option the seemingly random string may be a Base64 encoded string including only numbers and letters. This may be accomplished by encrypting a sequence of 4 random characters used to identify the active user alias for this function a 12 digit entity ID a 12 digit user ID a static qualifier of in to represent a generic inbound service email and a static top level email domain representing a domain of the on demand service provider.

Utilizing such a technique an address that is difficult for spammers to randomly target may be generated. Moreover since this may not be a general inbox for on demand database users users may not be passing this address out to others for general use. Typically the user may forward or copy an email to this address via an address book alias entry or in some cases an email may be automatically forwarded to the address from another mail system. The user may have the ability to regenerate a user specific domain if the user believes that the existing domain has been compromised e.g. targeted by a spammer .

With further reference to mail may be received by a first mail server and may be forwarded to a second mail server for processing. In one embodiment the first mail server may add headers showing the success or failure of the security checks such as TLS verification SPF verification anti virus email gateway filter checking and anti SPAM email gateway filter checking. The second mail server may use information that it obtains to determine what actions to take based on the headers.

As an option there may be rate limiting of email flow between the first mail server and the second mail server . In this case rate limiting at the entity level for inbound email may be considered.

In one embodiment the on demand database provider may implement a new rate limiting that is different than daily limits that are configured by an entity. In this case there may be a private interface to update the count for an entity return and the current daily aggregate for the entity. The second mail server may cache these counts until it reaches some configurable limit. The second mail server may then transmit the update in addition to updating the cache information with the aggregate returned.

In one embodiment the second mail server may be responsible for receiving the inbound mail from the first mail server and forwarding it on to be processed by application programming interface API servers in the core. shows a method for processing an inbound message in accordance with one embodiment. As an option the present method may be implemented in the context of the functionality of . Of course however the method may be carried out in any desired environment. Further the aforementioned definitions may apply during the present description.

As shown the encoded part of the domain string in a received email is decoded. See operation . If the decoding is unsuccessful the email is discarded and the process is exited. The decoded domain substring is then decrypted to extract an entity or organization ID and a user ID. See operation . If the decrypting is unsuccessful the email is discarded and the process is exited.

The rate limiting cache for the entity is then examined. See operation . If the examination is unsuccessful the email is discarded and the process is exited. A user context is then retrieved to login to the API servers e.g. the API servers of . See operation . If the retrieving is unsuccessful the email is discarded and the process is exited.

The security criteria to be enforced and the location of the web service based on the email address are retrieved. See operation . If the retrieving is unsuccessful the email is discarded and the process is exited.

Additional authentication checking is then performed as enabled by an entity administrator. See operation . For example if an anti spam check is required which may optionally be automatically enforced for all users the anti spam check is performed. If an anti spam flag has been set by the gateway the email may be discarded and the process may be exited.

As another example if an anti virus check is required which may optionally be automatically enforced for all users the anti virus check is performed. If an anti virus flag has been set by the gateway the email may be discarded and the process may be exited.

Additionally if TLS or SPF validation is required the TLS and or the SPF validation may be performed. If either the TLS and or the SPF verification fails the email may be discarded and the process may be exited.

Once the administrator defined authentication is performed any additional authentication checking enabled by the end user is performed. See operation . All unsupported attachment types are then stripped. See operation . For example in one embodiment the attachment types may be limited to VCard and iCal. Once the unsupported attachment types are stripped the specified web service to process the email is invoked passing all supported attachments. See operation .

Environment is an environment in which an on demand database service exists. User system may be any machine or system that is used by a user to access a database user system. For example any of user systems can be a handheld computing device a mobile phone a laptop computer a work station and or a network of computing devices. As illustrated in and in more detail in user systems might interact via a network with an on demand database service which is system .

An on demand database service such as system is a database system that is made available to outside users that do not need to necessarily be concerned with building and or maintaining the database system but instead may be available for their use when the users need the database system e.g. on the demand of the users . Some on demand database services may store information from one or more tenants stored into tables of a common database image to form a multi tenant database system MTS . Accordingly on demand database service and system will be used interchangeably herein. A database image may include one or more database objects A relational database management system RDMS or the equivalent may execute storage and retrieval of information against the database object s . Application platform may be a framework that allows the applications of system to run such as the hardware and or software e.g. the operating system. In an embodiment on demand database service may include an application platform that enables creation managing and executing one or more applications developed by the provider of the on demand database service users accessing the on demand database service via user systems or third party application developers accessing the on demand database service via user systems .

The users of user systems may differ in their respective capacities and the capacity of a particular user system might be entirely determined by permissions permission levels for the current user. For example where a salesperson is using a particular user system to interact with system that user system has the capacities allotted to that salesperson. However while an administrator is using that user system to interact with system that user system has the capacities allotted to that administrator. In systems with a hierarchical role model users at one permission level may have access to applications data and database information accessible by a lower permission level user but may not have access to certain applications database information and data accessible by a user at a higher permission level. Thus different users will have different capabilities with regard to accessing and modifying application and database information depending on a user s security or permission level.

Network is any network or combination of networks of devices that communicate with one another. For example network can be any one or any combination of a LAN local area network WAN wide area network telephone network wireless network point to point network star network token ring network hub network or other appropriate configuration. As the most common type of computer network in current use is a TCP IP Transfer Control Protocol and Internet Protocol network such as the global internetwork of networks often referred to as the Internet with a capital I that network will be used in many of the examples herein. However it should be understood that the networks that the present invention might use are not so limited although TCP IP is a frequently implemented protocol.

User systems might communicate with system using TCP IP and at a higher network level use other common Internet protocols to communicate such as HTTP FTP AFS WAP etc. In an example where HTTP is used user system might include an HTTP client commonly referred to as a browser for sending and receiving HTTP messages to and from an HTTP server at system . Such an HTTP server might be implemented as the sole network interface between system and network but other techniques might be used as well or instead. In some implementations the interface between system and network includes load sharing functionality such as round robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server each of the plurality of servers has access to the MTS data however other alternative configurations may be used instead.

In one embodiment system shown in implements a web based customer relationship management CRM system. For example in one embodiment system includes application servers configured to implement and execute CRM software applications as well as provide related data code forms webpages and other information to and from user systems and to store to and retrieve from a database system related data objects and Webpage content. With a multi tenant system data for multiple tenants may be stored in the same physical database object however tenant data typically is arranged so that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant s data unless such data is expressly shared. In certain embodiments system implements applications other than or in addition to a CRM application. For example system may provide tenant access to multiple hosted standard and custom applications including a CRM application. User or third party developer applications which may or may not include CRM may be supported by the application platform which manages creation storage of the applications into one or more database objects and executing of the applications in a virtual machine in the process space of the system .

One arrangement for elements of system is shown in including a network interface application platform tenant data storage for tenant data system data storage for system data accessible to system and possibly multiple tenants program code for implementing various functions of system and a process space for executing MTS system processes and tenant specific processes such as running applications as part of an application hosting service. Additional processes that may execute on system include database indexing processes.

Several elements in the system shown in include conventional well known elements that are explained only briefly here. For example each user system could include a desktop personal computer workstation laptop PDA cell phone or any wireless access protocol WAP enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection. User system typically runs an HTTP client e.g. a browsing program such as Microsoft s Internet Explorer browser Netscape s Navigator browser Opera s browser or a WAP enabled browser in the case of a cell phone PDA or other wireless device or the like allowing a user e.g. subscriber of the multi tenant database system of user system to access process and view information pages and applications available to it from system over network . Each user system also typically includes one or more user interface devices such as a keyboard a mouse trackball touch pad touch screen pen or the like for interacting with a graphical user interface GUI provided by the browser on a display e.g. a monitor screen LCD display etc. in conjunction with pages forms applications and other information provided by system or other systems or servers. For example the user interface device can be used to access data and applications hosted by system and to perform searches on stored data and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above embodiments are suitable for use with the Internet which refers to a specific global internetwork of networks. However it should be understood that other networks can be used instead of the Internet such as an intranet an extranet a virtual private network VPN a non TCP IP based network any LAN or WAN or the like.

According to one embodiment each user system and all of its components are operator configurable using applications such as a browser including computer code run using a central processing unit such as an Intel Pentium processor or the like. Similarly system and additional instances of an MTS where more than one is present and all of their components might be operator configurable using application s including computer code to run using a central processing unit such as processor system which may include an lintel Pentium processor or the like and or multiple processor units. A computer program product embodiment includes a machine readable storage medium media having instructions stored thereon in which can be used to program a computer to perform any of the processes of the embodiments described herein. Computer code for operating and configuring system to intercommunicate and to process webpages applications and other data and media content as described herein are preferably downloaded and stored on a hard disk but the entire program code or portions thereof may also be stored in any other volatile or non volatile memory medium or device as is well known such as a ROM or RAM or provided on any media capable of storing program code such as any type of rotating media including floppy disks optical discs digital versatile disk DVD compact disk CD microdrive and magneto optical disks and magnetic or optical cards nanosystems including molecular memory ICs or any type of media or device suitable for storing instructions and or data. Additionally the entire program code or portions thereof may be transmitted and downloaded from a software source over a transmission medium e.g. over the Internet or from another server as is well known or transmitted over any other conventional network connection as is well known e.g. extranet VPN LAN etc. using any communication medium and protocols e.g. TCP IP HTTP HTTPS Ethernet etc. as are well known. It will also be appreciated that computer code for implementing embodiments of the present invention can be implemented in any programming language that can be executed on a client system and or server or server system such as for example C C HTML any other markup language Java JavaScript ActiveX any other scripting language such as VBScript and many other programming languages as are well known may be used. Java is a trademark of Sun Microsystems Inc. .

According to one embodiment each system is configured to provide webpages forms applications data and media content to user client systems to support the access by user systems as tenants of system . As such system provides security mechanisms to keep each tenant s data separate unless the data is shared. If more than one MTS is used they may be located in close proximity to one another e.g. in a server farm located in a single building or campus or they may be distributed at locations remote from one another e.g. one or more servers located in city A and one or more servers located in city B . As used herein each MTS could include one or more logically and or physically connected servers distributed locally or across one or more geographic locations. Additionally the term server is meant to include a computer system including processing hardware and process space s and an associated storage system and database application e.g. OODBMS or RDBMS as is well known in the art. It should also be understood that server system and server are often used interchangeably herein. Similarly the database object described herein can be implemented as single databases a distributed database a collection of distributed databases a database with redundant online or offline backups or other redundancies etc. and might include a distributed database or storage network and associated processing intelligence.

User system network system tenant data storage and system data storage were discussed above in . Regarding user system processor system A may be any combination of one or more processors. Memory system B may be any combination of one or more memory devices short term and or long term memory. Input system C may be any combination of input devices such as one or more keyboards mice trackballs scanners cameras and or interfaces to networks. Output system D may be any combination of output devices such as one or more monitors printers and or interfaces to networks. As shown by system may include a network interface of implemented as a set of HTTP application servers an application platform tenant data storage and system data storage . Also shown is system process space including individual tenant process spaces and a tenant management process space . Each application server may be configured to tenant data storage and the tenant data therein and system data storage and the system data therein to serve requests of user systems . The tenant data might be divided into individual tenant storage areas which can be either a physical arrangement and or a logical arrangement of data. Within each tenant storage area user storage and application metadata might be similarly allocated for each user. For example a copy of a user s most recently used MRU items might be stored to user storage . Similarly a copy of MRU items for an entire organization that is a tenant might be stored to tenant storage area . A UI provides a user interface and an API provides an application programmer interface to system resident processes to users and or developers at user systems . The tenant data and the system data may be stored in various databases such as one or more Oracle databases.

Application platform includes an application setup mechanism that supports application developers creation and management of applications which may be saved as metadata into tenant data storage by save routines for execution by subscribers as one or more tenant process spaces managed by tenant management process for example. Invocations to such applications may be coded using PL SOQL that provides a programming language style interface extension to API . A detailed description of some PL SOQL language embodiments is discussed in commonly owned U.S. Provisional Patent Application 60 828 192 entitled PROGRAMMING LANGUAGE METHOD AND SYSTEM FOR EXTENDING APIS TO EXECUTE IN CONJUNCTION WITH DATABASE APIS by Craig Weissman filed Oct. 4 2006 which is incorporated in its entirety herein for all purposes. Invocations to applications may be detected by one or more system processes which manage retrieving application metadata for the subscriber making the invocation and executing the metadata as an application in a virtual machine.

Each application server may be communicably coupled to database systems e.g. having access to system data and tenant data via a different network connection. For example one application server might be coupled via the network e.g. the Internet another application server might be coupled via a direct network link and another application server might be coupled by yet a different network connection. Transfer Control Protocol and Internet Protocol TCP IP are typical protocols for communicating between application servers and the database system. However it will be apparent to one skilled in the art that other transport protocols may be used to optimize the system depending on the network interconnect used.

In certain embodiments each application server is configured to handle requests for any user associated with any organization that is a tenant. Because it is desirable to be able to add and remove application servers from the server pool at any time for any reason there is preferably no server affinity for a user and or organization to a specific application server . In one embodiment therefore an interface system implementing a load balancing function e.g. F5 Big IP load balancer is communicably coupled between the application servers and the user systems to distribute requests to the application servers . In one embodiment the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms such as round robin and observed response time also can be used. For example in certain embodiments three consecutive requests from the same user could hit three different application servers and three requests from different users could hit the same application server . In this manner system is multi tenant wherein system handles storage of and access to different objects data and applications across disparate users and organizations.

As an example of storage one tenant might be a company that employs a sales force where each salesperson uses system to manage their sales process. Thus a user might maintain contact data leads data customer follow up data performance data goals and progress data etc. all applicable to that user s personal sales process e.g. in tenant data storage . In an example of a MTS arrangement since all of the data and the applications to access view modify report transmit calculate etc. can be maintained and accessed by a user system having nothing more than network access the user can manage his or her sales efforts and cycles from any of many different user systems. For example if a salesperson is visiting a customer and the customer has Internet access in their lobby the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.

While each user s data might be separate from other users data regardless of the employers of each user some data might be organization wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus there might be some data structures managed by system that are allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors the MTS should have security protocols that keep data applications and application use separate. Also because many tenants may opt for access to an MTS rather than maintain their own system redundancy up time and backup are additional functions that may be implemented in the MTS. In addition to user specific data and tenant specific data system might also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports news postings and the like that are sharable among tenants.

In certain embodiments user systems which may be client systems communicate with application servers to request and update system level and tenant level data from system that may require sending one or more queries to tenant data storage and or system data storage . System e.g. an application server in system automatically generates one or more SQL statements e.g. one or more SQL queries that are designed to access the desired information. System data storage may generate query plans to access the requested data from the database.

Each database can generally be viewed as a collection of objects such as a set of logical tables containing data fitted into predefined categories. A table is one representation of a data object and may be used herein to simplify the conceptual description of objects and custom objects according to the present invention. It should be understood that table and object may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example a CRM database may include a table that describes a customer with fields for basic contact information such as name address phone number fax number etc. Another table might describe a purchase order including fields for information such as customer product sale price date etc. In some multi tenant database systems standard entity tables might be provided for use by all tenants. For CRM database applications such standard entities might include tables for Account Contact Lead and Opportunity data each containing pre defined fields. It should be understood that the word entity may also be used interchangeably herein with object and table .

In some multi tenant database systems tenants may be allowed to create and store custom objects or they may be allowed to customize standard entities or objects for example by creating custom fields for standard objects including custom index fields. U.S. patent application Ser. No. 10 817 161 filed Apr. 2 2004 entitled CUSTOM ENTITIES AND FIELDS IN A MULTI TENANT DATABASE SYSTEM which is hereby incorporated herein by reference teaches systems and methods for creating custom objects as well as customizing standard objects in a multi tenant database system. In certain embodiments for example all custom entity data rows are stored in a single multi tenant physical table which may contain multiple logical tables per organization. It is transparent to customers that their multiple tables are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.

It should be noted that any of the different embodiments described herein may or may not be equipped with any one or more of the features set forth in one or more of the following published applications US2003 0233404 titled OFFLINE SIMULATION OF ONLINE SESSION BETWEEN CLIENT AND SERVER filed Nov. 4 2002 US2004 0210909 titled JAVA OBJECT CACHE SERVER FOR DATABASES filed Apr. 17 2003 now issued U.S. Pat. No. 7 209 929 US2005 0065925 titled QUERY OPTIMIZATION IN A MULTI TENANT DATABASE SYSTEM filed Sep. 23 2003 US2005 0223022 titled CUSTOM ENTITIES AND FIELDS IN A MULTI TENANT DATABASE SYSTEM filed Apr. 2 2004 US2005 0283478 titled SOAP BASED WEB SERVICES IN A MULTI TENANT DATABASE SYSTEM filed Jun. 16 2004 and or US2006 0206834 titled SYSTEMS AND METHODS FOR IMPLEMENTING MULTI APPLICATION TABS AND TAB SETS filed Mar. 8 2005 which are each incorporated herein by reference in their entirety for all purposes.

While the invention has been described by way of example and in terms of the specific embodiments it is to be understood that the invention is not limited to the disclosed embodiments. To the contrary it is intended to cover various modifications and similar arrangements as would be apparent to those skilled in the art. Therefore the scope of the appended claims should be accorded the broadest interpretation so as to encompass all such modifications and similar arrangements.

