---

title: Monitoring and updating state information of virtual devices to guest virtual machines based on guest virtual machine's probing policy
abstract: A computer-implemented method for sending information to guest systems within virtual machines may include receiving, from a guest system within a virtual machine hosted on a host system, a request for virtual device information about a virtual device which may inaccurately represent to the guest system a state of a physical storage device connected to the host system, gathering physical device information via the host system about the physical storage device connected to the host system, determining a mapping of the virtual device within the guest system to the physical storage device connected to the host system, correlating the physical device information with the mapping to determine accurate information about the virtual device and sending the accurate information about the virtual device from the host system to the guest system within the virtual machine. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09009706&OS=09009706&RS=09009706
owner: Symantec Corporation
number: 09009706
owner_city: Mountain View
owner_country: US
publication_date: 20130123
---
Virtualization is a widely used technology with many advantages. One physical machine can host many different virtual machines allowing users access to several operating systems at once. Virtual machines can be effectively sandboxed preventing errors from affecting the rest of the system. Virtual memory systems make complicated remote storage schemes easier to understand. Virtual machines may also facilitate the efficient use of underlying physical resources and or facilitate the efficient reconfiguration of computing resources with minimal disruption. With the growing popularity of cloud computing even more applications are making use of some kind of virtualization.

Unfortunately some of the very features that make virtualization an effective technique may also carry drawbacks. Because guest systems within virtual machines do not have direct access to physical devices these physical devices may be misrepresented to the guest system. Inaccurate information about physical devices may lead to guest systems making incorrect decisions causing otherwise avoidable errors and or inefficiencies. Accordingly the instant disclosure identifies and addresses a need for additional and improved systems and methods for sending information to guest systems within virtual machines.

As will be described in greater detail below the instant disclosure generally relates to systems and methods for sending information to guest systems within virtual machines by gathering physical information device via the host system and sending it to the guest system within the virtual machine.

In one example a computer implemented method for sending information to guest systems within virtual machines may include 1 receiving from a guest system within a virtual machine hosted on a host system a request for virtual device information about a virtual device which may inaccurately represent to the guest system a state of a physical storage device connected to the host system 2 gathering physical device information via the host system about the physical storage device connected to the host system 3 determining a mapping of the virtual device within the guest system to the physical storage device connected to the host system 4 correlating the physical device information with the mapping to determine accurate information about the virtual device and 5 sending the accurate information about the virtual device from the host system to the guest system within the virtual machine.

In one embodiment the accurate information about the virtual device may indicate a connectivity problem between the guest system and the physical storage device.

In one embodiment the computer implemented method may include moving in response to the connectivity problem the guest system to a different host system connected to the physical storage device that may not have the connectivity problem.

In one embodiment the computer implemented method may include receiving in response to sending the accurate information a request from the guest system requesting that the guest system be moved to a different host system connected to the physical storage device which may not have the connectivity problem.

In one embodiment the accurate information about the virtual device may indicate a media failure of the physical storage device.

In one embodiment the computer implemented method may include moving in response to the media failure the guest system to a different host system connected to a different physical storage device which may replicate the physical storage device affected by the media failure.

In one embodiment the physical device information about the physical storage device may include at least one of 1 a media type of the physical storage device 2 a logical unit type provided by the physical storage device 3 a native capability of the physical storage device and or 4 path availability information about a connection between the physical storage device and the guest system.

In one embodiment receiving the request for virtual device information may include receiving a probing policy from the guest system that may configure the host to periodically gather updated information about the physical storage device and or gathering the physical device information may include gathering the physical device information according to the probing policy.

In one embodiment the virtual device may inaccurately represent the state of the physical storage device by representing an input output path to the physical storage device as available when the input output path to the physical storage device may be unavailable.

In one embodiment a system for implementing the above described method may include 1 a receiving module programmed to receive from a guest system within a virtual machine hosted on a host system a request for virtual device information about a virtual device which may inaccurately represent to the guest system a state of a physical storage device connected to the host system 2 a gathering module programmed to gather physical device information via the host system about the physical storage device connected to the host system 3 a determination module programmed to determine a mapping of the virtual device within the guest system to the physical storage device connected to the host system 4 a correlation module programmed to correlate the physical device information with the mapping to determine accurate information about the virtual device 5 a sending module programmed to send the accurate information about the virtual device from the host system to the guest system within the virtual machine and 6 at least one processor configured to execute the receiving module the gathering module the determination module the correlation module and the sending module.

In some examples the above described method may be encoded as computer readable instructions on a computer readable storage medium. For example a computer readable storage medium may include one or more computer executable instructions that when executed by at least one processor of a computing device may cause the computing device to 1 receive from a guest system within a virtual machine hosted on a host system a request for virtual device information about a virtual device which may inaccurately represent to the guest system a state of a physical storage device connected to the host system 2 gather physical device information via the host system about the physical storage device connected to the host system 3 determine a mapping of the virtual device within the guest system to the physical storage device connected to the host system 4 correlate the physical device information with the mapping to determine accurate information about the virtual device and 5 send the accurate information about the virtual device from the host system to the guest system within the virtual machine.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The present disclosure is generally directed to systems and methods for sending information to guest systems within virtual machines. As will be explained in greater detail below by gathering physical storage device information via a host system and sending it to a guest system the guest system may receive far more accurate information than otherwise. This may allow the guest system to make better decisions about which actions to take. For example the guest system may have more accurate information about which physical storage devices are may be fully functional and may make better decisions about which physical storage devices to use.

The following will provide with reference to and detailed descriptions of exemplary systems for sending information to guest systems within virtual machines. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example and as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. computing device computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

In one embodiment one or more of modules from may when executed by at least one processor of computing device facilitate computing device in sending information to guest systems within virtual machines. For example and as will be described in greater detail below one or more of modules may cause computing device to sending information to guest systems within virtual machines. For example and as will be described in greater detail below receiving module may be programmed to receive from a guest system within a virtual machine hosted on computing device a request for virtual device information about a virtual device which may inaccurately represent to guest system a state of a physical storage device connected to computing device . Gathering module may be programmed to gather physical device information via computing device about physical storage device connected to computing device . Determination module may be programmed to determine a mapping of virtual device within guest system to physical storage device connected to computing device . Correlation module may be programmed to correlate physical device information with mapping to determine information about virtual device . Sending module may be programmed to send information about virtual device from computing device to guest system within virtual machine .

Computing device generally represents any type or form of computing device capable of reading computer executable instructions. Examples of computing device include without limitation virtual machines laptops tablets desktops servers cellular phones Personal Digital Assistants PDAs multimedia players embedded systems combinations of one or more of the same exemplary computing system in or any other suitable computing device.

As illustrated in at step one or more of the systems described herein may receive from a guest system within a virtual machine hosted on a host system a request for virtual device information about a virtual device which may inaccurately represent to the guest system a state of a physical storage device connected to the host system. For example at step receiving module may as part of computing device in receive from guest system within virtual machine hosted on computing device a request for virtual device information about virtual device which inaccurately represents to guest system a state of physical storage device connected to computing device .

As used herein the phrase virtual machine generally refers to a computing system platform that may not have direct correspondence to hardware of an underlying host machine. For example hardware of a host system may be abstracted to a virtual machine using a hypervisor or other virtualization software. A virtual machine may run a guest operating system and or various other software applications. Examples may include a system virtual machine running an operating system including systems such as WINDOWS XP MAC OS DEBAIN LINUX and or IBM AIX and or a process virtual machine designed to support a single process including processes such as the JAVA VIRTUAL MACHINE and or the .NET FRAMEWORK.

The phrase virtual device as used herein generally refers to any virtualized and or simulated representation of a physical device. Examples may include a Virtual Machine Disk VMDK Small Computer System Interface SCSI virtualizations EMC VPLEX and or file systems.

As used herein the term request generally refers to any attempt by a guest system to acquire information about a virtual device. In some examples the request may include an attempt by the guest system to access probe and or retrieve information from a virtual device. In these examples receiving module may receive the request by intercepting the request. For example receiving module may e.g. as a part of the host system identify an attempt by the guest system to probe the virtual device and intercept the attempt e.g. in order to supply a response to the probe that accurately represents a state of an underlying physical device . Additionally or alternatively the request may include a communication from the guest system targeted to the host system e.g. through an established guest host communication channel and or application programming interface . In some examples the request may originate directly from an application on the guest system.

Receiving module may receive the request in any of a variety of contexts. For example the guest system may include a dynamic multipathing system that requests information about one or more devices in order to select an I O path. As will be explained in greater detail below the systems and methods described herein may facilitate a correct and or optimal selection of an I O path by providing accurate information to the dynamic multipathing system.

In some embodiments receiving module may receive the request for the virtual device information by receiving a probing policy from the guest system that configures the host to periodically gather updated information about the physical storage device and gathering the physical device information may include gathering the physical device information according to the probing policy. Examples of a probing policy may include retrieve device information every hour retrieve device information every time a device is updated and or retrieve a certain subset of device information every ten minutes. One example of a probing policy is a restore daemon policy which may be configured to probe input output paths on recurring basis.

The phrase host system as used herein generally refers to any system which hosts a virtual machine. Examples may include physical devices and or virtual machines. In some examples a host system may include an I O domain configured to manage one or more hardware devices and or create an abstraction of one or more hardware devices. In some examples the host system may expose individual files to the guest system as devices.

The virtual device information that guest system may request may include any of a variety of information. For example the virtual device information may include device property information e.g. native capabilities of devices such as replication redundant storage etc. device connect and or disconnect events and or device error types.

In some examples virtual device may inaccurately represent the state of physical storage device by representing an input output path to physical storage device as available when the input output path to physical storage device may be unavailable. In some examples the physical storage device may have been disconnected but the virtual device may inaccurately represent the physical storage device as connected. In some examples the physical storage device may be suffering from connectivity problems within the input output path of which the virtual device may be unaware. In these examples if the guest system were aware of the connectivity problem it may be able to overcome the problem by using a different input output path.

In some examples an application within a virtual machine running an operating system may attempt to write some data to a disk. The write attempt to the physical disk may fail with a generic error message which may cause the virtual machine to represent the virtual disk as completely non functional when in fact the physical disk may be partially functional. The application may make a request for information about the specific error affecting the disk and the request may be received by an agent on the host system.

For example as illustrated in host system may be connected to physical storage device by both path and path . Path may be suffering from connectivity problem . In some examples virtual device may represent physical storage device as being unavailable because guest system may only be aware of path . However physical storage device may be available because it may also be connected by path which may not be affected by the connectivity problem.

As used herein the phrase connectivity problem generally refers to any error that may interfere with degrade slow down and or prevent a data transfer via an input output path. Some examples of connectivity problems may include a controller failure a port failure a cable failure and or a switch failure. In some examples the phrase connectivity problem may refer to an unreliable connection a connection with too little available bandwidth and or a connection with too few available paths.

In some examples virtual device may inaccurately represent the state of physical storage device by representing physical storage device as affected by a media error when physical storage device may not be affected by a media error but guest system may affected by a connectivity problem with physical storage device .

For example as illustrated in guest system may send a request to physical storage device via path and encounter connectivity problem . Because guest system may not receive information from host system about the nature of the error merely that the error has occurred guest system may inaccurately conclude that physical storage device may be affected by a media error. A media error cannot be solved by using a different path so guest system may not even attempt to use path . This may lead to the guest system making suboptimal decisions based on the inaccurate information that the physical storage device is unavailable.

As used herein the phrase media error generally refers to any error rendering a physical storage device unreadable. Some examples include device disconnects hard drive head crashes and or physical disk degradation.

Returning to at step one or more of the systems described herein may gather physical device information via the host system about the physical storage device connected to the host system. For example at step gathering module may as part of computing device in gather physical device information via computing device about physical storage device connected to computing device .

For example gathering module may gather input output path status information about the physical storage device and discover that one of the input output paths may be affected by a connectivity problem but that there are other input output paths which may not be affected by connectivity problems.

As used herein the phrase physical storage device generally refers to any non virtual device used to store data and or facilitate the storage of data. Some examples may include logical disks also known as logical units RAID systems storage area networks SANs and or devices connected to SANs hard drives and or solid state drives. Physical storage devices may be connected to host systems in any number of ways including fibre channels SCSI chains and or networks.

In some examples the physical device information about the physical storage device may include 1 a media type of the physical storage device 2 a logical unit type provided by the physical storage device 3 a native capability of the physical storage device and or 4 path availability information about a connection between the physical storage device and the guest system.

At step one or more of the systems described herein may determine a mapping of the virtual device within the guest system to the physical storage device connected to the host system. For example at step determination module may as part of computing device in determine a mapping of virtual device within guest system to physical storage device connected to computing device .

For example determination module may determine that the physical disk connected to the host system may be represented by a specific virtual disk within the guest system on the virtual machine. The mapping may include a mapping of one or more virtual devices to one or more physical devices. Additionally or alternatively the mapping may include a mapping of one or more virtual devices to one or more logical units of storage e.g. to one or more files .

At step one or more of the systems described herein may correlate the physical device information with the mapping to determine accurate information about the virtual device. For example at step correlation module may as part of computing device in correlate physical device information with mapping to determine information about virtual device .

For example correlation module may correlate information that there is a connectivity problem with one input output path to the physical disk but not with other input output paths with the mapping from the physical disk to the specific virtual disk to determine that the specific virtual disk is functional and reachable.

In some examples the accurate information about the virtual device may indicate a connectivity problem between the guest system and the physical storage device. In these examples the computer implemented method may further include moving in response to the connectivity problem the guest system to a different host system connected to the physical storage device that may not have the connectivity problem.

For example as illustrated in host system may be connected to physical storage device via network . The path between host system and physical storage device may be affected by connectivity problem . Host system may also be connected to network and may not be experiencing a connectivity problem with physical storage device . Moving module may move guest system to host system . In some embodiments this may be accomplished by moving the entirety of virtual machine . In some embodiments this may include using systems such as VMWARE HIGH AVAILABILITY VMHA and or VMWARE STORAGE VMOTION.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a Wide Area Network WAN a Local Area Network LAN a Storage Area Network SAN a Personal Area Network PAN the Internet Power Line Communications PLC a cellular network e.g. a Global System for Mobile Communications GSM network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections. In one embodiment network may facilitate communication between computing host system host system physical storage device and or physical storage device .

In some examples the accurate information about the virtual device may indicate a media failure of the physical storage device. In these examples the computer implemented method may further include moving in response to the media failure the guest system to a different host system connected to a different physical storage device which may replicate the physical storage device affected by the media failure.

For example as illustrated in host system may be connected to physical storage device via network . Host system may be connected to physical storage device and both of these may also be connected to network . Physical storage device may replicate physical storage device . Moving module may move guest system to host system . In some embodiments moving module may move the guest system to the host system by moving the entirety of virtual machine . In some embodiments this may include using a site recovery manager SRM .

Returning to at step one or more of the systems described herein may send the accurate information about the virtual device from the host system to the guest system within the virtual machine. For example at step sending module may as part of computing device in send information about virtual device from computing device to guest system within virtual machine .

For example sending module may send the information that the specific virtual disk is functional and reachable to the application within the virtual machine. In this example the guest system may repeat its original action to write data to the disk this time using an input output path not affected by the connectivity problem. Other examples of actions the guest system may take may include modifying the original action abandoning the original action displaying information to the user sending a new request for information sending a request for a new action and or repeating the original action without modification.

In some examples the computer implemented method may further include receiving in response to sending the accurate information a request from the guest system requesting that the guest system be moved to a different host system connected to the physical storage device which may not have the connectivity problem. For example as illustrated in guest system may request to be moved from host system to host system which is not affected by connectivity problems with physical storage device .

In examples where the moving module may move the guest system to a different host machine the accurate information may include information about the devices connected to the new host machine.

In some examples the accurate information about the virtual device may indicate that the host system is not conforming to a service level specification of the guest system. For example the guest system may have a service level specification requiring a certain level of connectivity with physical storage devices. The accurate information may indicate that current levels of connectivity are below the level specified in the service level specification. Some examples of what the level of connectivity may represent include the number of available paths the total bandwidth of the available paths the number of physical storage devices available and or the total storage capacity of the available physical storage devices.

For example virtual machine may not be conforming to a service level specification for guest system because there may be insufficient bandwidth available between guest system and physical storage device . In some examples guest system may use moving module to move to host system which may have connections of sufficient bandwidth to physical storage device to conform to the service level specification for virtual machine .

As explained above in connection with method in a guest system within a virtual machine may make a request for information about a virtual device which may be inaccurately representing the state of a physical storage device connected to a host machine.

An agent on the host machine may gather information about the physical storage device and correlate the information with a mapping of the physical storage device to the virtual device to determine accurate information about the virtual device. The agent may send the accurate information to the guest system allowing the guest system to make more accurate decisions.

Computing system broadly represents any single or multi processor computing device or system capable of executing computer readable instructions. Examples of computing system include without limitation workstations laptops client side terminals servers distributed computing systems handheld devices or any other computing system or device. In its most basic configuration computing system may include at least one processor and a system memory .

Processor generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation Random Access Memory RAM Read Only Memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an Industry Standard Architecture ISA Peripheral Component Interconnect PCI PCI Express PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure .

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface .

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation Small Computer System Interface SCSI host adapters Universal Serial Bus USB host adapters Institute of Electrical and Electronics Engineers IEEE 1394 host adapters Advanced Technology Attachment ATA Parallel ATA PATA Serial ATA SATA and External SATA eSATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a solid state drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable storage medium. The phrase computer readable storage medium generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable storage media include without limitation transmission type media such as carrier waves and non transitory type media such as magnetic storage media e.g. hard disk drives and floppy disks optical storage media e.g. Compact Disks CDs or Digital Video Disks DVDs electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable storage medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable storage medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an Application Specific Integrated Circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Client systems and generally represent any type or form of computing device or system such as exemplary computing system in . Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a WAN a LAN a PAN or the Internet. In one example client systems and or and or servers and or may include all or a portion of system from .

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent Network Attached Storage NAS devices configured to communicate with servers and using various protocols such as Network File System NFS Server Message Block SMB or Common Internet File System CIFS .

Servers and may also be connected to a Storage Area Network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network .

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for sending information to guest systems within virtual machines.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

In some examples all or a portion of exemplary system in may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

In various embodiments all or a portion of exemplary system in may facilitate multi tenancy within a cloud based computing environment. In other words the software modules described herein may configure a computing system e.g. a server to facilitate multi tenancy for one or more of the functions described herein. For example one or more of the software modules described herein may program a server to enable two or more clients e.g. customers to share an application that is running on the server. A server programmed in this manner may share an application operating system processing system and or storage system among multiple customers i.e. tenants . One or more of the modules described herein may also partition data and or configuration information of a multi tenant application for each customer such that one customer cannot access data and or configuration information of another customer.

According to various embodiments all or a portion of exemplary system in may be implemented within a virtual environment. For example modules and or data described herein may reside and or execute within a virtual machine. Additionally or alternatively the modules and or data described herein may reside and or execute within a virtualization layer. As used herein the phrase virtualization layer generally refers to any data layer and or application layer that overlays and or is abstracted from an operating system environment. A virtualization layer may be managed by a software virtualization solution e.g. a file system filter that presents the virtualization layer as though it were part of an underlying base operating system. For example a software virtualization solution may redirect calls that are initially directed to locations within a base file system and or registry to locations within a virtualization layer.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable storage media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules recited herein may receive physical device information to be transformed transform the physical device information output a result of the transformation to a correlation module use the result of the transformation to determine virtual device information and store the result of the transformation in a guest system. Additionally or alternatively one or more of the modules recited herein may transform a processor volatile memory non volatile memory and or any other portion of a physical computing device from one form to another by executing on the computing device storing data on the computing device and or otherwise interacting with the computing device.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms a or an as used in the specification and claims are to be construed as meaning at least one of. In addition for ease of use the words including and having as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

