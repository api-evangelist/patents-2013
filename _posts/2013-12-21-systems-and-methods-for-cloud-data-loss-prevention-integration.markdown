---

title: Systems and methods for cloud data loss prevention integration
abstract: A system, method, and computer readable medium is provided to provide an integrated storage system. For example, an embodiment may detect, by an enterprise computer system, an activity notification from a cloud service that stores data on behalf of an enterprise. The activity notification may specify a file name involved in an activity performed by the cloud service (e.g., creating or modifying a file). The enterprise computer system may then download a file (or contents thereof) from the cloud service using the file name specified by the activity notification. After downloading the file, the enterprise computer system may analyze the file against a data loss prevention rule. Based on an outcome from the data loss prevention rule, the enterprise computer system may communicate an action response to the cloud service. The action response may direct the cloud service to perform an action on the file stored by the cloud service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460405&OS=09460405&RS=09460405
owner: PAYPAL, INC.
number: 09460405
owner_city: San Jose
owner_country: US
publication_date: 20131221
---
This application claims the benefit of U.S. Provisional Application No. 61 886 430 filed Oct. 3 2013 entitled Cloud Data Loss Prevention Integration which is herein incorporated by reference in its entirety.

This application relates to data processing. In particular example embodiments may relate to systems and methods for integrating a cloud service with information systems of an enterprise.

Traditional cloud service providers may provide a cloud service to a user such as an enterprise for storing data on computer resources hosted by the cloud service provider. In this way a company s data is stored by and accessible from multiple distributed and connected resources that comprise a cloud. Cloud storage can provide the benefits of greater accessibility and reliability rapid deployment strong protection for data backup archival and disaster recovery purposes and lower overall storage costs as a result of not having to purchase manage and maintain expensive hardware.

There are three traditional types of cloud storage systems. The first type of cloud storage system may be referred to as public cloud storage. In public cloud storage an enterprise and a storage service provider are separate entities. The computational resources used to store data are managed by the storage service provider and are not part of the enterprise s data center. Thus the cloud storage provider fully manages the computational resources used to manage the enterprise s data stored within the cloud storage system.

The second type of cloud storage system may be referred to as private cloud storage. In private cloud storage the enterprise and cloud storage provider are integrated within the enterprise s data center. This may mean that the storage provider has infrastructure within the enterprise s data center. Private cloud storage helps resolve the potential for security and performance concerns while still offering the advantages of cloud storage.

The third type of cloud storage system may be referred to as hybrid cloud storage. In hybrid cloud storage some critical data resides in the enterprise s private cloud while other data is stored and accessible from a public cloud storage provider. Thus hybrid cloud storage systems may be some combination of public and private cloud storage systems.

Currently enterprises adopting a cloud strategy for their storage systems generally adopt one or more of these three types of cloud storage systems depending on the needs of the enterprise.

Although example embodiments have been described with reference to specific examples it is to be appreciated that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

Example embodiments may relate to integrating a data loss prevention DLP policy or policies of an enterprise with data stored on a cloud service. As is discussed below a DLP policy may be a process that identifies confidential data e.g. credit card numbers social security numbers and the like tracks that data as it moves through and out of enterprise or prevents unauthorized disclosure of data by creating and enforcing disclosure policies. However in some cases an enterprise or employees thereof may store data in a cloud service such as Box.com . Example embodiments may then relate to an enforcing a DLP policy where data is stored outside the enterprise by a cloud service.

For example an example embodiment may detect by an enterprise computer system an activity notification from a cloud service that stores data on behalf of an enterprise. The activity notification may specify a file name involved in an activity performed by the cloud service e.g. creating or modifying a file . The enterprise computer system may then download a file or contents thereof from the cloud service using the file name specified by the activity notification. After downloading the file the enterprise computer system may analyze the file against a data loss prevention rule. Based on an outcome from the data loss prevention rule the enterprise computer system may communicate an action response to the cloud service. The action response directing the cloud service to perform an action on the file stored by the cloud service.

Accordingly an example embodiment may use an event driven system where the cloud service initiates a DLP process by notifying the enterprise computer systems when an activity is performed on a file of the enterprise but stored by the cloud service. In other example embodiments discussed in greater detail below the computer systems of an enterprise may initiate a process of analyzing a file against one or more DLP rules. An enterprise may initiate the process of analyzing a file against one or more DLP rules to perform on demand scans of a user share.

The enterprise may be a computer system operated by an entity e.g. a business organization company person or any other suitable entity that manages processes stores or communicates data. To fulfill its data storage needs in full or in part the enterprise may be communicatively coupled to one or more of the cloud services A C.

The cloud services A C may provide cloud storage services to users e.g. employees departments teams etc. of the enterprise. Accordingly the cloud services A C may provide cloud services where data owned by the enterprise is stored at least partially on computational resources managed by the cloud services A C. Examples of providers of cloud services for storing data include BOX.COM SKYDRIVE YAMMER SALESFORCE and DROPBOX to name a few.

In addition to general storage needs the enterprise may deploy a data loss prevention policy to address data loss concerns. DLP as used herein is broadly defined as any solution or process that identifies confidential data tracks that data as it moves through and out of the computer systems of the enterprise or prevents unauthorized disclosure of data by creating and enforcing disclosure policies. In some embodiments DLP may involve an on demand or a schedule based solution that scans data at data storage locations to identify confidential data that may be stored at those data storage locations and if so configured to take appropriate remedial action. Examples of confidential data may include social security numbers financial data e.g. credit card number magnetic stripe data and the like username and password pairs proprietary information licensed data e.g. copyrighted works or any other data that may compromise the enterprise if the data is misappropriated.

With respect to DLP may be provided for the enterprise through an integration of components or modules of the enterprise and the cloud services A C. For example as shown in the enterprise may include a job scheduler a DLP backend server and a DLP engine while the cloud services A C may each include a notification port. See for example notification ports A C.

The job scheduler may be a computer implemented module configured to serve as a listener service for the cloud services A C to contact and issue notifications concerning data e.g. file uploads and modifications and responsive to receiving a notification the job scheduler may add a job corresponding to the activity notification in a job queue. To receive the notifications issued by the cloud services A C the job scheduler may provide an API based on industry standard application programming interface API types and common protocols such as Hypertext Transfer Protocol HTTP HTTP Secure HTTPS Representational State Transfer REST Simple Object Access Protocol SOAP etc. In some cases the notifications sent from the cloud services A C may be protected via a secure communication protocol such as Secure Socket Layer SSL Transport Layer Security TLS . Accordingly the job scheduler may be configured to communicate using these secure communication protocols. Further the job scheduler may be configured to enforce authentication authorization requirements at the API level through support of industry standards like OAuth SSL TLS Security Assertion Markup Language SAML .

The DLP backend server may be a computer implemented module configured to process jobs from the job scheduler and then communicate an action response to the cloud service. For example as part of processing a job from the job scheduler the DLP backend server may identify a file corresponding to the job obtain the identified file from the cloud service and communicate the file to the DLP engine for DLP analysis. After the DLP engine completes DLP analysis the DLP backend server may communicate an action response back to the cloud service. The action response may direct the cloud service to perform a specified action on the file stored in the cloud service.

The DLP engine may be a computer implemented module configured to verify files against one or more DLP rules. A DLP rule may be data and or logic that specify conditions when a file violates a DLP policy of the enterprise. The DLP rule may also specify an action that is to be performed by the cloud service in response to a detected violation of one or more DLP rules. By way of example and not limitation such actions may include removing the file from the cloud service messaging the enterprise user concerning the violation removing any backup or revisions of the file which may be in violation or any other suitable operation involving the file or the enterprise user.

With respect to the cloud services A C the notification ports A C may each be computer implemented modules configured to communicate activity notifications to the job scheduler and receive notification responses from the backend server . For example the cloud service A may be configured to communicate via the notification port A an activity notification to the job scheduler whenever a file belonging to the enterprise is created or modified in the cloud storage service offered by the cloud service A. An activity notification may be a data message that includes any number of the following fields 

In addition to sending activity notifications to the enterprise e.g. the job scheduler the notification port A may also be configured to receive notification responses communicated by the backend server . In some cases the notification responses may include some or all of the fields specified by the activity notification. For example the notification response may include one or more fields specifying a cloud service ID file ID an enterprise user ID a file path a file activity and an action. The contents or values of these fields may be the values specified by the activity notification to which the notification response corresponds. However some fields may be updated by the backend server to specifying a remedial action specified by the DLP engine . The remedial actions may be specified by the action field of the notification response. As described above examples of actions may include but are not limited to removing the file from the cloud service messaging the enterprise user concerning the violation removing any backup or revisions of the file which may be in violation or any other suitable operation involving the file or the enterprise user.

At step the cloud service A pushes an activity notification to the job scheduler . The activity notification may include fields that include data that indicate that a file maintained by the cloud service A has been uploaded or changed by an enterprise user. As described above the notification may include among other things data fields that specify a cloud service identifier a file identifier an enterprise user identifier a file path or a file activity. It is to be appreciated that the activity notification may include data that is standardized between the cloud consumer and one or more of the cloud services A C. Further this notification may be communicated in a trusted and secure manner utilizing for example SSL certificates.

As part of step the job scheduler verifies and queues the activity notification in the form of a job to be retrieved by the backend server . As described above the activity notification and in turn the job includes all the basic detail required to retrieve the file from the cloud service . It is to be appreciated that the terms job and activity notification may in some embodiments refer to the same data object while in other embodiments these terms may refer to different data objects where a job is a data type with one or more data fields that derive values from a corresponding activity notification.

At step backend server pulls the job from the job scheduler and at step the back end server connects to cloud service A to obtain e.g. by pulling or downloading the file from cloud service . In some cases the backend server may pull the file using the data fields specified by the activity notification e.g. the file ID the cloud service ID the file path and the like . It is to be appreciated that some embodiments may use trusted and secure communication protocols such as SSL certification to request and receive the file from the cloud service

At step the backend server communicates via for example using a communication protocol such as Internet Content Adaptation Protocol ICAP the file to DLP engine for DLP analysis. In some embodiments step may further involve the backend server erasing the contents of the file from any storage device that may have been used to temporarily store the file.

At step the DLP engine analyzes the file and the file contents against one or more DLP rules and selects an action response. In some cases a DLP rule may be data or logic that specifies a condition and a triggered response. If the content of the file and or metadata of the file matches the condition specified by the DLP rule then the DLP engine may communicate the action response to the backend server . If however the file e.g. the content or metadata thereof does not match the condition of any of the DLP rules the DLP engine may select a no action action response.

At step the backend server receives a DLP analysis response from the DLP engine that specifies the selected action response. Responsive to receiving the selected action response the backend server inserts the selected action response into a notification response to the activity notification previously received at step . As described above a notification response be a data message derived from the activity notification. Accordingly step may simply involve among other things updating the action field of the activity notification with a value corresponding to the selected DLP action.

At step the backend server connects to the cloud service A through the notification port A and pushes a notification response which may contain metadata and the action to the notification port

At step the cloud service performs a remediation action corresponding to the value of the action field of the notification response. For example the cloud service may delete the file corresponding to the activity represented by the activity notification.

It is to be appreciated the steps shown in are illustrative of an example embodiment and should not be interpreted as limiting the scope of other embodiments contemplated by this disclosure. For example it is to be appreciated that the term step should not be interpreted as requiring any particular sequence or order of operation. It is to be appreciated further that provides specific references to pushing and pulling operations by way of example and not by way of limitation. Thus this disclosure contemplates that other embodiments may use other suitable sequences of pushing or pulling data.

The method may begin at operation when the cloud service provider A communicates an activity notification to the job scheduler . The activity notification may represent a file system operation performed by the cloud service with respect to a given file or directory. As described above in some cases the activity notification may include data specifying the cloud service provider a filename corresponding to the activity a file path an activity identifier an enterprise user ID and the like. As illustrates operation pushes the activity notification to the job scheduler however other embodiments may operate such that the job scheduler pulls the activity notification from the notification port A of the cloud service A.

At operation the job scheduler may receive the activity notification communicated by the cloud service A. Upon receiving the activity notification the job scheduler may verify that the activity notification was sent from a trusted source. In some embodiments a trusted source is verified through a certificate used to establish a secure communication e.g. via SSL TLS . It is to be appreciated that in other embodiments secure tokens that are passed along with the communication can be used for authentication.

At operation the job scheduler may verify the data fields of the activity notification. For example the job scheduler may verify the data fields of the activity notification by determining whether one or more of the data fields include invalid values. For example where the activity notification is missing a file name the job scheduler may signal that one or more data fields from the activity notification are invalid. As another example if the activity notification includes a directory path in an incorrect format the job schedule may signal that the directory path is incorrect and in some cases may specify an expected format.

If one or more of the data fields from the activity notification are invalid the job scheduler at operation may communicate an error message to the cloud service A. The error message may include a description that identifies which data field is invalid and why that data field is invalid. At operation the cloud service A may resolve the error by for example entering information missing from the original submission.

Returning back to operation if on the other hand the job scheduler determines that the data fields are instead valid the job scheduler adds at operation a job representing the activity notification to a job scheduler or any other suitable data structure that maintains a collection of jobs that are to be processed by the DLP engine . The job may have one or more of the data fields specified by the activity notification.

At operation the backend server obtains the job from the job scheduler . Then at operation the backend server may obtain the file involved in the detected activity from the cloud service . In some embodiments obtaining the file from the cloud service may involve the backend server parsing data from the job and then using the data to access the file through the file system interface exposed by the cloud service A. For example the backend server may communicate a file request to the cloud service A where the file request may include among other things a filename a file path an enterprise user ID and the like. Using information from the file request the cloud service A may at operation send the file or files to the backend server .

Operation may begin the DLP analysis phase. For example at operation the backend server may pass the file or files to the DLP engine for DLP analysis. Once the DLP engine receives the file or files the backend server may delete the file or files from storage. Thus the file or files obtained from the backend server from the cloud server A are only maintained in memory for a limited time.

Once the DLP engine receives the file or files from the backend server the DLP engine may then analyze the file or files based on one or more DLP rules. This is shown as operation . As described above an example DLP rule may specify a condition in which a file may violate a policy of the enterprise. A DLP rule may further specify an action that the cloud service A is to perform in response to detecting that the file or files violates a policy of the enterprise. Example embodiments of DLP rules may include data or logic configured to identify confidential data such as social security numbers financial data e.g. credit card number magnetic stripe data and the like username and password pairs proprietary information licensed data e.g. copyrighted works or any other data that may compromise the enterprise if the data is misappropriated.

At operation the backend server receives the selected action from the DLP engine . In some cases the selected action may be received in a way that the selected action is mapped back to the job used to analyze the file passed to the DLP engine at operation . For example passing the file to the DLP engine may be a function call that blocks on the result e.g. the selected action . In other cases the selected action may be communicated to the backend server with an identifier mapped to the message that sent the file to the DLP engine an identifier mapped to the job corresponding to the file an identifier mapped to the activity notification or any other message.

At operation the backend server then generates a notification result that is then communicated to the cloud service A. The notification result may include the action selected by the DLP engine . The notification result may also include one or more data fields specified by the activity notification such as data fields that specify a filename a file path an enterprise user ID and the like.

At operation the cloud service A receives the notification result from the backend server . Then at operation the cloud service A identifies the selected action from the notification result and then performs the selected action on the file that initiated the activity notification. For example the cloud service A may remove the file specified by the notification result or may alert the user of improper activity. In some cases after the cloud service A performs the selected action the cloud service may notify the enterprise that the selected action was performed. This is shown as operation .

As shows the cloud service A the job scheduler the backend server and the DLP engine may each generate one or more reports as part of performing the method . For example the cloud service A may be configured to generate a cloud service report that tracks and reports on the number of file actions performed as may be organized according to the type of actions. For example the cloud service report may include data representing that X number of files were removed X warnings were generated for a user and so forth.

The job scheduler may be configured to generate a job scheduler report that tracks and reports on one or more of the number of activity notifications received possibly over a given time period number of jobs currently queued number of jobs processed over a given time period number of non compliant notifications and the like. In some embodiments the job scheduler may generate the job scheduler report such that the data is organized according to various types of data such as a cloud service identifier an enterprise user a file a type of non compliant error in an activity notification and so forth.

The backend server may be configured to generate a service report that tracks and reports on one or more of the number of file activities actions generated and errors. In some embodiments the backend server may generate the service report such that the data is organized according to user ID file name action type error type and the like.

The DLP engine may be configured to generate a DLP report that tracks and reports on one or more of the number of incidents the users the cloud service provider files activity types and the like.

It is to be appreciated that the method shown in may be used by some embodiments to enforce DLP policies in a system that utilizes a cloud service to store data files and content. In some cases some embodiments may perform the method in cases where the enterprise seeks to limit the computer resources used to enforce a DLP policy. Such may be the case because the computer systems of the enterprise are notified when file operations are performed on files that may trigger DLP analysis.

So far much of this disclosure has focused on an event based approach where a cloud service sends activity notifications to initiate an enterprise s DLP process for files stored by the cloud service. However this disclosure further contemplates that in some cases an enterprise may initiate the enterprise s DLP process for files stored in a cloud service. For example some embodiments may operate such that the enterprise initiates the DLP process by mounting the user shares and then running scans on the mounted user shares. In some cases these scans may be performed on demand or scheduled to run periodically e.g. daily weekly biweekly monthly and so forth . An enterprise driven approach is now described.

At step the enforce server facilitates the customization of existing discover scan tasks or development of new discover scans tasks. For example the enforce server may provide one or more user interfaces UIs for a DLP administrator to add a user share to a list of user shares define or otherwise select DLP rules to run as part of the discover scan view incident reports schedule or request a discover scan and the like.

At step the enforce server deploys discover scan tasks to the appropriate DLP discover server for execution of the discover scan tasks. In some cases the enterprise may include multiple DLP discover servers that are configured to distribute and load balance the discover scan tasks executed by the integrated storage system .

At step the DLP discover server mounts a first user share in the discover scan task. Mounting the first user share makes the user share accessible through the file system of the operating system executing on the DLP discover server . In some cases the DLP discover server may mount the user share using WebDAV functionality exposed by the cloud service A. WebDAV short for Web based Distributed Authoring and Versioning is an Internet Engineering Task Force IETF standard set of platform independent extensions to HTTP that allows users to collaboratively edit and manage files on remote web servers. WebDAV features Extensible Markup Language XML properties on metadata locking which prevents authors from overwriting each other s changes namespace manipulation and remote file management.

At step after the DLP discover server mounts the user share the DLP discover server pulls files from the user share on the cloud service A and inspects the files against configured policies and rules to generate an incidents report as appropriate.

At step after inspecting the files against the configured policies and rules the DLP discover server unmounts the user share then loops back to step to mount the next share in the list. In some embodiments the DLP discover server performs one or more tests to verify that the old user share has successfully unmounted before attempting to mount the next share in the list.

At step as incidents are detected by the DLP discover server they are sent to an incidents database and are viewable from the enforce server for incidents review and remediation as necessary.

The method may begin at operation when the enforce server detects that a discover scan task is scheduled to execute. For example a DLP administrator may have created a discover scan task to scan a user share stored within the cloud service A. In some cases the discover scan task may be associated with a start time. Thus as part of operation the enforce server may compare a clock to the specified start time for the discover scan task to detect that the discover scan task is scheduled to execute. In other cases the DLP administrator may merely request on demand that the discover scan task be executed. Thus as part of operation the enforce server may receive a request to run a discover scan task to detect that a discover scan task is scheduled to execute.

Responsive to detecting that the discover scan task is scheduled to execute the enforce server may at operation distribute the discover scan task to the DLP discover server . In some cases the discover scan task may be communicated through the internal network of the enterprise.

At operation the DLP discover server receives the discover scan task. The DLP discover server may queue the discover scan task using any number of data structures and scheduling algorithms. For clarity of description the discover scan task may be queued in first in first out queue. In other cases the discover scan task may be queued using a priority weighting scheduling algorithm.

At operation the DLP discover server may initialize the discover scan task by loading the list of user shares to scan. Loading the list of user shares may involve the DLP discover server parsing the discover scan task to identify the user shares to be scanned as part of executing the discover scan task.

At operation the DLP discover server may send a mount request to the cloud service A to request that a first user share listed in the discover scan task be mounted. In some embodiments sending the mount request to the cloud service A may involve the DLP discover server parsing the discover scan task to identify the first user share task. The user share task may include data fields specifying authorization authentication credentials a cloud service identifier a user share identifier and the like. From the data fields specified by the first user share task the DLP discover server may generate a WebDAV call to mount the user share where the WebDAV call to mount the user share may include one or more fields specified by the first user share task such as the credentials. The WebDAV call may then be communicated to the cloud service corresponding to the cloud service identifier of the first user scan task.

For the purpose of description and not limitation an example of the mount request sent to the cloud service A may be expressed using the following or similar mount command mount.davfs uid userID https cloudserviceID.com localDir. mount.davfs may be an operating system command to mount a user share on a local filesystem used by the operating system of the DLP discover server . uid userID may be a name value pair that specifies the user of the user share. The userID portion of the name value pair may be specified in the user share task in a userID field. https cloudserviceID.com may be a parameter of the mount request that identifies the cloud service e.g. https cloudserviceID.com . localDir may be a parameter that specifies the mountpoint where the WebDAV resource is mounted on. localDir may be represented as an absolute or relative path.

Upon receiving the mount request the cloud service A may verify the credentials and the permissions of the user as may be sent in the mount command. This is shown as operation . At decision the cloud service A may determine whether the credentials are valid. If not the cloud service A may at operation notify the mount command failed. Otherwise the cloud service A performs decision and determines whether the user has permission to access the user share. If the user does not have access permission to the user share the cloud service A may notify the DLP discover server that there was an error in the permission sent via the mount command. This is shown as operation . If on the other hand the user does have permission to access the user share the cloud service A may at operation allow the DLP discover server to mount the user share in the local filesystem of the DLP discover server .

The DLP discover server may then begin scanning the user share at operation when the DLP mounts the user share. Operation may involve the DLP discover server receiving an indication that the mount command completed successfully.

Once the DLP discover server successfully mounts the user share in the local filesystem of the DLP discover server the DLP discover server at operation pulls the files stored in the user share of the cloud service A. Pulling the files stored in the user share of the cloud service A may involve the DLP discover server issuing filesystem commands to identify files and to read the contents of the identified files.

At operation the DLP discover server may analyze the files obtained from the user share against the DLP rules. In some cases the user share task or the discover scan task may include one or more data fields specifying the DLP rules that are to be used in the scan. In such cases the DLP rules may be limited to those specified by the user share task or the discover scan task. In some embodiments the DLP discover server may select the DLP rules that are to be run in the scan. For example the DLP discover server may maintain a collect of DLP rules that are run against all files analyzed at operation .

Based on the analysis of the files of the user share against the DLP rules the DLP discover server may detect one or more violations. This is shown as operation . Also part of operation the DLP discover server may generate incidents. Incidents may be records that characterize a violation of a DLP rule. Such incidents may specify the user e.g. user identifier the file name the cloud service e.g. a cloud service identifier a directory to the file data representing the violation a time stamp an identifier associated with the user share task or the discover scan task. The incidents are stored in the incident database at operation .

At decision the DLP discover server determines whether all the files in the user share selected at operation have been scanned. If yes the DLP discover server at operation unmounts the user share otherwise the DLP discover server continues the method by executing operation and subsequent operations again.

After unmounting the user share at operation the DLP discover server determines at decision whether the user share has been successfully unmounted from the local filesystem. If the user share has not be successfully unmounted from the local filesystem the DLP discover server may continue the method at operation otherwise the DLP discover server may determine at decision whether there are more user shares that are to be scanned as may be indicated in the discover scan task. If the DLP discover server determines that there are no more user shares to be scanned the DLP discover server signals that the scan is complete. This is shown as operation . Signaling that the scan is complete may involve the DLP discover server sending a message to the enforce server that the scan is complete. The message may indicate that the scan completed successfully or with incidents. If the DLP discover server determines that there are more user shares to be scanned the DLP discover server may continue the method at operation .

As shows at operation the enforce server may generate an incident report that summarizes the incidents detected during the execution of the discover scan task. For example in some cases the incident report may include data found or otherwise derived from the incident records stored in the incident database. The incident report may organize data found in the incident records based on a user identifier an incident type a file name directory remedial action and the like.

It is to be appreciated that the method shown in may be used by some embodiments to enforce DLP policies in a system that utilizes a cloud service to store data files and content. In some cases some embodiments may perform the method in cases where the enterprise seeks to limit the DLP functionality needed by the cloud service to support the enforcement of the enterprise s DLP policy. For example in some cases the enterprise system may use WebDAV functions to mount the user share download the files and then perform scans on the downloaded files.

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a user interface UI navigation device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The software may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. HTTP .

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention or that is capable of storing encoding or carrying data structures utilized by or associated with such a set of instructions. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in example embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Furthermore the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

