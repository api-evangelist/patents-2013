---

title: Volume redirection
abstract: Exemplary systems and methods enable a user of a mobile device that is communicatively coupled to a remote device to adjust the audio output volume level of an application running on the remote device using audio volume adjustment inputs on the mobile device. The application produces an audio output signal that has an adjustable audio volume output level. The mobile device receives the audio output signal from the remote device. The mobile device detects an audio volume adjustment input. The mobile device redirects the audio volume adjustment to the remote device to control the audio output volume level of the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09099974&OS=09099974&RS=09099974
owner: VMware, Inc.
number: 09099974
owner_city: Palo Alto
owner_country: US
publication_date: 20131220
---
The various embodiments described herein relate to configuring a mobile device to adjust the audio output level of an application running on a remote host device that is communicatively coupled to the mobile device using audio volume adjustment inputs on the mobile device.

In the context of remote desktop technology and virtual desktop infrastructure VDI a mobile device such as a cell phone or tablet computer may be used to run a client interface to access one or more applications running on a remote host device that is communicatively coupled to the mobile device via a network. For example a user of a mobile device may remotely control and receive audio output from a media player application that is running on a virtual machine on the remote host device. To adjust the audio output volume level of a remotely running application touch screen inputs are used to access a software slider bar or other software generated control mechanism within the client interface to the remote system. Currently separate audio volume adjustment inputs on the mobile device such as keys or buttons that primarily function to adjust audio output volume only adjust the volume of the mobile device or an application running locally on the mobile device. These keys or buttons however do not adjust the audio output volume level of the remote application or system volume on the remote host device.

Exemplary systems and methods enable a user of a mobile device to use the audio volume adjustment inputs on the mobile device to adjust the level of audio output of an application running on a remote device. A virtual desktop client on the mobile device provides a user interface to the remotely running application that allows the user to receive audio and video output from the application and to interact with and control the application. The virtual desktop client also monitors the audio volume adjustment inputs on the mobile device. When an audio volume adjustment input is detected on the mobile device the virtual desktop client sends a message to a virtual desktop agent running on the remote device to adjust the audio output level of one or more applications running on the remote device. The virtual desktop agent causes the output volume of one or more applications running on the remote device to be adjusted according to the audio volume adjustment input on the mobile device. In effect the audio volume adjustment inputs made on the mobile device are redirected to the application s on the remote device and adjust the audio output level of the application s on the remote device. In one embodiment the remote desktop agent is executed on a virtual machine running on a remote host computer. In one embodiment the audio output levels of all applications running on the remote device are adjusted in accordance with the audio volume adjustment inputs on the mobile device. In one embodiment a setting within the virtual desktop client configures the mobile device to either direct the audio adjustment inputs to adjusting audio output levels of application s and hardware on the mobile device or to redirect the audio adjustment inputs to the remote device.

Other features and advantages will be apparent from the accompanying drawings and from the detailed description.

Embodiments described herein use audio volume adjustment inputs on a mobile device to adjust the level of audio output received by a mobile device from an application running on a remote device. For example the mobile device may receive an audio volume adjustment input via a volume button or key and in response transmits a message to the remote device to increase or decrease the volume on the remote device. The mobile device then receives audio output from the application on the remote device with the audio output level of the application adjusted according to the audio volume adjustment inputs on the mobile device. As a result an audio volume adjustment input that was previously limited to adjusting volume locally on the mobile device is redirected to adjust volume of an application running on the remote device.

Throughout the disclosure physical hardware includes a desktop computer laptop computer tablet computer personal digital assistant cell phone a server etc. Virtual computing elements include a virtual machine and a virtualization software layer or hypervisor running on a host computer. A virtualization software layer may run directly on a host computer known as a bare metal hypervisor or may run on a guest operating system known as a hosted hypervisor. Virtual computing elements further include virtual network interface cards vNICs virtual switches running within a virtualization software layer and other virtual networking elements.

The term audio volume adjustment input as used herein refers to activation actuation detection or operation of an audio volume adjustment key. An audio volume adjustment key may include any one or more of a key switch button knob wheel or other hardware input mechanism on the mobile device or on a peripheral device for the mobile device e.g. wired or wireless headphones keyboard remote control etc. . Audio volume adjustment keys may be provided in pairs such as an increase key and a decrease key. Audio volume adjustment input may further include an aggregated plurality of audio volume adjustment key activations such as one or more key presses of a volume increase key and or volume decrease key.

The term desktop as used herein refers to a human interface environment through which users launch interact with and manage applications settings and or data etc. A virtual desktop is a virtual computing system that operates as a desktop or workstation computer with which an end user interacts using desktop remoting protocol and the software and or hardware of client device . A virtualized desktop may export user interfaces e.g. keyboard touch screen and mouse input audio and visual output to client device from VM running remotely in the datacenter or locally on client device or in some cases using a hybrid. Client device transmits user input e.g. keyboard or mouse input hardware keypresses such as volume adjustment inputs and touch inputs to VM to be processed and receives display and other data such as sound and or video from VM for presentation to a user of client device . Client device presents a bitmap representation of the desktop generated by VM . Inputs to and outputs from the virtualized desktop are reflected in the bitmap representation on client device as it occurs on the virtualized desktop within VM .

VMs are complete computation environments containing virtual equivalents of the hardware and system software components of a physical system. For example these virtual equivalents appear as a complete physical machine to a guest operating system running within VM . VMs are typically implemented by an extensive virtualization infrastructure which includes a variety of software and hardware components. Virtualization software layer e.g. a hypervisor running on hardware of host computer manages one or more VMs . In one embodiment virtualization software layer may run on a guest operating system not shown . Virtualization software layer manages physical resources e.g. hardware as well as maintains virtual to physical hardware mappings.

Virtual Infrastructure Management VIM server includes administrative console inventory manager connection broker pool manager and infrastructure management software . Administrative console provides a remotely accessible user interface to administrator device to manage the configuration of VMs within the VCI . In one embodiment administrative console exports a graphical user interface via hypertext transfer protocol HTTP to be accessed by a web browser. Alternatively a command line interface or a rich client is provided to administrator device which includes a web browser to access the administrative console. Administrative console allows administrator device to perform a plurality of functions such as cloning VMs creating desktop pools associating desktop pools with VIM server associating a desktop pool with a master image defining VM state policies and other similar operations.

Inventory manager handles the events received from VMs . For example when a user of a virtual desktop logs off or disconnects a software agent running within a VM sends a notification to inventory manager . Inventory manager determines an effective policy that applies to the desktop and performs a maintenance operation if required. Inventory manager may also use timer based events to schedule effective maintenance operations.

Correction broker acts as a broker for client connections to virtual desktops. Connection broker authenticates client requests using a directory service and directs the requests to the corresponding virtual desktops. Connection broker allows a remote user or administrator through a client or administrator device to select a type of virtual desktop and initiate a virtual desktop session or to access an existing connection to a virtual desktop. For example as described below with reference to client includes virtual desktop client . In one embodiment virtual desktop client initiates a virtual desktop session with VM via connection broker . In one embodiment connection broker connects to VM to access or update policies associated with VM .

Pool manager manages the lifecycle of virtual desktops. Virtual desktops in a pool are grouped together based on similar software requirements. Desktop Administrators create logical desktops groups desktop pools that are provisioned typically from the same base image. For example a desktop pool may include cloned VMs that run the same set of software applications and run the same operating system.

In general virtual machine management server VMM server provides software interface to enable an administrator or other entity such as inventory manager connection broker and pool manager to access and manage VMs as described above. Additionally VMM server supports operations for the discovery of compute storage and network resources creation of logical compute pools by providing features such as automatic CPU and memory load balancing provisioning creation of one or more virtual disks on local or shared storage clones with full or sparse disks creation of cloned VMs and power operations on virtual machines power on power off suspend resume checkpoint etc. .

While illustrated as separate components in one embodiment a single server or other networked processing device implements VIM server and VMM server . For example VIM server and VMM server may be implemented by one or more VMs .

Virtualization software layer further includes communication agent . VM includes virtual desktop agent . In one embodiment virtual desktop agent establishes secure trusted communication channel with communication agent that provides virtual desktop agent with direct access to virtualization software layer . For example VM does not need an IP address for virtualization software layer or other management solution to transmit a message or credentials to log in or otherwise authenticate the transmission of the message. In one embodiment secure communication channel is implemented using shared memory. Virtual desktop agent writes a message to the shared memory and communication agent and virtualization software layer reads the message from the shared memory. Alternatively each virtual desktop agent communicates with communication agent by way of a virtual network interface. Virtual desktop agent communicates with remote applications on VM . In one embodiment virtual desktop agent communicates with the VM operating system or one or more applications through an application programming interface API . For example virtual desktop agent may call the API in response to receipt of a message from virtual desktop client on mobile device as described in further detail herein. VMM server is communicatively coupled to communication agent in virtualization software layer of host .

Virtual desktop agent receives volume adjustment message s from virtual desktop client via communication agent and communicates with one or more remote applications running on VM . In one embodiment VM runs guest operating system . Guest operating system includes volume control application programming interface API . Virtual desktop agent makes calls to volume control API to adjust audio properties in guest operating system in response to one or more messages received by virtual desktop agent . For example the following two Windows API calls may be used to adjust volume properties within guest operating system affecting a particular application having a handle This.Handle 

In one embodiment virtual desktop agent receives and processes audio volume adjustment message s related to one or more remote applications running on VM independent of volume control API . In such an embodiment virtual desktop agent routes audio volume adjustment message s to the appropriate remote application s and causes the remote application s to adjust their audio volume in accordance with the message s .

Client is a computing device such as a laptop computer tablet computer personal digital assistant or cell phone as described with reference to . Client comprises hardware and operating system OS running one or more local applications . In one embodiment virtual desktop client is a local application running on OS .

Virtual desktop client provides an interface to a user of client to interact with one or more remote applications on VM . Using virtual desktop client application running on VM appears to the user to be running on client . Virtual desktop client receives screen updates video audio system messages and other application information from an application on VM . VM includes virtual desktop agent that communicates with virtual desktop client and with applications on VM . For example virtual desktop client receives user inputs to client while providing the user with remote access to an application running on VM . Virtual desktop client transmits one or more messages conveying the user inputs to virtual desktop agent . Virtual desktop agent receives the message s from virtual desktop client via network s processes the messages and passes the user inputs and other information within the messages to one or more applications on VM e.g. via API .

Hardware includes audio volume adjustment keys and configured to request an increase or decrease in audio volume perceived by a user of client . In one embodiment audio volume adjustment keys and are implemented as a wheel or knob that is rotated in a first direction to increase audio volume and rotated in a second direction to decrease audio volume. Hardware further includes amplifier having an adjustable audio volume. Hardware also includes output device e.g. a speaker headphone jack or wireless headset to provide audio output to a user of client .

In one embodiment operating system includes event handler that communicates with hardware . Event handler is also in communication with local application s and virtual desktop client . Event handler detects an audio volume adjustment input by detecting the pressing or actuating of audio volume adjustment keys and or . In response to detecting the audio volume adjustment input event handler generates an audio volume adjustment event message characterizing the detected audio volume adjustment input. In one embodiment if virtual desktop client has the foreground focus of operating system then the audio volume adjustment event message is sent to virtual desktop client .

Virtual desktop client includes redirector . Redirector receives a volume adjustment event message from event handler and determines whether the volume adjustment event message should be redirected to remote application or be processed locally by operating system e.g. adjusting system volume or hardware e.g. adjusting hardware volume . In one embodiment redirector redirects the volume adjustment message to remote application running on VM when virtual desktop client has the foreground focus of operating system and remote application has the focus of virtual desktop client . In another embodiment a user of client configures a setting on client that determines whether audio volume adjustment input is processed locally and thus is not redirected regardless of whether virtual desktop has the foreground focus of operating system . In yet another embodiment a user of client configures a setting on virtual desktop client that determines whether an audio volume adjustment message is redirected to only the application that has the foreground focus of virtual desktop client or whether the volume adjustment event message is redirected to all remote applications running on VM as viewed by virtual desktop client . In one embodiment redirector redirects the volume adjustment message to remote application that is running in the background e.g. minimized on VM .

In one embodiment application running on VM is or includes a media player that produces an audio output signal. Virtual desktop agent transmits the audio output signal to virtual desktop client e.g. according to a desktop remoting protocol . Virtual desktop client receives the audio output signal and utilizes hardware of client to convert the received audio output signal into sound. The volume of the sound produced in response to the audio output signal is controlled at least in part by the audio output volume level within the received audio output signal. In response to the audio output level the user can make one or more audio volume adjustment inputs using client . For example the user may press or otherwise activate an audio volume adjustment key such as a volume button key knob wheel or other hardware input mechanism on the mobile device or on a peripheral device for the mobile device e.g. wired or wireless headphones keyboard remote control etc. . When mobile device detects that the user has activated the audio volume adjustment key client can determine whether virtual desktop client is being executed e.g. running in the foreground on client at the time of activating the audio volume adjustment key. If virtual desktop client is not running the audio volume adjustment input can be directed to the local volume control component s of client as conventionally done in order to control the local volume e.g. volume of the speaker of the client . On the other hand if virtual desktop client is running on the client virtual desktop client can intercept the audio volume adjustment input and redirect the audio volume adjustment input using redirector in a message to virtual desktop agent running on VM . In one embodiment virtual desktop client includes event handler to detect the received audio volume adjustment input. In response to detecting the audio volume adjustment input event redirector passes the event to virtual desktop client and virtual desktop client transmits a message corresponding to the audio volume adjustment input to virtual desktop agent . In response to receiving the message virtual desktop agent causes one or more applications running on VM to adjust the audio output volume level of the application s . For example virtual desktop agent utilizes an API call to volume control API to increase the application or VM system volume. The level of a subsequent audio output signal produced by application s and received by client is adjusted according to the audio volume adjustment input made on client . Additionally a visual representation of the increased volume e.g. in the form of moving a volume control slider within a user interface may be transmitted from virtual desktop agent to virtual desktop client to update a display of client . In one embodiment the visual update is caused by a separate API call.

While the above implementation has been described with reference to the remote device being a virtual machine VM in one embodiment the remote device is a non virtual computing device that runs one or more applications and virtual desktop agent . For example remote desktop software including virtual desktop client may be used to receive and control audio output signals from a remote computer running virtual desktop agent . Audio volume adjustment inputs made on client are passed by virtual desktop client to virtual desktop agent on the remote device and adjust the audio output volume level of one or more applications or a system volume level on the remote device. An exemplary remote device is described with reference to .

In operation mobile device detects an audio volume adjustment input. As described above exemplary audio volume adjustment inputs include pressing an audio adjustment key e.g. or or other hardware input mechanism to increase or decrease volume. For example the audio adjustment key may be dedicated at least in the context of virtual desktop client to the functionality of adjusting volume. In one embodiment audio volume adjustment input further includes pressing a touch sensitive keypad configured as an audio volume adjustment key.

In one embodiment the audio volume adjustment input results in a message or other signal within the operating system of mobile device . Detection of the audio volume adjustment input includes an event listener detecting the message or signal representing the keypress or other hardware input.

In operation mobile device determines whether the detected volume adjustment input should be applied locally to the mobile device system volume or hardware such as an internal amplifier or to redirect the detected volume adjustment input to the remote device. In one embodiment mobile device determines whether to redirect the detected volume adjustment input by detecting whether virtual desktop client is running on mobile device . In another embodiment virtual desktop client makes this determination by inspecting a configuration setting that indicates whether the volume adjustment input should be redirected to VM .

If the volume adjustment input is to be applied locally then in operation the volume level of the mobile device is adjusted according to conventional means including adjusting a hardware amplifier of the mobile device or adjusting a system volume of operating system on mobile device .

If the volume adjustment input is to be redirected to VM then in operation mobile device optionally determines whether the detected volume adjustment input should be applied only to application generating the audio output signal or applied to system volume within VM e.g. the volume of all applications on VM that are accessible by mobile device . In one embodiment the determination is implemented by virtual desktop client inspecting a configuration setting that indicates whether the volume adjustment input should be applied to one application or to all applications or the system volume of VM .

In one embodiment by default the audio volume adjustment input is applied to the application generating the output audio signal. In another embodiment the volume adjustment input is applied by default to the system volume all applications on VM . In yet another embodiment the determination of whether to apply the volume adjustment input to a single application or the system volume is left to the remote device or applied to one or the other by default by the remote device.

If it has been determined in optional operation or alternatively by default that only the volume level of the application is to be adjusted then in operation virtual desktop client sends a message to virtual desktop agent to adjust the audio output level of the application according to the volume adjustment inputs on mobile device . If it has been determined in optional operation or alternatively by default that the system volume volume levels of all applications on VM are to be adjusted then in operation virtual desktop client sends a message to virtual desktop agent to adjust the audio output level of the system all applications according to the volume adjustment inputs on mobile device . In an alternate embodiment virtual desktop client sends a message to virtual desktop agent to adjust the audio output level without regard to whether the volume is to be adjusted for a single application or the system.

In operation VM optionally determines whether the volume adjustment input information in the message should be applied to the application generating audio output that is being received by mobile device or applied to the system volume all applications on VM that are accessible by mobile device . In one embodiment the determination is implemented by virtual desktop agent inspecting a configuration setting that indicates whether the volume adjustment input should be applied to one application or to the system volume all applications on VM . Alternatively the message from virtual desktop client includes an indication as to whether the volume adjustment input should be applied to one application or to the system volume all applications on VM .

In one embodiment by default the audio volume adjustment input is applied to the application generating the output audio being received by mobile device . In another embodiment the volume adjustment input is applied by default to system volume all applications on VM .

If it has been determined in optional operation or alternatively by default that only the volume level of the application is to be adjusted then in operation virtual desktop agent causes the audio output level of the application to be adjusted according to the volume level adjustment information in the message received from mobile device e.g. as described above .

If it has been determined in optional operation or alternatively by default that the system volume volume levels of all applications on VM are to be adjusted then in operation virtual desktop agent causes the audio output level of all applications on VM to be adjusted according to the volume level adjustment information in the message received from mobile device e.g. as described above .

Processing system also includes one or more input or output I O devices and interfaces which are provided to allow a user to provide input to receive output from and otherwise transfer data to and from the system. I O devices may include a mouse keypad or a keyboard volume adjustment inputs such as a volume and keys a volume adjustment rotary wheel or knob and other inputs such as a touch panel or a multi touch input panel camera optical scanner network interface modem other known I O devices or a combination of such I O devices. I O devices and interfaces may also include a port connector for a dock or a connector for a USB interface FireWire Thunderbolt Ethernet Fibre Channel etc. to connect the processing system with another device external component or a network. Exemplary I O devices and interfaces also include wireless transceivers such as an IEEE 802.11 transceiver an infrared transceiver a Bluetooth transceiver a wireless cellular telephony transceiver e.g. 2G 3G 4G etc. or another wireless protocol to connect processing system with another device external component or a network and receive stored instructions data tokens etc. It will be appreciated that one or more buses may be used to interconnect the various components described above.

Processing system also includes audio input output subsystem which may include a microphone and or a speaker for for example playing back music or other audio receiving voice instructions to be executed by microprocessor s playing audio notifications etc. Display controller and display device provides a visual user interface for the user.

Processing system may be a personal computer tablet style device a personal digital assistant PDA a cellular telephone with PDA like functionality a Wi Fi based telephone a handheld computer which includes a cellular telephone a media player an entertainment system or devices which combine aspects or functions of these devices such as a media player combined with a PDA and a cellular telephone in one device. In other embodiments processing system may be a network computer server or an embedded processing device within another device or consumer electronic product. As used herein the terms computer device system processing system processing device and apparatus comprising a processing device may be used interchangeably with processing system and include the above listed exemplary embodiments.

It will be appreciated that additional components not shown may also be part of processing system and in certain embodiments fewer components may also be used in processing system . It will be apparent from this description that aspects of the inventions may be embodied at least in part in software. That is the computer implemented methods of and may be carried out in a processing system in response to its processor s or processing system executing sequences of instructions contained in a memory or other non transitory machine readable storage medium. The software may further be transmitted or received over a network not shown via network interface device . In various embodiments hardwired circuitry may be used in combination with the software instructions to implement the present embodiments. Thus the techniques are not limited to any specific combination of hardware circuitry and software or to any particular source for the instructions executed by processing system .

The instructions executed by the processing system may be embodied in a non transitory computer readable medium including an article of manufacture. An article of manufacture that stores program code may be embodied as but is not limited to one or more memories e.g. one or more flash memories random access memories static dynamic or other optical disks CD ROMs DVD ROMs EPROMs EEPROMs magnetic or optical cards or other type of non transitory machine readable media suitable for storing electronic instructions. Additionally embodiments of the invention may be implemented in but not limited to hardware or firmware utilizing an FPGA ASIC a processor a computer or a computer system including a network. Modules and components of hardware or software implementations can be divided or combined without significantly altering embodiments of the invention.

In the foregoing specification the invention has been described with reference to specific exemplary embodiments thereof. Various embodiments and aspects of the invention s are described with reference to details discussed herein and the accompanying drawings illustrate the various embodiments. The description above and drawings are illustrative of the invention and are not to be construed as limiting the invention. Numerous specific details are described to provide a thorough understanding of various embodiments of the present invention. However in certain instances well known or conventional details are not described in order to provide a concise discussion of embodiments of the present inventions.

It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the invention as set forth in the following claims. For example the methods described herein may be performed with fewer or more features blocks or the features blocks may be performed in differing orders. Additionally the methods described herein may be repeated or performed in parallel with one another or in parallel with different instances of the same or similar methods.

