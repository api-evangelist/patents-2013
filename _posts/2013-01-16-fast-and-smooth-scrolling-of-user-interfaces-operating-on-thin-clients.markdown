---

title: Fast and smooth scrolling of user interfaces operating on thin clients
abstract: Systems and methods according to the present invention provide a user interface for scrolling through lists of information on user interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09400598&OS=09400598&RS=09400598
owner: HILLCREST LABORATORIES, INC.
number: 09400598
owner_city: Rockville
owner_country: US
publication_date: 20130116
---
This application is a continuation of U.S. patent application Ser. No. 12 287 601 filed on Oct. 10 2008 which is related to and claims priority from U.S. Provisional Patent Application Ser. No. 60 999 130 entitled Fast and Smooth Scrolling of User Interfaces Operating on Thin Clients to Tom Pixley et al. filed on Oct. 16 2007 the disclosures of which are incorporated here by reference.

This application describes among other things scrolling on user interfaces in a fast and smooth manner.

Technologies associated with the communication of information have evolved rapidly over the last several decades. Television cellular telephony the Internet and optical communication techniques to name just a few things combine to inundate consumers with available information and entertainment options. Taking television as an example the last three decades have seen the introduction of cable television service satellite television service pay per view movies and video on demand. Whereas television viewers of the 1960s could typically receive perhaps four or five over the air TV channels on their television sets today s TV watchers have the opportunity to select from hundreds thousands and potentially millions of channels of shows and information. Video on demand technology currently used primarily in hotels and the like provides the potential for in home entertainment selection from among thousands of movie titles.

The technological ability to provide so much information and content to end users provides both opportunities and challenges to system designers and service providers. One challenge is that while end users typically prefer having more choices rather than fewer this preference is counterweighted by their desire that the selection process be both fast and simple. Unfortunately the development of the systems and interfaces by which end users access media items has resulted in selection processes which are neither fast nor simple. Consider again the example of television programs. When television was in its infancy determining which program to watch was a relatively simple process primarily due to the small number of choices. One would consult a printed guide which was formatted for example as series of columns and rows which showed the correspondence between 1 nearby television channels 2 programs being transmitted on those channels and 3 date and time. The television was tuned to the desired channel by adjusting a tuner knob and the viewer watched the selected program. Later remote control devices were introduced that permitted viewers to tune the television from a distance. This addition to the user television interface created the phenomenon known as channel surfing whereby a viewer could rapidly view short segments being broadcast on a number of channels to quickly learn what programs were available at any given time.

Despite the fact that the number of channels and amount of viewable content has dramatically increased the generally available user interface control device options and frameworks for televisions has not changed much over the last 30 years. Printed guides are still the most prevalent mechanism for conveying programming information. The multiple button remote control with up and down arrows is still the most prevalent channel content selection mechanism. The reaction of those who design and implement the TV user interface to the increase in available media content has been a straightforward extension of the existing selection procedures and interface objects. Thus the number of rows in the printed guides has been increased to accommodate more channels. The number of buttons on the remote control devices has been increased to support additional functionality and content handling e.g. as shown in . However this approach has significantly increased both the time required for a viewer to review the available information and the complexity of actions required to implement a selection. Arguably the cumbersome nature of the existing interface has hampered commercial implementation of some services e.g. video on demand since consumers are resistant to new services that will add complexity to an interface that they view as already too slow and complex.

In addition to increases in bandwidth and content the user interface bottleneck problem is being exacerbated by the aggregation of technologies. Consumers are reacting positively to having the option of buying integrated systems rather than a number of segregable components. An example of this trend is the combination television VCR DVD in which three previously independent components are frequently sold today as an integrated unit. This trend is likely to continue potentially with an end result that most if not all of the communication devices currently found in the household will be packaged together as an integrated unit e.g. a television VCR DVD internet access radio stereo unit. Even those who continue to buy separate components will likely desire seamless control of and interworking between the separate components. With this increased aggregation comes the potential for more complexity in the user interface. For example when so called universal remote units were introduced e.g. to combine the functionality of TV remote units and VCR remote units the number of buttons on these universal remote units was typically more than the number of buttons on either the TV remote unit or VCR remote unit individually. This added number of buttons and functionality makes it very difficult to control anything but the simplest aspects of a TV or VCR without hunting for exactly the right button on the remote. Many times these universal remotes do not provide enough buttons to access many levels of control or features unique to certain TVs. In these cases the original device remote unit is still needed and the original hassle of handling multiple remotes remains due to user interface issues arising from the complexity of aggregation. Some remote units have addressed this problem by adding soft buttons that can be programmed with the expert commands. These soft buttons sometimes have accompanying LCD displays to indicate their action. These too have the flaw that they are difficult to use without looking away from the TV to the remote control. Yet another flaw in these remote units is the use of modes in an attempt to reduce the number of buttons. In these moded universal remote units a special button exists to select whether the remote should communicate with the TV DVD player cable set top box VCR etc. This causes many usability issues including sending commands to the wrong device forcing the user to look at the remote to make sure that it is in the right mode and it does not provide any simplification to the integration of multiple devices. The most advanced of these universal remote units provide some integration by allowing the user to program sequences of commands to multiple devices into the remote. This is such a difficult task that many users hire professional installers to program their universal remote units.

Some attempts have also been made to modernize the screen interface between end users and media systems. However these attempts typically suffer from among other drawbacks an inability to easily scale between large collections of media items and small collections of media items. For example interfaces which rely on lists of items may work well for small collections of media items but are tedious to browse for large collections of media items. Interfaces which rely on hierarchical navigation e.g. tree structures may be speedier to traverse than list interfaces for large collections of media items but are not readily adaptable to small collections of media items. Additionally users tend to lose interest in selection processes wherein the user has to move through three or more layers in a tree structure. For all of these cases current remote units make this selection process even more tedious by forcing the user to repeatedly depress the up and down buttons to navigate the list or hierarchies. When selection skipping controls are available such as page up and page down the user usually has to look at the remote to find these special buttons or be trained to know that they even exist. Accordingly organizing frameworks techniques and systems which simplify the control and screen interface between users and media systems as well as accelerate the selection process while at the same time permitting service providers to take advantage of the increases in available bandwidth to end user equipment by facilitating the supply of a large number of media items and new services to the user have been proposed in U.S. patent application Ser. No. 10 768 432 filed on Jan. 30 2004 entitled A Control Framework with a Zoomable Graphical User Interface for Organizing Selecting and Launching Media Items the disclosure of which is incorporated here by reference.

One common type of navigation functionality that is provided in many types of user interfaces is scrolling. The term scrolling refers to the act of sliding a horizontal or vertical presentation of content such as text drawings or images across a screen or display window. In a typical computer system when creating a scrolling content area the graphical content to fill that area can be generated on the fly by the computer as the user provides inputs to the user interface which indicate his or her desire to scroll. However depending on the resources of the system which is generating the user interface the type of content being scrolled the transition effects associated with the scrolling the speed of scrolling and or other processing related considerations it may not be possible to generate the new content which fills the areas which become visible on the user interface as fast as the user might expect given his or her scrolling inputs. For example user interfaces running on so called thin clients e.g. set top boxes having relatively few processing resources as compared to high end personal computers may not be able to supply the resources needed to generate the scrolling content quickly enough.

Accordingly it would be desirable to provide systems methods devices and software for fast and smooth scrolling of user interfaces operating on e.g. thin clients.

Systems and methods according to the present invention address this need and others by providing mechanisms to facilitate for fast and smooth scrolling of user interfaces operating on e.g. thin clients.

According to one exemplary embodiment a method for scrolling within a graphical user interface comprising displaying a first portion of a list having a first plurality of entries which are visible on the graphical user interface receiving user input to scroll the list by a number of entries displaying an animation of dummy data in portions of the graphical user interface associated with the first plurality of entries while the list is being scrolled ceasing scrolling and replacing the animation of dummy data with a second portion of the list including a second plurality of entries.

According to another exemplary embodiment a computer readable medium contains program instructions coded thereon which when executed by a computer or processor performs the steps of displaying a first portion of a list having a first plurality of entries which are visible on the graphical user interface receiving user input to scroll the list by a number of entries displaying an animation of dummy data in portions of the graphical user interface associated with the first plurality of entries while the list is being scrolled ceasing scrolling and

replacing the animation of dummy data with a second portion of the list including a second plurality of entries.

According to yet another exemplary embodiment a user interface includes a first portion of a list of items currently displayed on the user interface and a mechanism for receiving a user input to scroll the list wherein the user interface displays an animation of dummy data while the list is being scrolled and subsequently replaces the animation of dummy data with a second portion of the list.

The following detailed description of the invention refers to the accompanying drawings. The same reference numbers in different drawings identify the same or similar elements. Also the following detailed description does not limit the invention. Instead the scope of the invention is defined by the appended claims.

In order to provide some context for this discussion an exemplary aggregated media system in which the present invention can be implemented will first be described with respect to . Those skilled in the art will appreciate however that the present invention is not restricted to implementation in this type of media system and that more or fewer components can be included therein. Therein an input output I O bus connects the system components in the media system together. The I O bus represents any of a number of different of mechanisms and techniques for routing signals between the media system components. For example the I O bus may include an appropriate number of independent audio patch cables that route audio signals coaxial cables that route video signals two wire serial lines or infrared or radio frequency transceivers that route control signals optical fiber or any other routing mechanisms that route other types of signals.

In this exemplary embodiment the media system includes a television monitor a video cassette recorder VCR digital video disk DVD recorder playback device audio video tuner and compact disk player coupled to the I O bus . The VCR DVD and compact disk player may be single disk or single cassette devices or alternatively may be multiple disk or multiple cassette devices. They may be independent units or integrated together. In addition the media system includes a microphone speaker system video camera and a wireless I O control device . According to exemplary embodiments of the present invention the wireless I O control device is a 3D pointing device. The wireless I O control device can communicate with the entertainment system using e.g. an IR or RF transmitter or transceiver. Alternatively the I O control device can be connected to the entertainment system via a wire.

The entertainment system also includes a system controller . According to one exemplary embodiment of the present invention the system controller operates to store and display entertainment system data available from a plurality of entertainment system data sources and to control a wide variety of features associated with each of the system components. As shown in system controller is coupled either directly or indirectly to each of the system components as necessary through I O bus . In one exemplary embodiment in addition to or in place of I O bus system controller is configured with a wireless communication transmitter or transceiver which is capable of communicating with the system components via IR signals or RF signals. Regardless of the control medium the system controller is configured to control the media components of the media system via a graphical user interface described below.

As further illustrated in media system may be configured to receive media items from various media sources and service providers. In this exemplary embodiment media system receives media input from and optionally sends information to any or all of the following sources cable broadcast satellite broadcast e.g. via a satellite dish very high frequency VHF or ultra high frequency UHF radio frequency communication of the broadcast television networks e.g. via an aerial antenna telephone network and cable modem or another source of Internet content . Those skilled in the art will appreciate that the media components and media sources illustrated and described with respect to are purely exemplary and that media system may include more or fewer of both. For example other types of inputs to the system include AM FM radio and satellite radio.

More details regarding this exemplary entertainment system and frameworks associated therewith can be found in the above incorporated by reference U.S. patent application A Control Framework with a Zoomable Graphical User Interface for Organizing Selecting and Launching Media Items . Alternatively remote devices and interaction techniques between remote devices and user interfaces in accordance with the present invention can be used in conjunction with other types of systems for example computer systems including e.g. a display a processor and a memory system or with various other systems and applications.

As mentioned in the Background section remote devices which operate as 3D pointers are of particular interest for the present specification although the present invention is not limited to systems including 3D pointers. Such devices enable the translation of movement of the device e.g. linear movement rotational movement acceleration or any combination thereof into commands to a user interface. An exemplary loop shaped 3D pointing device is depicted in however the present invention is not limited to loop shaped devices. In this exemplary embodiment the 3D pointing device includes two buttons and as well as a scroll wheel scroll wheel can also act as a button by depressing the scroll wheel although other exemplary embodiments will include other physical configurations. User movement of the 3D pointing device can be defined for example in terms of rotation about one or more of an x axis attitude roll a y axis elevation pitch or a z axis heading yaw . In addition some exemplary embodiments of the present invention can additionally or alternatively measure linear movement of the 3D pointing device along the x y and or z axes to generate cursor movement or other user interface commands. An example is provided below. A number of permutations and variations relating to 3D pointing devices can be implemented in systems according to exemplary embodiments of the present invention. The interested reader is referred to U.S. patent application Ser. No. 11 119 663 entitled as amended 3D Pointing Devices and Methods filed on May 2 2005 U.S. patent application Ser. No. 11 119 719 entitled as amended 3D Pointing Devices with Tilt Compensation and Improved Usability also filed on May 2 2005 U.S. patent application Ser. No. 11 119 987 entitled as amended Methods and Devices for Removing Unintentional Movement in 3D Pointing Devices also filed on May 2 2005 and U.S. patent application Ser. No. 11 119 688 entitled Methods and Devices for Identifying Users Based on Tremor also filed on May 2 2005 the disclosures of which are incorporated here by reference for more details regarding exemplary 3D pointing devices which can be used in conjunction with exemplary embodiments of the present invention.

According to exemplary embodiments of the present invention it is anticipated that 3D pointing device will be held by a user in front of a display and that motion of the 3D pointing device will be translated by the 3D pointing device output which is usable to interact with the information displayed on display e.g. to move the cursor on the display . For example such 3D pointing devices and their associated user interfaces can be used to make media selections on a television as shown in which will be described in more detail below. Aspects of exemplary embodiments of the present invention can be optimized to enhance the user s experience of the so called 10 foot interface i.e. a typical distance between a user and his or her television in a living room. For example interactions between pointing scrolling zooming and panning e.g. using a 3D pointing device associated user interface can be optimized for this environment as will be described below although the present invention is not limited thereto.

Referring again to an exemplary relationship between movement of the 3D pointing device and corresponding cursor movement on a user interface will now be described. Rotation of the 3D pointing device about the y axis can be sensed by the 3D pointing device and translated into an output usable by the system to move cursor along the yaxis of the display . Likewise rotation of the 3D pointing device about the z axis can be sensed by the 3D pointing device and translated into an output usable by the system to move cursor along the xaxis of the display . It will be appreciated that the output of 3D pointing device can be used to interact with the display in a number of ways other than or in addition to cursor movement for example it can control cursor fading volume or media transport play pause fast forward and rewind . Additionally the system can be programmed to recognize gestures e.g. predetermined movement patterns to convey commands in addition to cursor movement. Moreover other input commands e.g. a zoom in or zoom out on a particular region of a display e.g. actuated by pressing button to zoom in or button to zoom out may also be available to the user.

According to exemplary embodiments of the present invention user interfaces may use at least in part zooming techniques for moving between user interface views. The zooming transition effect can be performed by progressive scaling and displaying of at least some of the UI objects displayed on the current UI view to provide a visual impression of movement of those UI objects away from an observer. In another functional aspect of the present invention user interfaces may zoom in in response to user interaction with the user interface which will likewise result in the progressive scaling and display of UI objects that provide the visual impression of movement toward an observer. More information relating to zoomable user interfaces can be found in U.S. patent application Ser. No. 10 768 432 filed on Jan. 30 2004 entitled A Control Framework with a Zoomable Graphical User Interface for Organizing Selecting and Launching Media Items and U.S. patent application Ser. No. 09 829 263 filed on Apr. 9 2001 entitled Interactive Content Guide for Television Programming the disclosures of which are incorporated here by reference.

Movement within the user interface between different user interface views is not limited to zooming. Other non zooming techniques can be used in addition to zooming or as an alternative thereto to transition between user interface views. For example panning can be performed by progressive translation and display of at least some of the user interface objects which are currently displayed in a user interface view. This provides the visual impression of lateral movement of those user interface objects to an observer.

Returning now to the application illustrated in the GUI screen also referred to herein as a UI view which terms refer to a currently displayed set of UI objects seen on television is a home view. In this particular exemplary embodiment the home view displays a plurality of applications e.g. Photos Music Recorded Guide Live TV On Demand and Settings which are selectable by the user by way of interaction with the user interface via the 3D pointing device . Such user interactions can include for example pointing scrolling clicking or various combinations thereof. For more details regarding exemplary pointing scrolling and clicking interactions which can be used in conjunction with exemplary embodiments of the present invention the interested reader is directed to U.S. patent application Ser. No. 11 417 764 entitled METHODS AND SYSTEMS FOR SCROLLING AND POINTING IN USER INTERFACES to Frank J. Wroblewski filed on May 4 2006 the disclosure of which is incorporated here by reference.

Regardless of the different techniques which are employed in a particular user interface implementation to transition between user interface views exemplary embodiments described herein focus on techniques for scrolling content within a currently displayed user interface view. Such content can include for example scrollable visual directories scrollable lists scrollable grid guides and any other scrollable content. For example consider the UI view shown in . This view illustrates a number of on demand movie selections categorized by genre which view can be reached by for example zooming in on the On Demand application object shown in the home view of . By pressing the zoom in button on the 3D pointing device one more time while the current focus e.g. selection highlighting is on the UI object associated with Genre A in the UI view the user interface will zoom in on this object to display a new UI view . The UI view will display a number of sub genre media selection objects which can for example be implemented as DVD movie cover images. Although this example illustrates groupings or bookcases containing six images per genre it will be appreciated that other implementations or other views within the same implementation may include more or fewer images per group e.g. 16 32 64 etc. Additionally some facility for scrolling the visual directories can be provided e.g. to enable the user to reach those user interface objects images in this example which are not currently on screen such as the cut off row of genres and sub genres shown at the bottom of views and respectively. For example according to one exemplary embodiment rotating the scroll wheel of the 3D pointing device can provide an input command to the user interface to scroll the genres or subgenres up to reveal the images which are currently off screen.

According to exemplary embodiments there are typically a number of different ways to scroll through a scrollable list using a device such as the 3D pointing device . As mentioned above one method for scrolling through a list such as the list shown in would be to rotate the scroll wheel of the 3D pointing device . Another exemplary method would be to use 3D pointing device to point and click upon either the top arrow button or the bottom arrow button to move the scroll list up or down one row. Alternatively a user could point to a location on an on screen scrollbar and click at that location to jump to a new portion of the scrollable list which corresponds to that location on the scrollbar . The modes of scrolling with a scroll wheel can also be broken down into different modes of scrolling associated with the scrolling speed or amount of content to be scrolled at a time e.g. single row scrolling page at a time scrolling and fast scrolling.

As mentioned above however scrolling on such interfaces may pose additional challenges when for example the client system which is generating and controlling the user interface has relatively limited resources. In some implementations generating the additional rows or columns of images text etc. of content needed to populate the rows or columns as they are coming on screen may take more processing resources than are currently available. For example a so called thin client such as a mid to high end TV set top box having a 300 MHz or less processor 128 megabytes or less of RAM and a 2 D graphics accelerator may have its resources sufficiently tied up in handling the various functions associated with the user interface to be unable to quickly generate content on the fly for scrolling in a manner which provides a smooth visual experience to the user. Note however that these exemplary embodiments are not limited to implementation on this purely illustrative set top box or similar client devices. In fact although these exemplary embodiments provide benefits for use with such thin client devices they can be employed on client devices having significantly greater processing resources so as to free additional resources for other functionality.

Thus according to one exemplary embodiment a predetermined number of rows and or columns in addition to those which are displayed in a user interface view are generated and stored for use when scrolling inputs are received by the user interface. For example if the user interface view provides a list of 30 items 1 per row of which 5 are visible at any given time then the user interface could create 10 graphical rows e.g. 5 visible on screen at the moment and 5 hidden off screen . Then as the user scrolls the user interface populates each row in the list with the appropriate data e.g. metadata a .jpg file associated with a DVD cover art image etc. using pre stored data to populate the new row s as the user scrolls the interface.

According to this exemplary embodiment there are as many off screen rows pre generated as there are on screen rows alternatively there could be twice the number of rows off screen as there are on screen e.g. half filled with data corresponding to rows above the top row currently displayed and half filled with data corresponding to rows below the bottom row which is currently displayed . This addresses at least in part the inability to create rows on the fly in some exemplary implementations e.g. when such user interfaces are generated on thin client devices. Using this technique the user interface can scroll several rows in either direction while showing a continuous scrolling list to the user.

According to exemplary embodiments single row scrolling mode is typically the default scrolling mode and can be used whenever the user is moving slowly through content. Moving slowly through content can be described as any single line scroll wheel click or spin. It will be appreciated that a scroll wheel click can be described as moving a scrollable wheel one increment in either direction of movement from its current position. This single increment of scroll wheel motion is typically associated with some type of feedback e.g. the sound of a single click or the feel of having pushed the wheel over a single set amount of resistance for a user such that the user knows when a single increment of the wheel has occurred. In single row mode the scrolling list moves one row for each click of the scroll wheel i.e. by shifting existing rows up or down and re populating the bottommost or topmost row respectively with pre stored data. This provides a smooth scrolling experience as each row is moved smoothly from off screen to on screen.

According to another exemplary embodiment page at a time scrolling mode can be used for example to scroll lists of content for which a user has been found to most often browse the list a single page at a time. In this context a page of content is equal to the number of rows or columns displayable at one time for a given user interface screen. For example when in page at a time scrolling mode a single scroll operation for the user interface screen shown in would result in all six rows being displaced with new data items. When page at a time mode is enabled any spin of the scroll wheel greater than one click will move the user from single row mode to page at a time mode. Once a user has entered page at a time mode the list will be scrolled one page by moving all off screen rows smoothly from off screen to on screen. Additionally while transitioning from single row scrolling mode to page at a time scrolling mode the exact number of scroll wheel clicks can be ignored regardless of whether the user scrolled more or less than a full page. Scroll wheel interactions tend to come in discrete groups of clicks since the user will pause scrolling when their finger reaches the top or bottom of the scroll wheel bed. If they wish to continue scrolling they will generally pick up their finger move it to the other end of the exposed wheel and continue the previous movement. The page at a time scrolling mode according to these exemplary embodiments can for example end in one of two ways 

However these scrolling solutions while they address in part the difficulties of scrolling in systems having for example limited resources also create some additional challenges. For example if the user scrolls continuously the user interface may still not be able to repopulate and reposition each row or column fast enough to keep up with the scrolling animation occurring on screen. For example after a user in page at a time scroll mode scrolls down by a complete page the system will need some time to generate the new off screen list elements. Continuous activation of e.g. page down scrolling may cause the system to lag behind in being able to present new scrolling content which may provide jerky or discontinuous viewing. Alternatively if in a single action the user scrolls more rows than the user interface has cached off screen e.g. in the example given above if the user scrolls more than 5 rows then the user interface will run out of pre stored rows to re use and does not have sufficient pre generated rows to populate the on screen rows with actual list data.

To address these challenges exemplary embodiments can also provide a fast scrolling mechanism e.g. in addition to single scrolling and page at a time scrolling in combination with either single scrolling or page at a time scrolling or by itself. The fast scrolling mechanism according to these exemplary embodiments involves for example replacing the rows or columns displayed on screen with an animation of dummy data when the user requests a scrolling of content which is faster than what the user interface can render to the display using e.g. pre cached rows or columns of actual data. Fast scroll mode can for example be entered either when the user attempts to scroll more than a single page while in single row mode or if using page at a time mode when the user spins the scroll wheel a second time once they have already entered page at a time mode. However it will be appreciated that these exemplary embodiments are not limited to these purely exemplary techniques for entering fast scroll mode and that this mode can be entered using any desired mechanism.

According to one exemplary embodiment the animation of dummy data provided in lieu of actual scrolling content is individually created for each screen based on a set of representative content for that screen and is designed to appear as if the user were scrolling quickly past the actual content in the list. The content is blurred such that at least some of the individual characteristics of each row are indistinguishable from row to row which provides blurred animation of dummy data to be perceived by the end user as representative of any the actual content being scrolled through very quickly. One purely illustrative example showing this type of fast scroll mode animation is shown in for the list of . Although it may be difficult to discern in the still snapshot image of the animation shown in the fast scroll animation according to exemplary embodiments provides the user or observer of the user interface with the visual impression of rapid movement of the scrolling items e.g. either vertically up or vertically down in this example in a manner which is reminiscent of the visual impression provided by the images imprinted on the wheels of a slot machine as they are rotating during a spin. Thus the images which are scrolling may appear blurred to the user as seen in due to the speed at which they are scrolling across the screen.

While displaying the scrolling animation in this fast scroll mode the user interface can intentionally avoid using actual data i.e. hide the on screen rows or columns to further reduce the load on the client s CPU. More specifically this can involve allowing the client s processor s to not update each individual row or column within the scrolling user interface element but to instead do a single update to all on screen rows once the animation has ended and the user has reached their final scroll position. Additionally if the data used to generate each list is queried from a database jumping over the content between the start and end locations permits a reduction in the number of database queries generated to scroll the content and thereby further reduce load on the CPU.

In terms of scrolling content the above described exemplary fast scroll process can be used to display a scrolling list of images text or a mixture of both. The displayed animation using dummy data will typically not be an exact match for any set of actual content being scrolled. However the dummy data used to perform the scrolling animation can be tailored based upon known available information regarding the actual content so that the animation is relatively well matched to the actual content being scrolled through. For example in a bookshelf based visual solution there could be full bookshelves i.e. space for 12 images in each shelf with 12 images being shown or partially full bookshelves i.e. space for 12 images with only an average of 3 5 images per shelf. Depending upon which bookshelf type matches the associated content different animations can be displayed which approximate the desired look. For another example compare music album covers with photo snapshots. Music album covers while having an average color palette that differs between music album covers typically have an average color palette that uses brighter colors than a typical photo snapshot. Therefore animations using dummy data with brighter color palettes could be used for fast scrolling through visual directories or bookshelves of music album covers as compared to the dummy data used to provide a blurred animation of fast scrolling through visual directories or bookshelves of photo snapshots.

According to some exemplary embodiments the images used are animated Multiple image Network Graphics MNG images. MNG is a member of the Portable Network Graphics PNG family that can include multiple images such as animations or complex still frames made from multiple PNG or Joint Photographic Experts Group JPEG Network Graphics JNG single image data streams. For more information regarding MNG the interested reader is pointed to the MNG 1.0 specification which can be found online at www.libpng.org pub mng spec . Other methods of animation may alternatively be used to animate images for fast scrolling according to these exemplary embodiments preferably but not limited to techniques which do not heavily tax the CPU s on the system which is displaying the user interface. For example if an implementation had a video processor in addition to a general purpose processor such an implementation could use pre created video to display the animation in order to free up the CPU for processing the next group of data.

Animated MNG images of dummy data to be used in fast scroll mode for a particular list or user interface element can for example be created by taking two screenshots while actual content associated with that list is scrolled on a display to two consecutive positions. These two screenshot images can then be pasted together into a single continuous image such that the image can be scrolled indefinitely in either direction without any breaks. This image is then blurred according to this exemplary embodiment by 60 pixels along the axis of scroll to both give the illusion of speed and to make specific content unrecognizable. This blurred image is then animated using six frames which when displayed in a repeating loop create the illusion of large amounts of non specific content scrolling indefinitely.

The animated MNG images of dummy data are at this point in their creation larger with respect to their file size than may be optimal for a typical thin client. To further improve these animations for use in fast scrolling according to some exemplary embodiments on thin clients smaller images can be created and then scaled to fit the scrolling list. For example this can be accomplished by scaling the image down to 20 of its original size along the axis of scroll and scaling it down to 50 of its original size along the off axis since the image detail is more visible along the non moving axis. For example if the size of the scrolling list was 800 pixels wide by 400 pixels high the dummy data animation used during fast scroll mode could be 400 pixels wide by 80 pixels high which is then stretched to fill the entire 800 pixel by 400 pixel display area. Alternatively different scaling percentages can be used for the animation as desired for different clients and or display sizes. If such optional scaling is used the loss of data from scaling the image enhances the blurring effect on the image and further reduces the load on the client s CPU.

During the above described dummy data animation process in fast scroll mode the blurred content being displayed is typically not specifically recognizable by users. Therefore additional visual feedback can be provided to the user to indicate their current or alternatively destination position in the scrolling list. The feedback provided can be generated differently for each type of scrolling list depending upon what is most helpful for a user to see regarding the list being scrolled. For example as shown in if the scrollable list is an alphabetically ordered list of songs the display of the title of the song at the current position in the list can be displayed. As a user continues to scroll through the list while in the fast scroll mode the feedback which is also referred to herein as the visual context information is typically updated as shown for example in to display a song title showing the user how far he or she has scrolled. In this manner the user is given dynamic visual clues and can see when he or she has reached the point that they are looking for and stop scrolling through the list.

Other items can also be stored in lists that a user may wish to scroll through such as photos or a list of television shows e.g. in an electronic program guide. For photos the dynamic visual context information which is shown during fast scroll mode could be a count or text of such photos for example as seen in Photo 19 out of 87 and or a thumbnail image of the photo at that position in the list. For the television guide a channel number and name could be shown as the visual context information and or the time and date could be shown depending upon for example how the scrollable list has been setup.

According to exemplary embodiments fast scroll mode is capable of using scroll acceleration to more quickly move the user through long lists of information. In fast scroll mode the total distance traveled from the starting scroll position to the current position is tracked. Once a user has moved more than ten rows the system begins to multiply that value distance tracked by for example a logarithmic based modifier. For example the scroll acceleration factor can according to one exemplary embodiment be implemented as the logof the number of rows scrolled damped by log 3 which damping factor can be varied. Thus the acceleration formula can for example be expressed as scrollDelta scrollDelta ceil log abs scrollDelta log 3 where scrollDelta is the number of rows that the user attempted to scroll. This exemplary technique allows a user to quickly jump through long lists of data but by using a logarithm based modifier it keeps the scroll speed from getting to be too fast such that the user passes by an item of interest on the list or repeatedly overshoots a desired selection.

Although the foregoing exemplary embodiments describe the visual context information which is displayed with the blurred dummy data animation according to another exemplary embodiment the visual context information shown can remain static e.g. when the visual context information identifies the scrolling destination rather than providing an update as to current position as shown in . For example when a user is viewing a list such as an electronic programming guide and chooses a selection point within the scrollable content to jump to animation and visual context information can be displayed. In this case the visual context information shows Jump to 56 ESPN to show the user what was selected and that the system is currently jumping to the location. In this case may be desirable to statically display the selection in the visual context information display and not change it while moving through the list i.e. during the display of the dummy data animation.

Utilizing the above described exemplary techniques according to exemplary embodiments a method for scrolling through a list is shown in the flowchart of . Initially a method for scrolling within a graphical user interface GUI includes displaying a first portion of a list having a first plurality of entries which are visible on the GUI at step receiving user input to scroll the list by a number of entries at step displaying an animation of dummy data in portions of the GUI associated with the first plurality of entries while the list is being scrolled at step ceasing scrolling at step and replacing the animation of dummy data with a second portion of the list including a second plurality of entries at step .

Systems and methods for processing data according to exemplary embodiments of the present invention can be performed by one or more processors executing sequences of instructions contained in a memory device. Such instructions may be read into the memory device from other computer readable mediums such as secondary data storage device s . Execution of the sequences of instructions contained in the memory device causes the processor to operate for example as described above. In alternative embodiments hard wire circuitry may be used in place of or in combination with software instructions to implement the present invention.

Numerous variations of the afore described exemplary embodiments are contemplated. The above described exemplary embodiments are intended to be illustrative in all respects rather than restrictive of the present invention. Thus the present invention is capable of many variations in detailed implementation that can be derived from the description contained herein by a person skilled in the art. All such variations and modifications are considered to be within the scope and spirit of the present invention as defined by the following claims. No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also used herein the article a is intended to include one or more items.

