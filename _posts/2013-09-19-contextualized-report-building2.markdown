---

title: Contextualized report building
abstract: A system and method for facilitating rendering a user interface display screen or portion thereof. An example method includes determining context information associated with a user, wherein the context information includes use job role information; and employing the context information to select one or more visualization types from a set of available visualization types. The method may further include using the context information to provide one or more first user options to select one or more categories of data pertaining to a business task; referencing the one or more categories to facilitate determining one or more data attributes, dimensions, or measures associated with the context information; utilizing the one or more data attributes and the context information to select the one or more visualization types from the set of available visualization types; and providing a second user option to choose a visualization type from among selected visualization types.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09576263&OS=09576263&RS=09576263
owner: ORACLE INTERNATIONAL CORPORATION
number: 09576263
owner_city: Redwood Shores
owner_country: US
publication_date: 20130919
---
This application is related to U.S. Pat. No. 7 705 847 filed Mar. 5 2007 entitled GRAPH SELECTION METHOD which is hereby incorporated by reference as if set forth in full in this application for all purposes.

The present application relates to software and more specifically to user interface designs and methods for graphically displaying and interacting with data and or concepts.

Software for facilitating information visualization report generation or analytic generation is employed in various demanding applications including enterprise resource planning scientific research digital libraries data mining financial data analysis market studies manufacturing production control drug discovery and so on. Such applications often demand task specific illustrative user interface display screens and accompanying visualizations for clearly illustrating data and accompanying characteristics patterns and interrelationships.

Space efficient and illustrative visualizations are particularly important in enterprise applications where data sets can vary widely and where many types of visualizations may be available to render underlying data and provide associated software functionality. Visualizations for interpreting enterprise data may intuitively convey meaning inherent in underlying data and may include software functionality for exploiting the information to answer key business questions and to facilitate informed decision making.

Conventionally software for visualization of enterprise data lacks effective mechanisms for facilitating custom visualization construction beyond specifying visualization source data and superficial visual encoding of rendered data attributes. For example certain visualization software may include tools for facilitating creation of a pie chart from dimensions of a database table and may include user options for selecting colors for different slices of the pie chart.

Accordingly conventional enterprise visualization software typically relies upon data characteristics to drive visualization creation such that the resulting visualizations are tailored to the source data. However users may not know what relationships they are seeking among data to be visualized and consequently may have difficulty selecting an appropriate visualization from a potentially large list of available visualizations.

Furthermore users may become overwhelmed by potentially unnecessary or irrelevant source data and users may not know what type of visualization to employ to render or otherwise display data. For example a user may not know whether a pie chart line graph or tree diagram sunburst visualization or galaxy visualization would provide the most illustrative representation of the data for what the user is attempting to accomplish.

Hence since users may not know what insight they seek or what questions they want answered users often rely upon guesswork when selecting visualizations. However such guesswork can inhibit informed decision making resulting in potentially important decisions being made without critical insight.

An example method facilitates guiding user selection of visualizations and rendering of associated user interface display screens or portions thereof. The example method includes determining context information associated with a user wherein the context information includes use job role information and employing the context information to select one or more visualization types from a set of available visualization types.

In an illustrative embodiment the method further includes using the context information to provide a first user option to select one or more categories of data pertaining to a business task referencing the one or more categories to facilitate determining one or more data attributes dimensions or measures associated with the context information and source data utilizing the one or more data attributes and the context information to select the one or more visualization types from the set of available visualization types providing a second user option to choose a visualization type from among the selected one or more visualization types and accessing data pertaining to the one or more data attributes to generate instructions for rendering a visualization consistent with a visualization type chosen by a user via the second user option.

The step involving using the context information may further include providing the one or more user options via a decision tree. The decision tree may facilitate user selection of a business task and one or more business objects in preparation for generation of an associated visualization. The context information may further include information characterizing a software application such as Business Process Management BPM software application and or other enterprise software application s communicating therewith which launches or facilitates launching a process for implementing the method.

The step involving providing a second user option may further include displaying a set of user interface controls via a visualization picker. The visualization picker is adapted to provide user options for selecting visualization types or visualization action categories and sub types for rendering a visualization characterized by a selected visualization type and or sub type.

Hence certain embodiments discussed herein may employ business context information to enable users to build custom visualizations. Software implemented in accordance with systems and methods discussed herein may provide intuitive contextualized query building and visualization capabilities capable of mapping context filtered business attributes to expressive visualizations consumed by enterprise applications. The leveraging of context information such as user job role BPM workflow business tasks and so on to guide visualization creation enables context relevant selections of data attributes and associated visualizations.

Accordingly such methods and associated mechanisms can be particularly insightful for users who lack upfront knowledge of what insight they are seeking from a visualization or exactly how answers to questions should be visually rendered. Conventionally users may rely upon problematic guesswork when building visualizations thereby potentially leading to uninformed decision making.

Recall that conventionally visualizations are tailored to the data rather than to the users and associated tasks that the user wishes to perform. At best conventional visualization techniques and accompanying user interface software provided users with a selection of visualization types based on data characteristics.

In summary various embodiments discussed herein provide methods and mechanisms that may guide a user in selecting and triggering generation of expressive data visualizations that are tailored to their immediate needs.

A further understanding of the nature and the advantages of particular embodiments disclosed herein may be realized by reference of the remaining portions of the specification and the attached drawings.

For the purposes of the present discussion an enterprise may be any organization of persons such as a business university government military and so on. The terms organization and enterprise are employed interchangeably herein. Personnel of an organization i.e. enterprise personnel may include any persons associated with the organization such as employees contractors board members customer contacts and so on.

An enterprise computing environment may be any computing environment used for an enterprise. A computing environment may be may be any collection of computing resources used to perform one or more tasks involving computer processing. An example enterprise computing environment includes various computing resources distributed across a network and may further include private and shared content on Intranet Web servers databases files on local hard discs or file servers email systems document management systems portals and so on.

Enterprise software such as Enterprise Resource Planning ERP software may be any set of computer code that is used by an enterprise or organization. Examples of enterprise software classifications include HCM Human Capital Management software CRM Customer Relationship Management software BI Business Intelligence software and so on. Additional examples of enterprise software include Financials Assets Procurement Projects Supply Chain and so on. The terms enterprise software enterprise software application and enterprise application may be employed interchangeably herein.

Enterprise software applications such as Customer Relationship Management CRM Business Intelligence BI Enterprise Resource Planning ERP and project management software often include databases with various database objects also called data objects or entities. For the purposes of the present discussion a database object may be any computing object maintained by a database.

A computing object may be any collection of data and or functionality. Examples of computing objects include a note appointment a particular interaction a task and so on. Examples of data that may be included in an object include text of a note e.g. a description subject participants time and date and so on of an appointment type description customer name and so on of an interaction subject due date opportunity name associated with a task and so on. An example of functionality that may be associated with or included in an object includes software functions or processes for issuing a reminder for an appointment.

Enterprise data may be any information pertaining to an organization or business including information about customers appointments meetings opportunities customer interactions projects tasks resources orders enterprise personnel and so on. Examples of enterprise data include work related notes appointment data customer contact information descriptions of work orders asset descriptions photographs contact information calendar information enterprise hierarchy information e.g. corporate organizational chart information and so on. The terms enterprise data and business data are employed interchangeably herein.

For clarity certain well known components such as hard drives processors operating systems power supplies routers Internet Service Providers ISPs the Internet metadata services layers and so on have been omitted from the figures. However those skilled in the art with access to the present teachings will know which components to implement and how to implement them to meet the needs of a given implementation.

For the purposes of the present discussion information visualization may be any process involving graphically representing data according to a method or scheme. A graphical representation of data resulting from an information visualization technique is called a visualization. Example visualizations include pie charts treemaps bar charts line graphs and so on.

The client system also called a client device or client computer includes client side software applications such as a browser in communication with a display such as a touch screen display of a smartphone. The client side browser communicates with applications running on the enterprise server system .

The example enterprise server system includes a visual information builder application in communication with enterprise software including web services and or Application Programming Interfaces APIs which are both adapted to communicate with the client side browser and or other client side software applications. The enterprise server system includes additional enterprise applications such as CRM HCM and BI applications that maintain enterprise content including data and functionality. Examples of enterprise content include data and functionality maintained via various types of computing objects such as CRM HCM and BI business objects and other enterprise objects .

For the purposes of the present discussion an object such as a data object may be any grouping of or encapsulation of data and or functionality. Examples of objects include classes or structures implemented via object oriented programming languages tables rows or records of a database and so on. The terms object and computing object may be employed interchangeably herein.

Examples of computing objects include a note appointment a collection of information pertaining to particular interaction a task and so on. Examples of data that may be included in an object include text of a note e.g. a description subject participants time and date and so on of an appointment type description customer name and so on of an interaction subject due date opportunity name associated with a task and so on. An example of functionality that may be associated with or included in an object include issuing a reminder for an appointment.

A business object may be any object used to organize information and or functionality for business purposes. An example business object may be formed by creating a name for the business object such as CRM Opportunity or Goal and then associating information with the name. For example CRM Opportunity object may be associated with a conversation one or more enterprise personnel one or more kudos assigned to a team that is associated with the object and so on. Data that is associated with a business object may be contained within a data structure or database associated with the object or the information may be distributed among different applications computers and so on without departing from the scope of the present teachings.

A representation of an object i.e. a displayed object may be displayed via graphical depiction such as a node of a tree diagram a menu item dialog box personnel icon an entire user interface display screen and so on. The graphical depiction of an object may also be called an object a displayed object or a node of a visualization.

The enterprise server system further includes Business Process Management BPM software in communication with the visual information builder and other web services . Note that the visual information builder may be implemented as a web service which is launched via or otherwise managed via the BPM software . Similarly the BPM software may manage and or launch various other web services accessible to the client system .

The BPM software is further adapted to facilitate communications between the visual information builder web services and back end enterprise applications such as CRM HCM BI applications and so on. In the present example embodiment the BMP software further facilitates access to ERP system configuration data and application content by the web services and visual information builder .

The example visual information builder includes a controller in communication with a user interface rendering instruction generator a context collection module an analysis module and an enterprise data selection module . The controller facilitates interfacing and coordinating communications between the various modules and other back end enterprise applications via the BPM software . The BPM software may be implemented as a type of middleware that that may coordinate web service work flows and perform various software interfacing functions.

For the purposes of the present discussion BPM software may be any collection of computing resources e.g. software hardware memory and so on that is adapted to facilitate management of middleware processes or integration of or intercommunication between software services and accompanying tasks. BPM systems may facilitate designing modeling executing monitoring and optimizing applications that involve employing distributed functionality e.g. functionality that is provided as software services that may be located at different locations on a network.

Software functionality may be any function capability or feature e.g. stored or arranged data that is provided via computer code i.e. software. Generally software functionality may be accessible via use of a user interface and accompanying user interface controls and features. Software functionality may include actions such as retrieving data pertaining to a computing object e.g. business object performing an enterprise related task such as promoting hiring and firing enterprise personnel placing orders calculating analytics launching certain dialog boxes performing searches and so on.

Business process management context information may be any context information pertaining to one or more running processes and or software applications that the one or more processes interact with including BPM workflows. Business context information may include any context information that is related to a business entity e.g. a resource software application employee enterprise task opportunity contact and so on. The terms business context information and business context are employed interchangeably herein.

In general context information may be any information that may be employed to inform the visual information builder to facilitate selecting visualization types data attributes of underlying data used to generate a visualization and so on. Accordingly context information includes any information pertinent to generation of a visualization but that may be auxiliary to the data itself including but not limited to user data such as user privileges and job role enterprise tasks opportunities and goals assigned to or associated with a user business contact information and so on.

Context information is said to be associated with a user if the context information is associated with a device or software accessible to the user. Such context information may pertain directly to the user and or pertain to one or more tasks opportunities or other computing objects e.g. business objects that are associated with or otherwise employed by a user or used by software employed by the user. .

Note that in certain embodiments discussed herein user context information may be derived in part with reference to a permissions database such as the enterprise system configuration database which stores user enterprise access permissions e.g. software and data access and use privileges information.

User privileges information may be any permissions or specification of permissions associated with a user wherein the permissions specify whether or not and or how a user may access or use data software functionality or other enterprise resources. Accordingly user privileges information also simply called user permissions or user privileges may define what a user is permitted or not permitted to do in association with access or use of enterprise resources such as computing resources.

User job role information may include any data characterizing a position or description of a position held by the user at an enterprise. Accordingly job role information may be a type of context information associated with the user wherein the context information may also include user privileges information associated with the job role i.e. position. For example if a user is a system administrator employee the user may have special permissions to change system configuration parameters and may then have access to various types of visualizations characterizing system architecture operations and so on.

The user interface rendering instruction generator of the visual information builder includes computer code for generating user interface displays screens with user interface controls for selecting initial sets of relevant data attributes i.e. relevant to the current context as identified via context information and associated visualization types and guiding user selection of visualization types.

In addition the user interface rendering instruction generator is adapted to selectively access underlying data from the enterprise data selection module to enable generation of a visualization. The visualization is generated in accordance with a visualization type selected by a user from a group of automatically selected visualization types based on a set of automatically determined data attributes characterizing the underlying data i.e. source data or filtered source data.

For the purposes of the present discussion underlying data may be any data used to generate a visualization where nodes or components of the visualization may represent one or more objects features dimensions measures and or other data characteristics also called data attributes. Hence underlying data may include information or functionality represented by or corresponding to a node including link information. For example a node representing a person in an enterprise organizational chart may be associated with additional underlying data that includes for example employee job title phone number address and so on.

Note that a visualization may be coupled to or otherwise include one or more user interface controls which are associated with software functionality whereby user selection of the user interface control triggers execution of a software action.

A software action may be any process or collection of processes or operations implemented via software. Additional examples of processes include updating or editing data in a database placing a product order creating an opportunity business object creating a business contact object adding a revenue line to a business object displaying data visualizations or analytics triggering a sequence of processes launching an ERP software application displaying a dialog box and so on.

A business task may be any activity to be implemented via one or more resources of a business. For example a business task may include a software action involving updating a business object in a database.

A data attribute also simply called attribute herein may be any value or property characterizing data. Accordingly an attribute of a visualization node or associated data may refer to any characteristic of data used to generate a visualization where the characteristic may be employed to group or otherwise organize or visually distinguish the data by adjusting features or characteristics of the visualization. Examples of attributes include data dimensions or layers such as specified by row or column headers of tables used to store the data used for a visualization.

The example context collection module of the visual information builder includes computer code for communicating with the back end enterprise applications e.g. via the BPM software and or other web services to collect the context information. The context information may include for example information pertaining to a given business task that a user is working on e.g. via the client system information pertaining to or characterizing which client side application and or server side web service or other application that call the visual information builder to facilitate displaying a visualization information characterizing describing or otherwise associated with a user job role in an enterprise user privileges information enterprise data characteristics including data attributes e.g. dimensions measures or metrics and so on and so on.

The analysis module includes computer code for selectively combining context information including associated data attributes dimensions and measures with user input provided via the decision tree i.e. decision tree information reflecting information characterizing user job role a selected task and or a selected business object to provided suggested visualizations. The suggested visualizations may represent a group of software selected visualizations wherein the selection of the visualizations is based on context information which may include user provided context information and or automatically determined context information. Note that the terms visualizations and visualization types may be employed interchangeably herein depending upon the context in which the terms are used.

The enterprise data selection module is adapted to collect underlying data from the enterprise content and or via the web services used to by the user interface rendering instruction generator to generate instructions used by the client system to generate one or more visualizations . In the present example embodiment the one or more visualizations have been selected via a user via a visualization picker rendered in the display of the client system . Note that the client system and accompanying browser are adapted to render user interface display screens and accompanying features based on rendering instructions retrieved via the user interface rendering instruction generator of the visual information builder .

Note that various modules of the system may be combined with other modules and or otherwise distributed about a network or repositioned without departing from the scope of the present teachings.

In operation the example visual information builder is adapted to employ business context information e.g. as provided via the context collection module to facilitate generating user interface display screen features that guide a user through triggering generation of a visualization based on or otherwise reflecting the context information. The visualization information builder may be implemented as a stand alone application that can be run server side and invoked client side via a browser or may act as a component that is invoked via other web services and or enterprise applications accessed via the client side system via the BPM system . Furthermore in certain implementations the visual information builder may be implemented client side such as part of an application running on the client system without departing from the scope of the present teachings.

Initially a decision tree is displayed via the client display . The decision tree may include a graphical representation illustrating various user options e.g. as implemented via user interface controls for facilitating selecting determining and or narrowing relevant context information to be used to guide visualization selection. The decision tree itself may be constructed based on user privileges and job role information in addition to information characterizing which application launched or called the visual information builder . The decision tree and may be adapted to enable a user to select a business object and associated task to be used for augmenting the context information of the context collection module .

For the purpose of the present discussion a decision tree may be any mechanism for guiding user selection of options and or entering of information consistent with a structure of the decision tree. The decision tree discussed herein provides user options for selecting categories of data where such categories may related to a business task business object or other entity.

After a user selects a business object or otherwise finishes interacting with the decision tree and decides to proceed with generating a visualization the visual information builder automatically determines data attributes characterizing the underlying data based on user input provided via the decision tree and any preexisting context information e.g. information pertaining to user job role privileges and information characterizing which application launched the information builder .

A visualization picker is displayed in association with a visualization display area also called a canvas as discussed more fully below. A visualization picker may be any set of user interface controls adapted to enable a user to select a visualization type from among plural visualization types. The set of user interface controls may be implemented via a widget form questionnaire and or other mechanisms. For example in the present example embodiment the visualization picker represents an interactive graphic with various buttons that may be user selected to register user selection of a visualization type or visualization action category and or sub type as discussed more fully below with reference to .

A user then employs the visualization picker to select a visualization type and or sub visualization type from a set or group of visualizations that have been determined by the visual information builder to be relevant to the current business context as determined with reference to collected context information maintained via the context collection module .

Note that the set or group of visualizations i.e. visualization types is determined with reference to the context information e.g. as provided via the context collection module . When the current context is determined at any step of the visualization construction guiding process e.g. represented via the displayed user interface features in the display the context collection module may generate a signal that includes the context information. The signal may then be forwarded to the user interface rendering instruction generator .

The user interface rendering instruction generator then uses information contained in the signal to determine i.e. select one or more visualization types e.g. a set of selected visualization types individual types of which are user selectable via the picker and associated data attributes to be made available to the user via the client side display .

Hence the visual information builder represents an interactive framework that provides intuitive contextualized query building and visualization capabilities. The present example embodiment represents a software solution that is adapted to guide users including causal or inexperienced users through a process of mapping business attributes to expressive visualizations which can then be consumed in enterprise applications.

Accordingly the present example embodiment leverages surrounding context user job role information business process management workflow information business task information and so on to facilitate guiding end users through the visualization creation process presenting users with a context based selection of business attributes that are relevant to the business task users wish to create a visualization for as well as presenting estimates of relevant visualization types usable to render underlying data in an efficient and effective manner.

In summary instead of providing users with a list of all possible business attributes in a database or data source as may be conventionally done the visual information builder delivers a selection of business data optimized for a specific business task. The business task may be automatically determined via the visual information builder and or with reference to user input provided via the decision tree . The graphical decision tree is adapted to assist end users in formulating what business task they wish to visualize based on their business role also called job role .

The starting point of the graphical decision tree may be determined based on the user role and BPM context from which the visual information builder has been launched. Accordingly if the component is invoked from an order exception page in a distributed order orchestration application for instance users will see options specific to the order exception management process. The options may manifest for example in the decision tree and the visualization picker . Similarly if the visual information builder is launched from a requisition page in an HCM application the visual information builder may facilitate display of information related to recruiting process only.

User job role information may also play a role in the display of possible options in the graphical decision tree . Accordingly a senior level Human Resources HR manager may not see the same options in the decision tree as would an individual contributor.

When users have identified the business task they would like to visualize e.g. via the graphical decision tree the visual information builder may then facilitate display of a selection of business attributes dimensions and measures most relevant to this particular task. This may help casual users make optimal choices based on what they would like to achieve instead of being overwhelmed by unnecessary information from the data source or presented by standard information preset by an Information Technology IT department and which is not necessarily relevant to their role and tasks.

Note that the visual information builder uniquely leverages context information to facilitate presenting users with a selection of visualizations tailored to one or more business tasks they selected via the graph decision tree .

In addition to leveraging the business context information e.g. job role BPM workflow business task information as selected in the decision tree the visual information builder may also leverage an algorithm discussed more fully in U.S. Pat. No. 7 705 847 entitled GRAPH SELECTION METHOD which is incorporated by reference herein in full.

The algorithm discussed in the above identified US Patent facilitates enabling users to select the suitable graphs based on data characteristics identified via the decision tree visualization tasks as provided by a decision table as shown in of the above identified US Patent and user roles.

The selection of the suitable graph for a specific business task is further facilitated through the use of the visualization picker . The visualization picker may be implemented as an interactive roulette or widget which dynamically categorizes the relevant visualizations that may have been selected based on the above mentioned business context and algorithm under categories of visualization action types. Using this picker users can pick the most adequate or suitable available visualization to display underlying data depending on whether the users would like to identify results of an analysis compare results see trends or correlations etc.

By focusing the selection of visualizations on end users and their tasks the visual information builder allows the user to rapidly filter relevant graph types for the business tasks he she wants to perform thereby facilitating the visualization creation process for casual end users and avoiding guesswork and potential errors resulting from standard business attributes and visualization selection process.

Accordingly the contextualized approach of the visual information builder may limit the selection of business attributes and visualizations to relevant choices based on the user s job role BPM context information the task they want to complete and data characteristics.

For the purposes of the present discussion a user interface display screen may be any software generated depiction presented on a display. Examples of depictions include windows dialog boxes displayed tables and any other graphical user interface features such as user interface controls presented to a user via software such as a browser. A user interface display screen contained within a single border is called a view or window. Views or windows may include sections such as sub views or sub windows dialog boxes graphs tables and so on. In certain cases a user interface display screen may refer to all application windows presently displayed on a display.

A user interface control may be any displayed element or component of a user interface display screen which is adapted to enable a user to provide input view data and or otherwise interact with a user interface. Additional examples of user interface controls include buttons drop down menus menu items tap and hold functionality and so on. Similarly a user interface control signal may be any signal that is provided as input for software wherein the input affects a user interface display screen and or accompanying software application associated with the software.

The first example user interface display screen includes a header indicating user log in information which is associated with user privileges and job role information and which may form part of the context information used to generate various features of the user interface display screen .

The example decision tree includes various steps which graphically depict user options for performing various selections indicated via the steps . For example the steps include a first prompting step which prompts the user to indicate what the user is interested in. As a product manager the user e.g. Jamie Frost may indicate that they are interested in finding talent for a new requisition to facilitate implementing a product management strategy for a new Integrated Circuit IC .

In the present example embodiment the user has selected the IC step which triggers display of indications of various associated computing objects or information categories pertaining to five different IC products. The user then selects the third IC object . Note that a user may at any time select and drag one of the object representations to the canvas to automatically generate a visualization based on context information derived via user interaction with the decision tree user job role user privileges and information pertaining to the software that launched the software application that is rendering the user interface display screen .

Alternatively a user may manipulate the visualization picker to first select a visualization type from among plural visualization types indicated via icons in the visualization picker . Note that in certain implementations user selection of one of the visualization type icons may trigger display of any sub types of visualizations associated with a given type of visualization indicated via the one or more visualization type icons .

Save and discard user interface controls implemented as buttons in the present example embodiment are adapted to provide user options to save or discard changes made to the decision tree and or visualization canvas respectively.

Accordingly the decision tree represents an in context graphical decision tree that is adapted to provide user options for end users to formulate what they would like to see in their visualization and to identify relevant business data and actions.

The graphical decision tree leverages the BPM context information passed on by the enterprise applications that calls the associated visualization information builder as well as job roles to facilitate determining where to start the process via the graphical decision tree . The graphical decision tree is adapted to guide end users through a series of steps that will help them determine what they would like to focus on in the subsequently displayed visualization.

Note that in the present example embodiment a user has employed the visualization picker to select a first visualization type represented by a visualization type icon . User selection of the visualization type icon results in highlighting or otherwise visually distinguishing a sector of the visualization picker that includes the selected visualization type icon .

The resulting displayed visualization is of the type selected via the visualization picker and associated selected icon . The rendered visualization is based on automatically selected data attributes which are in turn based on the user selected business object . Note that in certain implementations user options for further selecting changing omitting or adding data attributes may be provided without departing from the scope of the present teachings.

The example visualization includes a data mixing table section which illustrates selected data attributes used to generate graphics in an adjacent top talents section of the visualization . Note that the visualization may include various additional user options and associated user interface controls for manipulating augmenting or otherwise changing the visualization and or underlying data rendered thereby.

Accordingly as shown in instead of merely presenting users with a list of all data attributes associated with data maintained in data source the user sees a list of business data relevant to their job role the context where the builder has been launched and the business task e.g. as indicated via the object representation that the user would like to accomplish.

Note that while certain embodiments discussed herein pertain to generation of visualizations embodiments are not limited thereto. For example certain methods and accompanying systems discussed herein may be adapted for use in generating other user interface features e.g. windows tables reports and other analytics without departing from the scope of the present teachings.

For the purposes of the present discussion an analytic may be any calculation or measurement based on a given input. Certain analytics may be displayed graphically. For example an analytic that calculates a degree of a match between a user and a candidate position based on information about the user and various candidate positions may be displayed via a bar chart. In general for the purposes of the present discussion a graphically displayed analytic or other visual representation of data is considered to be a type of visualization.

Note that in the updated decision tree the various object representations of have been collapsed under the selected object representation . Furthermore additional indicators show that business attributes and visualization actions have been associated with the selected object representation .

In the present example user interface display screen the user has selected a visualization type by selecting a corresponding icon from the visualization picker . However the selected visualization type is associated with various user selectable sub types as represented via user selection options . Note that a given visualization type may correspond to or represent a category of visualization action types wherein the sub types represent particular visualization actions.

The example user selectable visualization sub types include a top ranking table visualization sub type a status meter gauge horizontal visualization sub type and a status meter gauge vertical visualization sub type . A user may select one of the visualization sub types to trigger rendering of a visualization characterized by the selected visualization sub type and based on underlying data and accompanying context specific data attributes.

The visualization picker which may be implemented via a roulette widget is further adapted to provide user options to select what visualization tasks or actions they would like to use for their visualizations identify compare see trends see correlation etc. .

Accordingly the visualization picker represents an interactive roulette adapted to dynamically categorize relevant visualizations e.g. as selected based on the above identified business context and algorithm under categories of visualization action types. Using this tool users can pick the most adequate visualization depending on whether they would like to identify results of an analysis compare results see trends or correlations and so on.

Hence by focusing the selection of visualizations on end users and their tasks the underlying visual information builder e.g. visualization information builder of allows the user to rapidly filter relevant graph types for the business tasks they wish to perform thereby facilitating the visualization creation process for casual end users and avoiding guesswork and potential errors resulting from standard business attributes and visualization selection process.

The example method includes a first step which involves using the context information to provide one or more first user options to select one or more categories of data e.g. pertaining to the object representations of pertaining to a business task e.g. as represented by the one or more tasks indicated in the decision tree of .

A second step includes referencing the one or more categories to facilitate determining one or more data attributes dimensions or measures associated with the context information e.g. as indicated via the data attributes section of .

A third step includes utilizing the one or more data attributes and the context information to select the one or more visualization types from the set of available visualization types. The selected visualization types may be represented in or otherwise accessible via or associated with a visualization picker such as the visualization picker of .

A fourth step includes providing a second user option e.g. via the visualization picker of to choose a visualization type from among the selected one or more visualization types.

A fifth step includes accessing data pertaining to the one or more data attributes to generate instructions for rendering a visualization consistent with a visualization type chosen by a user via the first user option.

Note that the method may be altered such as by removing steps adding steps and or changing steps without departing from the scope of the present teachings. For example the first step may be augmented to include providing the one or more user options via a decision tree that is adapted to enable a user to select a business task and one or more business objects in preparation for generation of an associated visualization.

The context information may include user privileges information information characterizing one or more user tasks information characterizing a business process management workflow associated with the user one or more characteristics of data to be represented via a visualization and so on.

The method may further include using the context information to automatically select one or more attributes to be employed by the visualization. The one or more attributes may include one or more attributes characterizing a user task indicated via the context information.

The method may further include employing one or more automatically selected attributes and the context information to automatically select the one or more visualization types and then employing one or more selected visualization types to display a decision tree. A user option may be provided in association with the decision tree to select a visualization type for displaying data.

The method may further include determining data and software functionality to be rendered via a visualization and then automatically generating a visualization based on a user selection chosen from among the automatically selected one or more visualization types and the determined data.

A more generalized method for facilitating rendering a user interface display screen or portion thereof includes determining context information associated with a user wherein the context information includes use job role information and employing the context information to select one or more visualization types from a set of available visualization types.

Accordingly certain embodiments discussed herein provide context specific tools tailored to the users and other context information to facilitate timely informed decision making via visualizations that are organically adapt to the business tasks that users want to perform. The contextualized approach of the visual information builder block of discussed herein makes this possible and enables casual users who are not necessarily BI or IT experts to readily build visualizations that can help them answer critical business questions in a timely fashion.

Accordingly the visual information builder may democratizes visual report and visualization building capabilities as casual business users who are not necessarily versed in analytics can now easily create expressive visualization and ad hoc reports.

Although the description has been described with respect to particular embodiments thereof these particular embodiments are merely illustrative and not restrictive. For example while various embodiments discussed herein are adapted to help guide a user through the visualization selection and implementation process embodiments are not limited thereto. For example underlying software mechanisms used to narrow sets of applicable data attributes and visualizations based on context information may automatically select data attributes and choose a specific visualization to render without departing from the scope of the present teachings.

Furthermore embodiments are not limited to enterprise applications involving rendering of enterprise data based on context information. For example various computing environments e.g. university or government computing environments may be mined for context information to facilitate implementing visualizations and associated user interface display screens and visualization construction guidance methods discussed herein without departing from the scope of the present teachings.

In addition note that while various embodiments are discussed herein with respect to visualizations that other types of user interface display screen components may be generated via similar methods and mechanisms as discussed herein without departing from the scope of the present teachings.

Any suitable programming language can be used to implement the routines of particular embodiments including C C Java assembly language etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single processing device or multiple processors. Although the steps operations or computations may be presented in a specific order this order may be changed in different particular embodiments. In some particular embodiments multiple steps shown as sequential in this specification can be performed at the same time.

Particular embodiments may be implemented in a computer readable storage medium for use by or in connection with the instruction execution system apparatus system or device. Particular embodiments can be implemented in the form of control logic in software or hardware or a combination of both. The control logic when executed by one or more processors may be operable to perform that which is described in particular embodiments.

Particular embodiments may be implemented by using a programmed general purpose digital computer by using application specific integrated circuits programmable logic devices field programmable gate arrays optical chemical biological quantum or nanoengineered systems components and mechanisms may be used. In general the functions of particular embodiments can be achieved by any means as is known in the art. Distributed networked systems components and or circuits can be used. Communication or transfer of data may be wired wireless or by any other means.

It will also be appreciated that one or more of the elements depicted in the drawings figures can also be implemented in a more separated or integrated manner or even removed or rendered as inoperable in certain cases as is useful in accordance with a particular application. It is also within the spirit and scope to implement a program or code that can be stored in a machine readable medium to permit a computer to perform any of the methods described above.

As used in the description herein and throughout the claims that follow a an and the includes plural references unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise.

Thus while particular embodiments have been described herein latitudes of modification various changes and substitutions are intended in the foregoing disclosures and it will be appreciated that in some instances some features of particular embodiments will be employed without a corresponding use of other features without departing from the scope and spirit as set forth. Therefore many modifications may be made to adapt a particular situation or material to the essential scope and spirit.

