---

title: Information retrieval and presentation methods and systems
abstract: The present invention provides a networked computer system for retrieving and displaying information, comprising a front-end sub-system and a back-end sub-system. The back-end comprises one or more selectable pipelines for processing the user query, each comprising one or more component software modules selected from a library of modular component software modules having predefined functions or created by a user to cooperate in extracting and processing extracted data, wherein at least one of the one or more pipelines may be customized by modifying either or both of a selection or sequence of the component software modules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342908&OS=09342908&RS=09342908
owner: Auckland Uniservices Limited
number: 09342908
owner_city: Auckland
owner_country: NZ
publication_date: 20131007
---
This invention relates to methods computer programs and systems for retrieving and presenting information. More particularly the invention relates to the selection and retrieval of information from one or more data sources conversion of the selected information into a standard format and presentation of the information in a graph or chart like diagram indicating the relationship between the information.

Information technology provides access to a vast source of information. One of the difficulties in locating and navigating that information however is the inconsistent or inconvenient way in which that information is often organised and presented. In particular it is difficult to quickly appreciate how one source of information is related to another identify the relevant sources and to navigate between those sources in a logical and intuitive manner.

Hypertext documents are an example of one form of presenting information for which navigation and visualizing relationships can be troublesome. Websites such as Wikipedia on the World Wide Web at wikipedia.org and Freebase on the World Wide Web at freebase.com for example comprise large collections of interrelated pages or articles each comprising information on a particular topic. That information in many cases is commonly arranged into a plurality of sub topics. In many cases detailed information on each sub topic will alternatively or additionally be provided in a separate page or article dedicated to that sub topic. A hyperlink to the dedicated sub topic page will therefore commonly be provided in the body of the parent topic page.

In navigating such information sources it is commonly necessary to depart from the original topic page to obtain the required information from one or more other distinct yet related pages. However each sub topic is often a legitimate topic in its own right with hypertext links both to and from other related topics. Accordingly it may not be possible or practical to arrange the information in a strictly hierarchical fashion for example to enable the logical navigation of the related pages using an index table of contents site map or other such outline or summary of topics and sub topics as might be convenient for a particular user. Rather such data sources more commonly have a flat structure navigated by searching for the initial topic and following hyperlinks to related topics or sub topics. To find the required information the user may be required to follow several hyperlinks which may involve trial and error. The user thus invariably relies on the history of their Web browser to go back to a previous page before following another hyperlink and may become waylaid or distracted by unrelated pages.

Legislation is another example of a source of information which can be difficult to navigate. Provisions of legislation may be arranged into a plurality of parts sub parts sections sub sections paragraphs and the like with provisions often referring to other areas of the legislation. One provision may comprise a reference to another related provision and or include words defined elsewhere in the legislation for example. Accordingly upon reading one provision it is often necessary to refer momentarily to another to fully understand the meaning context or effect of the provision. A table of contents is of limited value in such circumstances and there is presently no convenient means for quickly and logically navigating the legislation and in particular providing a visual indication of the relationships between different provisions of the legislation.

Existing systems for visually representing data are generally specifically adapted for visually representing a particular type of data or limited to operating with a specific data source. Such systems are inflexible and cannot be easily adapted for use with other types of data or for compatibility with different data sources and provide only limited if any scope for customisation or extension in particular for end users who may be unfamiliar with the required programming techniques and or may not have access to the source code.

Accordingly there is a need for an improved interface for presenting information which visually indicates the relationship and enabling intuitive navigation between related topics and in particular a system which can be easily customized.

It is therefore an object of the invention to provide a method and or computer system which overcomes or at least ameliorates one or more disadvantages of the prior art or alternatively to at least provide the public with a useful choice.

In one aspect the invention may broadly be said to consist in a computer system for retrieving and displaying information the system comprising 

Preferably said items comprise topics and said nodes are arranged in relation to one another to reflect the contextual relationship between said topics. In particular the front end preferably displays the processed data as a graph or similar visual representation comprising a parent node representing a topic relating to the user query and one or more child nodes representing topics related to that of the parent node said child nodes radiating from the parent node and connected therewith by an edge. Each child node may in turn comprise a parent node to further child nodes radiating therefrom. Each child node may have one or more parent nodes.

Alternatively said nodes may be arranged in relation to one another to reflect a temporal or spatial relationship therebetween. More particularly the nodes may for example be arranged in a diagram comprising a timeline or map respectively.

Preferably said predefined data format comprises a data structure of format suitable for a conversion into a graph. The data structure may comprise a graph object comprising a plurality of node and edge objects for example.

Preferably the back end sub system comprises one or more pipelines for processing the user s query each pipeline comprising at least one component software module selected from a library of modular component modules having predefined functions or created by a user. In particular at least one of said selected component modules comprises an adapter software module adapted to communicate with a data source by transmitting said query and receiving said extracted data in respective predetermined formats of the data source and to convert said extracted data into a predefined format for further processing by the back end sub system. The further processing may comprise processing by one or more further component software modules in the pipeline and or conversion of the processed data into a transmission format for transmission to the front end sub system. Preferably the one or more further component software modules are each adapted to receive and transmit data in said predefined format wherein communication between said component modules occurs in said predefined format irrespective of the predetermined formats of the data source and or transmission format.

The transmission format is preferably any format suitable for transmitting the processed data to the font end most preferably by HTTP such as JavaScript Object Notation JSON format.

The back end sub system preferably comprises a plurality of pipelines wherein each pipeline has a different function determined by the selection and sequence of component modules.

Preferably one or more of said pipelines further comprises two or more component software modules selected from the library or created by the user. The library is preferably extendible and may comprise component software modules selected from the group consisting of at least 

Preferably said pipelines are reconfigurable by the user by selecting and arranging a sequence of said modular component software modules from the library. The pipelines may be configured by editing a pipeline configuration file or by accessing a configuration interface. The configuration interface preferably displays the or each pipeline as a graph wherein each component software module is represented by a node and the sequence of the components is represented by edges therebetween.

Preferably the back end further comprises a pipe line controller wherein the pipe line controller selects a pipeline from the one or more pipelines to process the user s query. The pipeline is preferably selected on the basis of the received data relating to the user query which is preferably based upon an action performed by the user such as selecting the Search button of the searching interface .

Preferably the front end and back end systems comprise computer programs which when executed cause a computer to perform respective functions of the system. More particularly the system preferably has a client server architecture wherein the front end sub system comprises a first computer program executed by a client computer system and the back end sub system comprises a second computer program executed by a server computer system. The client system preferably comprises a personal computing device operated by the user. The personal computing device may comprise a general purpose desktop or laptop computer or a mobile computing device such as a smartphone or tablet for example. The server system preferably comprises one or more servers in communication with the front end by way of a computer network. The one or more servers may comprise at least a Web server in communication with the one or more data sources by way of a computer network. The or each network may comprise a wired and or wireless local area network LAN wide area network WAN the Internet or a combination thereof.

In a second aspect the invention may broadly be said to consist in a computer system for retrieving and displaying information the system comprising 

In a third aspect the invention may broadly be said to consist in a server computer system for retrieving and transmitting information relating to a user query received from a client computer system the server computer system comprising 

In a fourth aspect the invention may broadly be said to consist in a method performed by a server computer system for retrieving and transmitting information relating to a user query the method comprising 

Preferably the component software modules each operate on data in a common format and the method comprises converting data retrieved from one or more data sources having one or more data formats into the common data format. The common format may be a defined set of data types data objects or data structures.

Preferably the predefined format defines a plurality of related nodes each connected or linked to at least one other related node by an edge wherein each node represents an item related to the user query.

In a fifth aspect the invention may broadly be said to consist in a method performed by a client computer system for displaying information relating to a user query the method comprising receiving an input from a user defining a user query 

Preferably one or more of the child nodes comprises a parent node to one or more further child nodes.

Preferably the request defines one of a plurality of pipelines of the server system for processing the request based upon the user input.

Those skilled in the art will appreciate that hardware used to implement systems according to the present invention may be distributed or concentrated as desired without invention based on system requirements and or administrator preferences with known communication means used to relay data between different elements if required. For example the servers data sources databases processors and other elements may be concentrated largely into a single said computer system or separate either co located or geographically dispersed computer systems as desired and depending on system limitations and requirements.

Further aspects of the invention which should be considered in all its novel aspects will become apparent from the following description.

Throughout the description like reference numerals will be used to refer to like features in different embodiments.

Referring first to there is shown an example interactive graphical user interface GUI according to the present invention in which the relationship between various topics or sub topics or more generally the relationship between items is illustrated by a diagram which in this case comprises a mind map like graph of nodes connected to each other by edges . The GUI is presented to the user via an electronic visual display which may comprise a cathode ray tube CRT monitor liquid crystal display LCD or any equivalent or alternative display of a digital computer device. A user can preferably interactively manipulate move zoom select filter etc. the display to explore the data in different ways using a human interface device HID .

In this example the interface is displaying the result of a search of the structured information repository Freebase on the World Wide Web at freebase.com for the topic The Art of War . The interface initially provides a graph centred on the parent node entitled The Art of War representing the Freebase article on that topic. A plurality of sub topics or categories of information relating to that topic are represented by a plurality of child nodes which radiate from the central parent node entitled Webpage Editions Genre and Subjects . Each child node may in turn comprise a parent node to further child nodes representing information or articles or potentially further sub topics appropriately grouped together under the relevant parent node and so on. The further child nodes in this example include the nodes entitled Technology Competition and History which depend from the parent Subjects node .

A user having searched for the initial topic using the searching interface via a human interface device can selectively collapse or expand the various nodes to respectively hide or display any child nodes depending therefrom. The number and type of child nodes depending from a superior node will depend upon the topic of the superior node. For example the primary node The Art of War concerns a book whereas the node Sun Tzu concerns a person in this case the author of the book searched. The child nodes depending from these parent nodes will thus vary accordingly dependent upon the category of the topic and or the content of information available for that topic. The number and or type of child nodes depending from two primary nodes both concerning people or more specifically authors for example would typically be more similar.

Having thus navigated the available topics relating to the search query the user can view further information on a particular topic by selecting the corresponding node to display the information in the information display area . In the example it can be seen that focus is upon the topic node Sun Tzu author of the The Art of War . The Freebase article on Sun Tzu or an extract thereof is displayed in the information display area . The initial topic node for The Art of War also remains expanded to show other topics also related to the initial query which the user can view by selecting the corresponding node using a human interface device such as a mouse keyboard touch pad touch screen or the like. The user may also visually manipulate the interface by selectively minimising or restoring the search interface or information display area moving the graph or zooming in and out for example.

The present invention thus involves the transformation of information typically predominantly textual information such as articles on a topic received from one or more data sources into a visual representation of a plurality of related topics which are displayed diagrammatically in an interactive graphical user interface.

The user interface of the present invention may be implemented by a computer system having the preferred architecture shown generally in the system diagram of . The system as a whole generally consists of 3 parts 

The front end comprises the client software view controller and graph library which together process search requests and receive and display the resulting data received from the back end. The front end sub system is preferably implemented by a client computer system programmed to transform data received from the back end sub system into a diagram indicative of the relationship between various related topics as shown by way of example in . The client computer system preferably comprises at least a processor human interface device and a network communication device.

The client software preferably comprises a standard web browser such as MICROSOFT Corporation s WINDOWS INTERNET EXPLORER 9 MOZILLA FIREFOX 15 Google Inc. s GOOGLE CHROME or APPLE Inc. s SAFARI browsers for example but the system may alternatively comprise a specialized stand alone computer program without departing from the scope of the invention. A stand alone computer program for desktop tablet or smartphone devices for example may also incorporate at least some of the functions of the back end including the pipelines a chain of processing elements arranged so that the output of each element is the input of the next described in further detail below.

In the preferred browser based embodiments of the front end sub system the view controller may comprise a client side JAVASCRIPT Web application for example but any alternative Web application framework suitable for providing the interactive aspects of the inventive interface in a web browser may be used without departing from the scope of the invention.

The client side layout or graph library may be implemented using any suitable client side technology such as JAVASCRIPT or others. The graph library comprises one or more graph layout mechanisms to display data to the user in the required form and may be a proprietary library developed specifically for use with the present invention or an existing open source or commercial library package.

The back end sub system comprises an application programming interface API pipeline controller and modular pipeline system with interchangeable component software modules. In use the back end receives a user s request and extracts information from a particular data source based upon the request parameters. The back end sub system is preferably implemented by a server computer system programmed to transform data extracted or retrieved from the data sources into a standard data format which facilitates presentation of the data by the front end as described above. The server computer system preferably communicates with the client computer system by a computer network which may comprise a wired or wireless local area network LAN and or the Internet and therefore comprises a suitable network communication device.

A pipeline controller receives search or request parameters from the user via API and interfaces with the or each pipeline in the pipeline system .

Each pipeline comprises one or more modular or pluggable components in various configurations including at least one adapter component . The illustrated pipeline system in this case comprises four different pipelines by way of example but it is to be appreciated that the pipeline system may comprise any number of pipelines.

All communications between components and adapters of the pipeline system are in a common data format to allow the modularity of the system which enables the selection of various different component software modules from a library independent of the data format of the data source s . That is the system processes and handles this very diverse original data in a unified way agnostic of the data model specifics of the data source. An end user is able to interact query and manipulate the multiple data sources and gets a seamless experience. In this example this is achieved by passing graph objects which define the graph formed in response to a user s request and comprises any number of node and edge objects as shown in . Each node object represents a node of the graph as shown in and comprises the information related to the relevant topic extracted from the data sources while each edge object defines the relationship or connection between nodes in the graph. Any alternative data format can alternatively be used without departing from the scope of the invention however.

Referring again to each modular software component of the system is a self contained functional element adapted to receive and process manipulate Graph objects to perform a predefined function outputting a modified graph object to the next component or pipeline controller . The modular software components therefore form the building blocks of the overall function performed by each pipeline which can be customized by modifying the combination and or permutation of modular software components. This modularity thus enables rapid reconfiguration of pipelines and reuse of components across multiple applications.

An adapter is a specialized modular component at the end of each pipeline which is adapted to communicate directly with a particular information source and convert data received from the data source in response to a query into a Graph object for further processing by any other components in the same pipeline. Data received from a data source associated with each adapter will generally be in a predefined data format including but not limited to XML JSON SQL or HTML for example dependent upon the particular data source . Adapter modules may also be provided for writing data to the data source.

The API receives graph objects from the pipeline s and provides the data to the view controller of the front end sub system in an appropriate transmission format. The data may be transmitted via a network communication device in communication with a similar device of the front end sub system by hypertext transfer protocol HTTP in JavaScript Object Notation JSON format for example but alternative formats may alternatively be used without departing from the scope of the invention.

The data sources part of the system comprises at least one data source . Each data source is associated with at least one adapter and may be associated with adapters in multiple pipelines see for example Adapters B and C and Data Source B in .

Depending upon the application of the system the or each data source may comprise an external or remote source of information i.e. accessed via the internet such as Wikipedia or Freebase a single document or collection of documents in a particular format such as XML or a local database i.e. in the same computer or local area network as the server system implementing the back end of the present invention .

The architecture and operation of the system is described in further detail with reference to a specific embodiment as shown in in which the system is adapted to provide an interactive GUI for the Freebase web based general knowledge repository as shown by way of example in .

The system in this case comprises a single pipeline including an Aggregator component and Freebase adapter .

As described above with reference to the user navigates by selecting nodes of the graph presented via the browser interface. Selecting a node triggers the JavaScript based front end to send a request to the back end by making an API call to the back end API . In at least some embodiments of the invention this may comprise a URL such as the following hypertext transfer protocol 

This example request includes two parameters ID and pipeline where nodeID is the unique ID identification of the selected node and xyz is the unique ID of the pipeline to which the request should be directed. It will be appreciated that any number of parameters may be similarly added to the query and passed on to the appropriate pipeline components which in turn perform their respective functionality. That functionality will generally be based at least in part on these parameters. Those skilled in the art will appreciate that the parameters need not necessarily be passed in the form of a URL and any other alternative communication method may be used without departing from the scope of the invention.

The back end of the system receives this request and the pipeline controller passes it along to the first item in the chain of the selected default pipeline which in this case is the Aggregator component . The aggregator component passes the request again to the next component which is the Freebase adapter . The Freebase adapter receives the ID of the Freebase page which it needs to process. Using the Freebase API the adapter retrieves the structured data from the Freebase server.

The Freebase adapter receives the retrieved data and converts it to a graph object which holds graph information including nodes and edges and the information they hold such as ID title type image URL and description.

The resulting graph object is returned to the Aggregator component an example of many possible such transformation components which iterates through the nodes in the graph and groups the nodes together based on their types creating an aggregated graph representation . The updated graph is then returned to the pipeline controller and API which in this example converts the final graph object into a JSON formatted string and returns it to the front end.

The front end processes the JSON string or data in any other chosen transmission format and displays it to the user as a graph as shown by way of example in .

A data flow diagram illustrating the above sequence of events is provided in . The illustrated pipeline and example sequence relate to a read data request only. That is all the calls handle requests like give me all the data related to the node with ID 123 . Other possible requests such as a keyword search or write request will require a different pipeline and or sequence of events as will become apparent from the following.

Another example system according to the present invention is illustrated in . In this example the invention is adapted to provide an interactive GUI for navigating legislation. More specifically New Zealand Income Tax Act 2007 which is available in XML format is stored in a local but external database.

A system diagram for this example embodiment of the invention is shown in . The system in this embodiment comprises two pipelines the first comprising an Act adapter and the second pipeline comprising Act search adapter . Each of these adapters are specific versions of a more generic SQL database adapter. No further components are required in either pipeline of this embodiment as the additional step of iterating through nodes to group them together is not required.

Navigation in this embodiment is very similar to the previous example. However rather than the adapter communicating with the Freebase API the Act adapter queries an SQL database that contains the Tax Act data which is then processed into a graph. There is also an additional pipeline which provides the additional functionality of a searching mechanism.

In use a user may enter a keyword or search term in the searching interface initiating the following sequence of events.

The front end which in the example embodiment preferably comprises a JavaScript Web application sends a request to the back end by making an API call to API . The call may comprise a URL such as the following hypertext transfer protocol 

The back end sub system of the system receives the search request and the pipeline controller passes along the request to the first item in the mohioactsearch pipeline Act search adapter .

The Act search adapter receives the keyword to be searched and makes appropriate SQL queries to the SQL database which contains the Income Tax Act 2007 data.

The search result is received from the SQ database arranged into a single level graph and formed into a graph object by the Act search adapter . The graph object is passed to the API which converts the graph into a suitable transmission format such as a JSON formatted string which is returned to the front end .

The front end processes the data received from the back end and presents the user with the search result in searching interface as shown by way of example in .

Another example embodiment of a system according to the present invention is illustrated in the system diagram of . In this example the back end sub system again comprises two pipelines. However the first pipeline in this example comprises a pair of components aggregator and merger and a pair of adapters data adapters and . The second pipeline comprises a single component merger and a pair of adapters search adapters and .

The back end system in this example is adapted to communicate with a pair of data sources and . The data adapters and of the first pipeline are adapted to interface with data sources and respectively while the search adapters and of the second pipeline are similarly adapted to interface with the respective data sources which may provide data in different formats.

Merger components and are adapted to combine or merge the data search results in the form of graph objects received from the respective adapters into a single graph object thereby enabling the front end to seamlessly display a graph or search results comprising data extracted from both data sources.

In preferred embodiments of the invention the pipeline structure can be customized or reconfigured by an administrator or user by modifying existing pipelines or adding a new pipeline. The structure may be pre determined by or pre configured for the specific application of the system but is preferably at least partly reconfigurable or extendable by either an administrator or use for example.

The pipeline structure that is the particular component software modules and the order or sequence thereof of a system according to the present invention may be defined and configured by way of a properties file pipeline properties file of for example. The system may therefore be easily reconfigured or customized by an experienced user or administrator.

A simplified example of such a properties file for the system of is shown below for illustrative purposes in a JSON format 

It can be seen that this properties file defines the two pipelines and adapter components of the system of . The components may be selected from a library of available modular components or defined by the user.

It is to be appreciated that the structure and contents of the property file is not limited to the examples provided herein. The properties file is similarly not intended to be limited to the JSON format of the examples. A more complex example comprising an aggregation component as well as separate annotation and table of content toc components in four pipelines is shown below 

Alternatively the configuration of the system may be made more accessible to end users such as via the client software of the front end sub system enabling users themselves to configure pipelines as required at least within certain boundaries. Instead of the manual configuration via a property file this feature allows for a more convenient configuration by way of a configuration page in the client application for example which provides a form or graph based interface to modify at least some of the properties. The configuration interface may comprise a visual configuration tool for example whereby users may drag and drop component software modules from a library into at least one of the one or more pipelines thereby modifying the selection or sequence of component software modules without the need for any programming.

The pipeline configuration data itself is suitable for being treated as another data source which could be edited collaboratively through the user interface . A pipeline configuration can easily be represented using a graph structure in which each node would represent a component of the pipeline and the edges represent the sequence of the components. This would permit representation editing creation modification of pipelines within the graphical user interface of the application itself similar to that shown in albeit with fewer nodes for example. The nodes of the graph thus need not necessarily represent a topic as in the previous examples but may represent any relevant item such as a component of a pipeline. A component software module may be added to a pipeline as a new node and the sequence of component software modules may be modified by creating new edges or changing the existing edges for example.

The configurability of the present invention in particular with an integrated graphical user interface for end user or administrator configuration of the pipelines supports different types of application deployment and business models enabling an administrator or end user to easily and quickly manipulate the pipeline structure and therefore the logic and functionality of the overall system. For example the configurable pipelines provide a convenient way for the system provider to customize client applications reducing the time required to set up new applications and increase the turn around an administration feature giving a client s administrator s certain modification rights to the pipelines to customize the system to meet their requirements and or a premium feature for end users to have configuration control over parts or all of their pipelines.

A system and or server side computer program according to the present invention thus preferably comprises a set or library of standard modular re usable components which can be selected and arranged into the required pipeline configuration. The architecture also allows for more components to be added to the standard library including components customized only to fulfill a specific functionality i.e. a one off component fulfilling a unique user need .

Three common types of such modular pipeline components are described in further detail below by way of non limiting example.

Each adapter for a specific data source needs to be customized for the associated data source. The example of comprises the Freebase adapter of for example which is customized for interacting with the Freebase data source. In particular the Freebase adapter receives and translates a request into the appropriate format which in the case of Freebase comprises an HTTP request using the Freebase API. In other adapters the request may be translated to a database query of the appropriate format e.g. structured query language or SQL for example. The response received from Freebase is in the JSON format which is translated by the Freebase adapter to the standardized graph object which is passed on to the next component in the pipeline. In other adapters the response received from the data source may be in an HTML or XML format for example.

The adapter components may also rank the nodes of the graph object. Depending on the underlying data source this could be based on properties retrieved from the source or from properties inferred by the adapter . Alternatively specific ranking components may be added to the pipeline to perform this function in particular before a threshold component to ensure that only the most relevant nodes are displayed to the user.

Although the adapter components described above are directed primarily towards retrieving data from external data sources read queries at least some embodiments of the invention may also involve the use of adapter components capable of writing data to a data source write queries . The pipeline structure thus also supports manipulation editing of data via the user interface. The client side graph display is not only interactive but also allows the end user to perform certain editing tasks such as moving renaming deleting and creation of new connection edges and or nodes. These editing functionalities are handled by the pipeline architecture in the same way as the query requests wherein certain instructions such as create a new connection between node A and B are passed on via the query parameters. Different components of the pipeline are then capable of handling this request and sending it to a write adapter component which is capable of writing that requested change to the original data source.

A threshold component may be used to limit the number of children nodes a parent node can have. A default value can be set e.g. 10 and the limit can be specified in the pipeline configuration file or potentially via an end user configuration interface . When the threshold component receives a graph object it goes through each node counts the number of children and discards any after the first 10 or whatever amount is specified . The reduced graph is then sent to the next component in the pipeline. Again no customisation of the threshold component itself is required and it can therefore be readily re used.

Annotation components may enable the user to make submit and search annotations relating to a selected topic adding to the retrievable information. Access to the annotations may be limited to the user who submits it or made available to selected other users or all users. The annotations may be submitted to the data source from which the related topic is originally retrieved or stored in a separate database and combined with information from the original topic source using a merger component for example.

The system preferably enables users to save or bookmark their search for later viewing or sharing with other viewers.

The above component software modules are merely examples of the types of components that may be selected from a library or created by a user to obtain a pipeline having the required functionality. Other component software modules may also be created or provided in the library without departing from the scope of the invention. However the component software modules of the present invention share in common the feature that they are adapted to receive data modify the data by performing at least one predefined function and pass the modified data to the next module or the pipeline controller API or similar where the module is last in the pipeline sequence . The aggregate rank merge threshold and annotation functions described previously are merely a few examples of the many possible functions which may be performed by component software modules of the present invention.

From the foregoing it will be apparent that the present invention provides novel and intuitive methods for the visualization and navigation of information and the customization of the displayed information through the modular pipeline architecture. Those skilled in the art will appreciate that the methods of the invention or parts thereof are intended to be performed by general purpose digital computing devices such as desktop or laptop personal computers mobile devices including smartphones and tablet computers servers and or combinations thereof communicatively coupled in a wired and or wireless network including a LAN wide area network WAN and or the Internet. In particular the system is preferably implemented using a client server architecture as described above in which the front end of the system comprises a client computer system and the back end comprises a server computer system whereby a user preferably interacts with a browser based graphical user interface presented on a visual display of the client computer system which displays relevant information upon communication with the server computer system. Alternative architectures are possible without departing from the scope of the invention however.

Once programmed to perform particular functions pursuant to instructions from program software that implements the method of this invention such digital computer systems in effect become special purpose computers particular to the method of this invention. The techniques necessary for this are well known to those skilled in the art of computer systems.

Computer programs implementing the method of this invention may be distributed to users on a computer readable distribution medium such as CD ROM or flash drive. From there they will often be copied to a hard disk or a similar intermediate storage medium. When the programs are to be run they will be loaded either from their distribution medium or their intermediate storage medium into the execution memory of the computer configuring the computer to act in accordance with the method of this invention. All these operations are well known to those skilled in the art of computer systems.

The term computer readable medium encompasses non transitory distribution media non volatile intermediate storage media volatile execution memory of a computer and any other non transitory medium or device capable of storing for later reading by a computer a computer program implementing the method of this invention excluding only transitory propagating waves or signals.

From the foregoing it will be seen that the present invention provides methods computer programs and systems for providing a graph based graphical user interface for conveniently and intuitively visualizing and navigating information regarding a range of related topics.

Unless the context clearly requires otherwise throughout the description the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to .

Although this invention has been described by way of example and with reference to possible embodiments thereof it is to be understood that modifications or improvements may be made thereto without departing from the scope of the invention.

In particular although the example interfaces of display information in a mind map like graph comprising a plurality of linked or connected nodes showing the contextual relationship between information in other embodiments the information may be presented in alternative diagrammatic forms as appropriate for the selected topic or selected by the user. For example the information may alternatively be displayed on a timeline or a geographic map representing the temporal or spatial relationship between the information. Other relationships may be similarly represented visually without departing from the scope of the invention.

The invention may also be said broadly to consist in the parts elements and features referred to or indicated in the specification of the application individually or collectively in any or all combinations of two or more of said parts elements or features. Furthermore where reference has been made to specific components or integers of the invention having known equivalents then such equivalents are herein incorporated as if individually set forth.

Any discussion of the prior art throughout the specification should in no way be considered as an admission that such prior art is widely known or forms part of common general knowledge in the field.

