---

title: Template and content aware document and template editing
abstract: A method and apparatus for performing template and content aware document and template editing is provided. Template and content aware document and template editing may include identifying a current document template, the current document template including a plurality of rules, generating a current document based on the current document template, wherein generating the current document includes, identifying a rule from the plurality of rules, the rule indicating an object and an object definition for the object, the object definition including a dynamic content definition, and including dynamic content in the current document based on the dynamic content definition, and storing or transmitting the current document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529791&OS=09529791&RS=09529791
owner: GOOGLE INC.
number: 09529791
owner_city: Mountain View
owner_country: US
publication_date: 20131212
---
This application relates to computer implemented applications particularly creating modifying and displaying information in an electronic representation of a document.

Productivity applications such as word processing applications and spreadsheet applications may execute on a local computing device. Networked productivity applications may process and store documents at a central location may reduce resource utilization at the local computing device and may allow access from multiple devices and device types. Accordingly it would be advantageous to provide template and content aware document and template editing.

Disclosed herein are aspects of systems methods and apparatuses for template and content aware document and template editing.

An aspect is a method for template and content aware document and template editing. Template and content aware document and template editing may include identifying a current document template the current document template including a plurality of rules generating a current document based on the current document template wherein generating the current document includes identifying a rule from the plurality of rules the rule indicating an object and an object definition for the object the object definition including a dynamic content definition and including dynamic content in the current document based on the dynamic content definition and storing or transmitting the current document.

Another aspect is a method for template and content aware document and template editing. Template and content aware document and template editing may include identifying a current document template the current document template including a plurality of rules generating a current document based on the current document template wherein generating the current document includes identifying a rule from the plurality of rules the rule indicating an object and an object definition for the object the object definition including a dynamic content definition identifying a data source indicated in the dynamic content definition identifying a functor indicated in the dynamic content definition generating dynamic content based on the data source and the functor including the dynamic content in the current document and storing or transmitting the current document.

Another aspect is a method for template and content aware document and template editing. Template and content aware document and template editing may include identifying a current document template the current document template including a plurality of rules generating a current document based on the current document template wherein generating the current document includes identifying a rule from the plurality of rules the rule indicating an object and an object definition for the object the object definition including a dynamic content definition identifying a source document indicated in the dynamic content definition wherein the source document and the current document differ identifying a data source indicated in the dynamic content definition the data source indicating content included in the source document identifying a source criterion indicated in the dynamic content definition the source criterion indicating content included in the data source identifying a target criterion indicated in the dynamic content definition the target criterion include content included in the current document including a portion of the content included in the data source as dynamic content in the current document based on an evaluation of the source criterion and the target criterion and storing or transmitting the current document.

Productivity applications such as word processing applications and spreadsheet applications may allow for the creation and modification of documents and document templates. Document templates may provide guidance for organizing and presenting information in documents. However the content organization and presentation of the information in a document created based on a template may vary from the structure and style indicated by the template and the content of a document may not be automatically included or updated.

Productivity applications implementing template and content aware document and template editing may allow for the creation and modification of document templates and for the creation and modification documents in conformity with the document templates. Document templates may include rules describing objects and object definitions. Rules may describe relationships between objects and may include content such as string data that may be incorporated into documents generated based on the respective template.

A productivity application may generate a document based on a template and may provide an interface for presenting and modifying documents and templates. The presentation organization and validation of the document may be based on input data received by the productivity application such as user input data the content of the document and the rules described by the template. The productivity application may automatically generate document content based on other document content the document template or the content of other documents.

The computing device may be a stationary computing device such as a personal computer PC a server a workstation a minicomputer or a mainframe computer or a mobile computing device such as a mobile telephone a personal digital assistant PDA a laptop or a tablet PC. Although shown as a single unit any one or more element of the communication device can be integrated into any number of separate physical units. For example the UI and processor can be integrated in a first physical unit and the memory can be integrated in a second physical unit.

The communication interface can be a wireless antenna as shown a wired communication port such as an Ethernet port an infrared port a serial port or any other wired or wireless unit capable of interfacing with a wired or wireless electronic communication medium .

The communication unit can be configured to transmit or receive signals via a wired or wireless medium . For example as shown the communication unit is operatively connected to an antenna configured to communicate via wireless signals. Although not explicitly shown in the communication unit can be configured to transmit receive or both via any wired or wireless communication medium such as radio frequency RF ultra violet UV visible light fiber optic wire line or a combination thereof. Although shows a single communication unit and a single communication interface any number of communication units and any number of communication interfaces can be used.

The UI can include any unit capable of interfacing with a user such as a virtual or physical keypad a touchpad a display a touch display a speaker a microphone a video camera a sensor or any combination thereof. The UI can be operatively coupled with the processor as shown or with any other element of the communication device such as the power source . Although shown as a single unit the UI may include one or more physical units. For example the UI may include an audio interface for performing audio communication with a user and a touch display for performing visual and touch based communication with the user. Although shown as separate units the communication interface the communication unit and the UI or portions thereof may be configured as a combined unit. For example the communication interface the communication unit and the UI may be implemented as a communications port capable of interfacing with an external touchscreen device.

The processor can include any device or system capable of manipulating or processing a signal or other information now existing or hereafter developed including optical processors quantum processors molecular processors or a combination thereof. For example the processor can include a general purpose processor a special purpose processor a conventional processor a digital signal processor DSP a plurality of microprocessors one or more microprocessor in association with a DSP core a controller a microcontroller an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA a programmable logic array programmable logic controller microcode firmware any type of integrated circuit IC a state machine or any combination thereof. As used herein the term processor includes a single processor or multiple processors. The processor can be operatively coupled with the communication interface communication unit the UI the memory the instructions the power source or any combination thereof.

The memory can include any non transitory computer usable or computer readable medium such as any tangible device that can for example contain store communicate or transport the instructions or any information associated therewith for use by or in connection with the processor . The non transitory computer usable or computer readable medium can be for example a solid state drive a memory card removable media a read only memory ROM a random access memory RAM any type of disk including a hard disk a floppy disk an optical disk a magnetic or optical card an application specific integrated circuits ASICs or any type of non transitory media suitable for storing electronic information or any combination thereof. The memory can be connected to for example the processor through for example a memory bus not explicitly shown .

The instructions can include directions for performing any method or any portion or portions thereof disclosed herein. The instructions can be realized in hardware software or any combination thereof. For example the instructions may be implemented as information stored in the memory such as a computer program that may be executed by the processor to perform any of the respective methods algorithms aspects or combinations thereof as described herein. The instructions or a portion thereof may be implemented as a special purpose processor or circuitry that can include specialized hardware for carrying out any of the methods algorithms aspects or combinations thereof as described herein. Portions of the instructions can be distributed across multiple processors on the same machine or different machines or across a network such as a local area network a wide area network the Internet or a combination thereof.

The power source can be any suitable device for powering the communication device . For example the power source can include a wired power source one or more dry cell batteries such as nickel cadmium NiCd nickel zinc NiZn nickel metal hydride NiMH lithium ion Li ion solar cells fuel cells or any other device capable of powering the communication device . The communication interface the communication unit the UI the processor the instructions the memory or any combination thereof can be operatively coupled with the power source .

Although shown as separate elements the communication interface the communication unit the UI the processor the instructions the power source the memory or any combination thereof can be integrated in one or more electronic units circuits or chips.

A computing and communication device A B C can be for example a computing device such as the computing device shown in . For example as shown the computing and communication devices A B may be user devices such as a mobile computing device a laptop a thin client or a smartphone and computing and the communication device C may be a server such as a mainframe or a cluster. Although the computing and communication devices A B are described as user devices and the computing and communication device C is described as a server any computing and communication device may perform some or all of the functions of a server some or all of the functions of a user device or some or all of the functions of a server and a user device.

Each computing and communication device A B C can be configured to perform wired or wireless communication. For example a computing and communication device A B C can be configured to transmit or receive wired or wireless communication signals and can include a user equipment UE a mobile station a fixed or mobile subscriber unit a cellular telephone a personal computer a tablet computer a server consumer electronics or any similar device. Although each computing and communication device A B C is shown as a single unit a computing and communication device can include any number of interconnected elements.

Each access point A B can be any type of device configured to communicate with a computing and communication device A B C a network or both via wired or wireless communication links A B C. For example an access point A B can include a base station a base transceiver station BTS a Node B an enhanced Node B eNode B a Home Node B HNode B a wireless router a wired router a hub a relay a switch or any similar wired or wireless device. Although each access point A B is shown as a single unit an access point can include any number of interconnected elements.

The network can be any type of network configured to provide services such as voice data applications voice over internet protocol VoIP or any other communications protocol or combination of communications protocols over a wired or wireless communication link. For example the network can be a local area network LAN wide area network WAN virtual private network VPN a mobile or cellular telephone network the Internet or any other means of electronic communication. The network can use a communication protocol such as the transmission control protocol TCP the user datagram protocol UDP the internet protocol IP the real time transport protocol RTP the Hyper Text Transport Protocol HTTP or a combination thereof.

The computing and communication devices A B C can communicate with each other via the network using one or more a wired or wireless communication links or via a combination of wired and wireless communication links. For example as shown the computing and communication devices A B can communicate via wireless communication links A B and computing and communication device C can communicate via a wired communication link C. Any of the computing and communication devices A B C may communicate using any wired or wireless communication link or links. For example a first computing and communication device A can communicate via a first access point A using a first type of communication link a second computing and communication device B can communicate via a second access point B using a second type of communication link and a third computing and communication device C can communicate via a third access point not shown using a third type of communication link. Similarly the access points A B can communicate with the network via one or more types of wired or wireless communication links A B. Although shows the computing and communication devices A B C in communication via the network the computing and communication devices A B C can communicate with each other via any number of communication links such as a direct wired or wireless communication link.

Other implementations of the computing and communications system are possible. For example in an implementation the network can be an ad hock network and can omit one or more of the access points A B. The computing and communications system may include devices units or elements not shown in . For example the computing and communications system may include many more communicating devices networks and access points.

In some implementations the server may execute a portion or portions of the networked application which may include for example generating modifying and storing documents and information related to the documents such as metadata and providing information for displaying and interacting with the networked application to the user device . In some implementations the server may include one or more logical units . For example the server may include a web server for receiving and processing requests such as HTTP requests from user devices an application server for executing applications such as a spreadsheet application or a word processing application and a database for storing and managing data such as documents or information about documents such as metadata. In some implementations the server may provide information for the networked application to the user device using one or more protocols such as HyperText Markup Language HTML Cascading Style Sheets CSS Extensible Markup Language XML or JavaScript Object Notation JSON .

The user device may execute a portion or portions of the networked application . For example the user device may execute a local application such as a browser application which may receive information from the server and may present a representation of an interface for displaying the networked application and user interactions therewith. For example the user device may execute a browser application the browser application may send a request such as an HTTP request for the networked application to the server the browser may receive information for presenting the networked application such as HTML and XML data and the browser may present an interface for the networked application . The user device may execute portions of the networked application which may include executable instructions such as JavaScript received from the server . The user device may receive user input data for the networked application may update the interface for the networked application in response to the user input data and may send information for the networked application such as information indicating the user input data to the server .

In some implementations a portion or portions of the networked application may be cashed at the user device . For example the user device may execute a portion or portions of the networked application using information previously received from the server and stored on the user device . Although the user device and the server are shown separately they may be combined. For example a physical device such as the computing device shown in may execute the user device as a first logical device and may execute the server as a second logical device.

In some implementations the networked application may generate files folders or documents such as spreadsheets or word processing documents. The files folders or documents may be created and stored on the user device the server or both. For example a document may be created and stored on the server and a copy of the document may be transmitted to the user device . Modifications to the document may be made on the user device and transmitted to the server . In another example a document may be created and stored on the user device and the document or modifications to the document may be transmitted to the server .

In some implementations a networked application or an element thereof may be accessed by multiple user devices. For example the networked application may be executed by a first user device in communication with the server and a document may be stored at the server . The networked application may be executed by a second user device which may be a computing device such as the computing device shown in or the computing and communication devices A B shown in a user may input modifications to the document at the second user device and the modifications may be saved to the server .

In some implementation a networked application or an element thereof may be collaboratively accessed by multiple user devices. For example a first user device may execute a first instance of the networked application in communication with the server and a document may be stored at the server . The first user device may continue to display or edit the document. The second user device may concurrently or substantially concurrently execute a second instance of the networked application and may display or edit the document. User interactions with the document at one user device may be propagated to collaborating user devices. For example one or both of the user devices may transmit information indicating user interactions with the document to the server and the server may transmit the information or similar information to the other user device . Although shows two user devices any number of user devices may collaborate. User interactions with the networked application at one user device may be propagated to collaborating user devices in real time or near real time. Some user interactions with the networked application may not be transmitted to the server and may not be propagated to the collaborating user devices.

In some implementations a template and content aware document and template editing architecture may include a document a document editor a template a presentation editor a data model editor or a combination thereof. Although shown separately elements of the template and content aware document and template editing architecture may be combined. For example a template and content aware document and template editing architecture may include a template editor which may include a combination of the presentation editor and the data model editor .

In some implementations a document may be created accessed and edited in a document editor . For example a document editor may include an interface for generating presenting and modifying a document such as the interface shown in .

In some implementations creating accessing or editing a document in a document editor may include controlling the generation presentation or modification of the document based on a template . For example the template may indicate one or more rules for generating modifying or presenting the content of the document .

In some implementations a template may be created accessed and edited in an editor such as the presentation editor the data model editor or a template editor . For example a template editor may include an interface for generating presenting and modifying a template such as the interface shown in . In some implementations a template may include presentation rules which may control the presentation of the content of the document and the presentation rules may be created accessed or edited in a presentation editor . In another example the template may include structural rules which may control the structure and content of the document and the structural rules may be created accessed and edited in the data model editor .

In some implementations a document may include a discrete collection of information such as content control information not shown or any other information capable of being included in a document. In some implementations the content may include text images or any other content capable of being presented in a document and the control information may include information for controlling the structure content and presentation of the document .

In some implementations a document may include direct content which may be content input or modified in the document directly such as content input using a document editor interface. For example in the text A Project Name may be direct content . In some implementations direct content may be created modified or deleted in the document in response to input such as user input.

In some implementations a document may include indirect content such as express content or placeholder content which may be included in the document indirectly. For example indirect content may be included in the document based on the document template a state of the document the productivity application or a combination thereof.

In some implementations a document may include express content which may be indirect content and may include content specified as express content in a template associated with the document . For example in the text Members may be express content. In some implementations the express content may be static constant or otherwise protected from modification in the document .

In some implementations a document may include placeholder content which may include content specified as placeholder content in a template associated with the document . For example in the text may be placeholder content. In some implementations the placeholder content may be omitted from the document and may be included in an interface for viewing or editing the document .

In some implementations a document may include dynamic content . For example the dynamic content may include content generated for and included in the document based on the document the associated document template or a combination of the document and the associated document template. In some implementations the productivity application may generate the dynamic content . For example in the direct content may indicate member identifiers such as member names and the dynamic content may be generated by the productivity application based on the member identifier direct content and may indicate a count of the members.

In some implementations a document may include filtered content which may be dynamic content and may include content identified in another document and included in the current document . In some implementations the productivity application may identify content in another document and may include the identified content as the dynamic content in the current document. For example the dynamic content shown in may include content from a milestones document. In another example the content or a portion of the content of the document may be included in another document as dynamic content.

In some implementations dynamic content may be associated with a data source which may indicate a source of content for use as the dynamic content. For example an object definition may include data source or reference information indicating a data source for the object. In some implementations the data source information may include an indication of content other than content indicated directly in the object definition and the indicated content may be included in the current document as dynamic content. For example the data source information may indicate another object in the current document or an object in another document.

For example Template 1 shows an example of a portion of a task list template using a whitespace such as a carriage return to delimit rules. Although each rule is delimited on an individual line rules may be delimited using any symbol or combination of symbols which may include whitespace capable of distinguishing rules. For example a semicolon may be used to delimit rules such that the first two rules of the template specification shown in Template 1 may be expressed as shown in Template 1B.

In some implementations a rule such as the first rule in a template specification may include an identifier of the template such as a name of the template. For example in Template 1 the first rule TaskList Task includes a name TaskList for the template.

In some implementations a rule may indicate an object and an object definition or replacement setting for the object. For example in Template 1 the first rule TaskList Task may indicate an object TaskList and an object definition Task . In some implementations an object which may represent a discrete collection of information may be expressed as a symbol such as TaskList which may be a terminal or nonterminal symbol. In some implementations an object definition may be expressed as an expression that may include one or more symbols such as objects and modifiers. Although rules are described herein using the equality operator to distinguish an object from an object definition any symbol or combination of symbols which may include whitespace capable of distinguishing an object from an object definition may be used. For example the first rule shown in Template 1 may be expressed as TaskList Task .

In some implementations an object definition may include one or more objects such as system objects which may be expressed as terminal symbols or custom objects which may be expressed as nonterminal symbols. For example a template specification may include the rule Task Title and the rule Title text . The object definition indicated in the rule Task Title includes the Title object which may be a custom object such as an object that is defined in another rule in the template specification such as the rule Title text . The object definition indicated in the rule Title text includes the text object which may be a system object.

In some implementations a custom object may be defined in the template specification. For example in Template 1 the custom object Task may be defined by the second rule Task Status Title Description which may indicate that the Task object may include a Status object a Title object and a Description object. In some implementations a template specification may include a rule defining each custom object included in the template.

In some implementations an object definition for a system object may be omitted from a template specification. For example in Template 1 the rule Title text may indicate that the object Title may include the system object text . In some implementations the template and content aware document and template editing system or a portion thereof such as the productivity application may define one or more system objects. For example the system object text may be defined by the productivity application as a paragraph of text.

In some implementations an object indicated in an object definition may be associated with one or more modifiers. For example the one or more modifier which may be expressed as using for example the plus symbol may be associated with an object and may indicate that a document generated based on the template may include one or more of the object. For example the rule Task Template Task may indicate that the TaskList object may include one or more Task objects.

In some implementations the zero or more modifier which may be expressed using for example the asterisk may be associated with an object and may indicate that a document generated based on the template may include zero or more of the object. For example the rule Task text may indicate that the Task object may include zero or more text objects. In some implementations a modifier may indicate the minimum and maximum instances of an object in a document generated based on a template. For example the modifier 2 4 may indicate that a document may include two three or four instances of an object.

In some implementations the optional modifier which may be expressed using for example the question mark may be associated with an object and may indicate that the object is optional. For example in Template 1 the second rule Task Status Title Description may indicate that the Task object may include a Status object a Title object and an optional Description object.

In some implementations the set modifier which may be expressed using an opening parenthesis and a closing parenthesis may be associated with a set of objects and may indicate that the objects are related. In some implementations the alternate modifier which may be expressed using for example a vertical line may be associated with a set of objects and may indicate that the objects are alternates. For example in Template 1 the third rule Status Pending Finished may indicate that the status object may include a Pending object or a Finished object. In some implementations the alternates modifier may be used in combination with the set modifier as shown in the third rule of Template 1. In some implementations the alternates modifier may be used independently of the set modifier. For example the third rule of Template 1 may be expressed as Status Pending Finished . Although the objects associated with the alternates modifier are shown in Template 1 as having object definitions that include express content objects associated with the alternate modifier may have object definitions that include placeholder content or that do not include content.

In some implementations an object definition may include content such as express content which may be included as express content in a document associated with the template or placeholder content which may be omitted from a document associated with the template and may be included in a user interface for accessing the document. In some implementations the content may be defined as a string of text using the string modifier which may be expressed as a pair of quotation marks .

In some implementations an object definition may include express content as a string that is not associated with or proximate to an object in the object definition. For example a template may include the rule Pending TODO which may indicate that the Pending object includes an implicit text object that is associated with the express content TODO and a document generate based on the Template 1 may include the express content TODO . In some implementations express content may be included in a document as static or constant content and a document editor may prevent modification or deletion of the express content.

In some implementations an object definition may include content implicitly specified as placeholder content. For example in some implementations an object definition may include placeholder content as a string that is associated with or proximate to an object in the object definition. For example a template may include the rule Title text Title which may indicate that the Title object includes a text object that is associated with the placeholder content Title . In some implementations placeholder content may be included in a document as placeholder content. In some implementations placeholder content may be omitted from a document and a user interface such as a document editing interface for the document may include the placeholder content as a placeholder token. In some implementations a placeholder token may be expressed using a pair of angle brackets or any other symbol including whitespace capable of delimiting a content placeholder. For example a template may include the rule Title text Title which may indicate that the Title object includes a text object associated with the placeholder content Title and a placeholder token for an instance of the Title object may be expressed as .

In some implementations an object definition may include presentation information such as cascading style sheet information or any other information capable of describing the presentation of content. For example a rule including style information may be expressed as shown in Template 1C in .

In some implementations a document generated based on a template may be modeled as a sequence of object tokens corresponding to the rules indicated in the associated template specification. In some implementations the objects indicated in the template specification may be included in the document as object instances and may be represented by object tokens. In some implementations an object token may be delimited using a pair of square brackets or any other symbol including whitespace capable of delimiting object tokens. For example a document associated with Template 1 may be expressed in part as shown in Model 1 in .

In some implementations an object instance may be associated with content such as direct content indirect content dynamic content or a combination thereof. For example a document generated based on a template that includes the rule Pending TODO may include a Pending token representing an instance of a Pending object which may include a text token representing an instance of a text object which may include the express content TODO .

In some implementations objects such as objects associated with the optional modifier or objects associated with the zero or more modifier may be omitted from a document. For example in Template 1 the Description object is associated with the optional modifier and generating presenting or modifying a document based on Template 1 may include omitting an object token representing an instance of the Description object. In some implementations omitting an object may include omitting objects defined in the object definition for the omitted object. In some implementations objects associated with the optional modifier or the zero or more modifier may be included in a document. For example an instance of an object associated with the optional modifier may be associated with content and may be included in the document.

In some implementations objects such as objects that are not associated with a modifier or objects associated with the one or more modifier may be included in the document. For example as shown in Model 1 an instance of an object such as the Title object may be included in the document as an object token such as the Title token.

In some implementations creating accessing or modifying a document may include generating or modifying a document tree based on the document the template a state of the productivity application or a combination thereof. For example a partial document tree for a document associated with Template 1 may be expressed as shown in Tree 1 in . For clarity in Tree 1 object instances are shown in italic font placeholder content is shown underlined and document content such as direct content and express content is shown in normal font.

In some implementations a document template may be identified at . For example a user may initiate a productivity application such as a networked productivity application and a document template may be identified in response to user input indicating the document template such as the selection of a document template from a list of document templates. In some implementations identifying a document template may include identifying a document associated with the template and identifying the template based on the document. In some implementations identifying a document template may include identifying a template specification associated with the document template.

In some implementations template rules may be identified at . For example a template identified at may be associated with a template specification that may include a sequence of template rules. For example a task template may include rules that may be expressed as shown in Template 1 in .

In some implementations a document may be generated at . For example generating a document may include creating a file in a file system creating a document record in a database or otherwise creating a discrete container for containing document information. In some implementations generating a document at may include associating the document with the template. For example a template identifier indicating the template may be included in the document information such as in metadata or an association between the document and the template may be stored in a table such as a database table. In some implementations a document generated based on a template may be modeled as a sequence of object tokens as shown in Model 1 in .

In some implementations a document associated with a template may be validated for conformity with the corresponding template specification. For example the validation may include performing a deserialization analysis.

In some implementations a document tree may be generated at . For example a partial document tree for a document associated with Template 1 may be expressed as shown in Tree 1 in . In some implementations generating a document tree at may include identifying content from a document such as the document generated at and applying rules included in a template specification such as the rules identified at to the document content. For example the template may include the objects associated with the alternate modifier such as the Pending object and the Finished object indicated in Template 1 and generating the document tree may include identifying content in the document that is associated with the Pending object or the Finished object and including the identified content in the document tree.

In some implementations the template specification may include an object that is associated with placeholder content and generating the document tree at may include generating a placeholder token for an instance of the object. In some implementations the template specification may include an object that does not include placeholder content such as the Title object shown in Template 1 Title text and generating the document tree at may include using an ellipsis or any other symbol including whitespace capable of expressing a content placeholder.

In some implementations input data may be received at . For example the productivity application may generate and present an interface such as a user interface for interacting with the document generated at which may include using the document tree generated at and may receive input data via the interface. In some implementations the productivity application may receive input data indicating for example a mouse click on a text field a change of focus a keystroke such as the enter key or the tab key a combination of keystrokes such as shift tab alt up or alt down or any other input data related to the document.

In some implementations the document tree may be altered at . For example the document tree may be altered in response to the input data received at . In some implementations alterations to the document tree may be based on a current state of the productivity application interface the input data received at the template specification or a combination thereof. For example content may be added modified or removed from the document tree. In some implementations the document may not include an instance of an object indicated in the corresponding template specification such as the Description object and updating the document tree may include inserting the omitted object corresponding content or both into the document tree.

In some implementations the document may be output at . For example the document may be stored on a memory such as memory shown in or transmitted via a communication network such as the network shown in . In some implementations outputting the document may include presenting an interface such as a user interface for viewing and interacting with the document. In some implementations the document may be output based on the content of the document the template or both.

In some implementations the interface may include a placeholder token for an object. For example the productivity application may identify a rule in the template specification indicating an object that includes placeholder content the productivity application may generate a document tree for a document associated with the template which may include determining that the document includes placeholder content corresponding to the object and the productivity application may output an interface for the document including the placeholder content as a placeholder token representing the object. In some implementations the productivity application may distinguish a placeholder token from content of the document. For example content may be output using a first style such as black font color and a placeholder indication may be output using a different style such as grey font color or an italicized font face. For example shows a placeholder token for the Title object a placeholder token for the first Author object and a placeholder token for the first Section object . For clarity the placeholder token for the Title object the placeholder token for the first Author object and the placeholder token for the first Section object are shown in using italics.

In some implementations the productivity application may receive input data setting the interface focus on an object represented by a placeholder token such as the Title object. In some implementations the interface may be updated to include a text entry interface element as shown in document interface . In some implementations the productivity application may update the document tree to include the text entry interface element to indicate the current in focus element or both.

In some implementations the productivity application may receive input data indicating text such as a string of one or more character keystrokes entered into a text entry interface element such as the text entry interface element shown in document interface and the interface may be updated to include the text as shown in document interface . In some implementations the interface may be updated to omit the placeholder token. In some implementations the productivity application may update the document tree to include the received text to omit the placeholder token or both.

In some implementations the productivity application may receive input data removing focus from an object represented by a placeholder token such as the text entry interface element shown in object interface . For example the productivity application may receive input data indicating a key press for the Enter or Return key. In some implementations the productivity application may set focus to another object such as the Author object and may update the interface to indicate focus on the second object as shown in document interface . In some implementations the productivity application may update the document tree to indicate the current element.

In some implementations the productivity application may determine whether an object is associated with a one or more modifier and may determine whether the object is associated with content. For example as shown in document interface the Author object may have focus and the productivity application may receive input data indicating text and a completion indicator such as the Enter or Return key. The productivity application may determine that the Author object is associated with a one or more modifier and the productivity application may update the interface to include the text to include another instance of the Author object and to set focus on the other instance of the Author object as shown in document interface . In some implementations the productivity application may update the document tree to include the input text and to include the second instance of the Author object .

In another example an object instance such as the second Author object may have focus the productivity application may receive input data indicating a change in focus such as a completion indicator the productivity application may determine that the object is not associated with content and the productivity application may update the interface to omit the object and set focus on another object such as the Section object as shown in document interface . In some implementations the productivity application may update the document tree to omit the second instance of the Author object to indicate the current element or both.

In some implementations the productivity application may determine whether an object such as the Section object includes an object such as the Description object that is associated with an optional modifier. For example the Section object may have focus as shown in document interface and the productivity application may receive input data indicating text and a completion indicator such as the Enter or Return key. The productivity application may update the interface as shown in document interface to include the input text may determine that the Section object includes a Description object that is associated with the optional modifier and may update the interface to include a text entry interface element associated with the optional object . In some implementations the productivity application may update the interface to include a placeholder token such as an ellipsis representing the optional object. In some implementations the productivity application may update the document tree to include the received text to include the optional object to include the placeholder token or any combination thereof.

In some implementations the productivity application may determine that the document includes an instance of an object that is associated with a zero or more modifier or a one or more modifier and the productivity application may include other instances of the object in the document. For example an optional object such as the optional description object shown in document interface may have focus the productivity application may receive input data indicating text and a completion indicator and as shown in document interface the productivity application may update the interface to include the text and to include another instance of the optional object . In some implementations the productivity application may update the document tree to include the received text the optional object or both.

In another example the second instance of the optional Description object may have focus the productivity application may receive input data indicating text and a completion indicator and as shown in document interface the productivity application may update the interface to include the text and to include a third instance of the optional Description object . In some implementations the productivity application may update the document tree to include the received text the third instance of the optional Description object or both.

In another example the third instance of the optional Description object may have focus the productivity application may receive input data indicating a completion indicator the optional object may not be associated with content and as shown in document interface the productivity application may update the interface to omit the optional Description object and to include another instance of the Section object . In some implementations the productivity application may update the document tree to omit the optional Description object to include the other instance of the Section object or both.

In some implementations the productivity application may insert an object between two objects. For example as shown in document interface the document may include content associated with a first Description object and content associated with a second Description object adjacent to the first Description object in the interface. The first Description object may have focus the productivity application may receive input data including a completion indicator and the productivity application may update the interface as shown in document interface to include a third Description object between the first Description object and the second Description object . In some implementations the productivity application may update the document tree to include the third instance of the Description object .

In some implementations the productivity application may remove an object. For example as shown in document interface a document may include a first Section object which may include a first Description object a second Description object and a third Description object . The third Description object may have focus and the productivity application may receive input indicating a deletion of the content associated with the third Description object which may include a completion indication. The productivity application may update the interface to omit the third Description object as shown in document interface . In some implementations the productivity application may update the document tree to omit the third the Description object .

In some implementations the productivity application may receive input data indicating the deletion of the content associated with an object which may include the deletion of content associated with one or more objects included in the object. For example the productivity application may receive input data indicating the deletion of the content associated with second Description object deletion of the content associated with first Description object and deletion of the content associated with Section Title object . The productivity application may update the interface as shown in document interface to omit the deleted content and to include a placeholder token representing the Section object. In some implementations the productivity application may update the document tree to omit the Section object the first Description object and the second Description object.

In some implementations the productivity application may receive input data changing the association of content from one object to another. For example the third Description object shown in document interface may have focus the productivity application may receive input indicating text such as the text A Second Section Title and input data such as the tab key or the shift tab key sequence indicating a change in association for the content from the Description object to a Title object of a Section object. The productivity application may update the interface as shown in document interface to omit the third Description object and to include the text as the content of a Title object of a second Section object in place of the omitted third Description object. In some implementations the productivity application may update the document tree to omit the third Description object to include the second Section object to associate the content with the second Section object and to change the association for the second Description object from the first Section object to the second Section object.

In some implementations the productivity application may receive input data changing the relative horizontal positioning or indentation of an object. For example the third Description object shown in document interface may have focus the productivity application may receive input indicating an increase in indentation such as the tab key. The productivity application may update the interface to increase the indentation of the third Description object as shown in document interface . Although not explicitly shown in the productivity application may receive input data indicating a decrease in indentation such as the shift tab key sequence and the productivity application may update the interface to decrease the indentation of the current object.

In some implementations an object definition may include express content. For example in Template 3 the EducationTitle object includes a the express content Education delimited using the string modifier and the ExperienceTitle object includes the express content Work Experience delimited using the string modifier. In some implementations a document generated based a template that includes express content such as Template 3 may include the express content. In some implementations the productivity application may include the express content in the interface as content.

For example as shown in the document interface includes a Your Name placeholder token representing the Name object an Email placeholder token representing the Email object a Phone placeholder token representing the Phone object the Education express content a Time Duration placeholder token representing the Duration object of a first EducationItem object a Degree placeholder token representing the Degree object of the first EducationItem object a College placeholder token representing the College object of the first EducationItem object the Work Experience express content a Time Duration placeholder token representing the Duration object of a first Job object a Job title placeholder token representing the JobTitle object of the first Job object a Company placeholder token representing the Company object of the first Job object a Section placeholder token representing the Title object of a first Item object of the first Section object a Time duration placeholder token representing the Duration object of the first Item object of the first Section object and a Subject placeholder token representing the Subject object of the first Item object of the first Section object.

In some implementations a template such as Template 3 may include an optional object which may be indicated by the optional modifier. For example in Template 3 the ContactInfo object includes an optional Address object. In some implementations the productivity application may omit the optional object from the interface as shown in document interface . In some implementations the productivity application may receive input data setting focus on the optional object. For example the Phone object may have focus the productivity application may receive input data indicating text such as a phone number and including a completion identifier. The productivity application may update the interface as shown in document interface to include the text as content for the Phone object and to include a placeholder token for the optional Address object. In some implementations the productivity application may update the document tree to include the received text the placeholder token or both. In some implementations the productivity application may receive input data including a completion indicator for the Address object may determine that the Address object is not associated with content and may update the interface to omit the optional Address object. In some implementations the productivity application may update the document tree to omit the optional Address object.

In some implementations the relative position of two instances of an object may be swapped. For example as shown in document interface a document may include a first instance of an EducationItem object which may include a first instance of a Duration object a first instance of a Degree object and a first instance of a College object . The document may include a second instance of the EducationItem object which may include a second instance of a Duration object a second instance of a Degree object and a second instance of a College object . In an example the first instance of the Duration object the first instance of the Degree object or the first instance of the College object may have focus the productivity application may receive input data indicating a position change such as the Alt Down key sequence and the productivity application may swap the relative position of the first EducationItem object with the second EducationItem object as shown in document interface . In another example the second instance of the Duration object the second instance of the Degree object or the second instance of the College object may have focus the productivity application may receive input data indicating a position change such as the Alt Up key sequence and the productivity application may swap the relative position of the second EducationItem object with the first EducationItem object . In some implementations the productivity application may update the document tree to indicate the position information.

In some implementations the relative position of two instances of an object may be swapped within another object. For example as shown in document interface a document may include a first instance of a Job object which may include a first instance of a Duration object a first instance of a JobTitle object and a first instance of a Company object. The document may include a second instance of the Job object which may include a second instance of the Duration object a second instance of the JobTitle object a second instance of the Company object a first instance of a Description object for the second Job object and a second instance of the Description object for the second Job object.

In an example the first instance of the Duration object the first instance of the JobTitle object or the first instance of the Company object may have focus the productivity application may receive input data indicating a position change such as the Alt Down key sequence and the productivity application may swap the relative position of the first Job object with the second Job object as shown in document interface . In some implementations the productivity application may update the document tree to indicate the position information.

In another example the first instance of the Description object for the second Job object or the second instance of the Description object for the second Job object may have focus as shown in document interface the productivity application may receive input data indicating a position change such as the Alt Up key sequence and the productivity application may swap the relative position of the first instance of the Description object for the second Job object and the second instance of the Description object for the second Job object as shown in document interface . In some implementations the productivity application may update the document tree to indicate the position information.

In some implementations an object such as the Status object shown in may include a set of objects that are associated with an alternate modifier such as Pending Finished and the content included in the document and the interface may be alternated between the objects. For example the content TODO of the Status object may have focus the productivity application may receive input data indicating a change in the content such as the Tab key or the shift tab key sequence and the productivity application may update the interface to omit the content TODO and include the content DONE as shown in document interface . In some implementations the productivity application may update the document tree to omit the content TODO and include the content DONE . In some implementations alternating between the objects may include indicating that an object is an active object and indicating that another object is an inactive objet.

In some implementations the productivity application may distinguish the content of objects associated with an alternate modifier in the interface. For example a first alternate may be output using a first style such as red font color and a second alternate may be output using a different style such as green font color. For clarity the TODO and DONE content is shown underlined.

Although not shown in template and content aware document and template editing may include validating content. For example a date format may be defined for a date object and content input for an instance of the date object may be validated against the defined date format. In some implementations content may be included in a document based on a data source such as a database or another document or template. For example a document may include a user identification object the productivity application may receive input data indicating content for the user identification object such as a user ID and the productivity application may receive content for one or more other objects such as a user name object or an e mail object from a data source based on the user ID.

In some implementations template and content aware document and template editing of a template may include one or more user devices such as the computing device shown in or the computing and communication devices A B shown in creating accessing or editing one or more templates via a productivity application which may be a networked application such as the networked application shown in executed by a server which may be a computing device such as the computing device shown in or the computing and communication devices C shown in .

In some implementations an interface for template and content aware document and template editing of a template may include a representation of a template structure . In some implementations the template structure may represent a template as a hierarchical collection of template elements or blocks .

In an example Template 4 includes a first rule List Project which includes a List object as the first or root object in the template and includes an object definition for the List object indicating that the List object includes a Project object. The List object may be represented in the template structure as a List block and the Project object may be represented in the template structure as a Project block within the List block .

In another example Template 4 includes an object definition for the Project object that indicates that the Project object includes a Name object and a Desc object and the template structure includes a Name block representing the Name object and a Desc block representing the Desc object within the Project block .

In another example Template 4 includes an object definition for the Name object of the Project object that indicates that the Name object includes a text object and the template structure includes a text block representing the text object within the Name block . Template 4 includes an object definition for the Desc object of the Project object that indicates that the Desc object includes a text object and the template structure includes a text block representing the text object within the Desc block .

In some implementations the interface may include a repeatable block indicator that may indicate that a block is a repeatable block which may indicate that a document created based on the template may include one or more instances of the object corresponding to the repeatable block. For example Template 4 includes the rule List Project which indicates that the Project object is associated with the one or more modifier and interface represents the Project block using a repeatable indicator . Although the repeatable indicator is shown using multiple vertical lines along the right edge of the block any indication that a block is a repeatable block may be used.

In some implementations the interface may include an optional block indicator not shown that may indicate that a block is an optional block which may indicate that a document created based on the template may include zero or more instances of the object corresponding to the optional block. Although not shown in an optional block indicator may include using for example a broken boarder for the block or any other indication that a block is a repeatable block may be used.

In some implementations the interface may represent an object as a text entry block using for example a text entry indicator and may include content such as placeholder content of the object. For example Template 4 includes an object definition for the Name object that indicates that the Name object includes a text object that includes the placeholder content name and the interface includes a text entry indicator and the placeholder content name within the text block within the Name block . Although the text entry indicator is shown as a horizontal line any indication that a block includes an editable text entry may be used. In some implementations an indication that a block includes an editable text entry may be omitted.

In some implementations the block editor may include a representation of a portion of the data model editor. For example the block editor may represent properties or parameters associated with the block. In some implementations the block editor may include a representation of structural information such as modifier information object identification information data source information or any other structural information or combination of information associated with a block or a corresponding object or object definition.

In some implementations the block editor may include a representation of a presentation editor or a portion thereof such as the presentation editor shown in . For example the block editor may include a representation of presentation information or any other presentation information or combination of information associated with a block or a corresponding object or object definition.

In some implementations a block of the template structure may be selected in the interface. For example the productivity application may receive input data such as user input data indicating a selection of a block such as a mouse pointer hovering over a block or clicking on a block. In some implementations the interface may include an indication of a selected block in the template structure . For example as shown in the List block may be the selected block and the interface may indicate that the List block is the selected block by for example changing a fill color of the block or changing an outline color of the block. In the selected block is indicated using stippling.

In some implementations the block editor may represent information associated with the selected block . For example in the List block corresponding to the List object is the selected block and the block editor represents information such as properties and parameters of the List object.

In some implementations the block editor may include a representation of structural modifier information . For example the object corresponding to the selected block may be associated with the optional modifier and the block editor may indicate that the selected block is optional not shown . In another example the object corresponding to the selected block may be associated with the one or more modifier and the block editor may indicate that the selected block is repeatable not shown . In some implementations the structural modifier information may be modified. For example the productivity application may receive input data such as user input data selecting one or more of the modifiers and the template may be updated to include the modifier for the object corresponding to the selected block or the productivity application may receive input data such as user input deselecting one or more of the modifiers and the template may be updated to remove the modifier for the object corresponding to the selected block. In the example shown in the selected block is the List block and the corresponding List object is not optional and not repeatable as indicated in Template 4.

In some implementations the block editor may include a representation of object identification information . For example the object identification information may include a name of the object associated with the selected block. In the example shown in the selected block is the List block and the object identification information includes the name List of the corresponding List object. In some implementations the object identification information may be editable. For example the productivity application may receive input data such as user input data creating or modifying the name of the object and the template may be updated to include the new or modified name for the object.

In some implementations the block editor may include a representation of data source information . In some implementations an object may not be associated with data source information and the block editor may include placeholder data source information as the data source information . In the example shown in the selected block is the List block and the corresponding List object is not associated with data source information as shown in Template 4 and the data source information includes placeholder data source information . In some implementations data source information may be editable. For example the productivity application may receive input data such as user input data creating or modifying the data source information and the template may be updated to incorporate the received data source information. In some implementations the productivity application may receive input data creating or modifying the data source information may update the interface to incorporate the received data source information may omit updating the template and may update the template in response to input such as user input indicating a request to update the data source information. For example the block editor may include an interface element such as the Set link shown or any other interface element capable of indicating a request to update the data source information and the productivity application may update the template to incorporate the data source information in response to input indicating the Set link .

In some implementations the block editor may include a representation of presentation information . For example the presentation information may include information for presentation of an instance of an object corresponding with the selected block in a document generated based on the template which may include cascading style sheet information or any other information capable of describing the presentation of content. In the example shown in the selected block is the List block and the object definition for the corresponding List object includes the presentation information shown in Template 4.

Implementations of template and content aware document and template editing dynamic content generation may include creating accessing or modifying a template a document or both. For example template and content aware document and template editing dynamic content generation may include creating accessing or modifying a template and creating accessing or modifying a document generated based on the template.

In some implementations creating accessing or modifying a template may include creating or modifying data source information at creating or modifying data relationship information at creating or modifying target information at or a combination thereof.

In some implementations creating or modifying data source information at may include identifying an object such as an object from the template for use as a data source. For example a template such as Template 4 in may include includes a List object that includes a Project object that includes a Name object and the Name object may be identified as a source object for use as a data source. In some implementations creating or modifying data source information at may include identifying a data source path that includes an expression of the object hierarchy of the object identified as the data source. For example Template 4 in includes a List object that includes a Project object that includes a Name object and a Desc object the Name object may be identified as a data source and List.Project.Name may be identified as the data source path.

In some implementations creating or modifying data relationship information at may include identifying a functional relationship between the data source identified at and the target identified at . In some implementations the data relationship information may be expressed using a functor a filter or by any other expression capable of describing a relationship between a data source and a target. In some implementations a functor may indicate a homomorphism between the structure of the content indicated by the data source and the structure of the target which may be evaluate to transform the information included in the source content for inclusion in the target and preserve the content and structure of the source document.

In some implementations instances of an object such as an object associated with the one or more modifier in a document may be identified as a set array or vector of object instances. For example Template 4 in includes the rule List Project which may indicate that a document generated based on Template 4 may include a List object that may include one or more Project objects which may be identified as an array or vector of Project object instances. The Project object may be identified as the data source List. Project may be identified as the data source path and the functor length may indicate a length a count or a cardinality of the vector array or set of Project object instances. In some implementations the productivity application may include one or more defined functors such as the length functor. In some implementations the one or more functors may be created or modified. For example a functor may be created or modified using a scripting programming language.

In some implementations creating or modifying target information at may include identifying an object from the template for use as a target object to receive dynamic content based on the data source information and the functor. In some implementations creating or modifying target information at may include receiving input data such as user input data indicating the functor and the data source information for creating or updating a value of an object such as a system object that has a Dynamic value type and updating the template to include the functor and the data source information as the value information for the object.

In some implementations creating or modifying a document such as a document generated based on the template may include monitoring a data source at generating dynamic content at creating or modifying a target at or a combination thereof. For example the template may include a source object a target object and a dynamic content definition which may indicate a functor and the data source information for the target object a document generated based on the template may include an instance of the source object and an instance of the target object and the productivity application may dynamically or automatically generate content for the target object based on the functor and the content of the source object identified by the data source information.

In some implementations monitoring a data source at may include identifying one or more instances of the source object in the document identifying content of the source object instances in the document identifying a change in the content of the source object instances in the document or a combination thereof. In some implementations the productivity application may monitor the document the template or both. For example a change in the content of the data source may be identified in response to an increase or decrease in the cardinality of the set of source object instances in the document a modification of the content of one or more instances of the source object in the document a modification of the data source information in the template or a modification of the source object in the template . In some implementations monitoring the data source at may include identifying a change in the content of the source object instances in the document periodically. In some implementations monitoring the data source at may include identifying a change in the content of the source object instances in the document in response to an event such as an event triggered by a change to the document or the template .

In some implementations generating dynamic content at may include applying the functor to the content of the source object instances identified by the data source information. For example the productivity application may determine a length of a vector of source object instances and may generate a value such as an integer value or a string of text indicating the cardinality of the set of source object instances.

In some implementations creating or modifying a target at may include updating the document to include modify or remove an instance of the target object. For example generating the document based on the template may include omitting an instance of the source object and an instance of the target object from the document and including an instance of the source object that includes placeholder content and an instance of the target object that includes placeholder content in an interface for the document . The productivity application may receive input data such as user input data indicating direct content for the instance of the source object in the document . The productivity application may update the document to incorporate the direct content may identify the change of the content of an instance of the source object may apply the functor to the source object to generate dynamic content and may update the document to incorporate an instance of the target object that includes the generated content as dynamic content.

Although shown sequentially in aspects of template and content aware document and template editing dynamic content generation may be performed in a different sequence and some aspects may be performed concurrently. For example target information data source information and data relationship information may be identified in any order or concurrently.

As shown Template 5 includes a List object that includes a repeatable Project object . The Project object includes a Name object a Desc object a Size object and a Members object . The Name object includes a text object that include the placeholder content name . The Desc object includes a repeatable text object that includes the placeholder content description . The Size object includes a SizeLabel object and a Value object . The SizeLabel object includes the express content Team Size . The Value object includes a text object that includes the placeholder content team size . The Members object includes a MemberLabel object and an Employee object . The MemberLabel object includes the express content Members . The Employee object includes a text object that includes the placeholder content UserIdentifier .

In some implementations a template may include a dynamic content definition. For example Template 5 the dynamic content definition Length List.Projects.Members.Employee . In some implementations a document generated based on Template 5 may include a list of projects.

In some implementations a block corresponding to a system object such as the text block of the SizeLabel block of the Size block of the template structure may be a selected block the template may indicate that the text object corresponding to the selected block has a value type of Constant and includes the express content Team size and a block editor of the interface may include a representation of the value type information and the express content for the text object.

In some implementations a block corresponding to a system object such as the text block of the Value block of the Size block of the template structure may be a selected block the template may indicate that the corresponding text object has a value type of Dynamic and may include the dynamic content definition Length List.Projects.Members.Employee and a block editor of the interface may include a representation of the value type information and the dynamic content definition for the text object.

In some implementations a document may include an instance of an object and the interface may omit a representation of the object. For example the document may include an instance of the List object shown in and may include instances of objects within the List object instance and the interface may omit a representation of an instance of the List object and may include a representation of instances of objects within the List object instance.

In the example shown the document includes three instances of the Project object indicated in Template 5. The first instance of the Project object includes four members corresponding to four instances of the text object of the Employee object indicated in Template 5 and a team size value of 4 corresponding to an instance of the text object of the Value object of the Size object indicated in Template 5. The second instance of the Project object includes two members corresponding to two instances of the text object of the Employee object indicated in Template 5 and a team size value of 2 corresponding to an instance of the text object of the Value object of the Size object indicated in Template 5. The third instance of the Project object includes three members corresponding to three instances of the text object of the Employee object indicated in Template 5 and a team size value of 3 corresponding to an instance of the text object of the Value object of the Size object indicated in Template 5.

In some implementations the team member information may be direct content such as content received from user input for the document . In some implementations the team size values may be generated dynamic content. For example the productivity application may identify the four instances of the text object for the first instance of the Project object the two instances of the text object for the second instance of the Project object and the three instances of the text object for the third instance of the Project object and may update the document to incorporate the dynamic content 4 for team size value of the first project the dynamic content 2 for the team size value of the second project and the dynamic content 3 for the team size value of the third project .

In some implementations template and content aware document and template editing may include dynamic content filtering. In some implementations dynamic content filtering may include identifying content such as content from another document and identifying a portion of the content to include in a document as dynamic content. In some implementations identifying a portion of the content to include in a document as dynamic content may include evaluating filter criteria.

Implementations of template and content aware document and template editing dynamic content filtering may include creating accessing or modifying a template a document or both. For example template and content aware document and template editing dynamic content filtering may include creating accessing or modifying a template and creating accessing or modifying a document generated based on the template.

In some implementations creating accessing or modifying a template may include creating or modifying a dynamic content definition which may include creating or modifying data source information at creating or modifying filter criteria at creating or modifying target information at or a combination thereof.

In some implementations creating or modifying data source information at may include identifying an object for use as a data source. In some implementations identifying an object for use as a data source may include identifying a source document and a source object for use as a data source. For example identifying an object for use as a data source for a current template such as the template may include identifying a source object from a source document such as the document shown in which may be a document generated based on a source template such as the template shown in . In some implementations identifying a source document and a source object for use as a data source may include indicating an identifier which may be a globally unique identifier uniquely identifying the source document. In some implementations creating or modifying data source information at may include identifying a data source path or content query that includes an expression of the object hierarchy of the object identified as the data source.

In some implementations creating or modifying filter criteria at may include identifying a functional relationship between the data source identified at and the target identified at . The data relationship information may be expressed as a functor a filter or by any other expression capable of describing a relationship between a data source and a target. In some implementations the filter criteria may include an expression which may indicate a condition precedent for including content from the data source in the current document as dynamic content. In some implementations the expression may indicate symbols such as objects and may indicate an operator or combination of operators for evaluating the symbols. For example the expression may indicate a first object the source criterion an equality operator and a second object the target criterion and the content of an instance of the first object may equal the content of an instance of the second object and content from the data source may be included as dynamic content.

For example the criteria may include the expression SourceObject if SourceObject.text red and the source document may include a first instance of the text object of the SourceObject object that includes the content red a second instance of the text object of the SourceObject object that includes the content blue and a third instance of the text object of the SourceObject object that includes the content red . The filter criteria may be evaluated using the content red of the first instance of the text object of the SourceObject object as the source criterion and the value red as the target criterion and the first instance of the SourceObject object may be included as dynamic content. The filter criteria may be evaluated using the content blue of the second instance of the text object of the SourceObject object as the source criterion and the value red as the target criterion and the second instance of the SourceObject object may omitted from the dynamic content. The filter criteria may be evaluated using the content red of the third instance of the text object of the SourceObject object as the source criterion and the value red as the target criterion and the third instance of the SourceObject object may be included as dynamic content.

In some implementations creating or modifying filter criteria at may include generating conditional content source information at . In some implementations generating conditional content source information at may include identifying an object such as an object of the template as a conditional content source. For example the filter criteria may indicate a conditional content source which may be an object such as an object of the template and the productivity application may include content from the data source filtered using content of an instance of the object identified as the conditional content source. For example the current template may include a Color object that may be identified as the conditional content source the filter criteria may include the expression SourceObject if SourceObject.text this.Color the source document may include a first instance of the text object of the SourceObject object that includes the value red a second instance of the text object of the SourceObject object that includes the value blue and a third instance of the text object of the SourceObject object that includes the value red the data source may be evaluated using the content of the text object instances as the source criterion and the content of the Color object instance as the target criterion and the first instance of the SourceObject object and the third instance of the SourceObject object may be included as dynamic content and the second instance of the SourceObject object may be omitted from the dynamic content. In some implementations the current document may be identified using the identifier this .

In some implementations the conditional content source information may indicate a non content data source. For example a user may generate a document based on a template using the productivity application and the conditional content source information may indicate as a non content data source an identifier that identifies the user.

In some implementations creating or modifying target information at may include identifying an object from the template for use as a target object or destination for data identified based on the data source information and the filter criteria. In some implementations creating or modifying target information at may include receiving input data such as user input data indicating the data source information the filter criteria or both for creating or updating a value of an object such as a system object that has a Dynamic value type. In some implementations creating or modifying target information at may include updating the template to include the data source information the filter criteria or both as the value of the object.

In some implementations creating or modifying a document such as a document generated based on the template may include monitoring a data source at filtering content at creating or modifying a target at or a combination thereof.

In some implementations monitoring a data source at may include identifying one or more instances of the source object in the source document identifying content of the source object instances identifying a change in the content of the source object instances or a combination thereof. In some implementations the productivity application may monitor the current document the source document the template or a combination thereof. For example a change in the content of the source object instances in the source document may be identified in response to a change of a source object in the source document a change in a conditional content source of the current document a modification of the data source information in the template a modification of the source object in the template or a modification of a source template. In some implementations monitoring the data source at may include identifying a change periodically. In some implementations monitoring the data source at may include identifying a change in response to an event such as an event triggered by a change to the current document the source document or the current template or a source template.

In some implementations filtering content at may include identifying the content of one or more source object instances from the source document as source content identifying the content of the conditional content source and filtering the source content based on the content of the conditional content source.

In some implementations creating or modifying a target at may include updating the document to include modify or remove an instance of the target object. For example generating the document based on the template may include omitting an instance of an object identified as the conditional content source and an instance of the target object from the document and including an instance of the object identified as the conditional content source that includes placeholder content and an instance of the target object that includes placeholder content in an interface for the document . The productivity application may receive input data such as user input data indicating direct content for the instance of the object identified as the conditional content source in the document . The productivity application may update the document to incorporate the direct content may identify the change of the content of the instance of the object identified as the conditional content source may identifying the content of one or more instances of the source object from the source document may filter the source content based on the content of the instance of the object identified as the conditional content source and may update the document to incorporate an instance of the target object that includes the filtered source content as dynamic content.

Although shown sequentially in aspects of template and content aware document and template editing dynamic content filtering may be performed in a different sequence and some aspects may be performed concurrently. For example target information data source information and filter criteria may be identified in any order or concurrently.

As shown Template 6 includes a Resume object that includes a UserIdentifier object a Projects object and a Section object . The UserIdentifier object includes a text object that includes the placeholder content Your User Identifier . The Projects object includes a Header object and an optional repeatable Project object which includes a dynamic content definition . In some implementations a document generated based on Template 6 may be a resume.

In some implementations a template structure such as template structure may represent objects defined in a corresponding template. For example the template structure may represent the Resume object as a Resume block that includes a UserIdentifier block representing the UserIdentifier object a Projects block representing the Projects object and a Section block representing the Section object . The UserIdentifier block of the template structure may include a text block representing the text object which includes the placeholder content Your User Identifier . The Projects block of the template structure may include a Header block representing the Header object and a Project block representing the Project object which may be indicated as optional and repeatable. In the Project block is indicated as a selected block using stippling.

In some implementations an object definition may include a dynamic content definition that includes a reference to a source content object. For example the object definition for the Project object in Template 6 includes a dynamic content definition which includes a reference to the Project object of Template 5 shown in . Although not shown in in some implementations the object definition from the source template for the source object indicated in the dynamic content definition in the current template which may include objects and object definitions included in the source object in the source template may be included in the current template. For example the object definition for the Project object may include the dynamic content definition and may include the object definition from the source template Template 5 of the Project object identified as the source object in the dynamic content definition which may include the rules from the source template Template 5 for objects included in the source object such as the Name object the Desc object the Size object and the Members object .

In some implementations a template structure may include a representation a template structure or a portion of a template structure that represents a source content object referenced in a dynamic content definition. For example the template structure shown in includes the Project block which includes a representation of a portion of the template structure shown in which represents the Project object of Template 5 referenced in the dynamic content definition.

In some implementations the portion of the template structure shown in included in the template structure shown in may be included based on data source information filter criteria conditional content source information target information or a combination thereof. For example the dynamic content definition shown in may include data source information filter criteria conditional content source information or a combination thereof. In some implementations the interface may indicate that one or more blocks such as the blocks included in the Project block are included in the template structure based on a dynamic content definition. For example the blocks included in the Project block may be represented using a smaller font as shown in .

In some implementations a block of the template structure may be a selected block in the interface and the block editor may include a representation of template information for the selected block. For example in the Project block is the selected block and the block editor includes a representation of template information for the Project block .

In some implementations an object definition such as the object definition for the Project object may include dynamic content information such as the data source information identified at in the filter criteria identified at in the conditional content source information identified at in or a combination thereof and the block editor may include a representation of the dynamic content information .

In some implementations the dynamic content information may include a document identifier which may identify a source document such as the document shown in which may correspond with the document shown in which may be a document generated based on a source template such as the template shown in which may correspond with Template 5 shown in .

In some implementations the dynamic content information may include data source information which may identify a source object such as the Project object of the List object of Template 5 shown in . In some implementations the dynamic content information may include filter criteria which may indicate criteria for filtering the dynamic content. In some implementations the dynamic content information may include source criterion information which may identify a source criterion which may be used for filtering the dynamic content.

In some implementations the dynamic content information may include conditional content source information which may identify target criterion information such as the content of an instance of an object for filtering the dynamic content. Although the source criterion information and the target criterion information are shown using document queries expressed as dot delimited paths any expression capable of identifying the information may be used. In some implementations the object identifier this may indicate the current document. For example the path this.Resume may indicate a Resume object of the current document.

In the example shown in the document identifier may indicate the document shown in the source document which may be based on the template shown in the source template . The data source information may indicate the Project object of the List object of the template represented in as the source object. The source criterion may indicate the text object of the Employee object of the Members object of the Project object of the List object of the template represented in as the filter antecedent. The target criterion information may indicate the text object of the UserIdentifier object of the Resume object of the current document.

In some implementations the productivity application may include the template structure of the source object in the template structure of the current template . For example as shown the document identifier may indicate the document shown in the source document which may be based on the template shown in the source template the data source information indicates the Project object of the List object of the source template as the source criterion and the template structure for the current template includes a representation of the objects included in the Project object of the List object of the source template.

In some implementations the template structure of the source object dynamic structure may be included in the current template in response to input such as user input. For example the productivity application may receive input data indicating the dynamic template information the productivity application may identify a source document and a source object based on the dynamic content information the productivity application may identify a source template based on the source document and the productivity application may include the structure from the source object in the current template. In some implementations the productivity application may incorporate the template structure of the source object in response to input indicating a request to incorporate dynamic structure such as a selection of the Set link .

In some implementations the block editor may include a representation of presentation information for the selected block. For example although not shown in the Name object of the Project object may be the selected block and the block editor may include presentation information for the Name object. In some implementations the presentation information may be dynamic presentation information which may include presentation information included for the dynamic content in the current document based on presentation information indicated for the source content in the source template. For example the source template may include presentation information for the source object corresponding to the selected block and the presentation information from the source object may be included in the current template.

In some implementations the presentation information may be presentation information included in the template directly such as presentation information received as input data from a template presentation editor interface. For example the productivity application may receive input data indicating a change for the presentation information of a block of dynamic content via a template editor interface for editing the current template and may update the template to incorporate the revised information.

In some implementations the productivity application may prevent modification of the structure of the template structure included based on the dynamic content definition. For example the productivity application may prevent the addition deletion or modification of dynamic structure incorporated in the current template. In some implementations the productivity application may prevent modification of the presentation information of the dynamic template information. In some implementations the template structure from the source template included as dynamic content in the current template based on the dynamic content definition may be modified or deleted in current template.

In some implementations the current document may be generated based on the current template as shown in interface . For example the generated document may include an instance of the text object of the UserIdentifier object of the Resume object indicated in Template 5 and the text object instance may include the placeholder content indicated in the Template 5. The generated document may include an instance of the Projects object indicated in the Template 5 and the Projects object instance may include the express content Projects indicated in Template 5. The generated document may include an instance of the Section object of the Resume object indicated in Template 5 and the Section object instance may include the placeholder content indicated in Template 5.

In some implementations generating the document may include monitoring the data source such as the data source monitoring shown at in filtering the source content such as the content filtering shown at in or a combination thereof. In some implementations monitoring the data source may include identifying an instance of an object indicated by conditional content source information indicated in the dynamic content definition and identifying content of the conditional content source object instance for use as criteria for filtering the dynamic content.

In some implementations the current document may omit dynamic content which may include placeholder content or express content. For example the Projects object instance may correspond to the Projects object indicated in Template 6 which may include the Project object which may be associated with dynamic content from the document shown in which may include instances of the Project object of the List object of Template 5 and the current document may omit the Project object .

In some implementations the current document may omit the dynamic content based on the dynamic content definition indicated in Template 6 the current template . For example as shown in interface the instance of the object identified in the conditional content source information includes placeholder content and the content of the instances of the source objects of the source document may be omitted dynamic content in the current document. The space for the omitted dynamic content is shown for clarity in the and may be omitted from an interface.

In some implementations the current document may be created accessed or modified as shown in interface . In some implementations creating accessing or modifying the current document may include monitoring the data source such as the data source monitoring shown at in which may include monitoring one or more instances of the object indicated as the conditional content source in the dynamic content definition indicated in the current template. In some implementations monitoring the instance of the object indicated as the conditional content source may include identifying a change in the content of an instance of the conditional content source object and evaluating the criteria indicated in the dynamic object definition based on the changed content.

In some implementations evaluating the criteria may include determining whether the criteria is satisfied based on the changed content of the instance of the conditional content source object and content from the source document. In some implementations the productivity application may determine that the criteria indicated in the dynamic content definition is satisfied based on the changed content of the instance of the conditional content source object and may update the current document the interface or both to incorporate content from the source document indicated by the dynamic content definition as dynamic content.

For example the productivity application may receive input data indicating content which may be direct content such as the text JohnDoe for the user identifier and may update the current document the interface or both to incorporate the input data in the instance of the text object of the UserIdentifier object . The productivity application may evaluate the criteria Project.Members.Employee.text this.Resume.UserIdentifier.text indicated in the dynamic contend definition for the Project object of the current template. The productivity application may determine that this.Resume.UserIdentifier.text indicates the instance of the text object of the UserIdentifier object which includes the content JohnDoe . The productivity application may determine that the document identifier of the dynamic content definition shown in indicates the document the solurce document shown in that Project.Members.Employee.text indicates the instances in the source document of the text object of the Employee object of the Members object of the Project object of the List object of Template 5 the source template and may identify the content of text object instances as JohnDoe JaneDoe JimDoe and JuneDoe the content of the text object instances as JohnDoe and JuneDoe and the content of the text object instances as JohnDoe JessicaDoe and JaneDoe. The productivity application may determine that at least one of the identified text object instances for the first Project object instance at least one of the identified text object instances for the second Project object instance and at least one of the identified text object instances for the third Project object instance includes content that satisfies the criteria JohnDoe JohnDoe and may update the current document the interface or both to include the content of the first the first Project object instance the second Project object instance and the third Project object instance as dynamic content .

In some implementations including dynamic content in the current document may include using data model information presentation information or both indicated for the source content in the source template. For example the presentation information for project names and descriptions in the dynamic content may be indicated in the source template Template 5.

In some implementations including dynamic content in the current document may include using presentation information indicated for the source content in the current template. For example the presentation information in Template 5 indicates that the Size objects and the Members objects are visible as shown in the document in . Although not shown in Template 6 in Template 6 may include presentation information for the dynamic content. For example Template 6 may include presentation information indicating that the Size objects and the Members objects are hidden and the instances of the Size objects and the Members objects in the dynamic content may be hidden as shown in the document interface in .

In another example not shown in the productivity application may receive the input data JaneDoe for the user identifier may update the current document the interface or both to include the content of the first the first Project object instance and the third Project object instance as dynamic content and may filter the source content to omit the content of the second Project object instance from the current document.

In some implementations the productivity application may receive the input data deleting the content of the user identifier and may update the current document the interface or both to omit the instance of the Project object from the current document as shown in interface .

Although the dynamic content definition shown in includes source criterion and target criterion information in some implementations a dynamic content definition may omit the filter criteria the conditional content source information or both. For example a dynamic content definition may include a document identifier and data source information and may omit filter criteria and conditional content source information. In some implementations generating accessing or modifying the current document may include incorporating content from the source document indicated by the data source information and may omit filtering the content. For example the data source information indicated for the Project object in the current template may indicate the data source List.Project and may omit filter criteria and conditional content source information and the productivity application may incorporate the content of one or more Project object instances from the source document as dynamic content in the current document.

In some implementations the productivity application may perform dynamic content filtering in response to a change in the current template. For example the current document may include the dynamic content from the source document as shown in interface the productivity application may identify a change in the data source information in Template 6 from List.Project to List.Project.Name and may update the current document to include the content of the instances of the Name object from the source document and omit the other content of the source document . In another example the productivity application may identify a change in the source document identifier in Template 6 indicating a change from a first source document generated based on Template 5 to a second source document generated based on Template 5 and the productivity application may update the current document to include the content of the second source document and omit the content of the first source document.

In some implementations the productivity application may perform dynamic content filtering in response to a change in the source content. For example the instance of the object identified as the conditional content source in the current document may include the content JohnDoe as shown in interface and the productivity application may include a first instance of the Project object from the source document shown in a second instance of the Project object from the source document shown in and a third instance of the Project object from the source document shown in in the current document as shown in interface based on the dynamic content definition. The source document may be modified to remove the content JohnDoe from the first instance of the Project object in the source document . The productivity application may identify the change in the source document may evaluate the dynamic content definition and may update the current document to omit the instance of the first Project object from the current document.

In some implementations the productivity application may perform dynamic content filtering in response to a change in the source template. For example the source template Template 5 may be updated to include a Date object that includes the express content Date and the productivity application may update the current document to include instances of the Date object that include the express content Date .

In some implementations dynamic content generation as shown in and dynamic content filtering as shown in may be combined. In some implementations a dynamic content definition may include a source document identifier data source information filter criteria and conditional content source information and the data source information the filter criteria the conditional content source information or a combination thereof may include a functor. For example the data source information for the dynamic content definition shown in Template 6 may be Length List.Project and the document shown in may include the dynamic content 3 . In another example the filter criteria and conditional content source information for the dynamic content definition shown in Template 6 may be Length Project.Members.Employee.text this.Resume.UserIdentifier.text 

In some implementations template and content aware document and template editing may include generating and sending notifications. For example monitoring source content such as the source content monitoring shown at in may include generating and outputting one or more notifications in response to detecting a change in the source content. In some implementations updating target information such as the target information updating shown at in may be performed in response to receiving information such as user input data indicating a request to update.

In some implementations a document template may be identified at . For example a user may initiate a productivity application such as a networked productivity application and a template may be identified in response to user input indicating the template such as the selection of a template from a list of templates.

In some implementations template rules may be identified at . For example a template identified at may be associated with a template specification that may include a sequence of template rules.

In some implementations dynamic structure may be identified at . For example the template specification identified at may include a rule including dynamic content information such as the dynamic content information shown in and dynamic structure may be identified based on the dynamic content information. In some implementations the dynamic structure may include a template structure or a portion of a template structure of a source template. In some implementations the dynamic content information may indicate a source document generated based on a source template and identifying the dynamic structure may include a template structure or a portion of a template structure for the source template.

In some implementations a dynamic content definition may include an identifier such as a GUID identifying a source template other than the current template. For example the source template may be a Project template multiple Project documents each including information related to a project may be generated based on the Project template a template ID identifying the Project template may be included in a dynamic content definition in a Projects template and a document generated based on the Projects template may include content from each of the Project documents as dynamic content based on the dynamic content definition.

In some implementations a template structure may be generated at . For example the template structure may include the objects indicated in the template specification which may include the dynamic structure identified at .

In some implementations input data may be received at . For example the productivity application may generate and present an interface such as a user interface for interacting with the template generated at which may include using the template structure generated at and may receive input data via the interface. In some implementations the productivity application may receive input data indicating for example a mouse click on a text field a change of focus a keystroke such as the enter key or the tab key a combination of keystrokes such as shift tab alt up or alt down or any other input related to the template.

In some implementations the template structure may be altered at . For example the template structure may be altered in response to the input received at . In some implementations alterations to the template structure may be based on a current state of the productivity application interface the input data received at the template specification or a combination thereof. For example objects may be added modified or removed from the template structure.

In some implementations the template may be output at . For example the template may be stored on a memory such as memory shown in or transmitted via a communication network such as the network shown in . In some implementations outputting the template may include presenting an interface such as a user interface for viewing and interacting with the template such as the interfaces shown in .

Other implementations of the diagrams of template and content aware document and template editing as shown in are available. In implementations additional elements of template and content aware document and template editing can be added certain elements can be combined and or certain elements can be removed. For example in some implementations generating a document tree as shown at in can be skipped and or omitted.

Template and content aware document and template editing or any portion thereof can be implemented in a device such as the computing device shown in . For example a processor such as the processor shown in can implement template and content aware document and template editing or any portion thereof using instruction such as the instructions shown in stored on a tangible non transitory computer readable media such as the memory shown in .

The words example or exemplary are used herein to mean serving as an example instance or illustration. Any aspect or design described herein as example or exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the words example or exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X includes A or B is intended to mean any of the natural inclusive permutations. That is if X includes A X includes B or X includes both A and B then X includes A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Moreover use of the term an embodiment or one embodiment or an implementation or one implementation throughout is not intended to mean the same embodiment or implementation unless described as such. As used herein the terms determine and identify or any variations thereof includes selecting ascertaining computing looking up receiving determining establishing obtaining or otherwise identifying or determining in any manner whatsoever using one or more of the devices shown in .

Further for simplicity of explanation although the figures and descriptions herein may include sequences or series of steps or stages elements of the methods disclosed herein can occur in various orders and or concurrently. Additionally elements of the methods disclosed herein may occur with other elements not explicitly presented and described herein. Furthermore not all elements of the methods described herein may be required to implement a method in accordance with the disclosed subject matter.

The implementations of the computing and communication devices as described herein and the algorithms methods instructions etc. stored thereon and or executed thereby can be realized in hardware software or any combination thereof. The hardware can include for example computers intellectual property IP cores application specific integrated circuits ASICs programmable logic arrays optical processors programmable logic controllers microcode microcontrollers servers microprocessors digital signal processors or any other suitable circuit. In the claims the term processor should be understood as encompassing any of the foregoing hardware either singly or in combination. The terms signal and data are used interchangeably. Further portions of the computing and communication devices do not necessarily have to be implemented in the same manner.

Further all or a portion of implementations can take the form of a computer program product accessible from for example a tangible computer usable or computer readable medium. A computer usable or computer readable medium can be any device that can for example tangibly contain store communicate or transport the program for use by or in connection with any processor. The medium can be for example an electronic magnetic optical electromagnetic or a semiconductor device. Other suitable mediums are also available.

The above described implementations have been described in order to allow easy understanding of the application are not limiting. On the contrary the application covers various modifications and equivalent arrangements included within the scope of the appended claims which scope is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structure as is permitted under the law.

