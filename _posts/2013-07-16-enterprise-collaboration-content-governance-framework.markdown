---

title: Enterprise collaboration content governance framework
abstract: The present disclosure describes methods, systems, and computer program products for providing enterprise collaboration content governance. One computer-implemented method includes receiving a content creation request associated with particular content and a context, transmitting the particular content and context for validation of the content creation request. comparing, by operation of a computer, at least one rule and at least one pattern to the transmitted content and context to generate a rule result, determining at least one action result based on the generated rule result, and performing at least one application action based on the determined at least one action result.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09477934&OS=09477934&RS=09477934
owner: SAP Portals Israel Ltd.
number: 09477934
owner_city: Ra'anana
owner_country: IL
publication_date: 20130716
---
Users of enterprise portal systems EPS are able to create content on the EPS for example downloading uploading documents commenting on existing content posting to blogs and the like. The content may sometimes include sensitive confidential inappropriate and or restricted data such as social security numbers account numbers passwords addresses phone numbers etc. The inability to control creation of content on the EPS can result in loss of data intellectual property data security violations transmission of confidential information to unauthorized individuals offended users loss of business and or violations of various laws and regulations.

The present disclosure relates to computer implemented methods computer readable media and computer systems for providing enterprise collaboration content governance. One computer implemented method includes receiving a content creation request associated with particular content and a context transmitting the particular content and context for validation of the content creation request. comparing by operation of a computer at least one rule and at least one pattern to the transmitted content and context to generate a rule result determining at least one action result based on the generated rule result and performing at least one application action based on the determined at least one action result.

Other implementations of this aspect include corresponding computer systems apparatuses and computer programs recorded on one or more computer storage devices each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software firmware hardware or a combination of software firmware or hardware installed on the system that in operation causes or causes the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions.

The foregoing and other implementations can each optionally include one or more of the following features alone or in combination 

A first aspect combinable with the general implementation wherein the content creation request is received from a client device.

A second aspect combinable with any of the previous aspects wherein comparing the at least one rule and the at least one pattern further comprises generating the rule result based on the comparison result and transmitting the rule result.

A third aspect combinable with any of the previous aspects wherein determining the at least one action further comprises comparing the generated rule result to at least one action and transmitting the determined at least one action result.

A fourth aspect combinable with any of the previous aspects further comprising determining at least one associated action and performing the at least one associated action.

A fifth aspect combinable with any of the previous aspects further comprising receiving an administrative request to extend at least one of the at least one rule the at least one pattern or the at least one action.

A sixth aspect combinable with any of the previous aspects wherein the at least one application action requires additional input to permit the completion of the at least one application action.

The subject matter described in this specification can be implemented in particular implementations so as to realize one or more of the following advantages. First a content governance framework CGF can be used to protect intellectual property confidential private restricted information and other appropriate data from dissemination within an enterprise portal EP following a content creation request. For example a purposeful inadvertent attempt to post a company financial report social security number private address or phone number can be blocked before available for viewing on the EP. Second The CGF can use defined rules actions to configure content restriction parameters and subsequent actions if a violation of content creation rules have been detected. Third violations of rules can be tracked and both violators and those in authority can be notified of infractions. Fourth the CGF can also be used to further restrict an existing EP permission model. For example all EP users can be allowed to upload documents to a collaboration room EP permissions based on content collaboration room X and actions upload document but only a finance officer will be able to upload financial result documents CFG permissions based on content . Fifth the CFG can also help organizations to avoid legal regulatory violations with respect to release of inappropriate sensitive restricted data. Sixth the use of the CGF can help increase the consistency tone quality and accessibility of content created on the EP. For example removal of foul language and mature topics can make EP content accessible to a wider audience and ensure that the EP content is perceived as clean informative and of value to EP users. Seventh the perceived accessibility can increase user comfort acceptance of the EP content resulting in greater revenue for the EP. Other advantages will be apparent to those skilled in the art.

The details of one or more implementations of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

This disclosure generally describes computer implemented methods computer program products and systems for providing enterprise collaboration content governance. The following description is presented to enable any person skilled in the art to make and use the invention and is provided in the context of one or more particular implementations. Various modifications to the disclosed implementations will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other implementations and applications without departing from scope of the disclosure. Thus the present disclosure is not intended to be limited to the described and or illustrated implementations but is to be accorded the widest scope consistent with the principles and features disclosed herein.

For the purposes of this disclosure an enterprise portal EP is a framework for integrating information people and processes across organizational boundaries. An EP provides a secure unified access point often in the form of a web based graphical user interface GUI and is designed to aggregate and personalize information through application specific portals. The EP is a de centralized content contribution collaboration and content management system which keeps the information always updated. With only a web browser EP users can begin work once they have been authenticated in the EP which offers a single point of access to information enterprise applications collaboration spaces and services both inside and outside an organization. EPs may present information from diverse sources on mobile or other devices in a unified and structured way for example using HTML container documents and provide additional services such as dashboards an internal search engine e mail news navigation tools collaboration tools and various other features. EPs are often used by enterprises for providing their employees customers and possibly additional users with a consistent look and feel and access control and procedures for multiple applications which otherwise would have been separate entities altogether.

A content governance framework CGF can be used to protect intellectual property confidential private restricted information and other appropriate data from dissemination within an EP following a content creation request. For example a purposeful inadvertent attempt to post a company financial report social security number private address or phone number can be blocked before available for viewing on the EP. The CGF can use defined rules actions to configure content restriction parameters and subsequent actions if a violation of content creation rules have been detected. Violations of rules can be tracked and both violators and those in authority can be notified of infractions. The CGF can also be used to further restrict an existing EP permission model. For example all EP users can be allowed to upload documents to a collaboration room EP permissions based on content collaboration room X and actions upload document but only a finance officer will be able to upload financial result documents CFG permissions based on content . The CFG can also help organizations to avoid legal regulatory violations with respect to release of inappropriate sensitive restricted data. The use of the CGF can help increase the consistency tone quality and accessibility of content created on the EP. For example removal of foul language and mature topics can make EP content accessible to a wider audience and ensure that the EP content is perceived as clean informative and of value to EP users. Foul language and mature topics can be identified and replaced with other language characters such as asterisks dashes etc. labels etc. The perceived accessibility can increase user comfort acceptance of the EP content resulting in greater revenue for the EP.

In general the EPS is a server that stores and or executes one or more portal applications and or a content governance framework CGF . The EPS can also interact with user requests responses sent by clients within and communicably coupled to the illustrated EDCS . In some implementations the one or more portal applications and or CGF represents one or more web based applications accessed and executed by the client using the network or directly at the EPS to perform the programmed tasks or operations of a particular portal application and or the CGF .

The EPS is responsible for receiving requests using the network for example data retrieval user authentication collaborative content governance rule action administration configuration and or any other suitable requests from one or more client applications associated with the client of the EDCS and responding to the received requests by processing said requests in the one or more of a portal applications and or the CGF . In addition to requests from the client requests may also be sent to the EPS from internal users external or third parties other automated applications as well as any other appropriate entities individuals systems or computers. In some implementations requests responses can be sent directly to EPS from a user accessing EPS directly.

In some implementations any and or all components of the EPS both hardware and or software may interface with each other and or the interface using an application programming interface API and or a service layer . The API may include specifications for routines data structures and object classes. The API may be either computer language independent or dependent and refer to a complete interface a single function or even a set of APIs. The service layer provides software services to the EDCS . The functionality of the EPS may be accessible for all service consumers using this service layer. Software services such as those provided by the service layer provide reusable defined business functionalities through a defined interface. For example the interface may be software written in JAVA C or other suitable language providing data in extensible markup language XML format or other suitable format.

While illustrated as an integrated component of the EPS in the EDCS alternative implementations may illustrate the API and or the service layer as stand alone components in relation to other components of the EDCS . Moreover any or all parts of the API and or the service layer may be implemented as child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure. For example the API could be integrated into the CGF .

The EPS includes an interface . Although illustrated as a single interface in two or more interfaces may be used according to particular needs desires or particular implementations of the EDCS . The interface is used by the EPS for communicating with other systems in a distributed environment including within the EDCS connected to the network for example the client as well as other systems communicably coupled to the network . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated EDCS .

The EPS includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular implementations of the EDCS . Generally the processor executes instructions and manipulates data to perform the operations of the EPS . Specifically the processor executes the functionality required to provide enterprise collaboration content governance.

The EPS also includes a memory that holds data for the EPS client and or other components of the EDCS . Although illustrated as a single memory in two or more memories may be used according to particular needs desires or particular implementations of the EDCS . While memory is illustrated as an integral component of the EPS in alternative implementations memory can be external to the EPS and or the EDCS . In some implementations the memory includes one or more persistent instances of portal application data a rule a pattern and or an action .

The portal application data can include data and or content objects processes content provider locations addresses storage specifications content lists access requirements or other suitable data. For example for a database content provider the portal application data may include a database server Internet Protocol IP address URL access permission requirements data download speed specifications etc. associated with the database content provider. The content object can be considered a representation of a business non business entity such as an employee a sales order an invoice an inventory report a financial report and may encompass both functions in the form of methods and data such as one or more properties. Content objects also form a point of entry of the functions and data of a system and enable the system to easily share communicate display or otherwise operate with other systems. In some instances data and or a content object may be used to share content with other EPS users such as through updating an EPS collaborative page posting a comment etc.

The portal application data can be generated stored and or converted from into any suitable format or form for example binary text numerical a database file a flat file or the like. In some implementations the portal application data can directly accessed by any suitable component of the EDCS for example the portal application and or the CGF . In some implementations the portal application data may be updated regularly or at a particular time based on underlying processes and or data content objects. While the portal application data is illustrated as an integral component of the memory in alternative implementations the portal application data can be external to the memory e.g. stored in memory and or be separated into both external portal application data and internal portal application data as long as accessible using network .

The pattern represents data structures used to scan compare contrast identify determine and or the like content based on a particular rule s described below . In some implementations pattern can include dictionaries document templates regular expressions role analysis e.g. is the user a manager in finance HR etc. document classification verifications and or the like. In some implementations the pattern can be encrypted for security purposes for example to apply against high security documents. The list of one or more available patterns can be predefined and or extended to create custom patterns by appropriate EPS users for example EPS developers architects. The action represents data structures policies conditions instructions constraints and or the like used by an action engine described below to determine an action to be taken by a portal application based upon the analysis of the user content creation request content compared against the pattern s . For example action can include BLOCK PROCEED MORE INFORMATION NEEDED ALERT and the like. In some implementations the action can be encrypted for security purposes for example to apply against high security documents. The list of one or more actions can be predefined and or extended to create custom actions by appropriate EPS users for example EPS developers architects. The rule generally represents policies conditions parameters variables algorithms instructions constraints references and any other appropriate information used by a rule engine described below to determine one or more patterns to apply to content requested to be added to the EPS in order to perform an analysis of the pattern against the content to perform an action . In other words a rule can be considered an association of one or more patterns with an action . In some implementations the EDCS CGF and or other suitable component can provide several generic rule types that can be realized by a customer using existing patterns. For example a dictionary rule can be associated with a foul language dictionary pattern and an OBSCURE action to convert foul language into asterisks or a role assignment rule can be associated with a role set pattern FINANCE OFFICER ROLE FINANCE ANALYSIS ROLE to identify EP users that are assigned to at least one of the roles defined in the pattern . In some implementations the rule can be encrypted for security purposes for example to apply against high security documents. The list of one or more rules can be predefined and or extended to create custom rules by appropriate EPS users for example EPS developers architects.

The portal application can be considered a content provider that can include for example applications and data on a server and or external services business applications business application servers databases RSS feeds document servers web servers streaming servers caching servers or other suitable content sources. In some implementations a particular portal application can use portal application data to provide content to the client and or other appropriate component of the EDCS . The portal application also allows the client to request view execute create edit delete and or consume EPS content. The portal application interfaces with the CGF to request validation of EP user requests actions to created content for the EPS and or to perform any other appropriate operations for providing enterprise collaboration content governance. In some implementations the portal application interfaces with the CGF using the API and or the service layer . The portal application can be manually configured to request validation of content creation and or other actions by calling API . In some implementations the portal application can register with the CGF and is informed by the CGF as to when the CGF is to be called. When the portal application registers with CGF the CGF can return an object or other appropriate data structure to the portal application identifying available content governance capabilities.

Once a particular portal application is launched the particular portal application can be used for example by a client to interactively process a task event or other information content associated with the EPS . In some implementations the portal application may be a network based web based and or other suitable application consistent with this disclosure. For example a particular portal application may receive a request a desired user action from a client browser to upload a document to an EP collaboration page create content on the EPS . The portal application can initiate a request to validate the content creation request with respect to the document to be uploaded and send the content creation request to the CGF . The portal application can also receive an action result from the CGF indicating an action that the portal application is take with regard to the request to upload the document for example BLOCK PROCEED etc.

In some implementations a particular portal application may operate in response to and in connection with at least one request received from other portal applications other components e.g. software and or hardware modules associated with another EPS and or other components of the EDCS whether illustrated or not . In some implementations the portal application can be accessed and executed in a cloud based computing environment using the network . In some implementations a portion of a particular portal application may be a web service associated with the portal application that is remotely called while another portion of the portal application may be an interface object or agent bundled for processing at a remote client . Moreover any or all of a particular portal application may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the particular portal application may be executed or accessed by a user working directly at the EPS as well as remotely at a corresponding client . In some implementations the EPS or any suitable component of EPS or the EDCS can execute the portal application .

The content governance framework CGF provides core functionality for the provision of enterprise collaboration content governance. The CGF includes a rule engine action engine and administration engine . In some implementations API and or service layer can be integrated into the CGF .

The rule engine is an application service that analyzes an application of a particular pattern s against content requested to be uploaded to the EPS . For example a user indicates with a client a desire in portal application to upload a document content creation to a collaboration page associated with the portal application . The rule engine receives context information from the portal application regarding the upload request. Context information can include for example requesting user the context to create here a document collaboration page of request members of the collaboration group and the like. The rule engine determines based on the rule that a document upload request context as relayed from the portal application to the rule engine requires at least an application of 1 a document template 2 a role analysis of users associated with the collaboration page and 3 a verification of document classification. The rule engine analyzes the application of the appropriate relevant pattern s against the content in view of the request context and generates an analysis rule result to transmit to the action engine .

In some instances the application of rule can be further based on a user s role in addition to the context. For example the rule engine could determine that the document requested to be uploaded meets document template format requirements and is not considered to contain classified restricted content but that one particular user in the collaboration group is associated with a user role that is not allowed to view the particular document the requested document to upload could be a financial report and the particular user does not possess an EP user finance role . In this example the rule engine could generate a BLOCK rule result to transmit to the action engine or a MORE INFORMATION NEEDED rule result in case the particular user is authorized to view the financial report. In this example the content creator could receive an approval dialog to enter in a user ID password to authorize the particular user to view the financial report. In another example the particular user could simply want to make a comment on a document that had been uploaded to the collaboration page. Here user role may not be considered at all in the context of commenting on a previously updated document but the rule may require that a dictionary scan of the comment text be performed simply because of the context of posting a comment. As a result of the possible application of role context to rule analysis a company CEO member of a finance group could be permitted to publish a particular financial report but other user roles could not.

In another example a rule such as if isFinancialDocument document AND NOT isAssignedToRole user FINANCE OFFICER ROLE then BLOCK can be created to be evaluated by the rule engine . In case of a financial document upload determined by the isFinancialDocument rule which is another rule that checks the document using one or more patterns the uploading EP user s roles are checked to verify they are assigned to the FINANCE OFFICER ROLE role. If they are not assigned to the specified role the result will be a BLOCK action. The action engine is responsible for carrying out the actions such as returning the error response to the portal application sending email notifications etc.

In some implementations the rule engine can allow and or provide functionality to create rule sets which are composite rules composed from other rules using logical. An example of a rule set could include RULE 1 AND RULE 2 OR RULE 3 or any other appropriate logical combination of rules using logical and or other operators.

In some implementations the rule engine rule and or pattern can restrict content creation requests to particular geographic locations a particular time day week month etc. to a particular device s or other restrictive parameters. For example users requesting to upload content to the EPS from a country website deemed a security risk due to malware etc. can be blocked.

The action engine is an application service that receives the above described rule result from the rule engine and determines an action that the portal application is to take based on the rule result. In some implementations the rule engine relays context information to the action engine . The action engine accesses the action to determine what actions should be taken by the portal application with respect to the user upload request. For example if the action engine determines based on the received rule result that there is no issue to prevent the upload of the document to the EPS the action engine among other things notifies the portal application with an action result to continue with the upload of the document to the collaboration page for example with a PROCEED action result. If however there is a negative issue identified by the rule engine the action engine may determine that the appropriate action is to block the user requested document upload to the collaboration page and instructs the portal application accordingly with a BLOCK action result.

In some implementations the action engine can also send messages emails SMS MMS and equivalent text messages make telephone calls raise alerts alarms and or other appropriate notification actions as a result of the received rule result and or action result. For example if a received rule result indicates an ALERT the action engine analysis of action may indicate that a particular person group should be immediately notified. A possible scenario could include the attempted upload of a classified military government document to a public collaboration page. In this case the action engine could alert appropriate personnel of the attempted security breach so immediate action could be taken. Another example could be that the CGF has flagged a particular employee for attempting to upload pornographic material to a company portal a predetermined number of times. The action engine may in addition to generating a BLOCK action result to transmit to the portal application block the particular employee s account to the EPS and send an email to both the employee and the particular employee s supervisor of the reason for the account block.

The administration engine is any application service that used to administer configure rule pattern and or action . In some implementations the administration engine can generate a GUI for display on the client . In other implementations an administrative GUI can be separately executed on the client to interface with the administrative engine . The GUI provides an easy to use visual graphical tool for administration configuration of the CFG . In typical implementations the administration engine receives configuration requests from the client but in other implementations configuration requests could be transmitted from any appropriate component of the EDCS or from a source external to the EDCS . In some implementations the configuration requests are JAVA calls to API to register extensions. For example an EPS developer architect may wish to add an additional rule that a request to post a comment using the portal application requires a dictionary scan against a different dictionary than the default dictionary. In this instance the developer architect would generate an API call to the CGF administrative engine to update the persistent rule and pattern to reflect the new dictionary. The configuration request could include a new rule ID JAVA object pattern to invoke when the rule is applied etc.

In typical implementations administrative functions are reserved for portal administrators information technology portal developers architects users of particular roles and other appropriate personnel. In some implementations the administrative engine can refuse administrative configuration actions unless the actions originate from a particular geographic location during a particular time day week month etc. to a particular device s or to other restrictive parameter.

The client e.g. may be any computing device operable to connect to or communicate with at least the EPS using the network . In general the client comprises an electronic computing device operable to receive transmit process and store any appropriate data associated with the EDCS for example the portal application GUIs utilities tools and the like. More particularly among other things the client can generate content creation requests and content governance administrative requests with respect to the EPS . The client typically includes a processor a client application a memory and or an interface .

The client application is any type of application that allows the client to navigate to from request view create edit delete administer and or manipulate content associated with the EPS . In some implementations the client application can be and or include a web browser. In some implementations the client application can use parameters metadata and other information received at launch to access a particular set of data from the EPS and or other components of the EDCS . Once a particular client application is launched a user may interactively process a task event or other information associated with the EPS and or other components of the EDCS . For example the client application can generate and transmit a content creation request and or a CGF administrative request to the EPS . Further although illustrated as a single client application the client application may be implemented as multiple client applications in the client .

The interface is used by the client for communicating with other computing systems in a distributed computing system environment including within the EDCS using network . For example the client uses the interface to communicate with the EPS as well as other systems not illustrated that can be communicably coupled to the network . The interface may be consistent with the above described interface of the EPS or other interfaces within the EDCS . The processor may be consistent with the above described processor of the EPS or other processors within the EDCS . Specifically the processor executes instructions and manipulates data to perform the operations of the client including the functionality required to send requests to the EPS and to receive and process responses from the EPS .

The memory typically stores objects and or data associated with the purposes of the client but may also be consistent with the above described memory of the EPS or other memories within the EDCS and be used to store data similar to that stored in the other memories of the EDCS for purposes such as backup caching and the like.

Further the illustrated client includes a GUI that interfaces with at least a portion of the EDCS for any suitable purpose. For example the GUI may be used to view data associated with the client the EPS or any other component of the EDCS . In particular In some implementations the client application may act as a GUI interface for the portal application administrative engine of the CGF other components of EPS and or other components of the EDCS whether illustrated or not . In the case of generating administrative requests the GUI can be used in some implementations to format save edit and or transmit API calls to the EPS in order to extend CGF functionality and or persistencies. For example an EPS user can generate JAVA or other suitable computing language API calls to the CGF to extend persistent instances of the rule pattern and or action . In some instances the client can also be used to edit update the portal application data .

There may be any number of clients associated with or external to the EDCS . For example while the illustrated EDCS includes one client communicably coupled to the EPS using network alternative implementations of the EDCS may include any number of clients suitable to the purposes of the EDCS . Additionally there may also be one or more additional clients external to the illustrated portion of the EDCS that are capable of interacting with the EDCS using the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

The illustrated client example configurations illustrated as is intended to encompass any computing device such as a desktop computer laptop notebook computer wireless data port smart phone personal data assistant PDA tablet computing device one or more processors within these devices or any other suitable processing device. For example the client may comprise a computer that includes an input device such as a keypad touch screen or other device that can accept user information and an output device that conveys information associated with the operation of the EPS or the client itself including digital data visual and or audio information or a GUI as shown with respect to the client .

At a portal application receives a content creation request. Typically the content creation request is received from a client interfacing with the portal application. From method proceeds to .

At the portal application calls a content governance framework CGF to validate the received content creation request. In some implementations the portal application passes the content creation request content to be created as well as context information associate with the content creation request to the CGF. For example the portal application could pass the content creation request the content creation user an EP page the content request originated from a list of users allowed to access the origination page for a collaboration page and the like. From method proceeds to .

At a rule engine compares a persistent rule s and pattern s to the content to be created in light of the supplied context. The rule engine generates a rule result to transmit to an action engine. From method proceeds to .

At the action engine receives the rule result context and applies the rule result context against a persistent action s to determine associated action s to be performed. From method proceeds to .

At the action engine performs determined associated actions. For example in addition to the need to transmit an action result to the portal application the action engine could determine that an email should be sent an associated action to an employee s supervisor and the employee based on the content creation request. From method proceeds to .

At the action engine transmits an action result to the portal application. In some implementations an action result may not be transmitted to the portal application. For example the portal application can proceed with the content creation after a set time period or from message signal received directly from the employee s supervisor or dedicated person group approving the content creation etc. From method proceeds to .

At the portal application performs an application action consistent with the received action result. In some implementations the action result can require additional data input from the content creator e.g. an ID password or from another user e.g. additional approval from a supervisor etc. . In these instances a GUI dialog or other applicable data input method can be presented to the content creator supervisor etc. requesting the additional data to allow the portal application to proceed with the application action e.g. content creation . After method stops.

In some alternate implementations the rule engine action engine can actually terminate modify the content creation request. For example the rule engine action engine could cancel modify a database operation issued by the portal application at the request of a user. In these instances the rule engine action must take into account the proper context associated with the content creation request and engage in a more active role in control of the content request instead of depending on the portal application to follow an indication returned to the portal application in an action result. In these instances the rule engine action engine cleans up any low level operations memory etc. necessary following the termination modification of a content creation request. The rule engine action engine can also then notify the portal application as well as appropriate individuals of the actions taken.

In some alternate implementations rules can be applied in an HTTP layer. In certain instances HTTP requests to the EP are intercepted requests containing relevant content e.g. POST PUT requests with specific MIME types text plain application msword etc. are identified and the CGF invoked to analyze the request data.

Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry in tangibly embodied computer software or firmware in computer hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on a tangible non transitory computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine readable storage device a machine readable storage substrate a random or serial access memory device or a combination of one or more of them.

The term data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can also be or further include special purpose logic circuitry e.g. a central processing unit CPU a FPGA field programmable gate array or an ASIC application specific integrated circuit . In some implementations the data processing apparatus and or special purpose logic circuitry may be hardware based and or software based. The apparatus can optionally include code that creates an execution environment for computer programs e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. The present disclosure contemplates the use of data processing apparatuses with or without conventional operating systems for example LINUX UNIX WINDFLOWS MAC OS ANDROID IOS or any other suitable conventional operating system.

A computer program which may also be referred to or described as a program software a software application a module a software module a script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. While portions of the programs illustrated in the various figures are shown as individual modules that implement the various features and functionality through various objects methods or other processes the programs may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. a CPU a FPGA or an ASIC.

Computers suitable for the execution of a computer program can be based on general or special purpose microprocessors both or any other kind of CPU. Generally a CPU will receive instructions and data from a read only memory ROM or a random access memory RAM or both. The essential elements of a computer are a CPU for performing or executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a global positioning system GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few.

Computer readable media transitory or non transitory as appropriate suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM DVD R DVD RAM and DVD ROM disks. The memory may store various objects or data including caches classes frameworks applications backup data jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto. Additionally the memory may include any other appropriate data such as logs policies security or access data reporting files as well as others. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube LCD liquid crystal display or plasma monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse trackball or trackpad by which the user can provide input to the computer. Input may also be provided to the computer using a touchscreen such as a tablet computer surface with pressure sensitivity a multi touch screen using capacitive or electric sensing or other type of touchscreen. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore a GUI may represent any graphical user interface including but not limited to a web browser a touch screen or a command line interface CLI that processes information and efficiently presents the information results to the user. In general a GUI may include a plurality of user interface UI elements some or all associated with a web browser such as interactive fields pull down lists and buttons operable by the business suite user. These and other UI elements may be related to or represent the functions of the web browser.

Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of wireline and or wireless digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN a radio access network RAN a metropolitan area network MAN a wide area network WAN Worldwide Interoperability for Microwave Access WIMAX a wireless local area network WLAN using for example 802.11 a b g n and or 802.20 all or a portion of the Internet and or any other communication system or systems at one or more locations. The network may communicate with for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and or other suitable information between network addresses.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

In some implementations any or all of the components of the computing system both hardware and or software may interface with each other and or the interface using an application programming interface API and or a service layer. The API may include specifications for routines data structures and object classes. The API may be either computer language independent or dependent and refer to a complete interface a single function or even a set of APIs. The service layer provides software services to the computing system. The functionality of the various components of the computing system may be accessible for all service consumers via this service layer. Software services provide reusable defined business functionalities through a defined interface. For example the interface may be software written in JAVA C or other suitable language providing data in extensible markup language XML format or other suitable format. The API and or service layer may be an integral and or a stand alone component in relation to other components of the computing system. Moreover any or all parts of the service layer may be implemented as child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed but rather as descriptions of features that may be specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation and or integration of various system modules and components in the implementations described above should not be understood as requiring such separation and or integration in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular implementations of the subject matter have been described. Other implementations alterations and permutations of the described implementations are within the scope of the following claims as will be apparent to those skilled in the art. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

Accordingly the above description of example implementations does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

