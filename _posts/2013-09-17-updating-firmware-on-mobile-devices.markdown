---

title: Updating firmware on mobile devices
abstract: Updating firmware on mobile devices can be performed during device management (DM) sessions between mobile devices and one or more servers. A server can provide data to at least one node of a firmware update management object (FUMO) stored at a mobile device. The data can indicate a plurality of different update file locations accessible via a network. The mobile device can download a plurality of update files from the plurality of different update file locations via the network in response to receiving the command. From a set of update files, each mobile device can thus obtain its particular firmware update as a subset of the update files as indicated by its FUMO. Metadata may be provided to the FUMO to express one or more conditions that the mobile device must meet in order to download respective update files.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069641&OS=09069641&RS=09069641
owner: BlackBerry Limited
number: 09069641
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20130917
---
This disclosure relates to wireless communications more specifically to updating firmware of mobile devices.

Updating firmware of mobile devices can be performed wirelessly over the air. The Open Mobile Alliance OMA has developed techniques for device management DM including techniques for updating firmware. A typical firmware update may require dozens hundreds thousands of files or more.

Some solutions wrap all necessary update files into a single file to be downloaded by a particular mobile device. However the various firmware hardware permutations of a group of deployed mobile devices can be of high number and of highly variability. This can result in unique update files being required for each unique permutation. Such update files are known to be generated ahead of time or generated on the fly as needed. Both of these methods can be inefficient wasteful and costly particularly if only a subset of the permutations is actually in use. Generating a large number of unique update files ahead of time can consume a large amount of storage space. Generating unique update files on the fly can result in network bottlenecks when mobile device updates are performed over a short period of time e.g. during a morning commute as computing power and network resources to handle such network traffic peaks may not be available.

Thus known techniques for updating mobile device firmware suffer from a number of disadvantages including inefficient use of storage space high network demands and costly implementation.

Updating firmware on a mobile device can be performed wirelessly over a network during a device management session established between the mobile device and one or more servers. During the device management session the server can provide data to a firmware update management object FUMO maintained at the mobile device. Such data can indicate a plurality of different update file locations that are accessible to the mobile device for download via the network. By using a plurality of different update file locations specified in the FUMO firmware updates can be performed more efficiently and in a scalable manner. For instance each mobile device can fetch the particular files specified in its FUMO to reduce or eliminate the need to generate a single unique update file for each possible update permutation.

Single unique update files are known to be generated en masse and in advance for each update permutation or generated on the fly as needed. In the former scenario a large amount of storage space is consumed in storing a large number of pre generated unique files which can be wasteful. In the latter scenario updates can be delayed during times of high demand such as when a multitude of mobile devices require updating and it may be impractical to keep available the peak processing power and network capacity required to accommodate such spikes. In addition caching at a content distribution network CDN a multitude of unique update files may not be able to be performed effectively given that the unique update files ultimately need to be obtained from the servers at which the unique update files are generated or published. As will be understood from the below a FUMO that specifies a plurality of different update file locations can be implemented in a manner compliant with the relevant Open Mobile Alliance OMA device management DM standard s while improving update performance and solving problems associated with single unique update files whether pre generated or generated on demand.

A plurality of servers represented by server is connected to the network and provides services content and other functionality to a plurality of mobile devices . Such functionality is widely known and includes such things as email instant messaging website hosting and viewing data hosting image sharing voice over Internet protocol VOIP services electronic publishing document storage and the like.

The mobile device is connected to the network via one or more types of wireless service such as cellular telephone e.g. 4G 3G 2G 1G etc. Wi Fi wireless local area network WLAN Bluetooth and combinations of such. Such services may be referred to as bearers and the mobile device may switch between bearers as it changes geographic positions. Suitable infrastructure such as cellular radio towers wireless access points cellular service provider infrastructure servers and routers switches is provided to facilitate communication between mobile devices and the network . The preceding is merely illustrative and for sake of clarity not all components of all examples are described.

The mobile devices may be various types of smartphones cellular telephones tablet computers vehicle in dash computers and similar electronic communication devices that spend a significant amount of time operating from battery power and communicating wirelessly. The mobile devices operate using a combination of hardware and firmware with the term firmware as used herein applying to software as well. Such firmware can include a kernel an operating system applications e.g. a phone application messaging applications a calendar application etc. application programming interfaces APIs libraries and other resources and similar programmatic elements that provide updatable functionality to the mobile device .

Update servers are connected to the network and configured to provide firmware updates to the mobile devices . Such updates may be developed and generated by the manufacturer vendor or deployer of the mobile devices and made accessible to the update servers for distribution to the mobile devices . The update servers may be configured to operate according to an OMA DM standard or methodology. The update servers may be known as DM servers and may be configured to provide other DM services to the mobile devices or may be configured to only provide firmware updates. The update servers may be configured to manage firmware updates without themselves storing update files or alternatively one or more of the update servers may store update files.

Servers forming a content distribution network may be connected to the network and configured to receive update files from the update servers . The CDN servers are accessible to the mobile devices via the network so that the mobile devices can download update files stored on the CDN servers .

As shown in each of the mobile devices is configured to store a firmware update management object. The FUMO may be permanent or dynamic. There may be one or more FUMOs in a device management tree and these may be grouped or located in various ways such as under a common node. Further when complying with OMA only one update package or reference to an update package is associated with each FUMO. In this embodiment data is provided to at least one node of the FUMO that is not a package uniform resource locator URL node and such data indicates a plurality of different update file locations on the network . Update files stored at these locations constitute a firmware update along with any other update file identified by a package URL node of the FUMO if present.

A placeholder node of the FUMO acts as a placeholder for a firmware update package unique identifier. The placeholder node may be a permanent node that is pre created or created as needed. A package name node may be provided to specify the name of the firmware update package. A package version node may be provided to specify version information for the firmware update package.

The FUMO may include an update node and an associated package data node where the update node is a target of an OMA DM Exec command that initiates an update using a binary firmware update package that is provided directly via the package data node .

The FUMO may include a download node and an associated package URL node . The download node is a target of an OMA DM Exec command that initiates download of a single file update package indicated at the package URL node which may be specified by an OMA DM Replace command. In effect the package URL node identifies a single firmware update file that is available to the mobile device via the network .

The FUMO may include a download and update node and an associated package URL node . The download and update node is a target of an OMA DM Exec command that initiates download and installation of a single file update package indicated at the package URL node which may be specified by an OMA DM Replace command. In effect the package URL node identifies a single firmware update file that is available to the mobile device via the network .

Further nodes may also be provided such as a state node that contains a value indicating the current state of the mobile device with respect to a particular firmware update and an extension node that supports vendor specific extensions.

In this embodiment the FUMO further includes one or more custom nodes that can for example be nodes that are unspecified by an OMA standard. The custom node can have one or more child nodes that are update file location nodes that indicate one or more update file locations. The update file location nodes are different from the package URL nodes . The update file location nodes can indicate URLs or other location identifiers for update files available via the network . The update file location nodes can respond to OMA DM Add or Replace commands so that the URLs can be specified by an update server . An update file location node may further indicate a name unique identifier e.g. a hash or property such as byte size for the associated update file. In some embodiments a node may provide a list of update file locations.

The FUMO may further include one or more child nodes of the custom node to indicate metadata that expresses at least one condition that the mobile device must meet in order to download one or more of the plurality of update files. Conditions can specify any combination of one or more of a time at which to download one or more of the plurality of update files indicated by nodes a type of wireless service over which to download one or more of the plurality of update files a maximum amount of data to download over a specified type of wireless service an order in which to download the plurality of update files and an operating condition of a vehicle in which the mobile device is disposed. Additional conditions can also be used. Conditions can be expressed in any suitable format such as encoded text strings Extensible Markup Language XML JavaScript Object Notation JSON and the like. Metadata may also include instructions parameters configurations text to display at the mobile device or similar and is not limited to conditions.

A condition for a time at which to download one or more of the plurality of update files can be expressed as a time of day e.g. HH MM SS at which to begin downloading update files or a range of times of day during which to download update files. A time condition may be linked to individual update files by name or unique identifier. Alternatively a time condition may specify a size range for update files that are to be governed by the condition. For example a time condition may limit downloading of files larger than 20 MB to between the hours of 2 AM and 6 AM local time as tracked by the mobile device . This can advantageously temporally distribute network loads during large updates to a multitude of mobile devices .

A condition for a type of wireless service over which to download update files can indicate one or more of the wireless services provisioned on the mobile device . Such a bearer condition may be linked to individual update files by name or unique identifier. Alternatively a bearer condition may specify a size range for update files that are to be controlled by the condition. For example a bearer condition may limit downloading files larger than 10 MB to Wi Fi service so as to reduce load on cellular services and potentially reduce cost to the user of the mobile device . The bearer condition can help distribute network loads which can particularly be advantageous during large updates to a multitude of mobile devices .

A condition for a maximum amount of data to download over a specified type of wireless service can indicate one or more of the wireless services provisioned on the mobile device and a respective maximum data amount. For example such a maximum data condition may limit a total amount of data to download for a particular update to be 100 MB over 4G. This can reduce total load on cellular services and may potentially reduce cost to the user of the mobile device .

A condition for an order in which to download update files can indicate update files by name or unique identifier. Such an order condition may include an ordered list of unique identifiers and the mobile device can be configured to follow such condition by proceeding to download the indicated files according to the ordered list. This can improve efficiency when updating different components of firmware as some update files may be required to be installed before other update files. Further update files that may be more important e.g. security patches and can be prioritized.

A condition for an operating condition of a vehicle in which the mobile device is disposed can indicate operating conditions such as vehicle speed vehicle state e.g. engine on engine off plugged in to external electrical power etc. vehicle battery voltage vehicle fuel level storage space available on the vehicle e.g. when the mobile device is an in dash computer or augments such a computer and similar. Such operating conditions can specify update files to download by name unique identifier size or other property so as to ensure that vehicle resources are sufficient and that downloads can be completed efficiently. For example a vehicle operating condition can specify that large update files are only to be downloaded a slow vehicle speeds so as to reduce increased network overhead due to frequent cellular station handoffs that may occur at high vehicle speeds. In another example a condition may stipulate that large files are only to be downloaded when the engine is on or when the vehicle battery voltage is greater than a threshold amount so as to reduce excessive drain on the vehicle battery.

Other conditions can include times at which to communicate FUMO status updates to the update server .

It should be noted that the number of update files i.e. 1 N specified by the nodes need not be same as the number of conditions i.e. 1 M specified by the metadata nodes . For example some update files may have not have conditions some update files may have multiple conditions some or all update files may share the same condition s or conditions may not be present.

In this embodiment during an update the update server can perform one or more OMA DM Add and or Replace commands on the FUMO to specify locations for any of the package URL nodes and any of the update file location nodes as well as to specify metadata defining any conditions that are to be followed during the update. The mobile device then downloads the update file identified by any package URL node and further downloads any update files identified by the update file location nodes . This allows multiple different update file locations to be indicated by the same FUMO and thus multiple different update files contributing to the firmware update to be downloaded from different sources such as several of the update servers and the CDN servers . Thus when updating a plurality of mobile devices which may have many different update paths and requirements a set of component update files can be provided at different locations and the FUMO for each mobile device can indicate which of these update files to download to complete the particular update for the respective mobile device and further indicate any conditions as to how such files must be downloaded.

Nodes may also contain mixed data such that a particular node includes both an update file location and metadata expressing a condition for the file stored at that location.

With reference to a file specified by a package URL node may be a single update file . Alternatively as shown in a file specified by a package URL node may be a wrapper file that groups several different update files . The files are distinct from the files specified by the custom update file location nodes of the FUMO. Conditions may be applied to one or more of the files .

The FUMO may include a package URL node that indicates a single manifest update file at a location available to the mobile device via the network . In this embodiment the single file which may be termed a recipe file is configured to contain data indicating a plurality of different update file locations and further may be configured to contain metadata that indicates any conditions that the mobile device must follow when downloading the update files. The single manifest update file may identify all the update files required for a particular firmware update. In this embodiment the single manifest update file does not contain binary update data.

In other embodiments the single manifest update file can contain one or more binary chunks of data in line with any other content of the file . Such binary data may be encoded as a series of hexadecimal octets between suitable delimiters e.g. XML tags that denote the start and end of binary data. The binary data may be used to store one or more small executable programs that are required prior to downloading the bulk of an update. For example a new update client e.g. DM clients and or a patch to an existing update client may be provided as binary data in the file . This may be advantageous when the update includes a new metadata expression or value that requires interpretation under new logic. In another example binary data transmitted in the file may include one or more authentication signatures for the file or for another file or document forming part of the update.

As shown in the single manifest update file includes a plurality of different update file locations of a plurality of different update files which may be stored at several of the update servers and the CDN servers or are otherwise available via the network .

The single manifest update file can further include metadata indicating conditions for downloading one or more of the plurality of different update files. The conditions may be as discussed elsewhere herein e.g. time of day bearer etc. .

The embodiment depicted in can use additional custom nodes such as any of nodes to indicate additional update file locations and metadata.

After updated firmware has been developed and released at the update servers can precache a plurality of different update files at the CDN servers or other servers. In addition or alternatively one or more of the update servers can host one or more of the update files. As discussed elsewhere herein different subsets of the plurality of different update files form particular updates for particular mobile devices so that a particular mobile device may need only to download a particular subset of the plurality of different update files.

A device management session is then initiated between an update server and the mobile device at . The DM session can be initiated according to an OMA DM standard. The server may trigger the device to initiate the session by sending an information request or notification which may include a short message service SMS message to the mobile device . The mobile device can then initiate the DM session by responding to the server with a DM request that includes relevant information for firmware update such as device type hardware version and firmware version. Another SMS message may be sent from the update server to the mobile device in response and the DM session is commenced.

After the DM session is established the update server can provide at data to at least one node of a suitable FUMO stored at the mobile device . The data can indicate locations of different update files that were precached at . The data may be provided to the FUMO by way of custom nodes such as nodes discussed elsewhere herein in addition to any package URL node or by pointing a package URL node to a single manifest update file that contains a plurality of different update file locations . Providing such data to the FUMO can be performed by way of OMA DM Add and or Replace commands.

The specific update file location data provided at by the server can be dependent on the device response . That is the server can specifically configure the update for the particular device type version etc of the mobile device providing the response . It is noteworthy that each specifically configured update reflected by different sets of update file location data provided at to different mobile devices relies on the same set of update files which were precached at . Thus different firmware updates for variously configured and versioned devices reference the same subset of the update files.

The update server can further provide at metadata to at least one node of the FUMO. Such metadata can indicate conditions for downloading and installing update files as discussed elsewhere herein. The metadata may be provided to the FUMO by way of custom nodes such as nodes discussed elsewhere herein or by including the metadata in a single manifest update file . Providing metadata to the FUMO can be performed by way of OMA DM Add and or Replace commands.

After the FUMO has been configured with file location data and any metadata a command at can be sent from the server to the mobile device to begin downloading of update files. This can be accomplished by the update server performing an OMA DM Exec command targeting a suitable node of the FUMO such as the download node or download and update node . Downloading of any update files may be governed by conditions expressed by metadata . Hence the mobile device can be configured to evaluate such conditions in response to the OMA DM Exec command or in response to completion of download of a single manifest update file that contains the metadata as the case may be.

The mobile device evaluates any conditions expressed by the metadata at to determine whether the mobile device or its environment e.g. a vehicle hosting the mobile device meets or violates the conditions represented by the metadata. The mobile device can be configured to repeat evaluation of the conditions until the update is complete. For example if a condition stipulates that a particular update file can only be downloaded over a Wi Fi or 4G bearer then the mobile device repeatedly evaluates whether or not such a bearer is available until the particular update file has been successfully downloaded. The type of repetition for evaluation of conditions can be any suitable type such as periodic periodic with back off trigger based e.g. a listener detects when bearers change and in response evaluates conditions and similar.

As the conditions permit the mobile device requests at update files from the various different update file locations indicated by the FUMO. As discussed elsewhere herein such update files may be indicated by a package URL node by the contents of a single manifest update file which may be indicated by a package URL node by custom nodes of the FUMO of by some combination of these. Update files are then downloaded at from the different hosting servers .

Lastly the mobile device can effect the update by using the downloaded update files to update its firmware at . This may be performed after all the indicated update files are downloaded or may be performed while update files are downloaded. In addition during the update process the mobile device may send FUMO status updates to the server .

The processor also interfaces with further device subsystems such as auxiliary input output I O data port display keyboard speaker microphone random access memory RAM other communications facilities which may include for example a short range communications subsystem and any other device subsystems generally labeled as reference numeral . To control access as well as supply the initial DM configuration a Subscriber Identity Module SIM or Removable user Identity Module RUIM interface is also provided in communication with the processor . In one implementation SIM RUIM interface is operable with a SIM RUIM card having a number of key configurations and other information such as identification DM configuration and subscriber related data.

Operating system firmware and transport stack firmware may be stored in a non transitory computer readable medium i.e. non volatile storage which may be implemented using Flash memory or another appropriate memory. In some embodiments computer readable medium may be segregated into different areas e.g. storage area for application programs which may include operating system firmware and transport stack as well as data storage regions such as device state messages and contacts other application data and other data storage areas generally labeled as reference numeral . Additionally a DM client module is provided and may contain executable code for configuring the processor to perform operations in accordance with OMA DM protocols as well as other protocols which may comprise standard protocols and or custom unspecified protocols according to the teachings discussed herein. The DM client module may store one or more FUMOs and include suitable functionality associated with FUMO operations.

The system can include a wireless module a user device and one or more other devices which may be interconnected by way of a bus for example.

The wireless module is configured to communicate with a network e.g. network of via a radio tower wireless access point or similar. The wireless module includes a transmitter and receiver for this purpose. In addition the wireless module can include a processor for controlling such communication memory for storing programs and data related to operation of the wireless module and an input output I O interface for communicating with the bus . In operation the wireless module communicates data between the devices and the network . The memory may further store a DM client as discussed elsewhere herein for updating firmware e.g. programs and or data of the wireless module .

The user device is configured to provide user based functions to the system such as information input and output applications media recording or playback and similar. The user device may be similar to the mobile device described elsewhere herein and the description of the device can be referenced for further features. The user device may include a user interface which can include a display touchscreen buttons speaker microphone and the like to facilitate user interaction. In addition the user device can include a processor for controlling the user interface and other components of the user device memory for storing programs and data related to operation of the user device and an I O interface for communicating with the bus . The memory can further store a DM client for implementing the techniques described herein to update the firmware e.g. programs and or data of the user device .

Other devices may include devices such as sensors data stores input devices displays touchscreens audio devices computers vehicle control systems computers and the like. A device may include a DM client as discussed elsewhere herein for updating its firmware.

The components of the system may be removable from the system . For example the user device may be a smartphone or tablet computer that is removably connectable to a vehicle dashboard. In such an example the bus may be a controller area network CAN bus or similar. Other examples will also be apparent to those skilled in the art.

It is advantageous that the techniques described herein allow a FUMO to specify multiple different locations of multiple different update files that contribute to a firmware update for a mobile device so that a multitude of permutations of single update files need not be pre generated or generated on the fly. A particular mobile device merely has to fetch the component update files indicated by its FUMO to effect its own particular update. Further the different files contributing to a firmware update can be distributed at different update servers or on a content distribution network so as to distribute network loads. In addition conditions for downloading the different update files can be specified in metadata of the FUMO to further distribute network loads and improve the efficiency of OMA updates. Moreover the techniques described herein may allow firmware updates to be linearly scalable and further can be implemented to comply with OMA FUMO standards.

Additional details for implementing the techniques described herein may be found in U.S. Pat. No. 8 307 095 which is incorporated herein by reference.

According to one aspect of the present disclosure a method of updating firmware on a mobile device includes initiating a device management session between a mobile device and one or more servers. The device management session occurs via a network having at least one wireless service with which the mobile device communicates. The method further includes the server providing data to at least one node of a firmware update management object stored at the mobile device. The data indicates a plurality of different update file locations accessible via the network. The method further includes sending a command from the server to the mobile device. The command targets a node of the firmware update management object. The method further includes the mobile device downloading a plurality of update files from the plurality of different update file locations via the network in response to receiving the command at the mobile device.

The method can further include the server providing metadata to the at least one node or at least one other node of the firmware update management object. The metadata expresses at least one condition that the mobile device must meet to download one or more of the plurality of update files.

The at least one condition can specify at least a time at which to download one or more of the plurality of update files.

The at least one condition can specify at least a type of wireless service over which to download one or more of the plurality of update files.

The at least one condition can specify a maximum amount of data to download over a specified type of wireless service.

The at least one condition can specify an operating condition of a vehicle in which the mobile device is disposed.

A package uniform resource locator node of the firmware update management object can identify a single update file and the at least one node indicating the plurality of different update file locations is not the package uniform resource locator node.

The at least one node can be a package uniform resource locator node of the firmware update management object and the package uniform resource locator node identifies a single manifest update file containing the data indicating the plurality of different update file locations.

The method can further include precaching the plurality of update files on a content distribution network.

The method can further include the mobile device updating the firmware with the plurality of update files.

According to another aspect of the present disclosure a system for updating firmware of mobile devices at least one server configured to establish device management sessions with the mobile devices via a network having at least one wireless service over which the mobile devices and the server communicate and provide data to nodes of firmware update management objects stored at the mobile devices. The data indicates a plurality of different update file locations accessible via the network. The server is further configured to send commands to the mobile devices and the commands are configured to cause the mobile devices to download pluralities of update files from the plurality of different update file locations via the network.

The server can be further configured to provide metadata to the nodes or other nodes of the firmware update management object the metadata expressing conditions that mobile devices must meet to download respective update files of the plurality of update files.

The conditions can specify one or more of times at which to download the respective update files types of wireless service over which to download the respective update files maximum amounts of data to download over specified types of wireless service orders in which to download the respective update files and operating conditions of vehicles in which the mobile devices are disposed.

Package uniform resource locator nodes of the firmware update management objects can identify single update files. The nodes indicating the plurality of different update file locations are not the package uniform resource locator nodes.

The nodes can be package uniform resource locator nodes of the firmware update management objects and the package uniform resource locator nodes identify respective single manifest update files containing respective data indicating the plurality of different update file locations.

The server can be further configured to precache the plurality of update files on a content distribution network.

According to another aspect of the present disclosure a mobile device includes a processor a communication module coupled to the processor and configured to communicate with a server over a network and at least one wireless service and memory coupled to the processor and storing a firmware update management object. The processor is configured to establish a device management session with the server and store data received from the server during the device management session in at least one node of the firmware update management object. The data indicates a plurality of different update file locations accessible via the network. The processor is further configured to receive a command from the server the command targeting a node of the firmware update management object. The processor is further configured to download a plurality of update files from the plurality of different update file locations via the network in response to receiving the command.

While the foregoing provides certain non limiting example embodiments it should be understood that combinations subsets and variations of the foregoing are contemplated. The monopoly sought is defined by the claims.

