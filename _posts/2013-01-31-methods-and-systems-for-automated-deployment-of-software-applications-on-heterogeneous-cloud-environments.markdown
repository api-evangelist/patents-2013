---

title: Methods and systems for automated deployment of software applications on heterogeneous cloud environments
abstract: A method and system of deploying at least one software application from at least one source platform to at least one target platform is provided. The method may include obtaining configuration data on interdependency between the at least one target platform and the at least one software application. The method may further include checking a readiness of the at least one source platform for initiating deployment of the at least one software application. The method may further include checking a readiness of the at least one target platform for initiating deployment of the at least one software application and performing a selective deployment of the at least one software application after the readiness check. The method may further include performing a post-deployment assessment of the selectively deployed at least one software application after the selective deployment, wherein the post-deployment assessment includes checking a status parameter of the selectively deployed at least one software application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08997088&OS=08997088&RS=08997088
owner: Wipro Limited
number: 08997088
owner_city: 
owner_country: IN
publication_date: 20130131
---
The present application claims priority under 35 U.S.C. 119 to Indian Patent Application No. 4599 CHE 2012 filed Nov. 2 2012 and entitled METHODS AND SYSTEMS FOR AUTOMATED DEPLOYMENT OF SOFTWARE APPLICATIONS ON HETEROGENEOUS CLOUD ENVIRONMENTS. The aforementioned application is incorporated herein by reference in its entirety.

This disclosure relates generally to cloud computing environment. More particularly exemplary embodiments of the present disclosure relate to systems and methods for deployment of applications onto multiple heterogeneous cloud environments.

Cloud computing is a network based computing method where shared resources such as software content application etc. may be provided to consumers as an on demand service. Cloud computing providers generally offer their services according to three models Software as a Service SaaS Platform as a Service PaaS and Infrastructure as a Service IaaS . In the PaaS model for example cloud providers deliver a computing platform typically including an operating system a programming language execution environment a database and a web server. Application developers can develop and run their software solutions on such a platform without the cost and complexity of buying and managing the underlying hardware and software layers.

In recent times many enterprise applications or other software applications are being migrated to cloud environments to be in line with the next generation business requirements. In this transition process many challenges are encountered while deploying software applications from non cloud environments to heterogeneous cloud environments such as PaaS environments. One of the challenges is the lack of standards in configuring different cloud environments. Also available deployment tools offer only limited support for heterogeneous cloud environments for deploying standalone applications onto cloud environments. Thus users who wish to deploy software applications to heterogeneous cloud environments may be forced towards adopting a manual deployment process. The manual deployment process may be prone to error inefficient and success or failure of the deployment may depend on the individual skill and knowledge of the person performing deployment. Accordingly there is a need for an improved deployment tool that can deploy software applications from non cloud environment to heterogeneous cloud environments such as PaaS environments.

Another issue that may not be addressed by existing deployment tools is the assessment of source and target platform readiness before starting actual deployment. The source platform refers to the platform from where software applications are deployed to the target platform in the target cloud environment and the target platform refers to the platform in the cloud environment where the applications are deployed. The assessment of source and target platform readiness may include assessing issues with interoperability compatibility between the source and target platforms enterprise application prior to deployment. Some of these interoperability and compatibility issues are dynamic in nature and may become further complex in case of simultaneous deployment of enterprise application onto heterogeneous PaaS environment. Another issue that may not be addressed by existing deployment tools is how to deal with partially compatible and or interoperable situations and make appropriate decisions that is suitable for the current business need.

Existing deployment tools may also be unable to handle deployment related issues like ensuring connectivity security availability controllability during simultaneous deployment of enterprise application in multiple heterogeneous PaaS environments. Issues involved in decision making on whether to resume rollback abort in the event of failure at different steps of the deployment process are significantly complex and the complexity increases drastically in case of simultaneous deployment in multiple heterogeneous PaaS environments. Existing tools may not be able to satisfactorily handle such complex issues during deployment.

Furthermore existing deployment tools may not be sufficiently adept at handling post deployment issues such as checking the successful deployment of the enterprise application after deployment by performing sanity check and dry run of the enterprise application. These checks and subsequent decision making may be tedious in nature due to large number of dependencies that may exist on the platform components configuration and application data. The task may become further complicated in case of simultaneous deployment on multiple heterogeneous PaaS environments.

Therefore there exists a need for systems and methods for improved simultaneous deployment of a portfolio of software applications developed in a non cloud environment onto multiple heterogeneous PaaS cloud environments.

In one aspect the present disclosure is directed to a method of deploying at least one software application from at least one source platform to at least one target platform. The method may include obtaining configuration data on interdependency between the at least one target platform and the at least one software application. The method may further include checking a readiness of the at least one source platform for initiating deployment of the at least one software application. The method may further include checking a readiness of the at least one target platform for initiating deployment of the at least one software application and performing a selective deployment of the at least one software application after the readiness check. The method may further include performing a post deployment assessment of the selectively deployed at least one software application after the selective deployment wherein the post deployment assessment includes checking a status parameter of the selectively deployed at least one software application.

In another aspect the present disclosure is directed to a method of deploying a plurality of software applications to one or more remote environments. The method may include determining whether resources required for simultaneous deployment of the plurality of software applications are available and selectively deploying the plurality of software applications on the one or more remote environments based on the determination. Further the determining may include checking for interdependency between the plurality of software applications.

In yet another aspect the present disclosure is directed to an interconnected software deployment system. The system may include at least one source platform for obtaining at least one software application. The system may further include at least one target platform in at least one cloud environment the at least one software application to be deployed on the at least one target platform. The system may further include a software deployment tool including an integration module a deployer module and a monitoring module. The integration module may be configured to communicate with the at least one source platform and the at least one target platform. The deployer module may be configured to implement a deployment process through the integration module. The deployment process may include obtaining configuration data on interdependency between the at least one target platform and the at least one software application checking readiness of the source platform for initiating deployment of the at least one software application and checking readiness of the target platform for initiating deployment of the at least one software application. The deployment process may further include performing a selective deployment of the at least one software application after the readiness check and performing a post deployment assessment of the selectively deployed at least one software application after the deployment wherein the post deployment assessment includes checking a status parameter of the selectively deployed at least one software application. The monitoring module may be configured to monitor the at least one source platform the at least one target platform an application status of the at least one software application on the at least one target platform and the deployment process implemented by the deployer module.

In yet another aspect the present disclosure may be directed to a software deployment system comprising a hardware processor and a memory configured to store instructions executable by the hardware processor. The hardware processor may be configured by the instructions to determine whether resources required for simultaneous deployment of the plurality of software applications are available and selectively deploy the plurality of software applications on the one or more remote environments based on the determination. The determining may include checking for interdependency between the plurality of software applications.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the disclosure as claimed.

Now exemplary embodiments of the present disclosure will be described with reference to the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

The source platforms A N source platforms may exchange data and communicate with another network in addition to the software deployment tool . As used here source platform may refer to a single source platform or multiple source platforms. Examples of source platforms include a personal computer a server computer a mobile phone and so forth. The source platforms may have source application resources such as files scripts or configuration data required for deployment of a software application onto the target platforms A N. The source application resources may be available within an appropriate folder structure along with dependent resources and each source platform may be associated with a single application or a group of applications.

Each source platform may also include an application programming interface API where a user can develop software applications. API s may be available for developing in the Java programming language.

Each cloud environment may include one or more target platforms A N collectively target platforms . The target platforms A N may be capable of exchanging data with software deployment tool and each other. Each target platform may include the required infrastructure such as database application server VM etc. required for an application to run on the target platform . Each target platform may be accessible to entities with appropriate access credentials. Based on the specified preference as provided by for example an authorized person such as a deployment administrator the target platforms could be classified as Critical or Optional.

Software applications may be developed from the source platforms to on one or more of the target platforms . The source platforms are typically part of a non cloud based environment but could also be part of a cloud based environment.

The software deployment tool may include a general purpose computer having a central processor unit CPU and memory storage devices that store data and various programs such as an operating system and one or more application programs. Other examples of the software deployment tool may include a workstation a server a special purpose device or component a broadcast system other equipment or some combination thereof capable of responding to and executing instructions in a defined manner. The software deployment tool also may include an input output I O device e.g. video and audio input and conversion capability and peripheral equipment such as a communications card or device e.g. a modem or a network adapter for exchanging data with the source platforms and target platforms .

Briefly during the readiness and configuration phase the software deployment tool may evaluate compatibility of the developed application the application to be deployed from the source platforms on the target platform interoperability between the source target platforms etc. Exemplarily during this phase the software deployment tool may gather configuration data for use in deployment of the developed application on the target platforms may check for interdependency between the target platforms and between the developed applications etc. Further during this phase the software deployment tool may check that resources required for the successful deployment of the developed applications on the target platform are available.

During the controlled deployment stage the software deployment tool may perform a controlled deployment of the developed application on to the target platform. In this phase the software deployment tool may attempt to deploy the developed applications on to the target platform and continually assess the deployment for any problems. If any problems are encountered the software deployment tool may attempt redeployment or attempt to perform a selective deployment of a subset of the developed applications based on certain parameters e.g. criticality of target platforms interdependency between software applications etc. .

During the post deployment assessment stage the software deployment tool may check to see if the deployment was successful e.g. by checking if the deployed applications start successfully on the target platforms where they are deployed and if not whether the deployed applications should be rolled back. In this stage the software deployment tool may also decide the extent of rollback if rollback becomes necessary. For example the software deployment may decide to only rollback certain applications or rollback deployment on only certain target platforms.

While briefly described above exemplary descriptions of each of these phases e.g. readiness and configuration check controlled deployment and post deployment assessment will now be provided in turn and in later sections of the Detailed Description beginning with the readiness and configuration check.

In the readiness and configuration check phase the software deployment tool may evaluate compatibility of the developed application the application to be deployed from the source platforms on the target platform interoperability between the source target platforms etc. The readiness and configuration check may be broadly divided into platform related checks and application related checks.

One of the aspects of deployment configuration is mapping of source and target destination file system folders. As an example the target PaaS file system may be a virtual file system with diverse possible formats while the source file system may be a physical file system. Hence their structures and other characteristics are likely to be different. For example the access permissions etc. may be different. This may pose a challenge to the person doing manual deployment to crosscheck necessary compatibilities manually without adequate knowledge skills about both the source and target platforms and operating systems. Even if the person has adequate knowledge skills it is time effort intensive. Also manual deployment may introduce human error. Accordingly one of the aspects that may be implemented by the software deployment tool is the ability to automate such checking.

Another aspect of the pre deployment configuration process may be to check and configure necessary environment related parameters like domain application template node instances namespace ssh key cartridges DB Socket and DBHost and port RSA Private key and the like. In a manual model of configuration the end user has to have knowledge skill to execute platform specific commands in order to complete this activity. Accordingly one of the aspects that may be implemented by the software deployment tool is the ability to automate such checking and configuring.

Other platform related checks that may be implemented by the software deployment tool may include checking the real time state of the target platform to choose between hot and cold deployment options. Hot deployment refers to the ability of making changes to a running application without causing any downtime or without restarting the platform or the server. Cold deployment refers to the ability of making changes to a running application by restarting the platform or the server. Therefore there may be a downtime in cold deployment process.

Further in case of a target platform not being ready or available during manual deployment the person performing deployment may not get to know when the platform becomes ready for deployment. For example there may be a need to monitor status of the target platform in a frequent polling mode. This is time effort consuming and also in case the polling interval is large availability expectation of the application on the target platform may be affected. Accordingly one of the aspects that may be implemented by the software deployment tool is the ability to automate such polling.

In some situations for example migration of a stand alone enterprise application to cloud PaaS environment there may be a need to check for compatibility of all the pre requisite software applications before the actual deployment starts. While it is not necessary for the source and target platforms to have exactly same versions of pre requite software some amount of cross compatibility may be desired. Accordingly the software deployment tool may perform certain checks such as checking compatibility of application servers database servers and other components utilities.

In the controlled deployment phase the software deployment tool may deal with several deployment related issues such as connectivity security availability controllability of simultaneous deployment of enterprise applications across multiple target platforms and the like. Some of these issues may occur simultaneously or at different stages in the deployment process. An exemplary listing of issues is below 

 a Transfer of deployable files to target PaaS environment connectivity related issues security access issues availability of file system availability of space disruption in transfer process etc.

 c Back up existing application In case of an incremental deployment it is essential to take back up of the existing application and data. There may be issues related to security access issues availability of file system availability of space etc.

 d Placing appropriate files in appropriate places on the target PaaS environment security access issues availability of file system availability of space etc.

 e Running Application configuration and data scripts security access issues success of individual steps of configuration and dependency on other steps availability of required resources on the target environment etc.

 f Checking the run time environment of the deployed application on target platform This check may be quite complex effort and skill intensive depending on the number of parameters to check Ex VM size DB connection pool pre requisite application data complexity of the application and diversity of the target platforms.

In the controlled deployment phase one or more of the above exemplary issues or other issues may come up and the software deployment tool may need to make real time decisions whether to continue the remaining part of the deployment process or abort it. In case of an abortion of deployment process there may be a need to restore the target platform to its previous state in case it is not possible to re start deployment in the current state to repair and complete the remaining deployment steps. Where repair is not possible there may be a need to initiate rollback operation to clean up the unsuccessful deployment. And the repair and clean up process may get quite complex depending on the current state of deployment and the PaaS environment characteristics. Accordingly one of the aspects that may be implemented by the software deployment tool is the ability to automate such checking and taking of corrective actions.

In the post deployment assessment phase the software deployment tool may check for problems in the deployed software applications and decide whether to rollback one or more of the deployed software applications. An exemplary aspect of the post deployment assessment phase may be a dry run check which may involve checking if the deployed application s starts successfully in the target PaaS platform where it has been deployed or performing sanity checks of applications including checking some of the key inputs and outputs Database XML feeds etc. .

With the above description on the general aspects of the software deployment tool illustrates the exemplary components of the software deployment tool in accordance with various embodiments of the present disclosure. As shown the software deployment tool may include multiple constituent modules that can be divided into three groups. The first group includes a monitoring module a reporting module a user interface module an admin module and a configuration module . The second group includes a deployer module an assessment module an analytics engine and a knowledge base . The third group includes a security module an integration module and an audit and logging module .

The monitoring module may monitor each source platform and target platform . The monitoring module may also monitor the complete deployment process including all stages of the deployment process including checking availability of required resources on the source platforms and the target platforms and also checking the status of the deployed application on each target platform on a semi real time basis. The monitoring module may be configured to pause and un pause the monitoring process based on certain conditions.

The monitoring module may also check the availability of the source platform and the target platform . Although shows only one source platform and one target platform a person skilled in the art will appreciate that there can be more than one source platform and target platform . The monitoring module may monitor the simultaneous or staged deployment of one or more applications on the multiple target platforms associated with the multiple cloud environments . The application s may be developed on the source platforms that are part of non cloud environment or elsewhere. The monitoring module may also check the availability of resources that are required by the application to run on the target platform and availability of resources on the source platform . The resources can be files database data scripts folders application container and operating systems required for proper deployment of the software application on the target platforms . At any given time the monitoring module may also keep track of the status of the set of applications on each target platform . The monitoring module may also have a dashboard not shown to present or display monitoring related information on a semi real time basis. The dashboard may also access and display the past monitoring data stored in a database not shown .

For each source platform in the environment the monitoring module may be configured to check the status of connection of the source platforms with the software deployment tool . The monitoring module may monitor the connectivity to the source platform through the integration module . The monitoring module may also check the status of user sessions on the source platform . The monitoring module may also monitor whether the appropriate user session exists on the source platform through the integration module . The monitoring module may also monitor the availability of the required resources such as file system database configuration scripts and so forth on the source platform through the integration module .

For each target platform the monitoring module may check the status of connection of the target platforms with software deployment tool . The monitoring module may monitor the connectivity to the target platform through the integration module . The monitoring module may also check the status of user sessions on the target platforms . The monitoring module may monitor the existence of an appropriate user session on each target platform through the integration module . The monitoring module may monitor the availability and usage of resources e.g. database virtual machine messaging etc. required for deployment of the software application on the target platforms through the integration module . The monitoring module may further monitor the existence of an application and state of deployed applications through the integration module .

The monitoring module may be configured to monitor the state of each deployed software applications on all the target platforms through the integration module . The monitoring module may monitor the version of the deployed software application s in all the target platforms through the integration module . The monitoring module may monitor the instances of applications in the target platforms through the integration module .

The monitoring module may also monitor the status of applications and resources during the three phases e.g. pre deployment readiness check controlled deployment and post deployment assessment. During the readiness check process the monitoring module may obtain the status of readiness of the source platform and the target platform and update the status progress on the dashboard. During controlled deployment the monitoring module may keep track of file transfers between the at least one source platform and the target platforms on a real time or semi real time basis. The monitoring module may obtain status about the transfer from the integration module .

The monitoring module may further monitor the instantaneous and cumulative progress status of individual and aggregated application deployments on single or multiple target platforms . The instantaneous progress status may be an individual outcome of execution of each activity within a deployment stage. In an exemplary scenario of a single application deployment to a single target platform when a single deployment step fails impacting the progress of deployment such a failure may be termed as an instantaneous deployment failure. The cumulative status may be a cumulative outcome of execution of multiple related activities within a deployment stage. In an exemplary scenario of single application deployment to a single target platform when failure of multiple deployment steps impacts the progress of deployment such a failure is known as cumulative deployment failure. The end result of each stage of deployment of a single application on a single cloud or PaaS based target platform is known as individual deployment status.

The end result of each stage of deployment of dependent multiple applications on a single cloud or PaaS based target platform or on a group of dependent target platforms is called aggregated deployment status. Consider a scenario of deployment of multiple applications in multiple target platforms . Failure of an application deployment on one target platform resulting in rolling back of the application in all dependent platforms is known as aggregated deployment status. Failure of deployment of all dependent applications on a single target platform that results in rolling back all of these applications in that target platform is also known as aggregated deployment status. Now consider a scenario where deployment is initiated on 5 target platforms i.e. A to E. Here the target platform A C and E are configured as critically dependent and the rest i.e. the target platforms and D are configured as optional. During the deployment if the target platform C encounters deployment failure roll back is initiated in all five target platforms A E irrespective of their respective deployment status. This would be an aggregated deployment failure.

During the deployment process the monitoring module may also monitor the progress of configuration scripts which run as part of the deployment process and update status on the dashboard for example by checking the logs at each target platform . During post deployment the monitoring module may monitor the progress of a sanity test and update status on the dashboard for example .

The software deployment tool may further include the reporting module which may be configured to provide a comprehensive report after completion of all the stages of deployment. The reports may be of various types including standard and custom reports. The reporting module may generate historical reports based on the previous deployments. The reporting module may use the configuration module the audit and logging module and the knowledge base for obtaining required data and may use the analytics engine and the knowledge base for producing the report. The custom report templates may be prepared using the configuration module and the security module . The generated reports may be archived in a reporting repository not shown .

The software deployment tool also includes the user interface module which may provide one or more login screens to one or more users. The user interface module UI module may be configured to accept inputs from users. The UI module works with the configuration module to obtain preferences from users to load the appropriate screens. The UI module may be configured to obtain a list of registered applications and the cloud environments or PaaS environments from the configuration module to render to the user for receiving user selections. As per the user selection the respective phase of deployment i.e. readiness check or deployment or post deployment assessment is initiated. The UI module may further provide screens including but not limited to a configuration settings screen a screen to list historical deployments for the signed in user a screen to list all applications and platforms previously used by the signed in user a screen to list all applications and platforms that the signed in user has entitlement a screen for registering an application or a platform or a user and so forth.

The admin module is configured for user registration application registration platform registration and application and deployment management. The admin module may perform the user registration by working with the configuration module and the security module in creation and maintenance of users. This may be performed with assistance from a user including for example an authorized user. The admin module may perform the application registration by working with the configuration module and the security module in creation and maintenance of registered application records including the information about the source platforms . This may be performed with assistance from any user or alternatively only an authorized user.

The admin module may perform platform registration by working with the configuration module and the security module in creation and maintenance of records of registered target platforms . This may be performed with assistance from any user or alternatively only an authorized user. The information about the registered application records registered source platforms and registered target platforms may be persisted in the security module and in the knowledge base .

The admin module may be further configured for application and deployment management. The admin module may perform the operations to start stop restart and backup for the application s on the target platforms through for example the integration module . The admin module may also perform a forced rollback through for example the deployer module on deployments as initiated by any user or alternatively only an authorized user. The permitted application administration operations for a respective user may be obtained from the configuration module . The admin module in accordance with the user s access rights obtained from security module may perform administration activities on the target platforms .

The software deployment tool also includes the audit and logging module that may be configured to maintain a log or a record of all activities and related status in the system. Modules of software deployment tool may use this log or record. The log or record may also be used for reporting and analysis.

The software deployment tool also includes the deployer module configured to perform the readiness check controlled deployment and post deployment activities. During all or part of the activities in the differing stages of the deployment process the deployer module may update the monitoring module with all monitoring information. The deployer module may also obtain configuration details of source platform and target platform and application s from the configuration module . The deployer module may work with the integration module in the process of transferring the required resources files scripts configuration data etc. from the source platform s to the target platform s .

Based on the application deployment type such as incremental or full deployment obtained from the configuration module the deployer module may perform full or incremental deployment. Based on the deployment mode such as hot deployment or cold deployment obtained from the configuration module the deployer module may further perform a hot or cold deployment. In case of incremental deployment the deployer module works with the monitoring module to find the application status in the target platform . Prior to deployment the deployer module may stop the application in the target platform . The deployer module may also back up the application through the integration module . The deployer module may further execute configuration scripts obtained from the configuration module .

In situations where there may be a deployment failure the deployer module may roll back depending on the type of rollback obtained from the configuration module and the knowledge base . There can be different types of rollbacks depending on the scenario. Exemplary rollbacks may include rollbacks per application per platform group of applications per platform per application from group of platforms group of applications from group of platforms and so forth. The deployer module may obtain sanity test details from the configuration module and may execute sanity tests on the newly deployed applications. In addition to the communications discussed additional or all other communications and activities with the target platform s and the source platform s may be performed by the deployer module through the integration module .

The deployer module may further provide the configuration details related to the source platforms the target platforms and applications for a signed in user to an assessment engine . The assessment engine works with the monitoring module to determine the availability of source platforms and target platforms . During the deployment stages the assessment engine may perform the pre deployment or readiness check assessment and post deployment assessment. In addition during execution of an activity at any stage of deployment if any problem has been encountered the assessment engine may perform the problem assessment and obtain possible solution s with the help of knowledge base and analytics engine .

In addition some or all of the modules of the software deployment tool that want to perform an analysis may use the analytics engine . For example the reporting module may use the analytics engine to perform report related calculations e.g. time taken for deployment percentage of the failed sanity tests the deployer module may use the analytics engine for analysis of problem s encountered or a readiness check the knowledge base may use the analytics engine to analyze deployment process data current and historical to create information that is stored in the knowledge base .

The configuration module of software deployment tool may permit registered user s to manage configuration logistics by obtaining user credentials or configuration details from the security module . The configuration details may be categorized into monitoring reporting deployer source platform target platform user preference and the like. The configuration parameters of the monitoring category for each source platform and target platform can be a number of re try s interval between retry s resource locator for the source platforms and the target platforms dependencies between the source platforms and the target platforms and so forth.

The configuration parameters for each application may include but are not limited to the final status of deployment success failure time taken for deployment number of retry s prior to deployment. The configuration parameters for the deployer category can be a deployment type deployment mode type of rollback and so forth. The configuration parameters for the source platform category may include but are not limited to source parameters root folder s application parameters application name list of resources list of files descriptors application type size and so forth. The configuration parameters of the target platform category can include but are not limited to target parameters domain name platform type Critical or Optional target folder virtual machine identity ID application parameters app name app version app type app status and so forth. The configuration parameters of the user preference category can be but are not limited to application types such source file application status in target platform type of target platforms restore last user session display deployment history time out duration notification setting e.g. email sms targets etc. and so forth.

The knowledge base of the software deployment tool may store all current data historical data baseline configurations etc. The knowledge base may also maintain knowledge harvested from the past deployments. The current data may include registered platform details registered application details registered user details including roles list of rules for assessment and validations status configuration and assessment information along with the relevant context and so forth. The historical data may include details of past configurations along with the relevant context past user preferences with the relevant context process details of past deployment activities along with the relevant context details about problems issues and resolutions that happened in the past along with the relevant context past status data from the dashboard along with the relevant context past issues problems encountered and solutions in relevant context past rules for assessments and validations and so forth.

The knowledge base may also include knowledge such as high level configuration details about different types of platforms for example target platforms dependency information for example applications platforms preferences etc. specific information on resources and communication mechanism for example mode protocol message format etc. list of necessary commands etc. for each target platform for example each target platform has its own mechanism for connection and remote operations information on necessary pre requisites infrastructure resources etc. for each application to be deployed on each type of target platform mapping between known issues problems and solutions in relevant context and so forth. The knowledge base may be further configured to harvest knowledge by using the analytics engine and information such as historical data data from the security module and data from the configuration module . The knowledge base may also classify segregate and analyze or correlate relevant data based on the context such as user platform applications configurations status information from each stages. The knowledge base may further create new information to be used as knowledge or may update existing information based on system analysis.

The knowledge base may also maintain the rules of the source platforms and target platforms . The knowledge base may also create rules based on results of assessments of each deployment. The results of these assessments may be stored in the knowledge base repository and retrieved for other deployments and used to check the parameters. The first set of rules may be created by the administrator or other users using the configuration module and stored in the knowledge base . From time to time the knowledge base may automatically create new rules or update an existing rule based on harvested knowledge. These rules may be used by the analytics engine in some or all phases of the deployment process e.g. readiness check controlled deployment and post deployment assessment .

For example during the readiness check phase the analytics engine may use the rules to check availability of resources for example files scripts configuration data libraries etc. for each application. If issues are encountered during controlled deployment phase the analytics engine may use the rules to assess the problem. Similarly during a sanity check dry run issues may be encountered during post deployment assessment. In those situations the analytics engine may use the rules to obtain possible resolutions.

Regarding the security module it may manage access or provide permission management for users of the software deployment tool . The security module may also perform user validations in terms of access and authorization.

As for the integration module all of the necessary communications such as appropriate web service calls and exchange of status information between the integration module and the target platforms happens through various means such as a webservice API through a service gateway a message through a message broker etc. on each target platform . Exemplarily the deployer module may perform the readiness checking controlled deployment and post deployment assessment through the integration module . During pre deployment assessment stage e.g. readiness check the deployer module may provide some or all of the necessary configuration information to the integration module for the purpose of performing status checks and verification of some of the platforms and resources for readiness. The integration module may initiate access to different source platform s and target platforms by establishing connections to the respective platforms using user credentials. Once connection has been established the integration module may use available interface and services specific to the target platforms and the source platforms to perform status checks and verifications through remote operations.

During the pre deployment assessment in the source platform s the integration module may check file system information for some or all of the necessary details as required by the deployer module .

During the pre deployment assessment in the target platform s the integration module may check the virtual file system information for some or all of the necessary details as required by the deployer module . The integration module may further check the virtual memory information for some or all of the necessary details as required by the deployer module . The integration module may further check for the availability of required services e.g. infrastructure services like database application container messaging service etc. . The integration module may also check for the availability of required resources e.g. application files configuration data scripts schema etc. . The integration module may also check for the existence of an application on the target platform and its detailed status. Once a communication channel has been established the integration module may also perform continuous status checks and update the monitoring module on a real time or semi real time basis for the rest of the deployment process.

During the controlled deployment stage the deployer module may provide some or all of the necessary configuration information to the integration module to assist in the transfer of files between the source platform s and the target platforms application backup application control status and health checks of platforms resources and the applications etc. The integration module may perform execution of some or all of the necessary application scripts on the target platforms remotely on behalf of the deployer module . The integration module may also perform some or all of the necessary activities for rollback operation remotely on behalf of the deployer module . At the beginning of the controlled deployment stage the integration module may check the status of the communication with the source platform s and the target platforms . If any of the communication channels are invalid the integration module may establish a new communication channel as needed.

During the post deployment assessment stage the deployer module may provide some or all necessary configuration information to the integration module for the purpose of performing one or more activities on the target platforms . The one or more activities may include checking the status of application and related resources or services on the target platforms running necessary scripts for application administration performing dependency checks for service and other resources validating configuration and necessary data required for running the application running necessary scripts for checking status of run time components of the application running necessary scripts for checking the basic behavior of the running application etc.

At the beginning of the post deployment assessment stage the integration module may check for status of the communication with the source and the target platforms . If any of the communication channels are invalid the integration module may establish a new communication channel as needed.

At step the user may provide all necessary inputs and selections. The user may select the application to be deployed and may also select the required target platform s . The user also may select the application deployment type for example Full or Incremental . The user may provide a selection for deployment mode for example Hot or Cold . The user may also provide selection for number of retries during deployment. The user may further provide selection for the type of rollback option for example Per application per platform etc. .

At step based on the user inputs and selections base line configurations may be obtained. Once the user inputs are obtained the configuration module may retrieve the baseline configuration data from a configuration repository not shown depending on the details of the application and target platform . Some configuration details of target platforms are resource locator type of environment mode of accessibility etc.

At step the complete configuration may be obtained. The configuration module may retrieve the advanced configuration data regarding applications and target platform dependencies from the knowledge base depending on the base line configuration details. For example executing Java application JRE Java Runtime Environment is a dependency at platform level. Further in Java applications that process XML XML parser e.g. Xerces is a dependency. Information about necessary resources may also be added to the configuration data. The configuration module may also perform validations on the user provided parameters based on the rules retrieved from the knowledge base .

At step the complete configuration may be saved. The configuration module may save the complete configuration details into the configuration repository for the particular deployment and specific user which may be made available for readiness check and deployment stages.

At step the source platforms may be checked. For each source platform the deployer module may initiate readiness assessment using the assessment engine . The assessment engine may check the availability of the at least one source platform through the monitoring module . In case the source platform is not available the assessment engine may check for an alternate source platform of the multiple source platforms . In case an alternate source platform is not found the checking continues with checking availability of other source platforms. In case an alternate source platform is not found the assessment engine may decide based on dependency information if the current source platform is critical or optional. If the current source platform e.g. the at least one source platform is critical and not available the assessment engine may notify the same to the deployer module along with an assessment report. The deployer module may wait until it receives a source platform ready status from the monitoring module for that particular source platform . If the at least one source platform is optional and not available the assessment engine may continue availability checking with other source platforms. Simultaneously for each source platform the assessment engine may update the deployer module instantaneously. The deployer module may in turn update the status of the source platform to the dashboard. For each available platform the assessment engine may also check availability of resources for each application necessary read permission and also validate folder and file structures file types and size as per the available configuration information.

In step the target platforms are checked. Exemplarily the deployer module initiates readiness assessment for each of the target platforms using the assessment engine . The assessment engine may check the availability of the target platform through the monitoring module . If the target platform is critical and not available the assessment engine may notify the same to the deployer module along with an assessment report. If the target platform is optional and not available the assessment engine may continue availability checking with other platforms. Simultaneously for each target platform the assessment engine may update the deployer module instantaneously. The deployer module may in turn update the status of the target platform on the dashboard.

For each available target platform the assessment engine may check availability of resources for each application check necessary write permission s and also validate folder and file structures file types availability of space for the files and database availability of application resources and size as per the available configuration information. The assessment engine may check the availability of the required environmental settings and the software dependencies on the target platform . The assessment engine may also check the status of application on the target platforms . In case of a new deployment the assessment engine may ensure that the new software applications don t overwrite on existing application s . In case of an incremental deployment the assessment engine may ensure that the appropriate application is updated with the incremental version.

At step the application related pre requisites and dependencies are checked. Exemplarily for each target platform the deployer module may initiate readiness assessment using the assessment engine to check the dependencies within application components and across some or all of the dependent applications. The dependency check may include checking the availability of the application specific software pre requisites e.g. database middleware components application container etc. and resources for all applications. In case of unavailability of these pre requisites components the assessment engine may interact with the knowledge base and resolve the issues and continue with the other application related pre requisites and dependency checks.

Finally status may be updated at step . After completion of all checks in the above steps to the assessment engine may update the database of the knowledge base and the audit and logging module with details of issues or checks done in each step. Also the issue resolution may be provided as an update to the user through the dashboard.

At step existing instance of relevant application s on each target platform may be stopped. The deployer module may use the admin module to stop the existing instance of relevant applications s on each target platform . The monitoring module may monitor the state of the application and update the deployer module once the application stops to proceed with the next step. In case of not being able to stop the existing application instances in any of the target platforms the deployer module may check for possible issue resolution and potential rollback through steps .

At step backup of files and resources for each relevant existing instance of applications to be deployed on each target platform may be created. Exemplarily the deployer module may get the previous application files and libraries and store a back up copy of the files and resources on each target platform in a back up folder along with its date and time and version of the files. In case the deployer module is not able to back up the existing application files and resources in any of the target platforms the deployer module may check for issue resolution and potential rollback through steps .

At step the transferred files and resources for each application to be deployed may be placed at an appropriate location on each target platform . Exemplarily the deployer module may place the transferred files and resources for each application to be deployed at an appropriate location on each target platform . In case the deployer module is not able to place the transferred files and resources of each application to be deployed at an appropriate location on each target platform the deployer module may check for issue resolution and potential rollback through steps .

At step the configuration scripts for each application to be deployed on each target platform are executed. Exemplarily the deployer module may get the configuration and deployment scripts from the configuration module and run the scripts in the sequence for each application on each target platform . In case of failure of any of the configuration and deployment scripts of any application to be deployed on any target platform the deployer module may check for issue resolution and potential rollback through steps .

At step issues with instantaneous and cumulative progress status may be checked or identified for individual and aggregated application s deployment on the target platforms . The monitoring module may notify the deployer module regarding issues that may have occurred during any of the above steps.

At step possible resolution s of the issue s may be checked. Exemplarily the deployer module may contact the knowledge base for remedy recommendations for the issues identified during step on each target platform . In case there is no recommendation for some of the issues execution may transfer to step for performing the rollback operation.

At step relevant information from the knowledge base may be accessed. The knowledge base may check the database for resolution for the issues requested by the deployer module and provide the recommendations for each issue on each target platform .

Step refers to determining whether a resolution is possible for an identified problem. Based on recommendations of the knowledge base the deployer module determines whether the encountered deployment issues can be resolved or not on each target platform . If some of the issues cannot be resolved step is executed otherwise control passes to step .

At step the issues may be resolved. Based on the resolution obtained from the knowledge base the deployer module may resolve the issues by contacting the appropriate modules and processes required to resolve the issue.

At step the rollback deployment may be performed. The deployer module may initiate the rollback of the deployment on some or all of the target platforms when there are no recommendations for the encountered issue or the recommended remedy doesn t resolve the actual issue in any of the target platforms . Rollback may happen to a subset of the target platforms. For example if the deployment fails on an Optional target platform roll back could occur only in the respective Optional platform. Once a rollback is completed the system is updated on the status. The rollback is initiated in case of failures based on the rollback type obtained from the configuration module .

At step the deployer module may update the final deployment status to the analytics engine . The dashboard may pick up the status from the analytics engine and notify the user.

At step the knowledge base may be updated. The deployer module may update the knowledge base with the issues resolution and deployment steps during each phase. The knowledge base may use this information to provide recommendations for future deployment issues.

At step component dependency may be analyzed. Exemplarily the deployer module may analyze the deployed application s component dependency by obtaining the configuration information from the configuration module and the knowledge base . In case of application dependency failing to perform as expected including dependencies between applications in case of group of applications or applications deployed on different target platforms the steps to may be executed for possible issue resolution and rollback of the deployment.

At step a sanity check may be performed. Exemplarily the deployer module may obtain the details of the automated sanity tests from the configuration module and the deployer module may execute the automated sanity tests on each newly deployed application in each target platform . The monitoring module may monitor the progress of the sanity test execution. In case of a sanity check failing to perform as expected steps described later may be executed for possible issue resolution and rollback of the deployment.

Once the sanity test executions are completed successfully the monitoring module may intimate the deployer module in step . The deployer module may update the status of the post deployment sanity tests to the analytics engine and the knowledge base . This in turn updates the database of the knowledge base on the application dependency and sanity check issues and resolutions.

At step issues with progress status are checked for individual or aggregated application s deployed on individual or group s of target platform s . Exemplarily the monitoring module may notify the deployer module regarding issues that may have occurred during any of the above steps like. The monitoring module may also contact the knowledge base for possible recommendation of issues.

At step possible resolution s of the issue s may be checked. The deployer module may contact the knowledge base in step for remedy recommendations for the issues identified during step on each target platform . In case there is no recommendation for an issue execution may transfer to step for performing a rollback operation.

At step it is determined whether a resolution for an identified problem may be possible. For example based on recommendations of the knowledge base the deployer module determines whether the encountered issues can be resolved or not on each target platform . In case some of the issues could not be resolved execution may transfer to step for performing a rollback operation.

At step the issues may be resolved. For example based on the resolution obtained from the knowledge base the deployer module may resolve the issues by contacting appropriate module and processes operation required to resolve the issue and execution may transfer to any of steps to from where the issue had occurred.

At step a rollback operation may be deployed. The deployer module may roll back the deployment when there are no recommendations for the issues encountered during application dependency check or sanity check. The deployer module may determine based on the configuration from the configuration module which type of roll back should be performed e.g. per application per platform group of applications per platform per application from group of platforms group of applications from group of platforms .

The creation or modification of deployment configuration may be performed by using one or more modules as discussed with reference to . The UI module may provide the sign in screen to the user to enter user credentials. The admin module may then get the user provided credentials authenticated by the security module . Next the admin module may provide the signed in user options through the UI module to create a new deployment configuration and or modify an existing deployment configuration and or modify common configuration parameters for the user e.g. the user preferences . In case of modification of an existing deployment configuration or common configuration the admin module may display the existing configuration parameters to the user through the UI module for the user to modify one or more parameter values and save the configuration values into the configuration module and the knowledge base as appropriate. In case of a new deployment configuration or common configuration the admin module may obtain all default configuration values and existing user preferences from the configuration module and the knowledge base . Next the admin module may display the same to the user via the dashboard. The user may then provide new values to the configuration parameters and modify default values as appropriate and save the configuration. The admin module may save the new configuration into the configuration module and the knowledge base as appropriate.

The application registration may be also performed in various steps using different modules. The UI module may provide the sign in screen to user to enter user credentials. The admin module may get the user provided credentials authenticated by the security module . Next the admin module may provide options to the user to register a new application or to modify or remove an existing application registration. Similarly the admin module may provide options to the user to register a source platform or to modify or remove an existing source platform registration.

If an existing application registration is removed the user may have the option to select one or more registered applications from the list provided by the admin module and confirm the delete option. The admin module may then remove the user selected application registration information from the current configuration. In case of removal of an existing source platform the user may have the option to select one or more registered source platforms from the list provided by the admin module and confirm the delete option. The admin module may then remove the user selected source platform information along with the applications related to that source platform from the current configuration. In case the user selects an existing application configuration to modify the admin module may first fetch the necessary available configurations from the configuration module and display the same to the user through the UI module .

Upon modification of one or more configuration parameters by the user the admin module may save the modified configuration into the configuration module and the knowledge base as appropriate. In case of a new application registration the admin module may fetch initial default configuration information along with the existing user preference values from the configuration module and the security module and display a new application registration screen to the user through the UI module . The user may provide appropriate values of the configuration parameters related to the source platforms and applications and modify one or more existing values of parameters. The complete registration information may be saved by the admin module in the configuration module and the security module as appropriate.

The target platform registration may be performed by using one or more modules of the deployment tool as follows. The UI module may provide the sign in screen to user to enter user credentials. The admin module may get the user provided credentials authenticated by the security module . The admin module may provide options to the user to register a new target platform or to modify or remove an existing target platform. In case of removal of an existing target platform the user may have the option to select one or more registered target platform s from the list provided by the admin module and confirm the delete option. The admin module may then remove the user selected target platform information from the current configuration. In case the user selects an existing target platform configuration to modify the admin module may first fetch some or all of the necessary available configuration from the configuration module and display the same to the user through user interface module . On modification of one or more configuration parameters by the user the admin module may save the modified configuration into the configuration module and the knowledge base as appropriate. In case of a new target platform the admin module may fetch the initial default configuration information along with the existing user preference values from the configuration module and the security module and display a new target platform registration screen to the user through the user interface module . The user may provide appropriate values of the configuration parameters related to the target platforms and modify one or more existing values of parameters the complete registration information may be saved by the admin module in the configuration module and the security module as appropriate.

The user registration may be performed by using one or more modules of the software deployment tool as follows. The UI module may provide the sign in screen to an administrator to enter their credentials. The admin module may provide options to the administrator to register a new user or to modify or remove an existing user. In case of removal of an existing user the administrator may have the option to select one or more registered users from the list provided by the admin module and confirm the delete option. The admin module may then remove the selected user registration information from the current configuration. In case the administrator selects an existing user to modify the admin module may first fetch the necessary available configuration from the knowledge base and display the same to the administrator through the UI module . On modification of one or more configuration parameters by the administrator the admin module may save the modified configuration into the repository of the knowledge base . In case of a new user registration the admin module may display a new user registration screen to the administrator through the UI module . The administrator may provide appropriate values of the configuration parameters related to the user the complete registration information may be saved by the admin module into the repository of the knowledge base .

Exemplary embodiments of the present disclosure may be used in any cloud based network. In addition at least certain aspects of the aforementioned embodiments may be combined with other aspects of the embodiments or removed without departing from the scope of the disclosure.

Other embodiments of the present disclosure will be apparent to those skilled in the art from consideration of the specification and practice of the embodiments disclosed herein. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the disclosure being indicated by the following claims.

