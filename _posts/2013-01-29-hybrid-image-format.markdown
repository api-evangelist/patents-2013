---

title: Hybrid image format
abstract: Hybrid image format techniques are described in which multiple resolution images are concatenated to a standard bitmap image to create a hybrid image file. The hybrid image file is created through combining a relatively low resolution image with the additional images in a multi-frame format having higher resolution. The hybrid image file may contain data detectable to signal that higher resolution images are available in the hybrid image file. A hybrid aware application may be configured to detect and output a higher resolution image from the hybrid image file based on detection of the data. A legacy application that is not configured to detect the data may be unaware of higher resolution images contained in the hybrid image file, and accordingly outputs the relatively low resolution image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020299&OS=09020299&RS=09020299
owner: Microsoft Corporation
number: 09020299
owner_city: Redmond
owner_country: US
publication_date: 20130129
---
This application is a divisional of and claims priority to U.S. patent application Ser. No. 12 133 358 filed Jun. 4 2008 the disclosure of which is incorporated by reference herein in its entirety.

High resolution displays are becoming more prevalent. As the ability of displays to render higher and higher resolution images has increased application developers have responded by providing images that take advantage of the higher resolution e.g. increasing DPI . However enabling an existing application to use high resolution images may involve significant redevelopment of the application. This may be quite time consuming and costly for the developer. Further errors may be encountered when an existing application that has not been enabled to use a high resolution image attempts to load such an image. Such image loading errors may be quite frustrating to users who may not understand why the error occurred.

Hybrid image format techniques are described in which multiple resolution images are concatenated to a standard bitmap image to create a hybrid image file. An image is authored in a bitmap format having a relatively low resolution. Additional images are authored having higher resolution. The additional images may be maintained in a multi frame format. A hybrid image file is created that combines the relatively low resolution image with the additional images in the multi frame format having higher resolution. The hybrid image file may further contain data which is detectable to signal that higher resolution images are available in the hybrid image file.

In an implementation an application enabled to use the higher resolution images is configured to detect the detectable data. Thus a higher resolution image from the hybrid image file may be output by the application when the data is detected. When the detectable data is omitted or goes undetected the relatively low resolution image may be output. Further a legacy application that is not configured to detect the data may be unaware of higher resolution images that are contained in the hybrid image file. Accordingly the legacy application interacts with the hybrid image file as though the hybrid image file was a standard bitmap image and outputs the relatively low resolution image.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

As the quality of images available to users has increased the resolution of images processed by computing devices has correspondingly increased. However enabling an existing application to use high resolution images may involve significant redevelopment of the application. This may be quite time consuming and costly for the developer.

Hybrid images format techniques are described in which a hybrid image file combines a relatively low resolution image with one or more additional images in a multi frame format having higher resolution. The hybrid image file may also contain data that is detectable to signal that one or more higher resolution images are available in the hybrid image file.

In an implementation an application enabled to use the higher resolution images is configured to process the detectable data to identify whether higher resolution images are available. Such an application may be referenced herein as a hybrid aware application. Thus a higher resolution image from the hybrid image file may be output by the application when the detectable data is detected. When the higher resolution images are not available or go undetected the relatively low resolution image may be output.

In an implementation some applications may not be configured to recognize or support higher resolution images that may be contained in the hybrid image file. Such an application may be referenced herein as a legacy application. For instance the legacy application may not be configured to process the detectable data and may not be aware of the portion of the hybrid image file having the multi frame format. Thus the legacy application may interact with the hybrid image file as though the hybrid image file was a standard bitmap image. Accordingly the legacy application outputs the relatively low resolution image.

In the following discussion an example environment is first described that is operable to perform hybrid image format techniques. Example procedures are then described that may be employed in the example environment as well as in other environments. Although these techniques are described as employed within an example computing environment in the following discussion it should be readily apparent that these techniques may be incorporated within a variety of environments without departing from the spirit and scope thereof.

Processors are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions. The one or more processors may perform single threaded and multi threaded operations. Additionally although a single memory is shown for the computing device a wide variety of types and combinations of computer readable memories may be employed including volatile and non volatile memory and or storage media. For example computer readable memories media may include but are not limited to random access memory RAM hard disk memory read only memory ROM flash memory video memory removable medium memory and other types of computer readable media that are typically associated with a computing device to store data executable instructions and the like.

The computing device is further illustrated as including an operating system and a variety of applications . The one or more processors may retrieve and execute computer program instructions from applications to provide a wide range of functionality to the computing device including but not limited to office productivity email media management printing networking web browsing and so forth. A variety of program data related to the applications is contemplated examples of which include office documents multimedia files emails data files web pages user profile and or preference data and so forth.

The program data of a computing device may also include various images which may be stored in the memory . Various image processing may be performed to display print output or otherwise manipulate the images. For example an application may be executed via the processor to display an image as part of a user interface output by the application . Other images may be displayed as components of an operating system such as icons controls menus background images and so forth. Images may also include digital photographs scanned images and so forth. A variety of other examples are also contemplated.

The example of depicts the computing device as having one or more hybrid images representative of images formatted in accordance with hybrid image format techniques. A hybrid image may have a bitmap portion and a multi frame portion . The bitmap portion may encode a bitmap image having a relatively low resolution. The multi frame portion may be configured to encode one or more images as higher resolution alternatives to the bitmap image. Thus the format of the hybrid images described herein enables encoding of multiples resolution images as a hybrid image e.g. a single image file.

The computing device is further illustrated as including an image loading tool . Image loading tool is representative of a variety of hybrid aware functionality operable by a computing device. For instance image loading tool may include at least functionality to interact with a hybrid image such as to load output and or otherwise interact with the hybrid image . Image loading tool is further representative of functionality to determine when higher resolution alternatives are encoded in the multi frame portion . When higher resolution alternatives are available image loading tool may select and or cause output of a higher resolution alternative. When higher resolution alternatives are not available image loading tool may cause output of the bitmap image encoded in the bitmap portion . While depicted as a stand alone module in the image loading tool may also be implemented as a sub module of another application . The image loading tool may be implemented in a variety of ways to provide hybrid aware functionality to applications and computing devices . Additional discussion of techniques to interact with hybrid images may be found in relation to .

The computing device is further illustrated as including a creation tool . Creation tool is representative of functionality operable to create hybrid images . Creation tool may form a hybrid image from a bitmap image and one or more higher resolution images that may be developed as alternatives to the bitmap image. It is noted that the creation tool may operate on a separate computing device to create hybrid images in a separate environment e.g. a development environment . Once created a hybrid image may be distributed for end use by many computing devices . However for simplicity sake the creation tool is depicted as a component of the illustrated computing device of . Additional discussion of techniques to create hybrid images may be found in relation to .

Computing device may output images encoded in portions of the hybrid image . For example computing device may be configured to output images user interfaces and or other content through a display driver that enables output of the images via a corresponding display . A variety of displays are contemplated such as an LCD display a CRT monitor a plasma display or other suitable displays . The capabilities of these various displays to present images at different resolutions may also vary. Accordingly a hybrid image may be employed to encode alternate images having a range of resolutions. Thus hybrid images may enable presentation of a suitable one of a plurality of alternate images on a wide range of displays having various capabilities.

Generally the functions described herein can be implemented using software firmware hardware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module functionality engine and logic as used herein generally represent software firmware hardware or a combination thereof. In the case of a software implementation for instance the module functionality or logic represents program code that performs specified tasks when executed on a processor e.g. CPU or CPUs . The program code can be stored in one or more computer readable memory devices. The features of the techniques to provide a hybrid bitmap format are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

Applications are illustrated as including one or more legacy applications and one or more hybrid aware applications . A legacy application is an application that may not be configured to recognize or support higher resolution images that may be contained in a hybrid image . For instance the legacy application may not be configured to process detectable data contained within a hybrid image . Thus the legacy application may be unaware of a portion of the hybrid image having the multi frame format. As such legacy application may interact with the hybrid image as though the hybrid image was a standard bitmap image. Accordingly the legacy application when interacting with the hybrid image file may output the relatively low resolution image encoded in the bitmap portion .

A hybrid aware application is an application that is enabled to detect and or use the higher resolution images encoded in a hybrid image . In particular hybrid aware applications may be configured to process the detectable data to identify when higher resolution images are available. Thus a higher resolution image encoded in a multi frame portion of hybrid image may be output by the hybrid aware application when detectable data is detected. When the higher resolution images are not available or go undetected the relatively low resolution image may be output.

The hybrid image format techniques permit legacy applications to interact with a hybrid image as though the hybrid image was a standard bitmap image. Thus legacy application may be unaware of the multi frame portion . At the same time hybrid aware applications may engage in a variety of increasingly sophisticated interactions with a hybrid image such as to detect a multi frame portion identify one or more images contained in the multi frame portions select from among the images encoded in the hybrid image output one or more selected images and so forth. As discussed previously hybrid awareness of hybrid aware applications may be implemented via the image loading tool further discussion of which may be found in relation to .

While a single processor is depicted the illustrated processor may be representative of multiple processors operable to perform various tasks associated with block based image processing techniques. In the illustrated example computing device also includes a dedicated graphics processing unit GPU configured to perform various graphics rendering tasks. Functionality provided by the GPU may include controlling aspects of resolution pixel shading operations color depth print rendering texture mapping and other tasks associated with processing of images such as forming bitmap transfers and painting image decoding window resizing and repositioning line drawing font scaling polygon drawing and so on.

The GPU may be capable of handling these processing tasks in hardware at greater speeds than software executed on the one or more processors . Thus the dedicated processing capability of the GPU may reduce the workload of the processors and free up system resources for other tasks. The GPU may be operated under the influence of the operating system and or an application to manage graphic processing tasks. Thus a variety of processing functionality e.g. the one or more processors and the GPU may be employed in various combinations to form and or output images including the hybrid images .

Memory is depicted as storing hybrid images that may be created using the creation tool . Creation tool is illustrated as stored in memory and is also executable on the processor . As noted in the discussion of creation tool may also be implemented in a separate development environment.

Memory also includes an imaging component . The imaging component represents functionality that may be employed to encode and or decode images in various formats including images that may be provided in portions of a hybrid image . In an implementation imaging component includes a database of image formats encoders decoders and or related data that may be referenced to create modify and or output images. For instance imaging component is illustrated as having one or more image formats and one or more corresponding codecs .

To output an image an application may interact with the imaging component to identify an image format and obtain a corresponding codec . The codecs may be configured to enable processing of the image file by the application . Thus codecs are representative of a variety of encoders and decoders corresponding to the various image formats . Further the imaging component may be representative of a variety of suitable libraries and information e.g. database dynamic link libraries DLLs shared resources data codecs image formats and so forth that may be employed to read write images in a variety of formats and that may be employed by a computing device and or various applications .

A variety of image formats and codecs are contemplated that may be supported by imaging component . In accordance with hybrid image format techniques discussed herein imaging component may support one or more multi frame formats suitable for hybrid images . Tagged Image File Format TIFF is one example of a multi frame format suitable for use with hybrid images . A variety of other formats codecs and corresponding data to enable encoding and or decoding of images are contemplated. Thus the imaging component may support loading and saving images in a variety of formats examples of which include but are not limited to BMP TIFF PNG JPEG and GIF formats.

Further imaging component may be implemented in a variety of ways. For instance imaging component may be a stand alone component as illustrated integrated with operating system located remotely in a network accessible location and so on. In an implementation imaging component may be dedicated to processing of hybrid images and related techniques to output alternate images encoded therein. Alternatively imaging component may represent a general image imaging component that is operable to perform a variety of image processing tasks some of which may be related to hybrid images and formats described herein. For instance may be representative of one or more application programming interfaces APIs of an operating system and or related resources data DLLs and the like. Thus imaging component may be employed to process hybrid images and or to process other images and formats that may be used by computing devices and corresponding applications .

The following discussion describes techniques related to hybrid image format that may be implemented utilizing the previously described environment systems and devices. Aspects of each of the procedures may be implemented in hardware firmware or software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion reference may be made to the example environment of and the example implementation of a computing device of .

To create the bitmap portion for the hybrid image creation tool may interact with imaging component to encode a bitmap image. As noted imaging component may includes various codecs corresponding to a variety of image formats . Creation tool and or imaging component may also implement a scaler operable to modify size and or resolution of an image. Further creation tool and or imaging component may implement format conversion tools operable to translate images between image formats . Thus through interaction with the imaging component the creation tool may be employed to author a bitmap image through processing and or modifications of one or more existing images. Existing images used to create a bitmap image for a hybrid image may be existing bitmaps and or images other formats converted to bitmap using the conversion tools.

In an implementation creation tool may also import download upload or otherwise obtain an existing bitmap image for use with a hybrid image . By way of example and without limitation a bitmap image may be encoded in a standard bitmap format that uses a resolution of 96 dots per inch DPI . The created bitmap image for the browser icon in this example may then be encoded in the bitmap portion of the hybrid image .

A second portion is defined for the image file to encode a plurality of images in a multi frame format block . Continuing the preceding example a second portion may be defined for the hybrid image to encode one or more alternative icon images for the browser. In particular creation tool may create a multi frame portion to encode one or more images. Creation tool may interact with the imaging component to utilize the image formats codecs scaler and conversion tools as previously described and to create the multi frame portion . Each image may be encoded as an individual frame of the multi frame portion . Further each image may have a resolution that is greater than the bit map image encoded in the bitmap portion . As noted tagged information file format TIFF is one example of a multi frame format suitable for the described hybrid file format techniques. However creation tool may use a variety of multi frame formats that may be supported by the imaging component of which TIFF is but one example.

The second portion is concatenated to the first portion to create the image file Block . For instance creation tool may operate to concatenate the bitmap portion created per block to the multi frame portion created per block . In an implementation the creation tool performs a binary concatenation to join the bitmap portion and the multi frame portion as the hybrid image . In the continuing example the bitmap portion encodes a relatively low resolution image for the browser icon. The multi frame portion may encode one or more alternate images for the browser icon as individual frames. Thus the hybrid image includes a plurality of alternate images for the browser icon.

The following TABLE 1 represents one illustrative example of a hybrid format that may be employed with the hybrid image format techniques described herein 

TABLE 1 illustrates fields of a standard bitmap file which may include a variety of fields in a file header offset 0 to 10 info header offset 14 50 additional header fields in some bitmaps and a color table if applicable. The bit map image data is represented by the row labeled bfOffbits . Collectively these fields are representative of the bitmap portion of a hybrid image . TABLE 1 further illustrates a row labeled multi frame data that has been concatenated to the bitmap portion . The row labeled multi frame data represents the multi frame portion of the hybrid image which may be used to encode one or more additional images in a multiple frame image format such as TIFF.

Once the hybrid image has been created such as through the example procedure the hybrid image may then be stored in memory or other suitable memory location and or may be written for storage to various computer readable media. Further the hybrid image may be incorporated into an application distributed for use with a variety of computing devices packaged into a DLL or as another common resource and or may be used in a variety of other ways by computing devices and applications . As discussed in greater detail with respect to when the hybrid image is encountered by a legacy application the legacy application may interact with the hybrid image as though it was a standard bitmap file. When the hybrid image is encountered by a hybrid aware application the hybrid aware application may determine when the multi frame portion includes one or more images and may interact with the hybrid image based on the determination. Further discussion of interactions of hybrid aware applications with hybrid images may be found in relation to .

Hybrid images may be distributed for use by a variety of computing devices for instance in conjunction with an operating system or an application . In an implementation hybrid images may be distributed by way of one or more DLLs or other suitable resources. The DLLs or other suitable resources may be referenced by applications through one or more APIs of an operating system . Further the DLLs or other resources including hybrid images may be stored in memory of a computing device . A hybrid image may be used to replace e.g. overwrite an existing image e.g. a standard bitmap image that may be implemented by or referenced by an existing DLL or other resource. Hybrid image may then be used as a common resource for applications including legacy applications and hybrid aware applications .

A legacy application may interact with an API to obtain the standard bitmap image. However as the standard bitmap image has been overwritten the legacy application may instead encounter the hybrid image that has replaced the standard bitmap image. Further the legacy application and the API may operate without being aware of the multi frame portion of the hybrid image . In other words the legacy application and the API may not be configured to detect use decode or otherwise interact with the multi frame portion and or with images in multi frame formats.

A bitmap image encoded in the bitmap portion is output without awareness of the multi frame portion block . Continuing the preceding example the legacy application and or the API may reference a standard bitmap image maintained a DLL or other suitable resource. In this example the API used by the legacy application may be a legacy API that does not support the hybrid functionality. In other words the legacy API may not be hybrid aware. However the legacy API may be configured to interact e.g. read decode the bitmap portion of the hybrid image . Accordingly the legacy application and or the legacy API may interact with the hybrid image as though it was a standard bitmap file. For instance the bitmap image encoded in the bitmap portion may be decoded using the imaging component and output as a portion of a user interface legacy application . This interaction occurs without awareness of the multi frame portion of the hybrid image .

Thus the hybrid image format described herein enables legacy applications to interact with hybrid images in a manner comparable to the way legacy applications would interact with a standard bitmap image. Further the legacy application may be used as is to interact with the hybrid images e.g. without having to reconfigure or redevelop the legacy application .

A hybrid image file is obtained having a bitmap portion and a multi frame portion block . For example hybrid aware application may obtain a hybrid image that is maintained as a resource available through an operating system of a computing device. Hybrid image includes bitmap portion and multi frame portion as previously discussed. For the purposes of this discussion assume the hybrid image encodes one or more alternate images for a selectable menu item that may be implemented by a variety of applications .

More particularly hybrid aware application may implement and or interact with an image loading tool as discussed herein to enable hybrid aware functionality. In an example the image loading tool is implemented as an API of operating system that hybrid aware applications may be configured to call. The image loading tool may also be configured as an integrated component of an application and or as a stand alone component of a computing device that is operable with a variety of different applications . Thus through interaction with the image loading tool hybrid aware application may obtain the hybrid image that encodes the alternate images for the selectable menu item. As noted the alternate images encoded in a hybrid image may have a variety of resolutions and include the standard bitmap image.

A determination is made as to whether the multi frame portion encodes one or more image block . For example images processed by the image loading tool may include both hybrid images and other types of images. At least some of these images may be standard bitmap images. Accordingly image loading tool may include functionality to differentiate between hybrid images and standard bitmap images. A variety of techniques maybe used by the image loading tool to detect a hybrid image and or determine when a multi frame portion of the hybrid image encodes images.

In one technique the image loading tool may reference detectable data within encountered images to differentiate between the images. A variety of detectable data is contemplated. For example one or more flag fields or codes may be included in or omitted from the hybrid images when created via creation tool . The image loading tool may detect the existence or absence of such flag fields or codes to differentiate between hybrid images and other type of images. For example one of the additional header fields discussed in reference to TABLE 1 may encode information that is detectable by the image loading tool to differentiate between various images. Thus the detectable data may include specialized fields or codes indicative of whether an image is or is not a hybrid image .

In another example detectable data used by an image loading tool includes various file attributes of encountered images. Such attributes may include but are not limited to file creation or authoring dates file types size information version numbers and the like. A variety of other suitable file attributes are contemplated.

In one example technique involving the use of file attributes size information is used by the image loading tool to compare a bitmap size to an overall size of the file or resource. Size information to determine bitmap size may be included in a standard bitmap as well as in a bitmap portion of a hybrid image .

For instance referring back to the example format of TABLE 1 the size of a bitmap may be arrived at by summing the BITMAPFILEHEADER size BITMAPINFOHEADER biSize value BITMAPINFOHEADER biSizeImage value and the color table size if applicable . Image loading tool may compute the bitmap size from this information. Image loading tool may then compare the computed value to an overall size of the file or resource. This comparison may indicate whether additional information e.g. the multi frame portion has been concatenated to the bitmap image. For instance when the overall size exceeds the bitmap size this is indicative of the file having data defining one or more images contacted to the bitmap. Thus image loading tool may employ a variety of techniques to differentiate between hybrid images and other images and thereby determine when alternate images are available.

When no images are detected a bitmap image encoded in the bitmap portion is output block . In the preceding example when the image loading tool encounters a standard bitmap or when the image loading tool determines that a hybrid image does not encode alternative images a bitmap image may be output. In the case of a hybrid image encountered by the image loading tool this is the bitmap image encoded in the bitmap portion . Accordingly a relatively low resolution image for the selectable menu item may be output for incorporation in the user interface of the hybrid aware application .

When one or more images are detected an image is selected from the one or more images encoded in the multi frame portion block and the selected image is output block . For example the image loading tool may determine through detectable data that the hybrid image encodes data extending beyond the bitmap portion e.g. the multi frame portion . Accordingly the image loading tool may process the multi frame portion in various ways to select an image for the selectable menu item of the continuing example. Once selected the selected image may be decoded and output to an application requesting the image. In this case an image having a relatively high resolution e.g. relatively high compared to the standard bitmap image may be output for the selectable menu item incorporated in the user interface of the hybrid aware application .

The processing to select and or output an image from the multi frame portion may include various interactions with the imaging component . For instance image loading tool may interact with the imaging component to identify an image format of the multi frame portion and or to obtain codecs corresponding to an identified image format . Image loading tool may employ a variety of criteria to select an appropriate image from a plurality of images that may be encoded in a hybrid image .

For instance the image loading tool may be operable to enumerate the available frames in the multi frame portion such as identifying how many frames are provided a resolution for each frame and so forth. It is noted that in creating the multi frame portion the creation tool may include attributes for each frame that the image loading tool may use for the enumeration. For example each frame may include attributes that indicate a native resolution a minimum resolution suitable for the frame and so forth. Further applications may communicate preferences to the image loading tool such as preferred resolution and or formats display capabilities scaling data and so forth.

Accordingly image loading tool may select an appropriate image based on the various criteria which may include but are not limited to the described preferences and enumerated information. In an implementation the image loading tool may be configured to select that highest resolution image available that is suitable based on the criteria. Of course if a suitable image is not available in the multi frame portion image loading tool may instead output the bitmap image encoded in the bitmap portion .

Aspects of a hybrid image format have been described herein that may enable hybrid aware applications to interact with hybrid images in a sophisticated manner and may also enable legacy applications to interact with hybrid images in manner comparable to the way the legacy applications would interact with a standard bitmap image.

Although the hybrid image format techniques have been described in language specific to structural features and or methodological acts it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as example forms of implementing the claimed invention.

