---

title: Adaptive hardware reconfiguration of configurable co-processor cores for hardware optimization of functionality blocks based on use case prediction, and related methods, circuits, and computer-readable media
abstract: Adaptive hardware reconfiguration of configurable co-processor cores for hardware optimization of functionality blocks based on use case prediction, and related methods, circuits, and computer-readable media are disclosed. In one embodiment, an indication of one or more applications for possible execution is received. Execution probabilities for respective ones of the one or more applications are received. One or more mappings of the one or more applications to one or more functionality blocks is accessed, and a net benefit of hardware reconfiguration of one or more configurable co-processor cores of a multicore central processing unit for the one or more functionality blocks is calculated based on the execution probabilities and the mappings. An optimal hardware reconfiguration is determined based on a current hardware configuration and the calculated net benefit. The configurable co-processor cores are reconfigured based on the optimal hardware reconfiguration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286084&OS=09286084&RS=09286084
owner: QUALCOMM Incorporated
number: 09286084
owner_city: San Diego
owner_country: US
publication_date: 20131230
---
The technology of the disclosure relates to reconfiguration of configurable co processor cores in central processing unit CPU based systems.

A central processing unit CPU found in contemporary digital computers may include multiple processor cores or independent processing units for reading and executing program instructions. A multicore CPU combines two or more independent cores into a single package comprised of a single piece integrated circuit IC . Each core may independently implement optimizations such as superscalar execution pipelining and multithreading. A system with N cores is conventionally most effective when it is presented with N or more threads concurrently.

Special purpose processors often referred to as hardware accelerators may be provided to perform certain types of operations. For example a processor executing a program may offload certain types of operations to a hardware accelerator e.g. a graphics accelerator or a floating point accelerator that is configured to efficiently perform those types of operations. Such hardware accelerators may employ specialized hardware to perform some functions faster than is possible in software running on a normal general purpose CPU. The hardware accelerators may also provide improved power consumption compared to software only execution. Hardware accelerators may be designed for computationally intensive software code. Depending upon granularity hardware accelerators can vary from small single functional units to large blocks of multiple functional units.

Recent developments in CPU design have yielded CPUs with configurable co processor cores that may be adaptively reconfigured to provide hardware accelerators. For example a configurable co processor core may be reconfigured based on a particular application that is of immediate interest to a user and that is predicted to be executed by the CPU. The configurable co processor core may initially be configured to provide a hardware accelerator for image processing and then may subsequently be reconfigured to provide a hardware accelerator for collision detection for gaming. Using existing techniques reconfiguration of a configurable co processor core may be initiated manually or may be initiated automatically based on simple hardware counters that track usage of specific hardware accelerators. However automatic reconfiguration of configurable co processor core based on simple hardware counters may not provide a sufficiently accurate model of application usage patterns. Moreover such counter based reconfiguration mechanisms may not provide optimal support for multitasking environments in which multiple concurrently executing applications are simultaneously contending for computing resources of the CPU.

Embodiments of the disclosure provide adaptive hardware reconfiguration of configurable co processor cores for hardware optimization of functionality blocks based on use case prediction. Related methods circuits and computer readable media are also disclosed. In this regard in one embodiment an adaptive hardware reconfiguration circuit is provided. The adaptive hardware reconfiguration circuit includes a profile analysis agent a predictor agent an optimization agent and application to functionality block mappings. The profile analysis agent is configured to provide use case prediction by indicating one or more applications indicated for potential execution by a multicore central processing unit CPU based on an application usage model. The predictor agent generates execution probabilities for the indicated applications and provides the execution probabilities to the optimization agent. Mappings of the indicated applications to corresponding functionality blocks i.e. discrete subsets of program code for providing specific sets of functionality may be accessed by the optimization agent. By taking into account the execution probabilities and the mappings the optimization agent determines a net benefit of reconfiguration of configurable co processor core s of the multicore CPU for each functionality block. In this manner the optimization agent may determine an optimal hardware reconfiguration for one or more configurable co processor cores and may cause configurable co processor cores of a multicore CPU to be reconfigured accordingly.

In another embodiment a method of adaptive hardware reconfiguration of configurable co processor cores of a multicore CPU for hardware optimization of functionality blocks based on use case prediction is provided. The method comprises receiving an indication of one or more applications for possible execution and receiving one or more execution probabilities for respective ones of the one or more applications. The method additionally comprises accessing one or more mappings of the one or more applications to one or more functionality blocks. The method also comprises calculating a net benefit of hardware reconfiguration of one or more configurable co processor cores of a multicore CPU for the one or more functionality blocks based on the one or more execution probabilities and the one or more mappings. The method further comprises determining an optimal hardware reconfiguration of the one or more configurable co processor cores based on a current hardware configuration and the calculated net benefit. The method additionally comprises reconfiguring the one or more configurable co processor cores based on the optimal hardware reconfiguration.

In another embodiment an adaptive hardware reconfiguration circuit configured to provide hardware optimization of functionality blocks based on use case prediction is provided. The adaptive hardware reconfiguration circuit comprises a profile analysis agent configured to indicate one or more applications for possible execution. The multicore CPU further comprises a predictor agent configured to determine one or more execution probabilities for respective ones of the one or more applications. The multicore CPU additionally comprises an optimization agent. The optimization agent is configured to access one or more mappings of the one or more applications to one or more functionality blocks. The optimization agent is further configured to calculate a net benefit of hardware reconfiguration of one or more configurable co processor cores for the one or more functionality blocks based on the one or more execution probabilities and the one or more mappings. The optimization agent is additionally configured to determine an optimal hardware reconfiguration of the configurable co processor cores based on a current hardware configuration and the calculated net benefit. The adaptive hardware reconfiguration circuit also comprises a hardware controller configured to reconfigure the one or more configurable co processor cores based on the optimal hardware reconfiguration.

In another embodiment an adaptive hardware reconfiguration circuit configured to provide hardware optimization of functionality blocks based on use case prediction is provided. The adaptive hardware reconfiguration circuit includes one or more configurable co processor cores and a means for storing one or more mappings of one or more applications to one or more functionality blocks. The adaptive hardware reconfiguration circuit further includes a profile analysis means configured to indicate the one or more applications for possible execution. The adaptive hardware reconfiguration circuit also includes a predictor means configured to determine one or more execution probabilities for respective ones of the one or more applications. The adaptive hardware reconfiguration circuit additionally includes an optimization means configured to access the one or more mappings. The optimization means is further configured to calculate a net benefit of hardware reconfiguration of the one or more configurable co processor cores for the one or more functionality blocks based on the one or more execution probabilities and the one or more mappings. The optimization means is also configured to determine an optimal hardware reconfiguration of the one or more configurable co processor cores based on a current hardware configuration and the calculated net benefit. The adaptive hardware reconfiguration circuit further includes a hardware controller means configured to reconfigure the one or more configurable co processor cores based on the optimal hardware reconfiguration.

In another embodiment a non transitory computer readable medium is provided having stored thereon computer executable instructions to cause a processor to implement a method for adaptive hardware reconfiguration of configurable co processor cores of a multicore CPU for hardware optimization of functionality blocks based on use case prediction. The method implemented by the computer executable instructions comprises receiving an indication of one or more applications for possible execution and receiving one or more execution probabilities for respective ones of the one or more applications. The method implemented by the computer executable instructions additionally comprises accessing one or more mappings of the one or more applications to one or more functionality blocks. The method implemented by the computer executable instructions also comprises calculating a net benefit of hardware reconfiguration of one or more configurable co processor cores of a multicore CPU for the one or more functionality blocks based on the one or more execution probabilities and the one or more mappings. The method implemented by the computer executable instructions further comprises determining an optimal hardware reconfiguration of the one or more configurable co processor cores based on a current hardware configuration and the calculated net benefit. The method implemented by the computer executable instructions additionally comprises reconfiguring the one or more configurable co processor cores based on the optimal hardware reconfiguration.

With reference now to the drawing figures several exemplary embodiments of the present disclosure are described. The word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments.

Embodiments of the disclosure provide adaptive hardware reconfiguration of configurable co processor cores for hardware optimization of functionality blocks based on use case prediction. Related methods circuits and computer readable media are also disclosed. In this regard in one embodiment an adaptive hardware reconfiguration circuit is provided. The adaptive hardware reconfiguration circuit includes a profile analysis agent a predictor agent an optimization agent and application to functionality block mappings. The profile analysis agent is configured to provide use case prediction by indicating one or more applications indicated for potential execution by a multicore central processing unit CPU based on an application usage model. The predictor agent generates execution probabilities for the indicated applications and provides the execution probabilities to the optimization agent. Mappings of the indicated applications to corresponding functionality blocks i.e. discrete subsets of program code for providing specific sets of functionality may be accessed by the optimization agent. By taking into account the execution probabilities and the mappings the optimization agent determines a net benefit of reconfiguration of configurable co processor core s of the multicore CPU for each functionality block. In this manner the optimization agent may determine an optimal hardware reconfiguration for one or more configurable co processor cores and may cause configurable co processor cores of a multicore CPU to be reconfigured accordingly.

In another embodiment a method of adaptive hardware reconfiguration of configurable co processor cores of a multicore CPU for hardware optimization of functionality blocks based on use case prediction is provided. The method comprises receiving an indication of one or more applications for possible execution and receiving one or more execution probabilities for respective ones of the one or more applications. The method additionally comprises accessing one or more mappings of the one or more applications to one or more functionality blocks. The method also comprises calculating a net benefit of hardware reconfiguration of one or more configurable co processor cores of a multicore CPU for the one or more functionality blocks based on the one or more execution probabilities and the one or more mappings. The method further comprises determining an optimal hardware reconfiguration of the one or more configurable co processor cores based on a current hardware configuration and the calculated net benefit. The method additionally comprises reconfiguring the one or more configurable co processor cores based on the optimal hardware reconfiguration.

Before discussing operations of the adaptive hardware reconfiguration circuit disclosed herein beginning with an exemplary wireless mobile device is first described with regard to to illustrate hardware acceleration based on reconfiguration of configurable co processor cores as is known in the art. In this regard shows an exemplary wireless mobile device that may monitor and or communicate with one or more wireless communications systems as is known in the art. The wireless mobile device includes an antenna that receives signals transmitted by base stations and or satellites not shown and that provides a received signal to a receiver RCVR . The receiver processes the received signal and provides samples to an application specific integrated circuit ASIC for further processing. In some embodiments the receiver may filter amplify frequency downconvert and or digitize the received signal as non limiting examples. The ASIC also processes data to be transmitted and provides the data to a transmitter TMTR . The transmitter further processes the data and generates a modulated signal which is transmitted via the antenna . Some embodiments may provide that processing performed by the transmitter comprises converting to analog filtering amplifying and or frequency upconverting the data as non limiting examples. A modem interfaces with the receiver and the transmitter to enable communications by the wireless mobile device .

In the example of the ASIC includes first and second digital signal processor DSP cores and and a multicore CPU . In this configuration the multicore CPU is a multicore processor that includes processor cores N . The ASIC also includes a bus a cross switch a hardware controller an internal memory and an external interface unit . The DSP cores and and the processor cores of the multicore CPU support various functions such as video audio graphics and gaming as non limiting examples. Each processor core N may be a Reduced Instruction Set Computing RISC machine a microprocessor or some other type of processor. The hardware controller controls the operation of processing units e.g. the DSP cores and the processor cores within the ASIC . The internal memory stores data and or program codes used by the processing units within the ASIC . In some embodiments the data and or program codes comprise one or more applications APP S . The external interface unit may interface with other units external to the ASIC . The ASIC is communicatively coupled to an external memory which may store data and or program codes such as one or more applications APP S . The ASIC also communicates with a graphics processing unit GPU for rapidly generating and manipulating images for display.

The ASIC of further includes one or more configurable co processor cores which may be part of a co processor and or may be implemented as one of the processor cores N of the multicore CPU . With various possible usage scenarios for the wireless mobile device the configurability of the configurable co processor core s provides an end user with the flexibility to reconfigure the hardware inside the wireless mobile device similar to choosing the applications running on the wireless mobile device . Reconfiguring the configurable co processor core s appropriately and or adaptively may result in hardware that provides improved or even optimal performance for a use case of current interest. As used herein a use case refers to a specific observed and or predicted flow of usage of one or more of the applications and or one or more constituent functionality blocks of the applications by a user of the wireless mobile device .

The configurable co processor core s may be reconfigured to a desired hardware configuration by acquiring appropriate hardware configuration build files which define how the configurable co processor core s are to be reconfigured to provide a specific hardware optimization. The hardware configuration build files may be obtained by downloading from an online hardware configuration store not shown as a non limiting example. The online hardware configuration store may store all the configuration builds currently available for the configurable co processor core s . These builds can be modified including providing bug fixes for existing builds and or adding new builds in a manner similar to software applications in an application store. Desired hardware configuration build files may also be acquired in other ways including but not limited to copying from a flash drive syncing a device transferring via a universal serial bus USB or other cable and the like.

In one configuration the configurable co processor core s includes a set of field programmable gate arrays FPGAs not shown containing programmable logic components called logic blocks and programmable interconnects. Logic blocks can be programmed to perform the function of basic logic gates or more complex combinational functions such as decoders or simple mathematical functions. The logic blocks also include memory elements which may be simple flip flops or more complete blocks of memories. A hierarchy of programmable interconnects allows the logic blocks to be interconnected. In the example of the hardware controller may use binary data of a downloaded hardware configuration build file from the online hardware configuration store to program the logic blocks and interconnects to implement the logical functions of a selected hardware accelerator corresponding to the hardware configuration build file.

It is to be understood that the ASIC in may include fewer more and or different processing units than those shown in . The number of processing units and the types of processing units included in the ASIC are dependent on various factors such as the communications systems applications and functions supported by the multicore CPU of the wireless mobile device . Although described with reference to wireless mobile devices reconfiguration of co processor cores for general purpose processors according to embodiments disclosed herein may be implemented in desktop environments or other fixed workstations.

Multithreaded operation of the processing units of the ASIC of may be implemented in various ways. For example these techniques may be implemented in hardware firmware software or a combination thereof. For a hardware implementation the multithreaded operation may be implemented within one or more ASICs DSPs programmable logic devices PLDs FPGAs processors controllers micro controllers microprocessors electronic devices or other electronic units designed to perform the functions described herein or a combination thereof. Certain aspects of the multithreaded operation may be implemented with software modules e.g. procedures functions and the like that perform the functions described. In some embodiments the software modules may comprise the one or more applications in the external memory and or the one or more applications in the internal memory and may be executed by a processor e.g. the DSP cores and or and or the multicore CPU . The external memory and or the internal memory may be implemented within the processor or external to the processor.

In the exemplary wireless mobile device of the configurable co processor core s may be reconfigured in response to manual user input. For example a user may select a specific application use case of interest for hardware acceleration from a hardware configuration build store and or may manually select a previously installed hardware accelerator for use. In some embodiments reconfiguration may be initiated automatically based on simple counters that track past usage of specific hardware accelerators. Typically however automatic counter based reconfiguration may provide only a simplistic model of application usage patterns which may not result in efficient automatic reconfiguration. Moreover such counter based automatic reconfiguration may not provide optimal support for multitasking environments in which multiple concurrently executing applications simultaneously contend for computing resources.

Accordingly is provided to illustrate an exemplary adaptive hardware reconfiguration circuit for adaptively reconfiguring the configurable co processor core s of . The adaptive hardware reconfiguration circuit is configured to perform use case prediction based on machine learning of application usage patterns including generating application execution probabilities. The adaptive hardware reconfiguration circuit also maps the applications predicted to execute to their constituent functionality blocks. By taking into the account application execution probabilities and the application to functionality block mappings the adaptive hardware reconfiguration circuit determines a net benefit of reconfiguration of the configurable co processor core s for each functionality block. In this manner the adaptive hardware reconfiguration circuit may determine an optimal hardware reconfiguration for the configurable co processor core s and may cause the configurable co processor core s to be reconfigured accordingly. In some embodiments the configurable co processor core s may be reconfigured to maximize system performance for a predicted use case while some embodiments may provide that the configurable co processor core s are reconfigured to minimize energy usage for the predicted use case.

As seen in the adaptive hardware reconfiguration circuit that provides hardware optimization for functionality blocks may include components of the wireless mobile device of including but not limited to the hardware controller the internal memory the configurable co processor core s and the bus . The adaptive hardware reconfiguration circuit may further include a multicore CPU having processor cores N . In some embodiments the configurable co processor core s may be part of any of the following a subsystem of the multicore CPU the DSP cores the GPU and or any other subsystem in a system on a chip SoC . The adaptive hardware reconfiguration circuit also includes a profile analysis agent and a predictor agent which are communicatively coupled to each other and to one or more of the configurable co processor core s . The adaptive hardware reconfiguration circuit additionally includes an optimization agent that is communicatively coupled to the predictor agent and that is further communicatively coupled to the bus . In this manner the optimization agent may communicate with other system elements including the hardware controller the internal memory and the configurable co processor core s .

As discussed in greater detail below the adaptive hardware reconfiguration circuit may also include an application to functionality block translation table which in some embodiments is stored in the internal memory . It is to be understood that some embodiments may provide that the application to functionality block translation table is stored in any other type of memory accessible by the multicore CPU such as the external memory of . The application to functionality block translation table maps individual applications such as the applications of to constituent functionality blocks. As used herein a functionality block refers to a discrete subset of program code that provides a specific set of functionality to one or more applications and that is potentially hardware accelerable. Functionality blocks may include program code for providing collision detection functionality edge detection functionality image handling e.g. image rotation functionality speech recognition functionality speech to text functionality and or navigational functionality as non limiting examples.

Some embodiments may provide that a given application may include a single functionality block or may comprise multiple functionality blocks. Conversely a given functionality block may be used by a single application or may be employed by multiple applications. Accordingly the application to functionality block translation table may provide one to one one to many many to one and or many to many mappings between the applications and the functionality blocks. The application to functionality block translation table may be automatically generated using run time profiling data and or may be generated based on descriptor files accompanying a hardware configuration build file. In some embodiments the application to functionality block translation table may also provide information mapping individual applications to specific application programming interface API calls.

The exemplary application to functionality block translation table also includes optional usage time indicators which represent percentages of execution times that each of the applications has historically spent using a corresponding one of the functionality blocks . For instance the mapping of the application to functionality block translation table indicates that 30 of execution time for application TR GAME has been spent using functionality block COLLISION DETECTION. In some embodiments the usage time indicators may comprise static usage time indicators that are derived based on profiling application usage of a plurality of users. Some embodiments may provide that the usage time indicators may be dynamically updated based on run time application usage profiling. Dynamically updated usage time indicators may be based on an average value of past usage on most frequently used applications MFU on most recently used applications MRU or on a weighted combination of MFU and MRU.

To better illustrate exemplary communications flows among the elements of the adaptive hardware reconfiguration circuit of for providing hardware optimization of functionality blocks based on use case prediction is provided. For the sake of clarity elements of are referenced in describing . In the profile analysis agent the predictor agent the application to functionality block translation table the optimization agent the hardware controller and the configurable co processor core s of the adaptive hardware reconfiguration circuit are each represented by vertical dotted lines.

In the example of communications flows begin with the profile analysis agent which provides an use case prediction to identify one or more of the applications that are most likely to be used next by a user of a device not shown incorporating the adaptive hardware reconfiguration circuit . The profile analysis agent may employ an application usage model which incorporates a pattern of usage of the applications in order to predict a probability of future usage. The application usage model may include any type of classifier such as a graphical model e.g. a Bayesian network or logistic regression for outputting a probability of application usage.

In some embodiments the application usage model may be developed by the profile analysis agent or other elements of the adaptive hardware reconfiguration circuit based on monitoring application usage patterns for a specific user not shown . Application usage patterns incorporated into the application usage model may include a frequency of usage of one or more of the applications a frequency of usage of one or more of the functionality blocks a time of usage of one or more of the applications a location of usage of one or more of the applications an availability of network resources or a correspondence between a usage of two or more of the applications as non limiting examples. For instance application usage by day of week time of day location and or availability of network access may be monitored and used to generate the application usage model . The application usage model may also take into account a tendency of a user to access specific applications in conjunction with one another e.g. starting an image viewer application shortly after starting a camera application . In some embodiments the profile analysis agent may further incorporate global events i.e. detected events external to the wireless mobile device into the application usage model . In this manner the application usage model may determine a relationship between a global event and a usage of an application . For example an ongoing football game may be related to a greater likelihood of a streaming video application being executed while a nearby parade may be related to a greater probability of a camera application being executed. The profile analysis agent may also incorporate data from additional sources such as a user s calendar and or a user s schedule planner as non limiting examples.

According to some embodiments the application usage model may further be based in whole or in part on an average learned model . The average learned model may be provided e.g. obtained via download or hardcoded as a default model as a seed to initialize the application usage model and may be based on anonymized application usage data for multiple users. In this manner the average learned model may provide a coarse non personalized model for application usage that may later be refined by the profile analysis agent as the profile analysis agent monitors usage patterns for a specific user over time.

Based on the application usage model the profile analysis agent provides an indication of one or more of the applications for possible execution to the predictor agent . The indication represents the use case prediction made by the profile analysis agent . Based on the indication the predictor agent then determines specific relative execution probabilities for each of the one or more applications that are suggested by the indication of the profile analysis agent as being candidates for execution. As a non limiting example the execution probabilities determined by the predictor agent may be based on a current state of application usage as it corresponds to a known application usage pattern. In some embodiments functionality of the profile analysis agent and the predictor agent may be provided by a single agent.

The execution probabilities for the one or more applications indicated by the indication are then provided to the optimization agent which is responsible for determining an optimal hardware reconfiguration . The optimization agent makes this determination by accessing the application to functionality block translation table to determine one or more mappings of the one or more applications to one or more functionality blocks . The mappings enable the optimization agent to ascertain which functionality blocks constitute the one or more applications indicated by the indication .

Based on the execution probabilities and the mappings the optimization agent next calculates a net benefit of hardware reconfiguration for each of the functionality blocks corresponding to the one or more applications indicated by the indication . In some embodiments the net benefit may be further based on one or more reconfigurability indices for the functionality blocks constituting the one or more applications . The reconfigurability indices may represent a relative benefit of reconfiguration for each of the functionality blocks . In some embodiments the benefit of reconfiguration represented by the reconfigurability indices may be defined as a maximization of system performance or a minimization of energy consumption as non limiting examples. Various approaches for calculating the reconfigurability indices are discussed in greater detail below.

In some embodiments the net benefit may be calculated by comparing products of the execution probabilities and corresponding reconfigurability indices . In this manner the net benefit may be based on the likelihood of each application being executed multiplied by the benefit of reconfiguration for each of the functionality blocks used by the applications . For example applications A B and C may be associated with execution probabilities P P and P respectively and may further be associated with reconfigurability indices R R and R respectively. Accordingly the net benefit may be determined by comparing the products P R P R and P R with the product having the greatest value representing the greatest net benefit .

According to some embodiments disclosed herein the net benefit may be determined based on a product of respective execution probabilities for the applications and the usage time indicators for each of the functionality blocks used by the applications . For instance mapping in the application to functionality block translation table of indicates that the functionality block COLLISION DETECTION used by the application TR GAME has a usage time indicator of 0.3. If the execution probability for the application TR GAME is determined to be 0.7 a net execution probability for the functionality block COLLISION DETECTION may be determined by multiplying the execution probability of 0.7 by the usage time indicator 0.3. In this example the resulting net execution probability for the functionality block COLLISION DETECTION is 0.21 which may be used for determining the net benefit .

Some embodiments may provide that the net benefit is further based on a cost of hardware reconfiguration. The cost may include a processing cost a resource cost a time cost and or an energy cost for obtaining a particular hardware accelerator and or implementing a hardware reconfiguration of the configurable co processor core s . Taking the cost of hardware reconfiguration into account as part of the net benefit may enable the optimization agent to more accurately determine the optimal hardware reconfiguration for the configurable co processor core s . In some embodiments the optimization agent may also base the optimal hardware reconfiguration on a user confirmation of the reconfiguration. As non limiting examples the optimization agent may prompt the user for confirmation or authorization before performing a reconfiguration.

After determining the net benefit the optimization agent determines the optimal hardware reconfiguration based on the net benefit and optionally the reconfigurability indices the cost and or a user confirmation and a current hardware configuration . In the example of the current hardware configuration is provided by the hardware controller to the optimization agent and may indicate one or more hardware accelerators currently in use. The optimization agent provides the optimal hardware reconfiguration to the hardware controller . Based on the optimal hardware reconfiguration the hardware controller issues one or more reconfiguration commands to reconfigure the configurable co processor core s . In some embodiments reconfiguring the configurable co processor core s comprises reconfiguring the configurable co processor core s to operate as a hardware accelerator for optimal execution of the one or more functionality blocks for which the greatest net benefit was determined.

To illustrate exemplary operations for providing adaptive hardware reconfiguration of configurable co processor cores for hardware optimization of functionality blocks based on use case prediction is provided. For the sake of clarity elements of are referenced in describing . In operations begin with the adaptive hardware reconfiguration circuit of receiving an indication of one or more applications for possible execution block . In some embodiments the indication of the one or more applications for possible execution may be provided by the profile analysis agent . The indication represents the use case prediction made by the profile analysis agent . The use case prediction may be based on the personalized application usage model and or the average learned model as non limiting examples.

The adaptive hardware reconfiguration circuit next receives one or more execution probabilities for respective ones of the one or more applications block . Each of the one or more execution probabilities represents a relative likelihood of execution of the corresponding one or more applications that are indicated as candidates for execution. Some embodiments may provide that the execution probabilities are provided by the predictor agent of the adaptive hardware reconfiguration circuit based on a current state of application usage as it corresponds to a known application usage pattern. In some embodiments the optimization agent of the adaptive hardware reconfiguration circuit receives the one or more execution probabilities from the predictor agent .

The adaptive hardware reconfiguration circuit then accesses the one or more mappings of the one or more applications to one or more functionality blocks block . In some embodiments the adaptive hardware reconfiguration circuit may access the one or more mappings using the application to functionality block translation table . Some embodiments may provide that accessing the one or more mappings is carried out by the optimization agent of the adaptive hardware reconfiguration circuit . The mappings enable the optimization agent to determine which functionality blocks constitute the one or more applications indicated by the indication .

The adaptive hardware reconfiguration circuit next calculates a net benefit of hardware reconfiguration of the one or more configurable co processor cores of the multi core CPU for the one or more functionality blocks based on the one or more execution probabilities and the one or more mappings block . According to some embodiments described herein the net benefit may be calculated by comparing products of the execution probabilities and corresponding reconfigurability indices for the one or more functionality blocks where the reconfigurability indices indicate a benefit of reconfiguration for the functionality blocks . Thus the net benefit may be based on a probability of an application being executed multiplied by the benefit of reconfiguration for the functionality block used by the application .

The adaptive hardware reconfiguration circuit next determines an optimal hardware reconfiguration of the one or more configurable co processor cores based on a current hardware configuration and the calculated net benefit block . The adaptive hardware reconfiguration circuit then reconfigures one or more configurable co processor core s based on the optimal hardware reconfiguration block . In some embodiments reconfiguring the one or more configurable co processor cores comprises reconfiguring the one or more configurable co processor cores to operate as a hardware accelerator for optimal execution of the one or more functionality blocks . The hardware accelerator may be one of one or more hardware accelerators that are manually designated by a user as preferred accelerators and or may be automatically selected from among available hardware accelerators.

As noted above the net benefit of hardware reconfiguration that is determined by the optimization agent of the adaptive hardware reconfiguration circuit may be based in part on one or more reconfigurability indices . Each of the reconfigurability indices may be associated with one of the functionality blocks and may represent a relative benefit of reconfiguration for the corresponding one of the functionality blocks . In some embodiments the benefit of reconfiguration represented by the reconfigurability indices may be defined as a maximization of system performance or a minimization of energy consumption as non limiting examples. Accordingly the specific reconfigurability indices employed by the embodiments disclosed herein may vary depending on design goals and constraints.

In this regard illustrates an exemplary probability density function for application execution over time which may be used by the adaptive hardware reconfiguration circuit of as a basis for calculating the reconfigurability indices . In a probability density function x t for execution time of an application APPis plotted on two axes a vertical axis of frequency f of application use and a horizontal axis of time t . A resulting curve represents the frequency of use of application APPover time.

According to some embodiments described herein the reconfigurability indices may be calculated with the goal of maximizing system performance. To determine a reconfigurability index Rindicating an expected system performance gain for the application APPresulting from reconfiguration assume that s represents a multiplier indicating a performance gain of reconfiguration for the application APP compared to a purely software implementation of the application APP. For example a value of 1.5 for s would indicate that reconfiguration of the configurable co processor core s as a hardware accelerator would result in the application APPperforming 1.5 times as fast as a purely software implementation of APP. The reconfigurability index Rfor application APPcould thus be calculated using the following integral 

In some embodiments use of a hardware accelerator may result in a performance gain during only a portion of the execution time of the application APP. For example a hardware accelerator may boost the performance of a specific one of the functionality blocks associated with the application APP where the associated one of the functionality blocks has a usage time indicator of less than 1.0. In such embodiments the reconfigurability index Rmay be calculated by an integral such as the following in which p represents the percentage of the application APPreceiving a performance boost 

Depending on design goals and constraints some embodiments may require that the benefit of reconfiguration represented by the reconfigurability indices be defined as a reduction of energy consumption by the application APP. Accordingly a reconfigurability index Rmay indicate an expected energy conservation for the application APPresulting from reconfiguration. For example assume that E t p s represents an energy conservation due to using the reconfigured configurable co processor core s as a hardware accelerator for t seconds. In this example p represents a percentage of application APPbenefiting from energy conservation and s represents a multiplier indicating the degree of energy conservation from using the hardware accelerator relative to a purely software implementation of application APP i.e. an improvement in an energy consumption factor . The reconfigurability index Rmay thus be calculated using the following integral 

The reconfigurability index R in some embodiments may expressly take into account the power consumption of executing the application APPusing the multicore CPU versus the power consumption of executing the application APPon the reconfigured configurable co processor core s . The reconfigurability index Rmay also incorporate the energy cost of reconfiguration in determining the benefit of reconfiguration. Assume that PC represents the power consumption of the application APPwhen executing on the multicore CPU and PR represents the power consumption of the application APPwhen executing using the reconfigured configurable co processor core s . Assume further that EC represents the energy cost of reconfiguring the configurable co processor core s . The reconfigurability index Rmay be expressed using the following integral 

It is to be understood that the reconfigurability indices Rand Rrepresent non limiting examples of the reconfigurability indices . The benefit of reconfiguration represented by the reconfigurability indices may vary based on the specific embodiment in which the reconfigurabilitiy indices are utilized. Accordingly operations for calculating the reconfigurability indices may incorporate other optimization variables instead of or in addition to the variables discussed above.

As discussed above exemplary embodiments of the application to functionality block translation table may map multiple applications to multiple functionality blocks i.e. may contain many to many mappings . In this regard illustrates an exemplary many to many application to functionality block translation table that may be utilized by the adaptive hardware reconfiguration circuit of . The many to many application to functionality block translation table includes mappings representing mappings of applications to functionality blocks . In the example of each of the applications may utilize multiple accelerable functionality blocks and each of the functionality blocks may be utilized by multiple applications . For instance mappings indicate that application APPmakes use of functionality blocks BLOCK BLOCK and BLOCK respectively. Application APPalso makes use of BLOCKas well as BLOCK as indicated by mappings and . Mappings and map application APPto BLOCKand BLOCK respectively while mapping maps application APPto BLOCK. The many to many application to functionality block translation table also includes usage time indicators for indicating a percentage of execution time spent by each application in the corresponding functionality blocks .

As seen in the applications may have common functionality blocks that may be hardware accelerated. Accordingly the adaptive hardware reconfiguration circuit may determine the net benefit of by calculating a sum of net execution probabilities for each functionality block . For example assume that APPhas an execution probability of 0.5 and APPhas an execution probability of 0.25. Based on the mappings for applications APPand APP the summed net execution probabilities P P P and Pfor functionality blocks BLOCK BLOCK BLOCK and BLOCK respectively may be determined as follows 0.5 0.5 0.25 0.5 0.3 0.25 0.8 0.15 0.2 0.35 0.5 0.1 0.05 0.25 0.1 0.025

Likewise the adaptive hardware reconfiguration circuit may determine the net benefit by calculating a sum of the reconfigurability indices for each functionality block in a similar fashion. In this manner the many to many application to functionality block translation table may be utilized by the adaptive hardware reconfiguration circuit to automatically handle application optimization in a multitasking environment.

In some embodiments the determination of an optimal hardware reconfiguration by the adaptive hardware reconfiguration circuit may be more strongly influenced by an application category to which a predicted application belongs rather than the specific predicted application itself. A user may execute different applications over time but the different applications may still tend to have the same hardware acceleration requirements and thus may benefit from the same hardware reconfiguration. For example a user may frequently switch between action games that employ collision detection or may replace a default camera application that uses photograph functionality with a different camera application that uses the same photograph functionality. Accordingly to more efficiently determine the optimal hardware reconfiguration applications may be mapped into one or more application categories which themselves are mapped to one or more functionality blocks. The one or more mappings of may then be based on these application to application category mappings and application category to functionality block mappings. In this manner the adaptive hardware reconfiguration circuit may efficiently provide the optimal hardware reconfiguration for an application belonging to a known application category even if usage of that specific application has not been incorporated into the application usage model .

In this regard illustrates an exemplary application to application category translation table for mapping applications to corresponding application categories. Similarly illustrates an exemplary application category to functionality block translation table for mapping application categories to corresponding functionality blocks. The application to application category translation table of and the application category to functionality block translation table of may be used together by the adaptive hardware reconfiguration circuit of to access application to functionality block mappings.

In an application to application category translation table includes mappings representing mappings of applications to application categories . In the example of mappings and indicate that applications NEED FOR SPEED and AGE OF EMPIRES respectively belong to application category GAMES COLLISION PHYSICS. Similarly mappings and indicate that applications CHESS and SODUKO respectively belong to application category GAMES PUZZLE and mappings and indicate that applications CAMERA and INSTAGRAM respectively belong to category CAMERA IMAGES. 

Referring now to an application category to functionality block translation table includes mappings that represent mappings of application categories corresponding to the application categories of to functionality blocks . As seen in the mapping indicates that the application category GAMES COLLISION PHYSICS is mapped to the functionality block BLOCK which may provide collision detection functionality. Likewise the mapping indicates that the application category GAMES PUZZLE is mapped to the functionality block BLOCKproviding game logic functionality and the mapping indicates that the application category CAMERA IMAGE is mapped to the functionality block BLOCKproviding photograph functionality.

In operations begin with the adaptive hardware reconfiguration circuit of optionally receiving an average learned model comprising anonymized application usage data block . In some embodiments the average learned model may be received by the profile analysis agent of the adaptive hardware reconfiguration circuit . The average learned model may be obtained via download or may be hardcoded as a default mode and may be used as a seed to initialize the application usage model used by the profile analysis agent .

The adaptive hardware reconfiguration circuit next receives an indication of one or more applications for possible execution block . In some embodiments the indication of the one or more applications for possible execution may be provided by the profile analysis agent . The indication represents the use case prediction made by the profile analysis agent . The use case prediction may optionally be based on the average learned model as non limiting examples.

The adaptive hardware reconfiguration circuit then receives one or more execution probabilities for respective ones of the one or more applications block . Each of the one or more execution probabilities represents a relative likelihood of execution of the corresponding one or more applications that are indicated as candidates for execution. Some embodiments may provide that the execution probabilities are provided by the predictor agent of the adaptive hardware reconfiguration circuit based on a current state of application usage as it corresponds to a known application usage pattern. In some embodiments the optimization agent of the adaptive hardware reconfiguration circuit receives the one or more execution probabilities from the predictor agent .

The adaptive hardware reconfiguration circuit then accesses one or more mappings of the one or more applications to one or more functionality blocks block . Some embodiments may provide that accessing the one or more mappings is carried out by the optimization agent of the adaptive hardware reconfiguration circuit . The mappings enable the optimization agent to determine the functionality blocks constituting the one or more applications indicated by the indication . In some embodiments the adaptive hardware reconfiguration circuit may access the one or more mappings using the application to functionality block translation table . According to some embodiments described herein the one or more mappings may be accessed by accessing the application to application category translation table and the application category to functionality block translation table of respectively.

The adaptive hardware reconfiguration circuit optionally calculates a cost of hardware reconfiguration block . The cost may include a processing cost a resource cost a time cost and or an energy cost for obtaining a particular hardware accelerator and or implementing a hardware reconfiguration of the configurable co processor core s . The adaptive hardware reconfiguration circuit may also calculate one or more reconfigurability indices indicating a relative benefit of reconfiguration for each of the one or more functionality blocks block . The reconfigurability indices may represent a relative benefit of reconfiguration for each of the functionality blocks . Some embodiments may provide that the benefit of reconfiguration represented by the reconfigurability indices is defined as a maximization of system performance or a minimization of energy consumption as non limiting examples.

The adaptive hardware reconfiguration circuit next calculates a net benefit of hardware reconfiguration of the one or more configurable co processor cores of the multicore CPU for the one or more functionality blocks of the one or more applications based on the one or more execution probabilities and the one or more mappings block . The net benefit may optionally be further based on the cost the reconfigurability indices and or a usage time indicator indicated by the one or more mappings . Processing then continues at block of .

Referring now to the adaptive hardware reconfiguration circuit determines an optimal hardware reconfiguration of the one or more configurable co processor cores based on a current hardware configuration and the calculated net benefit block . In some embodiments the current hardware configuration may be provided by the hardware controller and may indicate one or more hardware accelerators currently in use. The adaptive hardware reconfiguration circuit may optionally receive a user confirmation of reconfiguration block . For example the optimization agent of the adaptive hardware reconfiguration circuit may prompt the user for confirmation or authorization before performing a reconfiguration.

The adaptive hardware reconfiguration circuit then reconfigures the one or more configurable co processor cores based on the optimal hardware reconfiguration block . In some embodiments reconfiguring the one or more configurable co processor cores comprises reconfiguring the one or more configurable co processor cores to operate as a hardware accelerator for optimal execution of the one or more functionality blocks . The hardware accelerator may be one of one or more hardware accelerators that are manually designated by a user as preferred accelerators and or may be automatically selected from among available hardware accelerators.

In some embodiments the adaptive hardware reconfiguration circuit may determine whether an application misprediction has occurred i.e. whether the currently executing application is one that benefits from the optimal hardware reconfiguration block . If not processing resumes at block . However if it is determined at decision block that an application misprediction has occurred the adaptive hardware reconfiguration circuit may perform a cost benefit analysis and may reconfigure the configurable co processor core s if necessary block . Some embodiments may provide that the process of carrying out an analysis of the costs and benefits of reconfiguration may be similar to operations for generating the net benefit except that the analysis is based on the currently executing application rather than a predicted application. In some embodiments the process of performing the cost benefit analysis may include mapping the currently executing application to one or more functionality blocks using for example the application to functionality block translation table . After reconfiguration based on the coast benefit analysis performed in block if necessary the configurable co processor core s then performs hardware acceleration according to the current configuration block .

The adaptive hardware reconfiguration circuit may then optionally update the usage time indicator based on run time application usage profiling block . In some embodiments the usage time indicator may be updated based on an average value of past usage on MFU on MRU or on a weighted combination of MFU and MRU. Other learning prediction and or modeling techniques may also be used to update the usage time indicator .

The adaptive hardware reconfiguration circuit for providing adaptive hardware reconfiguration of configurable co processor cores according to embodiments disclosed herein may be provided in or integrated into any processor based device. Examples without limitation include a set top box an entertainment unit a navigation device a communications device a fixed location data unit a mobile location data unit a mobile phone a cellular phone a computer a portable computer a desktop computer a personal digital assistant PDA a monitor a computer monitor a television a tuner a radio a satellite radio a music player a digital music player a portable music player a digital video player a video player a digital video disc DVD player and a portable digital video player.

In this regard illustrates an example of a processor based system that can employ the adaptive hardware reconfiguration circuit illustrated in . In this example the processor based system includes the multicore CPU of . The multicore CPU may implement the adaptive hardware reconfiguration circuit in whole or in part. The multicore CPU may have cache memory for rapid access to temporarily stored data. The multicore CPU is coupled to a system bus and can intercouple master and slave devices included in the processor based system . As is well known the multicore CPU communicates with these other devices by exchanging address control and data information over the system bus . For example the multicore CPU can communicate bus transaction requests to a memory controller as an example of a slave device. Although not illustrated in multiple system buses could be provided.

Other master and slave devices can be connected to the system bus . As illustrated in these devices can include a memory system one or more input devices one or more output devices one or more network interface devices and one or more display controllers as examples. The input device s can include any type of input device including but not limited to input keys switches voice processors etc. The output device s can include any type of output device including but not limited to audio video other visual indicators etc. The network interface device s can be any device s configured to allow exchange of data to and from a network . The network can be any type of network including but not limited to a wired or wireless network a private or public network a local area network LAN a wide local area network WLAN and the Internet. The network interface device s can be configured to support any type of communications protocol desired. The memory system can include one or more memory units N .

The multicore CPU may also be configured to access the display controller s over the system bus to control information sent to one or more displays . The display controller s sends information to the display s to be displayed via one or more video processors which process the information to be displayed into a format suitable for the display s . The display s can include any type of display including but not limited to a cathode ray tube CRT a liquid crystal display LCD a plasma display etc.

Those of skill in the art will further appreciate that the various illustrative logical blocks modules circuits and algorithms described in connection with the embodiments disclosed herein may be implemented as electronic hardware instructions stored in memory or in another computer readable medium and executed by a processor or other processing device or combinations of both. The master devices and slave devices described herein may be employed in any circuit hardware component integrated circuit IC IC chip or semiconductor die as examples. Memory disclosed herein may be any type and size of memory and may be configured to store any type of information desired. To clearly illustrate this interchangeability various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. How such functionality is implemented depends upon the particular application design choices and or design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present disclosure.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a processor a DSP an Application Specific Integrated Circuit ASIC an FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The embodiments disclosed herein may be embodied in hardware and in instructions that are stored in hardware and may reside for example in Random Access Memory RAM flash memory Read Only Memory ROM Electrically Programmable ROM EPROM Electrically Erasable Programmable ROM EEPROM registers hard disk a removable disk a CD ROM or any other form of computer readable medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a remote station. In the alternative the processor and the storage medium may reside as discrete components in a remote station base station or server.

It is also noted that the operational steps described in any of the exemplary embodiments herein are described to provide examples and discussion. The operations described may be performed in numerous different sequences other than the illustrated sequences. Furthermore operations described in a single operational step may actually be performed in a number of different steps. Additionally one or more operational steps discussed in the exemplary embodiments may be combined. It is to be understood that the operational steps illustrated in the flow chart diagrams may be subject to numerous different modifications as will be readily apparent to one of skill in the art. Those of skill in the art would also understand that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

The previous description of the disclosure is provided to enable any person skilled in the art to make or use the disclosure. Various modifications to the disclosure will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other variations without departing from the spirit or scope of the disclosure. Thus the disclosure is not intended to be limited to the examples and designs described herein but rather is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

