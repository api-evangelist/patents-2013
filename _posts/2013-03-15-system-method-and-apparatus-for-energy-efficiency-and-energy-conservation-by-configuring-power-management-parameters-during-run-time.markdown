---

title: System, method and apparatus for energy efficiency and energy conservation by configuring power management parameters during run time
abstract: According to one embodiment of the invention, an integrated circuit device at least one compute engine and a control unit. Coupled to the compute engine(s), the control unit is adapted to dynamically control an energy-efficient operating setting of at least one power management parameter for the integrated circuit device after execution of Basic Input/Output System (BIOS) has already completed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09360909&OS=09360909&RS=09360909
owner: Intel Corporation
number: 09360909
owner_city: Santa Clara
owner_country: US
publication_date: 20130315
---
This application claims priority to Provisional Patent Application No. 61 635 817 entitled System Method and Apparatus For Energy Efficiency And Energy Conservation By Configuring Power Management Parameters During Run Time filed Apr. 19 2012 and is hereby incorporated by reference in its entirety into this application.

Embodiments of the invention pertain to energy efficiency and energy conservation in integrated circuits as well as code to execute thereon and in particular but not exclusively to run time programmability of various power management parameters.

Advances in semiconductor processing and logic design have permitted an increase in the amount of logic that may be present on integrated circuit devices. As a result computer system configurations have evolved from a single or multiple integrated circuits in a system to multiple hardware threads multiple cores multiple devices and or complete systems on individual integrated circuits. Additionally as the density of integrated circuits has grown the power requirements for computing systems from embedded systems to servers have also escalated. Furthermore software inefficiencies and its requirements of hardware have also caused an increase in computing device energy consumption. In fact some studies indicate that computing devices consume a sizeable percentage of the entire electricity supply for a country such as the United States of America. As a result there is a vital need for energy efficiency and conservation associated with integrated circuits. These needs will increase as servers desktop computers notebooks ultrabooks tablets mobile phones processors embedded systems etc. become even more prevalent from inclusion in the typical computer automobiles and televisions to biotechnology .

As general background controlling power consumption in microprocessors and other integrated circuit devices has increased in importance especially with the greater use of mobile devices. Some prior art techniques for managing processor power consumption have not adequately provided a dynamic scheme for setting various power management parameters relied upon by an integrated circuit device such as a processor. The lack of a dynamic setting scheme for various power management parameters other than the Thermal Design Power TDP parameter not only lessens the actual power savings realized but also restricts the ability of Original Equipment Manufacturers OEMs to design products that can temporarily operate outside specifications established by the processor manufacturer such as Intel Corporation of Santa Clara Calif.

Herein certain embodiments of the invention relate to an integrated circuit device adapted to dynamically monitor and adjust parameters relied upon for power management during run time of an electronic device implemented with the integrated circuit namely after Basic Input Output System BIOS has completed and the operating system OS is in control of the electronic device. These power management parameters may include but are not limited or restricted to 1 a parameter Icc representing a maximum current level that can be used by the integrated circuit device in a certain operating mode 2 a parameter accounting for dynamic changes in load line impedance Load Line as detected by logic within the electronic device and 3 a parameter Max Ratio setting an overclocking condition optionally accompanied with an application of additional voltage. Through compliance with these dynamically adjustable power management parameters for a processor for example power conservation may be realized.

A corresponding method for dynamically adjusting power management parameters and an electronic device implementing such integrated circuit devices is also described herein.

In the following description certain terminology is used to describe certain features of the invention. For example the term integrated circuit device generally refers to any integrated circuit or collection of integrated circuits that are adapted to control its performance and thus its power usage using one or more power management parameters that are dynamically adjustable during run time. The power management parameters e.g. maximum current level maximum ratio for overclocking etc. are set through the use of storage elements that are software accessible such as machine specific registers MSRs for example. For instance the maximum current level may be set through the use of PP CURRENT CONFIG and PP CURRENT CONFIG registers described below. Examples of an integrated circuit device may include but are not limited or restricted to a processor e.g. a single or multi core microprocessor a digital signal processor DSP or any special purpose processor such as a network processor co processor graphics processor embedded processor a microcontroller an application specific integrated circuit ASIC a memory controller an input output I O controller or the like.

Furthermore the term logic constitutes hardware and or software. As hardware logic may include processing circuitry e.g. a controller processor an application specific integrated circuit etc. semiconductor memory combinatorial logic or the like. As software the logic may be one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an object method implementation an applet a servlet a routine a source code an object code firmware a shared library dynamic load library or one or more instructions.

It is contemplated that these software modules may be stored in any type of suitable non transitory storage medium or transitory computer readable transmission medium. Examples of non transitory storage medium may include but are not limited or restricted to a programmable circuit a semiconductor memory such as a volatile memory such as random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive. Examples of transitory storage medium may include but are not limited or restricted to electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals and digital signals.

The term interconnect is broadly defined as a logical or physical communication path for information. This interconnect may be established using any communication medium such as a wired physical medium e.g. a bus one or more electrical wires trace cable etc. or a wireless medium e.g. air in combination with wireless signaling technology .

Lastly the terms or and and or as used herein are to be interpreted as inclusive or meaning any one or any combination. Therefore the phrases A B or C and A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

Referring now to an exemplary block diagram of an electronic device which is implemented with one or more integrated circuit devices with run time adjustable power management parameters is shown. Herein electronic device is realized for example as a notebook type personal computer. However it is contemplated that electronic device may be a desktop computer a television a portable device or an embedded application. Examples of a portable device may include but is not limited or restricted to a cellular telephone any portable computer including a tablet computer an Internet Protocol IP device a digital camera a personal digital assistant PDA a video game console a portable music player or a digital camera. An example of an embedded application typically includes a microcontroller a digital signal processor DSP a system on a chip network computers NetPC set top boxes network hubs wide area network WAN switches or any other system that can perform the functions and operations taught below.

As will become readily apparent in the description below the embodiments of methods electronic devices and systems described herein whether in reference to hardware firmware software or a combination thereof are vital to a green technology future such as for power conservation and energy efficiency in products that encompass a large portion of the US economy.

As shown in electronic device includes a housing and a display unit . According to this embodiment of the invention display unit includes a liquid crystal display LCD which is built into display unit . According to one embodiment of the invention display unit may be rotationally coupled to housing so as to rotate between an open position where a top surface of housing is exposed and a closed position where top surface of housing is covered. According to another embodiment of the invention display unit may be integrated into housing .

Referring still to housing may be configured as a box shaped housing. According to one embodiment of the invention an input device is disposed on top surface of housing . As shown input device may be implemented as a keyboard and or a touch pad . Although not shown input device may be touch screen display that is integrated into housing or input device may be a remote controller if electronic device is a television.

Other features include a power button for powering on off electronic device and speakers and disposed on top surface of housing . At a side surface of housing is provided a connector for downloading or uploading information and or applying power . According to one embodiment connector is a Universal Serial Bus USB connector although another type of connector may be used.

As an optional feature another side surface of electronic device may be provided with high definition multimedia interface HDMI terminal which support the HDMI standard a DVI terminal or an RGB terminal not shown . The HDMI terminal and DVI terminal are used in order to receive or output digital video signals with an external device.

Referring now to a first exemplary block diagram of the system architecture implemented within electronic device of is shown. Herein electronic device comprises one or more processors and . Processor is shown in dashed lines as an optional feature as electronic device may be adapted with a single processor as described below. Any additional processors such as processor may have the same or different architecture as processor or may be an element with processing functionality such as an accelerator field programmable gate array FPGA DSP or the like.

Herein processor comprises an integrated memory controller not shown and thus is coupled to memory e.g. non volatile or volatile memory such as a random access memory RAM . Furthermore processor is coupled to a chipset e.g. Platform Control Hub PCH which may be adapted to control interaction between processor s and and memory and incorporates functionality for communicating with a display device e.g. integrated LCD and peripheral devices e.g. input device of wired or wireless modem etc. . Of course it is contemplated that processor may be adapted with a graphics controller not shown so that display device may be coupled to processor via a Peripheral Component Interconnect Express PCI e port .

Referring now to a second exemplary block diagram of the system architecture implemented within electronic device of is shown. Herein electronic system is a point to point interconnect system and includes first processor and second processor coupled via a point to point P P interconnect . As shown processors and or may be some version of processors and or of or alternatively processor and or may be an element other than a processor such as an accelerator or FPGA.

First processor may further include an integrated memory controller hub IMC and P P circuits and . Similarly second processor may include an IMC and P P circuits and . Processors and may exchange data via a point to point P P interface using P P circuits and . As further shown in IMC and IMC couple processors and to their respective memories namely memory and memory which may be portions of main memory locally attached to respective processors and .

Processors and may each exchange data with a chipset via interfaces and using P P circuits and . Chipset may be coupled to a first bus via an interface . In one embodiment first bus may be a Peripheral Component Interconnect Express PCI e bus or another third generation I O interconnect bus although the scope of the present invention is not so limited.

Referring to a first exemplary block diagram of an integrated circuit device supporting a dynamic power management parameter adjustment scheme is shown. Herein integrated circuit device constitutes multi core processor which is partitioned to include a plurality of power planes and . Power plane comprises a first compute engine that includes multiple N 2 processor cores . However it is contemplated that first compute engine may include a single processor core and or elements with processing functionality other than a processor core.

Herein a control unit referred to herein the system agent SA is implemented on first power plane . System agent is responsible for adjusting frequency and voltage applied to power planes and . Moreover system agent is responsible for adjusting the power management parameters as described below.

As further shown in second power plane includes processor cores and an on chip memory architecture coupled thereto. On chip memory architecture includes a plurality of software accessible storage elements e.g. machine specific registers MSRs and a plurality of on chip memories M 1 . On chip memories may be last level caches LLCs each corresponding to one of the processor cores M N .

Herein MSRs are on chip storage elements that are programmed to store values that represent limits impedances multipliers or other information that is accessible by SA for power management of integrated circuit device . MSRs may be implemented on second power plane as shown. However it is contemplated that MSRs may be implemented on power planes or such as part of a Power Control Unit PCU within SA .

As shown a first MSR may include a value Icc that provides SA with the maximum amount of instantaneous current for a particular power plane as shown in . In particular when CURRENT LIMIT LOCK bit is not set CURRENT LIMIT bits may be adjusted during run time to represent the maximum current limit that can be realized by processor of which will adjust its operating conditions in order to meet the new limit. Such changes may be due to changes in the power delivery for the electronic device such as the addition of another device e.g. Universal Serial Bus USB or Firewire which requires reallocation of device power delivery resources.

As shown in a second MSR may include a value that provides SA with impedance for an interconnect load line between a power source e.g. voltage regulator and a compute engine e.g. first compute engine . This value Load Line may dynamically change due to operational variations detected by electronic device . Examples of these variations may include for example a change in the power source e.g. switch from an alternating current AC source to direct current DC source or vice versa a change in operating state of electronic device e.g. from normal operating state to sleep state a change in the number of active threads being processed or the like. Load Line along with the known current being supplied are used by SA namely firmware P code is used to adjust the amount of voltage provided to second power plane and indirectly to compute engine to offset a voltage drop caused by impedance from the interconnect between processor and its power source. The impedance may be changed at runtime and the processor will adjust its operating conditions in order to comprehend the new value.

As shown in a third MSR is adapted to store Max Ratio which provides PCU described below with a maximum ratio used for overclocking. More specifically when conditions are deemed satisfactory to exceed the guaranteed TDP frequency Max Ratio is used as a new multiplier for a reference clock frequency to provide an increased clock frequency for at least one of processor cores . As overclocking is the process of operating the compute engine at a higher clock rate more clock cycles per second than it was designed for or was specified by the manufacturer third MSR is further adapted to by setting OVER CLOCKING EXTRA VOLTAGE bits signify an amount of extra voltage to be added in response to the increased operating frequency. Processor updates its voltage and frequency tables in accordance with Max Ratio .

Referring back to third power plane includes a second compute engine namely graphics logic . Control of third power plane is the same as control of second plane . Third power plane is controlled independently from second power plane . For instance the Iccfor second power plane may be different from Iccfor third power plane . Hence MSRs may include additional power management constraints for components implemented on different power planes.

In accordance with one embodiment of the invention the adjustment of the power management parameters is managed by specific logic within system agent namely a Power Control Unit PCU . A hybrid of hardware and firmware PCU is effectively a controller that manages all of the power management associated with integrated circuit device . Of course in lieu of PCU power management may be accomplished through an embedded controller within integrated circuit device an off die controller e.g. controller within the same multi chip package on the same circuit board etc. or other types of logic.

Referring now to one embodiment of system agent features PCU is shown. PCU includes a micro controller that runs firmware P code for controlling the adjustment of various power management parameters in efforts to effect operations on the different power planes and . In other words according to one embodiment of the invention P code when executed is adapted to monitor operational components used for estimating and managing current usage and where appropriate permitting or precluding such current levels. This current adjustment effectively adjusts the operating frequency and power usage by one or more of processor cores implemented on power plane .

PCU further includes hardware state machines that control the transitioning in frequency and voltage for power planes and .

According to one embodiment of the invention as shown in each of processor cores is associated with assigned power parameters. Based on the current work level that is needed PCU is adapted to control processor cores and based on the estimated current and predetermined current limits allows or precludes such current usage. This effectively controls the operating frequency of processor cores . . . and or . Such control is performed based on parameters as set forth in .

Referring now to an exemplary embodiment of current estimation and computations performed by PCU of in controlling performance of integrated circuit device of is shown. Herein PCU of may need to alter during run time maximum current usage based on operational variations detected by the electronic device. The need for such alteration may be determined for example by comparing a maximum current threshold to an estimated current computed using parameters. These parameters may include but are not limited or restricted any or all of the following frequency voltage temperature power virus e.g. 100 app ratio being the highest power level by integrated circuit device the number of cores reference leakage and or leakage scaling.

More specifically current estimation unit of PCU actively or passively monitors parameters that are used to estimate an amount of current utilized by the integrated circuit device. For example according to one embodiment of the invention values as measured by sensors or contained within MSRs are input into current estimation unit .

According to this embodiment of the invention as illustrated in current estimation unit performs an arithmetic operation on parameters in order to produce estimated current I . Herein the estimated current is computed by PCU and in particular P code as a function of i frequency ii voltage as a function of frequency iii current temperature of the integrated circuit device iv power virus v number of processor cores within integrated circuit device and perhaps reference leakage and leakage scaling parameters not shown or the like. Of course it is contemplated that I may be computed by logic other than P code and provided as input to P code .

Regardless estimated current I is input into a current limiting unit . Current limiting unit is adapted to compare I to a current limit which is accessible by P code from a MSR. As an illustrative example a storage element may be adapted to store a value that represents a maximum current. For instance PP0 CURRENT CONFIG MSR may be adapted to identify a maximum instantaneous current Icc for the power rail utilized by processor core s . . . and or within power plane . Iccis represented by bits of PP CURRENT CONFIG MSR as shown in . Similarly another MSR PP CURRENT CONFIG may be adapted to identify a maximum current Icc for the power rail utilized by graphics logic within power plane .

Thereafter during run time Current Limiting unit compares the estimated current to Iccin order to determine if the estimated current is equal to or falls below Icc. If the estimated current is equal to or falls below Icc then the proposed current usage is sustainable and the operating frequency corresponding to this current usage level is permitted. However if the estimated current is greater than Icc PCU reduces the current which reduces the operating frequency and corresponding voltage P State of a particular compute engine such as one of the processor cores of . Of course it is contemplated that such computations may be conducted based on average median or worst case instantaneous current usage with short time window or the like.

Referring now to a second exemplary block diagram of an integrated circuit device as a packaged multi processor unit with at least one of the processors supporting a power management parameter adjustment scheme is shown. Herein packaged integrated circuit device includes a package partially or fully encapsulating a substrate . Substrate comprises a controller that is adapted to monitor and limit current usage based on current constraints applicable to packaged integrated circuit device and or multiple integrated circuit devices P 2 on substrate . Hence controller performs the above described operations of the PCU implemented in accordance with the integrated circuit die architecture shown in .

Referring now to a third exemplary block diagram of the packaged integrated circuit device implemented on a circuit board is shown. Herein a packaged integrated circuit device is mounted on circuit board and is adapted as a controller for power management during run time. For instance integrated circuit device may be adapted to effectively monitor and limit currents applied to different portions of integrated circuit device or other integrated circuit devices P 1 on circuit board . Hence controller performs the above described operations of the PCU implemented in accordance with the integrated circuit die architecture shown in .

Referring to an exemplary block diagram of the electronic device implemented with an integrated circuit device implemented with a blade server for activity monitoring is shown. Herein packaged integrated circuit device is adapted as a controller to monitor and limit frequency and voltage levels for one or more different blade servers other than blade server . Hence controller performs the above described operations of the PCU implemented in accordance with the integrated circuit die architecture shown in .

Referring now to an exemplary flowchart of the operations by firmware within an integrated circuit device for dynamically monitoring and adjusting power management parameters for power conservation is shown. First during run time firmware determines an estimated current level based on a plurality of deterministic parameters block . For instance as an illustrative embodiment of the invention the estimated current level may be computed using voltage frequency temperature power virus and number of cores. Of course it is contemplated that the estimated current level may be determined by logic other than firmware and or a different estimation scheme may be used that includes additional parameters and or exclude some of the listed parameters. Regardless the estimated current level for the integrated circuit device may be calculated periodically randomly or in response to a triggering event during run time.

During run time of the integrated circuit device perhaps in response to a change in condition of the integrated circuit device of or the electronic device of Iccis obtained from a designated storage element such as a software accessible register block . This Iccmay vary depending on which power plane of the integrated circuit or area on the substrate or circuit board . For instance Iccfor the processor power plane may be obtained from PP CURRENT CONFIG MSR while Iccfor the graphics power plane may be obtained from PP CURRENT CONFIG MSR where these MSRs may store different Iccvalues. Iccmay be adjusted during run time by the electronic device and will be re sampled and considered by the firmware.

Thereafter the estimated current level is compared to Icc block . Where Iccis associated with amperage greater than the estimated current level the current level can be supported by the integrated circuit blocks and . Thus no current adjustment is needed at this time and the integrated circuit device can operate at its existing operating frequency. Otherwise the current is reduced which effectively reduces the operating frequency of the integrated circuit blocks and .

Referring to an exemplary flowchart of the operations by firmware within an integrated circuit device for dynamically monitoring and adjusting power management parameters such as a parameter corresponding to estimated impedance of the load line between the integrated circuit device and a power source e.g. voltage regulator is shown. This parameter hereinafter referred to as Load Line can be used to dynamically alter the supply voltage from the power source to the integrated circuit device in order to more accurately account for voltage loss realized over the load line. Such accuracy enables power conservation as the worst case load line impedance does not need to be used for computing the amount of voltage applied to the integrated circuit device from the power source.

First according to one embodiment of the invention an impedance of the load line is calculated block . For instance as an illustrative embodiment of the invention this impedance may be computed by circuitry within the electronic device e.g. applying a constant current and measuring the voltage at each end of the load line . Once this impedance is determined a value Load Line which represents the estimated load line impedance is stored in an accessible register block . For instance Load Line for the processor power plane may be stored within a particular storage element e.g. bits of PRIMARY PLANE LLR CONFIG CONTROL MSR . As an example Load Line may represent an impedance ranging anywhere from 0 10 milliohms m . Likewise Load Line for the graphics power plane may be stored in another software accessible storage element e.g. bits of SECONDARY PLANE LLR CONFIG CONTROL MSR which represents an impedance ranging anywhere from 0 10 m .

Next as shown in response to an event during run time e.g. action received signaling elapsed time etc. which may occur periodically or randomly firmware accesses Load Line blocks and . Thereafter as shown in block Load Line is used to determine the amount of voltage drop caused by the load line between the integrated circuit device e.g. processor of and its power source. As a result firmware uses this information in combination with the known current supplied to the processor to request additional voltage from the power source that matches the voltage drop along the load line block . This avoids usage of worst case voltage losses which normally causes the delivery of higher voltage to the processor than needed.

In general terms the processor reads load line impedance Load Line and using Load Line to calculate a voltage drop over the load line. Thereafter the amount of requested voltage compensates for the calculated voltage drop.

As shown in current estimation unit of PCU actively or passively monitors parameters that are used to estimate an amount of current utilized by the integrated circuit device. For example according to one embodiment of the invention these values measured by sensors or contained within MSRs are input into current estimation unit .

According to this embodiment of the invention as illustrated in current estimation unit performs an arithmetic operation on parameters in order to produce estimated current I as previously described. Estimated current I is input into a voltage calculation circuit which takes the voltage needed by the processor V estimated current I and Load Line from the electronic device to produce a voltage request . Herein the load line impedance is read and readjusting voltage request at runtime.

Referring now to an exemplary flowchart of the operations by firmware within an integrated circuit device for dynamically monitoring and adjusting power management parameters namely the maximum ratio that is relied upon for setting the operating frequency of the integrated circuit device is shown. In particular the maximum ratio is used to set an overclocking condition.

In general for run time overclocking the firmware e.g. P code samples overclocking configuration including maximum ratios and extra voltage block . Thereafter the firmware adjusts voltage frequency tables and limits to account for a new overclocking range block . The firmware then updates the target ratio voltage to run processor at new overclocking frequencies block .

More specifically when permitted firmware samples the Max Ratio of and uses this ratio as a multiplier for a reference clock frequency. This causes overclocking by increasing the operating frequency for at least one of processor cores beyond the established TDP frequency and beyond a maximum turbo frequency spec ed by the manufacturer of the integrated circuit device. Furthermore firmware samples the OVER CLOCKING EXTRA VOLTAGE bits of and updates its voltage and frequency tables to account for the increased voltage and frequency.

The aforementioned discussion provided various implementation details for a mechanism that permits changes during run time to various constraints e.g. current limit load line and overclocking that are utilized by a power control unit PCU that determines appropriate clock frequency clock gating and supply voltage values in view of the constraints.

Upon power on reset the lock bit is cleared and BIOS firmware subsequently looks to see if the configuration settings for the system permit run time changes to PCU constraints . Here as the ability to change power management constraint settings during run time may result in settings that exceed a processing core s guarantees that is the settings cause the processor to behave unreliably some system designers may wish to disable the ability to change power constraints during run time. Such system designers may therefore for example set a field in firmware that indicates that the ability to change constraints during run time is to be disabled.

BIOS firmware looks to this field and if the field indicates that run time setting changes are to be disabled BIOS sets the appropriate lock bit s in MSR register space . Once a lock bit is set changes to the power control unit constraint are not permitted until after another reset event occurs. This prevents software to change a constraint setting during runtime.

As observed with the multiple respective lock bits of according to one embodiment each constraint parameter may have its own respective lock bit. In this case in order to completely disable run time change capability BIOS firmware sets the lock bit for each constraint parameter e.g. lock bits for each of current threshold load line and overclocking would have to be set by BIOS firmware . Note that having a respective lock bit for each constraint provides system manufacturers with a fine grained ability to impose different flavors of restraint to the run time PCU constraint change technology. For example a system manufacturer may permit current threshold constraint setting changes during run time but not overclocking changes by setting the over clock lock bit of but not setting the current limit lock bit of .

In another embodiment not shown a global lock bit is provided in MSR register space that has the same effect as setting a lock bit for each constraint parameter that can be changed e.g. setting each of the current limit load line and overclocking lock bits . As such setting the global lock bit prevents software from changing any PCU constraint during run time. Some implementations may choose to have only a global lock bit without fine grained lock bits for each settable constraint or have the global lock bit along with the fine grained lock bits in MSR space.

The device driver also has an interface that is made available to application software that runs on the OS . The interface in an embodiment provides functions that the application software can call on to control the PCU constraints explicitly. For example in an embodiment where the constraints include current limit load line over clocking and over clocking voltage the interface supports 1 a read current limit constraint function 2 a read load line constraint function 3 a read over clocking constraint function 4 a read over clocking voltage function 5 a write current limit constraint function 6 a write load line constraint function 7 a write over clocking constraint function 8 a write over clocking voltage function.

In this example application software can call eight different functions through interface each of which cause as a direct consequence of the call the corresponding MSR register space to be accessed. When write functions are called application software rather than OS software controls the run time changes made to the PCU constraints of the system.

According to one approach application software include or is associated with a Graphical User Interface GUI that permits a user to explicitly specify a constraint. That is for example the user of the system can specify a particular overclocking ratio and or a particular over clocking supply voltage and have the new settings take effect during runtime without OS shut down CPU reset reboot etc. Moreover these settings may exceed the underlying processor core s or cores guaranteed ratings. For certain applications such as gaming applications the fall off in processor reliability in exchange for the increase in performance is deemed acceptable to permit operation beyond a processor s guaranteed ratings.

The device also permits other new usage cases such as power management control at the application layer. That is user application software instead of embedded OS functions controls system power consumption through interface . Here application software may correspond to application software that is designed to provide a GUI that permits the user to specify specific power consumption targets and or specific constraint values for the PCU as a function of system usage. For example the user can specify a first consumption target or set of constraints when the system is running a first combination of applications or a specific application and a second set of targets constraints when the system is running a second combination of applications or specific application .

In the preceding examples explicit reference was made to current limit load line over clocking and voltage over clocking PCU constraints. It should be understood that other embodiments may also include other kinds of constraints such as any one or more of maxim turbo ratio per active processing core graphics core ratio graphics core voltage specific power consumption limits etc. .

While the invention has been described in terms of several embodiments the invention should not limited to only those embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of limiting.

