---

title: System and method for topic extraction and opinion mining
abstract: Techniques for topic extraction and opinion mining are described. For example, a machine selects a document that is pertinent to a topic based on searching a plurality of documents. The machine identifies an identifier of a party to a transaction being referenced in the document, and identifies the transaction conducted by the party to the transaction based on the document. The machine determines a rating of the transaction based on the document. The determining of the rating of the transaction includes identifying, from a plurality of polarity words included in the document, a dominant polarity word based on a syntactic distance between the dominant polarity word and the topic in a syntactic tree. The machine determines a sentiment of the document based on the transaction, and the rating of the transaction.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09514156&OS=09514156&RS=09514156
owner: eBay Inc.
number: 09514156
owner_city: San Jose
owner_country: US
publication_date: 20130906
---
This application is a continuation of and claims the benefit of priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 12 568 583 now U.S. Pat. No. 8 533 208 entitled SYSTEM AND METHOD FOR TOPIC EXTRACTION AND OPINION MINING filed on Sep. 28 2009 which is hereby incorporated by reference herein in its entirety.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document Copyright 2009 2013 eBay Inc. All Rights Reserved.

Electronic transactions provides a convenient mechanism for sellers and buyers to transact business. Communications related to such services may be received from users by way of a community forum or other feedback mechanism and are recorded and stored in databases and session logs. This information is accessed to determine the performance of products and advertisements as well as the performance of sellers.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of some example embodiments. It may be evident however to one of ordinary skill in the art that embodiments of the invention may be practiced without these specific details.

For services offered through a networked communication system such as an on line service offered over the Internet suppliers of products and services coordinate with consumers. Users of the system often provide comments and feedback which is then available to buyers sellers and others. Often information relating to a product service or participant is entered in feedback and community forums and includes significant information related to sentiment polarity and opinion. Comments related to a specific topic may be entered as comments in multiple forums venues or locations. For example comments relating to a digital camera may be entered in a community forum related to photography a community forum related to electronics a review database for a seller a product review section and others. When seeking information related to the digital camera a user may be presented with a multitude of reviews comments notes and so forth requiring the user to manually scan through and read the individual reviews. This may become burdensome with the popularity of a product.

Sellers marketers and others seek feedback and customer opinion as to products and services. Potential buyers also seek this information. In practice many of these community forums receive a great volume of entries making identification of desired information difficult as a search of these entries requires the user to manually read through the comments and messages.

The following description details methods for topic extraction and opinion mining in an electronic system including the application of polarity detection to identify words and phrases most likely related to sentiment and further to apply lexical patterns to such words and phrases to understand the use of the polarity words and phrases so as to evaluate the significance of comments related to a product service participant or market. The communications may include comments on a community forum or feedback board comments solicited from users of a service or product or selections made on a questionnaire. The communications may convey opinion or sentiment of a user. The processes discussed herein extract the opinion and sentiment information automatically avoiding manual searching of the communications.

The information is then presented in a format for users to evaluate and may be implemented into a decision making process. In one example the resultant information is presented graphically to identify trends. The information may further be used to generate ratios of positive feedback to negative feedback. In some examples the information is automatically evaluated and presented to a requester as an alarm or indicator when the resultant information satisfies specified criteria. In some examples the resultant information is compared to information related to other queries such as to compare results for one product against results for a similar or competing product.

In one embodiment a topic and opinion mining method is determined from multiple community boards. The method may include techniques for feature extraction such as Latent Dirichlet Allocation LDA to extract topics from user community boards. The topics are identified by key words and phrases which are then classified as positive or negative comments. The method then analyzes the classified information to identify and confirm sentiment information in an automatic manner. Such a method discovers topics from diverse opinion pages and classifies the topics using business judgment to identify polarity of the comments in the text including key phrases as well as the community reaction to product launches and other initiatives.

In an example embodiment a system includes two main components i topic extraction and ii opinion mining wherein topic extraction includes a first phase to extract key phrases from texts and documents in the community forum or other venue and a second phase of opinion mining to analyze the sentiment of sentences including the key phrases and wherein the opinion mining includes syntactical analysis and lexical pattern matching. The topics may be ranked to identify essential topics. Automatic identification of essential topics in a given document corpus is a challenging task as words may be used in various contexts and the corpus is a large set of texts or documents which are used to perform statistical analysis.

In one embodiment a natural language process is used to identify key phrases related to the topic of interest among the various documents. Further such processing may apply a machine learning method to extract key phrases covered in the discussion posts and other documents. Once a group of essential ranking documents is identified the method applies a clustering technique to the group of documents which infers a relationship s among topics that belong to that group.

One example embodiment of a distributed network implementing image recognition services for identifying data items stored in an information resource is illustrated in the network diagram of which is a block diagram illustrating a system having a client server architecture and for providing image services according to an example embodiment. Within system a commerce platform or commerce server includes an information storage and retrieval platform which provides server side functionality via a network e.g. the Internet to one or more clients. As illustrated system interacts with a web client executing on a client machine a programmatic client executing on a client machine and a programmatic client in the form of modules executing on a client machine . In one embodiment the web client comprises a web browser but may employ other types of web services.

An electronic commerce service may run from one or multiple of the client machines such as and which may be provided at a common location or a variety of separate locations. Service providers and users may interface with the topic extraction and sentiment analysis module which accesses information stored in a database messages and texts session logs and dictionaries within information storage and retrieval platform . The session logs include listings of information from user sessions interacting with a service or product. The session logs may organize the information so as to coordinate this information with the messages and texts . For example when a message or comment includes text relating to a digital camera the corresponding session logs may provide information relating to the specific digital camera purchased the software purchased or other information which may be used to better understand the comment. The messages and texts may include the full text of the messages or may be a summary of information submitted in response to a questionnaire. The dictionaries may include a variety of information including polarity dictionaries to identify words and phrases related to sentiment and opinion such as good or poor. The dictionaries may include lexical information dictionaries and other resources used for topic extraction and sentiment analysis.

Within the information storage and retrieval platform Application Program Interface API server and web server are coupled to and provide programmatic and web interface to one or more application servers . Application servers host one or more modules e.g. applications engines etc. further detailed in . Application servers are in turn illustrated as coupled to one or more database servers that facilitate access to one or more databases . Modules provide a number of information storage and retrieval functions and services to users accessing the information storage and retrieval platform . A user accesses information storage and retrieval platform through network such as from a computing device.

While system of employs a client server architecture the present disclosure is not limited to this architecture and could be applied to a distributed or peer to peer architecture system. The various modules may also be implemented as stand alone software programs which do not necessarily have networking capabilities.

The web client may access the various modules via a web interface supported by web server . Web server allows developers to build web pages. In one embodiment web server may be used in collaboration with JAVA technologies by Sun Microsystems of Menlo Park Calif. and with Ajax Asynchronous JavaScript and XML technologies which comprises a collection of technologies enabling the creation of web applications. Ajax uses JavaScript eXtensible Markup Language XML and Cascading Style Sheet CSS formatting along with other technologies. Ajax allows programmers to refresh certain parts of a web page without having to completely reload the page. By obtaining information dynamically web pages load faster respond more quickly to requests and are more functional. Developers consider using Ajax applications and Ajax like applications when seeking to reduce network latency in certain applications.

Similarly programmatic client accesses various services and functions provided by the modules via the programmatic interface provided by the API server . In one example programmatic client comprises a seller application e.g. the TURBOLISTER application developed by eBay Inc. of San Jose Calif. enabling sellers to author and manage data item listings such as where each listing corresponds to a product or products on information storage and retrieval platform . Listings may be authored and modified in an off line manner such as when a client machine or is not necessarily connected to information storage and retrieval platform . Client machines and are further to perform batch mode communications between programmatic clients and and information storage and retrieval platform . In addition programmatic client and web client may include authoring modules not shown to author generate analyze and publish categorization rules used in information storage and retrieval platform to structure data items and transform queries. In one example embodiment transforming queries uses a data dictionary with token pairs to expand a narrow keyword or to focus a broad keyword. The client machine is coupled to one or more databases . The databases include information used by client machine in implementing a service or operation and may include specific information for products or services offered by client machine .

Users having access to service s provided by client machine for example include users of computer and users of wireless network which may serve as a common access point to network for a variety of wireless devices including among others a cable type television service a Personal Digital Assistant PDA and a cellular phone .

In one example client machines and offer services which store at least some information in the information and storage retrieval platform to enable web services. The services may provide users with a mechanism to provide feedback and other information to the service by way of community forums feedback board or other entries. The information received from users may be stored in a database such as a messages and texts within the information storage and retrieval platform .

In some embodiment a catalog of web services comprises information stored in the information storage and retrieval platform . Client machine stores information related to use of the web services in databases wherein the information may be used to identify associated services and offerings. The associated services and offerings are also listed in the catalog of web services. Descriptors of the associated services and offerings may be used to generate and modify a vocabulary for a data dictionary corresponding to the catalog of web services such that a user search having keywords related to a first service may return results for a second service associated with the first service. Additionally each of client machines and may also be users that search data items in information storage and retrieval platform .

In another example client machine may be a data processing client offering products to customers via network . Client machine stores a catalog of products in information storage and retrieval platform with the catalog of products having a corresponding data dictionary. Client machine stores information related to at least one product in databases or dictionaries . The information may also include frequency of searches resultant sales related products pricing information and other information related to customer use of the data processing service. Additionally databases may store other product related information such as style color format and so forth. Client machine may use the information stored in databases to develop descriptor information for at least one product and to determine the popularity or sentiment related to the product. Similarly a service provider or seller may use the sentiment information to develop advertising and marketing information. The sentiment information may be used to automatically enhance the service provider s business and electronic service. Product descriptors and other product information may be used to generate and modify a vocabulary for a data dictionary corresponding to the catalog of products such that a user search having keywords related to a first product may return results for a second product associated with the first service. In other embodiments a client machine such as client machines and may store information in the information and storage retrieval platform related to business processes or other applications which store data in a database which may be accessed by multiple users.

Continuing with system of information storage and retrieval platform includes modules within application server s wherein modules are further detailed in . Similar to the illustration of is a block diagram illustrating modules within system according to an example embodiment. The modules may include software modules or the functionality of a module implemented at least partially in software. The software may be developed using a programming language such as JAVA which is an object oriented programming language developed by Sun Microsystems. Other languages and development tools may be used according to the design and purpose and at the discretion of the system developer.

Modules are to receive images and other information from entities within system such as through network see . Further modules comprises a communication module to receive process and transmit messages according to one or multiple communication protocols. Processing modules are used to process requests and interface with the various modules and functions of the information storage and retrieval platform . Similarly marketplace applications and APIs are used to interface for various services within the system . The ecommerce service may further publish information using the publish modules including a query engine a search index engine and a categorization service engine . A service provider or user may incorporate the information available through the publish modules to enhance topic extraction such as to identify keywords and phrases related to a product or service. Still further the sentiment analysis may incorporate the publish modules to better understand comments and text related to services and products.

The query engine includes categorization information a metadata service module and metadata information which stores the metadata information. The search index engine includes search indexes data item search information and publish modules . The categorization service engine includes the categorization information .

The tools provide developer tools and software for building applications such as to expand or enhance the image processing capabilities. In one example tools include Java servlets or other programs to run on a server. As the present example implements Java tools some terms used with respect to Java applications and tools are detailed. A Java applet is a small program sent as a separate file along with an HTML communication such as a web page. Java applets are often intended to run on a client machine and enable services. Java applet services for example may perform calculations position an image in response to user interaction process data and so forth.

As illustrated in the information storage and retrieval platform further includes a topic extraction and sentiment analysis module which in one embodiment includes instructions for executing a method for identifying topics in texts and documents to determine opinions and sentiment related to products and services. The topic extraction and sentiment analysis module of may further be described as in which is a block diagram illustrating a system and apparatus for implementing a topic extraction method according to an example embodiment. The system extracts topic information by identifying key phrases in documents and other texts and then ranks the key phrases according to import of the key phrases in identifying sentiment or opinion in the document or text. Finally the system clusters or groups documents so as to infer relationships among topics belonging to each group.

The target of topic extraction is a set of documents within a given set or corpus. A document as used herein refers to information in a textual form such as comments submitted to a community forum. Service providers may provide a forum or board which allows postings of comments feedback questions and other information. A topic is a concept expressed either in single words or multi word phrases representing a concept or idea for a set of documents. In some examples the topic may represent ideas substantially related to the documents such as to the content of the documents type of documents or title of documents. In one example Nikon D420 is a topic that represents documents which discuss Nikon D420 digital cameras. In some embodiments documents may include entries submitted to a community forum emails provided with respect to a topic and other information available and related to a topic. Other information may include forum posts comments feedback user emails blog entries question and answer entries and so forth. The system identifies information related to a specific topic such as a digital camera and from this information determines opinions and other sentiment related to the topic. The topic may be broadly defined and may include multiple subtopics. The topics may be computed and selected using a combination of multiple methods including Term Frequency Inverse Document Frequency TFIDF Mutual Information MI Latent Dirichlet Allocation LDA and others. The topics identified are then stored in a database table for further use.

As illustrated a variety of forum documents are provided as inputs to the topic extractor which includes a post index module a topic extraction module and optional additional filters . Session logs may also provide documents containing messages related to a specific topic. The text extractor outputs relevant documents e.g. documents relevant to the topic. The relevant documents are then provided to the sentiment analyzer . The relevant documents may include the complete documents or may be sentences or portions of text from the documents which include key phrases related to the topic. The post index module is used to index and organize the various documents within a community forum or other document corpus. The organization puts the documents in an order to facilitate searching and other analysis. The post index module records and indexes the number of each post or document for topic document reference and retrieval. The post index module outputs an index that contains a mapping of each post number to all constituent word IDs and an inverted index of each individual word to membership post numbers.

The topic extraction module then receives the indexed documents and searches to identify key phrases within the documents. Additional filters may use heuristic or other information to identify the relevant documents and messages for example a filter may be used to extract sentences or longer phrases from the documents. The relevant documents are then output from the topic extractor wherein the relevant documents may be identified as complete documents or may be portions of documents. In some embodiments each of the relevant documents includes an identifier of the specific community forum or venue of which the relevant document was part. Operation of the various modules of the topic extractor is provided in the flow diagram of . The relevant documents may be a list of documents to identify an access location. Similarly the relevant documents may store the relevant portions of documents related to the topic.

The text from the relevant documents are then processed by the sentiment analyzer to evaluate the words sentences and phrases that include sentiment indicators which allows the words sentences and phrases be classified as positive or negative sentiment. The resultant classification is used to understand opinions and expressions of sentiment about the topic. To this end a polarity dictionary may be used to identify specific polarity words such as good or horrible. The sentiment analyzer includes a polarity detection unit used with the polarity dictionary to identify key phrases which indicate a sentiment or opinion. In one example the polarity identifies positive or negative comments. However in some embodiments other sentiments may be identified as well such as informational comments. For example an informational comment may include feedback from users as to the type of photographs taken with a particular digital camera. Other types of comments may be identified as well wherein a dictionary of words associated with the classification criterion are stored. The polarity detection unit identifies positive and negative comments using a polarity word dictionary and then provides those documents containing the positive or negative comments.

A syntactic parser receives the polarity information from the polarity detection unit and applies a syntactic parsing operation to the received information. The syntactic parser may be used to build syntactic tree of a sentence or portion of text and may apply heuristic rules to identify or filter particular portions of the sentence or portion of text. The syntactic parser receives the text that must be analyzed as a set of sentences or strings. It mainly includes word tokenization part of speech tagging and phrase chunking and phrase relation recognition components. Finally a sentence is represented as a syntactic tree structure. The results from the syntactic parser are applied to a lexical pattern matcher . The sentiment analyzer and modules therein may access information stored in files relating to the topic such as a file of topics and opinions. The polarity detection unit further uses information from a lexical dictionary which includes terms organized and grouped according to relationships of synonyms and so forth. Operation of the sentiment analyzer is detailed in . The polarity detection unit uses a lexical dictionary containing a set of words with an associated integer or representing its polarity. A sentiment expression may be a combination between polarity words and lexical words. For example the lexical words anymore at all again any longer may show negative meaning when following not do . . . although they are not necessarily polarity words. So we will group these synonyms and generate one pattern.

In one embodiment automatic key phrase extraction provides a tool for identifying key words and phrases used in community forum entries emails and other documents related to a topic. Key phrases are linguistic descriptors of textual content of documents and Key Phrase Extraction KEA is implemented to retrieve phrases from documents. In some embodiments the KEA method includes a natural language processing tool to find noun phrases and verb phrases automatically. In many text related applications techniques for clustering and summarization also may be used to identify phrases indicating a sentiment. A data mining or machine learning tool may be used to find multi word phrases or other parts of a text. A KEA process may include two stages a first stage which builds a model based on training documents and a second stage uses that model to predict the likelihood of each phrase in the new given document. The first stage may include manually authored key phrases such as those submitted by a user looking for specific words or phrases. In one example the system enables selection of a multi word concept such as dropped calls. 

Continuing with the text extractor is further to apply a ranking algorithm to key phrases to identify essential key phrases at operation . In some embodiments the ranking is done by Term Frequency Inverse Document Frequency TF IDF techniques where a weight is used to evaluate the importance significance or relevance of a word or phrase. A TF IDF weight is a statistical measure used in information retrieval and text mining. The TF IDF weight indicates how important a word is within a document in a collection or corpus. In some embodiments the importance increases proportionally to the number of times a word appears in a given document which may be weighted against the frequency of the word in the corpus. Some embodiments implement a ranking function that is computed as a function of the TF IDF weights. Additionally the KEA method may consider the first appearance of a word or phrase in a text such as the normalized distance of the first appearance of a word to the beginning of the text. The KEA method is used to determine the lexical units in the text before the topic extraction. In some embodiments an LDA process may then be used to generate topics.

According to some embodiments the phrases generated from the various KEA methods are ranked as a function of weights applied by at least one KEA method. The phrase rankings are evaluated with respect to a threshold those phases having ranks that exceed the threshold are considered essential topics at operation . The KEA based methods may be used to generate key phrases and use this as input for LDA to improve the grouping result. The list of essential topics is further extended to identify associated sub topics. In one example the topics new search system and new search engine are identified as subtopics of the new search topic.

Once the list of topics and subtopics are identified the process associates documents with corresponding topics at operation . For a given topic those documents in which the topic e.g. essential key phrase appears are simply grouped together.

Various methods may be used to extend a document grouping e.g. those documents to which the topic is highly related are also grouped. Moreover relationships may be extracted among topics that belong to the same group. In a second stage the KEA method then uses a model to predict the likelihood of each phrase in a new given document. Some examples use a KEA method first to extract important phrases and then use an LDA method incorporating the KEA results to improve the LDA results by selecting good candidates for grouping at the very beginning.

The documents are then associated with the topic s based on the essential key phrases found in the documents at operation and grouped at operation based on occurrence and use of key phrases found in the documents. The retrieved and grouped documents containing the essential keywords are provided as relevant documents of .

In some embodiments some embodiments also use other filtering techniques to identify and evaluate key phrases including the use of heuristics in key phrase extraction such as capitalization identification of non stopwords which are filtered out prior due to their common occurrence and other criteria mutual information and length or number of characters in a phrase. The mutual information is a quantity that measures the mutual dependence of two variables two words in this context. In text mining it is used to extract multi word phrases by identifying the words that appear together more often than by chance word collocations i.e dropped calls .

The syntax analyzer further builds a syntactic tree for each sentence of the relevant documents that includes an essential key phrase at operation . A syntax tree is a tree that represents the syntactic structure of a string according to a set of grammatical rules or norms. An example of a syntax tree includes multiple nodes identified as source nodes leaf nodes or internal nodes and terminal nodes. A parent node has a branch underneath the node while a child node has at least one branch directly above the node. The relationships are thus defined by branches connecting the nodes. The tree structure shows the relationships among the various parts of a sentence.

In an example embodiment building a syntax tree such as performed at operation may incorporate a natural language parsing tool to obtain a syntactic tree of a target sentence. further details operation wherein operation parses the sentence which includes activities to tag parts of speech. The parsing may include detection of subjects and objects within the sentence which information is used to better understand the use of words terms phrases and grammatical parts of the sentence structure. Additionally parsing may involve detection of negation words such as nor not and no. For example the negation words may include no trust not trusted and nor trusted. The parsing may also include pronoun cross reference and other information as to sentence structure.

The parsing allows the syntax analyzer to build a syntax treat operation and assignment of polarity impact to individual words phrases and terms at operation . For each of the polarity key phrases included in the sentence the impact assignment is a score identifying the impact of each polarity key phrase. The impact assignment may be a factor which indicates how much impact the polarity word is on the given topic.

As an example consider the sentence The new search is HORRIBLE Please dedicate your resources to improving another function of your website. In this text the there are two polarity words HORRIBLE and improving. These two polarity words are in conflict as first word has a negative meaning while the second word has a positive meaning. In this example the word horrible is a stronger word and has more impact on the given topic. The stronger impact may also reflect a direct relation with the topic of the new search. Therefore the entire text is to be tagged as negative based on a comparison of the impact of the conflicting terms. The polarity impact assignment may be determined in a variety of ways. In one way the polarity impact is considers the polarity word having a dominant impact on the topic and then uses that word to determine the sentiment orientation of the topic. In another example the polarity impact may be determined by a sum of polarities method. Using the sum of polarities method the example text will be tagged as neutral. Positive words are assigned a 1 value and negative words are assigned a 1 value. The sum of the polarities method adds up the polarities of the words in a sentence. For each pair w p in a sentence where wis a word and pthe corresponding polarity. The sum is therefore the sum of all pi in the sentence. The impact score may also be detected using the syntactic distance between the word and the topic in the syntactic tree. In other words the number of branches from a polarity word back up to the topic key phrase determines the impact of the polarity word. Still another method may incorporate an impact score when adding up to all the polarity words.

At decision point the syntactic analyzer determines if there are any conflicting polarity words and if so compares the polarity impact at operation . A polarity classification is made at operation which may be positive negative or neutral. Some embodiments have a variety of classifications indicating a degree of polarity.

At operation heuristic rules are applied to the classified polarity words and the text. These rules may handle special situations and usage pattern such as negation enantiosis and questioning. Negation words are those that tend to be related to negative sentiment such as nobody null never neither nor rarely seldom hardly and without in addition to the words given above. Following a negation word if the polarity word is close to the negation word and there is no punctuation that separates the polarity word and the negation word then the significance of the polarity word is reversed. For example in one scheme the word liked is assigned a polarity value of 5 while the words not liked is assigned a reverse polarity of 5. In one example the distance threshold is given as 5 words from the negation word to the polarity word.

Additionally the heuristic rules may evaluate figures of speech such as enantiosis which affirmatively states a negation or vice versa. In some examples question sentences may be skipped as the meaning is ambiguous. Consider the text What is wrong with old Boolean search for which the author s sentiment is not easily discerned. Further some examples search for words in quotation marks and skip those words as the meaning is ambiguous. Consider the example text IMO this improvement is utterly ludicrous. The meaning of the word improvement would typically be positive however in this context it is negative and therefore the process ignores the word. The heuristics for the topic extractor are used to identify lexical units or phrases. These heuristics are used for sentiment analysis and may be expressed using a common format or language such as rules and patterns.

Continuing with the method further includes activities to determine lexical patterns at operation and then apply the lexical patterns at operation . A lexical pattern is defined as a token sequence where each individual token is an abstraction of a word. A token has three parts a lemma of the word a polarity tag and a part of speech tag. A lemma is a form of a word which identifies the word. The polarity tag identifies the word as having polarity significance. Examples are illustrated in where a model of a polarity word token sequence is described by the token including a lemma field a polarity tag field and a part of speech field . The polarity field may identify the polarity as one of various possibilities POS possible NEG negative NEU neutral and NOT negation . The part of speech field may include codes for the various parts of speech such as NN for a noun VB for a verb JJ for an adjective RB for an adverb IN for a preposition PRP for a possessive term and CC for conjunction and so forth.

In application a wildcard may be implemented such as to use . In a first example a word is described by token wherein the lemma field has an entry of think and polarity and parts of speech fields and have wildcard entries which means the token will identify any text having the word think which is of any polarity and wherein the word think may be any part of speech.

In a next example the token includes a wildcard in lemma field but identifies a positive polarity in polarity field and a verb identifier in parts of speech field meaning this token applies to any suitable positive verb In still another example the token includes wildcards for lemma and parts of speech fields and and a negative entry in lemma field meaning this applies to any negative polarity words. The token includes wildcard entries in lemma and polarity fields and and a noun identifier in parts of speech field meaning this applies to any nouns. The token includes wildcards in polarity and parts of speech fields and with an entry of the word get in lemma field meaning this is one of the special words.

Embodiments may include a variety of words to identify the parts of speech broadly using fewer terms or narrowly using more terms. For example the part of speech field could include a code for a verb in past tense and a second code for a verb in present tense. Or the part of speech could include a single code for all verbs. The syntax analyzer may further implement special tokens such as the feature token or FEA identifying a topic and the gap token or GAP identifying a number of words that may be skipped between two tokens. Examples of special tokens are illustrated in .

The token includes the special token FEA in first field and wildcards in the polarity and parts of speech fields and meaning the topic or key phrase of any polarity and used as any part of speech. The token has the special token GAP entered in field a zero is entered in field and a three 3 in field . The field indicates that three words may be skipped between two tokens. Tokens and may be used to indicate that up to 3 words 0 to 3 words may be skipped in between two tokens.

Some other patterns defined by multiple tokens include  NOT  want think use need believe get     make    sense    which will identify or match with text such as the sentence I do not want Huge pictures and all the junkR like feedback and all the other things the new search brings up and get bring give put change     GAP 0 3 FEA    GAP 0 3 back    which will identify or match with text such as the sentence Put the Old Search and Browse back 

The patterns may be coded into computer readable instructions such as illustrated in . The code is a pattern made up of several tokens wherein the pattern has definitions as defined in Table I.

In one embodiment a pattern is a list of pre defined tokens and serves as a rule for determining the sentiment of a sentence. Each token is an individual word or phrase. For each given sentence the syntactic analyzer builds a syntactic tree. If all the tokens in a rule may be matched in the syntactic tree then the rule may be applied to the target sentence.

The system further includes a receiver and a transmitter to facilitate wireless communications. Some embodiments have no wireless capability.

The functions of the various modules and components of system may be implemented in software firmware hardware an Application Specific Integrated Circuit ASIC or combination thereof. A specific machine may be implemented in the form of a computer system within which instructions for causing the machine to perform any one or more of the methodologies discussed herein may be executed. In alternative embodiments the machine operates as a standalone device or may be connected e.g. networked to other machines. In a networked deployment the machine may operate in the capacity of a server or a client machine in server client network environment or as a peer machine in a peer to peer or distributed network environment. The machine may be a Personal Computer PC a tablet PC a Set Top Box STB a Personal Digital Assistant PDA a cellular telephone a web appliance a network router switch or bridge or any machine capable of executing instructions sequential or otherwise that specify actions to be taken by that machine. Further while only a single machine is illustrated the term machine shall also be taken to include any collection of machines that individually or jointly execute a set or multiple sets of instructions to perform any one or more of the methodologies discussed herein.

The example computer system such as system includes a processor such as central processing unit which includes or executes instructions for operations and functions performed within and by the computer system. Further the memory storage may include instructions for storage in and control of memory storage . A static memory or other memories not shown may also be provided. Similarly the memory storage may be partitioned to accommodate the various functions and operations within the system .

The system may further include a video display unit e.g. a Liquid Crystal Display LCD or a Cathode Ray Tube CRT not shown . The system may also include an input device to access and receive computer readable instructions from a medium having instructions for storing and controlling the computer readable medium.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. A component may be any tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more components of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a component that operates to perform certain operations as described herein.

In various embodiments a component may be implemented mechanically or electronically. For example a component may comprise dedicated circuitry or logic permanently configured e.g. as a special purpose processor to perform certain operations. A component may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor temporarily configured by software to perform certain operations. It may be appreciated that the decision to implement a component mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term component may be understood to encompass a tangible entity be that an entity physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. Considering embodiments in which components are temporarily configured e.g. programmed each of the components need not be configured or instantiated at any one instance in time. For example where the components comprise a general purpose processor configured using software the general purpose processor may be configured as respective different components at different times. Software may accordingly configure a processor for example to constitute a particular component at one instance of time and to constitute a different component at a different instance of time.

Components can provide information to and receive information from other components. Accordingly the described components may be regarded as being communicatively coupled. Where multiples of such components exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the components. In embodiments in which multiple components are configured or instantiated at different times communications between such components may be achieved for example through the storage and retrieval of information in memory structures to which the multiple components have access. For example one component may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further component may at a later time access the memory device to retrieve and process the stored output. Components may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

Example embodiments may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of these. Example embodiments may be implemented using a computer program product e.g. a computer program tangibly embodied in an information carrier e.g. in a machine readable medium for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers.

A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network. In example embodiments operations may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method operations can also be performed by and apparatus of example embodiments may be implemented as special purpose logic circuitry e.g. as a field programmable gate array FPGA or an application specific integrated circuit ASIC .

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers having a client server relationship to each other. In embodiments deploying a programmable computing system it may be appreciated that both hardware and software architectures require consideration. Specifically it may be appreciated that the choice of whether to implement certain functionality in permanently configured hardware e.g. an ASIC in temporarily configured hardware e.g. a combination of software and a programmable processor or a combination of permanently and temporarily configured hardware may be a design choice. Below are set out hardware e.g. machine and software architectures that may be deployed in various example embodiments.

As illustrated in the machine readable medium of disk drive unit stores one or more sets of instructions and data structures e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium may include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more instructions or data structures. The term machine readable medium shall also be taken to include any tangible medium capable of storing encoding or carrying instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies presented herein or capable of storing encoding or carrying data structures utilized by or associated with such instructions. The term machine readable medium shall accordingly be taken to include but not be limited to tangible media such as solid state memories and optical and magnetic media. Specific examples of machine readable media include non volatile memory including by way of example semiconductor memory devices e.g. Erasable Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks.

The instructions used within computer system may further be transmitted or received over a communications network using a transmission medium. The instructions and other information may be transmitted using the network interface device and any one of a number of well known transfer protocols e.g. HTTP . Examples of communication networks include a local area network LAN a wide area network WAN the Internet mobile telephone networks Plain Old Telephone POTS networks and wireless data networks e.g. WiFi and WiMax networks . The term transmission medium shall be taken to include any intangible medium capable of storing encoding or carrying instructions for execution by the machine and includes digital or analog communications signals or other intangible medium to facilitate communication of such software.

In some embodiments the described methods may be implemented using one of a distributed or non distributed software application designed under a three tier architecture paradigm. Under this paradigm various parts of computer code or software that instantiate or configure components or modules may be categorized as belonging to one or more of these three tiers. Some embodiments may include a first tier as an interface e.g. an interface tier . Further a second tier may be a logic or application tier that performs application processing of data inputted through the interface level. The logic tier may communicate the results of such processing to the interface tier and or to a backend or storage tier. The processing performed by the logic tier may relate to certain rules or processes that govern the software as a whole. A third storage tier may be a persistent storage medium or a non persistent storage medium. In some cases one or more of these tiers may be collapsed into another resulting in a two tier architecture or even a one tier architecture. For example the interface and logic tiers may be consolidated or the logic and storage tiers may be consolidated as in the case of a software application with an embedded database. The three tier architecture may be implemented using one technology or a variety of technologies. The example three tier architecture and the technologies through which it is implemented may be realized on one or more computer systems operating for example as a standalone system or organized in a server client peer to peer distributed or some other suitable configuration. Further these three tiers may be distributed between more than one computer systems as various components.

Example embodiments may include the above described tiers and processes or operations about constituting these tiers may be implemented as components. Common to many of these components is the ability to generate use and manipulate data. The components and the functionality associated with each may form part of standalone client server or peer computer systems. The various components may be implemented by a computer system on an as needed basis. These components may include software written in an object oriented computer language such that a component oriented or object oriented programming technique can be implemented using a Visual Component Library VCL Component Library for Cross Platform CLX Java Beans JB Java Enterprise Beans EJB Component Object Model COM Distributed Component Object Model DCOM or other suitable technique.

Software for these components may further enable communicative coupling to other components e.g. via various Application Programming interfaces APIs and may be compiled into one complete server client and or peer software application. Further these APIs may be able to communicate through various distributed programming protocols as distributed computing components.

Some example embodiments may include remote procedure calls being used to implement one or more of the above described components across a distributed programming environment as distributed computing components. For example an interface component e.g. an interface tier may form part of a first computer system remotely located from a second computer system containing a logic component e.g. a logic tier . These first and second computer systems may be configured in a standalone server client peer to peer or some other suitable configuration. Software for the components may be written using the above described object oriented programming techniques and can be written in the same programming language or a different programming language. Various protocols may be implemented to enable these various components to communicate regardless of the programming language used to write these components. For example a component written in C may be able to communicate with another component written in the Java programming language through utilizing a distributed computing protocol such as a Common Object Request Broker Architecture CORBA a Simple Object Access Protocol SOAP or some other suitable protocol. Some embodiments may include the use of one or more of these protocols with the various protocols outlined in the Open Systems Interconnection OSI model or Transmission Control Protocol Internet Protocol TCP IP protocol stack model for defining the protocols used by a network to transmit data.

Example embodiments may use the OSI model or TCP IP protocol stack model for defining the protocols used by a network to transmit data. In applying these models a system of data transmission between a server and client or between peer computer systems may for example include five layers comprising an application layer a transport layer a network layer a data link layer and a physical layer. In the case of software for instantiating or configuring components having a three tier architecture the various tiers e.g. the interface logic and storage tiers reside on the application layer of the TCP IP protocol stack. In an example implementation using the TCP IP protocol stack model data from an application residing at the application layer is loaded into the data load field of a TCP segment residing at the transport layer. This TCP segment also contains port information for a recipient software application residing remotely. This TCP segment is loaded into the data load field of an IP datagram residing at the network layer. Next this IP datagram is loaded into a frame residing at the data link layer. This frame is then encoded at the physical layer and the data transmitted over a network such as an internet Local Area Network LAN Wide Area Network WAN or some other suitable network. In some cases internet refers to a network of networks. These networks may use a variety of protocols for the exchange of data including the aforementioned TCP IP and additionally Asynchronous Transfer Mode ATM Synchronous Network Architecture SNA Serial Data Interface SDI or some other suitable protocol. These networks may be organized within a variety of topologies e.g. a star topology or structures.

Although an embodiment has been described with reference to specific example embodiments it may be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the present discussion. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. The accompanying drawings that form a part hereof show by way of illustration and not of limitation specific embodiments in which the subject matter may be practiced. The embodiments illustrated are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed herein. Other embodiments may be utilized and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. This Detailed Description therefore is not to be taken in a limiting sense and the scope of various embodiments is defined only by the appended claims along with the full range of equivalents to which such claims are entitled.

Such embodiments of the inventive subject matter may be referred to herein individually and or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. Thus although specific embodiments have been illustrated and described herein it may be appreciated that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all adaptations or variations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein may be apparent to those of ordinary skill in the art upon reviewing the above description.

