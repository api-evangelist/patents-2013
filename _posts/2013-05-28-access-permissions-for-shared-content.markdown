---

title: Access permissions for shared content
abstract: Various embodiments of the disclosed technology can configure access permissions for content shared via an online content management system. In one example, a first user of the online content management system can share his directory including files with other users (“recipients”). Upon agreeing to the content sharing from the first user, the recipients can reconstruct local representations of the shared directory and any included file (i.e., local representations of shared content). Access permissions associated with the recipients' local representations of the shared content can be configured to prevent unpermitted/unauthorized modifying or deleting of the local representations by the recipients. However, the first user can maintain read and write permissions, permitting him to make modifications or deletions to the shared content. The recipients' local representations of the shared content can be updated by the online content management system to include the modifications or deletions made by the first user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09325571&OS=09325571&RS=09325571
owner: Dropbox, Inc.
number: 09325571
owner_city: San Francisco
owner_country: US
publication_date: 20130528
---
The present technology pertains to access permissions and more specifically pertains to configuring access permissions for shared content.

Online content storage is becoming more popular. People frequently store access or otherwise interact with content stored at online content management systems. Documents pictures music videos directories folders and other types of content items can be stored at online content management systems to be accessed by users of the online content management systems. In some cases a content item can be shared by one user with another user s via an online content management system.

For example a first entity can store a collection s of content items e.g. a directory ies a document s within a directory ies a photo album a media playlist etc. at its account with an online content management system. In other words the first entity can be the owner of the collection s of content items. In one example the first entity i.e. owner can decide to share a directory including documents with one or more other entities also known as recipients via the online content management system. If the first entity modifies or deletes the documents being shared with the one or more other entities then the other entities will have access to the modified documents. Similarly the other entities can also modify or delete the documents that are being shared with them such that the modification or deletion of the documents would be perceivable to the first entity or owner who initially shared the documents.

In some cases a recipient may accidentally modify or delete shared content e.g. documents directories collections of content items etc. of the owner which can result in negative effects for the owner. In some cases the owner may want to share content with another recipient s but the owner may be hesitant to do so in fear of the shared content being modified or deleted without the owner s permission. These and other concerns can reduce the overall user experience associated with sharing content via online content management systems.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for configuring access permissions for content shared via an online content management system. In some embodiments a user of the online content management system can store data such as collections of content items at the online content management system. The user can be considered as the owner of the collections of content items.

In one example the user or owner can decide to share via the content management system one or more of his content items with one or more other users recipients . The recipients can choose whether or not to agree to the sharing of the content items by the owner with respect to the recipients. Upon agreeing to the content sharing the recipients can reconstruct local representations of the shared content items i.e. shared content . The owner can cause access permissions associated with the recipients local representations of the shared content to be configured to prevent modifying or deleting of the local representations of the shared content when the modifying or deleting would be in conflict with the owner s defined access settings for the recipients. In other words for example owner can cause access permissions associated with the recipients local representations of the shared content to be configured to prevent unpermitted unauthorized modifying or deleting of the local representations of the shared content. However the owner can maintain both read and write permissions thereby enabling him to permissibly make modifications or deletions with respect to the shared content. The permissible modifications or deletions to the shared content can be reflected or can take effect with respect to the recipient users. In other words the recipients local representations of the shared content can be updated by the content management system to include the permissible modifications or deletions made by the owner.

In one example if a recipient attempts to delete its local representation of a shared file within a local shared directory the recipient s attempt being in conflict with the owner s defined assigned access settings for the recipient e.g. without permission from the owner then the local representation of the shared file can be downloaded again from the content management system and then reconstructed or restored at the recipient e.g. at the recipient s account and or computing device . As such the local representation of the shared file can be synced with the owner s file via the content management system. In another example if the recipient attempts to modify in conflict with the settings assigned to the recipient by the owner e.g. without the owner s permission the recipient s local representation of a shared file then a copy of the local representation of the shared file can be created locally. The attempted modification by the recipient can be applied to the local copy i.e. a supplemental additional file or content item thereby leaving the local representation of the shared file downloaded from the content management system unmodified. Therefore the local representation of the shared file can again be synced with the owner s file via the content management system. Further in some embodiments the owner can choose which recipient s has what access permissions. For example the owner can allow some recipient users to have read write access to the shared content while other recipients are given read only access.

It is important to note that the various embodiments and or examples discussed herein are for illustrative purposes only. A person having ordinary skill in the art would recognize various other manners or approaches that can be utilized consistent with the scope of the present disclosure. Various other functions and advantages are described and suggested below as may be provided in accordance with the various embodiments.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for configuring access permissions for content shared via an online content management system. In one example a first user of the online content management system can share his collection s of content items such as a directory including files with other users recipients . Upon agreeing to the content sharing from the first user the recipients can reconstruct local representations of the shared directory and any included file i.e. local representations of shared content . Access permissions associated with the recipients local representations of the shared content can be configured to prevent unpermitted unauthorized modifying or deleting of the local representations by the recipients. However the first user can maintain read and write permissions permitting him to make modifications or deletions to the shared content. The recipients local representations of the shared content can be updated by the online content management system to include the modifications or deletions made by the first user.

With respect to implementing various embodiments of the disclosed technology an exemplary system configuration is shown in wherein electronic devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders or other mechanisms of grouping content items together with different behaviors such as collections playlists albums etc. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can be configured to maintain a content directory identifying the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

With reference now to shows an exemplary environment in which access permissions for shared content can be configured. Exemplary environment in can include content management system e.g. content management system in . Content management system can be used to store data such as directories and or other content items. For example as shown in content management system can store among other things folder N . Folder N can include content items such as file X which are also stored with content management system .

As shown in content management system can be used by a plurality of users such as User A User B User C and User D . In some embodiments each user can have a respective user account. For example an entity e.g. user can sign up or register for an account e.g. user account with content management system . In some embodiments content management system can provide the account to the entity along with an amount of storage space for the entity to use. In some cases a user account can correspond to a standard user account a free user account a premium user account a paid user account a temporary user account a guest user account etc.

In folder N including file X can be associated with e.g. owned by belong to etc. User A or the user account of User A . For example User A can have signed up for a user account with content management system . Content management system can have allocated an amount of storage space for User A s user account. User A can then store folder N including file X within storage space allocated to User A s account by content management system .

In one example User A can decide that he wants to share folder N including file X with three colleagues User B User C and User D via content management system . User A can have at least two ways to share folder N and file X . Under the first approach User A can send a link associated with folder N on system and the three colleagues User B User C and User D can choose to access the link and download a local copy of the shared folder N including a local copy of file X . Under the second approach User A can share the directory of folder N including file X with the three colleagues such that any of the four users User A User B User C or User D can modify including delete the contents of folder N namely file X .

In this example file X can be a business report that User A periodically revises. User A may want his three colleagues to be able to see the latest revised version of the report at all times. As such User A should not use the first approach because under the first approach the three colleagues would be downloading local copies of the shared content e.g. file X at each colleague s respective computing device such that any future revisions or modifications to the shared content e.g. file X by User A would not be reflected in the local copies of the three colleagues. Thus User A should share the content using the second approach.

However under the second approach all users with whom the content is shared e.g. Users A B C and D can have read and write permissions with respect to the shared content. In other words under the second approach even though all of the users with whom the content is shared can access the latest version of the shared content any of those users can modify or even delete the shared content.

Continuing with the example even though User A desires his colleagues to have the latest version of the financial report e.g. file X User A nonetheless does not want his colleagues to be able to modify or delete the report without his permission. Accordingly various embodiments of the present disclosure enable one or more access permissions of shared content to be configured in order to address the above mentioned concerns and other issues.

Referring now to an exemplary system embodiment for configuring access permissions for shared content is shown. Exemplary system embodiment can include content management system e.g. content management system in computing device computing device computing device and computing device . In the example of computing device can be associated with e.g. used by owned by etc. User A computing device can be associated with User B computing device with User C and computing device with User D.

In some embodiments each of the computing devices e.g. and can be running a client side application e.g. and respectively configured to operate with content management system as shown in the example of . Each client side application e.g. and can enable its respective user e.g. User A User B User C and User D respectively to interact with data stored at the respective user s account.

In each client side application i.e. client application client app client software etc. can enable its respective user to view access or otherwise interact with collections of content items stored at the respective user s account including content that has been shared with the respective user s account by another user account. As shown in for example User A owns content item N e.g. directory N as well as content item X e.g. file X which is included in directory N . User A can store directory N at his user account with content management system . Moreover a local representation of directory N can be maintained at User A s computing device . A local representation of content item X can also be maintained at User A s computing device .

Continuing with the example User A i.e. owner can share his directory N and content item X with one or more other users i.e. recipients such as User B User C and User D. In some embodiments User A can utilize client application running on computing device to transmit a command to content management system indicating that User A wants to share directory N including content item X with Users B C and D. Content management system can then send a message to each of recipient Users B C and D i.e. to the user account for each of Users B C and D asking whether or not the recipient user agrees to accept User A s shared content.

In response to a recipient user s agreement to accept the sharing of the content by User A content management system can communicate with the client application for that recipient user e.g. client app for User B client app for User C client app for User D etc. . Each client app can facilitate in downloading and generating a reconstructed version of the shared content at the computing device of a respective recipient user. In this example Users B C and D agree to accept User A s shared content so client apps and respectively can download data representative of directory N and content item X from content management system . Each of client apps and can then facilitate in generating reconstructed versions of directory N and content item X for its respective user. This results in reconstructed directory N and reconstructed content item X being generated at User B s computing device reconstructed directory N and reconstructed content item X being generated at User C s computing device and reconstructed directory N and reconstructed content item X at User D s computing device .

Furthermore in order to prevent the recipient users e.g. Users B C and D from modifying or deleting the shared content e.g. directory N and content item X in some embodiments each client app can communicate with the operating system of its respective user s computing device to configure the access permission s associated with the shared content i.e. associated with the reconstructed version of the shared content on the respective user s computing device . As shown in access permissions for the recipient users have been configured to allow the recipient users to initiate read commands but not write commands. In other words the access permissions for the reconstructed content at the recipient users computing devices have been configured to be read only. As such in the recipient users e.g. Users B C and D can read e.g. view open execute etc. the shared content but they do not have access to write to e.g. modify delete the shared content.

However being the owner of the shared content User A maintains read and write permissions. User A can view open run modify and or delete the shared content. Moreover if User A modifies or deletes the shared content e.g. content item X in directory N then each of the reconstructed versions of the shared content at the recipient users will be updated as well to include the modification or deletion made by User A. In other words modifications or deletions of the shared content by User A can be reflected or take effect at the reconstructed versions of the shared content at the recipient users devices but the recipient users with read only permissions cannot readily modify or delete shared content.

Further in some embodiments the owner of a shared collection of content items having read and write permissions can add additional content items to the shared collection such that recipient users with whom the collection is shared will also generate reconstructed versions of the additional content items in their reconstructed collections. In other words for example if User A adds file Z not shown in to directory N then file Z will be replicated reconstructed at directory N of system as well as at each recipient user s reconstructed directory N and .

Moreover in some cases a recipient user may want to terminate or cease the sharing of content by the owner with respect to the recipient user. In some embodiments the recipient user can remove the entire reconstructed directory or collection of content from his computing device. This can result in the reconstructed data included in the reconstructed directory or collection also being removed from the recipient user s computing device. This action by the recipient user can terminate or cease the sharing of content by the owner to the recipient user.

Turning now to an exemplary system embodiment for configuring access permissions for shared content is shown. Exemplary system embodiment can include content management system and computing devices and . In the example of computing device can be associated with User A who can be the owner of a collection s of content items such as content item N e.g. directory N . In this example directory N can initially include content item X e.g. file X . It follows that local representations and of directory N and content item X respectively can be included at User A s computing device .

In the example of User A has shared his directory N e.g. with recipient Users B C and D. As such computing device of User B has locally generated reconstructed version of directory N and reconstructed version of content item X. Similarly computing device of User C has locally generated reconstructed version of directory N and reconstructed version of content item X. Likewise computing device of User D has locally generated reconstructed version of directory N and reconstructed version of content item X.

In some embodiments User A can choose to give both read and write permissions to one or more recipient users. For example User A can elect to give read and write permissions to User D while granting read only permissions to Users B and C as shown in . Continuing with the example now having both read and write permissions User D can add content item Y to its local version of directory N . Since User D has permission given by User A to write data to the shared directory e.g. directory N the addition of content item Y can take effect at content management system as well as at each user s local representation of directory N e.g. User A s local directory N User B s local directory N and User C s local directory N . In other words directory N at system can replicate reconstruct content item Y due to User D s addition of content item Y into his local directory N . Similarly due to User D s action User A s local directory N can be updated to replicate reconstruct content item Y User B s local directory N can replicate reconstruct content item Y and User C s local directory N can replicate reconstruct content item Y . Along the same lines in some embodiments User D can modify or delete existing shared content not shown in such that the modification or deletion by User D can be reflected or take effect at system and at the local directory N for each of the other users Users A B and C with whom directory N is shared.

Since directory N is shared among Users A B C and D each user can generate a local representation of directory N including local representations of content items X and Y. In particular User B s computing device can include local directory N with local content items X and Y while User C s computing device can include local directory N with local content items X and Y and likewise for Users A and D.

Continuing with the example in some embodiments the owner of directory N can choose which shared users get what permissions. As such for example User A can grant read only permissions to Users B and C while giving read write permissions to User D. Thus User D can access modify and or delete the shared content e.g. content items X and Y whereas Users B and C can only access the shared content.

In some cases the client app running on a user s device can monitor the shared content such that if the user attempts in conflict with the user s assigned access settings permission e.g. without permission to delete the shared content then the shared content can be restored at the user s account and or device. In some embodiments if the user deletes in conflict with the user s assigned access settings permission e.g. without permission a shared content item then the user s device or the client app running on the user s device can recognize this conflicting e.g. unpermitted unauthorized deletion and can communicate with system to re download reconstruct and or restore the content item. For example in User B has read only permissions with respect to shared content items X and Y . As such if User B attempts to delete content item Y content item Y can be replaced reconstructed restored .

Moreover in some instances the client app running on the user s device can monitor the shared content such that if the user attempts to modify in conflict with the user s assigned settings shared content then the modification can be applied to a newly created local copy of the shared content while leaving the shared content unmodified. In other words for example if the user attempts to make a modification to a shared content item without permission the user s device or the client app running on the user s device can facilitate in generating a local copy of the shared content item e.g. a supplemental content item and apply the modification to the local copy. For example as shown in User C has read only permissions with respect to shared content items X and Y . Thus if User C attempts to make a modification to content item X then content item X can be locally created as a copy of content item X and the modification can be applied to content item X thereby leaving content item X unmodified. Further content item X would not be reflected effected and or updated with respect to system directory N or the other local directory N representations because User C does not have write permissions.

Furthermore in some cases a recipient user may want to terminate or cease the sharing of content by the owner with respect to the recipient user. In some embodiments the recipient user can remove the entire reconstructed directory or collection of content from his computing device. This can result in the reconstructed data included in the reconstructed directory or collection also being removed from the recipient user s computing device. This action by the recipient user can terminate or cease the sharing of content by the owner to the recipient user.

Regarding an exemplary user interface for configuring access permissions for shared content is shown. In exemplary user interface can enable a user of the content management system to configure access permissions for shared content. For example User A can sign into his account with the content management system and utilize exemplary user interface to manage content sharing.

In some embodiments there can be one or more inputs useful for configuring access permissions for each of the users with whom the content is shared. As shown in the example of User A can utilize toggle switches included in interface to configure what access permissions the recipient users e.g. Users B C D E F etc. will have. In this example Users B and C have agreed to User A s content sharing with them and they have read only permissions. User D has also accepted User A s content sharing but User D has been granted both read and write permissions. Moreover Users E and F have been invited by User A to access the shared content but they have not yet agreed or accepted. If and when Users E and F agree to or accept the content sharing then they will have read only permissions as set by User A.

Method can then cause the source directory and the one or more source content items to be reconstructed at the at least one second user account. The source directory and the one or more source content items can be reconstructed into a reconstructed directory and one or more reconstructed content items within the reconstructed directory respectively at step . Then method can cause one or more access permissions to be configured to prevent modifying or deleting the one or more reconstructed content items at the at least one second user account wherein the modifying or deleting would cause conflict with one or more settings assigned for the at least one second user account by the first user account.

At step method can share the directory including the data with one or more recipient user accounts. In some embodiments when a permissible modification or deletion occurs with respect to the data included in the directory the modification or deletion can be reflected effected or updated at the source user account and at the one or more recipient user accounts. Step can include causing one or more access permissions associated with the data included in the directory to be configured to prevent at least some of the one or more recipient user accounts from modifying or deleting the data included in the directory wherein the modifying or deleting would cause conflict with one or more settings assigned to the one or more recipient user accounts.

Step can include reconstructing at the computing device the directory and the data included in the directory based at least in part on the received information. Then method can communicate with an operating system of the computing device to configure an access permission associated with the reconstructed data included in the reconstructed directory at the computing device. The access permission can be configured to prevent modifying or deleting the reconstructed data at the computing device wherein the modifying or deleting would cause conflict with one or more settings assigned to the computing device by the source user account.

In some embodiments the one or more settings associated a shared content item s access permission can be stored in the metadata of the shared content item.

In some embodiments read only shared content items can be applied to all clients including application programming interface API clients. In one example the content management system can provide API s to third party software developers who develop applications i.e. apps for the content management system. In this example if the third party developers use the API s to gain access to a user s read only data then the read only access permissions for the user s read only data should still be enforced when the data is transmitted to and or received from the applications of the third party developers.

Various embodiments can also monitor unpermitted unauthorized changes to access permissions. In some embodiments the client app can determine that one or more access permissions have been modified at a user s computing device without permission authorization. In response the client app can communicate with the operating system to revert the one or more access permissions in accordance with one or more previous configurations of the access permissions.

With reference now to and and show exemplary possible system embodiments. The more appropriate embodiment will be apparent to those of ordinary skill in the art when practicing the present technology. Persons of ordinary skill in the art will also readily appreciate that other system embodiments are possible.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

