---

title: Managing conflicted copies
abstract: Various embodiments provide a method of managing and preventing conflicted copies of a content item. For example, as changes are made to a content item, either by multiple users simultaneously or by a single user utilizing multiple devices, conflicted copies can be inadvertently created. These conflicted copes are multiple copies of the same content item where each copy may separately contain unique changes. Heuristics can be used to help users more easily avoid or manage these conflicted copies. In one example, a user could be notified and shown the difference between copies to either accept or reject changes. Further, users could also be notified when modifying a content item on a device that has not been synchronized in a determined period of time, or when the content item is known to be modified but the changes have yet to be synchronized to the device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342531&OS=09342531&RS=09342531
owner: Dropbox, Inc.
number: 09342531
owner_city: San Francisco
owner_country: US
publication_date: 20130509
---
The present technology pertains to managing conflicted copies of files and more specifically pertains to enabling users to be alerted to and or view changes between versions of conflicted copies.

Various applications allow multiple users to view and or edit the same content item or a user to access the same content item from multiple devices. A problem will often arise when two people or computers change the same content item at the same time or within a period in which the content item has not synced with other parallel versions. In this instance it may be difficult to merge the changes since each version may contain changes not present in the other. Instead what often happens is that two versions of the content item are saved with one being marked as a conflicted copy. This method ensures that all changes are preserved and no user s work is overwritten by another. Accordingly users are left with two copies of the same content item without knowing which version contains a particular set of changes. It can therefore be desirable to determine a way to both minimize the occurrence of such conflicted copies and present the differences between versions to users in an intuitive manner.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for minimizing the occurrence of conflicted copies and presenting differences between conflicting content items to users. In at least one embodiment a user can be provided with access to modify a content item from any number of computing devices through an account with an online content management system. Each of the computing devices in this example may include a client side application that communicates with the online content management system to synchronize or sync a copy of the content item stored locally on each computing device with data for the content item stored with the online content management system.

The conflicted copy may be the result of a delay sync between one of the user s computing devices and the online content management system. A delay sync can occur as a result of making changes to a content item while having intermittent internet connectivity or while not being connected to a network and then reconnecting after making changes on a different device that was connected and able to sync. The conflicted copy may also be created when one of multiple users while collaboratively sharing and editing the content item makes changes to the content item during a period of time where the modification has not been communicated to the online content management system. Conflicted copies may also occur under other circumstances and result from situations other than those discussed above.

In one example when a conflicted copy of a content item is identified a notification can be provided to the user. Here the notification may include a link to view differences between the content item and the conflicted copy. The differences in at least one example may include displaying the differences between a universal copy as stored with the online content management system to the user in a redline format. In another example the differences between copies can be highlighted to the user using dialog boxes among other techniques. Accordingly the user can in at least one example go through each conflicting instance in the content item and either accept or reject each difference to produce a current or single updated universal copy of the content item.

In another example a warning could be provided to the user preemptively before a conflicted copy is made by anticipating circumstances where conflicted copies often occur. For example the warning may be provided when the user starts making changes to a document on a computing device that has not synchronized for a determined period of time. In another example the computing device may not have synchronized for the determined period of time and the file could be known to have been edited from other devices in the recent past. Accordingly such a warning can be provided to the user to make sure to synchronize the content item prior to making further changes to the document in an effort to minimize conflicted copy generation.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the art will recognize that other components and configurations may be used without departing from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for minimizing the occurrence of conflicting copies of a content item and managing in the event a conflicting copy is generated the copies to ensure information and work product preservation. In particular upon identifying a conflicting copy of a content item a user can be provided with a link to view differences between the conflicting copies. The differences in at least one example may include displaying to the user differences between copies in a redline or other such format where the user can easily identify the differences. Accordingly the user in at least one example can go through each conflicting instance in the content item and either accept or reject each difference to produce a single universal copy of the content item.

In order to understand how conflicted copies are generated it may be helpful to understand the system which causes them. In at least one embodiment an online content management system can enable a user to upload and save a content item to one or more databases in a cloud computing environment. The online content management system can store a universal copy of the content item and enable the user to modify the content item from any number of computing devices through for example a personalized account. Each of the user s computing devices in this example can include a client side application that communicates with the online content management system to sync a copy of the content item stored locally on each computing device with the universal copy of the content item stored with the online content management system.

Accordingly there are number of reasons why a conflicted content item may be created from a single content item. In one example a conflicted copy can be created when multiple users make changes to the content item during a period of time when synchronization between a computing device and the online content management system has not occurred. Additionally a conflicted copy can be created when one user makes changes to a content item on multiple computing devices during a period of time when again synchronization has not occurred. Further in one instance there could be so many content items or so much data in the process of being synced that a file currently being modified by a user has yet to be synced. Accordingly by the time the content item does sync changes inconsistent with other copies may have been created thereby resulting in a conflicted copy. This may also occur as a result of a slow network connection speeds.

It is worth noting that synchronization can be delayed by multiple factors such as internet connectivity problems offline interaction bandwidth delays combined with backlogged synchronization user disabled synchronization and the like. When a single content item is changed on multiple devices by one or more users the online content management system does not know which version or combination of versions should be considered the most recent version. As a result users are presented with conflicted copies so that they can individually determine which copy to keep or which changes from each copy to integrate into the universal copy.

Various other functions and advantages are described and suggested below as may be provided in accordance with the various embodiments.

In one example such a system may allow users to create a folder on each of their computing devices such as their smartphone tablet computer desktop computer laptop and the like. The folder can be synchronized across all the devices so that the content of the folder when changed or updated appears the same when viewed across or from all devices regardless of the device or platform type. Additionally items placed in such a folder can also be accessible through a website or mobile application associated with one or more of the devices and can also be shared with the devices of other users.

In this example folder contains four content items namely Document.doc Spreadsheet.xls Example.doc and Example user s conflicted copy 2013 04 10 .doc which is a conflicted copy. In this example the online content management system does not know which version or combination of versions of Example.doc and Example user s conflicted copy 2013 04 10 .doc should be considered the universal copy or most recent version. Accordingly in at least one embodiment when a conflicted copy of a content item such as Example.doc and Example user s conflicted copy 2013 04 10 .doc is identified a notification can be provided to the user to alert the user that action might need to be taken to ensure information or work product preservation.

In another example shows merged differences between the conflicting copies of Ulysses. In this example one of the copies is used as a base copy and the changes relative to the other conflicting copy are layered on top of the base copy including comment boxes that enable the user to identify differences and choose between alternative versions. In this example the base copy had is expected in the first line however the conflicted copy had the word abides in its place. In order to communicate this to the user in this example is expected is highlighted and a comment box pointing to is expected includes what was changed in the other copy namely abides and includes a Change icon which if selected can change is expected to abides. Moving down the poem One equal temper of heroic hearts also appeared in the base copy but was removed or not present in the conflicting copy and To strive to seek to find and not to yield was added in the conflicting copy but not present in the base copy. Accordingly To strive to seek to find and not to yield is provided in comment box and the user can select change icon to insert and keep this line in the final or universal copy of the content item.

Accordingly the user can go through each instance of the changes or differences between each of the conflicting copies and select the change or version most desirable to the user. In this example Lord Alfred Tennyson chose to keep both One equal temper of heroic hearts and To strive to seek to find and not to yield which were each added in different conflicting copies yet chose to exchange is expected with abides in his final version of Ulysses. Had Tennyson not been presented with both changes Ulysses in this example may not have included both One equal temper of heroic hearts and To strive to seek to find and not to yield. 

Further there are many ways to show the difference between conflicting copies that are either textual similar to what has been shown in these examples or with highlighting varying colors varying fonts and the like. Further similar changes can be adapted to various types of files such as documents spreadsheets presentations photos and the like.

In this example a user is provided with access to modify a content item from a number of computing devices through an account with an online content management system. Here each of the computing devices can include a client side application that communicates with the online content management system to sync a copy of the content item stored locally on each computing device with data for the content item stored with the online content management system.

When a conflicted copy of a content item is identified a notification can be provided to the user. Here the notification can include a link to view differences between the content item and the conflicted copy. The link in one example can be a hyperlink to navigate the user to view the differences however the link can also be a prompt such as prompt described with respect to or any other mechanism for enabling the user to view the difference between the content item and the conflicted copy.

In this example a user selection of the link is received and the differences between the content item and the conflicted copy are displayed to the user. Accordingly the online content management system enables the user to be able to go through each conflicting instance between conflicting copies to either accept or reject each difference in order to produce a final universal copy of the content item. Various other approaches can be used as well as discussed or suggested elsewhere herein.

In at least one embodiment a warning could be provided when a user opens or starts to make changes to a content item on a device that has not synchronized for a determined amount of time. In particular a warning can be provided when the device has not been synchronized for the determined amount of time where the file is known to have been edited from the user s other computing devices or from computing devices of other users in the past. Accordingly the warning can remind the user to make sure synchronization has completed prior to viewing the document.

In one example upon being unable to sync the client side application may determine the time the content item was synced with the online content management system. If the content item has not be synced for a determined period of time the content item may be consider a stale content item and a warning could be provided. Other such factors may also include identifying that a particular content item has been modified on multiple computing devices greater than a determined number times within a determine period of time. Accordingly upon being unable to sync a warning could be provided to the user. Further a warning may also be provided upon determining that a content item has been modified but that the modifications have not been synced with the online content management system. Various other approaches can be used as well as discussed or suggested elsewhere herein.

An exemplary system configuration for sharing documents and providing synchronized comments among users for the shared documents is shown in wherein computing devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through computing devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different computing devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Computing devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple computing devices .

A user can interact with content management system via a client side application installed on computing device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on computing device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple computing devices . For example computing device can upload content to content management system via network . The content can later be retrieved from content management system using the same computing device or some other computing device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files etc. from one or more computing devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from computing devices so that computing devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on computing device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more computing devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple computing devices of varying type capabilities operating systems etc. For example computing device can include client software which synchronizes via a synchronization module at content management system content in computing device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes computing device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other computing devices associated with the user s account. For example multiple computing devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple computing devices .

Content management system can include a communications interface for interfacing with various computing devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific computing devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple computing devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can include a content item management module for maintaining a content directory. The content directory can identify the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 6 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 6 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 6 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

