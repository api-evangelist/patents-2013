---

title: Methods for extending a selector application programming interface and devices thereof
abstract: A method, non-transitory computer readable medium, and web content management server device that receives a cascading style sheet (CSS) selector expression comprising a plurality of expression components. Whether an equivalent XML path language (XPath) expression can be generated for each of the expression components is determined. Each of the expression components for which an equivalent XPath expression cannot be generated is transformed into a transformed expression comprising at least one XPath expression and an extension function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09547633&OS=09547633&RS=09547633
owner: UsableNet Inc.
number: 09547633
owner_city: New York
owner_country: US
publication_date: 20131104
---
This technology generally relates to methods and devices for optimizing delivery of web content and more particularly to methods for extending a selectors application programming interface API and devices thereof.

A web content management server is a server that optimizes web pages and web page interactions for client devices with special requirements such as smartphones. By way of example a client device can send an HTTP request for a web page which is retrieved from a server device by the web content management server. Next the web content management server can optimize the content of the web page by applying transformation rules tailored to the requesting client device. This optimization process can include extracting content relevant to the requesting client device and adapting the extracted content to fit the specifications of the requesting client device. In order to adapt the content the web content management server can perform transformations including JavaScript removal content linearization and small screen adaptation for example.

Although this process works well to optimize content for display at the requesting client device the web page may not function properly when the original content heavily depends on JavaScript technology that cannot be implemented on some client devices. For example if the requested web page includes JavaScript code responsible for populating form fields validating form submissions retrieving data from external resources e.g. based on AJAX technology and even generating components that may change the structure of the web page the page at the client device will not be able to properly function.

Accordingly JavaScript included in web pages can be removed stored by the web content management server and replaced by a hidden field with an identifier for example. The identifier is subsequently sent by the client device in an HTTP request in response to a web page interaction requiring execution of the JavaScript such as a request for validation of login credentials. Based on the identifier the web content management server can retrieve the JavaScript execute the JavaScript in an emulated JavaScript environment on behalf of the client device and return a result to the client device.

In some implementations the emulated JavaScript environment can support application programming interfaces APIs such as those defined by hypertext markup language HTML events cascading style sheet CSS range traversal and views models for example. Some of the supported APIs can allow web page developers to embed JavaScript defining functionality for accessing a document object model DOM associated with a web page in order to perform an operation. For example the selector API provides CSS selector expressions or queries configured to be applied to a DOM to obtain a result set of elements of the DOM.

However CSS selector expressions can be difficult to implement can be complex and can require specific code or libraries to be implemented. While some CSS selector expressions can be translated into XML path language XPath expressions or queries which are relatively efficient to execute many CSS selector expressions are not translatable.

A method for extending a selector application programming interface API includes receiving with a web content management server a cascading style sheet CSS selector expression comprising a plurality of expression components. Whether an equivalent XML path language XPath expression can be generated for each of the expression components is determined with the web content management server. Each of the expression components for which an equivalent XPath expression cannot be generated is transformed with the web content management server into a transformed expression comprising at least one XPath expression and an extension function.

A non transitory computer readable medium having stored thereon instructions for extending the selector API comprising machine executable code which when executed by a processor causes the processor to perform steps including receiving a cascading style sheet CSS selector expression comprising a plurality of expression components. Whether an equivalent XML path language XPath expression can be generated for each of the expression components is determined. Each of the expression components for which an equivalent XPath expression cannot be generated is transformed into a transformed expression comprising at least one XPath expression and an extension function.

A web content management server device includes a processor coupled to a memory and configured to execute programmed instructions stored in the memory including receiving a cascading style sheet CSS selector expression comprising a plurality of expression components. Whether an equivalent XML path language XPath expression can be generated for each of the expression components is determined. Each of the expression components for which an equivalent XPath expression cannot be generated is transformed into a transformed expression comprising at least one XPath expression and an extension function.

This technology provides a number of advantages including methods non transitory computer readable medium and devices that facilitate more efficient processing of CSS selector expressions using XPath. With this technology CSS selector expressions are fully translatable into XPath expressions which can be evaluated in an emulated JavaScript environment by a relatively efficient XPath processor without requiring the specific code otherwise necessary to execute the CSS selector expressions.

An exemplary network environment with a web content management server coupled to client devices and server devices is illustrated in . In this example the web content management server client devices and server devices are coupled together by communication networks although other numbers and types of systems devices and or elements in other configurations or network topologies can also be used. This technology provides a number of advantages including methods non transitory computer readable medium and devices that facilitate more efficient processing of CSS selector expressions in an emulated JavaScript environment.

The web content management server is coupled to the client devices by the communication network which can include one or more local area network s LANs and or wide area network s WANs . In this example the web content management server is further coupled to the server devices by the communication network which may also include one or more LANs and or WANs. Other network devices configured to generate send and receive network communications and coupled together via other topologies can also be used. While not shown the network environment also may include additional network components such as routers switches and other devices which are well known to those of ordinary skill in the art and thus will not be described here.

The web content management server may perform any number of functions including optimizing content retrieved from the server devices for display on the client devices for example. In this example the web content management server includes a processor a memory and a communication interface which are coupled together by a bus or other link although other numbers and types of components parts devices systems and elements in other configurations and locations can be used.

The processor in the web content management server executes a program of stored instructions one or more aspects of the present invention as described and illustrated by way of the embodiments herein although the processor could execute other numbers and types of programmed instructions. The processor of the web content management server may comprise one or more central processing units or general purpose processors with one or more processing cores for example.

The memory in the web content management server stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein although some or all of the programmed instructions could be stored and or executed elsewhere. A variety of different types of memory storage devices such as a random access memory RAM or a read only memory ROM in the system or a floppy disk hard disk CD ROM DVD ROM or other computer readable medium which is read from and or written to by a magnetic optical or other reading and or writing system that is coupled to the processor can be used for the memory in the web content management server .

The communication interface in the web content management server is used to operatively couple and communicate between the web content management server client devices and server devices which are all coupled together via the communication networks although other types and numbers of communication networks or systems with other types and numbers of connections and configurations to other devices and elements can also be used. By way of example only the communication networks can use TCP IP over Ethernet and industry standard protocols including hypertext transfer protocol HTTP secure HTTP HTTPS wireless application protocol WAP and or SOAP although other types and numbers of communication networks such as a direct connection modems and phone lines e mail and wireless and hardwire communication technology each having their own communications protocols can be used.

The client devices enable a user to request receive and interact with applications web services and content hosted by the server devices through the web content management server and using the communication network although one or more of the client devices could access content and utilize other types and numbers of applications from other sources and could provide a wide variety of other functions for the user. In some examples the client devices comprise mobile devices with Internet access that enable web pages and other content stored by the server devices to be retrieved and rendered. By way of example only the client devices can be smart phones personal digital assistants tablets or computers.

Each of the client devices includes a processor a memory an input device a display device and a communication interface which are coupled together by a bus or other link although one or more of client devices can include other numbers and types of components parts devices systems and elements in other configurations. The processor in each of the client devices can execute a program of instructions stored in the memory the client device for one or more aspects of the present invention as described and illustrated herein although the processor could execute other numbers and types of programmed instructions.

The input device in each of the client devices can be used to input selections such as a request for a particular web page or other content stored by one or more of the server devices although the input device could be used to input other types of requests and data and interact with other elements. The input device can include keypads touch screens and or vocal input processing systems although other types and numbers of input devices can also be used.

The display device in each of the client devices can be used to show data and information to the user such as web pages and other content retrieved from the server devices by way of example only. The display device in each of the client devices can be a mobile phone screen display although other types and numbers of displays could be used depending on the particular type of client device.

The communication interface in each of the client devices can be used to operatively couple and communicate between the client devices web content management server and server devices over the communication networks .

Each of the server devices provides content including web pages and web applications for use by one or more of the client devices via the web content management server although the server devices can provide other numbers and types of content and perform other functions. Each of the server devices can include a processor a memory and a communication interface which are coupled together by a bus or other link although each of the server devices can have other numbers and types of components parts devices systems and elements in other configurations.

The processor in each of the server devices executes a program of instructions stored in the memory of the server devices for one or more aspects of the present invention as described and illustrated by way of the embodiments herein although the processor could execute other numbers and types of programmed instructions.

The communication interface in each of the server devices is used to operatively couple and communicate between the server devices the web content management server and the client devices via the communication networks .

Although embodiments web content management server the client devices and the server devices are described and illustrated herein each of the web content management server the client devices and the server devices can be implemented on any suitable computer apparatus or computing device. It is to be understood that the apparatuses and devices of the embodiments described herein are for exemplary purposes as many variations of the specific hardware and software used to implement the embodiments are possible as will be appreciated by those skilled in the relevant art s .

Furthermore each of the devices of the embodiments may be conveniently implemented using one or more general purpose computers microprocessors digital signal processors and micro controllers programmed according to the teachings of the embodiments as described and illustrated herein and as will be appreciated by those ordinary skill in the art.

In addition two or more computing apparatuses or devices can be substituted for any one of the devices in any embodiment described herein. Accordingly principles and advantages of distributed processing such as redundancy and replication also can be implemented as desired to increase the robustness and performance of the devices of the embodiments. The embodiments may also be implemented on computer apparatuses or devices that extend across any suitable network using any suitable interface mechanisms and communications technologies including by way of example only telecommunications in any suitable form e.g. voice and modem wireless communications media wireless communications networks cellular communications networks G3 communications networks Public Switched Telephone Network PSTNs Packet Data Networks PDNs the Internet intranets and combinations thereof.

The embodiments may also be embodied as one or more non transitory computer readable medium having instructions stored thereon for one or more aspects of the present invention as described and illustrated by way of the embodiments herein as described herein which when executed by a processor cause the processor to carry out the steps necessary to implement the methods of the embodiments as described and illustrated herein.

An exemplary method for extending a selector application programming interface API will now be described with reference to . Referring more specifically to a flow chart of an exemplary method for extending the selector API to an emulated JavaScript environment is illustrated. In this example in step the web content management server receives an HTTP request for a web page from one of the client devices and retrieves the requested web page from one of the server devices .

In step the web content management server processes the retrieved web page to generate an XML document object model DOM and to remove one or more JavaScript code portions. In this example the web content management server stores the DOM and each of the removed JavaScript portions in the memory . Each of the removed JavaScript portions can be stored as associated with a respective identifier.

Additionally the web page can be modified by the web content management server to insert hidden fields in place of the removed JavaScript. Each of the hidden fields include at least one of the identifiers and are inserted so as to cause the requesting one of the client devices to send one or more of the identifiers in a subsequent HTTP request. Optionally the web page can be further processed to optimize the web page for a display on the requesting one of the client devices and or to improve the transmission and or load time of the web page for example although any other type of processing can also be performed on the web page.

In step the web content management server sends the processed web page to the requesting one of the client devices . Once received the requesting one of the client devices can load the web page in a web browser for example.

In step the web content management server receives an HTTP request which includes the identifier from the requesting one of the client devices in response to a user interaction with the web page. For example the user may submit login credentials using a submit button which prompts the requesting one of the client devices to generate and send an HTTP request including one of the identifiers previously included in a tag associated with the submit button in step . In response to receiving the HTTP request the web content management server retrieves the JavaScript code corresponding to the identifier included in the request from the memory .

In step the web content management server executes the retrieved JavaScript code on behalf of the requesting one of the client devices in an emulated JavaScript environment. The emulated JavaScript environment essentially emulates the web browser environment of the requesting one of the client devices . Methods and devices for utilizing an emulated JavaScript environment are described in U.S. patent application Ser. No. 12 802 670 entitled Methods for utilizing a javascript emulator in a web content proxy server and devices thereof which is incorporated herein by reference in its entirety.

During execution of the JavaScript code the web content management server determines in step whether a cascading stylesheet CSS selector expression is encountered. CSS selector expressions include a querySelector or querySelectorAll function call in this example and a plurality of expression components although the CSS selector expressions could include other function calls and other content. Each of the querySelector and querySelectorAll functions are defined in the selector API and receive at least one CSS selector as a parameter. If the web content management server determines that a CSS selector expression has been encountered then the Yes branch is taken to step .

While steps are illustrated for exemplary purposes other methods of encountering or receiving a CSS selector expression can be used. Additionally other types of environments other than an emulated JavaScript environment can be used. For example the methods and devices described and illustrated herein are operable with any browser emulator executed on a web content management server in which the DOM for each retrieved web page is implemented using an XML DOM implementation paired with an XPath processor.

In step the web content management server extracts an expression component from the CSS selector expression and more particularly from the CSS selector s included as parameters in the CSS selector expression. One exemplary expression component can be div.red e.g. as part of a CSS selector expression querySelectorAll div.red . This expression component would require selecting all the div elements of the DOM generated in step having a class attribute containing red . Other expression components can also be extracted in step .

In step the web content management server determines whether an equivalent XML path language XPath expression can be generated for the extracted expression component. The determination can be made based on a stored mapping of expression component formats or types to equivalent XPath expressions for example although other methods of determining whether the expression component has an equivalent XPath expression can also be used. In this example the div.red expression component is equivalent to the div contains concat class red XPath expression. Accordingly if the web content management server determines that an equivalent XPath expression can be generated for the expression component then the Yes branch is taken to step .

In step the web content management server generates the equivalent XPath expression from the expression component. Optionally the web content management server also stores the equivalent XPath expression at least temporarily in the memory .

In step the web content management server determines whether there are more expression components that can be extracted from the CSS selector expression. If the web content management server determines there are more expression components that can be extracted from the CSS selector expression then the Yes branch is taken back to step and another expression component is extracted as described and illustrated earlier.

The web content management server then determines in step whether an equivalent XPath expression can be generated for the extracted expression component also as described and illustrated earlier. In this iteration the exemplary extracted expression component is .red nth of type odd . This exemplary expression component would require selecting all the elements of the DOM generated in step having a class attribute containing red and being in an odd position in the set of all children of the element s parents having the same name as the element. In this example the nth of type pseudo class does not have an equivalent XPath expression. Accordingly in this iteration the web content management server determines in step that an equivalent XPath expression cannot be generated for the extracted expression component and the No branch is taken to step .

In step the web content management server transforms the expression component into a transformed expression including at least one XPath expression and at least one extension function. Optionally the web content management server also stores the transformed expression at least temporarily in the memory . The extension functions in this example are custom functions written in Java optionally defined in a file stored in the memory and associated with an XPath processor of the web content management server . The extension functions can be mapped to one or more psuedo classes in the memory and selected for a particular transformation based on the mapping.

Optionally the extension functions are prefixed by a namespace which facilitates locating of the extension functions by the XPath processor. Also optionally the transformed expression can include a mathematical operation e.g. in order to implement an odd parameter of the psuedo class of the expression component . An exemplary set of extension functions is described and illustrated in more detail later with reference to .

In this example the expression component can be transformed into a transformed expression including contains concat class red expr css type position . mod 2 1 . Accordingly in this example the XPath expression of the transformed expression includes contains concat class red . The extension function of the transformed expression in this example is the css type position extension function although other extension functions with different names can also be used.

The extension function in this example takes in an indication of an element of the DOM as a parameter or . which indicates all elements as used in this example although other parameters can also be used. In this example expr is used as a namespace prefix although any namespace prefix can be used. Additionally a modulus operation and comparison is performed on the result of the execution of the extension function in this example although other mathematical or logical operations can also be used.

In step the web content management server determines whether there are any more expression components in the CSS selector expression as described and illustrated earlier. If the web content management server determines there are no more expression components in this iteration then the No branch is taken to step .

In step the web content management server generates a combined expression including at least all of the transformed expressions and generated equivalent XPath expressions optionally stored in the memory in steps and step . In this example the expressions can be merged together using the XPath operators corresponding to the CSS descendants operators for example although other operators and methods of combining the expressions can also be used.

In step the web content management server applies the combined expression to the DOM generated in step and corresponding to the web page to generate a result. The result can be a set of elements of the DOM that satisfy or correspond to the CSS selector expression encountered in step although other types and numbers of results are also possible. Subsequent to applying the combined in expression to the DOM or referring back to step if the web content management server determines during execution of the JavaScript code in step that a CSS selector expression has not been encountered and the No branch is taken the web content management server proceeds to step .

In step the web content management server determines whether execution of the retrieved JavaScript has completed. If the web content management server proceeds to step subsequent to applying the combined expression to the DOM in step it is likely that execution of the JavaScript is not complete. Accordingly in these examples the No branch is taken back to step and the web content management server continues executing the JavaScript retrieved in step . Additionally the result generated in step can be used by the JavaScript in these examples such as to manipulate filter perform an operation on or reduce the DOM elements indicated therein. During the continued execution of the JavaScript code the web content management server again proceeds to step in a subsequent iteration as described and illustrated earlier.

However if the No branch is taken from step execution of the JavaScript is likely complete and no CSS selector expressions were encountered or no additional CSS selector expression subsequent to a prior iteration of steps was encountered. Accordingly in these examples the Yes branch is taken from step to step . In step the web content management server sends a response to the HTTP request received in step to the requesting one of the client devices . The contents of the HTTP response can be based on the execution of the JavaScript code for example including any CSS selector expressions embedded therein.

Referring to exemplary methods performed by an exemplary set of extension functions when executed during the application of the combined expression to the DOM in step is illustrated. The extension functions can be executed by an XPath processor which is optionally part of an extensible stylesheet language XSL processor of the web content management server for example although other methods of executing the extension functions can also be used.

Referring more specifically to a flow chart of an exemplary method performed by an extension function for evaluating the first of type last of type nth of type and nth last of type pseudo classes is illustrated. In step the web content management server receives an indication of a DOM element such as passed through a parameter of the extension function. In this example the extension function can be the css type position element extension function identified earlier for evaluating the nth of type pseudo class of the .red nth of type odd expression component of the example described and illustrated earlier although any other name can be used for the extension function.

In step the web content management server instantiates a variable T having a value of the tag name of the DOM element received in step . In step the web content management server instantiates a variable C having a value of 1. Other variables and variable names can also be used.

In step the web content management server determines whether there are any preceding siblings in the DOM of the DOM element received in step . If the web content management server determines there are any preceding siblings in the DOM then the Yes branch is taken to step . In step the web content management server determines whether one of the preceding siblings is an element and has a tag name equal to T. If the web content management server determines that the preceding sibling is an element and has a tag name equal to T then the Yes branch is taken to step . In step the web content management server increments the value of C. If the web content management server determines that the preceding sibling is not an element or does not have a tag name equal to T then the No branch is taken back to step .

In a subsequent iteration of step in this example the web content management server again determines whether there are any additional preceding siblings of the element that have not yet been considered. If the web content management server determines there is not any additional preceding siblings then the No branch is taken to step . In step the web content management server returns the value of C. The returned value can be used to continue evaluating the combined expression applied to the DOM for example. Accordingly the extension function in this example returns a number of preceding sibling elements of the element of the DOM having the same tag name as the element plus one.

Referring more specifically to a flow chart of an exemplary method performed by an extension function for evaluating the last of type only of type and nth last of type pseudo classes is illustrated. In step the web content management server receives an indication of a DOM element such as passed through a parameter of the extension function. In this example the extension function can be a css type total element extension function although any other name can be used for the extension function.

In step the web content management server instantiates a variable T having a value of the tag name of the DOM element received in step . In step the web content management server instantiates a variable C having a value of 0. Other variables and variable names can also be used.

In step the web content management server determines whether there are any children in the DOM of the parent of the DOM element received in step or alternatively any siblings of the DOM element. If the web content management server determines there are children of the parent of the DOM element then the Yes branch is taken to step . In step the web content management server determines whether one of the children is an element and has a tag name equal to T. If the web content management server determines that the child is an element and has a tag name equal to T then the Yes branch is taken to step . In step the web content management server increments the value of C. If the web content management server determines that the child is not an element or does not have a tag name equal to T then the No branch is taken back to step .

In a subsequent iteration of step in this example the web content management server again determines whether there are any additional children of the parent of the element that have not yet been considered. If the web content management server determines there is not any additional children then the No branch is taken to step . In step the web content management server returns the value of C. The returned value can be used to continue evaluating the combined expression applied to the DOM for example. Accordingly the extension function in this example returns a number of child elements of the parent of the element of the DOM having the tag name one of the element.

Referring more specifically to a flow chart of an exemplary method performed by an extension function for evaluating the lang pseudo class is illustrated. In step the web content management server receives an indication of a DOM node such as passed through a parameter of the extension function. In this example the extension function can be a lang node extension function although any other name can be used for the extension function.

In step the web content management server instantiates a variable N having a value indicating the node received in step . In step the web content management server instantiates a variable L having a value of en or any other default indication of a language. Other variables and variable names can also be used.

In step the web content management server determines whether N indicates a node that is an element. If the web content management server determines N indicates a node that is an element then the Yes branch is taken to step . In step the web content management server determines whether the node indicated by N has a language attribute. If the web content management server determines that the node indicated by N does not have a language attribute then the No branch is taken to step .

In step the web content management server sets the value of N to indicate the parent of the node indicated by the current value of N. The web content management server then proceeds back to step and again determines whether N indicates a node that is an element. Referring back to step if the web content management server determines that the node indicated by N does have a language attribute then the Yes branch is taken to step .

In step the value of L is assigned the value of the language attribute of the node indicated by N. In step the web content management server returns the value of L. Referring back to step if the web content management server determines in a first or subsequent iteration that N indicates a node that is not an element then the No branch is taken to step and the default value of L is returned. The returned value can be used to continue evaluating the combined expression applied to the DOM for example. Accordingly the extension function in this example returns a value of a first identified language attribute based on a traversal of the element of the DOM and any ancestors of the element of the DOM.

Referring more specifically to a flow chart of an exemplary method performed by an extension function for evaluating the not pseudo class is illustrated. In step the web content management server receives an indication of a DOM element and a string including a CSS selector expression such as passed through a parameter of the extension function. In this example the extension function can be a filter out element css selector extension function although any other name can be used for the extension function.

In step the web content management server applies the received CSS selector expression to the DOM to generate a result such as described and illustrated earlier with reference to steps for example although other methods of evaluating the received CSS selector expression can also be used. In this example the CSS selector expression includes a CSS selector function querySelectorAll although other functions can also be included in the CSS selector expression of the string received in step .

In step the web content management server determines whether there are any nodes in the result generated by the application of the CSS selector expression in step . If the web content management server determines there are node s in the result then the Yes branch is taken to step . In step the web content management server determines whether one of the node s in the result is equal to the DOM element received in step . If the web content management server determines that the one of the node s in the result is equal to the DOM element then the Yes branch is taken to step . In step the web content management server returns a value of false.

Referring back to step if the web content management server determines that the one of the node s in the result is not equal to the DOM element then the No branch is taken back to step . If the web content management server determines in step that the no nodes in the result of the evaluation of the CSS selector expression or no additional nodes not previously considered then the No branch is taken to step . In step the web content management server returns a value of true. Accordingly the extension function in this example returns a true value when the element of the DOM received in step is not included in a result obtained by applying the CSS selector expression received in step and a false value when the element of the DOM is included in the result.

Referring more specifically to a flow chart of an exemplary method performed by an extension function for evaluating the selected jQuery pseudo class is illustrated. In step the web content management server receives an indication of a DOM option element such as passed through a parameter of the extension function. In this example the extension function can be an option selected option extension function although any other name can be used for the extension function. The indication of the option element can represent an option in a dropdown list in an HTML form for example although the option can also refer to other types of elements.

In step the web content management server determines whether the option is explicitly selected. If the web content management server determines that the option is explicitly selected then the Yes branch is taken to step . In step the web content management server returns a value of true. Referring back to step if the web content management server determines that the option is not explicitly selected then the No branch is taken to step .

In step the web content management server obtains a select element from the DOM that contains the option element corresponding to the indication received in step . In step the web content management server determines whether the select element is a single selection element with size attribute equal to 1. If the web content management server determines that the select element is a single selection element with size attribute equal to 1 then the Yes branch is taken to step .

In step the web content management server determines whether the option element corresponding to the indication received in step is the first option element descendant of the select element. If the web content management server determines that the option element is the first option element descendant of the select element then the Yes branch is taken to step .

In step the web content management server determines whether all of the other option elements descendant from the select element are not selected. If the web content management server determines that all of the other option elements descendant from the select element are not selected then the Yes branch is taken to step . In step the web content management server returns a value of true.

Referring back to steps and if the web content management server determines that the select element is not a single selection element or does not have a size attribute equal to 1 the option element corresponding to the indication received in step is not the first option element descendant of the select element or any of the other option elements descendant from the select element are selected respectively then one of the respective No branches is taken to step . In step the web content management server returns a value of false. Accordingly the extension function in this example returns a true value if the option element of the DOM is selected and a false value if the option element of the DOM is not selected. In this example the option is considered selected if it is explicitly selected or if it is the first option of a select element that has no explicitly selected options and is not a multiple selections select element.

With this technology web page scripts including JavaScript code can be emulated by a web content management server on behalf of client devices that may not otherwise be able to take advantage of such functionality. Advantageously any CSS selector expressions embedded in the JavaScript can be translated to XPath expressions based on an equivalent XPath expression or in the case of CSS selector expressions without equivalent XPath expressions by using an extension function. Thereby CSS selector expressions can be fully translatable to XPath expressions and implemented using a relatively efficient XPath processor without the significant additional code and associated complexity required to implement the CSS selector expressions of the selector API.

Having thus described the basic concept of the invention it will be rather apparent to those skilled in the art that the foregoing detailed disclosure is intended to be presented by way of example only and is not limiting. Various alterations improvements and modifications will occur and are intended to those skilled in the art though not expressly stated herein. These alterations improvements and modifications are intended to be suggested hereby and are within the spirit and scope of the invention. Additionally the recited order of processing elements or sequences or the use of numbers letters or other designations therefore is not intended to limit the claimed processes to any order except as may be specified in the claims. Accordingly the invention is limited only by the following claims and equivalents thereto.

