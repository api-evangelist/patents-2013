---

title: Conflict resolution in applications
abstract: A method, a system and computer program product for resolving conflicts in applications are disclosed, A first set of instructions configured to use a second set of instructions is identified during execution of a program having the first set of instructions. A third set of instructions couples the first set of instructions to the second set of instructions. I Incompatibility between the first set of instructions and the second set of instructions is identified, in response to compiling the first set of instructions and compiling the second set of instructions. A mechanism is provided for the third set of instructions to modify the second set of instructions, which result in a modified second set of instructions compatible with the first set of instructions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08739140&OS=08739140&RS=08739140
owner: International Business Machines Corporation
number: 08739140
owner_city: Armonk
owner_country: US
publication_date: 20130428
---
The present application is a continuation of co pending U.S. patent application Ser. No. 12 718 636 filed on Mar. 5 2010.

In conventional computer systems a runtime environment is a collection of executable instructions that provides an operative foundation for execution of other applications. Typically a runtime environment includes one or more libraries of commands that other applications may utilize to accomplish computing tasks. The implementation of a runtime environment typically depends on the underlying computer system and may depend on the underlying hardware architectures software operating system or a combination thereof. The applications may be compiled into an intermediate language that is understood by multiple implementations of the runtime environments.

In some cases one or more of the commands available in a particular implementation of a runtime environment may not be supported by another implementation of the runtime environment. If an application uses a command that is unsupported by a particular implementation of a runtime environment then such an application may not be able to execute correctly using that particular implementation of the runtime environment. In some other cases if a reference to an unsupported command is encountered during the execution of a program of an application an error may occur or the application may function undesirably.

Embodiments of the invention are directed to a method a system and a computer program product for resolving conflicts in applications. Accordingly embodiments of the invention identify a first set of instructions configured to use a second set of instructions during execution of a program having the first set of instructions and a third set of instructions configured to couple the first set of instructions to the second set of instructions. Embodiments further identify incompatibility between the first set of instructions and the second set of instructions in response to compiling the first set of instructions and compiling the second set of instructions and provide a mechanism for the third set of instructions to modify the second set of instructions resulting in a modified second set of instructions wherein the modified second set of instructions is compatible with the first set of instructions.

A runtime environment typically includes one or more libraries of commands that other applications may utilize to accomplish computing tasks. Interfaces to such libraries are commonly referred to as application programming interfaces APIs . For example a given API may provide access to commands for user input audio video output networking file management etc.

Conventionally many dynamic link libraries DLL are packaged with exposed interfaces for an application executable. The executable is adapted to load the DLL and use the interfaces packaged. If the executable and the DLL use different runtime libraries while building it may create incompatible runtimes. This may result in malfunction or even a system crash.

Embodiments of the invention are directed to a method a system and a computer program product for resolving conflicts in applications. shows a conventional schematic of interaction of multiple set of instructions communicatively coupled in a typical dynamic programming environment. depicts an application having a program which in turn has a first set of instructions . A program executable of program may need to load a third set of instructions . The third set of instructions may further need to access a second set of instructions . In an exemplary mode each of the first set of instructions the second set of instructions and the third set of instructions is written in a programming language supporting function addresses. The programming language is selected from a set including C C and Pascal. At least one of the first set of instructions the second set of instructions and the third set of instructions is a runtime code and the third set of instructions is a dynamic link library DLL . If the executable and the DLL use different runtime libraries while building it may create incompatible runtimes. This may result in a malfunction or even a system crash. In an exemplary mode if the compilation of C code is done using two different compilers there may be conflicts that arise due to the difference in compilers and the C code may not work in different runtime environments causing a malfunction or a failure.

Exemplary computer system can include a display interface configured to forward graphics text and other data from the communication infrastructure or from a frame buffer not shown for display on a display unit . The computer system also includes a main memory which can be random access memory RAM and may also include a secondary memory . The secondary memory may include for example a hard disk drive and or a removable storage drive representing a floppy disk drive a magnetic tape drive an optical disk drive etc. The removable storage drive reads from and or writes to a removable storage unit in a manner well known to those having ordinary skill in the art. The removable storage unit represents for example a floppy disk magnetic tape optical disk etc. which is read by and written to by the removable storage drive . As will be appreciated the removable storage unit includes a computer usable storage medium having stored therein computer software and or data.

In exemplary embodiments the secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into the computer system. Such means may include for example a removable storage unit and an interface . Examples of such may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to the computer system .

The computer system may also include a communications interface . The communications interface allows software and data to be transferred between the computer system and external devices. Examples of the communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card etc. Software and data transferred via the communications interface are in the form of signals which may be for example electronic electromagnetic optical or other signals capable of being received by communications interface . These signals are provided to the communications interface via a communications path that is channel . The channel carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link and or other communications channels.

In this document the terms computer program medium computer usable medium and computer readable medium are used to generally refer to media such as the main memory and the secondary memory the removable storage drive a hard disk installed in the hard disk drive and signals. These computer program products are means for providing software to the computer system. The computer readable medium allows the computer system to read data instructions messages or message packets and other computer readable information from the computer readable medium. The computer readable medium for example may include non volatile memory such as Floppy ROM Flash memory Disk drive memory CD ROM and other permanent storage. It can be used for example to transport information such as data and computer instructions between computer systems. Furthermore the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and or a network interface including a wired network or a wireless network that allows a computer to read such computer readable information.

Computer programs also referred to herein as computer control logic are stored in the main memory and or the secondary memory . Computer programs may also be received via the communications interface . Such computer programs when executed can enable the computer system to perform the features of exemplary embodiments of the present invention as discussed herein. In particular the computer programs when executed enable the processor to perform the features of the computer system . Accordingly such computer programs represent controllers of the computer system.

Embodiments of the invention further provide a storage medium tangibly embodying a program of machine readable instructions executable by a digital processing apparatus to carry out a method of resolving conflicts in applications as described in the various embodiments set forth above and described in detail. Embodiments of the invention further provide a system for resolving conflicts in applications the system including at least one processor and at least one memory.

Advantages of various embodiments of the invention include potential reduction in malfunctions runtime exceptions invalid memory allocations or and errors in program executions which employs multiple runtime codes compiled using different compiling systems. Advantages of various embodiments of the invention include resolving mismatched runtimes by constructing runtimes dynamically without the need to recompile and rebuild the DLLs.

The described techniques may be implemented as a method apparatus or article of manufacture involving software firmware micro code hardware such as logic memory and or any combination thereof. The term article of manufacture as used herein refers to code or logic and memory implemented in a medium where such medium may include hardware logic and memory e.g. an integrated circuit chip Programmable Gate Array PGA Application Specific Integrated Circuit ASIC etc. or a computer readable medium such as magnetic storage medium e.g. hard disk drives floppy disks tape etc. optical storage CD ROMs optical disks etc. volatile and nonvolatile memory devices e.g. Electrically Erasable Programmable Read Only Memory EEPROM Read Only Memory ROM Programmable Read Only Memory PROM Random Access Memory RAM Dynamic Random Access Memory DRAM Static Random Access Memory SRAM flash firmware programmable logic etc. . Code in the computer readable medium is accessed and executed by a processor. The medium in which the code or logic is encoded may also include transmission signals propagating through space or a transmission media such as an optical fiber copper wire etc. The transmission signal in which the code or logic is encoded may further include a wireless signal satellite transmission radio waves infrared signals Bluetooth the internet etc. The transmission signal in which the code or logic is encoded is capable of being transmitted by a transmitting station and received by a receiving station where the code or logic encoded in the transmission signal may be decoded and stored in hardware or a computer readable medium at the receiving and transmitting stations or devices. Additionally the article of manufacture may include a combination of hardware and software components in which the code is embodied processed and executed. Of course those skilled in the art will recognize that many modifications may be made without departing from the scope of embodiments and that the article of manufacture may include any information bearing medium. For example the article of manufacture includes a storage medium having stored therein instructions that when executed by a machine results in operations being performed.

Certain embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Elements that are in communication with each other need not be in continuous communication with each other unless expressly specified otherwise. In addition elements that are in communication with each other may communicate directly or indirectly through one or more intermediaries. Additionally a description of an embodiment with several components in communication with each other does not imply that all such components are required. On the contrary a variety of optional components are described to illustrate the wide variety of possible embodiments.

Further although process steps method steps or the like may be described in a sequential order such processes methods and algorithms may be configured to work in alternate orders. In other words any sequence or order of steps that may be described does not necessarily indicate a requirement that the steps be performed in that order. The steps of processes described herein may be performed in any order practical. Further some steps may be performed simultaneously in parallel or concurrently. Further some or all steps may be performed in run time mode.

The terms certain embodiments an embodiment embodiment embodiments the embodiment the embodiments one or more embodiments some embodiments and one embodiment mean one or more but not all embodiments unless expressly specified otherwise. The terms including comprising having and variations thereof mean including but not limited to unless expressly specified otherwise. The enumerated listing of items does not imply that any or all of the items are mutually exclusive unless expressly specified otherwise. The terms a an and the mean one or more unless expressly specified otherwise.

Computer program means or computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

Although exemplary embodiments of the invention have been described in detail it should be understood that various changes substitutions and alternations could be made thereto without departing from spirit and scope of the inventions as defined by the appended claims. Variations described for exemplary embodiments of the present invention can be realized in any combination desirable for each particular application. Thus particular limitations and or embodiment enhancements described herein which may have particular advantages to a particular application need not be used for all applications. Also not all limitations need be implemented in methods systems and or apparatuses including one or more concepts described with relation to exemplary embodiments of the invention.

