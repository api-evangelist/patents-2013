---

title: Defect record classification
abstract: An approach to classify different defect records by mapping plain language phrases to a taxonomy. The approach includes a method that includes receiving, by at least one computing device, a defect record associated with a defect. The method further includes receiving, by the least one computing device, a plain language phrase or word. The method further includes mapping, by the least one computing device, the plain language phrase or word to a taxonomy. The method further includes classifying, by the least one computing device, how the defect was at least one of detected and resolved using the taxonomy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09626432&OS=09626432&RS=09626432
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09626432
owner_city: Armonk
owner_country: US
publication_date: 20130909
---
The present invention generally relates to classification management and more particularly to a method and system for mapping plain language phrases to a taxonomy for classifying different defect records associated with an application.

During the development of an application e.g. an accounting application written in SAP for a particular corporation a marketing application etc. various types of analysis tools are available for determining whether any defects exist within the application. The analysis tools may be used to analyze various aspects of the application. For example the analysis tools can be used to analyze source code functionality performance scalability user interfaces and or any other aspect of the application. Not only can analysis tools detect and resolve the defects information about how the defect was detected and resolved can be stored in defect records. The defect records can then be classified according to the type of defect and also other factors such as how the defect was resolved. One particular type of methodology of classification uses defect reduction method DRM taxonomy which is based on orthogonal defect classification. Although DRM taxonomy is a very powerful tool it can be time consuming to learn and understand.

In a first aspect of the invention a method includes receiving by at least one computing device a defect record associated with a defect. The method further includes receiving by the least one computing device a plain language phrase or word. The method further includes mapping by the least one computing device the plain language phrase or word to a taxonomy. The method further includes classifying by the least one computing device how the defect was at least one of detected and resolved using the taxonomy.

In another aspect of the invention there is a computer program product for classifying defect records. The computer program product includes a computer usable storage medium having program code embodied in the storage medium. The program code is readable executable by a computing device operable to receive a defect record. The computer program product includes sending the defect record to a user. The computer program product includes receiving a first plain language phrase or word related to how a defect associated with the defect record was discovered. The computer program product includes receiving a second plain language phrase or word related to how the defect associated with the defect record was resolved. The computer program product includes mapping the first plain language phrase or word to a taxonomy. The computer program product includes mapping the second plain language phrase or word to the taxonomy. The computer program product includes initiating to send the defect record with the taxonomy.

In a further aspect of the invention there is a computer system for classifying defect records. The system includes a CPU a computer readable memory and a computer readable storage medium. Program instructions provide a defect record to a user. Program instructions provide a recommendation of a plain language phrase or word to classify the defect record. Program instructions generate the defect record with the recommended plain language phrase or word. Program instructions send the defect record with the plain language phrase or word to a translation tool which generates taxonomy that is used by another user to analyze the defect record. The program instructions are stored on the computer readable storage medium for execution by the CPU via the computer readable memory.

The present invention generally relates to defect management and more particularly to a method and system for mapping plain language phrases to a taxonomy for classifying different defect records. In embodiments the present invention provides a user interface associated with a classification application that allows a user who may not be trained in defect reduction method DRM taxonomy to classify defect records by using plain language words or phrases associated with any language e.g. English French Japanese Hindi etc. . In embodiments the user can also use other types of phrases that can be a mix of different languages e.g. a mix of English and Spanish or the phrases can use slang or any other type of language. The user selected plain language phrases are then mapped to DRM taxonomy.

Advantageously the present invention allows plain language phrases to be mapped to DRM taxonomy. This ensures that users who are not trained in certain taxonomies can still implement and use the analysis tool e.g. DRM. This is done with the use of a tool of the present invention that can translate plain language syntax into taxonomy of an analysis tool. The present invention also provides a plain language interface associated with a classification tool to classify defect records. In embodiments the use of the plain language increases the level of analysis of the defect records as well as increases the level of accuracy of the classification process. The present invention also provides more accurate resolution information and enables real time categorization of the defect record regardless of where the users are located. It should be understood that the present invention can be implemented with any defect management analysis reduction tool including any known DRM tool. Accordingly although the description focuses on a DRM taxonomy the present invention is applicable to any taxonomy.

In further embodiments the present invention can use a predictive analysis tool to provide recommendations on plain language words phrases to users which can then be mapped to the DRM taxonomy. The present invention may provide recommendations for any particular plain language words phrases when the words phrases are used beyond a particular threshold e.g. a threshold associated with a particular quantity within a time period . Further recommendations for any particular plain language words phrases may also follow an approval process initiated by a user of the invention.

In embodiments the present invention generates a classification of two different portions of a defect record. One portion of the defect record that is classified is defined as the problem description portion which includes a description of a test or condition that was used to detect the defect. The other portion of the defect record that is classified is defined as the resolution description which defines what is necessary to resolve the defect a level of complexity associated with resolving the defect and whether the resolution includes adding removing and or correcting elements of the system being tested. Accordingly the present invention classifies a defect record that includes classifying how defects are found and how the defects are resolved by providing one or more plain language sentences.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium and or device hereinafter referred to as computer readable storage medium . A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Defect records plain language dictionary natural language engine and translation tool can be stored on one or more computing devices that can send receive information between each other and to computing device by using machine to machine interfaces such as an application programming interface API . The machine to machine interfaces can in embodiments i push plain language phrase taxonomy updates to computing device ii push gate logic to the client tool iii provide bidirectional transfer of defect record data iv provide bidirectional transfer of classifications v enable predictive text analytics in computing device and vi enable collaboration between different users via different communication systems.

Computing device can be resident on a network infrastructure or computing device of a third party service provider any of which is generally represented in . Computing device can be resident on a network infrastructure or computing device of a third party service provider any of which is generally represented in .

Computing device also includes a processor e.g. CPU memory A an I O interface and a bus . The memory A can include local memory employed during actual execution of program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. In addition the computing device includes random access memory RAM a read only memory ROM and an operating system O S .

Computing device is in communication with external I O device resource and storage system B. For example I O device can comprise any device that enables an individual to interact with computing device e.g. user interface or any device that enables computing device to communicate with one or more other computing devices using any type of communications link. The external I O device resource may be for example a handheld device PDA handset keyboard etc.

In general processor executes computer program code e.g. program control which can be stored in memory A and or storage system B. Moreover in accordance with aspects of the invention program control controls a classification application e.g. the processes described herein. Classification application can be implemented as one or more program code in program control stored in memory A as separate or combined modules. Additionally classification application may be implemented as separate dedicated processors or a single or several processors to provide the function of these tools.

While executing the computer program code the processor can read and or write data to from memory A storage system B and or I O interface . The program code executes the processes of the invention. The bus provides a communications link between each of the components in computing device .

In embodiments defect records are generated when a defect occurs within any particular application. The particular application can be written in any type of language e.g. SAP Oracle C Java etc. that is being used for any particular functionality e.g. such as engineering scientific administrative legal financial etc. . Defect records can be associated with records that include information regarding the type of defect and the resolution to the defect. Each one of defect records contains multiple fields of information that include i a unique defect record identifier ii a record open date iii a record close date iv problem description which describes how the defect was discovered and steps to recreate the defect and v resolution description which describes the resolution disposition of the defect. Defect records can be imported into computing device using a pre defined import procedure that imports defect records and assigns specific fields to each defect record . The specific fields can include plain language phrases for activity trigger target artifact type artifact qualifier impact source content and or age. Additional fields can also be added such as fields associated with work flow management.

Using classification application a user using a user interface can access one or more defect records and determine the type of testing or defect removal activity that revealed the defect. For example using classification application the user can select or enter a plain language phrase from plain language dictionary which is accessible via the user interface to describe the type of testing and or defect removal activity. Plain language dictionary can store words and phrases that can be selected by a user to map a particular word phrase for a particular defect record . For example plain language dictionary can store phrases such as reviewing requirement documents reviewing source code executing performance and scalability tests and or other phrases. In embodiments the user interface for the classification application may provide a list of plain language phrases from plain language dictionary that describe the complexity of the activity or any special conditions that existed in order for the defect to be determined. Additionally or alternatively the user interface will allow the user to enter any natural language phrase or word which can describe the activity or any special conditions. These newly entered words or phrases can be stored by plain language dictionary .

Once the user has selected or entered a plain language phrase that determines the type of testing or defect removal activity that revealed the defect natural language engine can map the selected plain language phrase to the DRM taxonomy associated with how the defect was determined or resolved. In embodiments natural language engine can be used to map the natural language words phrases selected or entered by the user to any type of taxonomy. For example natural language engine can store a mapping database that matches different natural language words phrases to DRM taxonomy.

In embodiments the user can enter a particular plain language phrase. If not provided in plain language dictionary plain language dictionary and or natural language engine can look for synonyms that would provide a description of the defect record. For example the user may enter mistake which is not provided in plain language dictionary . Plain language dictionary can then perform a synonym search and find error. The user can then be provided an opportunity to select error and thus use that term instead of the user entered term. The synonyms can be stored in a dictionary such as plain language dictionary .

In embodiments the user can select one or more plain language phrases from plain language dictionary that are used to describe a resolution that was implemented to resolve the defect or how the defect was discovered. Based on the plain language phrase used to describe the type of testing or defect removal activity classification application can provide a list of plain language phrases that describe the resolution by including the scope of the resolution and the modality of the resolution e.g. adding removing correcting restarting etc. . The user interface can also provide connecting words that bind multiple phrases into a single plain language sentence to describe the resolution of the defect or how the defect was discovered. The plain language phrase selected by the user is then mapped to the DRM taxonomy by natural language engine .

In embodiments natural language engine can include a predictive text analytics application which recommends to a user using computing device a particular word phrase to classify how the defect was discovered and or resolved. The suggested words phrases can be presented to the user via the user interface. By way of example natural language engine can provide recommendations based on how many times e.g. within a time period a plain language phrase has previously been selected or used. Alternatively natural language engine can provide recommendations or predict taxonomies based on a user providing instructions to natural language engine regarding phrases for particular types of DRM taxonomy.

The defect record along with the selected or entered plain language phrase which has been mapped is sent to translation tool . Translation tool can translate the plain language phrase to DRM taxonomy which is then sent with the defect record to another computing device being used by another user e.g. an analyst . The analyst can then analyze the defect record using the DRM taxonomy. Accordingly an untrained individual i.e. the classifier in DRM taxonomy can classify the defect record and a trained individual i.e. the analyst can use DRM taxonomy to analyze the defect record.

In embodiments workflow management can allow multiple computing devices to access defect records . This also allows for a variety of users e.g. classifiers to provide concurrent validation of classification selections which provides a level of quality assurance. For example one group of users classifiers can use a data table view displayed via the user interface that show mapped plain language phrases to DRM taxonomy whereas another group of users classifiers can view only the plain language phrases. This allows for different levels of access for different users.

The workflow management also allows for communications e.g. messaging VoIP text email etc. between different users and the sharing of defect record classification information in real time. This allows for the creation of an audit trail of classification choices and collaboration. The communication between different users can also be automatically translated into different plain languages e.g. from English to Hindi French to German etc. .

The computing device can comprise any general purpose computing article of manufacture capable of executing computer program code installed thereon e.g. a personal computer server etc. . However it is understood that computing device is only representative of various possible equivalent computing devices that may perform the processes described herein. To this extent in embodiments the functionality provided by computing device can be implemented by a computing article of manufacture that includes any combination of general and or specific purpose hardware and or computer program code. In each embodiment the program code and hardware can be created using standard programming and engineering techniques respectively.

Similarly server is only illustrative of various types of computer infrastructures for implementing the invention. For example in embodiments server comprises two or more computing devices e.g. a server cluster that communicate over any type of communications link such as a network a shared memory or the like to perform the process described herein. Further while performing the processes described herein one or more computing devices on server can communicate with one or more other computing devices external to server using any type of communications link. The communications link can comprise any combination of wired and or wireless links any combination of one or more types of networks e.g. the Internet a wide area network a local area network a virtual private network etc. and or utilize any combination of transmission techniques and protocols.

Specifically shows an activity field and a plain language field . In embodiments activity field can be used to define a type of defect removal activity associated with a particular defect. For example activity field can be associated with DRM taxonomy that defines activities such as requirements review design review code inspection unit test function test system test performance scalability information development review graphical user interface GUI review configuration validation and or any other type of activity. As should be understood by those of skill in the art other activities and taxonomies are contemplated by the present invention. Further the listed plain language phrases are not exhaustive nor are the plain language phrases limited to the English language. For example the plain language phrases can be modified to reflect local languages and local technical terminology.

Plain language field shows a plain language word phrase that is mapped to a type of activity defined in activity field . Plain language field can receive plain language words phrases selected or entered by a user using a plain language dictionary that is associated with a classification application. In embodiments plain language field can be mapped to the taxonomies in activity field by an administrator. In addition or alternate embodiments mapping database can use predictive analysis historical information or other analysis tools to map newly entered plain language phrases to existing taxonomies in activity field .

By way of example as shown in plain language phrase includes performing whitebox developer level tests e.g. the definition of a DRM value for a unit test and reviewing source code e.g. definition of the DRM value of code inspection. As further shown in the user interface allows the user to select the phrases using a mouse click or other selection method e.g. using a keyboard which can be combined into plain language sentences using a connector word or phrase . For example connector words or phrases can include While and the submitter found this defect by to combine the activity phrase and the trigger phrase to form a plain language sentence. These connector words or phrases can be auto generated or provided in a pull down menu. Once the plain language sentence is completed the present invention can then map these phrases to a certain taxonomy. This ensures that the user does not have to memorize or even be aware of the DRM taxonomy elements values and definitions.

More specifically shows several fields category field detected by field project field severity field reproducible field detected in cycle field target cycle field subject field detected on date field detected in version field status field regression field detected in release target release phrase field phrase field and description box . 

Category field defines the particular element e.g. the interface of an application which is associated with the defect record. Detected by field defines the user of the classification application. Project field defines a user defined name for the defect record. Severity field defines the level of impact of the defect record to the development of the application being analyzed. Reproducible field defines whether the defect record can be reproduced and or recorded. Detected in cycle field and target cycle field define when the defect was determined within the development cycle of the application. Subject field can be a title provided for the defect record. Detected on date field defines a date of the defect record. Detected in version field defines a version of the application that has the defect record. Status field defines whether the defect record has been assigned to a particular classifier and or whether the defect record is still actively being analyzed. Regression field defines any regression tools being used to determine the defect record. Detected in release field defines the particular release of a system associated with the application being analyzed. Target release defines the particular target release of the system associated with the application being analyzed.

In accordance with aspects of the invention phrase field provides the user with a field to enter plain language phrases. In embodiments the user can enter the plain language in a free style form which is less structured than the embodiment shown in . This can be a narrative form which describes a phrase. The present invention can also implement predictive analysis tools to assist the user in completing the narrative or a pull down menu can be provided which allows the user to select from several matches or close matches of the narrative e.g. plain language phrases. Thus the plain language phrases can be provided via a drop down menu or can automatically fill the field based on words phrases previously inputted by a user. For example phrase field can be associated with I found this defect by with the rest of the phrase being predicted within the field and then recommended to the user.

Similarly phrase field can include plain language phrases that are predicted to be associated with the defect records. The predicted plain language phrases can be provided via a drop down menu or can automatically fill the field based on predicting words phrases based on inputs by a user. For example phrase field can be associated with Specifically I was with the rest of the phrase being predicted by a prediction analysis tool and providing a recommendation within the field to the user.

Description box defines information about the nature of the defect that was found including the expected results of the test the actual results of the test the steps required to reproduce the defect and other subject matter information regarding the defect. Further description box includes information regarding the account and the user such as phone number email and other information.

In embodiments classification application plain language dictionary and natural language engine can be part of the same computing device or each can be located on separate computing devices. Classification application can be stored by classifier computing device or can be stored on a separate computing device that is in communication with classifier computing device . In embodiments classifier computing device can be any computing device such as a laptop workstation desktop computer mobile computing device or any other type of computing device with a display screen that can display a user interface e.g. a graphical user interface . Classifier computing device can be used by a user who classifies defect records using plain language words phrases.

Classification application is an application that can be used by the user of classifier computing device to classify the defect records using plain language words phrases. Classification application can include a user interface provided to classifier computing device that allows a user to classify defect records using plain language phrases. The plain language phrases can be selected from plain language dictionary which can be accessed by the user via classification application on classifier computing device . Classification application can use natural language engine to map the selected plain language phrase to DRM taxonomy.

Defect records can be one or more defect records. Each defect record includes a defect record identifier a record open date the record close date problem description how the defect was discovered and resolution description how the defect was resolved . The defect record is provided to the user by way of classification tool and classifier computing device .

Plain language dictionary can be an application stored on classifier computing device or stored on another computing device that communicates with classifier computing device . In either scenario the user of classifier computing device is not aware of plain language dictionary . In embodiments plain language dictionary can include one or more words and or phrases of any desired language e.g. English . The user of classifier computing device can access plain language dictionary via a user interface displayed by classifier computing device in order to select words phrases for classifying defect records .

Natural language engine maps words phrases to DRM taxonomy. For example natural language engine can have a database that maps a plain language phrase selected by a user to a particular type of DRM taxonomy element e.g. such as activity . Natural language engine can be stored by classifier computing device or can be stored on a separate computing device that communicates with classifier computing device . Similar to plain language dictionary the user of classifier computing device is not aware of natural language engine . In embodiments defect record with plain language classification is a user classified defect record.

Plain language to DRM translation tool is an application that translates defect record with plain language to a defect record with DRM classification . In embodiments plain language to DRM translation tool can be stored on a separate computing device than classifier computing device . Defect record with DRM classification is a defect record that includes DRM classification such as DRM taxonomy. Analyst computing device is a computing device used by another user e.g. an analyst to analyze defect record with DRM classification .

Computing device can be one or more computing devices e.g. a server that store one or more applications that i generates a user interface so that a user can classify defect records ii uses a plain language dictionary to provide a list of plain language phrases or a predictive tool to recommend plain language phrases to the user iii receives plain language phrases from a user using classifier computing device iv maps the plain language phrases to DRM taxonomy using a natural language engine stored by computing device v provides charts and graphs regarding different trends associated with defect records vi translates plain language phrases to DRM taxonomy and sends defect records with the DRM taxonomy to analyst computing device and vii provides communication e.g. email text messaging instant messaging etc. capabilities between classifier computing devices and analyst computing device .

In using a central computing system such as computing device the classification application via the user interface provides plain language fields with drop down choices and logic to gate choices. Thus computing device can push updates to the classification application to maintain plain language phrase taxonomy elements in synch with the standardized plain language phrase taxonomy. These updates can include new or revised plain language phrase translations in languages such as English Hindi or French.

While the user of classifier computing device can use the modules and applications stored by computing device to select plain language phrases to classify defect records the user is not able to view the DRM taxonomy stored by computing device . However analyst computing device can access defect records with DRM taxonomy and also other applications stored by computing device .

At step a classification application receives a defect record. At optional step the classification application can provide recommendations on plain language phrases to a user based on information within the defect record. At step the classification application receives one or more plain language phrases to classify the defect record. The plain language phrases can be provided by a user of a computing device as already discussed herein. At step the classification application maps the plain language phrases to the DRM taxonomy associated with the defect record. The natural language phrases can be associated with DRM taxonomy for activity trigger target artificial type artificial qualifier impact source content and or age amongst other items and or functions. The classification application can use a natural language engine to map the plain language phrase to DRM taxonomy.

At step the DRM application sends the defect record along with the plain language phrase to a translation tool. The translation tool translates the plain language phrase to DRM taxonomy. The defect record with the DRM taxonomy is sent to an analyst who then analyzes the DRM taxonomy for how a defect record was determined and how the defect record was resolved.

In embodiments a service provider such as a Solution Integrator could offer to perform the processes described herein. In this case the service provider can create maintain deploy support etc. the computer infrastructure that performs the process steps of the invention for one or more customers. These customers may be for example any business that uses technology. In return the service provider can receive payment from the customer s under a subscription and or fee agreement and or the service provider can receive payment from the sale of advertising content to one or more third parties.

By way of a non limiting example a user e.g. a classifier can use natural language phrases sentences in a classification tool without predictive text analytics. This allows for an untrained non expert user of DRM taxonomy to perform defect record classification according to the DRM taxonomy. This requires that the defect record data be exported from defect tracking software to the classification tool.

In this example a defect record extract is obtained from a defect tracking database. The defect record extract contains at least one defect record but can contain hundreds or even thousands of defect records. Each defect record can contain multiple fields which include i a unique defect record identifier ii the record open date iii the record close date iv problem description which describes how the defect was discovered and steps to recreate the defect and v resolution description which describes how the defect was resolved.

The defect records are imported into the classification tool. A predefined import procedure adds DRM specific fields to each defect record. These fields can include natural language phrases for DRM activity DRM trigger DRM target DRM artificial type DRM artifact qualifier DRM impact DRM source DRM content and DRM age. Additional fields can be added such as fields associated with work flow management. The workflow management includes processes for apportioning defects to one or more different classifiers. In this example implementation the classification application has a client server scheme so that multiple classifiers can access defect records assigned to them for classification at the same time. Accordingly the classification tool can receive replicated classifications from different classifiers and determine that one or more classifications are replications of other classifications.

The classifier can access an assigned defect record and read the problem description to gain an understanding of the kind of testing or defect removal activity associated with the defect. The classification tool interface allows the classifier to select the natural language phrase that describes the testing or removal activity. Based on this selection the classification tool via a user interface presents a list of natural language phrases that describe the complexity of the activity or the special conditions that had to exist in order for the defect to be revealed e.g. the system gates subsequent choices . The classification tool interface provides connecting words that can bind phrases into a descriptive sentence.

The classifier next reads the resolution description to understand the resolution that was implemented to satisfy the closure criteria for the defect. The classification tool via the user interface allows the classifier to select the natural language phrase that describes the type of resolution. Based on the selection the classification tool gates e.g. provides appropriate lists of natural language phrases that further characterize the resolution that include i the scope of the resolution and ii the modality e.g. adding removing correcting restarting etc. of the resolution. Again the classification tool provides the connecting words that bind phrases into a descriptive sentence.

In this example implementation real time automated local language translation is enabled such that the classifier and or an expert classifier can view the user interface in the language of their choice and instant chat can be conducted in each participant s language of choice. When all the defects have been classified and validated by classifier and expert classifier who may have additional training in comparison to the level of training of a classifier the classification tool provides workflows for creating tables and graphs of the classified data e.g. distribution and trend charts to enable DRM analysis.

By way of another non limiting example a classification application can be used by application development and testing resources in disparate geographic locations. This example includes the use of predictive text analytics and a central computing system.

User interfaces with the central computing system provide for i pushing natural language phrase taxonomy updates to classification applications ii pushing gate logic to the classification application iii bidirectional transfer of defect record data iv bidirectional transfer of classifications v enabling predictive text analytics in the classification application and vi enabling collaboration between and among different users by using communication tools such as instant chat and language translation tools between different languages e.g. from French to English Spanish to Hindi etc. .

In using a central computing system the classification application via the user interface provides plain language fields with drop down choices and logic to gate choices. The central computing system can push updates to the classification application to maintain plain language phrase taxonomy elements in synch with the standardized plain language phrase taxonomy. These updates can include new or revised plain language phrase translations in languages such as English Hindi or French.

Further predictive text analysis is enabled by communicating with the central computing system upon certain events. These events can include adding a problem description or resolution description to a particular defect record. The predictive text analysis allows users to receive predictive text suggestions while a user is entering narrative text into for example a problem description for a defect record. Additionally the classification application can include added workflow logic that prompts the user to confirm the suggested defect classifications.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

