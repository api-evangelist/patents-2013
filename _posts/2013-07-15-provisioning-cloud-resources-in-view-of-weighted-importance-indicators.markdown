---

title: Provisioning cloud resources in view of weighted importance indicators
abstract: Cloud resource provisioning is described. A cloud resource provisioning method may include obtaining cloud resource usage data by a process, wherein the cloud resource usage data identifies a cloud resource consumed by the process and a usage level associated with the cloud resource. The method may also include assigning an importance indicator to the cloud resource, and identifying a recommended cloud resource having available capacity with respect to the usage level in view of the importance indicator.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09419913&OS=09419913&RS=09419913
owner: Red Hat, Inc.
number: 09419913
owner_city: Raleigh
owner_country: US
publication_date: 20130715
---
This application is a divisional of U.S. patent application Ser. No. 12 790 366 filed on May 28 2010 the entire contents of which is incorporated by reference herein.

This invention relates generally to cloud computing and more particularly to systems and methods for analyzing cloud deployment solutions taking into account the relative importance of various cloud resources.

The advent of cloud based computing architectures has opened new possibilities for the rapid and scalable deployment of information technology services including computing resources software and data for myriad uses such as virtual Web stores media outlets and other on line sites or services. In general a cloud based architecture deploys a set of hosted resources such as processors storage space operating systems software and other components that can be combined or strung together to form virtual machines. A user or customer can request the instantiation of a provisioned virtual machine or set of machines incorporating specific cloud resources from a central server or management system to perform intended tasks or run specific applications. For example a user may wish to set up and instantiate a virtual server from the cloud to create a storefront to market products or services on a temporary basis for instance to sell tickets to an upcoming sports or musical performance. The user can lease or subscribe to the set of cloud resources including software needed to build and run the set of instantiated virtual machines on a comparatively short term basis such as hours or days for their intended application.

Typically when a user utilizes a cloud the user must monitor or track the software applications executed in the cloud and or the processes instantiated in the cloud. For example the user may track the cloud processes to ensure that the correct cloud processes have been instantiated that the cloud processes are functioning properly and or efficiently that the cloud is providing sufficient resources to the cloud processes etc. Due to the user s requirements and usage including third party usage of the cloud the user may have many applications and or processes instantiated in a cloud and may be utilizing multiple independent clouds to support the cloud processes. As such the user may have difficulty determining a satisfactory deployment architecture in the cloud especially as the applications and or processes are dynamically instantiated or terminated over time. Additionally the user may have difficulty tracking the applications and or processes utilized by the cloud processes. For example as the applications and or processes run in the cloud s the cloud processes may spawn new cloud processes. As such the initial deployment architecture hosting the user s applications and or processes may no longer be satisfactory for or even capable of supporting the user s applications and or processes.

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in many other types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific embodiments. Electrical mechanical logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present teachings. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

Embodiments of the present teachings relate to systems and methods for measuring usage of and intelligently deploying cloud computing resources. More particularly embodiments relate to platforms and techniques in which a decision system can gather resource usage data of applications and or processes running in a cloud computing environment analyze the usage data associated with the running applications and or processes including taking into account various importance levels for various resources and or functionality and provide customized deployment architectures that address the various importance levels of the various resources.

In certain embodiments a decision system can be configured to provide recommendations suggestions alternatives options assignments and or implementations for customized cloud resource deployment architectures to users of a cloud computing environment. In particular the decision system can be configured to obtain cloud resource usage data representing cloud service consumption by a specific user. Among various embodiments the cloud resource usage data can be provided by the user gathered by the decision system retrieved from previously recorded resource usage parameters retrieved from a computer readable storage medium storing usage data of similar users or obtained some other way. In embodiments where the decision system gathers the usage data the decision system can be configured to monitor the applications executed activities engaged in and or computing processes instantiated in the cloud that are associated with the user. For example the decision system can be configured to monitor the cloud services and resource capacity consumed by the user in the form of number and type of computing processes instantiated running time of applications and or computing processes cloud processing resources used cloud storage resources used cloud software programs utilized by the computing processes etc.

In accordance with certain embodiments once the resource usage data is initially collected the decision system can be configured to determine a baseline requirement for cloud resources from the resource usage data. The baseline requirement for cloud resources can be recorded in a format defined using a data definition accessible to other computing resources in the cloud. In some embodiments the decision system can be configured to provide reports to the user describing the baseline requirement for cloud resources determined from the user s applications executed and or processes instantiated in the cloud.

In some embodiments the decision system includes configurable logic or variables that can be configured to assign different levels of importance to one or more cloud resources included in the resource usage data. For example the configurable logic or variables may be adjusted so that obtaining a specified level of processor cycles per hour is more important than long term data storage space.

In accordance with certain embodiments the decision system can be configured to apply the configurable logic to the baseline requirement for cloud resources and produce an adjusted requirement for cloud resources. The adjusted requirement can reflect the different levels of importance of the resources parameters that make up the resource usage data.

In certain embodiments the decision system can be configured to determine a set of cloud resources that are available and that satisfy the adjusted requirement for cloud resources. In some embodiments the decision system can be configured to analyze the adjusted requirement for cloud resources and the available cloud resources to generate a solution that closely or best or in some cases optimally matches the required cloud resources to the available cloud resources. In some embodiments the analysis may be based on rules for customizing resource deployment architectures in the cloud configuration data reflecting the user s current deployment architecture and or a software license requirement associated with the user s applications.

In certain embodiments after determining a set of cloud resources that are available and that satisfy the adjusted requirement for cloud resources the decision system can be configured to assign the determined set of cloud resources to the user. The determined set of cloud resources may be a customized deployment architecture within one or more clouds that meet the user s adjusted requirement for cloud resources taking into account the differences in importance of certain resources over other resources. In some embodiments the decision system can present the assigned set of cloud resources e.g. a customized cloud resource deployment architecture to the user for approval before deploying the set of cloud resources in the cloud computing environment to run the user s application s and process es .

By generating customized cloud resource deployment architectures that take into account the relative importance of various resources the decision system can provide cloud resources that satisfy the resource needs of a user s applications and or processes where the resource needs are more complex than merely an equal need for each resource. In addition the decision system can adjust the cloud resources assigned to the user as the relative importance of various resources changes over time. As such the decision system allows the computing processes in the cloud to run properly and efficiently on a set of cloud resources that may dynamically change in response to factors such as user preference trends in usage of the computing processes and or deployed cloud resources predicted future usage of the computing processes and or deployed cloud resources past usage patterns of the computing processes and or deployed cloud resources and other factors.

In embodiments the entire set of resource servers and or other hardware or software resources used to support the cloud along with its instantiated virtual machines can be managed by a cloud management system . The cloud management system can comprise a dedicated or centralized computing system such as a server and or other software hardware and network tools that communicate via one or more networks such as the Internet or other public or private network with all sets of resource servers to manage the cloud and its operation. To instantiate a new set of virtual machines a user can transmit an instantiation request to the cloud management system for the particular type of virtual machine they wish to invoke for their intended application. A user can for instance make a request to instantiate a set of virtual machines configured for email messaging or other applications from the cloud . The request can be received and processed by the cloud management system which identifies the type of virtual machine process or other resource s being requested. The cloud management system can then identify a collection of resources needed to instantiate that machine or resource. In determining the needed cloud resources the cloud management systems can take into account the relative importance of certain resources in comparison to other resources and adjust the composition of the collection of cloud resources to reflect resource importance.

In embodiments the user s instantiation request can specify a variety of parameters defining the operation of the set of virtual machines to be invoked. For example if the instantiation request is for virtual transaction servers used to support temporary special event Web storefronts or other short term transaction site then the instantiation request can for example specify a defined period of time for which the instantiated machine or process is needed. The period of time can be for example an hour a day or other increment of time. In embodiments the user s instantiation request can specify the instantiation of a set of virtual machines or processes on a task basis rather than for a predetermined amount of time. For instance a user could request resources until a software update is completed. The user s instantiation request can specify other parameters that define the configuration and operation of the set of virtual machines or other instantiated resources. For example the request can specify an amount of processing power capacity or input output I O throughput capacity the user wishes to be available to each instance of the virtual machine or other resource. In some embodiments the requesting user can for instance specify a service level agreement SLA acceptable for their application. Other parameters and settings can be used. In other embodiments the user s request can specify resource importance levels so that some resource s are designated as more important in comparison to other resources. For example a user deploying a set of virtual customer support workstations may place a greater weight of importance on a communications bandwidth resource and or an uptime resource in comparison to a lower importance memory allocation resource and or a lower importance operating system version resource. One skilled in the art will realize that the user s request can likewise include combinations of the foregoing exemplary parameters and others.

In some embodiments when the request to instantiate a set of virtual machines or other resources has been received and the necessary resources to build that machine or resource have been identified and adjusted to reflect the relative importance of various cloud resources the cloud management system can communicate with one or more set of resource servers to locate resources that are available to supply the required components. The cloud management system can select providers from the diverse set of resource servers to assemble the various components needed to build the requested set of virtual machines or other resources. It may be noted that in some embodiments permanent storage such as hard disk arrays may not be included or located within the set of resource servers available to the cloud management system because the set of instantiated virtual machines or other resources may be intended to operate on a purely transient or temporary basis. In embodiments other hardware software or other resources not strictly located or hosted in the cloud can be leveraged as needed. For example other software services that are provided outside of the cloud and hosted by third parties can be invoked by in cloud virtual machines. For further example other non cloud hardware and or storage services can be utilized as an extension to the cloud either on an on demand or subscribed or decided basis.

With the resource requirements and available cloud resources identified the cloud management system can extract and build the set of virtual machines or other resources on a dynamic or on demand basis. For example one set of resource servers can respond to an instantiation request for a given quantity of processor cycles with an offer to deliver that computational power immediately and guaranteed for the next hour. A further set of resource servers can offer to immediately supply communication bandwidth capacity for example on a guaranteed minimum or best efforts basis. In other embodiments the set of virtual machines or other resources can be built on a batch basis or at a particular future time. For example a set of resource servers can respond to a request for instantiation at a programmed time with an offer to deliver the specified quantity of processor cycles within a specific amount of time such as the next 12 hours.

The cloud management system can select a group of available servers in the set of resource servers that match to some extent the instantiation request for each component needed to build the virtual machine or other resource. The cloud management system can then coordinate the integration of the completed group of servers from the set of resource servers to assign build and launch the requested set of virtual machines or other resources for the requesting user. The cloud management system can track the combined group of servers selected from the set of resource servers and or other distributed resources that are dynamically or temporarily combined to produce and manage the user requested virtual machine population or other resources.

In embodiments the cloud management system can generate a resource aggregation table that identifies the various sets of resource servers that will be used to supply the components of the virtual machine or process. The sets of resource servers can be identified by unique identifiers such as for instance Internet Protocol IP addresses or other addresses. The cloud management system can register the finalized group of servers in the set of resource servers contributing to an instantiated machine or process.

The cloud management system can then set up and launch the initiation process for the virtual machines processes or other resources to be delivered from the cloud. The cloud management system can for instance transmit an instantiation command or instruction to the registered group of servers in set of resource servers . The cloud management system can receive a confirmation message back from each participating server in a set of resource servers indicating a status regarding the provisioning of their respective resources. Various sets of resource servers can confirm for example the availability of a dedicated amount of processor cycles amounts of electronic memory communications bandwidth capacity or applications or other software prepared to be served.

As shown for example in the cloud management system can then instantiate one or more than one set of virtual machines or other processes based on the resources supplied by the registered set of resource servers . In embodiments the cloud management system can instantiate a given number for example 10 500 1000 or other number of virtual machines to be made available to third party users e.g. customers on a network such as the Internet or other public or private network. Each virtual machine can be assigned an instantiated machine ID that can be stored in the resource aggregation table or other record or image of the instantiated population. Additionally the cloud management system can store the duration of each virtual machine and the collection of resources utilized by the complete set of instantiated virtual machines .

In embodiments the cloud management system can further store track and manage a user s identity and associated set of rights or entitlements to software hardware and other resources. Each user that populates a set of virtual machines in the cloud can have specific rights and resources assigned and made available to them. The cloud management system can track and configure specific actions that a user can perform such as provision a set of virtual machines with software applications or other resources configure a set of virtual machines to desired specifications submit jobs to the set of virtual machines or other host manage other users of the set of instantiated virtual machines or other resources and other privileges or actions. The cloud management system can further generate records of the usage of instantiated virtual machines to permit tracking billing and auditing of the services consumed by the user. In embodiments the cloud management system can for example meter the usage and or duration of the set of instantiated virtual machines to generate subscription billing records for a user that has launched those machines. Other billing or value arrangements are possible.

The cloud management system can configure each virtual machine to be made available to users of the one or more networks via a browser interface or other interface or mechanism. Each instantiated virtual machine can communicate with the cloud management system and the underlying registered set of resource servers via a standard Web application programming interface API or via other calls or interfaces. The set of instantiated virtual machines can likewise communicate with each other as well as other sites servers locations and resources available via the Internet or other public or private networks whether within a given cloud or between clouds.

It may be noted that while a browser interface or other front end can be used to view and operate the set of instantiated virtual machines from a client or terminal the processing memory communications storage and other hardware as well as software resources required to be combined to build the virtual machines or other resources are typically hosted remotely in the cloud . In embodiments the set of virtual machines or other resources may not depend on or require the user s own on premise hardware or other resources. In embodiments a user can therefore request and instantiate a set of virtual machines or other resources on a purely off premise basis for instance to build and launch a virtual storefront or other application.

Because the cloud management system in one regard specifies builds operates and manages the set of instantiated virtual machines on a logical level the user can request and receive different sets of virtual machines and other resources on a real time or near real time basis without a need to specify or install any particular hardware. The user s set of instantiated virtual machines processes or other resources can be scaled up or down immediately or virtually immediately on an on demand basis if desired. Similarly the resources assigned to a virtual machine may change over time with changes to the importance of a resource to the operation of the virtual machine changes to the importance of a resource to the user changes to the importance of a resource with respect to the anticipated usage of the virtual machine or other changes to the importance of a resource. In embodiments the various sets of resource servers that are accessed by the cloud management system to support a set of instantiated virtual machines or processes can change or be substituted over time. The type and operating characteristics of the set of instantiated virtual machines can change or can remain constant or virtually constant since instances are assembled from abstracted resources that can be selected and maintained from diverse sources based on uniform specifications.

In some embodiments the various sets of cloud resources and resource servers that support a set of instantiated virtual machines or processes changes over time as new clouds become available. In these embodiments the resources services and or capabilities offered by a new cloud are compared to the resource requirements of an existing user s application s process es as indicated for example in the user s recorded usage or utilization data. If the new cloud offers provides the resources services and or capabilities required by the user and also provides some advantage compared to the cloud presently hosting the user s application s process es then switching the user s application s process es or a subset to the new cloud can recommended or implemented. This process could be performed for more than one user such that several different users may benefit from being hosted on the new cloud.

As an example consider a case where utilization data shows that a user consumes virtual instances peaking at intervals of 48 hours with a relatively low level of network traffic capacity consumption and storage capacity consumption and a new cloud begins offering resource sets designed to support high compute cycle consumption combined with short term data storage for a discounted price. In this case a decision system can recommend assigning or assign the user s computing processes to the new cloud gaining the benefit of the discounted price. The decision system may recommend a switch to the new cloud for resource related reasons as well. For example the decision system may recommend a switch to the new cloud because the new cloud offers additional processing capacity that the user is projected to need.

In terms of network management of the set of instantiated virtual machines that have been successfully configured and instantiated the cloud management system can perform various network management tasks including security maintenance and metering for billing or subscription purposes. The cloud management system of a given cloud can for example install or terminate applications or appliances on individual machines. The cloud management system can monitor operating virtual machines to detect any virus or other rogue process on individual machines and for instance terminate the infected application or virtual machine. The cloud management system can likewise manage an entire set of instantiated virtual machines or other resources on a collective basis for instance to push or deliver a software upgrade to all active virtual machines. Other management processes are possible.

In embodiments more than one set of virtual machines can be instantiated in a given cloud at the same overlapping or successive times. The cloud management system can in such implementations build launch and manage multiple sets of virtual machines based on the same or different underlying set of resource servers with populations of different sets of instantiated virtual machines such as may be requested by different users. The cloud management system can institute and enforce security protocols in a cloud hosting multiple sets of virtual machines. Each of the individual sets of virtual machines can be hosted in a respective partition or sub cloud of the resources of the cloud . The cloud management system of a cloud can for example deploy services specific to isolated or defined sub clouds or isolate individual workloads processes within the cloud to a specific sub cloud. The subdivision of the cloud into distinct transient sub clouds or other sub components which have assured security and isolation features can assist in establishing a multiple user or multi tenant cloud arrangement. In a multiple user scenario each of the multiple users can use the cloud platform as a common utility while retaining the assurance that their information is secure from other users of the overall cloud system. In further embodiments sub clouds can nevertheless be configured to share resources if desired.

In embodiments and as also shown in the set of instantiated virtual machines generated in a first cloud cloud can also interact with a set of instantiated virtual machines or processes generated in a second third or further cloud cloud m The cloud management system of a first cloud cloud can interface with the cloud management system of a second cloud cloud m to coordinate those domains and operate the clouds and or virtual machines or processes on a combined basis. The cloud management system of a given cloud can track and manage individual virtual machines or other resources instantiated in that cloud as well as the set of instantiated virtual machines or other resources in other clouds.

In the foregoing and other embodiments the user making an instantiation request or otherwise accessing or utilizing the cloud network can be a person customer subscriber administrator group e.g. a department corporation organization or other entity. In embodiments the user can be or include another virtual machine application or process. In further embodiments multiple users or entities can share the use of a set of virtual machines or other resources.

In embodiments one or more users and can utilize one or more of the clouds and to support computing processes of the user and . For example the user can utilize the cloud to support computing processes and can utilize cloud to supporting computing processes . The computing processes and can be any type of computing processes such as virtual machines software appliances software programs e.g. OS applications and the like etc. The users and can be any type of entity such as individual users groups of individuals such as a department corporations companies universities and the like that utilizes the clouds and to support computing processes. While will be described with reference to user one skilled in the art will realize that the processes and methods can be applied to any of the users and or any other users. Additionally while illustrates users and one skilled in the art will realize that methods and processes can apply to any number of users.

In embodiments the clouds and can be any type of cloud computing environments such as the cloud computing environments described above in . As described above the clouds and can include any number of computing systems to support the computing processes in the cloud. The computing systems can be any type of computing systems capable of supporting computing processes such as servers laptops desktops and the like. The computing systems can include a number of hardware resources which are used to support the computing processes e.g. virtual machines software appliances processes and the like in the clouds and such as processors memory network hardware and I O bandwidth storage devices etc. Additionally the clouds and can include a cloud management system and respectively. The cloud management systems and can be supported by the computing resources of the clouds and respectively.

In embodiments the cloud and or can be operated and controlled by any number of entities. For example the cloud and or the cloud can be owned and or operated by a cloud vendor such as Amazon Inc. in order to provide the services of the cloud and or the cloud to subscribers and customers. Likewise for example the cloud and or the cloud can be owned and or operated by one or more of the users and and the resources of the cloud and or the cloud can be used by the entity internally to support various computing processes. As such in either case the cloud and the cloud can be configured to include hardware described above and software resources to support computing processes. For example if the cloud and or the cloud is operated by a cloud vendor the software resources can include operating systems such as a distribution of the Linux operating system provided by Red Hat Corporation and various software programs requested or typically desired by subscribers such as middleware applications web hosting applications electronic mail email applications and the like. Likewise for example if the cloud and or the cloud is operated by an entity for internal use the software resources can include software resources required to support the specific internal uses. For instance the cloud can be utilized by a corporation to perform simulations on a product and the software resources can include operating systems and application programs to run the simulations.

In embodiments the one or more networks can be or include the Internet or other public or private networks. The one or more or more networks can be or include wired wireless optical and other network connections. One skilled in the art will realize that the one or more networks can be any type of network utilizing any type of communication protocol to connect the computing systems.

In embodiments due to the dynamics of the computing processes and the user can desire to actively monitor the computing processes and . For instance the user can desire to monitor the computing processes and to ensure that the appropriate computing processes are running and functioning properly. Likewise the user can desire to monitor the computing processes and to determine the usage of the resources of the clouds and for billing and other purposes. Additionally the computing processes and can spawn new computing processes in the clouds and which the user can desire to monitor.

In embodiments the decision system can be configured to monitor the clouds and for the one or more users and . In particular the decision system can be configured to monitor the computing process es associated with the users and and supported by the clouds and . The decision system can be configured to subscribe the users and to the monitoring services provided by the decision system . Once subscribed the decision system can be configured to receive access information from the users and . The decision system can be configured to utilize the access information to access and communicate with the clouds and in order to monitor the computing processes supported by the clouds and and to collect or obtain information about the computing processes such as data about usage of cloud resources that is attributable to each of users and . Additionally the decision system can be configured to report any information collected while monitoring the users and .

In embodiments the decision system can be operated by an entity that provides the monitoring services to the users and . The monitoring services can be provided to the users and for a fee. The decision system can be supported by one or more computing systems such as servers laptops desktops and the like. The decision system can include or utilize conventional components of a computing system such as processors memory network interfaces storage devices etc.

In embodiments to monitor the computing processes and the decision system can be configured to include a monitoring module . The monitoring module can be configured to cooperate and communicate with the users and to subscribe the users and to the monitoring services and to report any gathered information to the users and . The monitoring module can be configured to monitor one or more aspects of the running processes based on one or more predefined parameters or a set of parameters defined by the user . A parameter may reflect or correspond to a level of usage or to consumption of a cloud resource. The parameters can include for example processing hardware utilization data such as processor utilization data and memory utilization data software application utilization data operating system software utilization data resource reliability data such as processor up time network bandwidth utilization data storage utilization data etc. Likewise the monitoring module can be configured to cooperate and communicate with the clouds and to monitor computing processes supported by the cloud and . In one embodiment the monitoring module can be implemented as a software program that is configured to execute on the decision system . Likewise the monitoring module can be implemented as a portion of other software programs configured to execute on the decision system or implemented in hardware. Regardless of implementation the monitoring module can be configured to include the necessary logic commands instructions and protocols to perform the relevant processes described below. In some implementations the monitoring module can be written in any type of conventional programming language such as C C JAVA Perl and the like. Additionally the monitoring module can be stored in computer readable storage devices or non transitory media CD DVD hard drive portable storage memory etc. whether local to the decision system or remotely located.

In some embodiments once the user has subscribed the monitoring module can be configured to generate and maintain a set of usage or utilization data . Each utilization data in the set can be configured to store an identification of the running processes such as computing processes and the user associated with the running processes and any information collected during the monitoring of the computing processes and . The monitoring module can maintain the set of utilization data in a repository such as a database. The repository can be stored in computer readable storage devices or non transitory media CD DVD hard drive portable storage memory etc. whether local to the decision system or remotely located.

In embodiments once the user is subscribed the monitoring module can be configured to communicate with the clouds and to monitor the computing processes and . For example the monitoring module can be configured to retrieve the utilization data associated with the user and or the computing processes and associated with the user . To retrieve the utilization data the monitoring module can be configured to include the necessary logic commands instructions and protocols to search the set of utilization data and to retrieve the utilization data and the access information for the user . For instance the monitoring module can be configured to include the necessary queries and commands to communicate with and retrieve information from the repository regarding the cloud resources used by processes and associated with the user .

The monitoring module can be configured to monitor the computing processes and and collect various information such as information regarding usage of cloud resources by the computing processes and details of the computing processes and and the like. For example the monitoring module can be configured to collect information such as type and number of hardware resources of the clouds and utilized by the computing processes and amount of processing cycles utilized amount of network bandwidth utilized amount of storage space utilized amount of memory utilized etc. the type and number of software resources of the clouds and utilized by the computing processes and the duration for which the hardware and software resources are utilized the current fees for using the clouds and and the like. For an additional example the monitoring module can be configured to collect information about details of the computing processes and themselves such as number and type of the computing processes and instantiated start time and duration of the computing processes and software programs utilized by the computing processes and and the like.

In embodiments in order to monitor and collect information about the computing processes and the monitoring module can be configured to communicate with the cloud management systems and of the clouds and respectively. For example the monitoring module can be configured to communicate with the cloud management systems and in order to collect information about the usage of the resources of clouds and . Likewise the monitoring module can be configured to communicate with the computing processes and to collect information about the details of the computing processes and and about the resources used by computing processes and . For example the monitoring module can be configured to communicate with virtual machine monitors supporting virtual machines with the virtual machines directly with software appliances with the software programs and the like.

In embodiments to communicate with the clouds and the monitoring module can be configured to establish a connection with the cloud and via the network . In particular the monitoring module can be configured to establish a connection with the cloud management systems and and or a connection to the computing processes and . To achieve this the monitoring module can be configured to include the necessary logic instructions commands and protocols to communicate with the cloud management systems and and or via a connection to the computing processes and via network . For example the monitoring module can be configured to establish a connection using network protocols such as Internet protocol IP user datagram protocol UDP transmission control protocol TCP hypertext transfer protocol HTTP file transfer protocol FTP electronic mail email protocols or any other type of known or proprietary network protocol.

In embodiments the monitoring module can be configured to monitor the computing processes and periodically for a specified duration and or upon the occurrence of events. For example the monitoring module can be configured to monitor the computing processes and upon the subscription of the user and periodically every hour once a day etc. while the user is subscribed.

In embodiments once information such as cloud resource usage data about the computing processes and is collected the monitoring module can be configured to store the collected information in the utilization data associated with a user such as user . As such the monitoring module can be configured to classify the collected information and store the information in the utilization data . To achieve this the monitoring module can be configured to include the necessary logic commands instructions and protocols to sort and classify the collected information and store the sorted and classified information in the utilization data .

In embodiments when the information is collected the monitoring module can be configured to generate reports to provide the collected information to the user . The monitoring module can be configured to generate the report in any format to display the collected information to the user or for other purposes. To achieve this the monitoring module can include the necessary logic commands instructions and protocols to retrieve the collected information from the utilization data record and organize the collected information into reports.

In embodiments the monitoring module can be configured to generate and provide the reports to for example the user upon the occurrence of any number of events. For example the monitoring module can be configured to provide the reports upon request of the user and or periodically. The monitoring module can be configured to receive the request for the reports via an interface . Likewise the monitoring module can be configured to provide the reports via the interface . Additionally the monitoring module can provide the reports to the user via the network utilizing any type of network protocol such as Internet protocol IP user datagram protocol UDP transmission control protocol TCP hypertext transfer protocol HTTP file transfer protocol FTP electronic mail email protocols or any other type of known or proprietary network protocol.

In embodiments the decision system can be configured to utilize the information collected during the monitoring to provide other services to the users and . In particular the decision system can be configured to verify that the software programs utilized by the computing processes and instantiated in the clouds and comply with software license requirements. For example as the computing processes and run the computing processes and can change over time. For instance the computing processes and can spawn new computing processes which can utilize new instances of software programs.

In embodiments to generate customized deployment architectures that account for the relative importance of cloud resources the decision system can be configured to include a customization module . In some embodiments the customization module can be implemented as a software program with configurable logic that executes on the decision system . Likewise the customization module can be implemented as a portion of other software programs such as monitoring module including configurable logic that executes on the decision system . In either case the customization module can be configured to include the necessary logic adjustable rules commands instructions and protocols to perform the processes and functions described below. In some implementations the customization module can be written in any type of conventional programming language such as C C JAVA Perl and the like. Additionally the customization module can be stored in computer readable storage devices or non transitory media CD DVD hard drive portable storage memory etc. whether local to the decision system or remotely located.

In embodiments the customization module can be configured to generate and to maintain a set of deployment rules . The set of deployment rules can be configured to store rules algorithms decision logic or best practices for deploying resources in a computing cloud environment such as the clouds and . The set of deployment rules can be configured to include requirements for software programs provided by the owners and operators of the clouds and . The set of deployment rules can also be configured to include resources available in the clouds and . Likewise the set of deployment rules can be configured to include requirements or preferences for software programs provided by software vendors which can be software vendors independent of the decision system and the clouds and such as independent software vendors ISVs .

In embodiments the set of deployment rules can be configured in any format and can include any information that provides the necessary logic such as algorithms and or heuristics for generating customized deployment architectures that account for the relative importance of cloud resources which may be based on the information collected during the monitoring of the computing processes and . For example the set of deployment rules can include any number rules based on the resource utilization of running processes and . For instance a rule can specify that deployment architecture must include cloud resources sufficient to meet the peak requirement for each resource that is recorded in utilization data . For another instance a rule can specify that if an application s processor capacity utilization over the course of a period of time is less than ten percent then the application is an excellent candidate for virtualization. Another rule can specify that if an application has a high network bandwidth capacity requirement then the application is an excellent candidate to be run on a public cloud. The customization module can be configured to store the set of deployment rules in the repository .

In certain embodiments the customization module can be configured to utilize and to maintain a set of resource importance data representing the relative importance or significance of each cloud resource to a user and or to the applications or processes associated with a user. As shown the set of resource importance data may be stored in repository . In one embodiment the set of resource importance data can include weighting data for cloud resources needed by the applications or processes associated with a user where the weighting data associated with a cloud resource indicates that resource s relative importance among the set of needed resources. In this embodiment the weighting data can be used by customization module to deploy cloud resources to support the applications or processes associated with a user. Different cloud resources can be assigned different matching or decision weights depending on factors such each resource s significance in the usage history of the user s applications processes each resource s anticipated future usage user preference etc. For example a set of resource importance data for a user deploying a set of virtual customer support workstations may include data indicating a greater importance weight on communications bandwidth capacity and processor up time and a lower importance weight on memory allocation and operating system version. When customization module determines a set of cloud resources to be deployed in support of the virtual customer support workstations it can adjust the set of resources to ensure adequate communications bandwidth and processor up time even though the adjustment may cause a tradeoff in the form of a lesser amount of memory allocation and the use of an less desirable e.g. older operating system version. In such embodiments customization module chooses a deployment configuration by giving preference to the resources identified as being more important over the resources identified as being less important.

In embodiments the set of resource importance data can be configured in any format and can include any information that represents the relative importance or significance of various cloud resources such as weights factors ratings categories etc. For example the set of resource importance data can include weighting factors reflecting the relative amount of usage of various cloud resources during past monitoring of running processes and . For instance a weighting factor can indicate that it is of low importance for an application to have 500 megabytes of memory capacity available to it because the application s memory usage over the course of a period of time hits a maximum of 500 Mbytes only one percent of the time. Another weighting factor can indicate high importance for the application to have 200 megabytes of memory capacity available to it because the application s memory usage over the course of a period of time is at 200 megabytes or less 97 percent of the time. For another instance a weighting factor can indicate that memory capacity is a low importance resource that can be traded off in favor of gaining high importance processing capacity resource. In some embodiments the importance of various cloud resources e.g. represented by weights in resource importance data can change over time as a function of ongoing updating of the usage history of an application process or as a function of other factors such as user input. Correspondingly the set of cloud resources output by decision system as recommendations and or assignments to support a user and the user s applications processes can change over time as well.

A historical usage data set such as data set can be used to determine a baseline requirement for cloud resources associated with a particular application or process or the applications processes associated with a particular user. The baseline requirement can include data such as resource attributes or resource parameters that represent the cloud resources needed by an application or process. For example the usage data in data set may indicate that the peak network traffic level measured during 24 duration periods was 878 Mbit s. Based on this peak the baseline requirement for the application represented by data set may include a parameter indicating that the network traffic level resource requirement is 878 Mbit s in this case the baseline requirement is a requirement for enough cloud resources to meet the peak demand for network traffic.

Continuing this example without adjustment decision system can generate a set of cloud based resources for this application that includes web network traffic resources sufficient to provide 878 Mbit s of capacity at any time. In embodiments the decision system can employ configurable logic such as configurable deployment rules and or resource importance data that adjusts the baseline resource requirements according to the importance of a resource to the application and or the user. For example the baseline requirement for network traffic capacity resources can be reduced such that the deployment rules generate a deployment architecture having a set of cloud resources that includes less than 878 Mbit s of web network traffic capacity in order to achieve a gain in capacity for another cloud resource for example high processing capacity where the requirement for the other cloud resource high processing capacity is deemed more important than the requirement for web network traffic capacity. Assuming for this example that both high processing capacity and 878 Mbit s of web network traffic capacity are not both available together in one architecture the more important high processing capacity is obtained at the expense of the desired but less important web network traffic capacity by choosing an architecture that has high processor capacity but less than 878 Mbit s of web network traffic capacity.

In embodiments the decision system can be configured to provide a report an exemplary instance of which is illustrated in to advise the user of resource usage information deployment architecture options and parameters. Deployment options can include computing resources such as for example one or more physical machines one or more virtual machines one or more public clouds one or more private clouds or any combination thereof. One skilled in the art will realize that the other deployment options or types of computing resources can be used. The recommended deployment architecture can be affected by the relative importance of various cloud resources such that the recommended architecture is different than it would have been had the relative importance not been taken into account.

While shows the decision system as maintaining a set of deployment rules and an instance of resource importance data one skilled in the art will realize that the decision system can maintain multiple sets of deployment rules and resource importance data. Additionally while describes the decision system accessing the set of deployment rules and resource importance data one skilled in the art will realize that the decision system can be configured to allow other systems to access the set of deployment rules and resource importance data for example by providing one or more APIs. In some embodiments the resource importance data for a given application or user may change over time.

Processor also interfaces with the monitoring module and the customization module to execute control logic and deployment rules and allow for monitoring computing processes as described above and below. Execution of deployment rules can be influenced or adjusted by the resource importance data such that the calculated requirements for cloud resources needed by an application process or user and the final deployment architecture s determined by decision system take into account a heightened need or preference for certain cloud resources over other cloud resources. Other configurations of the decision system associated network connections and other hardware and software resources are possible.

While illustrates the decision system as a standalone system including a combination of hardware and software the decision system can include multiple systems operating in cooperation. The monitoring module and the customization module can be implemented as a software application or program capable of being executed by the decision system as illustrated or other conventional computer platforms. Likewise the monitoring module and the customization module can also be implemented as a software module s or program module s capable of being incorporated into other software applications and programs. In either case the monitoring module and the customization module can be implemented in any type of conventional proprietary or open source computer language. When implemented as a software application or program code the monitoring module and the customization module can be stored in a computer readable storage medium such as storage accessible by the decision system . Likewise during execution a copy of the monitoring module and the customization module can be stored in the memory .

In embodiments the parameters can be provided by a user associated with the applications. Alternatively or in addition the decision system can dynamically determine a set of parameters based on a configuration of the computing environment the applications the user associated with the applications etc. The decision system can also retrieve default or predefined set of parameters e.g. data definition as shown in from a computer readable storage medium. For example the decision system can retrieve predefined parameters from a repository e.g. repository or communicate with cloud management systems e.g. cloud management systems and or software vendors e.g. software vendors or other sources e.g. the Internet to retrieve predefined parameters. The parameters can include for example a configuration of a current deployment architecture e.g. a number of machines a time duration a number of time intervals a processor utilization a network traffic level a storage utilization a memory utilization a software license information and other parameters indicating usage of software hardware and other cloud resources and capacity. One skilled in the art will realize that the other parameters or types of parameters can be used.

In the decision system can monitor the applications and or computing processes as they run in an existing deployment architecture in the cloud computing environment. The decision system can monitor the applications and or computing processes for a duration of time or indefinitely until the occurrence of an event. In the decision system can record in real time or on a periodic basis resource usage or utilization data and or other parameter data associated with the applications and or computing processes in a computer readable storage medium e.g. utilization data set in repository .

In the decision system can retrieve rules algorithms and or heuristics for generating deployment options based on the parameters. The decision system can retrieve the rules from a computer readable storage medium e.g. deployment rule set in repository .

In the decision system can generate one or more customized deployment architectures by using the deployment rules to evaluate the resource utilization data and or other parameter data associated with the applications and or computing processes. For instance if the processor utilization of the applications and or computing processes over a specified duration of time is less than ten percent then the decision system can recommend that the applications and or computing processes be run on virtual machines instantiated in the cloud computing environment. For another instance if the applications and or computing processes have a high network bandwidth utilization then the decision system can recommend that the applications and or computing processes be run on a public cloud in the cloud computing environment. For yet another instance if the applications and or computing processes average more than 90 utilization of processor capacity then the decision system can recommend that the applications and or computing processes be run on an architecture that includes double the processor capacity of the current architecture.

As part of the evaluation of recorded resource usage parameters to generate a customized deployment architecture the decision system can determine a set of cloud resources that were used to provide the peak resource utilization parameters recorded in and start with this as a baseline. Or a baseline requirement set can be determined in other ways such as based on the average or mean usage of each cloud resource parameter recorded in . From the baseline requirements the decision system can adjust the rules for generating deployment options using data that reflects the relative importance of one or more of the cloud resources in comparison to other resources. The adjusted rules may then be applied to provide a customized deployment architecture. The process can end after but the process can return to any point and repeat.

At stage process determines a baseline requirement for cloud resources from the resources usage data. In one embodiment the baseline requirement can be determined by finding the maximum value for each resource usage parameter in the resource usage data. For a hardware oriented example consider a case where the resource usage data shows the use of two processor cores each having two 64 bit computing units with the highest level of processor utilization at 9 the highest level of network traffic at 878 Mbit s the highest level of memory usage at 5.0 Gbytes and the highest level of long term storage usage at 500 Gbytes. In one embodiment these max values become the baseline requirements for these resource usage parameters. Similar maximum usage parameters for cloud software applications may also be recorded and used to determine the set of baseline requirements.

In other embodiments the baseline requirement can be derived from the resource usage parameters in the resource usage data. For example the baseline requirement for network traffic level capacity may be calculated as the average network traffic level recorded during a monitoring period. In still other embodiments the baseline requirement can be based on predicted future usage of the cloud resources by the user for example in the case of a new user who has no recorded usage history.

At stage process generates resource importance data for a specific cloud resource s . In certain embodiments the resource importance data is data that affects the choice of cloud resources that are used to form a deployment architecture for the user. In one embodiment the resource importance can include data that specifies a minimum amount or level for a parameter representing a cloud resource capacity that must be included in a deployment architecture. For example the resource importance data can include data specifying a memory size of at least 5.0 Gbytes in a user s deployment architecture. In another embodiment the resource importance data can include data that specifies different matching weights or decision weights for one or more resource parameters where the weights represent the relative importance or significance of the cloud resource to the deployment architecture. For example consider a case where a user is placing a high throughput application in the cloud such as a database or memory caching application that uses a large amount of memory. In this case the resource importance data can include data indicating that large memory capacity is a more important resource than high speed processing capacity. For another example consider a case where a user is placing a computation intensive application such as 3 D gaming application in the cloud. In this case the resource importance data can include data indicating that high speed processing capacity is a more important resource than memory capacity. The importance of each resource as represented by the data in the resource importance data often depend on the characteristics of the application s process es that a user is placing in the cloud.

In certain embodiments the resource importance data can be derived from the empirically measured usage history data of a user. For example patterns of usage may be recognized from past recorded usage histories associated with a user and those patterns may be used to predict future usage of one or more cloud resources. Predicted high future usage of a cloud resource can be planned for using resource importance data indicating a higher importance of the cloud resource which can in turn cause an adjustment in the deployment architecture to provide additional capacity of the cloud resource.

The relative importance of cloud resources may change over time. For example the cloud resource usage history of a tax preparation company user may show that in March and April each year processor usage increases 300 memory usage increases 250 and storage usage increases 100 because of tax season. In one embodiment the resource importance data may be adjusted to account for historical usage patterns in this example adjusted to indicate higher importance for processor resources memory resources and storage resources during March and April of each year which can in turn cause an adjustment in the deployment architecture to provide additional processor resources memory resources and storage resources during March and April.

In some embodiments the resource importance data may be adjusted to account for anticipated trends extrapolated from recorded usage history data. For example consider a case where recorded resource usage data for three consecutive durations or time periods indicates that average processor capacity utilization by a user s application s has increased from 7 to 35 to 75 . A projection of this trend into the future indicates that the processor utilization parameter may soon reach 100 . To avoid running out of processor capacity the resource importance data can be adjusted to indicate the processing capacity has a very high importance causing for example decision system to create a new deployment architecture that includes increased processor capacity to handle the anticipated load.

At stage process generates an adjusted requirement for cloud resources from the baseline requirement where the adjusted requirement reflects the resource importance data. In embodiments the adjusted requirement may be determined using the resource importance data. In one exemplary embodiment the resource importance data can be implemented as a factor indicating an amount of relative increase or decrease in a requirement for a cloud resource. For example if the baseline requirement for processor capacity indicates that required processor capacity is the equivalent of a single 2.0 GHz Intel Core 2 T7200 processor adjusting the baseline requirement using resource importance data indicating that processor capacity is 200 more important than the baseline requirement can result in an adjusted requirement indicating that the required processor capacity is the equivalent of three 2.0 GHz Intel Core 2 T7200 processors.

In another embodiment the resource importance data can indicate a weighting used for trade off decisions when not all of the desired web resources are available together. For example consider a case where a baseline requirement for a user s computation intensive application s is 7.0 Gbytes of memory capacity processor capacity equivalent to two 2.0 GHz Intel Core 2 T7200 processors 700 Gbytes of storage capacity and 1 Gbit s of network throughput capacity. Further the resource importance data for this case indicates high importance for processing capacity resources e.g. a weighting factor of 9 on a scale of 1 10 ten being the most important low importance for storage capacity resources e.g. a weighting factor of 2 and average importance for memory capacity resources and throughput capacity resources e.g. a weighting factor of 5 . In this example deployment rules can operate to prefer resource configurations i.e. deployment architectures that provide sufficient or more than sufficient processor capacity even at the cost of providing lesser storage capacity memory capacity and or throughput capacity.

At stage process determines a deployment architecture that satisfies the adjusted requirements for cloud resources. In one embodiment the decision system employs deployment rules to identify a close or best match es of available cloud resources that meet the adjusted requirements. Continuing the example from the previous paragraph consider a case where the two architectures and their sets of resources shown in Table 1 are available for the decision system to choose from 

Without considering the relative importance of each resource as indicated by the resource importance data the best match for the baseline requirements is Architecture which meets or exceeds the baseline requirement for three of the resources memory capacity storage capacity and network throughput capacity and provides half of the processor capacity requirement. The resource importance data however indicates that meeting the processor capacity requirement is the highest priority objective. In an embodiment where decision system takes into account the resource importance data decision system determines that Architecture is the best match because it provides processor capacity equivalent to two Core 2 T7200 processors despite failing to provide all the desired memory capacity and storage capacity specified in the baseline requirement.

At stage process provides the determined deployment architecture to the user. In one embodiment this stage may include forwarding a report describing the recommended deployment architecture s to the user as described above with respect to . In another embodiment this stage may include assigning the determined deployment architecture to the user s application s process es such that they run on the determined deployment architecture.

One of ordinary skill will recognize that stages may be modified added to or removed from process with departing from the principles of this disclosure. For example stage can be removed and stage can be modified so that the resource importance data e.g. weighting data is applied to affect the functioning of the deployment rules operating on the baseline requirements for cloud resources without creating intermediary adjusted requirements for cloud resources.

With respect to the foregoing descriptions certain embodiments may be performed as a computer application or program. The computer program may exist in a variety of forms both active and inactive. For example the computer program can exist as software program s comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include non transitory computer readable storage devices and media and signals in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present teachings can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program s of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the aspects have been described with reference to the exemplary embodiments thereof those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular although the method has been described by examples the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the term one or more of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents.

