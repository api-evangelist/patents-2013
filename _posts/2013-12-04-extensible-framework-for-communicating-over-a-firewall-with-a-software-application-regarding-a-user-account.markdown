---

title: Extensible framework for communicating over a firewall with a software application regarding a user account
abstract: An on-premise software application (“OPA”) is communicated with according to an action received from outside a firewall. The action concerns user account information maintained by the OPA. The OPA is installed on a device located inside the firewall. The action is received from a management server located outside the firewall. The action includes a portion that adheres to a standardized format. An OPA interface request is generated based on the action. The OPA interface request includes the standardized portion. The OPA interface request is sent to an agent/OPA interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09191364&OS=09191364&RS=09191364
owner: Okta, Inc.
number: 09191364
owner_city: San Francisco
owner_country: US
publication_date: 20131204
---
This application claims the benefit of U.S. Provisional Application No. 61 899 103 filed Nov. 1 2013 which is incorporated by reference herein in its entirety. This application is also a continuation in part of U.S. patent application Ser. No. 12 943 842 filed Nov. 10 2010 which is incorporated by reference herein in its entirety.

This application generally relates to the field of user account information and in particular to an extensible framework for communicating over a firewall with a software application regarding its user accounts.

A software application that requires a person to log in to an account maintains information regarding each account. Assuming that each person has a separate account this account information sometimes referred to as a user profile includes for example the person s user name the person s password or other authentication information the person s real name the person s email address groups of which the person s account is a member permissions or settings associated with the person s account and past activity of the person s account. The account information is accessed to manage the accounts such as provisioning e.g. creating or activating an account deprovisioning e.g. deactivating or deleting an account modifying a user profile and performing a mass user import e.g. provisioning many accounts for many different people in a batch process . The account information is also accessed to perform delegated authentication. For example a user name and password provided by a user can be sent to the application and the application can determine whether the user name and password are valid e.g. whether they match a particular user profile .

A particular corporate device user e.g. an employee customer partner or contractor often makes use of several software applications each of which requires a user to log in to an account. Usage of multiple applications by the same user often requires multiple accounts leading to a proliferation of user accounts and user profiles. As mentioned above account information is accessed to manage the accounts and to perform delegated authentication. Often each software application offers a different interface e.g. a different application programming interface API for accessing its account information. Communicating with several different applications regarding their account information using the various interfaces is very time consuming for a company s Information Technology IT department.

One solution is to use a third party service to communicate with the software applications regarding their account information. However it can be a security risk to allow a machine located outside the company s firewall executing the third party service to communicate with a machine located inside the company s firewall executing an on premise application . Also the machine located outside the company s firewall executing the third party service still needs to use different interfaces to communicate with different on premise applications.

The above and other issues are addressed by a computer implemented method non transitory computer readable storage medium and computer system for communicating with an on premise software application OPA according to an action received from outside a firewall. The action concerns user account information maintained by the OPA. The OPA is installed on a device located inside the firewall. An embodiment of the method comprises receiving the action from a management server located outside the firewall. The action includes a portion that adheres to a standardized format. The method further comprises generating an OPA interface request based on the action. The OPA interface request includes the standardized portion. The method further comprises sending the OPA interface request to an agent OPA interface.

An embodiment of the medium stores computer program modules executable to perform steps. The steps comprise receiving the action from a management server located outside the firewall. The action includes a portion that adheres to a standardized format. The steps further comprise generating an OPA interface request based on the action. The OPA interface request includes the standardized portion. The steps further comprise sending the OPA interface request to an agent OPA interface.

An embodiment of the computer system comprises a non transitory computer readable storage medium storing computer program modules executable to perform steps. The steps comprise receiving the action from a management server located outside the firewall. The action includes a portion that adheres to a standardized format. The steps further comprise generating an OPA interface request based on the action. The OPA interface request includes the standardized portion. The steps further comprise sending the OPA interface request to an agent OPA interface.

The Figures FIGS. and the following description describe certain embodiments by way of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein. Reference will now be made to several embodiments examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality.

The firewall is a computer or set of computers that divides the environment into two parts one part that is inside the firewall inside firewall portion and one part that is outside the firewall outside firewall portion . In the inside firewall portion includes the private network the management client B the agent the agent OPA interface and the OPA device . The outside firewall portion includes the public network the management server and the management client A.

The firewall controls incoming network traffic i.e. traffic sent from the outside firewall portion to the inside firewall portion and or outgoing network traffic i.e. traffic sent from the inside firewall portion to the outside firewall portion . For example the firewall analyzes data packets and determines whether they should be allowed through the firewall . In one embodiment the firewall limits or prevents certain interactions between the two sides of the firewall. For example the firewall rejects unsolicited incoming network traffic.

In general the inside firewall portion is a trusted and secure network e.g. internal to a particular enterprise and the outside firewall portion is not assumed to be trusted or secure. In one embodiment the inside firewall portion is associated with an enterprise that needs to communicate with an on premise application OPA installed on OPA device regarding its user accounts. Specifically the enterprise needs to manage the OPA s accounts and or use the OPA s accounts to perform delegated authentication. The management server represents a third party service that helps enterprises such as the one associated with the inside firewall portion . Specifically the management server enables the enterprise to more easily manage the OPA s accounts and or use the OPA s accounts to perform delegated authentication.

In one embodiment the environment operates as follows An on premise application OPA is installed on OPA device and maintains account information. A management client sends the management server instructions regarding managing the OPA s accounts and or using the OPA s accounts to perform delegated authentication. The management server stores the instructions in the form of actions for later use. An action includes a portion that adheres to a standardized format. The agent sends the management server a check in communication. In response to receiving the check in communication the management server sends the agent over the firewall a stored action including the standardized portion . The agent sends the agent OPA interface an OPA interface request that corresponds to the action and includes the standardized portion. The agent OPA interface translates the OPA interface request including the standardized portion to a format that the OPA can understand e.g. commands that adhere to the OPA s application programming interface API . The agent OPA interface then communicates with the OPA device accordingly. Specifically the agent OPA interface communicates with the OPA that is installed on the OPA device thereby causing the OPA to execute the commands and therefore the action.

The on premise application OPA device is a computer or set of computers on which one or more on premise applications OPAs are installed. An OPA requires a user to log in to an account and maintains information regarding each account. Assuming that each person has a separate account this account information sometimes referred to as a user profile includes for example the person s user name the person s password or other authentication information the person s real name the person s email address groups of which the person s account is a member permissions or settings associated with the person s account and past activity of the person s account. The account information is accessed to manage the accounts such as provisioning e.g. creating or activating an account deprovisioning e.g. deactivating or deleting an account modifying a user profile and performing a mass user import e.g. provisioning many accounts for many different people in a batch process . The account information is also accessed to perform delegated authentication. For example a user name and password provided by a user can be sent to an OPA and the OPA can determine whether the user name and password are valid e.g. whether they match a particular user profile . A particular OPA offers a particular interface e.g. a particular application programming interface API for accessing that OPA s account information. While only one OPA device is shown in the embodiment depicted in other embodiments can have multiple OPA devices . Multiple OPA devices can be useful for example to provide high availability and to handle additional on premise applications OPAs .

The public network represents the communication pathway between the management server the management client A and the firewall . In one embodiment the public network uses standard communications technologies and or protocols and can include the Internet. Thus the public network can include links using technologies such as Ethernet 802.11 worldwide interoperability for microwave access WiMAX 2G 3G 4G mobile communications protocols digital subscriber line DSL asynchronous transfer mode ATM InfiniBand PCI Express Advanced Switching etc. Similarly the networking protocols used on the public network can include multiprotocol label switching MPLS transmission control protocol Internet protocol TCP IP User Datagram Protocol UDP hypertext transfer protocol HTTP hypertext transfer protocol secure HTTPS simple mail transfer protocol SMTP file transfer protocol FTP etc. The data exchanged over the public network can be represented using technologies and or formats including image data in binary form e.g. Portable Network Graphics PNG hypertext markup language HTML extensible markup language XML etc. In addition all or some of the links can be encrypted using conventional encryption technologies such as secure sockets layer SSL transport layer security TLS virtual private networks VPNs Internet Protocol security IPsec etc. In another embodiment the entities on the public network can use custom and or dedicated data communications technologies instead of or in addition to the ones described above.

A management client is a computer or set of computers that can communicate indirectly with an on premise application OPA regarding the OPA s account information e.g. in order to manage the OPA s accounts and or use the OPA s accounts to perform delegated authentication . A management client indirectly communicates with the OPA by communicating with the management server which then communicates with the agent over the firewall which then communicates with the agent OPA interface which then communicates with the OPA device on which the OPA is installed.

A management client communicates with the management server using an API module or a user interface UI module not shown . A UI module requires user interaction while an API module does not. In one embodiment regardless of which module is used a management client sends the management server a request that adheres to the HTTP or HTTPS HTTP S protocol and the management server sends the management client a response that adheres to the HTTP S protocol. In one embodiment when a management client uses an API module the HTTP S messages include JavaScript Object Notation JSON data.

A UI module enables a user to receive information e.g. displayed on a screen and provide user input e.g. using an input device . A management client that uses a UI module can be for example a desktop computer a laptop computer a tablet computer or a smart phone. The user of such a management client is for example a system administrator in charge of managing the OPA s accounts and or using the OPA s accounts to perform delegated authentication. In one embodiment when a management client uses a UI module the HTTP S messages include HTML data.

In one embodiment the UI module is a dedicated application configured to communicate with the management server . In another embodiment the UI module is a general purpose web browsing application that sends HTTP S requests receives HTTP S responses and displays HTML files. In this embodiment the user interface UI is a web page e.g. HTML file displayed by the web browser. Specifically the web browser sends an HTTP S request to the management server receives an HTTP S response that includes a web page in the body portion and displays that web page.

In one embodiment the UI is a single portal that provides access to multiple OPAs e.g. to manage the OPAs accounts and or use the OPAs accounts to perform delegated authentication . The portal enables a user to access the OPAs separately or as a group. For example the portal enables a user to specify a particular OPA and then communicate with only that OPA. In one embodiment the portal includes a graphical user interface GUI element for each OPA e.g. a button and the user activates one of these GUI elements to specify a particular OPA. As another example the portal enables a user to specify multiple OPAs and then communicate with the multiple OPAs using a single command e.g. to create an account for the same user in each OPA . In one embodiment the portal includes an on off GUI element e.g. a checkbox for each OPA and an administration GUI element e.g. a button that the user activates to communicate with whichever OPAs are on e.g. checked .

In one embodiment the management client provides credentials e.g. a user name and password to the management server . The management server uses these credentials to authenticate the management client . The URL to which the management client sends the HTTP S request can also be used by the management server for authentication purposes. A single enterprise e.g. the enterprise associated with the inside firewall portion can have multiple on premise applications OPAs and agents . In one embodiment the UI that is presented on the management client by the UI module is customized by the management server based on the authentication credentials that are sent from the management client to the management server .

A management client can be located outside the firewall as management client A or inside the firewall as management client B. While only one outside firewall management client A and only one inside firewall management client B are shown in the embodiment depicted in other embodiments can have multiple outside firewall management clients A and or multiple inside firewall management clients B. Multiple management clients can be useful for example when multiple users or one user with multiple devices need to communicate with the management server .

The management server is a computer or set of computers that responds to a check in communication received from an agent . The management server s response concerns managing an OPA s accounts and or using an OPA s accounts to perform delegated authentication. In one embodiment the management server also stores actions for later use. An action is generated based on for example instructions received from a management client or rule based processing performed by the management server .

In one embodiment the firewall is configured to reject unsolicited incoming network traffic e.g. a message sent from the management server to the agent . However the management server can still send actions to the agent . This is achieved by sending the actions in response to a communication received from the agent e.g. a check in communication . Specifically the check in communication sent from the agent to the management server uses a communication that is permitted to pass through the firewall without being blocked by the firewall. In one embodiment the check in communication is a web query e.g. HTTP S request . The firewall is configured to allow subsequent communications e.g. HTTP S responses that are related to previous web queries. For example the firewall allows the management server to respond to the request from the agent as long as the response is related to a previous web query sent from the agent to the management server . This response to a request originating from the agent inside the firewall is permitted by the firewall and thus permits actions to be received at the agent from the management server . In this way actions can be sent from the management server to the agent without requiring modification of the firewall .

While only one management server is shown in the embodiment depicted in other embodiments can have multiple management servers . Multiple management servers can be useful for example to provide high availability and to handle additional management clients and or agents . The management server is further described below with reference to . Also the management server is somewhat similar to the services management server 108 508 910 and 1052 described in U.S. patent application Ser. No. 12 943 842.

The private network represents the communication pathway between the firewall the management client B the agent the agent OPA interface and the OPA device . The private network is similar to the public network except the private network is inside the firewall while the public network is outside the firewall . The private network is a trusted and secure network e.g. internal to a particular enterprise .

The agent is a computer or set of computers that sends a check in communication to the management server receives an action from the management server over the firewall and sends an OPA interface request to the agent OPA interface . The action received from the management server includes a portion that adheres to a standardized format and concerns managing an OPA s accounts and or using the OPA s accounts to perform delegated authentication. The OPA interface request sent to the agent OPA interface corresponds to the action and includes the standardized portion

While only one agent is shown in the embodiment depicted in other embodiments can have multiple agents . Multiple agents can be useful for example to provide high availability and to handle additional agent OPA interfaces . The agent is further described below with reference to . Also the agent is somewhat similar to the services management agent 500 902 and 1050 described in U.S. patent application Ser. No. 12 943 842.

The agent on premise application OPA interface is a computer or set of computers that receives an OPA interface request from the agent translates the OPA interface request to a format that a particular OPA can understand e.g. commands that adhere to that OPA s application programming interface API and communicates with the OPA device accordingly. Specifically the agent OPA interface communicates with the OPA that is installed on the OPA device thereby causing the OPA to fulfill the OPA interface request. The OPA interface request received from the agent includes a portion that adheres to a standardized format and concerns managing an OPA s accounts and or using the OPA s accounts to perform delegated authentication.

While only one agent OPA interface is shown in the embodiment depicted in other embodiments can have multiple agent OPA interfaces . Multiple agent OPA interfaces can be useful for example to provide high availability and to handle additional OPA devices . The agent OPA interface is further described below with reference to .

The storage device includes one or more non transitory computer readable storage media such as a hard drive compact disk read only memory CD ROM DVD or a solid state memory device. The memory holds instructions and data used by the processor . The pointing device is used in combination with the keyboard to input data into the computer system . The graphics adapter displays images and other information on the display device . In some embodiments the display device includes a touch screen capability for receiving user input and selections. The network adapter couples the computer system to the network . Some embodiments of the computer have different and or other components than those shown in . For example the management server the firewall the agent the agent OPA interface and or the OPA device can be formed of multiple blade servers and lack a display device keyboard and other components.

The computer is adapted to execute computer program modules for providing functionality described herein. As used herein the term module refers to computer program instructions and or other logic used to provide the specified functionality. Thus a module can be implemented in hardware firmware and or software. In one embodiment program modules formed of executable computer program instructions are stored on the storage device loaded into the memory and executed by the processor .

The action queue stores actions specifically actions that have not yet been sent to an agent also referred to as pending actions . An action concerns an OPA s account information e.g. managing the OPA s accounts and or using the OPA s accounts to perform delegated authentication . In one embodiment an action is generated based on instructions received from a management client e.g. instructions to provision an OPA account . In another embodiment an action is generated based on rule based processing performed by the management server e.g. an existing third party account is added to a particular group which triggers an OPA account to be provisioned . In one embodiment an action is a data structure that includes various fields. Table 1 shows the fields included in an action according to one embodiment.

Configuration data for an on premise application OPA includes location information e.g. an IP address or URL for that OPA s agent OPA interface . In one embodiment configuration data for an OPA also includes location information for that OPA s agent location information for the OPA device on which that OPA is installed and or authentication information e.g. an administrator user name and administrator password that is needed in order to access the OPA s account information.

The client interface module sends information to and receives information from a management client . In one embodiment the client interface module is a web server that receives HTTP S requests and sends HTTP S responses. If the management client uses an API module then the HTTP S responses can include JSON data in the body portion.

If the management client uses a UI module then the HTTP S responses can include web pages e.g. HTML data in the body portion. Specifically the client interface module sends a user interface to the management client that enables a user to specify one or more OPAs for accessing the OPAs account information. The client interface module receives from the management client instructions specifying one or more OPAs for accessing the OPAs account information. The client interface module then enables the user to access the OPAs account information e.g. in order to manage the OPAs accounts and or use the OPAs accounts to perform delegated authentication .

The client interface module receives from a management client instructions regarding managing that OPA s accounts and or using that OPA s accounts to perform delegated authentication. The client interface module generates one or more actions based on the received instructions and stores the generated actions in the action queue for later use.

The agent interface module receives a check in communication from an agent determines how to respond to the check in communication and responds accordingly. In one embodiment determining how to respond to the check in communication comprises determining whether any actions are present in the action queue . If no actions are present in the action queue then the agent interface module responds by indicating that to the agent e.g. by sending a message to the agent that says no actions . If an action is present in the action queue then the agent interface module responds by sending that action to the agent and removing that action from the action queue . Note that the agent interface module is able to reply to the agent over the firewall via a commonly permitted firewall communication as explained above with reference to management server . Additional data and or status information can be exchanged between the agent and the management server as needed depending on the action that was sent. The specific number of exchanges and or specific pieces of information exchanged depends upon the specific action.

The server interface module sends a check in communication to the management server and receives an action from the management server over the firewall . In one embodiment a check in communication is a commonly permitted firewall communication such as a web query or an HTTP S request that includes the agent s token received from the management server during the agent installation process . The HTTP S request is sent to the URL generated by the agent . Since the URL includes the subdomain and the unique ID sending the HTTP S request to that URL notifies the management server regarding which enterprise and which agent are associated with the request. In one embodiment the management server uses the token to verify the agent and its credentials. In one embodiment the server interface module sends check in communications to the management server according to a specified frequency e.g. once every five minutes .

The action received from the management server concerns managing an OPA s accounts and or using the OPA s accounts to perform delegated authentication. The received action includes a portion that adheres to a standardized format e.g. the Command Argument Data field adheres to SCIM format .

The action processing module executes an action received from the management server . In general executing an action causes the action processing module to generate an OPA interface request based on the received action and send the OPA interface request to an agent OPA interface . For example the action processing module generates an OPA interface request that includes the standardized portion of the received action e.g. the Command Argument Data field . In one embodiment the OPA interface request is a SCIM representational state transfer REST request that includes the action s Command Name field the action s Command Argument Data field and the action s OPA Specific Connection Data field or a portion thereof . The action processing module analyzes the received action specifically the OPA Specific Connection Data field to determine an agent OPA interface . The action processing module then sends the OPA interface request to that agent OPA interface .

Executing the action received from the management server can include returning status and or data to the management server. For example if the action is to synchronize user account information then the synchronization at the OPA might cause accounts to be created deleted and or modified e.g. changed passwords or permissions . In this situation the OPA might return information regarding any newly created newly deleted and or newly modified accounts. The OPA device can send this information to the agent OPA interface which can then send the information to the agent which can then send the information to the management server . Depending upon the particular action executing the action may warrant one or more additional communications between the management server and the agent .

The agent interface module receives an OPA interface request from an agent . The received OPA interface request concerns managing an OPA s accounts and or using the OPA s accounts to perform delegated authentication. In one embodiment the received OPA interface request is a SCIM representational state transfer REST request. The agent interface module then uses the translation module for an on premise application OPA to translate the received OPA interface request to a format that the OPA can understand e.g. commands that adhere to the OPA s API .

A translation module for an on premise application OPA translates an OPA interface request to a format that the OPA can understand e.g. commands that adhere to the OPA s API . In one embodiment the translation module includes two portions a simplification portion and an OPA specific portion. The simplification portion processes the OPA interface request and exposes a simpler interface for software developers who are tasked with creating the OPA specific portion . The OPA specific portion implements that simpler interface using a format that the OPA can understand e.g. commands that adhere to the OPA s API . Note that the simplification portion is generic with respect to the OPA and can be reused for all OPAs.

Consider an OPA interface request that is a SCIM REST request. The complete SCIM REST protocol supports 13 different operations across users groups and other metadata. Also implementing the SCIM REST protocol requires knowledge of REST conventions HTTP S authentication conventions and the SCIM data model. Without the simplification portion the OPA specific portion would have to implement the entire SCIM REST protocol in OPA format. With the simplification portion the OPA specific portion needs to implement only the simpler interface exposed by the simplification portion. As a result the simplification portion removes the need for developers to learn and understand all of the SCIM related technologies. In one embodiment the simpler interface is a Java interface that includes only 11 methods createUser updateUser includes de activation getUsers returns all users getUser returns particular user deleteUser createGroup updateGroup getGroups returns all groups getGroup returns particular group deleteGroup and UserManagementCapabilities returns all user management capabilities that the OPA specific portion has implemented .

The OPA interface module communicates with an OPA in a format that the OPA can understand e.g. commands that adhere to the OPA s API . Specifically the OPA interface module communicates with the OPA that is installed on the OPA device based on the translated received OPA interface request thereby causing the OPA to fulfill the OPA interface request. The OPA interface module has access to information regarding the location of the relevant OPA device e.g. contained within the OPA interface request .

In step a check in communication is sent from an agent to a management server . For example this is performed by the server interface module . The check in communication indicates which enterprise and which agent are associated with the request.

In step the management server determines an action to send to the agent . For example this is performed by the agent interface module .

In step an action is sent from the management server to the agent . For example this is performed by the agent interface module . The action includes a portion that adheres to a standardized format.

In step the agent determines a particular agent OPA interface . For example this is performed by the action processing module .

In step an OPA interface request is sent from the agent to the particular agent OPA interface . For example this is performed by the action processing module . The OPA interface request includes a portion that adheres to a standardized format.

In step the agent OPA interface translates the OPA interface request to a format that the OPA can understand e.g. commands that adhere to the OPA s application programming interface API . For example this is performed by a translation module .

In step the agent OPA interface communicates with the OPA device based on the translated OPA interface request . Specifically the agent OPA interface communicates with the OPA that is installed on the OPA device . For example this is performed by the OPA interface module .

In step the OPA installed on the OPA device executes the commands thereby fulfilling the OPA interface request.

In step an acknowledgement and or additional data is sent from the OPA installed on the OPA device to the agent OPA interface .

In step an acknowledgement and or additional data is sent from the agent OPA interface to the agent .

The above description is included to illustrate the operation of certain embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention.

