---

title: Location of actor resources
abstract: In an actor system, messages communicated to and from a first actor in a first location of an actor system can be monitored. A message frequency between the first actor and a second actor in a second location of the actor system can be determined. The message frequency can be compared to a threshold message frequency. A determination can be made whether to move the first actor from the first location based on comparison of the message frequency to the threshold message frequency.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09641592&OS=09641592&RS=09641592
owner: Amazon Technologies, Inc.
number: 09641592
owner_city: Reno
owner_country: US
publication_date: 20131111
---
This application is related to the following applications each of which is hereby incorporated by reference in its entirety U.S. patent application Ser. No. 14 076 718 filed Nov. 11 2013 entitled VIDEO ENCODING BASED ON AREAS OF INTEREST U.S. patent application Ser. No. 14 076 821 filed Nov. 11 2013 entitled ADAPTIVE SCENE COMPLEXITY BASED ON SERVICE QUALITY U.S. patent application Ser. No. 14 077 127 filed Nov. 11 2013 entitled SERVICE FOR GENERATING GRAPHICS OBJECT DATA U.S. patent application Ser. No. 14 077 136 filed Nov. 11 2013 entitled IMAGE COMPOSITION BASED ON REMOTE OBJECT DATA U.S. patent application Ser. No. 14 077 165 filed Nov. 11 2013 entitled MULTIPLE PARALLEL GRAPHICS PROCESSING UNITS U.S. patent application Ser. No. 14 077 084 filed Nov. 11 2013 entitled ADAPTIVE CONTENT TRANSMISSION U.S. patent application Ser. No. 14 077 180 filed Nov. 11 2013 entitled VIEW GENERATION BASED ON SHARED STATE U.S. patent application Ser. No. 14 077 186 filed Nov. 11 2013 entitled MULTIPLE STREAM CONTENT PRESENTATION U.S. patent application Ser. No. 14 077 149 filed Nov. 11 2013 entitled DATA COLLECTION FOR MULTIPLE VIEW GENERATION U.S. patent application Ser. No. 14 077 142 filed Nov. 11 2013 entitled STREAMING GAME SERVER VIDEO RECORDER U.S. patent application Ser. No. 14 077 146 filed Nov. 11 2013 entitled SESSION IDLE OPTIMIZATION FOR STREAMING SERVER U.S. patent application Ser. No. 14 077 023 filed Nov. 11 2013 entitled APPLICATION STREAMING SERVICE U.S. patent application Ser. No. 61 902 740 filed Nov. 11 2013 entitled EFFICIENT BANDWIDTH ESTIMATION .

A computer computational environment can be set up as an actor system with programmed actors operating concurrently with respect to each other. Messages can be sent between actors to update a state of one of the actors to request information about one of the actors to create new actors and the like. The actors can operate independently of each other and the messages sent between actors can alter the way that the actors operate. The actor system can be hosted by a single computing device or hosted in a distributed system over multiple computing devices.

An actor system in computer science is a mathematical model of concurrent computation that treats actors as the universal primitives of concurrent digital computation in response to a message that it receives an actor can make local decisions create more actors send more messages and determine how to respond to the next message received. It has been used both as a framework for a theoretical understanding of computation and as the theoretical basis for several practical implementations of concurrent systems.

The actor model typically operates under the notion that everything is an actor. This is similar to the philosophy used by some object oriented programming languages but differs in that object oriented software is typically executed sequentially while the actors in an actor system can operate concurrently.

An actor is a computational entity that in response to a message it receives can concurrently among other actions send messages to other actors create new actors or designate the behavior to be used for the next message it receives. There is no assumed sequence to these actions and they could be carried out in parallel. Messages sent within an actor system may not identify the sender of the message so that the actor system can call for asynchronous communication and control structures as patterns of passing messages. Instead recipients of messages are identified by address sometimes called a mailing address. One actor may be able to communicate only with other actors when it knows the other actors mailing addresses. An actor can be aware of an address of another actor by obtaining the address from a message by creating the other actor and the like.

The actor system can include concurrent computation within and among actors dynamic creation of actors inclusion of actor addresses in messages and interaction through direct asynchronous message passing with no restriction on message arrival order.

An actor system can be used as a framework for modeling understanding and reasoning about a wide range of concurrent systems. In one example an email system can be modeled as an actor system. Accounts can be modeled as actors and email addresses as actor addresses. Other aspects of the email system such as an account s contact list an account s settings and the like can also be modeled as actors separate from the account actor. In another example web services can be modeled with simple object access protocol endpoints modeled as actor addresses. In another example programming objects with locks such as in Java and C can be modeled as a serializer if their implementations permit messages to continually arrive. A serializer can be an actor defined by a property that it is continually available to the arrival of new messages i.e. every message sent to a serializer is guaranteed to arrive . In yet another example testing and test control notation TTCN such as TTCN 2 and TTCN 3 can follow actor systems rather closely. In TTCN an actor can be a test component either parallel test component PTC or main test component MTC . Test components can send and receive messages to and from remote partners peer test components or test system interface .

In a further example a gaming system can be modeled as an actor system. Each of the characters in a gaming system can be an actor. The gaming system can include an environment in which multiple characters operate independently in a common environment such as in WORLD OF WARCRAFT and other similar games. In this case the characters can operate concurrently and independently and the corresponding actors i.e. the programming actors can be executing concurrently and independently of each other. The gaming system can also include other actors such as an actor representing an inventory of items associated with each of the characters an actor representing characteristics of each of the characters e.g. skills abilities health etc. and the like. While a number of examples of actor systems are described below in the context of a gaming system it should be understood that the examples can be similarly applied in any actor system.

Because actors in an actor system communicate messages to each other the actor system will route messages between the actors. As the number of actors in the actor system increases so too can the number of messages sent between actors. If every actor in an actor system communicated with every other actor in the actor system a linear increase in the number of actors may result in an exponential increase in the number of messages handled within the actor system. The routing of large numbers of messages and the time that messages take to be sent between actors can cause latency in the actor system.

The computing device includes a management service . The management service can manage the actors to located on the computing device manage the creation of new actors on the computing device manage the deletion of actors from computing device route communications to and from actors on the computing device transfer actors from the computing device to another computing device or server receive and host actors transferred from other computing devices or servers to the computing device and the like. In the depiction shown in computing devices and do not include management services. The actors to and to on computing devices and may be able to operate and send messages without the assistance of a management service.

In peer to peer computing environment when actors in different computing devices pass messages between each other the messages are routed via the network . For example a message sent from actor to actor will be sent from computing device to network via communication link and then from the network to the computing device via the communication link . In another example a message sent from actor to actor will be sent from computing device to network via communication link and then from the network to the computing device via the communication link . In yet another example a message sent from actor to actor will be passed within the computing device .

Using the examples from the preceding paragraph it is apparent that certain pairs of actors can be closer to each other than other pairs of actors. In this context actors are considered close or far depending on the speed with which messages can be communicated between them. Among the three examples described in the preceding paragraph actors and may be considered the closest of the three examples if communicating messages within computing device is faster than communicating messages via the network . If both of the communication link and the communication link are high speed communication links and communication link is a low speed communication link then actors and may be closer to each other than actors and because messages communicated between actors and may be faster via the high speed communication links and than messages communicated via high speed communication links and low speed communication link .

One issue with the messages sent between actors in the peer to peer computing environment is the latency incurred by communicating messages between different computing devices. While delays due to communicating messages across network s may be on the order of a few seconds such delays can be noticeable to users of the various computing devices. Moreover while only three computing devices and are depicted in a similar system could include significantly more computing devices such as hundreds thousands or more. As actors on a significant number of computing devices need to communicate with each other the latency in sending and receiving messages can increase. Although an actor system operates on the premise that all of the actors are operating concurrently and independently of each other and messages are passed asynchronously delays in interactions between actors can be perceptible to users of the computing device and lower the users experience.

The computing environment also includes an actor server system in communication with network . The actor server system can include one or more servers that host actors in the server based actor system. In the specific example depicted in the actor server system hosts actors to actors to and actors to . In one example the actors to to and to may be associated with users of computing devices and respectively. For example actors to can be associated with an email account of a user of the computing device in an actor based email system actors to can be associated with a character of a user of the computing device in an actor based gaming system and the like. In another example the actors to to and to may not be associated with any one user or computing device but merely actors in an actor based system.

Placing actors of an actor system within an actor server system can reduce latency in sending messages between the actors. For example with actors to to and to hosted by the actor server system messages sent between any two of the actors to to and to will be sent within the actor server system . While it may take some time to send and receive messages between actors in the actor server system the latency from sending messages can be reduced. For example messages sent by actors within the actor server system do not need to be sent via the network . In this way the speed of sending messages is not limited by the speed of any communication link with the network or the speed of communicating within network .

While all of the messages sent between actors to to and to can be sent within the actor server system computing devices and can still interact with the actor system. For example in the case where the actor system is a gaming system and one of the actors hosted by the actor server system may be associated with a character of a user of computing device . The user may input controls and commands into the remote computing device which are communicated from the computing device to the actor server system via the network . The actor server system can modify the actor associated with the user s character based on those controls and commands. The actor server system can also modify other actors based on those controls and commands e.g. modify an actor associated with an inventory of the user s character modify an actor associated with another character that is interacting with the user s character etc. . Similarly the actor server system can send back information about the actor system environment back to the computing device . The information sent back to the computing device from the actor server system can include information for the computing device to be able to render updated actors properly e.g. updates in particular characters changes in a character s inventory etc. . The actor server system may also perform all of the processing needed to update the environment from the perspective of the user and the information sent back to the computing device from the actor server system can include information for the computing device to render the environment to the user.

The security service can ensure that messages passed between actors across the network are communicated in a secure fashion such as by encrypting the messages using a security protocol. The security service can also ensure that the messages sent by actors on the computing devices and do not perform an actions that are not allowed by the actor system. Because the actors on the computing devices and are not under the control of the actor server system there could be concern that those actors could be programmed to perform malicious functions or other functions that would be improper. For example in an gaming scenario where characters can earn money an actor on computing device may send a message to an actor in the actor server system that would attempt to give a character money that was not earned by that character. Since it would be improper to for the actor to perform such a money transfer function the security service can intercept such messages to prevent the money transfer function from occurring. In the depiction of the security services is located outside of the actor server system the security service could also be hosted inside of the actor server system. In this case the security service located inside of the actor server system could monitor and secure messages coming out of and into the actor server system to and from actors on computing devices and .

In the particular embodiment shown in the server rack includes servers and and the server rack includes servers and . While three servers are depicted in each of server rack and server rack server rack and server rack could include any number of servers. Server hosts actors to server hosts actors to server hosts actors to server hosts actors to server hosts actors to and server hosts actors to . The actors and may all be part of the same actor system. While the actors and could all be hosted by the same server it may be desirable to host the actors and on different servers such as in the way depicted in . It may be that the number of actors and is too great to be hosted by a single server and that multiple servers can be used such as in the way depicted in .

The actor server system can also include a number of communication links. Server rack includes a number of intra rack communication link s that permit communication between each of the servers and that are located on the server rack . Server rack includes a number of intra rack communication link s that permit communication between each of the servers and that are located on the server rack . The actor server system also includes inter rack communication link s that permit communication between different server racks and permit communication between the server racks and an external network . The external network can include a local area network LAN the Internet or any other type of network. In some embodiments actors in the actor system can also be hosted by servers that are outside of the actor server system . In this case actors can be hosted by an external system . The external system can be a computing device server or another actor server system that is in communication with the external network .

Communicating messages between two actors in the actor system shown in may take different amounts of time depending on the network location between the two actors. For example a message can be sent between actors in the same server at a first rate. Messages sent within a server such as a message sent from actor to actor may be sent at the first rate. In another example intra rack communication link s may allow communications at a second rate such as a rate of 100 gigabits per second e.g. via a 100 Gigabit Ethernet 100 GbE link . The second rate can be slower than the first rate. Messages sent via the intra rack communication link s such as a message sent from actor to actor can be communicated at the second rate. In another example inter rack communication link s may allow communications at a third rate such as a rate of 10 gigabits per second e.g. via a 10 Gigabit Ethernet 10 GbE link . The third rate can be slower than the second rate. Messages sent via the inter rack communication link s such as a message sent from actor to actor can be communicated at the third rate. In another example external network may allow communications at a fourth rate. The fourth rate can be slower than the third rate. Messages sent via the external network such as a message sent from actor to an actor in external system can be communicated at the fourth particular rate.

Using the examples from the previous paragraph the closeness of one actor to other actors can be understood. Closeness of one actor to other actors can be determined based on the time taken to communicate messages from the one actor to the other actors or the rate of communication between one actor and the other actors. The actor is closest to the other actor s on server such as actor because communications between the actor and the other actor s on server occur at the fastest rate in this example. The actor is next closest to the actor s on other server s within the server rack such as actor on server and actor on server because communications between the actor and the other actor s on other server s within the server rack occur at the second fastest rate in this example. The actor is next closest to the actor s on other server s within other server rack s within the actor server system such as actor on server and actor on server in server rack because communications between the actor and the other actor s on other server s within other server rack s within the actor server system occur at the third fastest rate in this example. The actor is furthest from the actor s on the external system because communications between the actor and actor s on the external system occur at the slowest rate in this example.

The closeness of actors to each other and the differences in communication speeds are not limited to those depicted in . Many other configurations could place actors near or close to each other. In one example actors could be located in different rooms of a data center and actors in different rooms of a data center could be further apart than actors in different server racks in the same room. In another example actors could be located in different data centers which could be further apart than actors in different rooms within a single data center. In yet another example actors could be located in data centers in different availability zones which could be further apart than actors in different data centers within a single availability zone. Many other conditions could exist that would place actors near or far from each other.

The server includes a management service and actors . The management service can manage the actors located within server manage the creation of new actors within server manage the deletion of actors from server route communications to and from actors on the server transfer actors from the server to another server receive and host actors transferred from other servers to the server and the like. The server includes a management service and actors . The server includes a management service and actors . The management services and can provide similar functionality for their respective servers and as was described with respect to the functionality of management service for its server .

The management services and can maintain a log of the messages sent from and received by the actors on their respective servers and . For example management service can maintain a log that includes an indication of the number of times that actor has received a message from each of the actors and and the number of times that the actor has sent a message to each of the actors and . Such a log can be used to determine a message frequency of messages sent between the actor and each of the other actors in the actor server system . A message frequency can be based on the overall number of messages sent during a particular period of time based on sizes of messages sent during a particular period of time or based on a combination of the number of overall messages and the sizes of messages sent during a particular period of time. Message frequencies can indicate how talkative the actor is with the other actors in the actor server system . If two actors are more talkative with each other than with other actors it may be advantageous to place the two actors closer to each other within the actor server system to reduce the time that messages take to pass between the two talkative actors.

Based on the message frequencies of messages being sent between actors a degree of closeness can be determined for two or more actors. A degree of closeness can be a binary option e.g. either actors should be close or actors do not need to be close a range of values e.g. a range of value from 1 to 10 where 1 is associated with a lowest need for the actors to be close and 10 is associated with the highest indicator that the actors should be close and or any other indication of a degree. In another embodiment a degree of closeness for two or more actors can be set by a developer of the actor system hosted by actor server system by an operator of the actor system hosted by actor server system or by any other group or individual. As is discussed in greater detail below the degree of closeness whether determined based on a message frequency of messages sent or set by a person or group can be used to locate one or more actors within the actor server system .

Management server can send an availability inquiry to each of management service and management service requesting an availability of the server and the server respectively to host additional actors. Responses from the management service and management service can be sent to management service indicating a level of availability of the server and the server to host additional actors. In the particular embodiment shown in based on the responses from management service and from management service to management service can indicate that both the server and the server have availability to host additional actors. The responses can also indicate that the server has greater availability than server to host additional resources. In the particular instance shown in the management service sent the actors and to the server . Such a decision may be made based at least in part on an intent to balance the load among the servers and .

At the time depicted in the management service may determine that actor should be moved to another server. The determination that actor should be moved can be based on one or more of server nearing a capacity of hosted actors a degree of closeness of actor to another actor being determined a degree of closeness of actor to another actor being received and the like. The management service can send an availability inquiry to each of the other management services and in the actor server system . At the particular time depicted in the management service may respond with an indication that the server is unavailable to host another actor and the management services and may respond with an indication that the servers and are available to host another actor.

The determination that actor should be moved can be based can also be based on a determination of optimization of computing resources within the actor system. In one embodiment if computing resources within the actor system are underutilized it may be more optimal for the underutilized computing resources to be shut down instead of moving actor . For example it may be possible to move the actors and on server to server and remove server from service. In this embodiment the termination may be made to leave actor on server so that server could be removed to save computing resources. In another embodiment the determination of optimization of computing resources within the actor system can be based on a local regional or global view of the actor system. A global view of the actor system can provide a complete analysis of the actor system but it may take a significant about of time to analyze the entire actor system. A local view of the actor system can provide an analysis of the actors close to one or more actors however a local analysis may not provide enough information about the actor system. A regional view may provide an analysis that is somewhere between the local view and the global view of the actor system. One way to approximate a global view of the actor system would be to combine multiple regional views of the actor system to approximate the global view of the actor system. Such an approximation of the global view of the actor system may not take as much time to perform as performing a full global view of the actor system.

The management service may determine which of the available servers and to which the actor should be transferred based on the degree of closeness between actor and another actor in the actor server system . For example the management service may be aware of a degree of closeness between actor and actor on server . The degree of closeness between actor and actor can be based on a message frequency of messages sent between actor and actor based on a received degree of closeness between actor and actor or based on any other information. Placing the actor on server would place the actor in the closest location to actor . However server is not available to host actor . Between the available servers and the management service can determine that the actor will be closer to actor if it is moved to server than if it is moved to server because the intra rack communication link s communicate messages between server and server at a faster rate than the inter rack communication link s communicate messages between server and server . At the time shown in the actor has been moved to server .

If at block it is determined that there are no locations available to host the one or more actors then at block the one or more actors can be left in their original location. At block a signal can be sent that additional locations may need to be provisioned. Such a signal can include one or more of a signal sent to a developer or operator of the actor system to purchase additional computing resources available in a server system a signal for a network technician to install an additional server within a server rack a signal to automatically provision an additional server to host actors and the like. If additional locations are provisioned the one or more actors can then be transferred to the newly provisioned locations.

If at block it is determined that only one location is available then at block the one or more actors can be sent to that available location. In an embodiment not depicted in an additional decision can be made after block and before block . In that embodiment a decision can be made whether the one or more actors will be closer to other actors with which the one or more actors frequently send or receive messages. If the one or more actors would be closer to those other actors at the available location then the method could proceed to block where the one or more actors are sent to the available location. However if the one or more actors would not be closer to those other actors at the available location then the one or more actors can be left at their original location.

If at block it is determined that more than one location is available then at block a degree of closeness can be determined between the one or more actors and other actors in the actor system. At block a destination location from the available locations can be determined based at least in part on the degree of closeness. The destination location may not be the closest location of the one or more actors to other actors with which the one or more actors frequently send messages but the destination location may be the closest available location. Additionally in the case where there are more than one actors being moved more than one destination location may be determined. At block the one or more actors are sent to the destination location determined at block .

At block a determination can be made whether any additional locations are available to host one or both of the first and second actors. The determination can be made based on responses to the inquiries sent at block . If at block it is determined that no new locations are available to host one or both of the first and second actors then at block a signal can be raised regarding a possible need for additional locations. Additional locations can be made by provisioning an additional server by purchasing access to additional resources within an actor server system and the like. At block the first and second actors can be left in their original locations.

If at block it is determined that one or more new locations are available to host one or both of the first and second actors then at block a determination is made whether the possible one or more new locations would permit the first and second actors to be located closer to each other. For example if one of the possible new locations is a server that already hosts the second actor then placing the first actor on the same server would locate the first and second actors closer to each other. In another example if the first and second actors are located on different servers within the same server rack and the only possible new location is a server in another server rack then moving one of the first and second actors to the server in the other server rack would not locate the first and second actors closer to each other. If at block it is determined that the possible new locations would not locate the first and second actors closer to each other then the method can proceed to block where the first and second actors are left in their original locations. However if at block it is determined that the possible new locations would locate the first and second actors closer to each other then at block one or both of the first and second actors can be moved to one or more of the new locations.

If at block it is determined that the message frequency between the first actor and the second actor exceeds the threshold then at block a degree of closeness between the first and second actors can be determined. The degree of closeness between the first and second actors can be based on the message frequency between the first and second actors. At block a determination can be made based at least in part on the degree of closeness between the first and second actors whether one or both of the first and second actors should be moved to a new location. However if at block it is determined that the message frequency between the first actor and the second actor does not exceed the threshold then at block the first and second actor can be left in their original locations.

Each type or configuration of computing resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Customers may choose to allocate a number of small processing resources as web servers and or one large processing resource as a database server for example.

Data center may include servers which may be referred herein singularly as server or in the plural as servers that provide computing resources. These resources may be available as bare metal resources or as virtual machine instances and which may be referred herein singularly as virtual machine instance or in the plural as virtual machine instances . Virtual machine instances and are interest virtual machine instances. The interest virtual machine instances and may be configured to perform all or any portion of the encoding techniques based on areas of interest in accordance with the present disclosure and described in detail below. As should be appreciated while the particular example illustrated in includes one interest virtual machine in each server this is merely an example. A server may include more than one interest virtual machine or may not include any interest virtual machines.

The availability of virtualization technologies for computing hardware has provided benefits for providing large scale computing resources for customers and allowing computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies may allow a physical computing device to be shared among multiple users by providing each user with one or more virtual machine instances hosted by the physical computing device. A virtual machine instance may be a software emulation of a particular physical computing system that acts as a distinct logical computing system. Such a virtual machine instance provides isolation among multiple operating systems sharing a given physical computing resource. Furthermore some virtualization technologies may provide virtual resources that span one or more physical resources such as a single virtual machine instance with multiple virtual processors that spans multiple distinct physical computing systems.

Referring to communications network may for example be a publicly accessible network of linked networks and possibly operated by various distinct parties such as the Internet. In other embodiments communications network may be a private network such as a corporate or university network that is wholly or partially inaccessible to non privileged users. In still other embodiments communications network may include one or more private networks with access to and or from the Internet.

Communication network may provide access to computers . User computers may be computers utilized by users or other customers of data center . For instance user computer or may be a server a desktop or laptop personal computer a tablet computer a wireless telephone a personal digital assistant PDA an e book reader a game console a set top box or any other computing device capable of accessing data center . User computer or may connect directly to the Internet e.g. via a cable modem or a Digital Subscriber Line DSL . Although only two user computers and are depicted it should be appreciated that there may be multiple user computers.

User computers may also be utilized to configure aspects of the computing resources provided by data center . In this regard data center might provide a gateway or web interface through which aspects of its operation may be configured through the use of a web browser application program executing on user computer . Alternately a stand alone application program executing on user computer might access an application programming interface API exposed by data center for performing the configuration operations. Other mechanisms for configuring the operation of various web services available at data center might also be utilized.

Servers shown in may be standard servers configured appropriately for providing the computing resources described above and may provide computing resources for executing one or more web services and or applications. In one embodiment the computing resources may be virtual machine instances . In the example of virtual machine instances each of the servers may be configured to execute an instance manager or which may be referred herein singularly as instance manager or in the plural as instance managers capable of executing the virtual machine instances . The instance managers may be a virtual machine monitor VMM or another type of program configured to enable the execution of virtual machine instances on server for example. As discussed above each of the virtual machine instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed above discuss the context of virtual machine instances other types of implementations can be utilized with the concepts and technologies disclosed herein. For example the embodiments disclosed herein might also be utilized with computing systems that do not utilize virtual machine instances.

In the example data center shown in a router may be utilized to interconnect the servers and . Router may also be connected to gateway which is connected to communications network . Router may be connected to one or more load balancers and alone or in combination may manage communications within networks in data center for example by forwarding packets or other data communications as appropriate based on characteristics of such communications e.g. header information including source and or destination addresses protocol identifiers size processing requirements etc. and or the characteristics of the private network e.g. routes based on network topology etc. . It will be appreciated that for the sake of simplicity various aspects of the computing systems and other devices of this example are illustrated without showing certain conventional details. Additional computing systems and other devices may be interconnected in other embodiments and may be interconnected in different ways.

In the example data center shown in a server manager is also employed to at least in part direct various communications to from and or between servers and . While depicts router positioned between gateway and server manager this is merely an exemplary configuration. In some cases for example server manager may be positioned between gateway and router . Server manager may in some cases examine portions of incoming communications from user computers to determine one or more appropriate servers to receive and or process the incoming communications. Server manager may determine appropriate servers to receive and or process the incoming communications based on factors such as an identity location or other attributes associated with user computers a nature of a task with which the communications are associated a priority of a task with which the communications are associated a duration of a task with which the communications are associated a size and or estimated resource usage of a task with which the communications are associated and many other factors. Server manager may for example collect or otherwise have access to state information and other information associated with various tasks in order to for example assist in managing communications and other operations associated with such tasks.

It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that data center described in is merely illustrative and that other implementations might be utilized. Additionally it should be appreciated that the functionality disclosed herein might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing device may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

In at least some embodiments a server that implements a portion or all of one or more of the technologies described herein may include a general purpose computer system that includes or is configured to access one or more computer accessible media. depicts a general purpose computer system that includes or is configured to access one or more computer accessible media. In the illustrated embodiment computing device includes one or more processors and or which may be referred herein singularly as a processor or in the plural as the processors coupled to a system memory via an input output I O interface . Computing device further includes a network interface coupled to I O interface .

In various embodiments computing device may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store instructions and data accessible by processor s . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing one or more desired functions such as those methods techniques and data described above are shown stored within system memory as code and data .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripherals in the device including network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computing device and other device or devices attached to a network or networks such as other computer systems or devices for example. In various embodiments network interface may support communication via any suitable wired or wireless general data networks such as types of Ethernet networks for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs storage area networks or via any other suitable type of network and or protocol.

In some embodiments system memory may be one embodiment of a computer accessible medium configured to store program instructions and data as described above for implementing embodiments of the corresponding methods and apparatus. However in other embodiments program instructions and or data may be received sent or stored upon different types of computer accessible media. Generally speaking a computer accessible medium may include non transitory storage media or memory media such as magnetic or optical media e.g. disk or DVD CD coupled to computing device via I O interface . A non transitory computer accessible storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc. that may be included in some embodiments of computing device as system memory or another type of memory. Further a computer accessible medium may include transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link such as those that may be implemented via network interface . Portions or all of multiple computing devices such as those illustrated in may be used to implement the described functionality in various embodiments for example software components running on a variety of different devices and servers may collaborate to provide the functionality. In some embodiments portions of the described functionality may be implemented using storage devices network devices or special purpose computer systems in addition to or instead of being implemented using general purpose computer systems. The term computing device as used herein refers to at least all these types of devices and is not limited to these types of devices.

A compute node which may be referred to also as a computing node may be implemented on a wide variety of computing environments such as commodity hardware computers virtual machines web services computing clusters and computing appliances. Any of these computing devices or environments may for convenience be described as compute nodes.

A network set up by an entity such as a company or a public sector organization to provide one or more web services such as various types of cloud based computing or storage accessible via the Internet and or other networks to a distributed set of clients may be termed a provider network. Such a provider network may include numerous data centers hosting various resource pools such as collections of physical and or virtualized computer servers storage devices networking equipment and the like needed to implement and distribute the infrastructure and web services offered by the provider network. The resources may in some embodiments be offered to clients in various units related to the web service such as an amount of storage for storage processing capability for processing as instances as sets of related services and the like. A virtual computing instance may for example comprise one or more servers with a specified computational capacity which may be specified by indicating the type and number of CPUs the main memory size and so on and a specified software stack e.g. a particular version of an operating system which may in turn run on top of a hypervisor .

A number of different types of computing devices may be used singly or in combination to implement the resources of the provider network in different embodiments including general purpose or special purpose computer servers storage devices network devices and the like. In some embodiments a client or user may be provided direct access to a resource instance e.g. by giving a user an administrator login and password. In other embodiments the provider network operator may allow clients to specify execution requirements for specified client applications and schedule execution of the applications on behalf of the client on execution platforms such as application server instances Java virtual machines JVMs general purpose or special purpose operating systems platforms that support various interpreted or compiled programming languages such as Ruby Perl Python C C and the like or high performance computing platforms suitable for the applications without for example requiring the client to access an instance or an execution platform directly. A given execution platform may utilize one or more resource instances in some implementations in other implementations multiple execution platforms may be mapped to a single resource instance.

In many environments operators of provider networks that implement different types of virtualized computing storage and or other network accessible functionality may allow customers to reserve or purchase access to resources in various resource acquisition modes. The computing resource provider may provide facilities for customers to select and launch the desired computing resources deploy application components to the computing resources and maintain an application executing in the environment. In addition the computing resource provider may provide further facilities for the customer to quickly and easily scale up or scale down the numbers and types of resources allocated to the application either manually or through automatic scaling as demand for or capacity requirements of the application change. The computing resources provided by the computing resource provider may be made available in discrete units which may be referred to as instances. An instance may represent a physical server hardware platform a virtual machine instance executing on a server or some combination of the two. Various types and configurations of instances may be made available including different sizes of resources executing different operating systems OS and or hypervisors and with various installed software applications runtimes and the like. Instances may further be available in specific availability zones representing a logical region a fault tolerant region a data center or other geographic location of the underlying computing hardware for example. Instances may be copied within an availability zone or across availability zones to improve the redundancy of the instance and instances may be migrated within a particular availability zone or across availability zones. As one example the latency for client communications with a particular server in an availability zone may be less than the latency for client communications with a different server. As such an instance may be migrated from the higher latency server to the lower latency server to improve the overall client experience.

In some embodiments the provider network may be organized into a plurality of geographical regions and each region may include one or more availability zones. An availability zone which may also be referred to as an availability container in turn may comprise one or more distinct locations or data centers configured in such a way that the resources in a given availability zone may be isolated or insulated from failures in other availability zones. That is a failure in one availability zone may not be expected to result in a failure in any other availability zone. Thus the availability profile of a resource instance is intended to be independent of the availability profile of a resource instance in a different availability zone. Clients may be able to protect their applications from failures at a single location by launching multiple application instances in respective availability zones. At the same time in some implementations inexpensive and low latency network connectivity may be provided between resource instances that reside within the same geographical region and network transmissions between resources of the same availability zone may be even faster .

Thus as set forth above a content provider may provide content to a destination over a network such as the Internet using for example streaming content delivery techniques. A content provider may for example provide a content delivery service that may reside on one or more servers. The service may be scalable to meet the demands of one or more customers and may increase or decrease in capability based on the number and type of incoming client requests. The content delivery service may in some cases process a content item in parallel across multiple nodes of the content delivery service. This may be done in one embodiment to reduce the latency for rendering the content item. Portions of the content delivery service may also be migrated to be placed in a position of reduced latency with a requesting client. In some cases the content provider may determine an edge of a system or network associated with the content provider that is physically and or logically closest to a requesting client. The content provider may then for example spin up migrate resources or otherwise employ components associated with the determined edge for interacting with requests from the client. Such an edge determination process may in some cases provide an efficient technique for identifying and employing components that are well suited to interact with a particular client and may in some embodiments reduce the latency for communications between a content provider and one or more clients.

Each of the processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and subcombinations are intended to fall within the scope of this disclosure. In addition certain method or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

