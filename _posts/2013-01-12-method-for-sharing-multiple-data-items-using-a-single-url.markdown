---

title: Method for sharing multiple data items using a single URL
abstract: A way of sharing a set of data where each data item is stored at a different file path. The data items may be files or folders that reside on different remote storage servers or within the same file system. One or more data items in the set of data do not share a common root folder. Data items in the set of data that share a common root folder are stored amongst other data items in the common root folder that do not belonging to the set of data items to be shared. A single URL or link is generated to provide immediate access to the set of data to recipients of the URL or link.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286644&OS=09286644&RS=09286644
owner: 
number: 09286644
owner_city: 
owner_country: 
publication_date: 20130112
---
A typical user of electronic devices may store data files at a variety of different places including hard drives on personal computers transportable media such as CD s DVDs USB storage devices and portable hard drives as well as on remote storage devices accessible using the Internet often referred to as the cloud . When users want to share these files with others they have customarily made copies of the files and provided them on a transportable media or uploaded copies of the files electronically as an attachment to an email message.

With the expansion of cloud based services and social networks new ways to share information have evolved e.g. public and private online posts but the sharing of actual data items is still done in a traditional manner where all the data must be present at a common location. For example sharing data that is stored in the cloud is done in conjunction with emails or social contacts where once a remote data item is selected options are provided to share the data item via email or social networks. After a file or folder is shared with one or more recipients the recipients typically receive a share link in the form of a uniform resource locator URL that references the shared file or root folder on the remote server. Clicking on the URL may direct the recipient to a web page that displays the shared data items for viewing and downloading or the link may be a direct download link to download the shared data item to the recipient s computing device.

When a user wants to share several files in a single share URL the user is typically required to move all desired files to a single folder or compress all the files into a single archive file e.g. .zip or .rar . Accordingly to share multiple files folders or a combination of files and folders requires duplication of all data items in a compressed archive or grouping the data items by moving them into a single common root folder in order to allow the user to make a single data item selection. If multiple files and folders are not grouped together in this manner then multiple share links are needed one for each data item because each data item would not share a common root file path. Thus the prior art is limited to one share link or URL per root file path where the recipient would have access to all files residing within the root file path e.g. a shared folder with several data items .

For these reasons there exists a need for a solution that allows a user to share several selections of data items regardless of path location and without requiring grouping or moving of the data items and provide a single share URL that makes all the data items available to the intended share recipient s at once.

Some embodiments provide a way to share multiple ungrouped data items e.g. files and folders of files using a single share link or URL. Some of these embodiments may allow a user to make a selection of several files folders or a combination of files and folders that do not share a common root file path to be shared among a set of recipients. The shared data may be stored on one or more remote storage servers which may span one or more remote storage service providers. Different files may be shared in different ways as appropriate. For instance a set of authorized persons or authorized users may be designated for each shared file or for the entire set of shared data. In addition some embodiments may provide a shared file repository e.g. a folder that allows multiple users to upload download modify update and or otherwise manipulate files within the shared file repository. Such shared data may be stored in a secure way e.g. the shared data may be stored in an encrypted form .

The preceding Summary is intended to serve as a brief introduction to some embodiments of the invention. It is not meant to be an introduction or overview of all inventive subject matter disclosed in this document. The Detailed Description that follows and the Drawings or Figures or FIGS. that are referred to in the Detailed Description will further describe exemplary embodiments described in the Summary as well as other embodiments. Accordingly to understand all the embodiments described by this document a full review of the Summary Detailed Description and the Drawings is needed. Moreover the claimed subject matter is not to be limited by the illustrative details in the Summary Detailed Description and the Drawings but rather is to be defined by the appended claims because the claimed subject matter may be embodied in other specific forms without departing from the spirit of the invention.

In the following detailed description of the invention numerous details examples and embodiments of the invention are set forth and described. However it will be clear and apparent to one skilled in the art that the invention is not limited to the embodiments set forth and that the invention may be practiced without some of the specific details and examples discussed and using different embodiments without departing from the spirit or scope of the invention.

Once the user has selected all the desired data items to define a set of data the user may invoke a share command by i selecting a share command from a context menu ii selecting a share command button iii by dragging and dropping the set of data items onto an individual contact or a group of contacts or by any other similar sharing command. After a share command is invoked some embodiments may present the user with a screen to enter email address es or social contact s from one or more social networks as illustrated in . Other embodiments may provide a confirmation window as illustrated in .

In the user has shared three selected data items and with a share group . From the confirmation window the user can review his data item selections for accuracy. Some embodiments may also provide the user with the ability to remove data items which may have been accidentally selected from within the confirmation window . Once the sharing of the set of data is confirmed by the user a share link or URL is generated and electronically sent to the intended recipients identified by the user. The URL may then be used to immediately access the set of data via the Internet or a communications network.

Some embodiments may also provide the user with several options for managing each URL for the set of shared data. For example the single share URL created for the set of data may be defined as a public URL or a private URL. Public URLs are usable by anyone possessing the link while private URLs may be linked to user accounts or social network accounts in order to authenticate authorized persons before allowing access to the set of data. Some embodiments may further provide the user with the ability to track which user has accessed viewed and or downloaded the set of data for private links. Other embodiments may also provide the user with an option to limit the number of downloads for the set of data while some may provide options to terminate a URL at a specified date and time.

To effectuate the sharing of data a share info table similar to the one illustrated in may be maintained by a sharing module of a file management application or a remote data management application. As shown in the share info table has several entries and . Each shared data item whether it is an individual share or a part of a set of data items may be stored in the share info table. Each entry in the share info table may have fields that include a share ID owner of the data item path where the data item is located and a unique key that is used to create a share link or URL where the key identifies the particular shared data item to display to the share recipient.

Share data item is an example of a single data item share that has a respective share ID owner path and key. These components in conjunction identify a unique shared data item. Therefore when a recipient uses a URL link having a particular key integrated into the URL the recipient may be taken for example to a website that uses the key to identify which data item to display to the user.

Share data item is an example of multi data item share where the multi data item set has entries for a share ID an owner and a key. The path entered in the share info table when sharing a set of data may be left null because the set of data likely includes several data items where each data item has a separate and unique file path. For data items and that belong to a multi data item set an entry and in the share table will be made for each data item and in the set of data items but the key filed for each data item will be left with a null entry.

In order to reconcile the data items that belong to a multi data item share a second table may be utilized. illustrates an exemplary group share table for such reconciliation. The group share table may include fields for a group share ID an individual share ID the number of files belonging to the particular group share ID and a type field to indicate the type of data item e.g. file or folder . Each data item belonging to a particular set of data items will have an entry in the group share table . As illustrated in group share ID 5678 includes 3 data items and accordingly there are 3 entries for group share ID 5678. Each entry may include the unique individual share IDs for each data item and in the set of data items found in the share info table .

A data sharing application may then be able to provide a single unique URL to the set of data items by embedding the group share ID key of entry from the share info table within the URL. When a recipient uses the group share URL to view the set of data the share module may recognize that a null field exists for the path entry in the share info table . The share module then knows to look to the group info table to reconcile which data items need to be displayed to the recipient for the identified group share ID. From the group share table the share module can identify the number of data items to be displayed find the individual unique share IDs of each data item in the set of data and by linking the share info table and group share table the share module can reconcile the path of each individual data item and display the set of data items on a single graphical user interface for a recipient to view access and or download.

With the ability to share data items having different distinct and exclusive file paths the same methods described above may be adapted to share data items that reside in different locations which may include locations across several remote storage areas local storage areas and even different service provider storage areas. As long as a path can be defined for a particular data item and that path is available and accessible via a URL the data item may be included in a grouped share command. For instance a third party service provider having remote storage may provide application programming interfaces APIs for linking to or downloading data items stored on the third party service provider s remote storage. If a user is able to make a selection of such a file that has an identifiable path to the data item it may be included in the set of data items to be shared. The path of the data item would simply be entered in the share info table with a null entry in the key field. If a user makes a selection of a local file then a secondary operation may be performed in some embodiments to upload that local data item to the sharing program s remote storage so an accessible URL path may be defined for that data item before it is included in the set of data items to be shared.

Next at the process will enter each selected data item in the group share table. Each entry will include a same group share ID as its respective unique individual share ID found in the share info table. Each entry may also be identified as a file or folder in order to allow the graphical user interface to properly display whether the date item is a single file or a folder having a common root path to several individual files. Then at an entry for the group share ID may be made in the share info table where the group share ID has a null value recorded in its respective path field and a unique group key in the key field. Finally the process at may use the uniquely generated group key and embed the group key into a single URL which can then be electronically communicated to a set of intended recipients.

One of ordinary skill in the art will recognize that process may be performed in various appropriate ways without departing from the spirit of the invention. For instance the process may not be performed as one continuous series of operations in some embodiments. Alternatively the process may be repeated continuously or at regular or irregular intervals in some embodiments. In addition the process may be implemented using several sub processes or as part of a larger macro process. Furthermore various processes may be performed concurrently sequentially or some combination of sequentially and concurrently. Moreover the operations of the process may be performed in different orders.

Process may begin when a manufacturing facility generates a computer program product for use by consumers. As shown the process may define at sets of instructions for implementing a graphical user interface similar to the one illustrated in . In some cases such sets of instructions are defined in terms of object oriented programming code. For example some embodiments may include sets of instructions for defining classes and instantiating various objects at runtime based on the defined classes. The process may then define at sets of instructions for implementing a share info table e.g. share info table described above in reference to .

Next process may define at sets of instructions for implementing a group share table e.g. group share table described above in reference to . Process then may define at sets of instructions for implementing a share module for creating and electronically transmitting a unique URL associated with the set of data items being shared. Finally the process may write at the sets of instructions to a non volatile and non transitory storage medium.

One of ordinary skill in the art will recognize that the various sets of instructions defined by process are not exhaustive of the sets of instructions that could be defined and stored on a computer readable storage medium for a sharing application program incorporating some embodiments of the invention. In addition the process is a conceptual process and the actual implementations may vary. For example different embodiments may define the various sets of instructions in a different order may define several sets of instructions in one operation may decompose the definition of a single set of instructions into multiple operations etc. In addition the process may be implemented as several sub processes or combined with other operations within a macro process.

Many of the processes and modules described above may be implemented as software processes that are specified as at least one set of instructions recorded on a non transitory storage medium. When these instructions are executed by one or more computational elements e.g. microprocessors microcontrollers Digital Signal Processors DSPs Application Specific ICs ASICs Field Programmable Gate Arrays FPGAs etc. the instructions cause the computational element s to perform actions specified in the instructions.

Computer system may be implemented using various appropriate devices. For instance the computer system may be implemented using one or more personal computers PC servers mobile devices e.g. a Smartphone tablet devices and or any other appropriate devices. The various devices may work alone e.g. the computer system may be implemented as a single PC or in conjunction e.g. some components of the computer system may be provided by a mobile device while other components are provided by a tablet device .

Computer system may include a bus at least one processing element a system memory a read only memory ROM other components e.g. a graphics processing unit input devices output devices permanent storage devices and or a network connection . The components of computer system may be electronic devices that automatically perform operations based on digital and or analog input signals. For instance the various example share modules described may be at least partially implemented using sets of instructions that are run on computer system .

Bus represents all communication pathways among the elements of computer system . Such pathways may include wired wireless optical and or other appropriate communication pathways. For example input devices and or output devices may be coupled to the system using a wireless connection protocol or system. The processor may in order to execute the processes of some embodiments retrieve instructions to execute and data to process from components such as system memory ROM and permanent storage device . Such instructions and data may be passed over bus .

ROM may store static data and instructions that may be used by processor and or other elements of the computer system. Permanent storage device may be a read and write memory device. This device may be a non volatile memory unit that stores instructions and data even when computer system is off or unpowered. Permanent storage device may include a mass storage device such as a magnetic or optical disk and its corresponding disk drive .

Computer system may use a removable storage device and or a destination storage device as the permanent storage device. System memory may be a volatile read and write memory such as a random access memory RAM . The system memory may store some of the instructions and data that the processor uses at runtime. The sets of instructions and or data used to implement some embodiments may be stored in the system memory the permanent storage device and or the read only memory . For example the various memory units may include instructions for authenticating a client side application at the server side application in accordance with some embodiments. Other components may perform various other functions. These functions may include interfacing with various communication devices systems and or protocols.

Input devices may enable a user to communicate information to the computer system and or manipulate various operations of the system. The input devices may include keyboards cursor control devices audio input devices and or video input devices. Output devices may include printers displays and or audio devices. Some or all of the input and or output devices may be wirelessly or optically connected to the computer system.

Finally as shown in computer system may be coupled to a network through a network adapter . For example computer system may be coupled to a web server on the Internet such that a web browser executing on computer system may interact with the web server as a user interacts with an interface that operates in the web browser.

As used in this specification and any claims of this application the terms computer server processor and memory all refer to electronic devices. These terms exclude people or groups of people. As used in this specification and any claims of this application the term non transitory storage medium is entirely restricted to tangible physical objects that store information in a form that is readable by electronic devices. These terms exclude any wireless or other ephemeral signals.

It should be recognized by one of ordinary skill in the art that any or all of the components of computer system may be used in conjunction with the invention. Moreover one of ordinary skill in the art will appreciate that many other system configurations may also be used in conjunction with the invention or components of the invention.

Moreover while the examples shown may illustrate many individual modules as separate elements one of ordinary skill in the art would recognize that these modules may be combined into a single functional block or element. One of ordinary skill in the art would also recognize that a single module may be divided into multiple modules.

While the invention has been described with reference to numerous specific details one of ordinary skill in the art will recognize that the invention can be embodied in other specific forms without departing from the spirit of the invention. For example several embodiments were described above by reference to particular features and or components. However one of ordinary skill in the art will realize that other embodiments might be implemented with other types of features and components. One of ordinary skill in the art would understand that the invention is not to be limited by the foregoing illustrative details but rather is to be defined by the appended claims.

