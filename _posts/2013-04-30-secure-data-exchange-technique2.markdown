---

title: Secure data exchange technique
abstract: A technique for the secure exchange of data between multiple entities that use compatible business management systems utilizes serializable data transfer objects to transfer business data over a secure communication path. These serializable data transfer objects are used to share business data over a secure communication path, eliminating the need for an active user connection between entities wishing to exchange data. The data contained within the transfer objects can be used by any participating entity to update existing records related to the transaction, or to create new records relating to the transaction. Serializable objects link all data relating to a given business transaction. An interface allows users to view data contained in or referenced by an object, and to create or modify transaction records based on the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09544284&OS=09544284&RS=09544284
owner: 
number: 09544284
owner_city: 
owner_country: 
publication_date: 20130430
---
This is a utility patent application being filed in the United States Patent and Trademark Office as a non provisional application for patent under Title 35 U.S.C. 100 et seq. and 37 C.F.R. 1.53 b and is a continuation in part of the U.S. patent application Ser. No. 13 560 528 that was filed on Jul. 27 2012 which application is incorporated herein by reference in its entirety.

Electronic data interchange EDI between businesses has become so common that it is easy to forget about the many small businesses that cannot afford to implement it. The road to data integration for small businesses is full of obstacles any of which can derail efforts at data integration. One is the cost of conversion software conversion services or both. Additionally the purchase of new software can require the company to update or replace some or all of its hardware. Another obstacle to data integration for small businesses is that many small businesses do not have dedicated IT employees with the knowledge or expertise to handle a data integration project. Another obstacle is the preparation and training for the new technology which can be so disruptive to the daily operations of a small business that current revenue and customer relationships can be adversely affected. Obstacles like these as well as others even if only perceived can make small business owners very reluctant to undertake data conversion projects regardless of how affordable or seamless their implementation might actually be.

Many small businesses use popular off the shelf business management systems because they are affordable and relatively easy to use. Ironically businesses that use the same business management system still have to undergo the process of data conversion if they want to exchange data with each other even though the programming structure of their respective business management systems is nearly identical.

There is a need to facilitate the secure exchange of electronic data between businesses that have compatible business management systems.

The present disclosure presents a novel technique for securely exchanging electronic data between multiple entities that share a common accounting link and that utilize the same business management system without compromising the confidential or otherwise unauthorized data of any of the entities. In general the technique utilizes data transfer objects that can be serialized. The serialized data transfer objects are used to share business data over a secure communication path eliminating the need for an active user connection between entities wishing to exchange data. The data contained within the transfer objects can be used by any participating entity to update existing records related to the transaction or to create new records relating to the transaction. Security of business data between the participating entities is maintained both because there is no remote user connection between any of the participating entities and because the participating entities have the option of accepting or not accepting the data being exchanged into their business management systems. In addition a comprehensive audit trail of records relating to the transaction is created.

The secure data exchange technique can be utilized in a variety of business settings and computing environments. As a non limiting example it can be part of a web based or web centric accounting and general ledger system in a client server configuration. One implementation of the technique contains a user interface in the client module that sends information to the server and receives information requests from the server and a server module that receives information requests from the client and sends information to the client. Data relating to a business transaction to be exchanged is organized into a serializable transfer object which is then transmitted over a secure communication path to the other participating entity or entities. The data contained in the transfer object can be accessed by users of the participating entities and used to update their own existing records relating to the transaction or create a new record relating to the transaction. Because the transfer object is serializable whenever any of the participating entities creates a new record or modifies an existing record relating to the transaction the transfer object is modified with the data contained in the new or modified record. The result is that the transfer object contains and maintains a comprehensive documentation chain of all the data relating to a business transaction that can be accessed by any of the entities participating in the transaction.

In general embodiments of the secure data exchange technique operate to share business data related to a given transaction between participating entities by using data transfer objects to link the data contained in the business records of each participating entity.

These embodiments features and aspects are further described in the following detailed description and the figures.

This description is related to and is directed towards a technique to provide for the secure exchange of electronic data between multiple entities that use the same business management system and that have a common accounting link. The various embodiments of the secure data exchange technique described herein utilize the non limiting example of a business transaction conducted between two participating entities Company A and Company B. Company A orders widgets from Company B which establishes their common accounting link. Both companies use the same business management system and have agreed to use the technique to exchange data with each other relevant to their business transactions. It should be understood that the reference of the same business management system may include a single shared system however the term is not limited to such a configuration and in fact may include multiple and distributed systems that are running or implementing a compatible business management system. The compatibility may include running identical software applications containing identical hardware including capabilities to communicate over a common protocol sharing file databases and or the like as a few non limiting examples. In general each such business management system is capable of establishing a secure communication path such as by utilizing HTTPS and a public private encryption key system as a non limiting example which will provide encrypted communication and secure identification of a network web server.

The exemplary platform is illustrated as including a processor and a memory element . In some embodiments the processor and the memory element may be communicatively coupled over a bus or similar interface . In other embodiments the processor and the memory element may be fully or partially integrated with each other. The processor can be a variety of processor types including microprocessors micro controllers programmable arrays custom IC s etc. and may also include single or multiple processors with or without accelerators or the like. The memory element of may include a variety of structures including but not limited to RAM ROM magnetic media optical media bubble memory FLASH memory EPROM EEPROM etc. In addition rather than being internal to the platform the memory element may be external to the platform and accessed through a device interface or network interface . The processor or other components may also provide sub components or functionality such as a real time clock analog to digital convertor digital to analog convertor sensors etc. The processor also interfaces to a variety of elements including a control device interface a display adapter audio adapter and a network device interface . The control device interface provides an interface to external devices systems equipment sensor actuators or the like. As non limiting examples the control device interface can be used to interface with devices or systems such as a keyboard a mouse a pin pad and audio activate device a PS3 or other game controller as well as a variety of the many other available input and output devices or another computer or processing device. The display adapter can be used to drive a variety of visually oriented elements such as display devices including an LED display LCD display one or more LEDs or other display devices printers etc. The audio adapter interfaces to and drives a variety of audible or other alert elements such as a speaker a speaker system buzzer bell vibrator etc. The network device interface can also be used to interface the computing platform to other devices or systems through a network . The network may be a local network a wide area network wireless network WIFI Bluetooth cellular 3G etc. a global network such as the Internet or any of a variety of other configurations including hybrids etc. The network device interface may be a wired interface or a wireless interface. The computing platform is shown as interfacing to a server and a third party system through the network . Thus the computing platform can function independently in connection with one or more systems or even as a distributed system. A battery or power source provides power for the computing platform .

It will be appreciated that the computing platform illustrated in may then provide an environment on which an application program system etc. can run and that such application program system etc. may incorporate aspects of the technique or access an external function or system that houses an embodiment of the secure data exchange technique. Likewise the computing platform may also illustrate a platform in which a standalone embodiment of the technique may reside such as a smart phone tablet computer lap top computer desktop computer etc. In addition the computing platform may illustrate a platform in which various components of the system may be implemented. For example the client the server and the database may each be implemented on a single platform or multiple platforms . is a block diagram illustrating the use of a secure communication path between participating entities implementing an exemplary embodiment of the secure data exchange technique. A protocol such as HTTPS can be utilized as a non limiting example of a secure communication path. HTTPS which is an acronym for Hypertext Transfer Protocol over SSL is a protocol utilizing TCP to transfer hypertext requests and information between servers and other servers and between servers and browsers. The use of this protocol provides encrypted communication and secure identification of a network web server. HTTPS connections are used in many situations in which sensitive information is being communicated. For instance HTTPS is frequently used for payment transactions on the World Wide Web as well as other connections in which sensitive information may be communicated. The detailed operation of HTTPS and the involvement between the various communication network layers is not addressed in detail in this description as those of ordinary skill in the relevant art will be familiar with the technical aspects of HTTPS. As such only a high level overview of the technology is presented. HTTPS provides data privacy for information that is communicated between entities utilizing the application being described. For purposes of this description illustrates a secure communication path between the Server A of participating entity Company A and the Server B of participating entity Company B.

Use of SSL server authentication allows a user to confirm a server s identity. An application that incorporates SSL enabled software can use standard techniques of public key cryptography to check that a server s certificate and public ID are valid and have been issued by a trusted certificate authority. Such confirmation is important if the servers will be transmitting confidential information over the connection the identity of the receiver should be validated prior to the transmission of the information.

It should be appreciated that the communication path between the server and client of a given entity i.e. Server A and Client A may be secured using HTTPS or other techniques and that may or may not involve accessing the internet.

It should be appreciated that other techniques can be used to provide the secured transmission of data and client server communication and authentication and that the use of HTTPS is only one non limiting example. For instance closed networks closed communication channels static signing manual encryption VPNs etc. could also be utilized.

Objects can refer to other objects. As another non limiting example DTO references objects and . In turn object refers to objects and . It should be appreciated that objects can reference other objects regardless of whether or not any of the objects involved are DTOs. Any or all of the objects and can be a data transfer object DTO . In an exemplary embodiment of the secure data exchange technique data relating to a given business transaction is encapsulated into a DTO that can be transmitted from the business management system of one participating entity to those of other participating entities.

It should be appreciated that a DTO is not a remote user connection between participating entities nor does a DTO require a remote user connection to be transmitted between participating entities.

The descriptions of exemplary embodiments of the secure data exchange technique utilize the non limiting example of a business transaction conducted between two participating entities Company A and Company B. Company A orders widgets from Company B which establishes their common accounting link. Both companies use the same business management system and have agreed to use the secure data exchange technique to exchange data with each other relevant to their business transactions. As such each has established a secure communication path utilizing HTTPS and a public private encryption key system which provides encrypted communication and secure identification of a network web server.

A user in Company A initiates a business transaction by creating a record for example a Purchase Order for ten steel widgets in a client module associated with Client A and transmits it to Server A which saves the record in Database A . Server A then encapsulates the data contained in the record into a serializable DTO encrypts it then transfers it over secure path to Company B s Server B where it is decrypted and saved in Database B .

Entities utilizing this illustrated embodiment can easily create new records based on the data contained in a DTO. Via Client B a user in Company B sees that Company A has sent a DTO and creates a Sales Order in Client B with data from Company A s DTO. The system populates the data from the DTO into the appropriate fields of the Sales Order. The user enters any additional information needed regarding the order and transmits it from Client B to Server B which saves the record to Database B and modifies the DTO to include the data from the Sales Order. In this way all the records associated with a transaction are linked by the DTO. Server B encrypts and transfers the DTO over secure path to Server A which decrypts it and stores it in Database A .

It should be appreciated that the above description explains the basic steps for creating and modifying a DTO using an exemplary embodiment of the secure data exchange technique being described. Any addition deletion or modification of data linked to a DTO modifies the DTO and the newly modified DTO is automatically transmitted to the participating entities.

Because all the records associated with a transaction are linked by the DTO users can easily update records linked by the object with data from other records linked by the object. For example when the Company A user sees the modified object from Company B the user chooses to update the Purchase Order record with data from Company B s Sales Order at action . As a result the DTO contents of the purchase order are modified as reflected in DTO Contents block . In this step an existing object is modified the object representing the Purchase Order. Instead of creating a new object representing the modification the Purchase Order object is simply referenced as in since a DTO byte stream can contain only one copy of an object.

Users from one entity can modify the DTO in ways that do not necessarily require action by the other entity or entities. In our non limiting example if the Company B user sees that Company A has updated its Purchase Order there is no need to do anything in response however Company B may opt to modify the Sales Order accordingly.

When the Company B user ships the items identified in Company A s Purchase Order the user creates a new record a Shipment Entry in Company B s system at action . Action then modifies the DTO as reflected in DTO Contents block where the Shipment Record now appears. The Company A user may update the Purchase Order with data from the Shipment Entry. Thus at action the Company A user modifies the DTO by referencing the Purchase Order again as reflected in DTO Contents block .

Because all the records associated with a transaction are linked by the DTO users can easily verify the status of the entire transaction. When the Company A user receives the shipment of items in the Purchase Order the user documents it by creating an Inventory Receipt record. Thus in action the user modifies the DTO as reflected in DTO Contents block .

When the user at Company B sees that the shipment has been received the user creates an Invoice for Company A at action . In this process the user from Company B modifies the DTO as reflected in DTO Contents block where the invoice now appears. The Company A user pays the invoice at action and creates an AP Payment record as reflected in DTO Contents block .

The user selects the desired company via Company Name search dialog and the desired DTO via DTO search dialog . Alternatively the user can utilize DTO search dialog without using a Company Name search dialog since each DTO will typically have a unique identifier.

Once the DTO is selected a list of the records comprising it is displayed in Linked Records table . Each row contains information for one record. A record can be selected by clicking on its corresponding row in the table. If the selected record includes an item table the contents of the item table display in Item Table . The entire contents of the selected record are displayed by clicking View Entire Record button . The selected record can be accessed and edited by clicking Edit Selected Record button . In an exemplary embodiment a participating entity can only edit records it originated it cannot edit records it did not originate however in some embodiments it will be appreciated that certain editing functions may be included. A new record can be created by clicking Create New Record button . Records created in this manner are linked to the DTO being viewed.

