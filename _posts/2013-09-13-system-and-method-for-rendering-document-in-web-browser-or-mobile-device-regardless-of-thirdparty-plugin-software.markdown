---

title: System and method for rendering document in web browser or mobile device regardless of third-party plug-in software
abstract: Techniques are disclosed for render documents that are in proprietary formats in a browser or mobile device. In one embodiment, a method comprises converting a plurality of resources in a document file into a plurality of files that are native to a browser. The method further comprises creating a style sheet based on the document file, wherein an aggregate of the plurality of files together with the style sheet are configured to cause the browser to render an appearance of the document file. The method further comprises generating, based on the document file, an invisible layer to be laid on the appearance, wherein the invisible layer enables actions to be performed on the document file. Among other advantages, embodiments disclosed herein provide the convenience of viewing and accessing documents regardless of whether a software or plug-in therefor is installed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09213684&OS=09213684&RS=09213684
owner: Box, Inc.
number: 09213684
owner_city: Los Altos
owner_country: US
publication_date: 20130913
---
A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the United States Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document 

With the advancements in digital technologies data proliferation and the ever increasing mobility of user platforms have created enormous amounts of information traffic over mobile and computer networks. This is particularly relevant to the increase of electronic and digital content being used and shared over the network in social settings and working environments as compared to traditional stand alone personal computers and mobile devices. As a result content is shared across multiple devices among multiple users.

However among others both the wide variety in file types and device types place a barrier to easy access of the shared content. Before accessing a file e.g. in a proprietary document format that is foreign to a user s system the user typically must install a software e.g. an executable or a plug in onto the user s system. Additionally the user may be required to complete a time consuming setup process which further impedes the access.

The same reference numbers and any acronyms identify elements or acts with the same or similar structure or functionality throughout the drawings and specification for ease of understanding and convenience.

The following description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However in certain instances well known or conventional details are not described in order to avoid obscuring the description. References to one or an embodiment in the present disclosure can be but not necessarily are references to the same embodiment and such references mean at least one of the embodiments.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which can be exhibited by some embodiments and not by others. Similarly various requirements are described which can be requirements for some embodiments but not other embodiments.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain terms can be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that same thing can be said in more than one way.

Consequently alternative language and synonyms can be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Without intent to limit the scope of the disclosure examples of instruments apparatus methods and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles can be used in the examples for convenience of a reader which in no way should limit the scope of the disclosure. Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

Techniques are disclosed for render documents that are in proprietary formats in a browser or mobile device. In one embodiment a method comprises converting a plurality of resources in a document file into a plurality of files that are native to a browser. The method further comprises creating a style sheet based on the document file wherein an aggregate of the plurality of files together with the style sheet are configured to cause the browser to render an appearance of the document file. The method further comprises generating based on the document file an invisible layer to be laid on the appearance wherein the invisible layer enables actions to be performed on the document file.

Among other advantages embodiments disclosed herein provide the convenience of viewing and accessing documents regardless of whether a software or plug in therefor is installed thereby enabling easy access to document files e.g. that are stored in the cloud based platform or simply provided from an application for conversion reducing or eliminating the time for additional download installation and setup time of third party software plug ins which in turn enhances user experience and productivity.

The client devices can be any system and or device and or any combination of devices systems that is able to establish a connection including wired wireless cellular connections with another device a server and or other systems such as host server and or a third party application . Client devices typically include a display and or other output functionalities to present information and data exchanged between among the devices the third party application and or the host server .

For example the client devices can include mobile hand held or portable devices or non portable devices and can be any of but not limited to a server desktop a desktop computer a computer cluster or portable devices including a notebook a laptop computer a handheld computer a palmtop computer a mobile phone a cell phone a PDA a smart phone e.g. a BlackBerry device such as BlackBerry Z10 Q10 an iPhone Nexus 4 etc. a Treo a handheld tablet e.g. an iPad iPad Mini a Galaxy Note Galaxy Note II Xoom Tablet Microsoft Surface Blackberry PlayBook Nexus 7 10 etc. a phablet e.g. HTC Droid DNA etc. a tablet PC a thin client a hand held console a hand held gaming device or console e.g. XBOX live Nintendo DS Sony PlayStation Portable etc. iOS powered watch Google Glass a Chromebook and or any other portable mobile hand held devices etc. running on any platform or any operating system e.g. Mac based OS OS X iOS etc. Windows based OS Windows Mobile Windows 7 Windows 8 etc. Android Blackberry OS Embedded Linux platforms Palm OS Symbian platform Google Chrome OS and the like. In one embodiment the client devices and host server are coupled via a network . In some embodiments the devices and host server can be directly connected to one another.

The input mechanism on client devices can include touch screen keypad including single touch multi touch gesture sensing in 2D or 3D etc. a physical keypad a mouse a pointer a track pad motion detector e.g. including 1 axis 2 axis 3 axis accelerometer etc. a light sensor capacitance sensor resistance sensor temperature sensor proximity sensor a piezoelectric device device orientation detector e.g. electronic compass tilt sensor rotation sensor gyroscope accelerometer or a combination of the above.

Signals received or detected indicating user activity at client devices through one or more of the above input mechanism or others can be used by various users or collaborators e.g. collaborators for accessing through network a web based collaboration environment or online collaboration platform e.g. hosted by the host server . The collaboration environment or platform can have one or more collective settings for an enterprise or an organization that the users belong and can provide an user interface e.g. via a webpage application accessible by the web browsers of devices for the users to access such platform under the settings . Additionally a client software that is native to the cloud collaboration platform can be provided e.g. through downloading from the host server via the network to run on the client devices to provide cloud based platform access functionalities. The users and or collaborators can access the collaboration platform via a client software user interface which can be provided by the execution of the client software on the devices .

The collaboration platform or environment hosts workspaces with work items that one or more users can access e.g. view edit update revise comment download preview tag or otherwise manipulate etc. . A work item can generally include any type of digital or electronic content that can be viewed or accessed via an electronic device e.g. device . The digital content can include .pdf files .doc slides e.g. Powerpoint slides images audio files multimedia content web pages blogs etc. A workspace can generally refer to any grouping of a set of digital content in the collaboration platform. The grouping can be created identified or specified by a user or through other means. This user can be a creator user or administrative user for example.

In general a workspace can be associated with a set of users or collaborators e.g. collaborators which have access to the content included therein. The levels of access e.g. based on permissions or rules of each user or collaborator to access the content in a given workspace can be the same or can vary among the users. Each user can have their own set of access rights to every piece of content in the workspace or each user can be different access rights to different pieces of content. Access rights can be specified by a user associated with a workspace and or a user who created uploaded a particular piece of content to the workspace or any other designated user or collaborator.

In general the collaboration platform allows multiple users or collaborators to access or collaborate efforts on work items such each user can see remotely edits revisions comments or annotations being made to specific work items through their own user devices. For example a user can upload a document to a workspace for other users to access e.g. for viewing editing commenting signing off or otherwise manipulating . The user can login to the online platform and upload the document or any other type of work item to an existing workspace or to a new workspace. The document can be shared with existing users or collaborators in a workspace.

In general network over which the client devices and the host server communicate can be a cellular network a telephonic network an open network such as the Internet or a private network such as an intranet and or the extranet or any combination or variation thereof. For example the Internet can provide file transfer remote log in email news RSS cloud based services instant messaging visual voicemail push mail VoIP and other services through any known or convenient protocol such as but is not limited to the TCP IP protocol Open System Interconnections OSI FTP UPnP iSCSI NSF ISDN PDH RS 232 SDH SONET etc.

The network can be any collection of distinct networks operating wholly or partially in conjunction to provide connectivity to the client devices and the host server and can appear as one or more networks to the serviced systems and devices. In one embodiment communications to and from the client devices can be achieved by an open network such as the Internet or a private network such as an intranet and or the extranet. In one embodiment communications can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS .

In addition communications can be achieved via one or more networks such as but are not limited to one or more of WiMax a Local Area Network LAN Wireless Local Area Network WLAN a Personal area network PAN a Campus area network CAN a Metropolitan area network MAN a Wide area network WAN a Wireless wide area network WWAN enabled with technologies such as by way of example Global System for Mobile Communications GSM Personal Communications Service PCS Digital Advanced Mobile Phone Service D Amps Bluetooth Wi Fi Fixed Wireless Data 2G 2.5G 3G 4G IMT Advanced pre 4G 3G LTE 3GPP LTE LTE Advanced mobile WiMax WiMax 2 WirelessMAN Advanced networks enhanced data rates for GSM evolution EDGE General packet radio service GPRS enhanced GPRS iBurst UMTS HSPDA HSUPA HSPA UMTS TDD 1xRTT EV DO messaging protocols such as TCP IP SMS MMS extensible messaging and presence protocol XMPP real time messaging protocol RTMP instant messaging and presence protocol IMPP instant messaging USSD IRC or any other wireless data networks or messaging protocols.

Third party applications may be provided by third party software application vendors and may be accessible to the users via the network e.g. from servers hosted by the third party software application vendors or via after download and installation software codes e.g. applications running on the user devices . In either configuration the third party applications may communicate with the host server for accessing cloud based collaboration platform storage and or services in performing their functions such as the document rendition techniques further discussed herein.

The embodiments disclosed herein recognize that the requirement of installing and executing a software e.g. a plug in that is foreign to a user s system places a barrier to easy access documents that are in proprietary format e.g. Adobe PDF Microsoft Document DOC Microsoft PowerPoint PPT etc. . As such it would be desirable to provide an intuitive way to view and interact with documents thereby creating a seamless experience for sharing and collaborating on any or almost any browser or device.

Accordingly the present disclosure enables a user to upload a document file e.g. a PDF file e.g. via web application interface or native client user interface for it to be stored on a shared workspace in the cloud collaboration platform or via a third party application using an application programming interface API for conversion or other suitable purposes and receive a version of the same document in the user s browser or the third party software running on the user s device which the user can then share with collaborators . Further the user can annotate make notes or comments highlight fill text into blanks as well as perform other actions to the document that can show up to other users e.g. collaborators in real time.

More specifically in some embodiments the host server can render documents to web browsers on devices to user interfaces and and or to third party application without requiring plug ins downloads or software that would otherwise be necessary to view or access these documents. The host server can also render the documents without compromising fidelity or performance.

In one or more embodiments the host server can render a document that is in a proprietary format e.g. a PDF by extracting all embedded resources e.g. fonts images etc. in the document. The host server can convert a plurality of resources in a document file into a plurality of files that are native to a browser. In other words the host server can selectively convert the embedded resources so that all resources are in web compatible formats such as a PNG file for an image or a TTF file for a font.

It is noted that the present disclosed techniques are not limited to rendering proprietary documents in a web browser rather the present techniques utilize the file formats that are native to a web browser so as to minimize the prerequisite of having a third party plug in or software installed on devices before becoming able to view or render the proprietary documents.

Further the host server can create a style sheet based on the document file so that an aggregate of the plurality of files together with the style sheet can cause the browser on device or the third party application to render an appearance of the document file. More specifically the embedded resources such as fonts that are shared between pages can be embedded within a shared web style sheet. The contents of the document file can be interpreted by the host server . In some embodiments as the document file is processed graphic operations in the document file can be mapped to their equivalent scalable vector graphic SVG operations. Additional layout analysis can also be performed by the host server when processing text in the document file to enable compact representation of text using SVG content.

In accordance with one or more embodiments the host server can further process the text to enable generation of an invisible layer based on the document file to be laid on the rendered appearance or rendition of the document file. The invisible layer can enable actions including for example text selecting text copying text cutting text pasting text searching text filling or hyperlinking to be performed on the document file. In particular examples of the present disclosure the host server can use HyperText Markup Language HTML e.g. HTML5 pages to render invisible text so as to form the invisible layer and to enable text selection hyperlinking search and other functionalities.

Among others the advantages provided by the techniques disclosed herein are particularly beneficial for large scale and demand in consumer and business web and mobile applications. Using the techniques disclosed herein proprietary documents e.g. PDFs PowerPoint or Word documents can be embedded into almost any web or mobile application using a simple library that is native to most modern web browsers e.g. iFrame or JavaScript thus no plug ins downloads or desktop software is required. The techniques can produce fast and high fidelity rendering and in some embodiments provide advanced security features including for example 256 bit document encryption on premise storage options and multiple deployment options including Software as a Service SaaS and private cloud.

More implementation details on the document rendering techniques which can be implemented on the host server to render proprietary documents on web application interface client software user interface third party application or a third party application running on the mobile client devices are discussed in fuller detail below and particularly with regard to .

The web based platform for collaborating on projects or jointly working on documents can be used by individual users and shared among collaborators. In addition the collaboration platform can be deployed in an organized setting including but not limited to a company e.g. an enterprise setting a department in a company an academic institution a department in an academic institution a class or course setting or any other types of organizations or organized setting.

When deployed in an organizational setting multiple workspaces e.g. workspace A B C can be created to support different projects or a variety of work flows. Each workspace can have its own associate work items. For example workspace A can be associated with work items workspace B can be associated with work items and workspace N can be associated with work items . The work items and can be unique to each workspace but need not be. For example a particular word document can be associated with only one workspace e.g. workspace A or it can be associated with multiple workspaces e.g. Workspace A and workspace B etc. .

In general each workspace has a set of users or collaborators associated with it. For example workspace A is associated with multiple users or collaborators . In some instances workspaces deployed in an enterprise can be department specific. For example workspace B can be associated with department and some users shown as example user A and workspace N can be associated with departments and and users shown as example user B .

Each user associated with a workspace can generally access the work items associated with the workspace. The level of access will depend on permissions associated with the specific workspace and or with a specific work item. Permissions can be set for the workspace or set individually on a per work item basis. For example the creator of a workspace e.g. one of user A who creates workspace B can set one permission setting applicable to all work items for other associated users and or users associated with the affiliate department for example. Creator user A can also set different permission settings for each work item which can be the same for different users or varying for different users.

In each workspace A B . . . N when an action is performed on a work item by a given user or any other activity is detected in the workspace other users in the same workspace can be notified e.g. in real time or in near real time or not in real time . Activities which trigger real time notifications can include by way of example but not limitation adding deleting or modifying collaborators in the workspace uploading downloading adding deleting a work item in the workspace creating a discussion topic in the workspace.

In some embodiments items or content downloaded or edited can cause notifications to be generated. Such notifications can be sent to relevant users to notify them of actions surrounding a download an edit a change a modification a new file a conflicting version an upload of an edited or modified file.

In one embodiment in a user interface to the web based collaboration platform where notifications are presented users can via the same interface create action items e.g. tasks and delegate the action items to other users including collaborators pertaining to a work item for example. The collaborators can be in the same workspace A or the user can include a newly invited collaborator. Similarly in the same user interface where discussion topics can be created in a workspace e.g. workspace A B or N etc. actionable events on work items can be created and or delegated assigned to other users such as collaborators of a given workspace or other users. Through the same user interface task status and updates from multiple users or collaborators can be indicated and reflected. In some instances the users can perform the tasks e.g. review or approve or reject etc. via the same user interface.

Each of users and can individually use multiple different devices to access and or manipulate work items in the workspace with which they are associated with. For example users can be collaborators on a project to which work items are relevant. Since the work items are hosted by the collaboration environment e.g. a cloud based environment each user can access the work items anytime and from any physical location using any device e.g. including devices they own or any shared public loaner device .

Work items to be edited or viewed can be accessed from the workspace . Users can also be notified of access edit modification and or upload related actions performed on work items by other users or any other types of activities detected in the workspace . For example if user modifies a document one or both of the other collaborators and can be notified of the modification in real time or near real time or not in real time. The notifications can be sent through any of all of the devices associated with a given user in various formats including one or more of email SMS or via a pop up window in a user interface in which the user uses to access the collaboration platform. In the event of multiple notifications each notification can be depicted preferentially e.g. ordering in the user interface based on user preferences and or relevance to the user e.g. implicit or explicit .

For example a notification of a download access read write edit or uploaded related activities can be presented in a feed stream among other notifications through a user interface on the user device according to relevancy to the user determined based on current or recent activity of the user in the web based collaboration environment.

In one embodiment the notification feed stream further enables users to create or generate actionable events e.g. as task which are or can be performed by other users or collaborators e.g. including admin users or other users not in the same workspace either in the same workspace or in some other workspace. The actionable events such as tasks can also be assigned or delegated to other users via the same user interface.

For example a given notification regarding a work item can be associated with user interface features allowing a user to assign a task related to the work item e.g. to another user admin user creator user or another user . In one embodiment a commenting user interface or a comment action associated with a notification can be used in conjunction with user interface features to enable task assignment delegation and or management of the relevant work item or work items in the relevant workspaces in the same user interface.

The host server of the web based or online collaboration environment can generally be a cloud based service. The host server can include for example a network interface a document conversion engine having a resource converter module a style sheet creator module an invisible layer e.g. using an HTML page generator module and a scalable vector graphic SVG output module . In some embodiments of the host server the resource converter module further includes a resource extractor document analysis module . One or more embodiments of the resource converter module can also include for example a font processing module an image processing module a graphics processing module and a text processing module

The network interface can be a networking module that enables the host server to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface can include one or more of a network adaptor card a wireless network interface card e.g. SMS interface WiFi interface interfaces for various generations of mobile communication standards including but not limited to 1G 2G 3G 3.5G 4G LTE etc. Bluetooth a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

As used herein a module a manager an interface or an engine includes a general purpose dedicated or shared processor and typically firmware or software modules that are executed by the processor. Depending upon implementation specific or other considerations the module manager interface or engine can be centralized or its functionality distributed. The module manager interface or engine can include general or special purpose hardware firmware or software embodied in a computer readable storage medium for execution by the processor. As used herein a computer readable medium or computer readable storage medium is intended to include all media that are statutory e.g. in the United States under 35 U.S.C. 101 and to specifically exclude all media that are non statutory in nature to the extent that the exclusion is necessary for a claim that includes the computer readable storage medium to be valid. Known statutory computer readable mediums include hardware e.g. registers random access memory RAM non volatile NV storage to name a few but may or may not be limited to hardware.

As previously described overall the host server can render documents in web browsers and mobile devices using open standards that are native to a browser e.g. such as HyperText Markup Language HTML Scalable Vector Graphic SVG and Cascading Style Sheet CSS without requiring third party plugins such as Adobe Flash. In accordance with some of the disclosed embodiments documents can be rendered without compromising fidelity or performance via delivering to the browser or to an application e.g. via an application programming interface API such as API a mix of SVG and HTML. In addition some embodiments of the host server can stream pages to the browser or the requesting application as they are generated or processed to enable instantaneous viewing of converted documents. Further the host server can generate additional HTML content to enable end users to interact with documents in a variety of modes including for example collaborative annotation form filling electronic signing document editing searching hyperlinking and text selection e.g. copying etc. .

More specifically a user of the host server can submit a document in a proprietary format for rendering by one of several example ways such as uploading the document e.g. via a web interface or via a software client interface to be stored in the cloud workspace e.g. in repository . In some embodiments a third party application which can be running as a service on a third party application server or can be running as an application on devices can submit the document for rendering by calling or utilizing the API .

The API can include client side APIs e.g. for third party applications running on devices and server side APIs e.g. for third party applications running on third party servers that allow application developers to integrate the functionalities of the present embodiments into their own web applications and or to customize for their uses. The API can include functionality such as allowing users to upload documents manage sharing settings respond to document navigation events and access annotation data. As such it is noted that the present disclosed techniques are not limited to rendering proprietary documents in a web browser rather the present techniques utilize the file formats that are native to a web browser so as to minimize the prerequisite of having a third party plug in or software installed on devices before becoming able to view or render the proprietary documents.

When the host server receives a request to render the document e.g. when a collaborator tries to view the document stored in the shared workspace on the collaborator s computer in a web browser the host server can employ the document conversion engine for the document rendition.

First the host server can utilize the resource converter module to convert a plurality of resources in a document file into a plurality of files that are native to a browser. In other words the host server can selectively convert the embedded resources so that all resources are in web compatible formats such as a PNG file for an image or a TTF file for a font. The resource extractor document analysis module can extract all embedded resources e.g. fonts images etc. in the document.

Further the style sheet creator module can create a style sheet based on the document file so that an aggregate of the plurality of files together with the style sheet can cause the browser on device or the third party application to render an appearance of the document file. More specifically the embedded resources such as fonts that are shared between pages can be embedded within a shared web style sheet. The contents of the document file can be interpreted by the resource extractor document analysis module . In some embodiments as the document file is processed graphic operations in the document file can be mapped by the resource extractor document analysis module together with the SVG output module to their equivalent scalable vector graphic SVG operations. Additional layout analysis can also be performed by the resource extractor document analysis module and the SVG output module when processing text in the document file to enable compact representation of text using SVG content.

In accordance with one or more embodiments the resource converter module and the invisible layer generator module can further process the text to enable generation of an invisible layer based on the document file to be laid on the rendered appearance or rendition of the document file. The invisible layer can enable actions including for example text selecting text copying text cutting text pasting text searching text filling or hyperlinking to be performed on the document file. In particular examples of the present disclosure the invisible layer generator module can use HyperText Markup Language HTML e.g. HTML5 pages to render invisible text so as to form the invisible layer and to enable text selection hyperlinking search and other functionalities.

Even more specifically in some embodiments of the document conversion engine for font processing in the document the embedded font can first be extracted by the resource extractor layout analysis module . Then each glyph within the embedded font can be assigned a unique unicode value by the resource converter module so that each glyph may easily be referenced within SVG text e.g. as discussed below . In one embodiment metadata for enabling crisper rendering on certain operating system e.g. a Windows Operating System can be calculated and added to the font file by the font processing module . The font can be saved using a format that is native to a web browser e.g. a TTF font format to enable use within web environments.

Moreover a blank variation of each font can created by the font processing module to enable use of invisible text within the HTML content e.g. as generated by the invisible layer generator module . It is noted that in some implementations the original fonts and the blank fonts may share identical font metrics however the glyphs within the blank fonts may contain no outline information.

In accordance with some embodiments of the document conversion engine for image processing in the document embedded images are saved by the image processing module within their original formats to enable high fidelity conversions when appropriate e.g. when the original format is a web browser native format and or when the original size resolution is not too high as to severely impedes the performance of document rendering which may be a design choice by a person having ordinary skill in the art .

In some embodiments the embedded images can be decoded and saved by the image processing module using a web optimized image format e.g. a PNG image format . Moreover in some occasional instances where large images are embedded in the original document the image processing module can down sample the original images to enable faster loading of content within the browser or the third party application.

In accordance with some embodiments of the document conversion engine for graphics processing in the document all graphics operations in the original document are mapped by the graphics processing module to their equivalent SVG operations as the document is processed by the document conversion engine . According to one embodiment the graphics processing module can employ nested objects to simulate layers masks patterns and transparency groups within the SVG content. Depending on the document and the implementation the graphics processing module can communicate with the style sheet creator module so as to employ CSS properties to simulate the use of certain operations such as fill strokes and transparencies in the original document. All SVG contents are communicated to the SVG output module which together with the CSS contents created by the module cause the browser or the third party application to render the appearance of the document file regardless of whether a plug in software that supports the document file is installed for the browser.

In accordance with some embodiments of the document conversion engine for text processing in the document the resource extractor document analysis module can perform a layout analysis on the original document to enable the compact representation of text within the files as the pages of the original document are converted to for example HTML and SVG contents. The result of the text analysis can be used to for example group unstructured text within the original document e.g. PDF into words lines and text boxes. Afterwards the text processing module can use the result of the text analysis together with the SVG output module to render SVG text content. It is noted that in one or more embodiments text is rendered using SVG content instead of HTML content to enable higher precision sub pixel position of characters.

Moreover the text processing module can use the result of the text analysis together with the invisible layer generator module to create invisible text e.g. on an invisible HTML layer . According to embodiments the invisible HTML text can overlaid on top of the SVG content to enable actions to be performed on the document such as text selection hyperlinking and search.

In some embodiments to enable instantaneous loading of converted documents pages are streamed to the browser as they are converted. In some of these embodiments before any page is shown a web style sheet containing shared fonts can be first loaded. Then for each subsequent page an SVG image can be used to display the contents of the page. Additionally an invisible HTML layer can be overlaid on top of the SVG image to enable document interactivity. Besides those discussed above further examples of document interactivity can include 

 a collaborative annotation which can allow users to add comments and other annotations to documents. In some examples comments and annotations can be rendered using HTML in various layers over a document while being stored as separate metadata to facilitate being selectively shown hidden as desired.

 b form filling and electronic signatures which can allow users to create fillable forms as well as fill out existing forms.

 c document editing which can allow the contents of document e.g. PDF DOC or DOCX and PPT or PPTX to be edited directly through an edit interface. In some embodiments the interface provides the so called What You See Is What You Get WYSIWYG functionality.

It is noted that some documents e.g. a PDF document can sometimes contain a large quantity of embedded fonts and images. In some embodiments to reduce the number of web requests that must be made before loading a page of a document all or most unshared resources can be base64 embeded within the pages that contain them. Further all shared fonts can be embedded within a single shared web style sheet and in one or more embodiments shared images are loaded as shared external resources.

In this way the disclosed embodiments enable the users to view documents in their web browsers and mobile devices without having to download large files or use plug ins or other software e.g. a desktop software such as Adobe Acrobat . The embodiments can also enable a user to upload documents in proprietary formats e.g. Word and PDF formats and the user s collaborators including the user himself can view annotate highlight comment as well as perform other suitable actions on the document without the need to download the document files and open them using desktop software. Documents can also be loaded faster because among other reasons the payload that the browser or the third party application has to load is reduced.

In some embodiments the view interface can have a browsing bar to allow the use to browse and select the documents stored in the shared workspace. An example of the browsing bar is shown in . The browsing bar can be activated by for example a swipe down gesture performed by the user on a touchscreen of the mobile device . The browsing bar can include miniature thumbnails each thumbnail displaying an actual content of the document using the document rendering techniques disclosed herein so that the browsing bar of the interface enables the user to take a quick glance at the actual content of the files without the need for the user to access the file. This can reduce time and effort for the user in reading and responding to the updates when collaborating with his or her collaborators on items shared on the workspace e.g. workspace .

The interface can also include a collaboration bar to allow the user to perform interactivity or collaboration functions on the document rendered e.g. using the techniques disclosed herein . An example of the collaboration bar is shown in . The collaboration bar can be activated by for example a swipe left gesture performed by the user on a touchscreen of the mobile device . The collaboration bar can include actions that the user can perform on the viewed document such as share comment download or assign a task to another collaborator s .

First the host server can convert a plurality of resources in a document file into a plurality of files that are native to a browser. In other words the host server can selectively convert the embedded resources so that all resources are in web compatible formats such as a PNG file for an image or a TTF file for a font. In some embodiments the host server can extract all embedded resources e.g. fonts images etc. in the document.

Further the host server can create a style sheet based on the document file so that an aggregate of the plurality of files together with the style sheet can cause the browser on device or the third party application to render an appearance of the document file. More specifically the embedded resources such as fonts that are shared between pages can be embedded within a shared web style sheet. The contents of the document file can be interpreted by the host server . In some embodiments as the document file is processed graphic operations in the document file can be mapped by the host server to their equivalent scalable vector graphic SVG operations. Additional layout analysis can also be performed by the host server when processing text in the document file to enable compact representation of text using SVG content.

In accordance with one or more embodiments the host server can further process the text to generate an invisible layer based on the document file to be laid on the rendered appearance or rendition of the document file. The invisible layer can enable actions including for example text selecting text copying text cutting text pasting text searching text filling or hyperlinking to be performed on the document file. In particular examples of the present disclosure the host server can use HyperText Markup Language HTML e.g. HTML5 pages to render invisible text so as to form the invisible layer and to enable text selection hyperlinking search and other functionalities.

In addition some embodiments of the host server can stream pages to the browser or the requesting application as they are generated or processed to enable instantaneous viewing of converted documents.

In alternative embodiments the machine operates as a standalone device or can be connected e.g. networked to other machines. In a networked deployment the machine can operate in the capacity of a server or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment.

The machine can be a server computer a client computer a personal computer PC a user device a tablet a phablet a laptop computer a set top box STB a personal digital assistant PDA a thin client device a cellular telephone an iPhone an iPad aBlackberry a processor a telephone a web appliance a network router switch or bridge a console a hand held console a hand held gaming device a music player any portable mobile hand held device or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine.

While the machine readable medium or machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable medium and machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium and machine readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the presently disclosed technique and innovation.

In general the routines executed to implement the embodiments of the disclosure can be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and computer systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disk drives optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

The network interface device enables the machine to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface device can include one or more of a network adaptor card a wireless network interface card a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

The network interface device can include a firewall which can in some embodiments govern and or manage permission to access proxy data in a computer network and track varying levels of trust between different machines and or applications. The firewall can be any number of modules having any combination of hardware and or software components able to enforce a predetermined set of access rights between a particular set of machines and applications machines and machines and or applications and applications for example to regulate the flow of traffic and resource sharing between these varying entities. The firewall can additionally manage and or have access to an access control list which details permissions including for example the access and operation rights of an object by an individual a machine and or an application and the circumstances under which the permission rights stand.

Other network security functions can be performed or included in the functions of the firewall can be for example but are not limited to intrusion prevention intrusion detection next generation firewall personal firewall etc. without deviating from the novel art of this disclosure.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling of connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application shall refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number can also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above detailed description of embodiments of the disclosure is not intended to be exhaustive or to limit the teachings to the precise form disclosed above. While specific embodiments of and examples for the disclosure are described above for illustrative purposes various equivalent modifications are possible within the scope of the disclosure as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments can perform routines having steps or employ systems having blocks in a different order and some processes or blocks can be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks can be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks can instead be performed in parallel or can be performed at different times. Further any specific numbers noted herein are only examples alternative implementations can employ differing values or ranges.

The teachings of the disclosure provided herein can be applied to other systems not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.

Any patents and applications and other references noted above including any that can be listed in accompanying filing papers are incorporated herein by reference. Aspects of the disclosure can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further embodiments of the disclosure.

These and other changes can be made to the disclosure in light of the above Detailed Description. While the above description describes certain embodiments of the disclosure and describes the best mode contemplated no matter how detailed the above appears in text the teachings can be practiced in many ways. Details of the system can vary considerably in its implementation details while still being encompassed by the subject matter disclosed herein. As noted above particular terminology used when describing certain features or aspects of the disclosure should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the disclosure with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the disclosure to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the disclosure encompasses not only the disclosed embodiments but also all equivalent ways of practicing or implementing the disclosure under the claims.

While certain aspects of the disclosure are presented below in certain claim forms the inventors contemplate the various aspects of the disclosure in any number of claim forms. For example while only one aspect of the disclosure is recited as a means plus function claim under 35 U.S.C. 112 6 other aspects can likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claim intended to be treated under 35 U.S.C. 112 6 begins with the words means for . Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the disclosure.

