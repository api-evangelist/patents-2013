---

title: Peripheral device for communication over a communications system
abstract: A method and corresponding system for communicating over a network using a first device and a peripheral device, wherein the first device comprises a user interface and a network interface for connecting to the network, and the peripheral device has a local connection to the first device, the local connection being independent of the network. The method comprises receiving data packets from the network at the network interface of the first device and forwarding the received data packets from the first device to the peripheral device via the local connection. A client engine of a communication client, executed on a processor of the peripheral device, processes the received data packets. The peripheral device sends processed data packets to the first device via the local connection such that data contained in the received data packets is displayed on the first device using the user interface of the first device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09654726&OS=09654726&RS=09654726
owner: Skype
number: 09654726
owner_city: Dublin
owner_country: IE
publication_date: 20130405
---
This application is a continuation of and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 12 583 007 filed on Aug. 12 2009 which claims priority under 35 U.S.C. 119 or 365 to Great Britain Application No. 0907818.9 filed May 6 2009 Great Britain Application No. 0816271.1 filed Sep. 5 2008 Great Britain Application No. 0816276.0 filed Sep. 5 2008 Great Britain Application No. 0816275.2 filed Sep. 5 2008 Great Britain Application No. 0816278.6 filed Sep. 5 2008 Great Britain Application No. 0816279.4 filed Sep. 5 2008 Great Britain Application No. 0816280.2 filed Sep. 5 2008 and Great Britain Application No. 0816281.0 filed Sep. 5 2008. The entire teachings of the above applications are incorporated herein by reference.

Packet based communication systems allow the user of a device such as a personal computer PC to communicate across a computer network such as the Internet. Packet based communication systems include voice over internet protocol VoIP communication systems. These systems are beneficial to the user as they are often of significantly lower cost than fixed line or mobile networks. This may particularly be the case for long distance communication. Typically to use a VoIP system the user installs and executes client software on their device. The client software provides the VoIP connections as well as other functions such as registration and authentication. In addition to voice communication the client may also provide further features such as video calling instant messaging IM voicemail and file transfer.

One type of packet based communication system uses a peer to peer P2P topology built on proprietary protocols. To enable access to a peer to peer system the user must execute P2P client software provided by a P2P software provider on their computer and register with the P2P system. When the user registers with the P2P system the client software is provided with a digital certificate from a server. Once the client software has been provided with the certificate communication can subsequently be set up and routed between users of the P2P system without the further use of a server. In particular the users can establish their own communication routes through the P2P system based on the exchange of one or more digital certificates or user identity certificates UIC which enable access to the P2P system. The exchange of the digital certificates between users provides proof of the users identities and that they are suitably authorised and authenticated in the P2P system. Therefore the presentation of digital certificates provides trust in the identity of the user. It is therefore a characteristic of peer to peer communication that the communication is not routed using a server but directly from end user to end user. Further details on such a P2P system are disclosed in WO 2005 009019.

A user s device may include input means such as a microphone and or a camera to capture data such as audio and or video data from the user and output means such as a speaker and or a display to convey data to the user such as audio and or video data . The user s device typically also includes the communication client software which is executed on a processor of the device and means for connecting to the communication system such as a network interface. In this way the user s device typically includes all of the components necessary to communicate over the network.

However some user devices typically corporately owned PCs have firewall software executed on the processor of the device or on the gateway of a Local Area Network LAN to block the user from downloading certain types of software onto the device. In this case the user may be prevented from installing the communication client software on his or her device and is therefore prevented from connecting to the communication system.

In some cases a user may purchase a device with the communication client preinstalled on the processor of the device and it may not be possible to download updated versions of the communication client. Since the user s device typically includes all of the components necessary to communicate over the network if it is desired to replace one component with a new or upgraded version of the component then it is necessary to replace the whole device including all of the other components. Furthermore the quality of each individual component in the device is often lower than the quality of corresponding components in devices that are dedicated to performing the function of the component in question. For example the display and speakers of the user s device may be of lower quality than the display and speakers of a device whose primary purpose is to display pictures and to play sounds to a user such as a television.

Furthermore there are currently many different methods for communicating between users for example phone calls emails etc. The cost of the user s device including all of the components necessary to communicate over the P2P system may be relatively high when compared to other devices which may be used for communicating in different ways. In some cases the increased cost of the user s device may put off some users from purchasing the device as they may be content to use other forms of communication that are available. A reduction in new users to the P2P communication system may detract from the popularity of the P2P communication system which in turn may reduce the desirability of the P2P communication system for existing users of the P2P system.

Updated versions of the communication client may be released from time to time. Due to the relatively high cost of the user s device and the need to replace all of the components necessary to communicate over the P2P system the user may decide not to update his communication client every time an updated version is released. It is desirable for the users of the communication system to have the most up to date version of the communication client as this will give the users the benefit of the latest advances and should provide greater user satisfaction.

In a first aspect of the invention there is provided a method of communicating over a network using a first device and a peripheral device the first device comprising a user interface and a network interface for connecting to the network the peripheral device having a local connection to the first device the local connection being independent of the network the method comprising receiving data packets from the network at the network interface of the first device forwarding the received data packets from the first device to the peripheral device via the local connection executing a client engine of a communication client on a processor of the peripheral device to process the received data packets and sending processed data packets from the peripheral device to the first device via the local connection such that data contained in the received data packets is conveyed to a user of the first device using the user interface of the first device.

In a second aspect of the invention there is provided a system for communicating over a network comprising a first device having a local connection to a peripheral device the local connection being independent of the network the first device comprising user interface means network interface means for connecting to the network and for receiving data packets from the network means for forwarding the received data packets from the first device to the peripheral device via the local connection and means for receiving processed data packets from the peripheral device via the local connection such that data contained in the received data packets is conveyed to a user of the first device using the user interface means and the peripheral device comprising means for receiving the received data packets from the first device via the local connection processing means for executing a client engine of a communication client to process the received data packets and means for sending processed data packets to the first device via the local connection.

In a third aspect of the invention there is provided a peripheral device for communicating over a network the peripheral device comprising means for receiving data packets from a first device via a local connection that is independent of the network the data packets originating from the network processing means for executing a client engine of a communication client to process the received data packets and means for sending processed data packets to the first device via the local connection the processed data packets being for conveying data contained in the received data packets to a user of the first device.

In a fourth aspect of the invention there is provided a method of communicating over a network using a first device and a peripheral device the first device comprising a user interface and a network interface for connecting to the network the peripheral device having a local connection to the first device that is independent of the network the method comprising receiving data at the peripheral device encoding the received data at the peripheral device executing a client engine of a communication client on a processor of the peripheral device to process the received data packets sending the processed data packets from the peripheral device to the first device via the local connection and forwarding the received data packets from the first device to the communication network via the network interface.

In a fifth aspect of the invention there is provided a method of establishing a bidirectional communication over a network using a first device and a peripheral device the first device comprising a user interface the peripheral device comprising a network interface for connecting to the network and a local connection to the first device that is independent of the network the method comprising receiving data packets from the network at the network interface of the peripheral device executing a client engine of a communication client on a processor of the peripheral device to process the received data packets sending processed data packets from the peripheral device to the first device via the local connection and decoding the data at the first device such that data contained in the received data packets is conveyed to a user of the first device using the user interface of the first device and wherein the method further comprises receiving data at the peripheral device encoding the received data at the peripheral device executing a client engine of a communication client on a processor of the peripheral device to process the received data packets sending the processed data packets from the peripheral device to the first device via the local connection and forwarding the received data packets from the first device to the communication network via the network interface.

In a sixth aspect of the invention there if provided a system for communicating over a network comprising a first device having a local connection to a peripheral device the local connection being independent of the network the peripheral device comprising network interface means for connecting to the network and for receiving data packets from the network processing means for executing a client engine of a communication client to process the received data packets and means for sending processed data packets to the first device via the local connection the first device comprising means for receiving the processed data packets from the peripheral device means for decoding the processed data packets and user interface means for conveying data contained in the processed data packets to a user of the first device.

Reference is first made to which illustrates a packet based communication system according to an embodiment of the present invention. Note that whilst this illustrative embodiment is described with reference to a P2P communication system other types of communication system could also be used such as non P2P VoIP or IM systems which employ client software for communication. A first user of the communication system named Tom Smith in is associated with a device which is shown connected to a network . Note that the communication system utilises a network such as the Internet. In the preferred embodiment shown in the device is a television. However in alternative embodiments the device may be for example a mobile phone a personal digital assistant PDA a personal computer PC including for example Windows Mac OS and Linux PCs a gaming device or other embedded device able to connect to the network . The television has a user interface which is capable of outputting information to a user of the device through for example a display and speakers . A peripheral device is connected to the television using a local connection which may be a wired connection such as a Universal Serial Bus USB connection using USB protocol or may alternatively be a wireless connection such as a Bluetooth connection. The connection is local in the sense that it is not a network connection using the network . Indeed the local connection is separate from the network . In other words the local connection is independent of the network . In fact the peripheral device might not have a direct connection to the network . If the peripheral device does have a direct connection to the network it does not use the direct connection for communication with the main device .

Note that in alternative embodiments the television can connect to the communication network via additional intermediate networks not shown in . For example if the device is a mobile device then it can connect to the communication network via a cellular mobile network for example a GSM or UMTS network .

Typically the television and the peripheral device are used within the vicinity of the user such that data can be conveyed to the user through the television and data can be captured from the user by the peripheral device using for example a camera to capture image or video data and a microphone to capture audio data. The peripheral device has a communication client embedded within it which is provided by the software provider. The communication client is a software program executed on a processor in the peripheral device . The peripheral device executes a client engine of the communication client in order to communicate with other users of the network such as the user called Kevin Jackson in .

In the preferred embodiment shown in the peripheral device is a web camera webcam . However in alternative embodiments the peripheral device may be an alternative data capture device such as a microphone or a processor dedicated to running the client engine of the communication client. A client user interface installed on the television is configured to provide an interface for the user to receive information from and to provide information to the client engine. The webcam can connect to the network via the television . Therefore the webcam does not require a separate direct connection to the network .

The operating system manages the hardware resources of the peripheral device and handles data being transmitted to and from the device via the local connection interface . Also running on top of the OS is a voice encoder a voice decoder and a video encoder . The encoders and may be used to encode data as described in more detail below.

With reference to there is now described the operation of the communication system in a preferred embodiment. The users Tom Smith and Kevin Jackson are users of the P2P communication system. The user Kevin Jackson may want to send data such as audio and video data to the user Tom Smith through the network . As described above to initiate a call a call set up request message is transmitted from a communication client of device operated by user to the client engine of device . The client engine instructs the client user interface to display an incoming call notification to the user at device . The user can accept the call by interacting with the client user interface . If the user accepts the call a call accept message is transmitted from the client engine to the device .

When a call accept message is received at the communication client from the client engine data packets are transmitted from the communication client to the television via the network . At step S the data packets are received at the television . The data packets are received via the network interface of the television . The received data packets are routed to the local connection interface of the television . In step S the received data packets are forwarded to the webcam over the local connection . The data packets are received at the local connection interface of the webcam . The data packets are routed to the CPU of the webcam . At step S the client engine is executed on the CPU of the webcam in order to handle the data packets in accordance with protocols of the P2P communication system. The received data packets may contain for example textual image video and or audio data. The client engine decrypts the data in the data packets identifies the type of data retrieved from the data packets and provides the data to the appropriate module. For example encoded video data is provided to the video decoder encoded audio data is provided to the audio decoder and textual data is provided to the IM instant messaging module .

If the data contained in the data packets is intended to be conveyed to the user then at step S the data is sent from the webcam to the television using the local connection via the local connection interface of the webcam and the local connection interface of the television .

In a preferred embodiment of the invention encoded video data received from the client engine is decoded by the video decoder located in the television as shown in . In this case encoded video data is sent via the local connection from the client engine to the video decoder of the television CPU for decoding thus minimising the bandwidth requirements of the local connection. The decoded video data may be conveyed to the user using the client user interface of the television through the display .

In one embodiment of the invention encoded audio data received from the client engine is decoded by the voice decoder located in the webcam. Since audio data transmitted from the television is also encoded in the webcam acoustic echo cancellation may be applied to the transmitted audio data based on the decoded received audio data.

During a communication event such as a video call data may be sent from the user Tom Smith to the user Kevin Jackson . With reference to a method of capturing data from the user is described. In step S data is captured from the user at the webcam . The captured data may be video or image data captured using the camera of the webcam . The captured data may be audio data captured using the microphone . In other embodiments the peripheral device may allow textual data to be captured from the user using for example a keypad of the peripheral device .

In step S the captured voice data and video data are encoded by the voice encoder and the video encoder respectively. Encoded data packets are output from the voice and video encoders. In step S the client engine running on the operating system of the webcam handles the encoded data packets according to the requirements and protocols of the P2P communication system on which the data will be transmitted.

As described above in preferred embodiments the webcam is not directly connected to the network . In step S the captured data packets are sent to the television using the local connection which is distinct from the network and then the data packets are forwarded from the television to the network using the network interface of the television . In this way the webcam is configured to use the network interface of the television to send data captured from the user to the network .

As described above in a preferred embodiment of the invention the webcam includes the video encoder and the television includes the video decoder . Therefore video data sent between the webcam and the television on the local connection is always encoded. User interface instructions are sent from the television CPU to the webcam via the local connection . User interface notifications are sent from the client engine of the webcam to the user interface of the television via the local connection .

In one embodiment of the invention driver software is stored on the peripheral device. When the peripheral device is first connected to the television the operating system of the television retrieves a driver suitable for the operating system from the peripheral device and sets up the network configuration.

In one embodiment of the invention the client user interface may be stored on the peripheral device together with the driver software. The operating system of the device may be arranged to retrieve the client user interface together with the driver when the peripheral device is attached.

In a further embodiment of the invention a client user interface API Application Programming Interface may be stored on the peripheral device. The operating system of the device may be arranged to retrieve the client user interface API together with the driver when the peripheral device is attached. The client user interface API provides an interface between the client engine and a user interface . In one exemplary embodiment the client user interface may be preinstalled on the device and form part of the user interface of the television application .

As shown in the client user interface API is executed on the CPU of the device and is arranged to provide an interface between a user interface of the television application and the client engine . The client user interface API is arranged to recognise inputs from the user interface of the television application and to control the client engine accordingly for example a notification that the red button of a remote control is pressed may be provided to the client user interface API . The client user interface API may be arranged to interpret this notification as a request for the contact list to be displayed. In response the client user interface API may instruct the client engine to provide the contact list via the local connection to the client user interface API . In response to receiving the contact list at the client user interface API the client user interface API is arranged to provide a text list of the user s contact list that can be interpreted by the user interface of the television application . The user may then scroll up and down the list to select a contact that the user wishes to call using the controls of the remote control. Actuation of another function button of the remote control for example the blue button may be interpreted by the client user interface API that the user wishes to place a call to the selected contact.

In a further exemplary embodiment of the invention the client user interface may be provided by a webpage. This embodiment will now be described with reference to and .

When the peripheral device is connected to the device the operating system of the user device is arranged to retrieve driver software for the peripheral device from the memory of the peripheral device . The client user interface API is provided together with the driver software to the device . As shown in the client user interface API is executed on the CPU of the device. The client user interface API is arranged to access the web server shown in via the network interface . The client user interface API is further arranged to download a user interface application from the web server . The user interface application may be a java programme which may be downloaded to the CPU of the device without being blocked by firewalls on the device . The user interface may be displayed on the display of the device and used to communicate with the client engine via the client user interface API.

Executing the client engine on a peripheral device such as the webcam attached to a device such as the television has several advantages over a system in which the client engine is executed on the device itself. Executing the client engine on the peripheral device means that it is not necessary to install a client engine in the processor of the device . Indeed in preferred embodiments there is not a communication client installed on the television . The user can use the communication client simply by connecting the peripheral device to the device .

Therefore if the user is prevented from downloading communication client software on the device due to firewall restrictions the user may nevertheless use the device to communicate via the communication system by connecting the device to the peripheral device. Furthermore instead of having to purchase a new television with the desired communication client preinstalled the user may connect the peripheral device to communicate via the communication system using the user interface of the device. Additionally updated versions of the communication client engine may be used without having to purchase a new television . Users are likely to already have televisions with the primary use being for watching and listening to television programs. The quality of the display and the speakers of existing televisions is high when compared to the display and speakers of a device which is to be used primarily as a communication device . The user may therefore prefer to use the display and speakers of the television to convey data that is received from the network .

Furthermore existing televisions are often capable of connecting to the network through a network interface e.g. network interface . Therefore a user who owns a television such as television already has in his possession some of the components necessary to communicate over the P2P system e.g. a display speakers a network interface . The peripheral device of the present invention provides the remaining components necessary to communicate over the P2P system e.g. the webcam provides the client engine to handle received data packets from the P2P system and means for capturing data from the user such as a camera and a microphone . Since the user is likely to already own a television it is advantageous to provide only the remaining components necessary for using the P2P communication system in a peripheral device that can connect to the television. The present invention exploits that fact users often own devices such televisions which can connect to the network through a network interface. The peripheral device includes the client engine of a client for communicating over a P2P system. The peripheral device does not need its own network interface for connecting to the network because it can use the existing network interface of the device . The peripheral device therefore requires only a local connection interface for connecting with the device .

The cost of the webcam is likely to be lower than a dedicated device that includes all of the components necessary to communicate over the P2P system. A lower cost gives users more incentive to purchase the webcam and they are also more likely to purchase the latest updates of the communication client engine as they are not required to purchase a whole new television. It is beneficial to user satisfaction for the users to be using the most up to date versions of the client software. Another aspect of the webcam that can reduce its cost is that it does not require a separate network interface for connecting to the network . The webcam can connect to the television using the local connection e.g. a USB connection such that it can use the network interface of the television to connect to the network .

The webcam may be built into the casing of the television to make the system compact. It may still be simple to replace the webcam with an updated version by removing the webcam from the casing of the television . Alternatively the webcam may be physically separate from the television.

User data such as chat history may be stored on the webcam . When the webcam is detachable from the television the privacy of the user data may be improved as the user is able to remove the webcam storing the user data.

The client user interface comprises a button labelled contacts and when this button is selected the contacts stored by the user in a contact list are displayed in a pane below the button . In the example user interface in four contacts of other users of the communication system are shown listed in contact list . Each of these contacts have authorised the user of the client to view their contact details and presence state. Each contact in the contact list has a presence status icon associated with it. For example the presence status icon for Kevin Jackson indicates that this contact is online the presence icon for Rosie indicates that this contact is away the presence icon for Amy indicates that this contact s state is do not disturb DND the presence icon for Sarah Rowling indicates that this contact is offline . Further presence state indications can also be included.

Presence information in packet based communication systems can additionally be supplemented by mood messages . Mood messages are traditionally short text strings that are composed by the users to distribute information about themselves to their contacts to supplement their presence status. The mood message of a contact is generally displayed next to the contact s name in the list of contacts . The presence status of the contact is displayed with the mood message next to the name of the contact in the list of contacts . In the mood messages and of the contacts are shown displayed next to the names of the contacts in the contact list .

The user may also select a picture to represent the user known as an avatar . The client periodically requests the presence state information for each of the contacts in the contact list directly over the communication system. Similarly the current mood message e.g. in London for Kevin Jackson for each of the contacts as well as a picture avatar e.g. picture for Kevin Jackson that has been chosen to represent the contact are also retrieved by the client directly from the respective clients of each of the contacts over the communication system. The presence states and mood messages of the contacts are therefore determined using a pull technique as the data is requested from the clients of each of the contacts. In alternative embodiments the presence state mood message and avatar of a user can be pushed to each of the user s contacts over the communication network either periodically or whenever the presence state is changed.

A further advantage of the present invention is that the CPU resources of the processor of the television are not required to maintain presence states avatar or mood message changes of contacts in the contact list . Changes to the presence states avatar or mood messages of the contacts in the contact list are maintained by the client engine of the webcam and it is only necessary to provide these changes to the user interface of the television when the user chooses to view the contact list on the television . This reduces the processing resources of the television that are used as compared to executing the entire communication client on the television .

In a second embodiment shown in the peripheral device includes a network interface for connecting to the network and the device does not include a network interface. Other elements of the embodiment shown in are the same as those described above and as shown in and are not described in further detail here.

When the network interface is in the peripheral device then the peripheral device is used to connect to the network and data is communicated between the device and the network via the local connection and the network interface .

With reference to there is now described the operation of the communication system in the second preferred embodiment. At step S the data packets are received at the webcam . The data packets are received via the network interface of the webcam . At step S the client engine is executed on the CPU of the webcam in order to handle the data packets in accordance with protocols of the P2P communication system. When the client engine has processed the data packets if the data contained in the data packets is intended to be conveyed to the user then at step S the processed data packets are sent from the webcam to the television using the local connection via the local connection interface of the webcam and the local connection interface of the television . In step S the processed data packets received at the television can be conveyed to the user . The method described above allows data received from the network to be conveyed to the user .

The methods and systems described above advantageously limit the amount of data that is sent via the local connection. In embodiments of the invention where the peripheral device is a data capture device it is desirable to compress the data captured by the peripheral device for transmission over both the local connection and the network. By providing the communication client in the data capture device data may be encoded in dependence on conditions on the P2P network for example the client engine may communicate network conditions e.g. channel bandwidth to the voice and video encoders of the peripheral device in this case the encoders may encode the data at a lower bit rate if the channel bandwidth is low. Furthermore the client engine may make further decisions that affect the data rate for example the client may chose not to send data packets in dependence on network conditions. As such when the network interface is in the TV as shown in and data is sent to the network from the peripheral device via the local connection the data will be compressed as far as possible. If however the network interface resides in the peripheral device as shown in the data captured from the peripheral device e.g. webcam can be sent directly to the network without having to send this data via the local connection unless a preview view is required in which case the client engine can send a preview view over the local connection to the television so that the user of the television can see an image of the data that is to be sent . Furthermore any data received from the network may be provided over the local connection to the television as encoded data since there is a decoder in the television.

Other technical advantages provided by executing the communication client in the data capture device include i improved real time scheduling of communication applications on a dedicated processor and operating system in the peripheral device e.g. webcam than on a general purpose PC and ii improved synchronization between audio and video data streams in the communications system.

While this invention has been particularly shown and described with reference to preferred embodiments it will be understood to those skilled in the art that various changes in form and detail may be made without departing from the scope of the invention as defined by the appendant claims. For example it will be appreciated that embodiments of the invention described herein can be employed in an IM system a VoIP system a video call system or any combination thereof.

