---

title: Information processing apparatus, setting information management method and recording medium
abstract: An disclosed information processing apparatus includes a memory unit for storing first setting-values for setting-items for a program in accordance with multiple priority levels, a given one of the setting-items being for one or more of the first setting-values, and each of the first setting-values having one of the priority levels assigned thereto; a setting information management unit for obtaining the first setting-values from the memory unit, and creating second setting-values by selecting, as one of the second setting-values, one of the first setting-values for any given setting-item from the first setting-values for the given setting-item such that the one of the first setting-values selected for the given setting-item has a highest priority level among the first setting-values for the given setting-item; and a program management unit for starting the program that operates based on the created second setting values.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09081720&OS=09081720&RS=09081720
owner: Ricoh Company, Ltd.
number: 09081720
owner_city: Tokyo
owner_country: JP
publication_date: 20131217
---
The disclosures herein generally relate to an information processing apparatus a setting information management method and a recording medium.

A print control method has been known in which in order to provide a print environment that is effective for reducing operational costs of a printing apparatus without greatly changing the print settings of the print data set by a user predetermined priorities are set for multiple setting items of the print settings and at least one of the multiple setting items of the print settings set by the user at the time of printing of the print data is changed according to the predetermined set priorities refer to for example Patent Document 1 .

An information processing apparatus such as a PC Personal Computer or a server apparatus performs a process defined in advance by a program. The information processing apparatus may be able to change the contents of the process operation of the program according to the situation. The information processing apparatus reads setting values or properties from outside the program and changes the operation according to the setting values. In this kind of information processing apparatus which changes the operation according to the setting values the user friendliness has been improved by allowing the setting values to be changed by the user according to the user environment.

In this kind of information processing apparatus which changes the operation according to the setting values not only the user but also for example an administrator may have a request for controlling the setting values. There is a problem that in this kind of information processing apparatus which changes the operation according to the setting values it cannot handle the request from a person who is not the user for example an administrator for controlling the setting values.

It is a general object of at least one embodiment of the present invention to provide an information processing apparatus a setting information management method and a recording medium in which an administrator can easily perform the management of the setting values that determine the operation of the program.

In one embodiment an information processing apparatus is disclosed. The information processing apparatus includes a memory unit configured to store first setting values associated with setting items for a program in accordance with multiple priority levels a given one of the setting items being associated with one or more of the first setting values and each of the first setting values having one of the priority levels assigned thereto a setting information management unit configured to obtain the first setting values from the memory unit and to create second setting values for the program by selecting as one of the second setting values one of the first setting values for any given setting item from one or more of the first setting values associated with the given setting item such that the one of the first setting values selected for the given setting item has a highest priority level among the one or more of the first setting values associated with the given setting item and a program management unit configured to start the program that operates based on the created second setting values.

According to the present embodiment it becomes easy for the administrator to control the setting values that determine the operation of the program.

In the following embodiments of the present invention will be described with reference to the accompanying drawings.

The information processing apparatus is for example a client terminal or a portable terminal. The information processing apparatus is a terminal apparatus a user can operate such as a PC on which a general OS is installed a smart phone a portable telephone etc. The information processing apparatus includes a wireless communication unit or a wired communication unit. The information processing apparatus includes an input unit such as a keyboard or a mouse and an output unit such as a display unit and runs one or more application programs on the OS.

The setting management apparatus is a server apparatus on which a general server OS is installed. The setting management apparatus includes a wireless communication unit or a wired communication unit. The setting management apparatus includes an input unit such as a keyboard or a mouse and an output unit such as a display unit. The setting management apparatus is implemented by for example a file server. Note that the existence of the setting management apparatus is not essential. The administrator only needs a unit which can be used for distributing the setting information to each of the information processing apparatuses for the update.

The network is used for information exchange between the information processing apparatus and the setting management apparatus . Apparatuses such as a router or a firewall may be placed between them. In as an example multiple information processing apparatuses and one setting management apparatus are shown. There may be one information processing apparatus and multiple setting management apparatuses .

The information processing apparatus and the setting management apparatus are implemented by for example PCs with a hardware configuration as shown in .

The input unit includes a keyboard a mouse a touch panel etc. and is used for a user to input operation signals. The display unit includes a display device and is used for displaying a result of a process by the PC .

The communication I F is an interface for the PC to connect to the network . The PC can perform data communications through the communication I F .

The HDD is a non volatile memory unit in which programs and data are stored. The stored programs and data include for example an OS Operating System which is basic software for controlling the PC as a whole and application programs which provide various kinds of functions on the OS. The HDD manages stored programs and data by using a predefined file system and or a DB Database .

The external I F is an interface to an external unit. The external unit includes a recording medium etc. The PC can read and write the recording medium through the external I F . The recording medium includes a flexible disk a CD Compact Disk a DVD Digital Versatile Disk an SD memory card a USB memory Universal Serial Bus memory etc.

The ROM is a non volatile semiconductor memory memory unit which can retain programs and data even when the power supply is disconnected. In the ROM programs and data such as a BIOS Basic Input Output System which runs at the start up of the PC OS settings network settings etc. are stored. The RAM is a volatile semiconductor memory memory unit which temporarily stores programs and data.

The CPU is a computing unit for performing overall control and functions of the PC by reading programs and data from the memory unit such as the ROM or the HDD into the RAM and by performing processes. The information processing apparatus and the setting management apparatus are implemented by PCc in terms of hardware and are capable of performing various processes which will be described later.

The information processing apparatus according to the present embodiment is implemented by for example process blocks shown in . is an example of a process block diagram of the information processing apparatus .

The information processing apparatus in implements an application plug in a platform core an OSGi Open Service Gateway Initiative a Java VM a platform API Application Programming Interface and a memory unit by executing programs.

The application is a program for a user to perform various processes on the information processing apparatus . The application operates while it is monitored by an application management unit which will be described later. The process contents of the application are not limited to specific contents. The application performs general PC processing such as creating documents browsing image processing etc. Note that in an application A and an application B are shown as examples of the applications .

The platform API is an interface for the application to use the platform . The platform API is a predefined interface for the platform to receive a request from the application and consists of functions classes etc.

Also the platform includes a display control UI control unit an application management unit a setting unit and a communication unit . The display control unit for example controls the display of the display unit based on the request from the application . The application management unit manages the application . The application management unit also manages operational settings of the application in addition to starting ending and installing uninstalling updating the application .

The setting unit performs processes related to setting information including managing setting information updating setting information and receiving setting information from the setting management apparatus . Note that the details of the setting unit will be described later. The communication unit performs communications with the setting management apparatus .

The OSGi is a base system OSGi framework for managing the dynamic addition or the execution of plug ins Java modules . The Java VM Virtual Machine is an execution environment for the plug ins. Note that the OSGi and Java VM are known technologies and the detailed description will be omitted. The memory unit stores necessary information for the information processing apparatus such as setting information.

The setting unit is implemented by for example process blocks shown in . is an example of a process block diagram of the setting unit . The setting unit in includes a setting information management unit a setting change UI unit and a setting information receiving unit .

The setting information management unit manages setting information of the application . The setting information management unit reads setting values for each of the applications from the memory unit and transmits them to the application through the application management unit . Also the setting information management unit exchanges setting information with the setting change UI unit and the setting information receiving unit and updates the setting information stored in the memory unit .

The setting change UI unit receives the setting information from the setting information management unit displays the setting information on for example the display unit and presents the setting information to the user. Also the setting change UI unit for example receives a change to the setting information from the user through the input unit and transmits the change of the setting information to the setting information management unit .

Note that the setting change UI unit determines whether or not it receives a change to the setting information from the user based on the property of the setting information received from the setting information management unit . In the case where the setting change UI unit does not receive the change to the setting information from the user the setting change UI unit after processing the setting information in such a way that the setting information cannot be modified on the UI displays the setting information.

The setting information receiving unit obtains the setting information from the setting management apparatus through the communication unit and transmits the setting information to the setting information management unit . Note that the setting information receiving unit is not always necessary however it becomes necessary in the case where the setting management apparatus distributes the setting information.

The information processing apparatus in concentrates its processes by concentrating functions commonly used by multiple applications plug ins to the platform . Note that the classification structure of the process block diagram in is just an example. It is not always necessary that the process block diagram be classified in layer structure as shown in .

Note that the process blocks of the setting management apparatus are omitted. The setting management apparatus puts the setting information for distribution in a predefined location so that the setting information for distribution can be located from the information processing apparatus through the network .

In the following the process details of the information processing apparatus according to the present embodiment will be described.

In step S the application management unit performs start up initialization for the application which is specified by the start up command. During the start up initialization the application management unit requests from the setting information management unit of the setting unit the setting information which is necessary for the start up of the specified application .

In step S the setting information management unit reads the setting information of the specified application from the memory unit . At this time the setting information management unit as will be described later obtains multiple items of setting information with different priorities. The setting information management unit among the setting values included in the multiple items of the setting information with different priorities upon adopting the setting values included in the setting information with the higher priority as effective setting values creates the setting information which will be transmitted to the application .

Note that the detailed process in which the setting information to be transmitted to the application in step S will be described later. the setting information management unit transmits the created setting information to the application management unit .

In step S the application management unit starts the application while transmitting to the application the setting information obtained from the setting information management unit . In step S the started application reads the transmitted setting information and starts operations according to the setting information.

Note that the setting information can be any information as long as it determines the operation of the application . Examples of the setting value are a setting value of print properties color monochrome single face double face etc. enabling disabling a plug in source locations of setting files etc.

Here operations in step S of will be further described in detail. For example as shown in the setting information for each of the applications is stored in the memory unit which is divided according to the priorities. The setting information is stored in the form of a file. The setting information of an application with a certain priority forms one setting file. is a drawing illustrating a configuration example of the setting information stored in the memory unit .

In the setting information of the application A is shown as a setting file of the application A. Also in the setting information of the application B is shown as a setting file of the application B.

The setting files of multiple applications are grouped according to priority and stored in the folder directory of the priority. shows an example in which the setting files of the application A and the setting files of the application B are grouped according to priority and stored in the folders of priority A B and C.

Note that the location relationship among the folders of different priorities is not specifically specified. They may be randomly located or may be located under a specific parent folder parent directory .

In a setting file of an application setting information which is necessary for the application is stored. In the case where setting files of different priorities exist it is not necessary for all setting files to include all setting values as long as each of the setting values exists in at least one setting file. Note that in the case where the application can operate without a certain setting value it is an acceptable situation that the setting value does not exist in any of the setting files.

In the case where there are setting files shown in and the priorities of the setting files are defined in advance as Priority A Priority B Priority C the setting information management unit creates the setting information including the setting values as shown in because the setting information management unit adopts the setting information with the higher priority as effective setting information. is a drawing illustrating the contents of the created setting file.

In other words as shown in the setting information management unit adopts the setting values which exist in the setting file of Priority A as effective setting values. Then the setting information management unit adopts the setting values which exist in the setting file of Priority B and does not exist in the setting file of priority A. And then finally the setting information management unit adopts the setting values which exist in the setting file of Priority C and does not exist in the setting files of priority A and B.

For example even when a setting value exists in the setting file of Priority B or C if the setting value exists in the setting file of Priority A then the setting information management unit adopts the setting value which exists in the setting file of Priority A. Also even when a setting value exists in the setting file of Priority C if the setting value exists in the setting file of Priority B then the setting information management unit adopts the setting value which exists in the setting file of Priority B.

For example in an example shown in because the setting value of setting 1 exists in all of setting files shown in the setting value 100 included in the setting file of the highest priority A is adopted.

In and an example is shown in which there are three priorities Priority A through Priority C. Note that the number of priorities can be any number. For example in the case where there are three priorities Priority A through Priority C as shown in it can be assumed that the setting file of Priority A is set by an administrator of an office the setting file of Priority B is set by a user of the application and the setting file of Priority C is set as an initial setting.

In the case of this kind of priority usage the setting value set by the administrator of the office is adopted as the highest priority setting. In the case where the setting value set by the administrator of the office does not exist the setting value of the user of the application is adopted. In the case where neither the setting value set by the administrator of the office nor the setting value set by the user of the application exist the initial setting value is adopted.

In step S the user specifies an application which performs the setting information change by using for example the input unit and commands the setting change UI unit to start. In step S the application management unit starts the setting change UI unit commanded by the user to start. The setting change UI unit requests the setting information management unit for the setting information of the specified application .

In step S the setting information management unit obtains the setting information of the specified application from the memory unit and transmits it to the setting change UI unit . In step S the setting change UI unit displays a setting change screen which will be described later based on the setting information transmitted by the setting information management unit on for example the display unit .

The setting change UI unit has information of the priorities for example Priority B with which the user can change. The setting change UI unit displays the setting change screen in such a way that the user cannot change the setting values set with a priority for example Priority A higher than the priorities with which the user can change the setting value.

In step S the user inputs the setting information change in the setting change screen from for example the input unit . In step S the setting change UI unit receives the setting information change from the user and transmits the setting information change to the setting information management unit . In step S the setting information management unit updates the setting information of the memory unit with the setting information change received from the setting change UI unit .

Note that the obtaining of the setting information in step S is the same as in the start up process of the application . But the setting information transmitted to the setting change UI unit is different from and looks something like .

Also the setting change screen which the setting change UI unit displays in step S looks like for example . is a drawing illustrating an image of the setting change screen. In the setting change screen of it is assumed that the priority with which the user can change the setting value is Priority B.

The setting change screen does not allow the setting value changes of setting 1 setting 3 and setting 4 whose setting values are set by the setting file of Priority A. Note that the setting change screen shows by displaying characters in grey color that the setting values of setting 1 setting 3 and setting 4 whose setting values are set by the setting file of Priority A cannot be changed. The setting change screen may show that the setting value cannot be changed by indication methods other than displaying characters in grey color.

Also in the case where the setting value of setting 5 is changed to 3 in the setting change screen of in step S the setting value of setting 5 is changed added in the setting file of Priority B. In other words the contents of the setting file of Priority B of become as shown in . Note that the contents of the setting file of Priority A of and the contents of the setting file of Priority C of do not change.

In step S the application management unit instructs the setting information management unit of the setting unit to obtain the setting information from the setting management apparatus at a predefined interval or at the time of start up of the application .

In step S the setting information management unit requests the setting information receiving unit to obtain the setting information from the setting management apparatus . In step S the setting information receiving unit accesses a predefined storage location of the setting management apparatus searches for and obtains the setting information. The setting information receiving unit transmits the setting information obtained from the setting management apparatus to the setting information management unit . In step S the setting information management unit receives the setting information from the setting information receiving unit and updates the setting information stored in the memory unit .

Note that in the setting management apparatus the setting information is stored the same way as is stored by the information processing apparatus as shown in . is a drawing illustrating a configuration example of the setting information stored in the setting management apparatus . The setting information is for example created by the administrator of the office and is stored in the setting management apparatus as shown in . Note that the storage format can be any format and the storage location can be any location as long as the information processing apparatus is informed of the format and the location.

In the case where the setting information is stored in the setting management apparatus in the same form as it is stored in the information processing apparatus the setting information management unit updates the setting information by overwriting the setting information stored in the memory unit with the setting information stored in the setting management apparatus . Therefore in the case where setting information doesn t exist in the setting management apparatus the setting information of the information processing apparatus is not overwritten.

For example in an example of there is no setting file of Priority B of the application B in the setting management apparatus . Therefore in an example where the setting information stored in the memory unit of the information processing apparatus is as shown in the setting file of Priority B of the application B is not overwritten.

In the flowchart of an example is shown in which the setting management apparatus is accessed by the information processing apparatus for obtaining the setting information but the setting information may be distributed from the setting management apparatus to the information processing apparatus . In other words any method may be used as long as the setting information in the memory unit of the information processing apparatus is updated by the setting information of the setting management apparatus .

Although it is not shown in the figures of the present embodiment a function may be provided in which when the setting information is updated the information processing apparatus reports the same to the user by displaying the updated information on the display unit .

Also the setting information stored in the memory unit may be prevented from being illegally changed by applying encryption or obfuscation. Regarding the range of the obfuscation of the setting information for example the obfuscation may be applied to only the setting information with high priority or to all of the setting information. Note that in order to prevent the setting file itself from being deleted the folder in which the high priority setting file of the setting information is stored may be caused to be difficult to be found or a mechanism may be implemented in which the application will not start when the high priority setting information is deleted.

In the present embodiment both user convenience and administrative management are achieved by in the information processing apparatus which starts the application allowing the user and the administrator to be able to set independently and with different priorities the setting values which determine the operation of the application .

In this way according to the present embodiment by causing the priority of the administrator to be higher than the priority of the user the administrator is able to control the specific process contents of the application of the information processing apparatus as desired. Also because the user can freely change the setting values which are not set by the administrator inconvenience is minimized for the user.

The present invention is not limited to the above embodiments and various variations and modifications may be made without departing from the scope of the present invention. Note that the program management unit in the claims corresponds to the application management unit . the setting change receiving unit corresponds to the setting change UI unit . The setting information obtaining unit corresponds to the setting information receiving unit . the setting information storage apparatus corresponds to the setting management apparatus .

The present invention can be implemented in any convenient form for example using dedicated hardware or a mixture of dedicated hardware and software. The present invention may be implemented as computer software implemented by one or more networked information processing apparatuses. The network can comprise any conventional terrestrial or wireless communications network such as the Internet. The information processing apparatuses can compromise any suitably programmed apparatuses such as a general purpose computer personal digital assistant mobile telephone such as a WAP or 3G compliant phone and so on. Since the present invention can be implemented as software each and every aspect of the present invention thus encompasses computer software implementable on a programmable device. The computer software can be provided to the programmable device using any storage medium for storing processor readable code such as a floppy disk hard disk CD ROM magnetic tape device or solid state memory device. The hardware platform includes any desired kind of hardware resources including for example a central processing unit CPU a random access memory RAM and a hard disk drive HDD . The CPU may be implemented by any desired type of any desired number of processors. The RAM may be implemented by any desired kind of volatile or non volatile memory. The HDD may be implemented by any desired kind of non volatile memory capable of storing a large amount of data. The hardware resources may additionally include an input device an output device or a network device depending on the type of the apparatus. Alternatively the HDD may be provided outside of the apparatus as long as the HDD is accessible. In this example the CPU such as a cache memory of the CPU and the RAM may function as a physical memory of a primary memory of the apparatus while the HDD may function as a secondary memory of the apparatus.

The present application is based on and claims the benefit of priority of Japanese Priority Application No. 2012 285039 filed on Dec. 27 2012 with the Japanese Patent Office the entire contents of which are hereby incorporated by reference.

