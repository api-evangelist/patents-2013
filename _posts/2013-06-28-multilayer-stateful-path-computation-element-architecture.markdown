---

title: Multi-layer stateful path computation element architecture
abstract: In one embodiment, a stateful computing entity in a computer network determines underlying network information (physical and/or optical) for the computer network, and also determines topologies (Internet Protocol (IP) and/or Multiprotocol Label Switching (MPLS)) for the computer network and associated resource information. Further, the stateful computing entity determines label switched path (LSP) state information for the computer network. The stateful computing entity may then build network state knowledge by aggregating the underlying network information, the topologies and associated resource information, and the LSP state information, and establishes communication within a dynamic network of other stateful computing entities sharing network state knowledge for parallel computation performance. Accordingly, the stateful computing entity may perform network computation based on the network state knowledge.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09178796&OS=09178796&RS=09178796
owner: Cisco Technology, Inc.
number: 09178796
owner_city: San Jose
owner_country: US
publication_date: 20130628
---
The present disclosure relates generally to computer networks and more particularly to path computation elements PCEs .

Software defined networking SDN builds computer networking equipment and software that separates and abstracts elements of these systems e.g. the control plane and the data plane to allow network administrators to manage network services more easily through abstraction of lower level functionality into virtual services. This replaces having to manually configure hardware an important feature for network virtualization. In an SDN architecture however there is currently no complete view of the network infrastructure from physical optical layers to application layers and no efficient multi layer computation.

According to one or more embodiments of the disclosure a stateful computing entity in a computer network determines underlying network information physical and or optical for the computer network and also determines topologies Internet Protocol IP and or Multiprotocol Label Switching MPLS for the computer network and associated resource information. Further the stateful computing entity determines label switched path LSP state information for the computer network. The stateful computing entity may then build network state knowledge by aggregating the underlying network information the topologies and associated resource information and the LSP state information and establishes communication within a dynamic network of other stateful computing entities sharing network state knowledge for parallel computation performance. Accordingly the stateful computing entity may perform network computation based on the network state knowledge.

A computer network is a geographically distributed collection of nodes interconnected by communication links and segments for transporting data between end nodes such as personal computers and workstations or other devices such as sensors etc. Many types of networks are available ranging from local area networks LANs to wide area networks WANs . LANs typically connect the nodes over dedicated private communications links located in the same general physical location such as a building or campus. WANs on the other hand typically connect geographically dispersed nodes over long distance communications links such as common carrier telephone lines optical lightpaths synchronous optical networks SONET synchronous digital hierarchy SDH links and others.

Since management of interconnected computer networks can prove burdensome smaller groups of computer networks may be maintained as routing domains or autonomous systems. The networks within an autonomous system AS are typically coupled together by conventional intradomain routers configured to execute intradomain routing protocols and are generally subject to a common authority. To improve routing scalability a service provider e.g. an ISP may divide an AS into multiple areas or levels. It may be desirable however to increase the number of nodes capable of exchanging data in this case interdomain routers executing interdomain routing protocols are used to interconnect nodes of the various ASes. Moreover it may be desirable to interconnect various ASes that operate under different administrative domains. As used herein an AS area or level is generally referred to as a domain and a router used to interconnect multiple domains is generally referred to as a border router or BR. In the case of areas rather than ASes since the routers are under a common authority a single router may in fact serve as an exit border router of one area and an entry border router of another area.

Alternatively or in addition is a schematic block diagram of an exemplary computer network comprising areas A A and A each having at least one intradomain router A B and C respectively. In particular A and A share border routers ABR and ABR while A and A share ABR and ABR. As used herein an area is a collection of routers that share full network topology information with each other but not necessarily with routers outside the area. The term area as used herein also encompasses the term level which has a similar meaning for networks based on their chosen routing protocol.

Data packets e.g. discrete frames or packets of data may be exchanged among the nodes devices of the computer network and generically using predefined network communication protocols such as the Transmission Control Protocol Internet Protocol TCP IP User Datagram Protocol UDP Asynchronous Transfer Mode ATM protocol Frame Relay protocol Internet Packet Exchange IPX protocol etc. In this context a protocol consists of a set of rules defining how the nodes interact with each other. For example in addition to user data routing information may be distributed among the routers within an AS e.g. between areas A A using pre determined interior gateway protocols IGPs such as conventional distance vector protocols or illustratively link state protocols through the use of link state advertisements LSAs or link state packets. Moreover data packets containing network routing information may be exchanged among the autonomous systems AS AS using external gateway protocols such as the Border Gateway Protocol BGP .

Those skilled in the art will understand that any number of nodes devices links etc. may be used in the computer network and that the view shown herein is for simplicity. Furthermore the techniques described below with reference to inter AS path computation may be used in the context of inter area path computation and under certain conditions the techniques described with reference to inter area path computation may be used for inter AS path computation.

The network interface s contain the mechanical electrical and signaling circuitry for communicating data over links coupled to the network . The network interfaces may be configured to transmit and or receive data using a variety of different communication protocols including inter alia TCP IP UDP ATM synchronous optical networks SONET wireless protocols Frame Relay Ethernet Fiber Distributed Data Interface FDDI etc. Notably a physical network interface may also be used to implement one or more virtual network interfaces such as for virtual private network VPN access known to those skilled in the art.

The memory comprises a plurality of storage locations that are addressable by the processor and the network interfaces for storing software programs and data structures associated with the embodiments described herein. The processor may comprise hardware elements or hardware logic adapted to execute the software programs and manipulate the data structures such as routing databases link state databases LSDBs Traffic Engineering databases TEDs and or tables. An operating system portions of which are typically resident in memory and executed by the processor functionally organizes the device by among other things invoking operations in support of software processes and or services executing on the device. These software processes and or services may comprise routing process services and an illustrative PCE PCC process as described herein. Note that while the processes are shown in centralized memory alternative embodiments provide for certain aspects of the techniques herein to be specifically operated within the network interfaces .

It will be apparent to those skilled in the art that other processor and memory types including various computer readable media may be used to store and execute program instructions pertaining to the techniques described herein. Also while the description illustrates various processes it is expressly contemplated that various processes may be embodied as modules configured to operate in accordance with the techniques herein e.g. according to the functionality of a similar process . Further while the processes have been shown separately those skilled in the art will appreciate that processes may be routines or modules within other processes.

Routing process services contains computer executable instructions executed by the processor to perform functions provided by one or more routing protocols such as the Interior Gateway Protocol IGP e.g. Open Shortest Path First OSPF and Intermediate System to Intermediate System IS IS as IGP services the Border Gateway Protocol BGP etc. as will be understood by those skilled in the art. These functions may be configured to manage routing and forwarding information databases tables data structures containing e.g. data used to make routing and forwarding decisions. Notably routing services may also perform functions related to virtual routing protocols such as maintaining virtual routing forwarding VRF instances illustratively a component of tables as will be understood by those skilled in the art.

Changes in the network topology within the local domain network may be communicated among nodes routers within the network using routing services for example IGP services such as the conventional OSPF and IS IS link state protocols. Suppose for example that a communication link fails or a cost value associated with a network node changes. Once the change in the network s state is detected by one of the routers that router may flood an IGP or BGP advertisement message packet communicating the change to the other routers in the network. In this manner each of the routers eventually converges to an identical view of the network topology.

Multi Protocol Label Switching MPLS is a known protocol in which a path for a source destination pair may be established along label switched routers LSRs and values required for forwarding a packet between adjacent LSRs in the path together with headers or labels are prepended to the packet. The labels are used to direct the packet to the correct interface and next hop router. The labels precede any IP or other headers allowing use of smaller outer headers for the packet. The path for the source destination pair termed a Label Switched Path LSP can be established according to various different approaches. One such approach is Label Distribution Protocol LDP in which each router in the path sends its label to neighbor routers according to its IP routing table. LDP labels are sent to the neighbor routers in a label mapping message which can include as one of its TLV Type Length Value fields a path vector specifying the LSP. For each LSP created a forwarding equivalent class FEC is associated with the path specifying which packets are mapped to the path. A Label Forwarding Information Base LFIB data structure stores the FEC the next hop information for the LSP and the label required by the next hop.

Also MPLS Traffic Engineering TE has been developed to meet data networking requirements such as guaranteed available bandwidth or fast reroute FRR . MPLS TE exploits modern label switching techniques to build end to end tunnels based on a series of constraints through an IP MPLS network of LSRs. These tunnels are a type of label switched path LSP and thus are generally referred to as MPLS TE LSPs.

Generally a tunnel is a logical structure that encapsulates a packet a header and data of one protocol inside a data field of another protocol packet with a new header. In this manner the encapsulated data may be transmitted through networks that it would otherwise not be capable of traversing or would otherwise traverse in a less efficient manner. More importantly a tunnel creates a transparent virtual network link between two network nodes that is generally unaffected by physical network links or devices i.e. the physical network links or devices merely forward the encapsulated packet based on the new header . While one example of a tunnel is an MPLS TE LSP other known tunneling methods include among others the Layer Two Tunnel Protocol L2TP the Point to Point Tunneling Protocol PPTP IP tunnels and generic routing encapsulation GRE tunnels.

In particular establishment of a tunnel e.g. TE LSP requires computation of a path between a head end node LSR to a tail end node signaling along the path e.g. through resource reservation protocol RSVP TE and modification of forwarding tables at intermediate nodes LSRs along the path. Optimally the computed path is the shortest path as measured in some metric cost length etc. that satisfies all relevant LSP Traffic Engineering constraints or attributes such as e.g. required bandwidth affinities administrative constraints to avoid or include certain links priority class type etc. In addition a number of techniques have been developed to allow for dynamic bandwidth adjustment of the signaled bandwidth using RSVP TE the allocation of dynamic preemptions so as to mitigate the probability of dead lock due to bin packing issues or bandwidth fragmentation distributed re optimization techniques to defragment bandwidth in the network distributed techniques for backup tunnel computation maximizing back up bandwidth usage according to the assumption of single link node SRLG resources bandwidth sharing between independent resources etc.

Occasionally a network element e.g. a node or link will fail causing redirection of the traffic that originally traversed the failed network element to other network elements that bypass the failure. Generally notice of this failure is relayed to the nodes in the network through an advertisement of the new network topology e.g. an IGP or BGP Advertisement and routing tables are updated to avoid the failure accordingly. Reconfiguring a network in response to a network element failure using e.g. pure IP rerouting can be time consuming. Many recovery techniques however are available to provide fast recovery and or network configuration in the event of a network element failure such as Fast Reroute e.g. MPLS TE Fast Reroute RFC4090 .

Fast Reroute FRR has been widely deployed to protect against network element failures where backup tunnels are created to bypass one or more protected network elements e.g. links shared risk link groups SRLGs and nodes . When the network element fails traffic is quickly diverted Fast Rerouted over a backup tunnel to bypass the failed element or more particularly in the case of MPLS a set of primary TE LSPs tunnels is quickly diverted. Specifically the point of local repair PLR node configured to reroute the traffic inserts pushes a new label for the backup tunnel and the traffic is diverted accordingly. Once the failed element is bypassed the backup tunnel label is removed popped by the last LSR along the backup path and the traffic is routed along the original path according to the next label e.g. that of the original TE LSP . Notably the backup tunnel in addition to bypassing the failed element along a protected primary TE LSP also intersects the primary TE LSP i.e. it begins and ends at nodes along the protected primary TE LSP.

As noted above tunnels have been used for a number of applications such as the support of virtual private networks VPNs or Traffic Engineering following source routed paths hop by hop. Among the number of tunneling techniques developed over the past decade MPLS TE has been widely deployed by service providers and large enterprise networks in order to optimize the network resource in light of specified traffic demand traffic engineering or in support of fast restoration of traffic in case of link and or node failures thanks to local protection techniques as MPLS TE Fast Reroute that rely on local reroute upon fast detection of a network element failure. MPLS TE LSPs for example were originally computed using distributed constrained shortest path first CSPF algorithms where each tunnel head end was responsible for the computation of the LSP path in the network using a constrained SPF e.g. Dijsktra according to the Traffic Engineering Database TED distributed by a link state routing protocol such as OSPF or IS IS.

A series of challenging problems arose that required the use of a new path computation model known as the Path Computation Element PCE model such as defined in RFC4655. The PCE model generally consists of relying on an external engine PCE responsible for the computation of tunnels in the network. Head ends or Path Computation Clients PCCs send requests to PCEs PCReq messages using the PCEP signaling protocol RFC5440 and receive computed paths thanks to replies PCRep messages . PCEs have been used mostly for back up tunnel path computation and inter domain Inter area AS path computations where per domain path computation was the only potentially very sub optimal technique available prior to the PCE.

In particular the PCE is an entity having the capability to compute paths between any nodes of which the PCE is aware in an AS or area domain . PCE process services contain computer executable instructions executed by processor to perform functions related to PCEs in general and in accordance with one or more embodiments described herein. PCEs are especially useful in that they are more cognizant of network traffic and path selection within their AS or area and thus may be used for more optimal path computation. A head end node LSR may further operate as a path computation client PCC configured to send a path computation request to the PCE and receive a response with the computed path which potentially takes into consideration other path computation requests from other PCCs. It is important to note that when one PCE sends a request to another PCE it acts as a PCC. PCEs conventionally have limited or no visibility outside of their surrounding area s level s or AS. A PCC can be informed of a PCE either by pre configuration by an administrator or by a PCE Discovery PCED message advertisement carried within a routing protocol message which is sent from the PCE within its area or level or across the entire AS to advertise its services.

Generally PCE functions are hosted on a BR between domains for inter domain path computation and there are typically at least two BRs so there is no single point of failure. For example ASBRs and ABRs tagged with an asterisk in may be configured as PCEs. Note that while illustratively PCE functions are generally hosted on a BR the techniques described herein are equally applicable to PCEs not hosted on a BR accordingly.

In PCE based networks deployed so far PCEs have been stateless LSPs were computed by the PCE according to the Traffic Engineering Database TED fed in most cases by the routing protocol ISIS or OSPF more recently potentially using BGP without requiring any state maintenance. Although the PCE architecture did refer to the potential use of stateful PCEs as a potentially more optimal model that would keep track of all LSPs states in the network when computing LSPs the model was seen to be quite complex in terms of signaling states maintenance etc. with a number of very challenging issues.

It became apparent that stateful PCE was the solution of choice for several applications such as inter layer optimizations or global optimization but only recently did the number of use cases grow significantly considering increased requirements for advanced optimization of bandwidth resources. To that end stateful PCEs have been implemented and a stateful PCE draft standard was adopted as the IETF Working Document mentioned above entitled PCEP Extensions for Stateful PCE which specifies several new PCEP messages allowing PCC to update the PCE on their LSP states PCRpt messages control LSP delegation ability for the PCE to remotely control an LSP and for the PCE to send LSP requests to PCC to learn states PCUpd messages . As defined in the above document a function can be initiated either from a PCC towards a PCE C E or from a PCE towards a PCC E C . The new functions are 

Stateful PCEs are slated to play a major role in future tunnel enabled network architectures. Though the use of stateful PCEs is intended to solve a wide range of problems they also bring a number of hard technical issues including but not limited to 

As noted above software defined networking SDN builds computer networking equipment and software that separates and abstracts elements of these systems e.g. the control plane and the data plane to allow network administrators to manage network services more easily through abstraction of lower level functionality into virtual services. This replaces having to manually configure hardware an important feature for network virtualization. In an SDN architecture however there is currently no complete view of the network infrastructure from physical optical layers to application layers and no efficient multi layer computation.

The techniques herein provide a multi layer multi encapsulation and stateful PCE architecture in order to address SDN requirements to allow operators to consistently and efficiently address such requirements in terms of network guidance traffic engineering demand engineering content and video routing multicast etc. In particular PCEs are extended to stateful and multi layer capabilities as described herein in order to deploy SDN technology within a service provider s infrastructure. Example use cases addressed by this architecture that are described in greater detail below comprise for example network guidance optical path computation IP MPLS Traffic Engineering etc.

Specifically according to one or more embodiments of the disclosure as described in detail below a stateful computing entity e.g. PCE in a computer network determines underlying physical and or optical network information for the computer network and also determines IP and or MPLS topologies for the computer network and associated resource information. Further the stateful computing entity determines LSP state information for the computer network. The stateful computing entity may then build network state knowledge by aggregating the underlying physical optical network information the IP MPLS topologies and associated resource information and the LSP state information and establishes communication within a dynamic network of other stateful computing entities sharing network state knowledge for parallel computation performance. Accordingly the stateful computing entity may perform network computation e.g. network guidance and or path computation based on the network state knowledge.

Illustratively the techniques described herein may be performed by hardware software and or firmware such as in accordance with the PCE PCC process which may contain computer executable instructions executed by the processor to perform PCE PCC functions relating to the techniques described herein depending upon whether the acting device is a PCE or a PCC e.g. in conjunction with routing process . For example the techniques herein may be treated as extensions to conventional protocols such as various PCE PCC protocols e.g. stateful PCE PCC protocols and as such may be processed by similar components understood in the art that execute those protocols accordingly. Notably in this instance a non PCE PCC device e.g. an LSR may also be configured to operate according to an illustrative PCE PCC process e.g. to perform the actions in conjunction with a PCE as described herein.

Operationally the stateful multilayer PCE ML PCE architecture extends the current PCE architecture by introducing multi layer capability. The new architecture consists of the following functions 

The overall architecture is illustrated below with reference to . In particular the techniques herein describe the overall architecture where the PCE server makes use of all the functions so to allow a Service Provider network to optimize path computation and signaling by combining information derived from different layers from physical optical to application .

Regarding information acquisition 1 mechanisms may be used by the ML PCE in order to acquire topology and state information from each layer the ML PCE operates in. For instance ML PCE acquires information from the IP MPLS layer using APIs such as IGP BGP routing protocols ISIS OSPF BGP as well as BGP LS which is an is extension of the BGP protocol that is used for carrying topology information details are available in an IETF Internet Draft entitled North Bound Distribution of Link State and TE Information using BGP .

The ML PCE is connected to the IP MPLS layer and receives the IP MPLS topology thanks to the above mentioned protocols. The use of BGP LS and according to deployment and operations guidelines when using BGP LS the ML PCE acquires the end to end topology visibility of the IP MPLS layer regardless of area boundaries . Moreover the ML PCE may even acquire multi AS topologies if BGP LS can be used in different ASes.

The stateful ML PCE also acquires information about existing LSP state in the network. The stateful extension to PCEP e.g. noted above allows the ML PCE to receive from each head end state information about established LSP tunnels. This is a major improvement for the ML PCE capabilities as it allows it to have a complete view of the network layer topology resources and LSP state. Tasks such as re optimization global or partial are thus made more efficient.

Note that ML PCE may also acquire part of the optical information through IGP TE metric extensions in the network layer such as those found in the IETF Internet Drafts entitled OSPF Traffic Engineering TE Metric Extensions and IS IS Traffic Engineering TE Metric Extensions .

The ML PCE also operates at the optical layer by collecting the optical topology by connecting to the GMPLS OSPF domain when used . Also BGP LS may be used in the optical layer by routers that will do the translation from GMPLS OSPF into BGP LS extensions for optical topology distribution.

Regarding computational algorithms 2 the PCE executes different algorithms for different services such as Network Guidance NPS ALTO Path Computation including multi encapsulation cross connect etc.

For Network Guidance ALTO the ML PCE server implements network guidance algorithms as implemented in NPS Proximity services e.g. available from Cisco Systems Inc. that locate applications services and content for service delivery in the network e.g. cloud as well as those described in commonly owned co pending US Patent Application Publication No. 2011 0258257 entitled Proximity aggregated network topology algorithm PANTA and also those from the ALTO IETF specification entitled ALTO Protocol . The algorithms are enhanced by integrating into the topology computation multilayer information consisting of a optical topology information when available including ISIS OSPF optical metric extensions subTLVs and b TE tunnels that have been reported to the Stateful PCE through PCEP extensions described in . Illustratively TE tunnels that are inserted in the topology are used for Network Guidance computation as direct links i.e. forwarding adjacencies in order to include them in all proximity computation rankings.

Path computation may generally comprise Optical path calculation PCALC TE PCALC IP PCALC and cross connect computations 

Regarding Inter PCE Communications 4 Various APIs may be used to allow for efficient inter PCE communication. For example a Distributed Stateful PCE Overlay DSPO architecture is defined in commonly owned co pending U.S. patent application Ser. No. 13 524 071 entitled Distributed Stateful Path Computation Element Overlay filed on Jun. 15 2012 by Previdi et al. which describes a set of protocols and mechanisms through which multiple PCEs can interoperate together and share the load of computations. In particular as described therein PCEs may maintain a locally owned tunnel state table and joins a distributed hash table DHT ring where the locally owned tunnel state table is shared with other devices of the DHT ring to establish a DHT owned tunnel state table. The PCEs determine ownership of link state advertisements LSAs for a specific portion of a traffic engineering database TED according to the DHT ring. As such when a PCE computes a path for a tunnel using a local TED the PCE may request permission to use resources along the computed path that were advertised in particular LSAs from owners of those particular LSAs when not owned by the PCE performing the computation.

According to the techniques herein various use cases may illustrate the functionality of the ML PCE architecture described herein. For instance in addition to a Traffic Engineering use case the following other new cases are addressed by the ML PCE architecture.

iOverlay consists of integrating the IP MPLS layer with the optical e.g. dense wavelength division multiplexing or DWDM layer. In summary the optical layer shares advertises optical path information to the router so that the router knows some of the optical characteristics of the link. From the router side when the router requests the path to the optical layer it may specify some of the optical characteristics such as SRLG disjoint path latency etc. Having the multi layer PCE as a central element between the network and optical layers allows the service provider to better leverage and distribute resources in each layer. The ML PCE is aware of the entire optical topology as well as the set of optical paths that have been signaled provisioned and can thus efficiently apply re optimization algorithms when required. Also it is more efficient to have a global view of each layer within a central component i.e. the ML PCE rather than having each component e.g. router switch reconfigurable optical add drop multiplexer ROADM etc. having to interoperate between layers.

The ML PCE acquires all of the information about state and topology of each layer of the infrastructure allowing the ML PCE to have a complete view of the service provider s network SDN . The service providers may thus leverage ML PCE knowledge of the network by integrating the ALTO NPS API so as to allow applications such as CDNs to query the ML PCE for network guidance. Note that the ML PCE can also integrate on its ranking algorithm computation the interoperation between layers.

With specific reference now to the architecture of a Multilayer Stateful PCE is defined in order to address the following use cases MPLS TE Optical iOverlay MPLS TE IP Generic Tunnels Service Chaining NPS ALTO etc. Additionally the different architectural components of the PCE such as APIs Databases Algorithms Layers etc. are also defined. Generally key terms are mentioned below however certain other terms objects that appear within will be understood by those skilled in the art as various processes data structures modules etc. and their illustrative inclusion and connectivity to other processes data structures modules etc. are not meant to limit the embodiments herein.

In addition illustrate an example multi layer PCE orchestration according to the techniques herein. In particular as shown in the services e.g. generic services data center cloud services etc. may connect via routers over a physical optical network for which the multi layer PCE oversees. In the ML PCE obtains the optical topologies which in may be used with IP MPLS tunnel information to create paths and further refine the optical topology based on such paths accordingly. Also as shown in service wires may be integrated by the ML PCE to further refine the IP MPLS tunnels and to manage the wires based on the tunnels and so on. illustrate another example of the service provider software defined network SP SDN with Multi Layer Optical overlay according to the techniques herein and provide an alternative view of and more details to as will be appreciated by those skilled in the art.

In step the stateful computation entity may build network state knowledge by aggregating the underlying physical optical network information the IP MPLS topologies and associated resource information and the LSP state information and in step also establishes communication within a dynamic network of other stateful computing entities sharing network state knowledge for parallel computation performance. Accordingly in step the stateful computation entity may perform network computation based on the network state knowledge. For example such network computation may be for network guidance computation and or path computation as described above. For instance network guidance computation may comprise ALTO computation and or NPS computation while path computation may comprise multi encapsulation cross connect computation optical path computation TE path calculation IP path calculation application routing computation etc. The procedure ends in step though notably with the option to dynamically update any information at any step and to perform further computations.

It should be noted that while certain steps within procedure may be optional as described above the steps shown in are merely examples for illustration and certain other steps may be included or excluded as desired. Further while a particular order of the steps is shown this ordering is merely illustrative and any suitable arrangement of the steps may be utilized without departing from the scope of the embodiments herein.

The techniques described herein therefore provide for a multi layer stateful PCE architecture in a computer network. In particular the techniques herein allow computing entities e.g. PCE servers to integrate different information sources in the network infrastructure so as to deliver optimal network services such as network guidance traffic and demand engineering as well as application video content routing. For instance the techniques herein provide a stateful PCE architecture that considers multi layer information from the physical layer up to the tunnels themselves all at once and in a shared manner to perform optimal computations.

While there have been shown and described illustrative embodiments that provide a multi layer stateful PCE architecture in a computer network it is to be understood that various other adaptations and modifications may be made within the spirit and scope of the embodiments herein. For example the embodiments have been shown and described herein with relation to various specific protocols such as MPLS GMPLS ALTO IGP BGP implementations etc. However the embodiments in their broader sense are not as limited and may in fact be used with any suitable protocol for the respective layers. Also while determining underlying physical optical network information has been generally described to comprise connecting to a GMPLS OSPF domain other embodiments such as ISIS SNMP etc. may also be possible in accordance with the techniques herein.

The foregoing description has been directed to specific embodiments. It will be apparent however that other variations and modifications may be made to the described embodiments with the attainment of some or all of their advantages. For instance it is expressly contemplated that the components and or elements described herein can be implemented as software being stored on a tangible non transitory computer readable medium e.g. disks CDs RAM EEPROM etc. having program instructions executing on a computer hardware firmware or a combination thereof. Accordingly this description is to be taken only by way of example and not to otherwise limit the scope of the embodiments herein. Therefore it is the object of the appended claims to cover all such variations and modifications as come within the true spirit and scope of the embodiments herein.

