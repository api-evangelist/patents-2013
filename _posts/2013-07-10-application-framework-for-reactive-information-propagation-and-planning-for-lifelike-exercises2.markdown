---

title: Application framework for reactive information propagation and planning for lifelike exercises
abstract: The present invention addresses the development of software applications for multiple domains and users. The application framework of the present invention includes a collection of mutually compatible software components, technologies and capabilities that can be assembled using object-oriented techniques to build custom software applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600242&OS=09600242&RS=09600242
owner: Concurrent Technologies Corporation
number: 09600242
owner_city: Johnstown
owner_country: US
publication_date: 20130710
---
This application is a continuation application of U.S. patent application Ser. No. 12 718 133 entitled Application Framework for Reactive Information Propagation and Planning for Lifelike Exercises filed on Mar. 05 2010 which application claims the benefit of U.S. Provisional Patent Application No. 61 158 096 entitled RIPPLE Application Framework filed on Mar. 06 2009 the entire disclosures of which are incorporated by reference herein.

This invention was made with Government support under W74V8H 04 D 0005 awarded by Army Contracting Agency ACA on behalf of the United States Marine Corp.s The Government has certain rights in the invention.

The present invention is directed toward an application framework which includes a collection of mutually compatible software components technologies and capabilities that can be assembled utilizing object oriented techniques to build custom software applications and more particularly custom software applications in multiple domains including but not limited to Command and Control C2 Combat Planning and Operations Situational Awareness Decision Support and Human Terrain Mapping. The value of the present invention is in automating task planning execution and conducting after action reviews AARs in full spectrum military operations and exercises spanning major combat operations e.g. in general war conditions irregular warfare e.g. in insurgency conditions peace operations and limited intervention e.g. during unstable peace conditions and peacetime military engagement e.g. during stable peace conditions .

The current state of the art in the pertinent technology including commercial Government and research software systems offers specialized solutions for addressing specific aspects of Command and Control C2 Exercise Planning and Operations Situational Awareness Decision Support or Human Terrain Mapping. For example 

Currently similar technologies do not address the breadth and depth of the effort required in planning executing and conducting after action reviews AARs of tasks in full spectrum military operations spanning Insurgency Operations Civil Military Affairs Information Operations and Capacity Building. In particular the technologies currently available have one or more of the following limitations 

The present invention provides one information framework that combines and links a variety of data related to tasks events timelines human terrain imagery maps social networks and more to enable automating task planning execution and conducting after action reviews AARs in full spectrum military operations and exercises spanning major combat operations e.g. in general war conditions irregular warfare e.g. in insurgency conditions peace operations and limited intervention e.g. during unstable peace conditions and peacetime military engagement e.g. during stable peace conditions . The present invention accomplishes this by using an event driven data architecture that is linked with and driven by events as they occur during a military operation or exercise. For instance local citizenry are linked to scenario events e.g. smuggling kidnapping IED attacks etc. locations e.g. home work etc. organizations e.g. business criminal social municipal insurgent etc. as well as other citizenry e.g. social network etc. . This enables changes to the data model to be automatically triggered by events and the changes to then be automatically propagated across the entire data model using links.

For example the stopping of a truck driver role player who is carrying fertilizer could result in the disruption of an IED thus making an event which in turn could prevent loss of life among local citizenry caused by the planned IED attack. This can further manifest at a macro level as a favorable change in the attitude of the local citizenry towards US forces. The present invention enables such complex social and demographic behavior to be modeled using an event driven linked data model and it supports capabilities for managing and visualizing this information using a variety of devices such as but not limited to flowcharts organization charts Gantt charts social network diagrams geographical information overlaid on maps and satellite imagery etc. to enhance Command and Control C2 Planning and Operations Situational Awareness and Decision Support.

The present invention also has tremendous potential in applications to non military operations involving for example civil disaster relief efforts pandemic tracking and control and law enforcement to name just a few. Sample scenarios have been developed for tracking of the H1N1 virus for the Centers for Disease Control and training for Mexican Police Officers for the U.S. Department of State.

The present invention addresses the development of software applications for multiple domains and users. The application framework of the present invention includes a collection of mutually compatible software components technologies and capabilities that can be assembled using object oriented techniques to build custom software applications in multiple domains including but not limited to Command and Control C2 Combat Planning and Operations Situational Awareness Decision Support and Human Terrain Mapping. The value of the present invention is in automating task planning execution and conducting after action reviews AARs in full spectrum military operations and exercises spanning major combat operations e.g. in general war conditions irregular warfare e.g. in insurgency conditions peace operations and limited intervention e.g. during unstable peace conditions and peacetime military engagement e.g. during stable peace conditions .

The multiple spectrum operations model of the present invention includes software components technologies and capabilities that are organized into layered modules which are applicable across a wide spectrum of operations in multiple domains. These include but are not limited to Command and Control C2 Combat Planning and Operations Situational Awareness Decision Support Human Terrain Mapping etc. To enhance the sophistication of the inventive application framework each of the layered modules operates in an integrated data mode. The integrated data mode operates such that as the data in the model changes the application framework components ensure that these changes ripple throughout the model and manifest in each module in predefined specific ways.

The plug in architecture feature of the present invention involves designing the application framework as a plug in architecture which enhances the flexibility of the application framework towards creating software applications for multiple domains and or users such as but not limited to those described above. Design of the application framework as a plug in architecture provides improved support for customization and extensibility of any system built using the application framework. Customization is generally accomplished by enabling select application framework components e.g. modules or sub modules which best suit the needs of the specific application being developed.

It is an object of the present invention to provide an application framework which includes various layered modules and or sub modules that can be assembled using object oriented techniques to build custom software applications.

It is a further object of the present invention to provide such an application framework as a plug in architecture.

Other objects aspects and advantages of the present invention can be obtained from a study of the specification the drawings and the appended claims.

The scenario and maneuvering module includes a set of modeling and simulation components for geospatial and visual planning design preparation execution monitoring tracking evaluation and analysis of multiple spectrum training and operational scenarios events and maneuvers. The census and demographics module includes various tools toolsets for organizing and analyzing people and their relationships to one another as well as organizations. The data management module includes components for generally managing the flow security access and exchange of data within and outside of the integrated data module . The integrated data model module is a collection of loosely coupled data structures accompanied by system logic which manages the ripple effect of changes in data across the application framework. The navigation and presentation module is an object oriented collection of utilities for displaying information from the integrated data model module in various views and providing a means for the user to easily navigate between those views.

The census and demographics module includes a genogram sub module a social network sub module an organizational chart sub module a cognitive modeling sub module and a demographics sub module . The genogram sub module is designed for family relationships and link analysis. The genogram sub module has the ability to create and maintain a family and their relationships including marriage and child relationships across multiple generations. The social network sub module is designed for social relationships and link analysis. The social network sub module has the ability to create and maintain social relationships such as but not limited to business social municipal religious criminal and terrorist relationships. These relationships may be displayed using various graphical layouts including but not limited to a circular layout a hypertree layout a table layout etc. The organizational chart sub module is designed for the organization of relationships and link analysis. The organizational chart sub module has the ability to associate people with various organizational types e.g. business social municipal religious criminal terrorist etc. and model each organizational structure e.g. superiors subordinates etc. . The cognitive modeling sub module is designed for cognitive attribute modeling and analysis. The cognitive modeling sub module has the ability to identify and record an individual s mental attributes such as attitudes e.g. pro US anti US neutral and then perform an analysis such as attitude propagation across a population demographic. Based on certain positive or negative events occurring to an individual or a group the cognitive modeling sub module will change their cognitive attributes. The inventive application framework will then ripple those changed effects on related people over their family and social relationships. The demographics sub module is designed for population characteristic analysis. The demographics sub module includes system logic which calculates the demographics for a selected population e.g. town attitudes in a specific geographical area and or at a specific time.

The data management module includes a workflow sub module an external system interface sub module a multimedia sub module and a custom user exports sub module . The workflow sub module is designed for the routing and approval of actions and work products. The workflow sub module and has the ability to ensure that the creation of work products are routed to reviewed by and approved by appropriate personnel before being finalized baselined and or published. The workflow sub module has the further ability to manage and track sequence driven events and or events that occur in parallel. Such managing and tracking is accomplished through features such as but not limited to workflow configuration security enforcement business role enforcement automatic execution of scheduled workflow events generation of notifications etc. The external system interface sub module is designed for communications with external systems. The external system interface sub module includes system logic that imports exports transforms and transports data allowing the inventive application framework to interact with external systems. The multimedia sub module is designed for managing multimedia content. The multimedia sub module has the ability to manage the association of multimedia data such as but not limited to pictures video clips sound bites and animation to application framework objects e.g. map elements thread events roles etc. . The custom user exports sub module is designed for exporting work product. The custom user exports sub module has the ability to create user defined templates for exporting data in various layouts to various formats such as but not limited to Microsoft PowerPoint Adobe PDF etc.

The integrated data model module includes an events sub module a manager classes sub module and a database sub module . The events sub module is designed for propagating data changes and other events through the application framework . The events sub module is the central decoupling mechanism used for data propagation through the various application framework components and interfaces. Data changes spawn events which can be received by any plug in manager class or interface as needed in order to present updated data information to the users and or attached applications. The manager classes sub module is the central interface to shared data and or functionality. The manger classes sub module is designed as a central interface to extended functionality. For example each panel in the application framework has a manager classes component which exposes the panel s functionality to the application. The manger classes component in each panel compliments events by providing scopes for event processing to occur and reducing event processing time. The database sub module is designed for persistent high capacity shared data storage. Common to application framework based applications is the need to store data and meta data. The key to extending the application framework database is adding new concepts. A concept is any data type and associated meta data that is managed by the application to meet the needs of the customized module or sub module. As a general rule any new concept should be designed to be compatible with previous concepts to enhance the overall functionality of the application framework.

The navigation and presentation module includes a panel presentation sub module a hyperlinking sub module and a real time updates sub module . The panel presentation sub module is designed for user interface customization. The panel presentation sub module is a utility that enables users to select which user interface panels to display and arrange the panels in a dockable frame to suit the user s particular data synchronization needs. An arrangement of panels can be saved by the user as a custom view allowing the user to switch views to perform different tasks. For example one view may contain a map and timeline for planning events while another view may contain a list of people and or roles and their associated genograms and social networking associations. The hyperlinking sub module is designed for data mining and linking. Associations between concepts occur often. For example a person or rule may be placed on a map assigned tasks at certain times in the Gantt chart sub module given family associations in the genogram sub module etc. When viewing any set of data for the person and or role certain data elements will refer to these associations. Users are able to use the hyperlinking sub module to activate hyperlinks from the associated data elements to change the focus of the application to the activated data element s . The real time updates sub module is designed for usability in team environments or for real time scenario analysis. The real time updates sub module allows changes to data in the application framework environment to ripple out through the application its plug ins and other connected applications as well as through multiple instances of the application operated by multiple users working on the same data sets.

The inventive application framework provides tools for creating a hierarchy of plug ins. Each plug in can extend to multiple extension points from the plug in s that it directly depends upon. However the application framework prevents two plug ins from depending upon each other i.e. a circular dependency since this would signify a tight coupling between sub modules and defeat the purpose of the inventive plug in architecture. The application framework is generally designed to support three main types of extension points.

 1 Data Extension Point A data extension point allows an extension to provide data only. For example the core application may need to acquire a list of directory names in which map files are located. Each customer may store map data in a different location or at several different locations. Therefore each customer can have a custom plug in which extends the appropriate data extension point and provides a list of data directories which are then gathered and used by the core application when needed.

 2 Method Extension Point All software developers are familiar with the basic pattern of abstraction provided by most programming languages whereby a programming task is given a name requires input and provides output. This structure is typically referred to as a function or method. The method extension point provides a means for an application developer to extend an extension point by implementing a method and registering that method with the application framework for that particular extension point. When the method extension point is utilized it receives input and can return a set of return values i.e. outputs one from each registered extension.

As an example the core application may create an empty View menu. The empty menu can then be passed as an input to a method extension point. A plug in that provides map functionality may register a method as an extension to that method extension point. Thus when the empty View menu is created it will be passed as an input to the plug in s method and the plug in can modify the menu by for example adding menu items to the empty menu such as View Map etc.

 3 Method Chain Extension Point Method chains are an application framework concept that supports the building of complex task chains. Each task in the chain is a well defined task that runs on a particular type of process thread. Method chain extension points as used in the application framework realize the following benefits 

Along with the above benefits from using method chain extension points in general method chain extensions have the added benefit of creating implicit extension points before and after every task. For example the core application may create an empty View menu. The empty menu can then be passed as an input to a method chain extension point. A plug in that provides map functionality may register a method chain task as an extension to that extension point allowing it to add items to the menu such as but not limited to View Map etc. If the View Map menu item needs to be added after for example a View Layouts menu item the developer can specify that the add View Map Menu Item task depends upon the add View Layouts Menu Item task.

For example provided below is the source code illustrating a sample plug in XML showing extension point and extension registration for an exemplary RPF in accordance with the present invention.

The distinct advantages offered by the inventive application framework s unique extension framework are complimented by the application framework s event based data management and propagation tools. Data management is performed through an object oriented data access layer and event ontology which provides but is not limited to the following features 

Application framework events provide a flexible mechanism for propagating data changes through the application framework itself. An event can be any object and listeners can choose to handle the event by listening for the object type directly or by listening for its parent type. For example a DataEvent event might have three subtypes such as ChangedDataEvent AddedDataEvent and DeletedDataEvent . A listener can listen for any of the three subtypes directly to receive only that subtype of event or if the listener needs notified of all of the events subtypes it can listen for the parent type e.g. DataEvent .

A special persistence task is included with the application framework and is responsible for various tasks. These include but are not limited to a capturing changes to persisted data b caching values that are updated for performance and rollback needs c queuing the transaction until a commit is signaled and d creating the undue transaction as needed by building a ready to run reverse transaction i.e. adds become deletes etc. .

While application framework events meet much of the decoupling needs of the application framework and allow data changes to propagate to many application framework components decoupling is also performed through the use of classes that have been termed managers . Manager classes are a focal point for application functionality and or features. There is often one or more managers per plug in with the managers providing the interface through which the application communicates to the plug in. One way in which a manager provides loose coupling is through the central storage of shared data. For example if multiple modules or sub modules need to access the same piece of data such as the logged in username the data would be stored in a manager to reduce memory footprint and improve application performance. The manager class would then be responsible for the implementation of listeners that receive notification of changes to the cached data.

Manager classes may also extend into parent classes provided by the core application in order to provide advanced functionality. For example a plug in may need to present a new panel for the user to display within the application. To do this the plug in would extend the base class for panels and implement all necessary methods to define the behavior of the panel. This manager class would then expose itself to the application framework as a manager and by its manager type allows the application framework to use it appropriately. Listeners implemented within the new manager class allow it to receive notification of changes to application data that the listener cares about and integrate those changes seamlessly into the application framework environment.

When a data change occurs the application framework begins a sequence of actions to both persist that change and propagate it as required. First at block an event is fired to notify the framework that a data change is occurring. Then a three step process begins which prepares a transaction to modify the data cache block persists the transaction to a relational database block and finalizes the change to the local data cache block . Once the data is persisted the transaction may be converted to an appropriate undo transaction at block . This transaction would thus enable the user to undo a change made through for example the GUI.

After the data is persisted the application framework must propagate the change through all of the attached modules and sub modules. This is done by initiating an event at block which explains the change to the attached extensions and listeners. These exist in the manager classes for plug ins block and external plug in interfaces block . It is then the responsibility of these customized front end modules to present the changes to the user or external interfaces as defined by the customer at block .

The inventive application framework includes at least one computer device having at least one memory and at least one processing unit operatively connected to the at least one memory. The various modules and sub modules may be stored on the at least one memory and are readable by the at least one processing unit. The at least one processing unit executes a program s tangibly embodied on a computer readable medium to perform the various functions of the inventive application framework and the modules and sub modules thereof. When embodied as a plug in architecture each module and or sub module may have its own at processing unit and at least one memory for supporting programmability and operational functionality.

While the present invention has been described herein with particular reference to the drawings it should be understood that various modifications could be made without departing from the spirit and scope of the present invention. Those skilled in the art will appreciate that various other modifications and alterations could be developed in light of the overall teachings of the disclosure. The presently preferred embodiments described herein are meant to be illustrative only and not limiting as to the scope of the invention which is to be given the full breadth of the appended claims and any and all equivalents thereof.

