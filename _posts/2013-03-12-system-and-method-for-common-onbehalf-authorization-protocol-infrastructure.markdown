---

title: System and method for common on-behalf authorization protocol infrastructure
abstract: A centralized authorization client, in a secure system, that references service provider specific on-behalf authorization protocol implementation records for generating access request messages for accessing user resources hosted by multiple service providers, is disclosed. The service provider-specific authorization implementation records include parameters for requesting user resources associated with a requesting user provided by a specific service provider. Applications running in the secure system can send access request messages through the authorization client to obtain authorization or access to user resources in multiple external service providers so the resources can be displayed, or otherwise manipulated, from application within the secure system. Once authorization is obtained for accessing the resources, the authorization client can store authorization tokens for use in persistent authorized access to multiple external service providers for resources owned by particular users.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09306922&OS=09306922&RS=09306922
owner: SAP SE
number: 09306922
owner_city: Walldorf
owner_country: DE
publication_date: 20130312
---
The present disclosure relates to computing systems for comprehensive information handling and in particular to systems and methods for a common on behalf authorization protocol infrastructure that can be used to authorize access to resources associated with individual users hosted or stored in external service providers.

Unless otherwise indicated herein the approaches described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

Various systems provide integrated data access and analysis solutions for various purposes such as running businesses and social networking. Typical systems use server applications executed on one or more servers that gather and distribute information over secure networks. Many of these systems provide users access to server data and services through the use of corresponding client applications executed on local client computers. While client server application configurations are very useful for displaying data directly available to the server applications it is often desirable to integrate and display information from service providers that are external to the network in which the server applications operate.

For example various customizable enterprise resource planning systems such as Business ByDesign from SAP include server applications for viewing analyzing and tracking data regarding various aspects of a particular business stored within a particular secure network. However a user may also wish to view data documents files and other resources stored or managed by an external service provider such as Google Documents from Google . To access and display data from external service providers some server applications use variants of available authorization protocols that can obtain authorization to access resources from the external service providers on behalf of particular users. So called on behalf authorization protocols provide an interface through which separate systems or networks can securely and reliably share resources owned or otherwise associated with individual users. Open Authorization OAuth is an example of an on behalf authorization protocol.

However because service providers have differing security and privacy concerns the specific variant of the on behalf authorization protocol used by a service provider is often unique to that service provider. Accordingly to gain access to user resources from multiple external service providers a server application would need to execute the authorization protocol specific to each external service provider.

Such service provider specific authorization protocols have some utility when integrating resources from a limited number of external service providers into a limited number of applications of a particular system. However existing on behalf authorization protocol interfaces have significant drawbacks and limitations in systems with many developers creating many applications that incorporate resources from multiple external service providers for many users. One particular drawback is that typical on behalf authorization protocols do not scale very easily or efficiently.

The specificity of each service provider s authorization protocol requires developers creating server applications to be familiar with the multiple authorization protocols and be able to code multiple compatible authorization routines. Since not all developers are familiar with all the authorization protocol variants creating an authorization procedure for each service provider can be arduous and inefficient. In addition executing and maintaining each of the service provider specific authorization protocols when scaled to the degree required to service the many users and server applications of a particular system can be an inefficient use of development and computing resources. Various embodiments of the present disclosure address these and other issues.

Embodiments of the present disclosure improve systems and methods for on behalf authorization protocol infrastructure implementations using a central authorization client.

One embodiment of the present disclosure includes a method that includes providing a central authorization client. The central authorization client can include or access multiple authorization implementation records. Each authorization implementation record corresponds to a particular implementation of an authorization protocol associated with one or more external service providers. Such methods also include receiving a data request message for data associated with a user and a particular external service provider from one or more applications. The data associated with the user and the external service provider can be hosted on a remote computer system operated by the external service provider. The method can also include retrieving an authorization token associated with the external service provider and the user from a secure data store using the authorization client referencing a particular authorization implementation record in the plurality of authorization implementation records associated with the particular external service provider to create a formatted data request based on the data request message and sending the formatted data request to the external service provider through the authorization client. In some embodiments the formatted data request includes the authorization token.

In one embodiment the formatted data request can include an encrypted version of the authorization token according to the particular authorization implementation record.

In one embodiment the method can further include receiving in response to the formatted data request the data associated with the user and the external service provider.

In one embodiment the method can further include providing the data associated with the user and the external service provider to the one or more applications wherein the one or more applications display the data associated with the user and the external service provider in an application specific user interface.

In one embodiment the authorization implementation record can include parameters for decoding the data associated with the user and the external service provider from a first format to a second format.

In one embodiment the authorization implementation record can include an open standard authorization protocol.

Other embodiments include non transitory computer readable storage media containing instructions that when executed control a computer processor to be configured for providing an authorization client including a plurality of authorization implementation records wherein each of the plurality of authorization implementation records corresponds to a particular implementation of an authorization protocol associated with at least one of a plurality of external service providers receiving a data request message from one or more applications coupled to the authorization client for data associated with a user and a first external service provider in the plurality of external services providers wherein the data associated with the user and the first external service provider is hosted on a remote computer system operated by the first external service provider retrieving an authorization token associated with the first external service provider and the user from a secure data store using the authorization client referencing a first authorization implementation record in the plurality of authorization implementation records associated with the first external service provider to create a formatted data request based on the data request message wherein the formatted data request comprises the authorization token and sending the formatted data request to the external service provider through the authorization client.

Other embodiments include systems that have one or more computer processors and a non transitory computer readable storage medium. In such embodiments the non transitory computer readable storage medium can include instructions that when executed control the one or more computer processors to be configured for providing an authorization client comprising a plurality of authorization implementation records wherein each of the plurality of authorization implementation records corresponds to a particular implementation of an authorization protocol associated with at least one of a plurality of external service providers receiving a data request message from one or more applications coupled to the authorization client for data associated with a user and a first external service provider in the plurality of external services providers wherein the data associated with the user and the first external service provider is hosted on a remote computer system operated by the first external service provider retrieving an authorization token associated with the first external service provider and the user from a secure data store using the authorization client referencing a first authorization implementation record in the plurality of authorization implementation records associated with the first external service provider to create a formatted data request based on the data request message wherein the formatted data request comprises the authorization token and sending the formatted data request to the external service provider through the authorization client.

The following detailed description and accompanying drawings provide a better understanding of the nature and advantages of the present disclosure.

Described herein are techniques for systems and methods for a centralized on behalf authorization protocol infrastructure implemented using an authorization client common to all applications and external service providers. In the following description for purposes of explanation numerous examples and specific details are set forth in order to provide a thorough understanding of the present disclosure. It will be evident however to one skilled in the art that the present disclosure as defined by the claims may include some or all of the features in these examples alone or in combination with other features described below and may further include modifications and equivalents of the features and concepts described herein.

Embodiments of the present disclosure include systems and methods for implementing an on behalf authorization protocol infrastructure OBAPI . The OBAPI can be implemented in a secure system such as an enterprise resource planning ERP system for authorizing access to and integration of resources from multiple external service providers into one or more server applications. In some embodiments the OBAPI can include a centralized authorization client. The authorization client can implement multiple authorization protocols for and communicate with multiple external service providers as an intermediary for the server applications. The authorization client can store authorization parameters corresponding to specific variants of the authorization protocols used by multiple external service providers. Using the authorization parameters the authorization client can execute authentication and communication procedures with each of the external service providers to access user resources.

The authorization client advantageously allow developers of server applications to access and integrate resources from multiple external service providers without needing to know the specifics of the particular variants of the authorization protocols implemented by the external services providers. Developers need only obtain the authorization parameters and provide the authorization parameters to the authorization client to quickly and efficiently establish authorized access to user resources. Accordingly development of server applications for secure systems can be expedited and computing resources can be conserved relative to conventional systems that require each server application to include or handle multiple individual authorization protocols for accessing resources from multiple external service providers.

Using controls provided by user interface the user can operate or interact with one or more applications . As shown a user using the end user browser sends an access request message to business system by operating one or more controls of the user interface . The access request message includes a request for one or more of the applications to retrieve user resources from one of the external service providers . For example a salesperson might request a sales application access retrieve and display social media broadcasts such as Twitter postings about their customers in user interface alongside or incorporated into information from the sales application.

In response to the access request message Applications invokes authorization client with an internal access request message. The authorization client can be exposed to each of the applications as an authorization application programming interface API . Accordingly the internal access request message may be compiled according to the requirements of the authorization API. The internal access request message can includes an external service provider identifier e.g. a service provider name or identification number indicating the target external service provider from which the user would like to retrieve user resources. In one example the internal access request message may also include a user identifier specific to the requesting user. In response to the internal access request message the authorization client can initiate an authorization procedure according to the specific authorization protocol implemented by the target external service provider.

Once the authorization procedure is initiated the authorization client may load authorization parameters associated with the target external service provider from the authorization parameters data store Auth. Param . The authorization parameters in the authorization parameters data store can be stored in authorization implementation records and associated with one or more external service provider identifiers. Accordingly when loading the authorization parameters the parameters can then be retrieved based on the target external service provider identifier.

Using the authorization parameters the authorization client can generate a formatted access request message and send it via network to the target service provider. In the particular example shown in the target service provider is service provider shown at . The format and structure of the access request message can be specific to the target external service provider according to the retrieved authorization parameters.

Network which can include various combinations of electronic communication networks e.g. the Internet can route the formatted access request message to be delivered to service provider . In response service provider at can generate a logon access initiation session viewable to the user as logon access grant user interface on the end user browser or in a separate web browser. The logon access grant user interface can display a prompt for the user to complete a particular logon procedure . The logon procedure can include one or more user authentication procedures. For example the user can enter logon credentials into the logon access grant user interface . The logon credentials can include combinations of usernames passwords personal identification numbers encryption keys etc. The logon access grant user interface can then forward the logon credentials in an encrypted or unencrypted format back to service provider .

Once the service provider confirms that the received logon credentials are authentic service provider can send an authorization token through network to the authorization client . The authorization client stores the received authorization token in the secure token data store . Tokens may be associated with the corresponding service provider and the authorized user. Accordingly each token is unique and can only be used to access user resources for a particular user from a particular service provider .

In one example embodiments the secured token data store can manage the storage of and updating of authorization tokens. For example some variants of on behalf authorization protocols include authorization tokens that expire after a predetermined number of uses or after a predetermined amount of time. For example the authorization token can be set to expire after one day or after ten resource transactions. In such embodiments the authorization tokens can include a refresh token or code which the authorization client or the secured token data store can send to the corresponding service provider to receive an updated authorization token. In this way access to the user s resources from the particular service providers can be persistent while also limiting the chance that the token will be intercepted and used for unauthorized access to the user s resources.

With the appropriate authorization tokens stored in the secured token data store applications can readily call on authorization client to access user resources associated with or owned by the corresponding users from one or more of the external service providers . Accordingly the authorization client can use the appropriate authorization token to access and display resources owned by a particular user from a particular service provider on user interface displayed on the end user browser e.g. from within the secure network environment of business system . The use of the authorization tokens eliminates the need to expose sensitive user logon credentials to network each time resources associated with the user are requested from one or more external service providers thus decreasing the possibility that the user s resources in the external service providers will be intercepted or otherwise compromised.

In one embodiment a user can send a request for the user s resources using user interface displayed on an end user browser on a local client computing system. The request for user s resources can include the user s user identifier and the service provider identifier. In some embodiments the request for the user s resources can be initiated using controls provided by an application displayed in the user interface . For example application can display a tab or an active button that when operated sends the request for the user s resources to the business system or application .

In response to the request for the user s resources one or more of the applications can send an internal access request message to the authorization client to access and or retrieve the user s resources from the external service provider specified by the service provider identifiers. The authorization client can retrieve one or more previously stored authorization tokens from the secure token data store based on the user identifier and service provider identifiers. The authorization client can also retrieve authorization parameters from the authorization parameter data store based on the service provider identifier.

Referencing the authorization parameters specific to the external service provider the authorization client can generate an request that includes the authorization token. Network can forward the request with authorization token to the specific external service provider . In this particular example service provider such as Google Docs is the selected external service provider. Service provider can verify the authenticity or check the expiration of the authorization token. If the authorization token included in the request is still valid and deemed to be authentic then service provider can send the requested user s resources through network which can route the user s resources to the authorization client . In some embodiments the user s resources or can be encrypted according to a predetermined encryption key. In some embodiments the encryption key can include the authorization token or a variation of the authorization token. Similarly the user s resources or can be encrypted using one or more of the authorization parameters stored in the authorization parameter data store . The authorization client can then decode or decrypt the received user s resources and provide the requested user s resources to the applications . In some embodiments the user s resources and application data can to be displayed by one or more applications in user interface via the end user browser .

The underlying open source or proprietary authorization protocol and all possible variants thereof can include time limited or expiring authorization tokens to further increase security in the communications between the business system and the external service providers over potentially unsecured network . However there may also be times when the user may wish to revoke the access grant to his or her resources. For example the user may decide that data he or she owns in a particular external service provider is no longer required or is not particularly helpful for their intended purposes or activities within the business system . In such scenarios the system and data flow illustrated in can be used to revoke the applications access to the user s resources from one or more service providers .

In some embodiments a user can use controls provided by user interface to send a user and service provider specific access revocation request to the business system . The access revocation requests can be forwarded to the authorization client . In response to the access revocation request the authorization client can delete the corresponding authorization token and authorization parameters from the secure token store and authorization parameter data store . In other embodiments the authorization client can send a formatted access revocation request based on the requirements of the corresponding authorization parameters. In the particular example shown the formatted access revocation request can be forwarded through network as a formatted access revocation request to the service provider .

In some embodiments the external service provider in response to the access revocation request can revoke access to the user s resources cancel all or some of the outstanding authorization tokens or send an access revocation confirmation message through network as access revocation confirmation message to the authorization client . Authorization client can send an update to applications to reset or re render controls for accessing the user s resources in user interface . For example the previously enabled controls for viewing user s resources associated with the user can be grayed out. 

In some embodiments service provider or any of the other service providers can require that the user who requested revocation navigate to a separate logon access grant user interface to confirm the revocation in a access revocation confirmation session . In such embodiments service provider can send a revocation confirmation message to the user via logon access grant user interface . The revocation confirmation message can cause the logon access grant user interface to display a revocation confirmation message to the user in an end user browser . Revocation confirmation message can include a button or other controls that the user can operate to confirm the revocation request.

In one example embodiment a user can directly access the login access grant user interface without having to log on to the business system . In such embodiments a user can send a direct access revocation request to the login access grant user interface to initiate revocation request message to the service provider . The service provider can then revoke the access previously granted to the applications of business system to access the user s resources. Accordingly any subsequent request for the user s resources with or without a previously valid authorization token can be denied. The denial can be permanent such that the subsequent attempts to grant access to the user s resources originating with the authorization client can be locked out and or permanently denied.

While all the above examples described in reference to use a single user example embodiments of the present disclosure can also include providing access to user resources associated with each of multiple users of business system . In such embodiments the authorization client can store multiple authorization tokens and multiple authorization parameters for multiple users for any and all of the external service providers .

The application data requester can handle all calls for external data to the authorization client . As depicted in authorization client can include a number of constituent subcomponents or functions. For example authorization client can include an authorized self service subcomponent BO an administration context subcomponent and a service provider SP registration subcomponent . Each of these subcomponents can be coupled to and communicate with authorization standards client .

Authorization standards client as shown can include a number of subcomponents. For example the authorization standards client can include a remote connector through which all communication from applications can be received. The remote connector can forward communication messages from applications to the data processor within the core authorization client Core Auth. Client Implementation . In some embodiments the remote connector is exposed to the applications as an application programming interface API that only requires the name of the relevant external service provider and a user identifier associated for the user s resources to which the system is seeking access. Accordingly the moving the user s resource authorization and access functionality into the authorization client and out of the applications can reduce or eliminate the need for each individual developer of each individual application to determine and code instructions for accessing user s resources.

In one embodiment the core authorization client is a secure subcomponent that can directly accesses secure token data store in data store . In some embodiments only the core authorization client can access the secure token data store to prevent exposing the sensitive authorization tokens stored therein. In such embodiments when the data processor receives an access request from one or more applications to access user resources from an external service provider the data processor can parse out information from the access request identifying information for a particular external service providers and the requesting user. In response to the identifying information for the particular service provider and the requesting user the core authorization client can directly access secure token data store to determine if a previously stored authorization token for that particular pair has been previously stored. If a matching authorization token exists in the secure token data store the core authorization client can retrieve the token. The core authorization client can then generate a formatted resource access message that includes the retrieved authorization token according to corresponding service provider authorization parameters .

In some embodiments the data processor or the communication layer component can generate a formatted resource access message. In one example embodiment the communication layer component can send the formatted resource access message to the target service providers .

As shown the service providers can exist in a network external to the secure that includes the authorization client . For example all the components to the left of dividing line can be included in the secure system while all of the service providers the end user browser and the service provider user interface UI located to the right side of dividing line can be located in networks external to the secure system. In some embodiments dividing line can represent a firewall or an intermediate electronic communication medium such as the Internet. In some embodiments the communication layer component can communicate with applications using one or more secure communication protocols such as the secure hypertext transfer protocol HTTPS .

In some embodiments in response to a resource access request from application the core authorization client can determine that no previously stored authorization token exists in the secure token data store or that the relevant authorization token has expired. In such scenarios the core authorization client can use the user consent processor to process a new user resource access authorization. In such embodiments the user consent processor can in response to an identified user and an identified target service provider send a control message to the service provider context interface . The service provider context interface can identify the particular service provider and access one or more corresponding service provider authorization implementation SPAI records . Each of the SPAI records can include information regarding the specific variant of the authorization protocol used by the corresponding service provider . For example service provider shown at might use one variant of the open standard OAuth v2 authorization protocol while the service provider shown at uses another variant of OAuth v2. Accordingly the SPAI record 1 shown at would include information regarding the specifics of the variant of the OAuth V2 authorization protocol used by service provider . Similarly the SPAI record 2 shown at would include information regarding the different variant of the OAuth version 2 authorization protocol used by service provider shown at . Each of the SPAI records can access secure data store to retrieve relevant service provider authorization parameters.

Service provider context interface then loads in one or more of the SPAI records to include all of the relevant message structure or file format requirements into the user consent processor . User consent processor then generates a formatted user resource access message that can be sent to one or more service providers by the communication layer component over one or more external network communication media and protocols.

Similarly the service provider context interface also includes a number of functions . Such functions can include various get functions for retrieving consumer context Get consumer Context request context Get Request Context access context Get access Context refresh context Get refresh Context execution context Get execution Context or revocation context Get revocation Context . Each of the get functions can retrieve context information from one or more of the external SPAI records and send it to the core authorization client . The core authorization can user the context information to generate an appropriately formatted access request message that can be forwarded on to a corresponding service provider .

In action the authorization client can generate an appropriately formatted request message according to an authorization implementation record associated with the service provider identified in the received request. In some embodiments the authorization implementation record associated with the service provider can include a variation of an open standard or proprietary authorization protocol. For example the authorization implementation record can include a variant of the OAuth v2 authorization protocol. Accordingly the authorization implementation record associated can be available to the authorization client as a model definition of the particular variant of the authorization protocol used the service provider. Generating the request message according to the authorization implementation record associated with the service provider can include referencing the model definition. The authorization client can then send the formatted access request message to the service provider in action . Sending the formatted access request message can include encrypting the formatted access request message according to the model definition and sending the formatted access request message over one or more electronic communication media using one or more electronic communication protocols. In other embodiments the access request message can be encrypted using various open standard and proprietary encryption techniques.

In response to the formatted access request message the authorization client can receive a response message from the service provider in action . The response message can indicate whether access was granted. If the authorization is granted then the authorization client can also receive an authorization token from the service provider. In action the authorization client can store the authorization token in a secure data store for future reference when accessing the user s resources from service provider. Actions through can be repeated for as many as all of the users of a particular secure system. Each authorization token can be specific and unique to each user service provider pair.

In determination the authorization client can determine whether an access or authorization token exists for that particular requesting user and target service provider. If no corresponding authorization token exists then the authorization client can execute method to establish authorized access to the user resources in the identified service provider.

If the corresponding authorization token does exist the authorization client can generate an authorized resource access request by referencing an authorization implementation record model definition or associated authorization parameters associated with the target service provider in action . Generating the appropriate authorized resource access request can include generating a message having various delimiters formats headers parameters and content specific to the authorization protocols implemented by the service provider.

In action authorization client can incorporate the authorization token into the access request. In some embodiments incorporating the authorization token into the access request can include encrypting the access request using the authorization token. The authorization client can then send the encrypted or unencrypted access request to the target service provider via one or more electronic communication media using one or more electronic communication protocols in action . In response to the access request the authorization client can receive the requested user resources and forward them on to the requesting application in action .

Computer system may be coupled via the same or different information bus such as bus to a display such as a cathode ray tube CRT or liquid crystal display LCD for displaying information. An input device such as a keyboard and or mouse is coupled to a bus for communicating information and command selections from the user to processor . The combination of these components allows the user to communicate with the system.

Computer system also includes a network interface coupled with bus . Network interface may provide two way data communication between computer system and the local network . The network interface may be a digital subscriber line DSL or a modem to provide data communication connection over a telephone line for example. Another example of the network interface is a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links is also another example. In any such implementation network interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Computer system can send and receive information including messages or other interface actions through the network interface to an Intranet or the Internet . In the Internet example software components or services may reside on multiple different computer systems or servers across the network. Software components described above may be implemented on one or more servers. A server may transmit messages from one component through Internet local network and network interface to a component or container on computer system for example. Software components of a composite application may be implemented on the same system as other components or on a different machine than other software components. This process of sending and receiving information between software components or one or more containers may be applied to communication between computer system and any of the servers to in either direction. It may also be applied to communication between any two servers to .

The above description illustrates various embodiments of the present disclosure along with examples of how aspects of the present disclosure may be implemented. The above examples and embodiments should not be deemed to be the only embodiments and are presented to illustrate the flexibility and advantages of the present disclosure as defined by the following claims. Based on the above disclosure and the following claims other arrangements embodiments implementations and equivalents will be evident to those skilled in the art and may be employed without departing from the spirit and scope of the disclosure as defined by the claims.

