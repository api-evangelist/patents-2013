---

title: Enterprise graph search based on object and actor relationships
abstract: Systems, methods, and software are disclosed herein for implementing enterprise graph search. In at least one implementation, an enterprise search service receives a search request that includes a graph query directed to an enterprise graph. The graph is representative of various objects and actors associated with an enterprise, as well as which of the actors performed which of various actions with respect to each of the various objects. The service searches at least a portion of the enterprise graph to identify a subset of the objects that relate to the actors as defined by the graph query in terms of at least the actors and actions. A reply to the search request may include graph results indicative of the subset of the objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09542440&OS=09542440&RS=09542440
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09542440
owner_city: Redmond
owner_country: US
publication_date: 20131104
---
Aspects of the disclosure are related to computing hardware and software technology and in particular to enterprise graph search.

Graph search is rapidly becoming ubiquitous within a variety of different contexts. The basis for graph searching are graphs which are data structures that represent entities in terms of their connections to each other. The basic elements of a graph are nodes and edges. Nodes typically represent any kind of entity such as a person or object while edges represent the connections between them. A graph of a social network for instance may include nodes that represent all of the people in a group of people and edges that represent how they are connected to each other. Other fields in which graphs and graph analysis have proven very effective for organizing and searching information include transportation biology and economics.

In the social networking context users can perform graph searches to discover other people that might share their interests or to discover particular things about people already in their network. Examples include searching a social graph for a list of friends that like a particular entity such as a particular restaurant for any photos taken by a particular person or for any photos taken of a particular person. Such queries can be made even more powerful with the addition of Boolean operators. For instance a graph query directed to a social graph may ask for any people who like both one entity and another or for people who have visited a particular place and also like a particular entity.

In the foregoing examples the type of objects that are the subject of a graph search are limited to the types specified in the query itself and are known prior to commencing the search. Thus photos are the target of searches for photos of a particular person friends are the target of a search for friends that like a particular entity and so on.

In the context of enterprise search such search tools may be less than optimal due to the wide variety of objects with which people interact. In just one limited example a graph of a person s connections in an enterprise may represent a variety of object types such as documents presentations emails and invitations with which they may interact. In addition they may interact with the objects in many different ways such as by authoring editing and sharing documents or sending receiving and forwarding emails.

Provided herein are systems methods and software for facilitating enhanced enterprise graph search capabilities that allow an enterprise graph to be searched for different kinds of objects based on which actors performed which actions on the objects. In this manner users in an enterprise setting can find relevant objects with greater ease.

In at least one implementation an enterprise search service receives a search request that includes a graph query directed to an enterprise graph. The graph is representative of various objects and actors associated with an enterprise as well as which of the actors performed which of various actions with respect to each of the various objects. The service searches at least a portion of the enterprise graph to identify a subset of the objects that relate to the actors as defined by the graph query in terms of at least the actors and actions. A reply to the search request may include graph results indicative of the subset of the objects.

This Overview is provided to introduce a selection of concepts in a simplified form that are further described below in the Technical Disclosure. It should be understood that this Overview is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Implementations disclosed herein enable enhanced graph search in which objects may be identified from an enterprise graph based how they are connected to actors in terms of actions. In an enterprise setting a user may interact with many different services examples of which include email document and file management services contact managers instant messaging application and telecommunication services to name just a few. Numerous events are created each day by such interaction that involve a user or actor performing actions with respect to a variety of different kinds of objects such as documents spreadsheets emails and phone calls. The interactions can be captured in a searchable enterprise graph representative of what actions the actors took with respect to the objects.

The enterprise graph can be queried on the basis of which actors performed specific actions on any kind of objects. For example a user interfacing with an enterprise search service may form a query directed to an enterprise graph that asks for any objects acted upon by a specific actor in accordance with a specific action. The enterprise graph can be searched for objects that satisfy such a graph query expression. The qualifying objects or information indicative of them can be returned in response to the query. In some implementations the results of the graph search may be combined with or refined in view of results from other searches such as a full text search or another graph search.

In an implementation interactions with an enterprise may be monitored such that an enterprise graph can be built that describes actors in the enterprise and objects with respect to which the actors took various actions. The enterprise graph may describe for example which documents specific actors in the enterprise authored read edited modified or shared. Other examples include emails sent received or forwarded blog posts authored read or commented on meetings scheduled and attended and any other type of event that can be monitored in an enterprise and represented in a corresponding enterprise graph.

The enterprise graph can then be queried for documents emails blog posts or any other relevant objects acted upon in a specific way by a specific actor. For instance a query may ask for any objects authored by a particular person. Such queries may follow a syntax that describe relationships in terms of actor action object triplets. In some implementations an ACTOR operator may be employed to call a search function that examines an enterprise graph for all actions of an actor that satisfy a filter defined associated with the operator. The filter may name the actor and the action such that any related objects can be found. Boolean logic can be included to further narrow or filter search results. For example an enterprise graph may be queried for any objects authored by one person and modified by another. Any Boolean operated may be supported including AND OR and ANDNOT .

In some implementations graph search and full text search may be combined. In one example a set of objects may be maintained. A graph can be constructed of the set and its relationships with the specific person and other actors. At the same time a full text index can be constructed of the set. In some cases the graph and the full text index may be co located. Combined queries can be directed to the graph and the full text index such as asking for objects authored by one specific person and pertaining to a specific topic.

An enterprise graph in some scenarios has edges and nodes. The nodes may represent actors and objects while the edges represent connections between them. The edges may have various properties such as the type of action that the edge represents the target of the edge the source of the edge an email system or file storage system for example or an actor or object a date or time stamp a relative importance of the action and whether or not the action is private or public. Other edge properties in addition to or in place of those disclosed herein are possible.

Nodes may be identified in an enterprise graph by a node identifier ID . For example a person a document email or other object may have been assigned or can be assigned an identifier used to represent it in the enterprise graph. Other types of identifiers are possible and may be considered within the scope of the present disclosure. Edges can also be given weights to indicate their relative importance. This may be useful in the context of two edges of the same type to indicate the importance of one relative to the other.

In many scenarios the actors in an enterprise graph may be representative of enterprise users such as employees contractors or other works associated with the enterprise. The objects in the enterprise graph may be representative of various documents and other information objects with which the enterprise users interact. In such scenarios representative edges are created when the enterprise users for example perform various actions on the objects such as reading modifying and sharing documents.

However it may be appreciated that documents and other types of information items may also be considered actors in some situations. For instance one document may reference another an email may attach a document or a contact may describe contact information for a person. In these and other examples the documents may be considered actors. In addition a person may be considered an object when the person is the subject of an action taken by an information item.

Referring now to the drawings illustrates an enterprise graph while illustrates a method for searching the enterprise graph. illustrates a representative syntax and and illustrate various examples using the syntax. illustrates additional search examples while illustrates another method for performing enterprise graph search. illustrates a search environment in which enhanced enterprise search may be implemented while illustrates a representative computing system that may be used for various aspects of graph search.

Turning to enterprise graph is illustrated in an implementation. Enterprise graph includes nodes and edges and is representative of how various objects associated with an enterprise are related to various actors in the enterprise in terms of what actions the actors performed with respect to each of the objects. Enterprise graph can be queried in terms of actors and actions in order to identify objects relevant to a search.

In enterprise graph the objects are generally described in terms of documents and other information items while the actors are generally described in terms of people in an enterprise. This is merely for exemplary purposes and is not intended to limit the scope of the present disclosure. Rather it may be appreciated that documents and other information items may at times be actors while users may be considered objects.

Referring still to in this implementation nodes and are representative of objects in an enterprise while nodes and are representative of actors in the enterprise. Nodes and are connected to nodes and by way of edges and . For example node representative of an actor named Hannah is connected to node representative of an object named memo.doc which in this case is a document. Node is connected to node by edge and edge which represent that Hannah authored and read the document respectively. The actor Hannah also edited the object named draft.doc a document and read the object named costs.xls a spreadsheet as represented by edge and edge connecting node to node and node respectively.

Referring to node an actor named Adam is represented. The actor Adam edited the document represented by node and as indicated by edge connecting node to node . In addition the actor Adam authored and shared the spreadsheet represented by node and as indicated by edge and edge connecting node and node respectively.

In at least one scenario users engage with some aspects of the enterprise search service using their local computing systems such as smart phones tablet computers laptop computers desktop computers gaming machines Internet appliances virtual machines or any other type of computing machine combination of machines or variations thereof. The local computing systems may then communicate with a remote computing system or collection of computing systems in a data center or other suitable environment to engage other aspects of the service. Examples of such computing systems include server computers virtual servers or any other suitable computing system combinations of systems or variations thereof.

In operation the enterprise search service receives a graph query directed to enterprise graph step . The graph query may be an independent query or it may be part of another query. For instance a natural language query may be submitted that can then be parsed into a full text query and the graph query. Regardless the graph query requests that the enterprise search service return any objects relevant to a graph query expression included in the graph query. The graph query expression defines in terms of actors and actions which object in enterprise graph are relevant to the search. In other words the enterprise search service will return which ever objects in enterprise graph satisfy the graph query expression.

Next the enterprise search service searches enterprise graph to identify relevant objects based on the graph query expression step . Objects in the enterprise graph that are related to the actors by various actions specified in the graph query expression can be returned. Accordingly the enterprise search service replies to the graph query with graph results indicative of the qualifying objects step such as a list identifying the objects. It may be appreciated that the objects themselves could also be returned. Not all of objects discovered as a result of the search need be returned. Rather additional filters or other analysis may be applied such as a full text analysis to the graph results such that a subset of the results are returned. The graph results may also be combined with results from other searches such as another graph search of a different graph another graph search of enterprise graph or a full text search.

Example illustrates the use of an AND in a graph expression. In example a graph expression is provided that includes element that specifies the AND operator. Element specifies the ACTOR operator while element and element specify an actor name and an action name respectively. In addition Element specifies another element in the ACTOR operator while element and element specify another actor name and another action name respectively. Thus the graph query expression in example functions to perform a Boolean search of enterprise graph in which any object related to both actors by the action or actions specified in the expression are returned. Other Boolean operators are possible and may be considered within the scope of this disclosure.

In example a query is submitted with respect to enterprise graph that specifies the ACTOR operator and names Hannah as the actor and authored as the action. In other words the query expression seeks to return any objected authored by Hannah. Referring to enterprise graph in node corresponding to Hannah is connected to node by way of edge which defines the connection between node and node as one of authoring. Thus the document represented by node is returned which is representative of the document memo.doc.

With respect to example a query is submitted with respect to enterprise graph that specifies the AND operator which encompasses two instances of the ACTOR operator. In particular the graph query expression specifies that any object be returned that Hannah has read and that Adam has shared. Referring to enterprise graph in node corresponding to Hannah is connected to node by way of edge which defines the connection between node and node as one of the document represented by node having been read. However node is not connected to node and therefore does not satisfy the graph query expression.

Node is representative of an object read by Hannah as it is connected to node by edge which indicates the object as having been read. In addition node is the only node connected to node by an edge indicative of an object having been shared. Accordingly node corresponding to the costs.xls object is returned.

Example illustrates an OR operation. In example a query is submitted with a graph query expression that specifies the OR operator which encompasses two instances of the ACTOR operator. The graph query expression specifies that any object be returned that Hannah has authored or that Adam has authored. Referring to enterprise graph in node corresponding to Hannah is connected to node by way of edge which defines the connection between node and node as one of the document represented by node having been authored. In addition edge connects node to node and indicates the object represented by node as having been authored. Accordingly two objects are returned one corresponding to node memo.doc and another corresponding to node costs.xls. 

A nested OR operation is illustrated in example . In example the graph query expression an initial OR operator that encompasses two ACTOR operators. However one of the ACTOR operators itself encompasses an OR operator. Thus the graph query expression in example functions to specify any qualifying object in enterprise graph as one that edited or authored by Hannah or one that is authored by Adam. As such three objects are returned memo.doc draft.doc and costs.xls. This is because node is connected to node by edge representative of an object having been authored by Hannah. Node is connected to node by edge representative of an object having been edited by Hannah. Lastly node is connected to node by edge representative of an object having been authored by Adam.

The following are several example queries to demonstrate some search capabilities contemplated herein. The following examples related to an actor having an actor ID of 1234. A call to a search engine in the form of ACTOR 1234 returns any objects associated with the actor. A call in the form of ACTOR 1234 action read returns any objects read by the actor. A call in the form of ACTOR 1234 action OR authored modified returns any objects the actor has authored or modified. A query in the form of ACTOR 1234 AND action modified time RANGE 2012 01 23 max from GT returns any objects modified in the last day. A query in the form of ACTOR 1234 OR AND action modified time RANGE 2012 01 23 max from GT action author returns any object modified in the last day or written at any time. A query in the form of AND ACTOR 1234 ACTOR 5678 returns documents associated with both one actor and another represented by the ID 5678. A query in the form of AND ACTOR 1234 action author ACTOR 5678 action read returns objects authored by one actor represented by the ID 1234 and read by another represented by the ID 5678.

In example another hybrid search is presented from which a graph search is performed and a full text search is performed. In this example the search request includes a graph query expression that defines any qualifying objects as those that Hannah has read. However the search request also includes text criteria specifying that any qualifying object is to have the word Seattle included within it. Per Hannah has read two documents that memo.doc document represented by node and the costs.xls document represented by node . For exemplary purposes it is assumed that only the memo document includes the word Seattle. Accordingly the search results include only that object.

The following two examples represent combined graph and full text queries. A call in the form of docType pdf ACTOR 1234 action read returns any presentation documents read by an actor associated with the identifier 1234. A call in the form of economics ACTOR 5678 action read returns any objects read by the actor pertaining to the topic of economics.

In example the query asks for any objects acted upon by actor . The results shown in include object and . It may be assumed for exemplary purposes that objects are a sub set of all of the objects represented in the enterprise graph.

In example the query is accentuated by limited the previous results to only those objects read or modified by actor . The resulting sub set of objects include only object object and object .

In example the presented scenario is slightly more complex in that a query is made for any object read by both actor and actor . All of the objects read by actor are returned including objects for exemplary purposes. All of the objects read by actor including objects and are also illustrated. However those illustrated with solid lines are intended to represent the results of the query whereas those illustrated with dashed lines are intended to represent the remainder of the set that do not satisfy the graph query expression. Thus only object object and object satisfy the request for any object read by both actor and .

In some cases the full text database or its index may be searched in parallel to the searching the graph. In other cases the full text search can be performed with respect to results of the graph search to further limit what was returned by the graph query. In any case the two types of search may be combined in some manner to produce combined or merged results step that can be returned in reply to the natural language query.

Privacy concerns may be addressed with respect to the implementations described above by limiting search results to only those objects to which a user has access. This can be accomplished in a variety of ways such as be examining a user s access rights and comparing them to properties of an object. The user may be limited from viewing the object but the object itself can be entirely removed from a set of search results.

Examples of computing systems and include but are not limited to desktop computers work stations laptop computers notebook computers tablet computers mobile phones personal digital assistances media devices gaming devices and any other physical or virtual computing machine or combinations and variations thereof. Computing systems and may be capable of implementing search interfaces and respectively. Search interfaces and may each be representative of any hardware software or combinations thereof capable of providing an interface to enterprise search service such that users can interact with computing systems and to perform enterprise searches.

Computing system may be any computing system or collection of computing systems capable of implementing an enterprise search service . Computing system may also be any computing system or collections of system capable of implementing any one or more of application services . Examples of computing system and computing system include server computers cloud computing platforms data centers and any physical or virtual computing machine as well as any variation or combination thereof.

Computing system is representative of any computing system suitable for implementing any of computing systems and all though the discussion below makes specific reference to computing system for purposes of clarity. In addition while enterprise search service is illustrated as implemented separately from a search interface or remotely from the devices with which a user may interact it may be appreciated that all or portions of enterprise search service may be implemented locally with respect to a user such as in a co located fashion on a device operated by a user such as computing systems and .

In operation computing systems and may communicate with computing system to perform enterprise searches. This may include communicating search requests to and receiving search replies from enterprise search service . Enterprise search service handles the search request in accordance with the various implementations described herein including searching an enterprise graph and returning relevant results.

In addition computing systems and may communicate from time to time with computing system in the context of providing users with access to application services such as productivity application services file storage services email services chat services blog services voice and video services or any other type of application service. However some of all of the application service may be implemented locally all or in part with respect to computing systems and . Within the context of these services events may occur that can be captured and from which an enterprise graph or graphs may be constructed. Enterprise search service may capture the events and construct the graph although in some implementations these tasks may be allocated to another service or services.

Communication between any of the elements contemplated in may occur in accordance with various communication protocols such as the Internet protocol IP IPv4 IPv6 etc. the transfer control protocol TCP and the user datagram protocol UDP as well as any other suitable communication protocol variation or combination thereof. Communication network may be representative of a network or collection of networks over which the elements contemplated in may exchange information such as an intranet the Internet a local area network a wide area network a wireless network a wired network a virtual network a software defined network or any combination or variation thereof. Communication network may include connections devices and communication media such as metal glass air or any other suitable communication media over which information may be exchanged. The aforementioned communication media networks connections protocols and devices are well known and need not be discussed at length here.

In any of the aforementioned examples in which information is exchanged the exchange of information may occur in accordance with any of a variety of protocols including FTP file transfer protocol HTTP hypertext transfer protocol REST representational state transfer Web Socket DOM Document Object Model HTML hypertext markup language CSS cascading style sheets HTML5 XML extensible markup language JavaScript JSON JavaScript Object Notation and AJAX Asynchronous JavaScript and XML as well as any other suitable protocol variation or combination thereof.

Referring now to computing system is representative of any computing system or collection of systems suitable for implementing all or portions of enterprise search service and method and optionally any of the other operational scenarios and examples described herein. Computing system may be implemented as a single apparatus system or device or may be implemented in a distributed manner as multiple apparatuses systems or devices.

Examples of computing system include server computers cloud computing platforms and data center equipment as well as any other type of physical or virtual server machine and any variation or combination thereof. While typically implemented in a server or collection of servers enterprise search service may also be implemented all or in part on desktop computers laptop computers tablet computers notebook computers mobile computing devices cell phones media devices and gaming devices as well as any other type of physical or virtual computing machine and any combination or variation thereof of which computing system is also representative.

Computing system includes but is not limited to processing system storage system software communication interface system and user interface system which is optional. Processing system is operatively coupled with storage system communication interface system and user interface system . Processing system loads and executes software from storage system . When executed by processing system software directs processing system to operate as described herein for method or its variations such as method or as described herein for any of the operational scenarios and examples disclosed herein. Computing system may optionally include additional devices or functionality not discussed for purposes of brevity.

Referring still to processing system may comprise a microprocessor and other circuitry that retrieves and executes software from storage system . Processing system may be implemented within a single processing device but may also be distributed across multiple processing devices or sub systems that cooperate in executing program instructions. Examples of processing system include general purpose central processing units application specific processors and logic devices as well as any other type of processing device combinations or variations thereof.

Storage system may comprise any computer readable storage media readable by processing system and capable of storing software . Storage system may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable program instructions data structures program modules or other data. Examples of storage media include random access memory read only memory magnetic disks optical disks flash memory virtual memory and non virtual memory magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other suitable storage media. In no case is the computer readable storage media a propagated signal.

In addition to computer readable storage media in some implementations storage system may also include computer readable communication media over which software may be communicated internally or externally. Storage system may be implemented as a single storage device but may also be implemented across multiple storage devices or sub systems co located or distributed relative to each other. Storage system may comprise additional elements such as a controller capable of communicating with processing system or possibly other systems.

Software may be implemented in program instructions and among other functions may when executed by processing system direct processing system to operate as described herein for method and its variations and optionally as described with respect to the various operational scenarios and examples disclosed herein. In particular the program instructions may include various components or modules that cooperate or otherwise interact to carry out method or method . The various components or modules may be embodied in compiled or interpreted instructions or in some other variation or combination of instructions. The various components or modules may be executed in a synchronous or asynchronous manner serially or in parallel in a single threaded environment or multi threaded or in accordance with any other suitable execution paradigm variation or combination thereof. Software may include additional processes programs or components such as operating system software or other application software. Software may also comprise firmware or some other form of machine readable processing instructions executable by processing system .

In general software may when loaded into processing system and executed transform a suitable apparatus system or device of which computing system is representative overall from a general purpose computing system into a special purpose computing system customized to facilitate enhanced enterprise search as described herein for each implementation. Indeed encoding software on storage system may transform the physical structure of storage system . The specific transformation of the physical structure may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the storage media of storage system and whether the computer storage media are characterized as primary or secondary storage as well as other factors.

For example if the computer readable storage media are implemented as semiconductor based memory software may transform the physical state of the semiconductor memory when the program instructions are encoded therein such as by transforming the state of transistors capacitors or other discrete circuit elements constituting the semiconductor memory. A similar transformation may occur with respect to magnetic or optical media. Other transformations of physical media are possible without departing from the scope of the present description with the foregoing examples provided only to facilitate this discussion.

It should be understood that computing system is generally intended to represent a computing system or systems on which software may be deployed and executed in order to implement method or method and optionally all or portions of the various operational scenarios and examples described herein. However computing system may also be suitable as any computing system on which software may be staged and from where software may be distributed transported downloaded or otherwise provided to yet another computing system for deployment and execution or yet additional distribution.

Communication interface system may include communication connections and devices that allow for communication with other computing systems not shown over a communication network or collection of networks not shown . Examples of connections and devices that together allow for inter system communication may include network interface cards antennas power amplifiers RF circuitry transceivers and other communication circuitry. The connections and devices may communicate over communication media to exchange communications with other computing systems or networks of systems such as metal glass air or any other suitable communication media. The aforementioned media connections and devices are well known and need not be discussed at length here.

Communication between computing system and any other computing system not shown may occur over a communication network or networks and in accordance with various communication protocols combinations of protocols or variations thereof. Examples of communication networks over which computing system may exchange information with other computing systems include intranets the Internet local area networks wide area networks wireless networks wired networks virtual networks software defined networks or any combination or variation thereof. The aforementioned communication networks and protocols are well known and need not be discussed at length here.

When applicable user interface system may include a keyboard a mouse a voice input device a touch input device for receiving a touch gesture from a user a motion input device for detecting non touch gestures and other motions by a user and other comparable input devices and associated processing elements capable of receiving user input from a user. Output devices such as a display speakers haptic devices and other types of output devices may also be included in user interface system . In some cases the input and output devices may be combined in a single device such as a display capable of displaying images and receiving touch gestures. The aforementioned user input and output devices are well known in the art and need not be discussed at length here.

User interface system may also include associated user interface software executable by processing system in support of the various user input and output devices discussed above. Separately or in conjunction with each other and other hardware and software elements the user interface software and user interface devices may support a graphical user interface a natural user interface or any other type of user interface. For example a search interface to an enterprise search service may be presented through user interface system .

It may appreciated from the foregoing embodiment that an enterprise search service can be used to query an enterprise graph on the basis of actor action object relationships. Operating the enterprise search service may include receiving a search request that includes a graph query directed to an enterprise graph representative of objects associated with an enterprise and actors associated with the enterprise. The enterprise graph may also be representative of which of the actors performed which of a various actions with respect to each of the objects. At least a portion of the enterprise graph may be searched to identify a subset of the objects that relate to the actors as defined by the graph query in terms of at least the actors and the actions. The enterprise search service may then reply to the graph query with graph results indicative of the subset of objects.

In some implementations the objects include documents and emails and the actions include composing reading modifying sending receiving and forwarding the objects. The graph query may include a graph query expression that defines the subset of objects as any of the objects acted upon by at least one actor in accordance with at least one action. The enterprise graph may include nodes corresponding to the nodes corresponding to the actors and edges corresponding to the actions. Each of the edges may connect at least one of the objects to at least one of the actors. The graph query expression may specify at least one actor and at least the one action.

Searching the enterprise graph to identify the subset of objects that relate to the actors as defined by the graph query may include determining which subset of the nodes associated with the objects are connected to any of the nodes corresponding to the one actor by any of the edges corresponding to at least the one action.

The enterprise search service may also capture events occurring in the enterprise deriving event information from the events representative of the objects the actors and the actions. The service can generate the enterprise graph based at least in part on the event information.

In some implementations a search request includes a full text query directed to a full text database that includes at least some of the objects. Operating the service may also include searching at least a portion of the full text database to identify an additional subset of objects based at least in part on the full text query. The service may reply to the full text query with full text results indicative of the additional subset of objects. A reply to the search request may include at least a portion of graph search results and a portion of full text search results. The search request in some scenarios may be a natural language query in which case the graph query may be derived from at least a portion of the natural language query and the full text query may be derived from another portion.

The enterprise search service may include a search interface to the service through which a user may enter a search request which in some cases may be a natural language query. In such scenarios the natural language query is translated into at least a full text query and a graph query or graph query expression.

The functional block diagrams operational scenarios and sequences and flow diagrams provided in the Figures are representative of exemplary systems environments and methodologies for performing novel aspects of the disclosure. While for purposes of simplicity of explanation methods included herein may be in the form of a functional diagram operational scenario or sequence or flow diagram and may be described as a series of acts it is to be understood and appreciated that the methods are not limited by the order of acts as some acts may in accordance therewith occur in a different order and or concurrently with other acts from that shown and described herein. For example those skilled in the art will understand and appreciate that a method could alternatively be represented as a series of interrelated states or events such as in a state diagram. Moreover not all acts illustrated in a methodology may be required for a novel implementation.

The included descriptions and figures depict specific implementations to teach those skilled in the art how to make and use the best option. For the purpose of teaching inventive principles some conventional aspects have been simplified or omitted. Those skilled in the art will appreciate variations from these implementations that fall within the scope of the invention. Those skilled in the art will also appreciate that the features described above can be combined in various ways to form multiple implementations. As a result the invention is not limited to the specific implementations described above but only by the claims and their equivalents.

