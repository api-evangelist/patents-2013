---

title: Cloud computing nodes for aggregating cloud computing resources from multiple sources
abstract: A disclosed example method to aggregate resources in a cloud involves receiving a request for a resource at a first tenant application programming interface provider of an internal cloud service. The example method involves using a virtualization platform application programming interface client of the internal cloud service to access the resource when the resource is an internal resource. When the resource is an external resource, a tenant application programming interface client of the internal cloud service is used to send a second request for the resource to a second tenant application programming interface provider of an external cloud service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467395&OS=09467395&RS=09467395
owner: VMware, Inc.
number: 09467395
owner_city: Palo Alto
owner_country: US
publication_date: 20130313
---
The present disclosure relates generally to cloud computing and more particularly to cloud computing nodes.

Internal cloud architectures and external cloud architectures are used in cloud computing and cloud storage systems for offering infrastructure as a service IaaS cloud services. Examples of internal and external cloud architectures include the VMware vCloud Director cloud architecture software Amazon EC2 web service and OpenStack open source cloud computing service. IaaS cloud service is a type of cloud service that provides access to physical and or virtual resources in a cloud environment. These services provide a tenant application programming interface API that supports operations for manipulating IaaS constructs such as virtual machines VMs and logical networks. In internal and external cloud architectures tenants and physical infrastructure are kept separate from one another. Some tenant APIs include the notion of users and permissions on objects to control who has access to different tenant facing resources e.g. virtual data centers VDCs VMs and networks inside the IaaS.

Example cloud computing nodes CCNs disclosed herein facilitate implementing and managing different types of cloud architectures. Disclosed example CCNs are configured as building block interfaces that enable interconnecting different cloud computing systems to provide end users e.g. tenants with cloud services that use resources aggregated from the different cloud systems while appearing as part of a seamless or unified cloud to the end users. To provide such unified cloud services an example CCN includes a tenant application programming interface API provider in communication with a virtual data center VDC of the CCN. The example CCN also includes a cloud resource pool of aggregated resources delegatable to the VDC for use by the tenant API provider. In addition the example CCN includes a tenant API client in communication with the cloud resource pool. The tenant API client is configured to communicate with an external CCN to aggregate at least some of the resources from another cloud service associated with the external CCN. Disclosed example CCNs aggregate capacity from both the physical infrastructure of a corresponding cloud service and from external CCNs associated with external cloud services. Disclosed example CCNs delegate those resources into VDCs in which virtual machines VMs can be deployed. Disclosed example CCNs may be organized into flexible topologies that cover multiple different types of hybrid cloud architectures. Example cloud architectures in which example CCNs disclosed herein may be used include internal cloud architectures external cloud architectures hybrid cloud architectures and cloud reseller architectures. Although specific types of cloud architectures are discussed herein example CCNs disclosed herein may also be used to implement other types of cloud architectures not discussed herein.

In examples disclosed herein an internal cloud is a cloud in which a tenant and a cloud service provider are part of the same organization. In examples disclosed herein an external cloud is a cloud that is provided by an organization that is separate from a tenant that accesses the external cloud. For example the tenant may be part of an enterprise and the external cloud may be part of a cloud service provider that is separate from the enterprise of the tenant and that provides cloud services to different enterprises and or individuals. In examples disclosed herein a hybrid could is a cloud architecture in which a tenant is provided with seamless access to both internal cloud resources and external cloud resources. For example a VDC corresponding to a particular tenant may access resources spanning across multiple cloud providers to provide the tenant with access to such resources from the different ones of the multiple cloud providers. Example CCNs disclosed herein facilitate establishing such hybrid clouds so that a hybrid cloud tenant need not know which cloud service provider s are providing its resources and so that the hybrid cloud tenant need not handle different interfaces e.g. different APIs to access resources from different service providers forming the hybrid cloud. Example CCNs disclosed herein provide a tenant with a single tenant API through which the tenant can access all resources provided by a hybrid cloud in a seamless manner without needing to know whether the resources are internal resource or external resources. In disclosed examples the CCNs handle aggregation and management of resources from different cloud service providers that form the hybrid cloud without requiring the tenant to know of such aggregation and management of hybrid resources from the different providers. In some examples tenants access the tenant APIs of CCNs through different client interfaces including dedicated cloud service client applications web browsers mobile apps file system explorers navigators etc.

Examples disclosed herein are described in connection with infrastructure as a service IaaS cloud services. However disclosed example CCNs may be adapted for use with other types of cloud services including for example software as a service SaaS and platform as a service PaaS cloud services. IaaS cloud services are cloud offerings that allow a tenant to deploy one or more VMs useable by the tenant to run applications or other software. The VMs run according to corresponding service level agreements SLAs made between corresponding tenants and corresponding IaaS providers. IaaS services enable tenants to dynamically increase or decrease the number of resources needed from IaaS providers on demand. In IaaS services tenants are unaware of the physical infrastructure implementing the IaaS services. The entity that provides an IaaS service is an IaaS provider. An IaaS provider can be an internal information technology IT organization or an external public cloud provider e.g. Amazon Terremark etc. . Disclosed example CCNs facilitate providing a tenant with an IaaS service formed of resources aggregated from two or more separate service providers without requiring the overhead of specialized tenant specific or service specific specialty configurations of prior cloud services that join multiple service providers to provide a single IaaS service to a tenant.

In examples disclosed herein a tenant e.g. an IaaS tenant is a user of an IaaS. The tenant is responsible for deploying workloads in the form of VMs or multi VM configurations in the IaaS. A tenant of an IaaS is isolated from other tenants of the same IaaS. In some examples a tenant is an organization e.g. an enterprise including multiple people or users. In other examples a tenant may be a single user.

To provide tenants with access to cloud resources disclosed example CCNs are provided with VDCs. In examples disclosed herein a tenant accesses the IaaS through a VDC object. Disclosed example CCNs make cloud resources available via VMs that are deployed on VDCs. In examples disclosed herein a VDC is uniquely accessible by a tenant in the same way that an account in an IaaS service uniquely corresponds to a particular tenant. In disclosed examples VDCs are logically isolated from each other in that two tenants with access to two different VDCs of the same IaaS service provided by a CCN are unaware of each other and unable to access and modify each other s VMs e.g. cloud resources . In some examples a VDC provides tenants with access to the same internet e.g. a same inter network network . In this manner VMs deployed in one VDC can communicate to VMs in another VDC e.g. based on modulo restrictions enforced by for example a firewall rule using internet communications e.g. internet protocol IP hypertext transfer protocol HTTP communications . In examples disclosed herein VMs are deployed on an underlying physical infrastructure e.g. physical resources shared by multiple tenants. Thus although the tenants of a single CCN share physical resources the logical resources e.g. the VMs are separate and not shared between the tenants.

The CCN of the illustrated example is useful to provide service offering flexibilities to different users. For example the same CCN is useable to provide some tenants with internal only cloud services that provide access only to internal cloud resources and to provide some tenants with hybrid cloud services that provide access to internal and external cloud resources. In some examples the CCN may provide only internal cloud access to the tenant and hybrid cloud access to the tenant . In such examples the CCN provides the tenant with access to only the resources of the cloud service in accordance with an internal cloud access SLA of the tenant . Also in such examples the tenant can access any combination of the resources of the cloud service and the resources of the cloud service in accordance with a hybrid cloud access SLA of the tenant . Under such hybrid cloud access services the tenant need only interface with a tenant API e.g. one of the tenant API providers of of the CCN and the CCN manages communications with the CCN to aggregate and manage one or more of the resources for use by the tenant .

In the illustrated example the cloud service may provide IaaS cloud services to a tenant . In the illustrated example the CCN of the cloud service is able to provide hybrid cloud services to the tenant in connection with the CCN and to provide single provider cloud services to the tenant . That is the same CCN is re useable or simultaneously useable to provide hybrid cloud services and single provider cloud services to different tenants or different CCNs according to different SLAs.

The CCN of the illustrated example includes a delegation layer and an aggregation layer . The delegation layer of the illustrated example provides an interface for tenants e.g. the tenants and or of to access virtualized resources based on resources aggregated by the aggregation layer . The delegation layer of the illustrated example also provides other CCNs with access to virtualized resources based on resources aggregated by the aggregation layer . For example a delegation layer e.g. similar to the delegation layer of of the CCN of provides the tenant and the CCN with access to virtualized resources e.g. VMs that run on one or more of the resources of .

To provide tenants e.g. the tenants and or of and or other CCNs with access to and or management of cloud services and or resources the delegation layer of the illustrated example is provided with tenant API providers . Although three tenant API providers are shown at the delegation layer fewer or more tenant API providers may be provided at the delegation layer . In the illustrated example the tenant API providers are exposed as end user API interfaces to enable tenants to interact with an IaaS cloud service e.g. the cloud service and or the cloud service of . The tenant API providers of the illustrated example are also used by the CCN to deploy VMs e.g. virtualized resources in response to tenant requests. The example tenant API providers control lifecycles of VMs based on different VM management procedures such as create VMs configure VMs VM power ops e.g. power operations such as power on power off reset suspend shutdown etc. destroy VMs etc.

In the illustrated example to enable inter CCN communications and or inter CCN cloud service management the example CCN is provided with one or more tenant API clients at the aggregation layer . In the illustrated example the tenant API clients communicate with tenant API providers e.g. similar to the tenant API providers of other CCNs to enable hybrid cloud services.

Referring briefly to the tenant API provider and the tenant API client are shown as part of a same example API implemented in the example CCN of . The example API is a protocol between the tenant API provider and the tenant API client . The API defines how a client e.g. a tenant or user can implement a method or methods on the CCN which implements the API . In the illustrated example of the tenant API provider operates as a server that implements the API for clients e.g. tenants or users that access the API via the tenant API provider . Also in the illustrated example the tenant API client of the CCN operates as a tenant or user that invokes methods of other APIs implemented in other CCNs by accessing those other APIs via corresponding tenant API providers e.g. tenant API providers of of those other APIs in the other CCNs.

In the illustrated example the API includes an example API definition that specifies routines functions protocols data formats etc. for the API the tenant API provider and the tenant API client . For example the API definition may define how information is to be exchanged between the tenant API provider and the tenant API client and how information is to be handled e.g. changed provided etc. by the API . In some examples multiple separate APIs are implemented in the CCN for different ones of the tenant API clients and or different ones of the tenant API providers . Although the tenant API clients are shown separate from the tenant API providers in the CCN in some examples the same tenant API for a corresponding tenant is configured to implement tenant API provider procedures and tenant API client procedures. In such examples the same tenant API has interfaces at both the delegation layer to interact with tenants and at the aggregation layer to interact with other CCNs.

Referring briefly to an example cloud service e.g. substantially similar or identical to the cloud service of is provided with the CCN having the example API of and an example cloud service e.g. substantially similar or identical to the cloud service of is provided with an example CCN having an example API e.g. similar or identical to the API . In the illustrated example the cloud service is an internal cloud service and the cloud service is an external cloud service. The API of the illustrated example is provided with a tenant API provider e.g. similar or identical to the tenant API provider and with a tenant API client e.g. similar or identical to the tenant API client . In the illustrated example of the tenant API provider of the API interfaces with one or more tenants . Also in the illustrated example the tenant API client of the API is in communication with the tenant API provider of the example API of the example CCN of the cloud service . In this manner the example CCN can provide the one or more tenants with access to internal resources of the cloud service and or external resources from the cloud service without informing the one or more tenants whether the resources are internal resources or external resources.

Referring again to in some examples the tenant API clients are configured to migrate VMs between different IaaS providers e.g. VMs between the internal cloud service and the external cloud service of . In some such examples the tenant API clients may perform VM migrations as cold migrations such as when VMs are powered off or as live migrations such as when VMs are powered on. By configuring the tenant API clients with the ability to move VMs around during runtime the CCN is provided with more opportunities to improve placements of VMs at runtime. In this manner if resources requested by a tenant dynamically change during runtime the CCN can substantially reduce or eliminate inefficiencies in VM placements e.g. the CCN can perform VM placement optimization by using the tenant API clients to power down destroy move etc. VMs.

The tenant API clients of the illustrated example are also configured to connect networks together across different IaaS providers e.g. networks across the cloud services and of . In this manner VMs deployed across different IaaS providers can communicate with one another on private and secure virtual networks e.g. inter CCN virtual networks . In some examples the tenant API providers and the tenant API clients are configured to create secure private virtual networks across VMs of the CCN e.g. intra CCN virtual networks by for example deploying virtual private network VPN gateways at different VMs separated by a public internet and connecting the VMs over a secure private virtual network via the VPN gateways.

By providing the tenant API providers at the delegation layer and the tenant API clients at the aggregation layer the example CCN of is able to implement cloud architectures of different configurations and different topologies. That is examples disclosed herein enable implementing different types of cloud architectures for different uses or types of services by arranging CCNs in different desired topologies based on the tenant API providers operating as egress information service resource providers and the tenant API clients operating as ingress information service resource receivers. Different example configurations and topologies such as internal cloud architectures external cloud architectures hybrid cloud architectures and reseller cloud architectures are discussed in detail below in connection with .

To aggregate resources for use by tenants e.g. the tenants and of the CCN of the illustrated example is provided with an example cloud resource pool in the aggregation layer . The cloud resource pool stores aggregated resources virtualized through a virtualization platform e.g. VMware ESX VMware vCenter Xen hypervisor etc. . In the illustrated example the virtualization platform aggregates virtual resources that run on physical resources . In the illustrated example the physical resources may be computers servers printers scanners storage devices etc. In the illustrated example the virtual resources of the cloud resource pool may be reserved logical partitions or logical portions e.g. time slices or amounts of processing storage printing scanning etc. apportioned by the virtualization platform on the physical resources .

Referring briefly to the illustrated example of the resources and are physical resources such as the physical resources of . In addition the CCNs and are provided with corresponding cloud resource pools e.g. similar to the cloud resource pool of that aggregate virtual resources that run on the physical resources and through a virtualization platform e.g. the virtualization platform of . In this manner the CCN of can access virtual resources that run on the physical resources of the cloud service and the CCN can also access through the CCN virtual resources that run on the physical resources of the cloud service .

In the illustrated example of to access virtual resources from the virtualization platform the cloud resource pool is in communication with a placement and routing engine in the aggregation layer . In the illustrated example the placement and routing engine includes the tenant API clients . Also in the illustrated example the placement and routing engine includes a virtualization platform API client to access virtual resources through the virtualization platform . The placement and routing engine of the illustrated example performs placement and routing processes to place and route virtual resources accessed through the virtualization platform for use by tenants through different ones of the tenant API providers 

In the illustrated example of to provide tenants e.g. the tenants and of access to virtual resources aggregated in the cloud resource pool the CCN is provided with virtual data centers VDCs in the delegation layer . In the illustrated example each of the VDCs is accessible independently by a corresponding tenant via a corresponding one of the tenant API providers . The tenant API providers of the illustrated example delegate the virtual resources in the cloud resource pool to corresponding ones of the VDCs for access by corresponding tenants via the VDCs . In the illustrated example virtual resources are delegated in the VDCs as VMs instantiated and managed by for example the virtualization platform .

In the illustrated example aggregated virtual resources in the cloud resource pool are used to provision VMs based on requests from tenants of the CCN . As such the CCN of the illustrated example places e.g. creates the VMs in aggregated virtual resource capacity provided by the virtualization platform s and or provided by other CCNs in communication with the CCN . Over time dynamic placement of VMs e.g. creating and destroying VMs may create challenges in keeping well optimized or efficient placements of VMs as VMs are constantly evaluated for the best possible e.g. cheapest placements in the aggregated virtual resources of the cloud resource pool . To substantially reduce or eliminate such VM placement challenges the placement and routing engine of the illustrated example is configured to migrate VMs to different virtual resources as discussed above e.g. as cold migrations or live migrations by invoking commands through the tenant API clients when the tenant API clients find better placements for different VMs.

In the illustrated example the tenant API client can expand and or restrict features of the physical resources from which it aggregates virtual resources in the cloud resource pool . Examples of such expandable or restrictable value add features include advanced VM placement policies e.g. a placement policy that allows distributing a set of VMs across two of the VDCs and or the ability to explicitly choose between high available zones of resources for VM creation and not so high available zones of resources for VM creation.

To authenticate and authorize users and permissions the CCN of the illustrated example is provided with an authentication authorization accounts AAA service in the delegation layer . In the illustrated example permission checking is performed by the AAA service and is isolated in the delegation layer of the CCN . In this manner users and accounts are maintained only in the delegation layer and the user and account information is never propagated to underlying resources e.g. resource in the cloud resource pool or aggregated from other CCNs in the aggregation layer . In the illustrated example for a tenant authenticated and authorized by the AAA service the aggregation layer of the CCN is configured to connect to that tenant via a corresponding tenant API e.g. one of the tenant API providers . In this manner exchanges with that tenant are isolated to the CCN so that the tenant s exchanges with the CCN remain separate from other CCNs. In this manner examples disclosed herein enable decoupling or isolating tenants users in the delegation layer of the CCN from tenants users in remote CCNs. Using the AAA service to manage access to virtual resources in this manner is useful for example to an enterprise that prefers not to upload all its employees information and passwords to third party cloud providers. In this manner sensitive information is maintained at the enterprise e.g. in the internal cloud using security standards enforced by the enterprise. Using the AAA service to manage access to virtual resources is also useful to simplify or substantially reduce the amount of information that needs to be propagated through a CCN topology. For example the AAA service can be configured to manage authentications and authorizations of tenants based on different polices to access resources rather than needing to propagate user identifiers passwords and or other credentials of tenants to external CCNs e.g. the CCN of or to the virtualization platform or the physical resources . Managing access to virtual resources using the AAA service also enables arbitrary nesting of CCNs while being able to keep secure partitions and restricted access privileges between tenants and resources.

The example CCN of does not increase performance overhead or adversely affect performance of VMs. In the illustrated examples disclosed example CCNs create VMs to run directly on a virtualization host such as the virtualization platform and the VMs offer services directly on aggregated network resources e.g. aggregated network resources in the cloud resource pool . As such disclosed example CCNs can be used in highly nested configurations without significantly reducing VM performance.

The example CCN of may be implemented using different types of alternate path configurations to for example manage load balancing resource availability and connection failures. Example alternate path configurations that are useable with the example CCN of include active passive configurations and active active configurations across two sites e.g. across the cloud services and of . To facilitate the alternate path configurations the example CCN is provided with two network interface card NIC adapters and in the illustrated example. In active passive configurations the NIC adapter is a primary NIC adapter and the NIC adapter is a standby NIC adapter. In active standby configurations the standby NIC adapter is inactive until it is needed to assume the role of the primary NIC adapter . That is the standby NIC adapter can takeover in response to failure congestion or unavailability of the primary NIC adapter . In active active configurations both of the NIC adapters and are active at the same time to concurrently manage load balancing. In active active configurations either of the NIC adapters or can assume full management responsibilities in response to the failure congestion or unavailability of the other NIC adapter or .

While an example manner of implementing the CCN has been illustrated in one or more of the elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example tenant API providers the example API clients the example cloud resource pool the placement and routing engine the virtualization platform API client the example VDCs the example AAA service and or more generally the example CCN of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example tenant API providers the example tenant API clients the example cloud resource pool the placement and routing engine the virtualization platform API client the example VDCs the example AAA service and or more generally the example CCN could be implemented using one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc. When reading any of the apparatus or system claims of this patent to cover a purely software and or firmware implementation at least one of the example tenant API providers the example tenant API clients the example cloud resource pool the placement and routing engine the virtualization platform API client the example VDCs and or the example AAA service are hereby expressly defined to include a tangible computer readable storage device or storage disk such as a memory a digital versatile disk DVD a compact disk CD a Blu ray disk etc. storing the software and or firmware. Further still the example CCN of may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

In the illustrated example of a tenant API client is used to aggregate virtual resources into the cloud resource pool from the virtualization platform run by the enterprise and a corresponding one of the tenant API providers is used to delegate the virtual resources e.g. VMs to the corresponding tenant . In the illustrated example user authentications of the tenant and permissions are enforced by the AAA service of the CCN at the enterprise based on user and account information maintained at the enterprise and based on policies of the enterprise .

In the illustrated example of a tenant API client is used to aggregate virtual resources into the cloud resource pool from the virtualization platform run by the third party cloud provider and a corresponding one of the tenant API providers is used to delegate the virtual resources e.g. VMs to the corresponding tenant across separate logical networks of the enterprise and the third party cloud provider . In the illustrated example user authentications of the tenant and user permissions are enforced by the AAA service of the CCN at the third party cloud provider based on user and account information from the enterprise and or the third party cloud provider and based on policies of the enterprise and or the third party cloud provider .

In the illustrated example of the two CCNs and are in communication with one another to implement the hybrid cloud architecture to provide the tenant with seamless access to virtualized internal resources provided by the virtualization platform of the enterprise and seamless access to virtualized external resources provided by the virtualization platform of the third party cloud provider . In the illustrated example of a tenant API client of the CCN is used to aggregate virtual internal resources into the cloud resource pool from the virtualization platform run by the enterprise and to aggregate virtual external resources from the virtualization platform run by the third party cloud provider . For example to aggregate resources from the third party cloud provider the tenant API client of the CCN communicates with a tenant API provider e.g. substantially similar or identical to the tenant API providers of of the CCN . In such examples the tenant API provider of the CCN acknowledges or treats the tenant API client of the CCN as a tenant that requests resources from the CCN .

Inter cloud interactions between the CCN and the CCN to aggregate resources requested by the tenant are transparent to the tenant . That is the CCN and the CCN perform such inter cloud interactions without the tenant API providers and or the tenant API clients exposing to the tenant whether resources are provisioned through the CCN as internal resources or through the CCN as external resources. Thus the tenant need not be aware of and need not manage any of the inter cloud interactions between the CCNs and . In this manner the tenant is unaware of whether resources delegated to it are provisioned at the internal cloud service or at the external cloud service .

In the illustrated example the tenant can log into the CCN and seamlessly deploy VMs across multiple cloud providers regardless of whether the cloud providers are internal cloud providers or external cloud providers. For example one of the tenant API providers corresponding to the tenant is used to delegate to the corresponding tenant aggregated virtual resources e.g. VMs aggregated across the enterprise and the third party cloud provider . In the illustrated example user authentications of the tenant and user permissions are enforced by the AAA service of the CCN at the internal cloud service based on user and account information of the enterprise . In the illustrated example of by using the AAA service of the CCN the enterprise need not expose its sensitive user and account information to the third party cloud provider . Instead the AAA service provides authentication authorization and accounts services for user and account information of the enterprise in the CCN without exposing such user and account information to the third party cloud provider .

In some examples the CCN of the external cloud service implements an AAA service e.g. substantially similar or identical to the AAA service to perform user authentications and or enforce user permissions on communications from the CCN . In such examples the third party cloud provider treats the CCN as a user or tenant of its services and enforces its policies on the CCN using its AAA services.

In the illustrated example of the CCN is in communication with one or more of the CCNs to provide the tenant with seamless access to virtualized resources provided by one or more of the virtualization platforms . In the illustrated example of a tenant API client of the CCN is used to aggregate virtual resources into the cloud resource pool from one or more of the virtualization platforms run by the third party cloud provider s . For example to aggregate resources from the third party cloud provider s the tenant API client of the CCN communicates with one or more tenant API provider s e.g. substantially similar or identical to the tenant API providers of of corresponding ones of the CCNs . In such examples the tenant API provider s of the CCN s acknowledge or treat the tenant API client of the CCN as a tenant that requests resources from the CCN s . Inter cloud interactions between the CCN and the CCN s to aggregate resources requested by the tenant are transparent to the tenant . In the illustrated example the CCN and the CCN s perform such inter cloud interactions without the tenant being aware or needing to manage any of the inter cloud interactions. In this manner the tenant is unaware of whether resources delegated to it are from the cloud reseller or one or more of the third party cloud providers . In some examples the tenant is not even aware of the identities of the third party cloud providers and or that the cloud reseller is using resources of the third party cloud providers . Under a reseller business model the cloud reseller may change backend cloud resource providers e.g. the third party cloud provider s of based on changes in price or quality. In some examples the reseller may also offer additional services e.g. web portals or graphical user interfaces for accessing cloud resources failover processes authentication processes etc. to tenants.

In the illustrated example the cloud reseller uses one of the tenant API providers to delegate to the tenant virtual resources e.g. VMs aggregated from one or more of the third party cloud services . In the illustrated example user authentications of the tenant and permissions are enforced by the AAA service of the CCN at the cloud reseller based on user and account information of the enterprise and or of the cloud reseller . In some examples the CCNs of the third party cloud services implement corresponding AAA services e.g. substantially similar or identical to the AAA service to perform user authentications and or enforce permissions on communications from the CCN . In such examples the third party cloud providers treat the CCN as a user or tenant of their services and enforce their policies on the CCN using their AAA services.

As shown in example CCNs disclosed herein can be connected to virtualization platforms e.g. the virtualization platform of the virtualization platform of and or the virtualization platforms of and or connected to tenant API providers e.g. the tenant API providers of of other CCNs e.g. the CCNs of the CCN of and or the CCNs of . As such disclosed example CCNs enable multi level nesting of cloud services to aggregate resources from a plurality of cloud services for seamless access by tenants. For example as discussed above some entities may run their own virtualization platforms to aggregate their own resources. Some entities may communicate with external third party cloud providers to aggregate external third party resources with their own resources aggregated using their own virtualization platforms. Yet other entities may build business models on reselling access to resources aggregated from other third party cloud providers without expending any capital on acquiring and maintaining their own resources. In many architectures disclosed example CCNs enable seamless access to resources aggregated across multiple cloud services while providing the ability to dynamically increase or decrease needed resources in real time and while protecting sensitive user and account information of tenants.

As mentioned above the example process of may be implemented using coded instructions e.g. computer readable instructions stored on a tangible computer readable storage medium such as a hard disk drive a flash memory a read only memory ROM a compact disk CD a digital versatile disk DVD a cache a random access memory RAM and or any other storage device or storage disk in which information is stored for any duration e.g. for extended time periods permanently for brief instances for temporarily buffering and or for caching of the information . As used herein the term tangible computer readable storage medium is expressly defined to include any type of computer readable storage device and or storage disk and to exclude propagating signals. As used herein tangible computer readable storage medium and tangible machine readable storage medium are used interchangeably. Additionally or alternatively the example process of may be implemented using coded instructions e.g. computer readable instructions stored on a non transitory computer and or machine readable storage medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage device or storage disk in which information is stored for any duration e.g. for extended time periods permanently for brief instances for temporarily buffering and or for caching of the information . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable device or disk and to exclude propagating signals. As used herein when the phrase at least is used as the transition term in a preamble of a claim it is open ended in the same manner as the term comprising is open ended.

Turning to the example process of initially a tenant API provider receives a request for a resource block . For example the tenant API provider of the CCN may receive the request from the tenant . The AAA service determines whether the user of the tenant making the request is authenticated block . For example the AAA service performs an authentication procedure to determine whether the requesting user is known e.g. whether the user is registered with the CCN . In some examples the AAA service performs the authentication based on an account of a VDC e.g. the VDC through which the user is requesting the resource. If the AAA service determines at block that the requesting user is not authenticated the AAA service denies the user access block to the requested resource and the example process of ends.

If the requesting user is authenticated at block the AAA service determines whether the user is authorized block . For example the AAA service performs an authorization procedure to determine whether the requesting user has permissions authorizing the user to access the requested resource. If the AAA service determines at block that the requesting user is not authorized to access the requested resource the AAA service denies the user access block to the requested resource and the example process of ends.

If the requesting user is authorized at block the AAA service grants the user access block to the requested resource. In the illustrated example the CCN grants the requesting user access to the resource without exposing to the user whether the resource is an internal resource or an external resource. In this manner the requesting user can access the resource via the CCN in a seamless manner regardless of whether the resource is an internal resource aggregated internally by the CCN or an external resource aggregated externally via another CCN. The tenant API provider determines the placement routing of the requested resource block . For example the tenant API provider determines the location of a VM corresponding to the requested resource. In some examples the location of the requested resource is in the same cloud service as the CCN that received the tenant request such as in for example the internal cloud architecture of the external cloud architecture of and or the internal cloud service of . In other examples the requested resource is an external resource located in an external cloud service separate from the CCN that received the tenant request such as in for example the external cloud service of and the third party cloud services of .

If the requested resource is an external resource block a tenant API client calls into an external CCN block to request the resource. For example the tenant API client of the CCN may request the resource from the CCN in the hybrid cloud architecture of and or may request the resource from one of the CCNs in the cloud reseller architecture of . In the illustrated example the resource accessed through another CCN external to the CCN via the tenant API client is an external resource.

If the requested resource is not an external resource block e.g. the requested resource is an internal resource the tenant API provider requests use of the resource through the virtualization platform API client block . For example the tenant API provider calls into the VDC to request use of the resource through the virtualization platform API client . In the illustrated example the resource accessed through the virtualization platform API client is an internal resource available directly through the CCN without needing to be accessed through another CCN e.g. the CCN of the CCN of or the CCNs of . After requesting the resource at block or block the CCN assigns the resource block for use by the requesting user. The example process of then ends.

The processor platform of the instant example includes a processor . The processor of the illustrated example is hardware. For example the processor can be implemented by one or more integrated circuits logic circuits microprocessors or controllers from any desired family or manufacturer.

The processor of the illustrated example includes a local memory e.g. a cache . The processor of the illustrated example is in communication with a main memory including a volatile memory and a non volatile memory via a bus . The volatile memory may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of random access memory device. The non volatile memory may be implemented by flash memory and or any other desired type of memory device. Access to the main memory is controlled by a memory controller.

The processor platform of the illustrated example also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an Ethernet interface a universal serial bus USB and or a PCI express interface.

In the illustrated example one or more input devices are connected to the interface circuit . The input device s permit s a user to enter data and commands into the processor . The input device s can be implemented by for example a keyboard a mouse a touchscreen a track pad a trackball isopoint and or a voice recognition system.

One or more output devices are also connected to the interface circuit of the illustrated example. The output devices can be implemented for example by display devices e.g. a liquid crystal display a cathode ray tube display CRT a printer and or speakers . The interface circuit of the illustrated example thus typically includes a graphics driver card graphics driver chip or graphics driver processor.

The interface circuit of the illustrated example also includes a communication device such as a transmitter a receiver a transceiver a modem or a network interface card to facilitate exchange of data with external machines e.g. computing devices of any kind via a network e.g. an Ethernet connection a digital subscriber line DSL a telephone line coaxial cable a cellular telephone system etc. .

The processor platform also includes one or more mass storage devices for storing software and data. Examples of such mass storage devices include floppy disk drives hard drive disks compact disk drives compact disks Blu ray disk drives RAID systems and digital versatile disk DVD drives.

Coded instructions e.g. to implement the example process of may be stored in the mass storage device in the volatile memory in the non volatile memory and or on a removable tangible computer readable storage medium such as a CD or DVD.

Although certain example methods apparatus and articles of manufacture have been disclosed herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.

