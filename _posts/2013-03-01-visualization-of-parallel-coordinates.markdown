---

title: Visualization of parallel co-ordinates
abstract: Parallel co-ordinates associated with a business scenario represent underlying data of the business scenario. Based upon associated categorical variables, the parallel co-ordinates are divided into a plurality of segments. Each segment includes a pair of continuous variables represented as a pair of axes of the parallel co-ordinates. The pairs of axes of the parallel co-ordinates are fragmented to generate bi-variant bins. The bi-variant bines include continuous values corresponding to each fragment of the pair of axis. An associated backend database is queried to determine aggregated tuples of continuous values between each bi-variant bin of the corresponding pair of axes. Based on the aggregated tuples, a statistical visualization of the aggregated tuples between the bi-variant bins for the axes is generating. The statistical visualization includes a distribution of the tuples for the plurality of segments corresponding to the parallel co-ordinates.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09153051&OS=09153051&RS=09153051
owner: BUSINESS OBJECTS SOFTWARE LIMITED
number: 09153051
owner_city: Dublin
owner_country: IE
publication_date: 20130301
---
The field generally relates to computer systems and software and more particularly to methods and systems to generate a visualization of parallel co ordinates.

A parallel co ordinate is a method of visualizing and analyzing multivariate data. Records of data are generally plotted as a line in the parallel co ordinate. Since records are plotted as a line handling an enormous amount of data is a cumbersome process when every record has to be fetched from an underlying data store and plotted as a graph of parallel co ordinates. Also a graph of a large group of records may become indecipherable due to a crowded plot of lines thereby defeating the purpose of parallel co ordinates.

Embodiments of techniques to generate a visualization of parallel co ordinates are described herein. A parallel co ordinate is a method of visualizing and analyzing multivariate data. By analyzing the parallel co ordinates a flow of records of data and a relation between corresponding attributes can be inferred. To analyze the parallel co ordinates the graph of parallel co ordinates is segmented. The underlying records are grouped into separate buckets. An aggregation of the bucketed records is determined from an associated database and plotted on a graph to generate the visualization of the parallel co ordinates.

In the following description numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

A process flow illustrated in explains a method to generate a visualization of the parallel co ordinates according to an embodiment. In process block categorical variables and continuous variables associated with the parallel co ordinates are determined. A categorical variable associated with the parallel co ordinates represents a plurality of possible categorical data associated with the parallel co ordinates. For example a blood type of a person can categorically be A B AB or O . In another example for a business scenario of analyzing flower data set the possible categorical variables include three plant species of namely and . An entry in the database table illustrating such categorical data may be referred to as categorical variable. In an embodiment the blood types A B AB O and plant species and are referred to as categorical values. A continuous variable associated with the parallel co ordinates represent a plurality of attributes of the corresponding continuous variable. For instance for a plant species petal width petal length sepal width and sepal length represent the attributes of the categorical variable 

In process block the parallel co ordinates are divided into a plurality of segments. Each such segment includes a pair of continuous variables represented as a pair of axes. The parallel co ordinates may be divided at each axis such that each segment includes the polylines plotted between the pair of axes. Each segment represents a data flow between the pair of axes corresponding to that segment. The continuous variables represented as a pair of axes illustrate database fields for instance dimensions associated with the parallel co ordinates. For example a sepal length a sepal width a petal length a petal width and the like corresponding to the species and 

In process block the pairs of axes of each segment are fragmented to generate bi variant bins. A bi variant bin includes a pair of bins representing two degrees of variations a first degree associated with a first axis and a second degree associated with a second axis of a segment. Between every bi variant bin there may be zero or more polylines representing a plot of zero or more continuous values between the two corresponding axes. The bi variant bins include continuous values associated with each fragment of the axes. Here a first axis of the pair of axes is fragmented into a finite number of bins where each bin represents the attributing continuous value associated with the continuous variable corresponding to the first axis. A second axis of the pair of axes is fragmented into a finite number of bins where each bin represents the attributing continuous value associated with the continuous variable corresponding to the second axis. The bi variant bins are generated by consolidating the bins from the first axis and the bins from the second axis. The continuous values associated with the fragment represent numeric data for instance a measure associated with the categorical variables and the continuous variables. For example if a sepal length of is 5.4 millimeter the attributing continuous value is 5.4 . In an embodiment the number of bins is determined based upon a user defined value a machine defined value a screen size of an associated user interface a number of associated continuous values and the like.

In process block a backend database associated with the parallel co ordinates is queried to determine aggregate tuples of continuous values between each bi variant bin of corresponding axes. The backend database may include a database table representing the tuples as categorical variables categorical values the continuous variables and the corresponding continuous values in a tabular manner. The database table may also include a count of continuous values of corresponding tuples an aggregation of continuous values of corresponding tuples and the like represented as aggregated tuples. Based on the aggregated tuples a count of tuples corresponding to each bi variant bin is determined by aggregating the corresponding number of continuous values. Similarly based on the aggregated tuples an aggregation of continuous values corresponding to each bi variant bin is determined by aggregating the corresponding continuous values. The count of continuous values and the aggregation of continuous values are stored as aggregated tuples in the database table. In process block a visualization of the aggregated tuples between the bi variant bins is generated. This visualization includes a distribution of the tuples for all the segments. By analyzing the visualization of the parallel co ordinates a flow of the tuples and a relation between the categorical variables and the continuous variables can be inferred.

In an embodiment a selection of a business scenario is received on a user interface associated with user interface component for generating a visualization of parallel co ordinates associated with the business scenario. The parallel co ordinates include axes polylines and vertices on the axes as parameters of the parallel co ordinates. User interface engine triggers an in database aggregation process to generate the visualization. In response to the trigger processor determines the categorical variables and the continuous variables corresponding to the parallel co ordinates associated with the business process from tuple storage module . In an embodiment a user elects one or more of a plurality of categorical variables for analysis. For instance if the business scenario flower data set includes three categorical variables plant type plant color and plant fragrance a user can select plant type as a categorical value for analysis. For a backend database determination a data type associated with the categorical variables may be used to distinguish categorical variables and continuous variables. For example the categorical variables plant type plant color and plant fragrance are of string type whereas the continuous variables may be of integer type. In an embodiment processor assigns the categorical values of the elected categorical variable to a group of polylines of the parallel co ordinates assigns the continuous variables to the axes of the parallel co ordinates and assigns the continuous values to the vertices intersecting the axes of the parallel co ordinates.

Parameter selection module is initiated to select a categorical value for analysis. Based upon the categorical values selected processor triggers separation module to divide the parallel co ordinates to perform analysis. Separation module divides the parallel co ordinates into a plurality of segments at the axes of the parallel co ordinates by determining a position to divide the parallel co ordinates. In an embodiment the parallel co ordinates are divided at every axes representing corresponding continuous variables. Thus each divided segment includes a pair of continuous variables represented as a pair of axes of the parallel co ordinates. The pair of axes marks the bounds for the corresponding segment and represents the dataflow of tuples between the corresponding two axes. Metadata associated with the dividing of the parallel co ordinates for instance a position of dividing a continuous variable of the segment and the like are stored in tuple storage module .

Separation module fragments the pairs of axes corresponding to the segments to generate bi variant bins including continuous values corresponding to each fragment. Fragmenting an axis includes determining a range of continuous values associated with the corresponding axis and dividing the range of continuous values into a finite number of bins. For instance if a sepal width of varies between 3.5 mm and 1.4 mm the range of continuous values is represented as 3.5 1.4. This range may be divided into thirty bins and the continuous values are plotted on to the thirty bins. Each bin includes zero or more continuous values having vertices present in the corresponding bin. For instance a fourth bin includes the sepal width 3.5 mm since the vertex representing 3.5 mm is included in a fourth fragment of the corresponding axis.

In an embodiment separation module fragments a first axis of a segment into a first set of finite bins where each bin represents the attributing continuous values associated with a continuous variable corresponding to the first axis. Similarly separation module fragments a second axis of a segment into a second set of finite bins where each bin represents the attributing continuous values associated with a continuous variable corresponding to the second axis. The separation module consolidates the bins from the first axis and the second axis to generate the bi variant bins. This procedure is repeated for all the segments of the parallel co ordinates. Metadata associated with the fragmentation of the parallel co ordinates for instance a position of vertex in each fragment a continuous variable of the bin a number of vertices present in a bin and the like are stored in bin storage module .

Query module queries backend database to determine aggregated tuples of continuous values between each bi variant bin of the corresponding pair of axes. Backend database may include a database table representing the tuples as categorical variables the continuous variables and the corresponding continuous values in a tabular manner. Aggregated tuples and aggregation information of the tuples are determined and stored in the database table residing in aggregation module . In an embodiment the aggregated tuples are determined by aggregation module based upon a trigger to execute an in database aggregation.

Analysis module generates a statistical visualization of the aggregated tuples between the bi variant bins for the axes associated with the parallel co ordinates on the computer generated user interface associated to the user interface engine . Generating a statistical visualization includes generating a distribution of the tuples for each segment to represent a dataflow between the pairs of axes corresponding to the segment and generating the distribution of tuples for the plurality of segments to represent a dataflow for all the segments. Generating a statistical visualization also includes implementing a bi variant plotting of the tuples for the plurality of segments corresponding to the parallel co ordinates. A bi variant plotting of tuples includes determining continuous values between each bi variant bin for each segment of the parallel co ordinate and plotting the determined continuous values.

In an embodiment a density of the aggregated tuples is determined and a degree of density of the aggregated tuples is plotted for each bi variant bin. A density of the aggregated tuples represents a quantity of tuples for every bi variant bin. For instance if a first bi variant bin is associated with seven tuples and a third bi variant bin is associated with fourteen tuples the aggregated tuples for the first bi variant bin is said to be dense compared to the aggregated tuples for the second bi variant bin. A degree of density illustrating a statistical analysis of the density of the tuples is plotted on the parallel co ordinates. The degree of density denotes a density of flow of tuples from one continuous variable to another a relation between two or more continuous variables a distribution of density of tuples for the categorical variables a distribution of density of tuples across all continuous variables and the like. In an embodiment the degree of density is plotted using various visual representations including line patterns line colors n dimensional patterns shapes symbols and the like. For example varied thickness of lines can represent varied degrees of density of the tuples. Plotting such lines with varied thickness across the parallel co ordinates or providing any similar statistical visualization of the parallel co ordinates provides a comprehension of the flow of tuples of data across the parallel co ordinates and a relation between corresponding continuous variables.

In an embodiment separation module triggers parameter assignment module to assign parameters to the parallel co ordinates. The parameters include categorical variables and categorical values associated with pairs of axes of the segments categorical values associated with bi variant bins of the segments aggregated tuples and the like.

In an embodiment the segments are categorized based upon the categorical values associated with the parallel co ordinates to select individual categories of segments for fragmenting the corresponding pairs of axes. For example the species and may include three corresponding individual groups of polylines in the parallel co ordinates representing the plot of continuous values associated with the respective species. Here the groups of polylines in the segments may be represented distinctively from each other for instance using three distinctive colors for the three categories using three patterns of lines for the three categories or the like. The fragmentation of segments determination of the aggregated tuples and the generation of the statistical visualization may be executed separately for the three categories. Further the categorical statistical visualization for the three species may be merged to generate a consolidated statistical visualization for the entire parallel co ordinates for the received business process.

In an embodiment the tuples associated with the parallel co ordinates are grouped into separate database buckets at backend database . The in database aggregation component may generate the database buckets and associate the buckets with the bi variant bins. An aggregation of the bucketed tuples is determined by aggregation module and plotted on a graph to generate the visualization of the parallel co ordinates. A process of executing the aggregations at an in database level to determine the aggregated tuples may be referred to as in database aggregation mechanism.

Aggregation table includes the continuous variables for all the segments associated with the parallel co ordinates. For instance aggregation table includes continuous variables sepal width and sepal length associated with first segment along with corresponding continuous values. Aggregation table also includes the count and aggregation information required to generate aggregated tuples. For instance aggregation table includes number of tuples column . When a backend database is queried the aggregated tuples of continuous values between each bi variant bin of the corresponding continuous variables is determined. In aggregation table the continuous values for the continuous variables and are included as no of records in the rows of column . For example the aggregated tuples between continuous value 7 of continuous variable and continuous value 5 of continuous variable is zero no tuples . The aggregated tuples between continuous value 6.5 of continuous variable and continuous value 3 of continuous variable is one one tuple .

In an embodiment the aggregated tuples are determined based upon a trigger to execute an in database aggregation. The in database aggregation is executed at an in database level by determining a count of continuous values of corresponding tuples an aggregation of continuous values of corresponding tuples and the like represented as aggregated tuples. Based on the aggregated tuples a count of tuples corresponding to each bi variant bin is determined by aggregating the corresponding number of continuous values. Similarly based on the aggregated tuples an aggregation of continuous values corresponding to each bi variant bin is determined by aggregating the corresponding continuous values.

Legend includes three categorical values illustrated by three types of lines used to represent three species of plants in the flower data set where solid line represents a plot of tuples for dotted line represents a plot of tuples for and dashed line represents a plot of tuples for . Legend also illustrates various densities of the lines included in segment . In segment the thickness of lines connecting the corresponding continuous values represents the density of the aggregated tuples for the corresponding bi variant bins. Solid lines and represent three densities of tuples for dotted lines and represent two densities of tuples and dashed lines and represent two densities of tuples for

For instance the thickness of the solid line representing the plot for tuples of between bi variant bins B20 of and B15 of depicts a density of two tuples the thickness of the solid line between bi variant bins B22 B23 of and B19 of depicts a density of three tuples. Hence the thickness of the polylines representing the two tuples is less dense compared to the thickness of the polylines representing the three tuples.

The dotted lines representing the plot of tuples for has three variations of density. The plot between B1 B2 of and B18 B19 of has a high density since the polylines connecting two corresponding continuous values are overlapping with each other. The plot between B5 B7 of and B19 B22 of has a medium density since the polylines connecting two continuous values are adjacent to each other. The plot between B15 of and B28 of has a low density since the polyline connecting one continuous value is isolated from the rest of the plots.

The dashed lines representing the plot of tuples for has three variations of density. The plot between B6 B7 of and B19 B20 of has a high density since there are three polylines and the polylines connecting the corresponding continuous values are overlapping with each other. The plot between B12 B13 of and B23 B24 of have a low density since there is only one polyline each connecting the continuous values.

In an embodiment the density of the tuples is associated with the range of bi variant bins. For instance if the range of the bi variant bins is short and the number of polylines is more the plot of such polylines will have a high density compared to a plot of bi variant bins with a large range and more number of poly lines. For example if there are ten polylines between B19 B23 of first axes and B5 B7 of second axis and there are nine polylines between B17 of first axis and B25 26 of second axis the thickness of the polylines with the second group is dense compared to the thickness of the polylines of the first group. The reason for this analysis may be associated with the proximity of the continuous values of the continuous variables. For example in the first group the values of the bi variant bins may vary between 5.6 5.9 millimeters and 2.8 3.1 millimeters and in the second group the values of the bi variant bins may vary between 5.6 5.7 millimeters and 2.1 2.3 millimeters. Since the proximity of continuous values is high in the second group the polylines present in the second group are dense compared to the polylines present in the first group.

Some embodiments may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components maybe implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. A computer readable storage medium may be a non transitory computer readable storage medium. Examples of a non transitory computer readable storage media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment may be implemented using Java C or other object oriented programming language and development tools. Another embodiment may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open Data Base Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in detail.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments including what is described in the Abstract is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments and examples are described herein for illustrative purposes various equivalent modifications are possible within the scope as those skilled in the relevant art will recognize. These modifications can be made in light of the above detailed description. Rather the scope is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

