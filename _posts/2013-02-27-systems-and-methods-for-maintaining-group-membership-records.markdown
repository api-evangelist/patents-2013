---

title: Systems and methods for maintaining group membership records
abstract: A method for maintaining group membership records includes 1) maintaining a record of group memberships for a membership hierarchy, the membership record identifying a direct relationship between a first object and a second object in the membership hierarchy, 2) receiving a membership update indicating that, as of a first point in time, a direct relationship between the second object and a third object changed, 3) updating the record of group memberships to reflect the change in the relationship between the second object and the third object, 4) deducing, based on the membership update and the record of group memberships, a change in an indirect relationship between the first object and the third object as of the first point in time, and 5) providing a view of object relationships within the membership hierarchy as the object relationships exist at the first point in time and a historical record of object relationships.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08805888&OS=08805888&RS=08805888
owner: Symantec Corporation
number: 08805888
owner_city: Mountain View
owner_country: US
publication_date: 20130227
---
This application is a continuation of U.S. application Ser. No. 13 407 748 filed 28 Feb. 2012 the disclosure of which is incorporated in its entirety.

In a group membership hierarchy maintained by an enterprise user and group membership relationships may frequently change. Directory services such as Active Directory may enable administrators to identify direct relationship changes within a group membership hierarchy. However such services may not enable administrators to identify indirect relationship changes within group membership hierarchies and or may not provide historical membership data. As a result performing electronic discovery and or any other type of audit of information within a group membership hierarchy may be time and resource intensive particularly within large organizations. For example an electronic discovery application may take weeks to traverse an Active Directory with thousands of users. To complicate matters traditional electronic discovery solutions for membership hierarchies may be unreliable due to run time errors. What is needed therefore is a more efficient and effective mechanism for identifying tracking and or managing group information for membership hierarchies.

As will be described in greater detail below the instant disclosure generally relates to systems and methods for maintaining group membership records. In one example a computer implemented method for maintaining group membership records may include 1 maintaining a record of group memberships for a membership hierarchy the membership record identifying a direct relationship between a first object and a second object in the membership hierarchy 2 receiving a membership update indicating that as of a first point in time a direct relationship between the second object and a third object changed 3 updating the record of group memberships to reflect the change in the relationship between the second object and the third object 4 deducing based on the membership update and the record of group memberships a change in an indirect relationship between the first object and the third object as of the first point in time 5 using the record of group memberships the updated change in the direct relationship between the second and third objects and the deduced change in the indirect relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time and 6 maintaining a historical record of group memberships as they existed before the first point in time.

In at least one embodiment the method may further include creating the historical record such that the historical record indicates the second and third objects were directly related before the first point in time and the first and third objects were indirectly related before the first point in time. Additionally or alternatively the membership hierarchy may include an Active Directory structure for an enterprise the first object may include a user group and receiving the membership update may include receiving an Update Sequence Number USN change list that indicates direct relationship changes within the Active Directory structure. In such embodiments receiving the membership update may include querying an Active Directory service membership enumeration Application Programming Interface API for changes to direct relationships within the Active Directory structure and the membership update may indicate only changes to direct relationships within the Active Directory structure.

According to various embodiments the third object comprises a user profile. In some embodiments the method may further include creating the historical record such that the historical record indicates the second and third objects were directly related before the first point in time and the first and third objects were indirectly related before the first point in time. In such embodiments the method may further include receiving an electronic discovery request to provide current and historical group membership information for objects within the Active Directory structure. The method may also include in response to the electronic discovery request performing the providing of the view of object relationships within the membership hierarchy as they exist at the first point in time by providing the record of group memberships instead of recursively traversing the Active Directory structure to identify group membership information and by providing the historical record.

According to certain embodiments providing the view of object relationships within the membership hierarchy as they exist at the first point in time may include updating the record of group memberships to reflect the change in the indirect relationship between the first and third objects.

In various embodiments the method may include receiving a request to provide membership information for the membership hierarchy. The method may also include in response to the request to provide membership information for the membership hierarchy performing the deducing of the change in the indirect relationship between the first and third objects and performing the providing of the view of object relationships within the membership hierarchy as they exist at the first point in time.

According to some embodiments maintaining the record of group memberships for the membership hierarchy may include performing a full synchronization of the membership hierarchy at a point in time prior to the first point in time by identifying and recording direct relationships for all objects within the membership hierarchy. In such embodiments updating the record of group memberships to reflect the change in the relationship between the second object and the third object may include an incremental synchronization of the membership hierarchy that updates the record of group memberships to reflect all changes to the membership hierarchy identified at the first point in time.

In one embodiment a system for implementing the above described method may include a group membership module programmed to maintain a record of group memberships for a membership hierarchy the membership record identifying a direct relationship between a first object and a second object in the membership hierarchy. The system may also include an update module programmed to receive a membership update indicating that as of a first point in time a direct relationship between the second object and a third object changed and update the record of group memberships to reflect the change in the relationship between the second object and the third object. The system may further include a deduction module programmed to deduce based on the membership update and the record of group memberships a change in an indirect relationship between the first object and the third object as of the first point in time. The system may include at least one processor programmed to execute the group membership module the update module and the deduction module.

In some embodiments the group membership module may be further programmed to use the record of group memberships the updated change in the direct relationship between the second and third objects and the deduced change in the indirect relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time. The group membership module may also be programmed to maintain a historical record of group memberships as they existed before the first point in time.

In some examples the above described method may be encoded as computer readable instructions on a non transitory computer readable storage medium. For example a non transitory computer readable medium may include one or more computer executable instructions that when executed by at least one processor of a computing device may cause the computing device to 1 maintain a record of group memberships for a membership hierarchy the membership record identifying a direct relationship between a first object and a second object in the membership hierarchy 2 receive a membership update indicating that as of a first point in time a direct relationship between the second object and a third object changed 3 update the record of group memberships to reflect the change in the relationship between the second object and the third object 4 deduce based on the membership update and the record of group memberships a change in an indirect relationship between the first object and the third object as of the first point in time 5 use the record of group memberships the updated change in the direct relationship between the second and third objects and the deduced change in the indirect relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time and 6 maintain a historical record of group memberships as they existed before the first point in time.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

Embodiments of the instant disclosure may maintain direct indirect and or historical group membership records in a manner which reduces the time and or resources required to identify and track group membership information. For example embodiments of the instant disclosure may retrieve one or more direct relationship changes in a membership hierarchy and may use the direct relationship changes to deduce indirect membership changes and to create historical records. Some embodiments may use direct relationship changes to determine indirect relationship changes in a single pass instead of propagating and incrementally calculating changes.

Embodiments of the instant disclosure may improve the effectiveness and speed of acquiring information about membership hierarchies. For example systems and methods disclosed herein may provide current and historical group membership records in response to an electronic discovery request in a much more efficient and effective manner than prior solutions. For example algorithms disclosed herein may robust and reliable and may not add inconsistent membership records even when rerun. Embodiments of the instant disclosure may also provide various other features and advantages.

The following will provide with reference to detailed descriptions of exemplary systems for maintaining group membership records. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . will provide a description of an exemplary group membership hierarchy. will provide a description of another exemplary group membership hierarchy. In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

In addition and as will be described in greater detail below exemplary system may include a deduction module programmed to deduce based on the membership update and the record of group memberships a change in an indirect relationship between a first object and the third object as of a first point in time.

Group membership module may be further programmed to use the record of group memberships the updated change in the relationship between the second and third objects and the deduced relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time. Although illustrated as separate elements one or more of modules in may represent portions of a single module or application.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example and as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. computing device and or server computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

As illustrated in exemplary system may also include one or more databases such as database . In one example database may be configured to store a membership hierarchy a record of group memberships and or historical records .

Database may represent portions of a single database or computing device or a plurality of databases or computing devices. For example database may represent a portion of server in computing system in and or portions of exemplary network architecture in . Alternatively database in may represent one or more physically separate devices capable of being accessed by a computing device such as server in computing system in and or portions of exemplary network architecture in .

Exemplary system in may be implemented in a variety of ways. For example all or a portion of exemplary system may represent portions of exemplary system in . As shown in system may include a computing device in communication with a server via a network .

In one embodiment one or more of modules from may when executed by at least one processor of computing device enable computing device to maintaining group membership records. For example and as will be described in greater detail below one or more of modules may cause computing device to 1 maintain a record of group memberships for a membership hierarchy the membership record identifying a direct relationship between a first object and a second object in the membership hierarchy 2 receive a membership update indicating that as of a first point in time a direct relationship between the second object and a third object changed 3 update the record of group memberships to reflect the change in the relationship between the second object and the third object 4 deduce based on the membership update and the record of group memberships a change in an indirect relationship between the first object and the third object as of the first point in time and 5 use the record of group memberships the updated change in the direct relationship between the second and third objects and the deduced change in the relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time.

Computing device generally represents any type or form of computing device capable of reading computer executable instructions. Examples of computing device include without limitation laptops tablets desktops servers cellular phones personal digital assistants PDAs multimedia players embedded systems combinations of one or more of the same exemplary computing system in or any other suitable computing device.

Server generally represents any type or form of computing device that is capable of providing a membership hierarchy. Examples of server include without limitation application servers and database servers configured to provide various database services and or run certain software applications.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a wide area network WAN a local area network LAN a personal area network PAN the Internet power line communications PLC a cellular network e.g. a GSM Network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections. In one embodiment network may facilitate communication between computing device and server .

At step in one or more of the systems described herein may maintain a record of group memberships for a membership hierarchy where the membership record identifies a direct relationship between a first object and a second object in the membership hierarchy. For example group membership module in which may as detailed above represent a portion of computing device in maintains a record of group memberships for membership hierarchy . As discussed in greater detail below group membership module may maintain one or more of a variety of types of membership records.

Group membership module may maintain a record of group memberships for a membership hierarchy in a variety of manners. For example group membership module may maintain a record of group memberships for membership hierarchy by initially performing a full synchronization of membership hierarchy and subsequently performing incremental synchronizations of membership hierarchy as discussed in greater detail below. Group membership module may perform a full synchronization of membership hierarchy by identifying each object within membership hierarchy and identifying each relationship between objects within membership hierarchy .

Group membership module may identify various types of relationships between objects in a hierarchy. For example group membership module may identify direct relationships between two objects in a membership hierarchy. As used herein the phrase direct relationship generally refers to any relationship between two objects in which the objects are directly associated with each other without any other intervening objects being part of the association. For example a direct relationship between a first object and a second object may be a relationship in which the second object is a child of the first object. In some embodiments a direct relationship between a first object and a second object may be a one to one relationship between the objects. Alternatively a direct relationship between two objects may be part of a one to many relationship.

Group membership module may also identify indirect relationships between objects in a membership hierarchy. As used herein the phrase indirect relationship generally refers to any relationship between a first object and a second object in which the first object is associated with a second object through a third object. In other words a first object may be indirectly related to a second object by virtue of both the first and second objects being directly related to a third object.

Indirect relationships disclosed herein may be any suitable degree of distance apart. For example if two objects are indirectly related via a single intervening object the indirect relationship may be referred to as second degree relationship or a second degree indirect relationship. As another example an object related to another object via connections through two other objects may be referred to as a third degree indirect relationship. A direct relationship between two objects may be referred to as a first degree relationship.

As used herein the phrase membership hierarchy generally refers to any hierarchy of groups and or other objects. For example a membership hierarchy may include a directory structure such as an Active Directory structure provided by WINDOWS domain networks. Alternatively a membership hierarchy may include a file system structure such as a set of interrelated directories and objects within the directories.

Objects within a membership hierarchy may be any suitable type or form of object. For example objects within an Active Directory structure may include user groups and or user accounts. In a file system hierarchy objects may include folders and or files.

Using as examples group membership module may maintain a record of group memberships for hierarchy . shows hierarchy before a change in a relationship within hierarchy and hierarchy shows hierarchy after a change. As shown in hierarchy may include a group a group and a group . Group and group may be children of group . also show user as a child of group and user as a child of group in . Group membership module may maintain one or more of a variety of types of lists tables and or other records that show group memberships for hierarchy . For example group membership module may identify group to group memberships in hierarchy and may create a group to group membership record as show in table 1 below.

Group membership module may also identify direct group to user relationships within hierarchy and create a group to user membership record as shown in table 2 below.

The information shown in tables 1 and 2 e.g. the group to group and group to user records may be used by group membership module to prepare direct and indirect user to group membership information and to maintain a history of changes in membership in an optimized way as discussed in greater detail below. For example in a full synchronization of all objects in hierarchy group membership module may compute direct and indirect group to group relationships for all groups in hierarchy . In order to do so group membership module may insert all identified groups into a group parent child relationship record as a child of itself as shown below in table 3. Group membership module may then insert all other group relationships into the group parent child relationship record shown in table 3.

Group membership module may then create a group membership record for current group membership by indicating each relationship between a group and a user as shown below in table 4. Table 4 may indicate that the relationship is a direct relationship by indicating true in the direct column and may indicate that the relationship is an indirect relationship by indicating false in the direct column as shown in table 4.

Group membership module may create a group to group membership record that identifies direct relationships between different groups as shown in table 5 below.

Group membership module may also create a group to user membership record that shows direct relationships between groups and users as shown in table 6 below.

Using the group to group membership record and the group to user membership record group membership module may compute a group to parent child relationship record that shows parent and child relationships for each group including the group as a child of itself as shown in table 7.

Group membership module may also compute a current group membership that indicates direct and indirect relationships between groups and users as shown in table 8 below.

At step in one or more of the systems described herein may receive a membership update indicating that as of a first point in time a direct relationship between the second object and a third object has changed. For example update module in which may as detailed above represent a portion of computing device in may receive a membership update indicating that a direct relationship between a second object and a third object has changed.

Update module may receive a membership update in one or more of a variety of manners and or situations. For example update module may receive a membership update as part of an incremental synchronization of a membership hierarchy. In examples where the membership hierarchy is an Active Directory structure update module may receive a membership update by querying an Active Directory service membership enumeration Application Programming Interface API for changes to direct relationships within the Active Directory structure. In response update module may receive a membership update that indicates only changes to direct relationships within the Active Directory structure. Additionally or alternatively update module may also receive changes to one or more indirect relationships within the Active Directory structure. Update module may also receive a membership update in any other suitable manner. For example in embodiments where the membership hierarchy comprises an Active Directory structure for an enterprise receiving the membership update may include receiving an update sequence number USN change list that indicates direct relationship changes within the Active Directory structure.

Turning to the example shown in update module may receive a membership update indicating that as of a first point in time user is no longer a child of group . Similarly in the example shown in update module may receive a membership update indicating that group is no longer a child of group .

As step in one or more of the systems described herein may update the record of group memberships to reflect the change in the relationship between the second object and the third object. For example update module in may update record of group memberships to reflect the change in the relationship between the second object and the third object.

After receiving the update update module may update one or more of a variety of records to update group memberships to reflect the change in relationship between the second object and the third object. Using as examples update module may check the group to group membership record to determine whether any updates between groups need to be made. Update module may determine that no updates need to be made to the group to group membership record as shown in table 9.

In the example shown in B update module may determine that the group to group relationship records need to be updated to reflect that group is no longer a child of group as shown in table 10.

As part of updating the record of group memberships update module may additionally or alternatively update records of users within a group. Update module may also update a record of group memberships by updating any other type or form of membership record that indicates direct relationships between objects.

At step in one or more of the systems described herein may deduce based on the membership update and the record of group memberships a change in an indirect relationship between the first object and the third object as of the first point in time. For example deduction module in which may as detailed above represent a portion of computing device in may deduce based on the membership update of the record of group memberships a change in an indirect relationship between the first object and the third object as of the first point in time.

Deduction module may deduce a change in an indirect relationship in any suitable manner. For example deduction module may infer a change in a relationship between two objects by identifying a change in an intermediate relationship between the first and third objects and inferring that that change affects the indirect relationship between the first and third objects.

In one example the first object may be a grandparent of the third object and a parent of a second object with the second object being a parent of third object. Thus the first and third objects are indirectly related via the second object. In this example deduction module may deduce the indirect change between the first and third objects by identifying a change between the second and third objects and propagating the change to the relationship between the first and third objects e.g. if the third object is removed from the hierarchy the change indicating that the second object is no longer the parent of the third object may be propagated to indicate that the first object is no longer the grandparent of the third object .

Changes within a hierarchy may be propagated and deduced only for objects either directly or indirectly affected by the changes. Thus embodiments of the present invention may be more efficient than prior solutions by only tracking changes to affected object relationships in incremental synchronizations. In other words once a full synchronization for a hierarchy has been completed any future synchronizations of the hierarchy may only need to identify and or deduce direct and or indirect relationships within the hierarchy that have changed.

In some embodiments deduction module may deduce a change in an indirect relationship by propagating changes in direct relationships from group to group membership records and or group to user membership records into a current user membership record. In the examples shown in deduction module may create a current group membership record as shown in table 11 below. As shown in table 11 the relationship between group and user is updated but no other relationships are affected by this change and therefore do not need to be updated.

Deduction module may deduce or may not need to deduce group parent child relationship records which remain unchanged in the example of as shown in table 12.

Then deduction module may the remove the record for the parent child relationship between group and user from the current group membership record as show in table 13.

Turning to the example shown in deduction module may deduce a change in an indirect relationship by propagating changes in direct relationships from group to group membership records and or group to user membership records into a current user membership record. Since direct user membership did not change in the current relationship between group members and users may stay the same as shown in table 14.

Continuing with the example from deduction module may then deduce changes to the group parent child relationship record to reflect the relationship change between group and group as shown in table 15.

Deduction module may also propagate the relationship change between group and group to a current group membership record as shown in table 16.

To update membership records by propagating direct changes to indirect relationships deduction module may prepare an add list and or a remove list. For example in an Active Directory hierarchy for each affected parent group e.g. each parent group listed in a parent group child relationship record an add list may include a list of direct users of all children of the parent group including itself less existing direct and indirect users for the parent group. A remove list may include for each affected parent group e.g. each parent group listed in a parent group child relationship record a list of direct and indirect users of the parent group less direct users of all children of the parent group. As shown in the tables below records from the remove list may be inserted into a historical record. Then as reflected in the tables 14 and 16 above records identified in the remove list may be deleted from an existing group to user membership table. Similarly records from the add list may be added to existing group to user membership tables. While the examples shown above reflect relationships being removed from a membership hierarchy the process described above also applies to adding relationships to a membership hierarchy e.g. when new relationships groups and or users are added to an Active Directory .

According to various embodiments direct and or indirect relationships for a membership hierarchy may be updated within membership records in a single shot. For example deduction module may update membership records for all updated relationships at the same time i.e. without performing a recursive or iterative process to identify changes throughout a membership hierarchy . As another example a change in a first degree relationship may affects one or more other second degree relationships third degree relationships nth degree relationships etc. Deduction module may propagate the change in the first degree relationship to one or more of the second degree relationships third degree relationships and or nth degree relationships in a single pass by updating membership records for the second third and or nth degree relationships. In other words deduction module may simultaneously update all indirect relationship changes including second third and nth degree indirect changes in a chain of object relationships caused by a direct relationship change without iterating through the membership hierarchy to identify the affected indirect relationships. Thus if a change to a first degree relationship affects a second degree relationship and a change in the second degree relationship affects a third degree relationship the change to the third degree relationship may be deduced without first deducing the change in the second degree relationship e.g. the changes in the second and third degree relationships may be deduced in a single pass .

At step in one or more of the systems described herein may use the record of group memberships the updated change in the direct relationship between the second and third objects and the deduced change in the relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time. Systems and methods described herein may also maintain a historical record of group memberships as the existed before the first point in time. For example group membership module may use record of group memberships the updated change in the direct relationship between the second and third objects and the deduced change in the relationship between the first and third objects to provide a view of object relationships within the membership hierarchy as they exist at the first point in time. Group membership module may also maintain a historical record of group memberships.

Group membership module may provide the view of object relationships within a membership hierarchy in a variety of manners. For example group membership module may update the record of group memberships to reflect the change in the indirect relationship between the first and third objects. As another example group membership module may provide the view of object relationships by outputting a current status of the membership hierarchy. Additionally or alternatively group membership module may provide the view of object relationships by creating a historical record that indicates the second and third objects were directly related before the first point in time and or that the first and third objects were indirectly related before the first point in time.

Using the example shown in group membership module may create a historical membership record that indicates group was related to user before Feb. 14 2012 as shown in Table 17.

Turning to the examples shown in group membership module may create a historic membership record that indicates user was related to group user was related to group user was related to group user was related to group user was related to group and user was related to group before Feb. 14 2012 as shown in Table 18.

By keeping historical membership records for a membership hierarchy group membership module may provide a quickly and easily accessible view into historical relationships between objects. Thus past relationships between objects may be discovered without performing tedious and resource consuming historical analyses.

In some embodiments the methods disclosed herein may be performed as part of a response to a request for providing electronic discovery. For example one or more of the modules described herein may receive an electronic discovery request to provide current and or historical group membership information for objects within an Active Directory structure. In response to such a request group membership module may provide a view of object relationships within the Active Directory structure as they existed at a first point in time by providing the record of group memberships instead of recursively traversing the Active Directory structure to identify group membership information. Group membership module may also in response to the electronic discovery request provide one or more historical records of group membership to provide a view of object relationships at one or more previous points in time.

Computing system broadly represents any single or multi processor computing device or system capable of executing computer readable instructions. Examples of computing system include without limitation workstations laptops client side terminals servers distributed computing systems handheld devices or any other computing system or device. In its most basic configuration computing system may include at least one processor and a system memory .

Processor generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation random access memory RAM read only memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an ISA PCI PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure .

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface .

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation SCSI host adapters USB host adapters IEEE 1394 host adapters SATA and eSATA host adapters ATA and PATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a solid state drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system . In one example database from may be stored in primary storage device .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable storage medium. The phrase computer readable storage medium generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable storage media include without limitation transmission type media such as carrier waves and non transitory type media such as magnetic storage media e.g. hard disk drives and floppy disks optical storage media e.g. CD or DVD ROMs electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable storage medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable storage medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an application specific integrated circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Client systems and generally represent any type or form of computing device or system such as exemplary computing system in . Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a wide area network WAN a local area network LAN a personal area network PAN or the Internet. In one example client systems and or and or servers and or may include all or a portion of system from .

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent network attached storage NAS devices configured to communicate with servers and using various protocols such as NFS SMB or CIFS.

Servers and may also be connected to a storage area network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network .

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for maintaining group membership records.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

In some examples all or a portion of exemplary system in may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable storage media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules recited herein may transform database records by inferring indirect object relationships based on direct object relationships.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms a or an as used in the specification and claims are to be construed as meaning at least one of. In addition for ease of use the words including and having as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

