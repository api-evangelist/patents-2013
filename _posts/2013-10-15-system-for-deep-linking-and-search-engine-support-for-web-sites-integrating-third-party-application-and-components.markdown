---

title: System for deep linking and search engine support for web sites integrating third party application and components
abstract: A system and method for a website including a detector to detect and analyze at least the source of at least one incoming request and a uniform resource locator (URL) handler to parse the incoming request. The system and method also include a coordinator with access to at least one third party application to coordinate between the URL handler and at least one third party application and at least one renderer to receive the output of the coordinator and the detector and to generate at least one of a regular website page, an indexing adapted page and a sitemap according at least to the source of the incoming request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436765&OS=09436765&RS=09436765
owner: Wix.com Ltd.
number: 09436765
owner_city: Tel Aviv
owner_country: IL
publication_date: 20131015
---
This application claims priority from U.S. Provisional Patent Application No. 61 713 687 filed Oct. 15 2012 which is hereby incorporated in its entirety by reference.

The present invention relates to website building systems and to linking to search engines in particular.

There are many commercially available website building systems and other interactive application building tools that can be used to create and edit websites and other on line applications. End users can access such websites using client software on a variety of different platforms such as regular personal computers smart phones tablets and other desktop or mobile devices.

These website building systems can come in different configurations such as fully on line website building systems which are hosted on a server or servers connected to the internet and which are accessed using internet communication protocols such as hypertext transfer protocol HTTP . The creation editing and deployment of these website building systems are all performed on line working directly with the servers.

Website building systems can also be partially online where the website editing is performed locally on the user s machine and is later uploaded to a central server or servers for deployment. Once uploaded these website building systems behave in the same way as fully on line website building systems. Website building systems can also be off line where both the editing and running of the application occur locally. The website may be distributed to other end user machines through the internet or some other off line means.

Such website building systems may be accessed by different categories of users including in particular designers who create the websites and end users which access the created websites but may possibly modify them through mechanisms such as blog comments . Unless reference is made to one group in particular reference to a user refer to both groups of users.

Website building systems have internal data architecture in order to organize data and elements within the system. This architecture may be different from the external view of the site in question as seen by the user and may also differ from the way typical hypertext markup language HTML pages are sent to the browser. For example the internal data architecture can contain additional properties for each element on the page creator creation time access permissions links to templates etc. which are essential for editing and maintaining the site within the website building system but are not externally visible to the end user or even to some editing users . A typical architecture for a website building system based site may consist of pages containing components e.g. shape components picture components text components single and multi page containers containing mini pages etc. as is illustrated in to which reference is now made. As is shown multi page container a displays only one mini page p at a time even though it is also associated with multiple pages p. Multi page container b may also be associated with multiple mini pages qand may display some or all of them simultaneously.

Components may be content less such as a star shape which does not have any internal content though it has color size position and some other parameters or may have internal content such as a text paragraph component whose internal content includes the displayed text as well as font formatting and layout information. This content may of course vary from one instance of the text paragraph component to another.

Website building systems can also be extended using third party applications and components embedded in them. Such third party applications may be included in the website building system design environment or may be purchased or otherwise acquired separately through a number of distribution mechanisms such as from an application store AppStore integrated into the website building system from a separate web based or standalone application repository or AppStore operated by the website building systems WBS vendor or by another entity. Third party applications may also be obtained directly from the third party application vendor through an AppStore or not which would provide an actual installation module or just an activation or access code.

Third party applications may come in different formats such as widget type third party applications which are embedded inside a web site page as a component and page set type third party applications which are added to the web site as an additional page or pages. Third party applications both widget type and page set type can be either single page or multi page applications which have internal mini pages represented as an internal uniform resource locator URL structure . Widget type third party applications typically provide a home page which can be considered a default landing mini page.

The use of third party applications in website building system based websites is done through third party application instances. The website building system can usually support multiple uses of third party applications at different levels such as allowing a single third party application instance in the whole website or by allowing instances of multiple third party applications to be created within the website but only allowing one instance per site or given page. The website building system can also allow multiple instances of multiple third applications parties to be created without any limitations on the amount multiplicity or location of the third party application instances.

The website building system may support third party applications deployed on its own vendor server on the third party application server on an external 4party server or on any combination thereof. A third party application may also include elements actually running on the end user machine such as a statistically installed browser extension or dynamically run JavaScript component running inside the website building system client side code as is illustrated in to which reference is now made. A third party application may further include elements running on the website building system server. The website building system vendor s servers act as a contact point for the end users and can respond to requests possibly connecting to the third party application s vendor s server to receive required information. The website building system may create direct connections as required between the client computer and the third party application vendor s servers such as when video streaming is required.

Included third party application instances can have their own internal content similar to the way in which regular components include internal content such as a text paragraph component . The third party application may manage this content independently of the website building system and of the website generated using the website building system as is illustrated in to which reference is now made. As can be seen main page a contains third party application instances b and c from different third party applications. The output from included third party applications may be integrated into the created web site in a number of ways through server side processing client side processing iframes or otherwise.

Created websites and pages may be accessed using their URL which typically provides a direct link or deep link to specific pages within the website. The URL of a particular website may typically be in the format of 

The website building system may also provide hierarchy support e.g. having page groups which include created pages. In this case the assigned URL may be for example 

Search engines such as Google Inc. s Google or Microsoft s Bing are the most common way to access websites today. Many users do not even bother remembering the regular site URL or name but rather perform a web search to get to the required site whenever needed. Search engines typically index multiple pages within the site not just the top level site entry pages but internal site pages as well. These links to internal pages are known as deep links. Many website building systems incorporate search engine optimization in order to ensure that the website being built can be accessed by search engine web crawlers or spiders. Website building systems provide for each page an alternate version of the displayed page for use by spiders. This version includes the extracted text from the components of a page and is formatted and optimized for reading. This version may be known as the search engine friendly version of the page. The website building system can also implement search engine optimization techniques in the creation of these page variants so as to improve the ranking of the specific pages by crawling search engines. Aside from displaying the search engine friendly version of the page the system can also generate relevant sitemaps to guide the spiders as to which URL s to request so that all site pages are indexed.

There is provided in accordance with a preferred embodiment of the present invention a system for a website. The system includes a detector to detect and analyze at least the source of at least one incoming request and a uniform resource locator URL handler to parse the incoming request. The system also includes a coordinator with access to at least one third party application to coordinate between the URL handler and at least one third party application. The system also includes at least one renderer to receive the output of the coordinator and the detector and to generate at least one of a regular website page an indexing adapted page and a sitemap according to the source of the incoming request.

Moreover in accordance with a preferred embodiment of the present invention the URL handler includes an identifier to identify and extract a page identifier for at least one third party application instance and a redirector to redirect the page identifier to the at least one third party application instance. It also includes a composer to compose an outgoing composite URL using the at least one third party application instance through at least one of URL prefix substitution and callback application programming interface API provided to the at least one third party application instance.

Further in accordance with a preferred embodiment of the present invention the outgoing composite URL provides a deeplink to at least one of the at least of one third party application internal pages and regular website pages on the website and the deeplink is useable from within the third party application.

Further in accordance with a preferred embodiment of the present invention the at least one third party application instance has at least one of a user and system defined name.

Additionally in accordance with a preferred embodiment of the present invention the at least one renderer includes a search engine friendly generator to generate a search engine friendly page including the third party application elements.

Moreover in accordance with a preferred embodiment of the present invention the search engine friendly page is a combination of the website search engine friendly page and the at least one third party application search engine friendly page.

Further in accordance with a preferred embodiment of the present invention the search engine friendly generator includes a substituter to substitute HTML iframe tags and to integrate metadata information from the at least one third party application pages into the search engine friendly page.

Still further in accordance with a preferred embodiment of the present invention the at least one renderer includes a sitemap generator to generate a combined sitemap based on the sitemap of the at least one third party application generated information and the sitemap of the website.

Additionally in accordance with a preferred embodiment of the present invention the combined sitemap entries include composite URLs pointing to the multiple at least one third party application pages inside a single containing website page.

Moreover in accordance with a preferred embodiment of the present invention the combined sitemap includes timestamp information provided by the at least one third party application.

Further in accordance with a preferred embodiment of the present invention the at least one renderer includes a regular page generator to generate at least one of regular pages and regular pages containing the at least one third party application content.

Still further in accordance with a preferred embodiment of the present invention the coordinator includes a search engine optimization enhancer to enhance search engine optimization for the at least one third party application and a search engine optimization blocker to block bad search engine optimization techniques for the at least one third party application search engine optimization techniques.

There is provided in accordance with a preferred embodiment of the present invention a system for a website integrating at least one third party application the system includes a performance monitor within the system to monitor the at least one third party application performance and errors and to perform at least one of alert generation log generation and disable said at least one third party application when required. The system also includes a BI gatherer within the system to gather business intelligence from the at least one third party application and to generate at least one of alert and a log.

There is provided in accordance with a preferred embodiment of the present invention a method for a website. The method includes detecting and analyzing at least the source of at least one incoming request parsing the incoming request and coordinating between the incoming request and at least one third party application. The method also includes generating at least one of a regular website page an indexing adapted page and a sitemap according to the source of the incoming request.

Moreover in accordance with a preferred embodiment of the present invention parsing includes identifying and extracting a page identifier for at least one third party application instance and redirecting the page identifier to the at least one third party application instance. It also includes composing an outgoing composite URL using the at least one third party application instance through at least one of URL prefix substitution and callback API provided to the at least one third party application instance.

Further in accordance with a preferred embodiment of the present invention the outgoing composite URL provides a deeplink to at least one of the at least of one third party application internal pages and regular website pages on the website and the deeplink is useable from within the third party application.

Moreover in accordance with a preferred embodiment of the present invention the at least one third party application instance has at least one of a user and system defined name.

Further in accordance with a preferred embodiment of the present invention the generating includes generating a search engine friendly page including the third party application elements.

Still further in accordance with a preferred embodiment of the present invention the search engine friendly page is a combination of the website search engine friendly page and the at least one third party application search engine friendly page.

Additionally in accordance with a preferred embodiment of the present invention the generating includes substituting HTML iframe tags and integrating metadata information from the at least one third party application pages into the search engine friendly page.

Moreover in accordance with a preferred embodiment of the present invention the generating includes generating a combined sitemap based on the sitemap of the at least one third party application generated information and the sitemap of the website.

Further in accordance with a preferred embodiment of the present invention the combined sitemap entries include composite URLs pointing to the multiple at least one third party application pages inside a single containing website page.

Still further in accordance with a preferred embodiment of the present invention the combined sitemap includes timestamp information provided by the at least one third party application.

Additionally in accordance with a preferred embodiment of the present invention the generating includes generating at least one of regular pages and regular pages containing the at least one third party application content.

Moreover in accordance with a preferred embodiment of the present invention the coordinating includes enhancing search engine optimization for the at least one third party application and blocking bad search engine optimization techniques for the at least one third party application search engine optimization techniques.

There is provided in accordance with a preferred embodiment of the present invention a method for a website integrating at least one third party application. The method includes monitoring the at least one third party application performance and errors and performing at least one of alert generation log generation and disable the at least one third party application when required and gathering business intelligence from the at least one third party application and generating at least one of an alert and a log.

It will be appreciated that for simplicity and clarity of illustration elements shown in the figures have not necessarily been drawn to scale. For example the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further where considered appropriate reference numerals may be repeated among the figures to indicate corresponding or analogous elements.

In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the invention. However it will be understood by those skilled in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures and components have not been described in detail so as not to obscure the present invention.

Applicants have realized that users of a website building system that incorporates single and multiple instances of third party applications would like their sites to be searchable through regular web search engines such as Google and Bing which use spiders to index a website as discussed herein above . Applicants have also realized that dynamic web sites such as the sites created using a website building system do not have regular static HTML pages. Instead the pages are dynamically generated by the website building system server component or some other technology such as ASP or PHP and may contain content not easily read by spiders.

Existing web site building systems usually provide deep links to specific main pages on the site. However such main pages may have multiple configurations due to third party applications within the particular page showing different mini pages inside them the system may support one such third party application per main page or possibly more . Existing systems also do not provide a way to deep link to a specific configuration and do not provide a method for a given third party application page to use a provided outgoing deep link to a specific configuration of the same main page or of a different main page.

Furthermore existing systems do not provide a way for spiders to separately scan and thereby index multiple configurations of composite pages which include the wrapper main page together with each mini page of contained third party application or applications.

Applicants have also realized that content from a third party application is often combined with the content of the main page using the HTML iframe tag or multiple such iframe tags and that search engines typically do not follow iframe tags or search their content. iframe tags need to be dissolved in order to access their content. Thus third party application content may not be visible to these search engines.

It will be appreciated that the actual execution of the third party application often involves running all or some of its code on a separate third party application vendor server. This server may malfunction and fail thus failing to deliver the content of the mini pages from the third party application. If this happens when a human user is accessing the combined site the user may complain or provide feedback. However when this happens during a spider run valuable content which may otherwise be accessible may be lost causing parts of the combined website to be un indexed or improperly indexed.

As discussed herein above websites may incorporate search engine optimization. The application of these techniques often requires professional expertise together with specific knowledge of the site content. The web site developer may be better qualified than the third party application provider to apply such optimization techniques and to know what the optimal techniques are. It will be appreciated that some search engine optimization techniques are considered as bad practice by the major search engine providers and their use in a web site may cause the search engine to penalize the website or even remove it altogether from the search engine index . Thus if a third party application included in the site uses an improper technique for search engine optimization the entire site may be penalized without the site designer being aware of such penalization.

Reference is now made to which illustrates the different elements that may be involved when using a website building system that integrates a third party application together with search engine optimization. It will be appreciated that all the elements may communicate with the website building system via any communication medium such as the internet. It will be further appreciated that a user may also communicate with the third party application and or the search engine independently of the website building system.

Reference is now made to which illustrates a system for the implementation of deep linking and search engine optimization support and control in website building systems which integrate third party applications in accordance with a preferred embodiment of the present invention. System comprises a website building system server and a client . Website building system server may be in communication with a third party application server . Website building system server may host a website building system which includes a database coordinator and a database . Website building system may further comprise a web page composer and a proxy coordinator . Reference is now made to which illustrates the elements of web page composer which may further comprise an access type detector a displayer a renderer coordinator a URL handler a page content composer a regular renderer a sitemap renderer and a search engine friendly renderer . URL handler may further comprise a URL parser and a URL composer . Reference is now made to which illustrates the elements of proxy coordinator which may further comprise a third party application TPA content coordinator and an intelligent third party application processor . Intelligent third party application processor comprises a performance monitor a search engine optimization enhancer a search engine blocker and a business intelligence gatherer . The functionality of the elements of system is described in more detail herein below. Third party application server may host a third party application . A user at client may access pages from website building system either directly using a specific URL or via URLs retrieved from a search engine . Database may store website content and created pages and may also store created URLs and third party application access logs as described in more detail herein below.

It will be appreciated that for the sake of illustration system is of an interactive editing environment used by a designer which handles website creation as well as website maintenance. However a website building system might be a programmer oriented one in which the website building system infrastructure is provided to the designer as a set of components including third party applications as described below and the designer developer is responsible for the integration of the supplied infrastructure components so to create the website pages.

It will be also appreciated that for the sake of illustration system comprises an online website building system which embeds a third party application hosted on a different web server . It will be further appreciated that system may be applied to partially online as well as off line systems and to any combination of third party application hosting scheme such as client side elements web site building system vendor servers third party applications vendor servers 4party servers etc. It will be appreciated that in an off line embodiment a server based element separate from web site building system and any of its created sites may be required to implement third party application support and search engine optimization capabilities as described in more detail herein below.

It will be further appreciated that system may support the full gamut of third party application inclusion options i.e. it may allow the inclusion of multiple instances of the same or multiple third party applications in the same main page or containers as well as the inclusion of multiple page set type third party applications which are handled as additional site pages instead of elements inside specific pages. It will be appreciated that system may also only implement a subset of these options too or may place restrictions on third party application inclusion possibilities.

System may also be applied to on line application editing systems which use the internet or any other network connection and use non browser client side software to view the created online application. In this scenario system may not need to use the specific technologies e.g. IP communication HTTP HTML etc. which underlie the regular web infrastructure.

It will be further appreciated that system may also be hosted by a different server set such as in house servers for a large organization. System may also be a separate software system or may be embedded inside a hardware system implemented in hardware or firmware. System may also be embedded inside a standalone system as well as inside a system embedded within a larger host system through an API connection a web services connection or other type of interface.

As discussed herein above third party applications may be included inside existing main site pages or may be added to the main site. System may be configured to apply limitation to the inclusion of third party application for example by allowing only one third party application per page or by requiring third party application to be included inside specific types of container components. Third party application may also implement inclusion of user generated content at different levels such as an e store third party application which may be customized by user to include his or her items for sale or a blog third party application which may contain blog entries added by user . This additional data may be stored in database or may be held independently on third party server or on any external 4party server or combination thereof.

It will be appreciated that third party application may also be parameterized such as to allow each instance of mapping third party application to specify which map resolutions should be available to user . Third party application may also typically provide a main display frame which is integrated in to the pertinent website page using an HTML iframe tag or similar mechanism. Third party application may also provide additional versions via additional iframes which are included in the website as alternative widgets. For example a blog third party application may provide an additional widget showing the latest blog entries which may be added to the main site s home page. Third party application may also provide additional HTML iframes which are not part of the regular displayed page. It will also be appreciated that third party application may use the API connecting it to website building system to provide additional iframes for extra dialogs possibly providing to the website building system additional display parameters for these dialogs.

Reference is now made to which illustrates how a bookmark service may provide a widget which only provides a small button . Pressing button may open the full bookmark dialog via an additional iframe provided by third party application . It will be appreciated that when working in the design environment of web site building system pressing button in a different way such as by using a keyboard combination instead of a mouse click may open a different dialog configuration dialog through a different iframe which is also provided by third party application .

As discussed herein above users of website building system would like their sites to be searchable through regular web search engines which use spiders crawlers to index the site. It will be appreciated that the purpose of system is to employ URL assignment and parsing techniques within the interface between the website building system and the embedded third party applications in order to ensure that content from third party application s is also available to search engines for indexing and is properly integrated with the main pages containing the pertinent third party application s .

An example of such third party application content may be a component containing video which may have text captions which are stored encoded and interleaved within the video frames inside the video file. Typically text from third party application text from third party application mini pages multi page container mini pages or other sources contained inside iframes may be ignored by spiders.

Access type detector may detect the presence and type of search engine spider in action or may receive a URL request from user . The URL request from user may be in the form of a manually entered URL of a specific page the homepage of a requested site or may be a request to a general page redirected by search engine . Detector may detect the presence of the spider via the spider originating IP via the request structure of the spider via the request header of the spider or via the use of AJAX crawling URLs. Detector may then forward this information to renderer coordinator who may instruct the relevant renderer and to provide a regular page a sitemap or an appropriate search engine friendly version of the pertinent page according to the request. It will be appreciated that regular renderer may generate a regular page for display sitemap renderer may provide a sitemap to the spider and search engine friendly renderer may create the search engine friendly version of the pertinent page whenever a page is requested by the spider. As discussed hereinabove the search engine friendly version of the page may include the extracted text from the components on the page in an appropriate optimized format for the search engine from where the spider has been sent. The search engine friendly page may also substitute HTML iframe tags with spider visible tags such as HTML section tags.

It will be appreciated that all three renderers and may work together with both URL handler and page content composer in order to return to renderer coordinator the correct page or sitemap. Renderer coordinator may return the final page sitemap to user search engine via displayer as described in more detail herein below.

URL parser may interpret the incoming URLs from the URL used to access the page or from URLs contained inside handled pages may extract an identifier for any third party application instances that may be required and may instruct URL composer to reconstruct the URL accordingly for use taking into account the extracted identifiers for third party application instances either for direct use or for use inside created pages e.g. replacing existing URLs which are not integrated with the pertinent website building system . It will be appreciated that page content composer may either instruct database coordinator to provide content stored on database or proxy coordinator to provide content from third party server via TPA content coordinator accordingly.

As discussed hereinabove URLs typically provide deep or direct links to specific pages in a website. It will be appreciated that embedded third party applications which contain multiple mini pages of their own may be included inside a main page containing the entire third party application instance and its mini pages from herein known as multi page third party application. It will also be appreciated that a regular web page not involving a third party application may have multi page containers also containing multiple mini pages. These included mini page collections may be thought of as a mini web site within a site.

URL composer may provide an access mechanism using a permanent link known as a permalink URL such as 

Where TPA is third party application MPC are multi page containers and the ThirdpartyURL is a third party application internal URL which may have multiple separated elements and or multiple URL parameters and which is managed by third party application in the case of a third party application container or by a website building system managed multi page container internal page in the case of multi page containers .

It will be also be appreciated that URL composer may use a shorter form of URL for website building system that only allows a single page third party application per main page which may omit the TPAorMPCname i.e. 

Proxy coordinator may act as an interface between website building system and third party application server allowing user at client to interact with third party application unless a direct connection is available such as the one illustrated in .

URL composer may then forward the URL to third party application via proxy coordinator . Third party application may then provide a URL to the pertinent content of the section required such as 

For example ID may be an instance ID for third party application inclusion instance which may be unique at third party application vendor level. This may allow third party application to use this ID to save instance specific settings etc. The URL may also include additional parameters after the character e.g. login status premium status etc. .

It will be appreciated that there may be scenarios when a single page may contain instances of multiple but different third party applications or multi page containers. For example URL composer may create for a site containing a blog third party application the following URL 

Alternatively website building system may allow multiple instances either by providing automatic IDs to differentiate between the multiple instances for example TPA01 TPA02 or by allowing user to assign specific instance names to multiple instances of the same third party application in a single page. Such a user assigned name can also help in creating a more mnemonic or clearer name and thus may be useful even if no single page multiple instances exist. It will be appreciated that if this assigned name is unique at the website level URL composer may create a shorter form to be used such as 

where TMI is the user assigned name. It will also be appreciated that these links act as permalinks to the specific mini pages i.e. they do not change as additional pages are added or modified. When accessed directly by user the main web site will open at the specific main page e.g. the website page of the blog while requesting the embedded third party application to open the specific mini page e.g. the specific blog entry .

Website building system may also allow multi page third party applications inside a single page either side by side or in a containment hierarchy or a separate position indicator may be required for each of the embedded third applications . In these cases URL composer may create a permalink which provides multiple position indicators using formats such as 

or where TPURLx is the numbered third party application URL and TMIx is the numbered user assigned name as described herein above.

It will be appreciated that occasionally third party application mini pages may need to include deep links going directly from them and not those created by URL composer . Such deep links may point to different mini pages inside the same third party application instance to mini pages in a difference instance of the same third party application in the same main site or to mini pages in a different third party application from the same third party application vendor in the same main site. Deep links could also point to mini pages in a different third party application from a different third party application vendor in the same site to main pages in the same site which do not belong to third party application or to main pages or third party application mini pages in a different main site.

These deep links may be constructed by third party application by building up on a basic URL provided by URL composer or by using a JavaScript API which is implemented in the client code for website building system .

For example for the first scenario if a third party application mini page at ThirdPartyURL1 requires a deep link to a third party application mini page at ThirdPartyURL2 URL composer may provide a sectional URL prefix parameter which may have the value 

as described herein above. Third party application may take the value of the sectional URL parameter and concatenate it to its deep link to get the site URL pointing at the content of the ThirdPartyURL2 state of third party application . Third party application may then format the HTML anchor a tag using the concatenated URL and by using a target attribute  top which instructs the browser to open the concatenated URL when the link is clicked and logically replaces the URL of the containing combined page with the concatenated URL. Thus if the containing page is refreshed for example the correct deeplink may be re loaded.

When navigation to a different deep linked mini page or main page is required third party application may call a JavaScript method provided by system . This JavaScript method may do the navigation required and may update the browser top window URL to display the new linked page. System may provide a number of variants for this method as per the different types of outgoing links as described herein above. Some variants may require additional information identifying the additional third party application mini pages main pages sites to which the outgoing link points. System may also identify the target site page third party application instance and may construct the relevant combined URL and links to it.

As discussed hereinabove renderers and may return regular pages sitemaps or search engine friendly pages to displayer for display. Regular renderer may be activated whenever a regular page is served for display using the displayed URL and may integrate the main page from the main site with the mini pages provided by third party application for the contained third party application widgets and mini pages. It will be appreciated that whenever a URL is requested which contains a permalink to an internal third party application page or pages in the case of multiple third party applications in one page regular renderer may request the specific pages widgets from the relevant third party application s as described herein above and may integrate them into the appropriate main page.

Sitemap renderer may be used whenever a sitemap is requested. Sitemap renderer may call on each of the embedded third party applications to provide its own sitemap for all instances of third party applications contained in the main page. Sitemap renderer may then integrate these sitemaps together with the sitemap of the main site in order to provide a fully integrated sitemap. As part of this integration process the internal URLs from third party application returned as part of the sitemap for third party applications may be converted by URL composer to composite URLs which can be later used by search engine or user for external access to the third party applications mini pages contained in the main page.

It will be appreciated that when sitemap renderer generates the sitemap by a given third party application third party application may enumerate the mini pages contained in the specific instance based on the internal data not otherwise exposed. This may include for example creating a URL for each record in an internal database stored in a database residing on the third party application server even if the containing web site has no such database record enumeration function. Furthermore different instances of the same third party application even these located in the same containing page may return different instance specific sitemaps since the URLs included in the sitemap of third party applications may depend for example on instance specific parameters or on containing page specific values.

Sitemap renderer may also use the third party application provided timestamps in order to set the timestamp of the containing page and to possibly prevent unnecessary indexing and then may return the integrated file to the spider via displayer .

Search engine friendly renderer may be used when a page is requested by a spider and may create a search engine friendly version of the main page. If only the main page is requested renderer may include the search engine friendly version of the home page of each third party application embedded in the page as well as the additional mini page combination as described herein below. If a URL is requested which refers to a specific third party application mini page s renderer may include the search engine friendly version of the requested third party application mini pages s within the main page.

Reference is now made to which illustrates how a main page with a third party application having multiple mini pages may be indexed. Main page a includes the third party application b home page c and the additional mini pages c1 c2 and c3 . It will be appreciated that in this scenario the indexing spider may index the following combined pages all of which are generated by search engine friendly renderer usually based on composite URL s created in the combined sitemap as generated by the sitemap renderer 

Reference is now made to which illustrates a main page a with two third party applications b and d having multiple mini pages c1 c2 c3 for b and e1 e2 for d . In this scenario the indexing spider may index the following combined pages 

Thus the indexing spider may index all possible mini pages for each embedded third party application ensuring that all other embedded third party applications instances display their home mini page.

It will be appreciated that search engine friendly renderer may unite pages using the HTML section tag instead of the non indexed iframe tag thus overcoming the issues concerning non indexed iframe tag content as discussed herein above. It will be further appreciated that as part of the unification of pages links from the third party application may be formatted to fit the relevant deep link URL structure in the main site. For example a link from a blog home page to a post page in the pertinent blog may be changed so that it links to the post in the context of the website building system site. Title description tags and keywords may all be taken from third party application and merged into the meta tags of the returned pages. Thus the indexing spider may follow links included in third party application so as to locate additional pages both inside and outside of third party application which are not included in the sitemap of third party application in order to index them as well.

It will also be appreciated that displayer may be instructed by renderer coordinator to run the returned page with executable code e.g. server side Javascript or other server side components being activated. In the case of user performing a client side operation which activates a server side component which accesses a database to retrieve records for display displayer may display the final page to user . It will be further appreciated that typically for a spider request displayer may not be required to display the page but may forward the page to search engine for further processing. In the case of a smart spider which may try to exercise multiple elements of a page for example cause the page access multiple database records and display them displayer may display the pertinent page and perform the relevant actions.

Reference is now made to which illustrate the different processes which may require the use of renderers . illustrates the process that is carried out when a regular page request is made by user search engine or a spider . As is shown a request may be made for page a1 from website building system together with element c3 from third party application . Renderer coordinator may process the request and request a copy of page a1 from database via database coordinator . Simultaneously renderer coordinator may instruct proxy coordinator via TPA content coordinator to retrieve element c3 from third party server . Regular renderer may receive both page a1 and element c3 and create a regular page which is returned to user search engine spider via displayer .

Reference is now made to which illustrates the process that is carried out when a sitemap request is made by spider . Renderer coordinator may process the request and request a copy of the sitemap of the pertinent website from database via database coordinator . Simultaneously renderer coordinator may instruct proxy coordinator to retrieve the sitemap of third party application which may be stored on third party server . Sitemap renderer may combine the two sitemaps or multiple site maps if more than one third party application is in use to create a composite sitemap which may be returned to spider .

Reference is now made to which illustrates the process that is carried out when a search engine friendly page request is made by search engine or spider . As is a shown similar to the process in a request may be made for page a1 from website building system together with element c3 from third party application . SEF renderer may receive both page a1 and element c3 and create a search engine friendly page which may be returned to spider via displayer . As discussed hereinabove the generated search engine friendly page may differ from the generated regular page in that renderer may remove or substitute any iframe tags which may not be search engine friendly.

Search engine may collect and store the associated URLs of the returned pages and search engine retrieval may return the stored permalinks generated by system . Based on the permalinks system may return to user the generated page including embedded third party application widgets and mini pages via renderer coordinator and displayer as described herein above. Search engine may also provide information on the query and search terms used to locate the desired page e.g. passed through the HTTP REFERER http header . In this scenario proxy coordinator may pass this information to third party application so that it may for example highlight the search terms to improve search engine optimization. Other parameters may also be passed via proxy coordinator such as a login or free premium status.

It will be appreciated that TPA content coordinator may coordinate the retrieval of content from third party application mini pages and components. Intelligent third party application processor may be used to add additional functionality both search engine optimization related and not by modifying the information passed in both directions.

It will be appreciated that website building system may also act as a proxy server for the input from output to the spider or user unless a direct connection has been established and therefore may implement additional functionality by modifying or analyzing the information passed in both directions. The use of website building system as a proxy server may be automatic or may be controlled by user or by the third party application provider.

If third party application does not provide a required mini page for display within a given time frame completely or partially performance monitor may decide whether web page composer may display the page regardless possibly using dynamic layout techniques to adjust its layout. Alternatively if third party application does not provide the required third party application search engine friendly mini page within a given time frame performance monitor may elect not to present this page and therefore it may not be included during indexing. Performance monitor may issue alerts internally to web page composer to the website building system vendor staff to the third party application staff or to user . Performance monitor may also create a performance or error log which may be saved in database via database coordinator . These alerts may be particularly useful during the stage of third party application search engine friendly mini page retrieval for spider indexing since during this process no human user is involved and errors may go unnoticed. Performance monitor may also disable third party application in the context of a specific website building system site or suspend and or remove it from the AppStore if sufficient timing or error returns are detected.

Typically automatic search engine optimizers do not work together with third party applications and third party application may provide a dedicated server or endpoint for search engine optimization. Search engine optimization enhancer may apply additional search engine techniques to the third party application mini pages before they are included in the finalized search engine friendly page in order to improve search engine ranking. For example if third party application is normally loaded from the URL 

It will be appreciated that as part of the merging of the third party application mini page into the website building system main page search engine optimization enhancer may extract the body tag of the third party application page including it as the content of the third party application component. In addition enhancer may extract different meta tags from the third party application mini pages and may merge them with the meta tags on the website building system page. It will further be appreciated that enhancer may apply additional optimization techniques to the third party application search engine friendly mini pages before including them in the containing site page for the purpose of indexing so as to improve search engine ranking.

If a given search engine optimization technique is known to be harmful to the search engine ranking but is still performed by third party application search engine optimization blocker may identify and then remove the use of this technique thereby enforcing a type of quality control on the search engine friendly mini pages provided by third party application . This may prevent a badly written un optimized or possibly outdated search engine optimization technique from harming the ranking of the rest of the site. It will be appreciated that in this manner search engine optimization blocker may also act as a filter or a censor for external search engine optimization techniques. Search engine optimization blocker may further generate alerts create an alert log or disable third party application locally or globally as noted above for performance monitor .

BI gatherer may perform business intelligence gathering on behalf of third party application providers collecting information about user requests and displayed pages and logging them to database via database coordinator . This is important for example in a scenario in which the website building system has access to detailed user information which can then be gathered and summarized to third party application without having to provide the actual detailed user information to third party application .

It will be appreciated that the application of any of the modules of intelligent third party application processor may be automatic or may be controlled by user or by the third party application provider.

Proxy coordinator may instruct database coordinator to store all configuration and collected data on database and may instruct database coordinator to retrieve data as required.

Thus system may provide for each page an alternate version of the displayed page which may be formatted and optimized for reading by search engine spiders i.e. search engine friendly . System may also provide a search engine friendly version of the mini pages from a third party application using a modified URL or possibly a specific parameter in conjunction with the URL. System may also implement search engine optimization techniques in the creation of page variants to improve the ranking of the specific pages by crawling search engines. System may also display the search engine friendly page version instead of the regular version when crawler access is detected through any means such as the originating IP request structure request headers etc. System may then generate a site map file in order to guide the spiders in question to which URLs to request so that all relevant site pages may be indexed.

Unless specifically stated otherwise as apparent from the preceding discussions it is appreciated that throughout the specification discussions utilizing terms such as processing computing calculating determining or the like refer to the action and or processes of a computer computing system or similar electronic computing device that manipulates and or transforms data represented as physical such as electronic quantities within the computing system s registers and or memories into other data similarly represented as physical quantities within the computing system s memories registers or other such information storage transmission or display devices.

Embodiments of the present invention may include apparatus for performing the operations herein. This apparatus may be specially constructed for the desired purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks magnetic optical disks read only memories ROMs compact disc read only memories CD ROMs random access memories RAMs electrically programmable read only memories EPROMs electrically erasable and programmable read only memories EEPROMs magnetic or optical cards Flash memory or any other type of media suitable for storing electronic instructions and capable of being coupled to a computer system bus.

The processes and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct a more specialized apparatus to perform the desired method. The desired structure for a variety of these systems will appear from the description below. In addition embodiments of the present invention are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

While certain features of the invention have been illustrated and described herein many modifications substitutions changes and equivalents will now occur to those of ordinary skill in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the invention.

