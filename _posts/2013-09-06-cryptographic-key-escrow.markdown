---

title: Cryptographic key escrow
abstract: An escrow platform is described that can be used to enable access to devices. The escrow platform can be used to sign cryptographic network protocol challenges on behalf of clients so that the secrets used to sign cryptographic network protocol challenges do not have to be exposed to the clients. The escrow platform can store or control access to private keys, and the corresponding public keys can be stored on respective target platforms. A client can attempt to access a target platform and in response the target platform can issue a challenge. The client platform can send the challenge to the escrow platform, which can use the corresponding private key to sign the challenge. The signed challenge can be sent back to the client, which can forward it to the target platform. The target platform can verify the expected private key and grant access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09288208&OS=09288208&RS=09288208
owner: Amazon Technologies, Inc.
number: 09288208
owner_city: Reno
owner_country: US
publication_date: 20130906
---
As an increasing number of applications and services are being made available over networks such as the Internet an increasing number of content application and or service providers are turning to technologies such as cloud computing. Cloud computing in general is an approach to providing access to electronic resources through services such as Web services where the hardware and or software used to support those services are dynamically scalable to meet the needs of the services at any given time. A user or customer typically will rent lease or otherwise pay for access to resources through the cloud and thus does not have to purchase and maintain the hardware and or software to provide access to these resources.

Various services have been developed that enable a customer to adjust the compute capacity for an application or service in the cloud over time making Web scale computing easier for developers. In some cases a Web service interface is provided that enables a customer to manage computing capacity such as to obtain or boot new server instances in order to quickly scale capacity both up and down as computing requirements change.

Typically access control of computing resources can be implemented using a cryptographic scheme such as using asymmetric cryptography. Public and private key pairs can be generated for each user or at each time a user requests access to the computing resources. As the number of users or the number of requests grows key management tends to become ever more difficult.

Accordingly it is desirable to develop an improved systems methods and techniques for key management for access control of networked computer resources.

This document describes an escrow platform that can be used to enable access to devices. In an example embodiment the escrow platform can be used to sign cryptographic network protocol challenges on behalf of clients so that the secrets used to sign cryptographic network protocol challenges do not have to be exposed to the clients. For example the cryptographic network protocol can be the Secure Shell SSH protocol and the secret can be a private key of a public key private key pair. The escrow platform can store or control access to private keys and the corresponding public keys can be stored on respective target platforms. A client can attempt to access a target platform according to the cryptographic network protocol and in response the target platform can issue a challenge. The client platform can send the received challenge or information based at least in part on the received challenge to the escrow platform which can use the corresponding private key to sign the challenge or information based at least in part on the received challenge . The signed challenge or information can be sent back to the client which can forward it to the target platform. The target platform can verify that the expected private key was used to sign the challenge and grant access. Reference will now be made in detail to example embodiments which are illustrated in the accompanying drawings and described in the following text and claims. When appropriate the same reference numbers are used throughout the drawings to refer to the same or like parts.

In general implementations consistent with the present teachings disclose a remote access procedure for one or more target platforms using an escrow platform. The escrow platform can be embodied as a hardware configuration or a software configuration. In addition in some embodiments the escrow platform can include or be associated with a web server that exposes a web service interface to the escrow platform which can be accessible via a public Internet Protocol address IP address i.e. a public facing web service and or a private IP address i.e. an internal web service accessible within a private network such as a service provider network . When exposed as a web service the escrow platform can provide an application programming interface API for example a web API through which other devices and or services can communicate. The escrow platform can provide via a web service services including but not limited to cryptographic functionality such as cryptographic key generation key escrow and digital signature functionality. The one or more target platforms can include a physical i.e. physical computing platforms or virtual machines e.g. one or more instances and can include heterogeneous assembly of network devices including but not limited to servers databases switches routers etc.

In implementations the client device can be a computer including but not limited to a desktop a laptop a tablet or a smartphone device. The client device can communicate with the target platform and the escrow platform using one or more application stored on the client device including but not limited to a web browser with one or more application plugins e.g. a Java software platform. The client device can also include a security agent that can function to establish or communicate with the escrow platform and or target platform using a secure communication channel and respectively. For example the secure communication channel can be established once the client device is authenticated by the escrow platform . The secure communication channel can include but is not limited to communication using a secure socket layer SSL protocol. The secure communication channel can be established between the client device and the target platform once the client device is granted access to the target platform . For example the security agent can include a SSH client module that can communicate with the target platform using the SSH protocol.

The target platform can be one or more devices such as devices similar to the client device including but not limited to a virtual machine instance a database a desktop computer system a laptop computer system a tablet or a smartphone device as well as a network device such as a switch or a router. The target platform can include a security agent for example a SSH server module that can communicate with the client device using the SSH protocol.

In implementations the network can include wired or wireless networks using one or more wireless technologies such as infrared IR Near Field Communication Zigbee Bluetooth IEEE standard 802.11 a b g and or n IEEE Standard 802.16 WiMAx Code Division Multiple Access CDMA Time Division Multiple Access TDMA GSM and the like. In other implementations the client and target platform may operate on different networks and there may be one or more intermediate networks used to transport traffic between devices.

In an example embodiment the escrow platform can be exposed as a web service to the client device and the target platform . Thus the escrow platform can include or be associated with a programmatic interface e.g. Web Service API and or customer facing or user facing interface. In various embodiments when exposed as a web service the escrow platform may be configured according to a web services model. For example in some embodiments the interface to the escrow platform may be accessible by clients as a web services endpoint having a Uniform Resource Locator URL to which web services calls generated by service clients e.g. client device and or target platform may be directed for processing. Generally speaking a web service may refer to any type of computing service that is made available to a requesting client via a request interface e.g. API that includes one or more Internet based application layer data transport protocols such as a version of the Hypertext Transport Protocol HTTP or another suitable protocol.

Web services may be implemented in a variety of architectural styles using a variety of enabling service protocols. For example in a Representational State Transfer REST style web services architecture the parameters that are pertinent to a web services call e.g. specifying the type of service requested user credentials user data to be operated on etc. may be specified as parameters to the data transport command that invokes the web services call to the web services endpoint such as an HTTP GET or PUT command. In some implementations REST style web services architectures are stateless in that each web services call may contain all the information necessary to process that call without reference to external state information. In contrast to REST style web services architectures document based or message based web services architectures may encode the parameters and data pertinent to a web services call as a document that may be transmitted to a web services endpoint and then decoded and acted upon by the endpoint. For example a version of eXtensible Markup Language XML or another suitable markup language may be used to format the web services request document. In some embodiments the markup language used to format the request document may delimit parameters that control the processing of the request while in other embodiments certain features of the markup language itself may directly control aspects of request processing. Additionally in some embodiments the resulting document may be encapsulated within another protocol such as a version of the Simple Object Access Protocol SOAP for example in order to facilitate processing of the web services request by the endpoint.

Other protocols may also be employed within various embodiments of web services architectures. For example a version of Web Services Description Language WSDL may be employed by a web services endpoint to publish its interfacing requirements to potential clients. Web services endpoints may make themselves known to potential clients through a directory protocol such as a version of the Universal Description Discovery and Integration UDDI protocol. Numerous other types of protocols relating to the provision of computing services via web services interfaces may exist and any given web services implementation may use any suitable combination of such protocols.

In some embodiments the escrow platform may support interfaces other than web services interfaces instead of or in addition to a web services interface. For example an enterprise may implement an escrow platform for use by clients external to the enterprise who may access the service via web services protocols as well as users within the enterprise who may use a different type of interface e.g. a proprietary interface customized to the enterprise s intranet . In some embodiments an interface to the escrow platform may support each of the various types of interfacing protocols through which any user of the escrow platform may access the service. In other embodiments different instances of escrow web service may be provided with interfaces for each distinct interface approach. It is noted that in some embodiments those aspects of an interface for the escrow platform related to handling interactions with clients e.g. receiving and responding to service requests may be implemented separately from those aspects that implement the general architecture of the escrow platform e.g. the generation and or storage of cryptographic keys the digital signature functionality and client relationships including client authentication . In some such embodiments the portion of an interface to escrow web service relating to client interaction e.g. via web services protocols may be bypassed by certain users such as those internal to an enterprise.

Continuing with the example illustrated in the escrow platform can be configured to process the request and determine which key is to be used to sign the challenge. For example the escrow platform can be operable to inspect the request to determine which target platform the client device is attempting to access. The escrow platform can query the authentication agent to determine whether the identity associated with the request is authorized to access the target platform in question. Assuming the identity is authorized to access the target platform the escrow platform can be configured to determine which key to use to sign the challenge. For example the escrow platform can use information from the request to search a database for the appropriate secret to use to sign the challenge.

Continuing with the description of if the key manager is used the escrow platform can query the key manager for a secret such a private cryptographic key at and the key manager can provide the secret i.e. the cryptographic key at and or digitally sign the challenge using the secret at . If the key manager is not used the escrow platform can use a secret such as a private key to sign the challenge at . In implementations where asymmetric cryptography is used the escrow platform can digitally sign the challenge or information based at least in part on the challenge using a private key for the target platform . In implementations where symmetric cryptography is used the escrow platform can digitally sign the challenge using a secret key. The escrow platform can use any well know digital signature algorithms to sign the challenge or information based at least in part on the challenge to produce the digitally signed challenge. For example the escrow platform can generate a cryptographic hash of the challenge using any well known cryptographic hash functions and can apply an RSA digital signature algorithm using the private key to produce the digital signature. Alternatively and or additionally the escrow platform can generate a keyed hash message authentication code HMAC where a message authentication code MAC is calculated using a cryptographic hash function in combination with a secret cryptographic key. Any conventional cryptographic hash function can be used such as MD5 and SHA 1 can be used in the calculation of the HMAC where the resulting MAC algorithm being HMAC MD5 or HMAC SHA1 depending on the particular hash function used. As shown by the figure in some embodiments the escrow platform may optionally request the appropriate key from a key manager . For example the escrow platform may not manage the secrets used to sign challenges rather the secrets could be stored in a key manager such as a key management service or a hardware security device.

In some example embodiments the escrow platform may receive secrets and store them whereas in other embodiments the escrow platform or key manager may generate the secrets. For example the escrow platform can create one or more cryptographic key pairs using a key generator . The one or more cryptographic key pairs can include a public private asymmetric key pair or can be a symmetric secret key. The escrow platform can be configured to generate a secret and associate the secret with the target platform by storing a relationship in a database. The escrow platform can then encrypt the secret and store it e.g. by sending the secret to a key manager that is configured to securely store the secret. In a specific example when the secret is a public key private key combination the escrow platform can create an identifier for the private key and store it in a database in association with a target platform. The escrow platform can then send the private key and the identifier for the key to the key manager . The key manager can encrypt the private key and store information usable to locate the key in a database it uses. In an alternative configuration the key manager can generate the secrets. In this embodiment the escrow platform may request the key manager to create the secret and receive back an identifier for the secret that it can store in its database in association with an identifier for the target platform.

In some embodiments the secret may only be usable for a limited number of times. For example the secret may be a one time key that can only be used for a particular session and that are destroyed after the session is completed or if the login is not successful.

Continuing with the description of the signed challenge can be sent back to the client as shown at operation . After the client device receives the signed challenge the client device can then provide the signed challenge to the target platform at . The target platform can verify the digital signature of the signed challenge using a secret e.g. a public key corresponding to a private key used to sign the challenge. If the digital signature is verified as authentic then the target platform can provide an acknowledgement to the client device at . Once the digital signature is verified connectivity can be established with the target platform . For example a secure communication channel can be established between the client device and the target platform . By way of a non limiting example the secure connection between the client device and the target platform can include a connection using a SSH protocol. If the digital signature is not verified to be authentic then target platform can provide a denial of service message not shown to the client device or not respond to the client device .

The general operational flow described above with respect to can be supplemented with additional operations based on the type of target platform and the operational environment in which the escrow platform is deployed. For example in some embodiments a target platform may have to be provisioned with a secret used to verify a signed challenge because of how the target platform is architected. Example target platforms of this type may include networking equipment such routers and switches that have an embedded security agent that are difficult or unpractical to modify as well as instance images e.g. configuration files that for example specify different combinations of operating systems and applications to create virtual machines with . On the other hand some types of target platforms may be capable of obtaining the secret over a network while they are in operation. These target platforms may have a network interface and logic configured to securely receive a secret used to verify a signed challenge store the received secret and make the secret available to logic operable to validate signed challenges. Example target platforms of this type includes computer systems instances of virtual machines hosted by a service provider or any other device that can be modified to include the logic described in the preceding sentence.

Turning now to it illustrates a service provider environment including an escrow platform. In this example a user or customer of a compute service can use the escrow platform to securely access instances. For example in implementations the escrow platform and or the target platform can be operated by one or more service providers. For example a service provider could operate both the escrow platform and a compute service that allows users to use e.g. rent virtual machine instances on which to run their own computer applications and the target platform can be one of the virtual machine instances. The compute service can be accessed via a web service interface through which a user can launch one or more instances from one or more instance templates. The virtual machine or instance is a software implemented abstraction of the underlying hardware which is presented to a running operating system or monolithic application.

For example a user on client device can request over network an instantiation of a virtual machine within service provider network . In implementations the user can launch a web browser on the client device and enter the web address of the service provider and interact with the service through a web console which translates operations input by the user into the browser into corresponding API calls to an application programming interface API for example a web API. Alternatively the client device can be configured to invoke the API programmatically. The client device can request provisioning of one or more virtual machines or instances or access to one or more previously provisioned virtual machines or instances. Instances can be provisioned in advanced or can be provisioned upon receiving the request for access. Escrow platform and target platform e.g. virtual machine or instance can function in a similar manner as discussed above.

As shown in service provider network can include interface e.g. the API described above with which client can assess the services provided by service provider network . Client can include agent that can be invoked by a user to initiate interaction with service provider network for example over network . In an example embodiment agent can be part of an application e.g. a standalone console or an application or agent can be executed within a browser. More specifically agent can be implemented as executable code that is downloaded to client device and run within a web browser using a scripting computer language such as JavaScript. Interface of service provider network can be in communication with network e.g. an internal network which can be in communication with escrow platform audit agent authorization system which can include authentication agent instance deployment manager IDM and one or more hosts and that can each host one or more instances i.e. target platforms in this embodiment . Although shows three hosts and this is merely one example and service provider network can operate fewer or more hosts. Host and can include one or more instances and and each instance can include an agent i.e. agent . Virtualization subsystem provides for the monitoring administration and maintenance of virtual machine instances it hosts.

Service provider network can be used to provision an instance for a user. In one non limiting example a user through client can request a launch of an instance via an API or console over network . Upon receipt of the request from the client IDM of service provider network can select a particular host from among hosts and on which to provision the instance. In some implementations a template or configuration file can be used to provide a basis for the features e.g. operating system type version applications processing memory and or storage requirements of the instance to be provisioned. In one example embodiment the provisioned instance the host on which the instance is provisioned or IDM can send a request to escrow platform for generation of a secret such as a public key private key pair to use to enable the client to access the instance. As described above the request to generate a secret can be issued to escrow platform in response to receipt of a challenge from a client. The key pair can be one time use keys that are destroyed after client device has finished a session or failed to access the instance. In some implementations escrow platform can publish the public key to a public key directory that can be assessable by target platform . Once the secret is generated and in the instance the secret is a public key private key pair the escrow platform can provide the public key of the key pair to virtualization subsystem . Agent running within the instance can make a call to a metadata service e.g. a web service running in the virtualization subsystem to request the public key and the web service can return the key to the agent . For example the agent can submit a web services request to an IP address that is resolved locally to the web service running in the virtualization subsystem .

In some implementations the secret can be included with the instance at the time of provisioning. In this implementation when the template is built escrow platform can be invoked to generate the secret and store it in the template. That way when the template is used to generate the instance the agent already has access to it. For example supposing the secret is a public key private key combination the public key can be stored or associated with the instance template and the private key can be managed by the escrow platform . When the instance launches the agent will have access to the public key and can use it to verify signed challenges.

Service provider network can then be used to provide access to the provisioned instance to user. By way of a non limiting example once the instance that is requested by the user is provisioned a public IP address can be provided to the user to directly access the instance. The user can then use the IP address and in conjunction with agent securely access the instance using SSH. In response the instance initiates an authorization procedure to determine if client has permission to access the instance by sending a challenge to client . The challenge provided by client device can include information that identifies the target e.g. instance with which client device would like to communicate.

Upon receiving the challenge at client agent sends an API request to escrow platform using the public IP address of escrow platform . Escrow platform digitally signs the challenge using the private key of the key pair that was generated for the instance and provides the digital signature to agent . Agent forwards the digital signature to the instance to be verified using the associated public key of the key pair. Once the digital signature is verified client can access the instance using SSH and the IP address of the instance.

In another non limiting example of the service provider network providing access to the provisioned instance to the user the client can access the instance via agent running within the console. Browser code for the console including the agent is downloaded to client . Agent is run in the browser and the console can include an icon a button or similar graphical activation representation in the console that allows client to access the instance using SSH. In one implementation the console can include a button labeled SSH into instance. The user can select this button and the console can access the instance using SSH. In response the instance initiates an authorization procedure to determine if client has permission to access the instance by sending a challenge to client . Upon receiving the challenge at client the console sends a request to escrow platform via the public IP of escrow platform . Escrow platform digitally signs the challenge using the private key of the key pair that was generated for the instance and provides the digital signature to the console. The console forwards the digital signature to the instance to be verified using the associated public key of the key pair. Once the digital signature is verified client can access the instance using SSH and the IP address of the instance. In this implementation of the authorization procedure the user is not aware of the involvement of escrow platform .

In some implementations the request by the client device can additionally include authentication information which can be verified by authentication agent of escrow platform or using a separate authentication agent separate from escrow platform . The authentication information can include identifying information of the owner or users permitted to access target platform i.e. instance . By way of a non limiting example the authentication can include the use of multifactor authentication that requires presentation of two or more authentication factors including a knowledge factor something the user knows a possession factor something the user has and an inherence factor something the user is . The authentication request can be provided using a properly formatted web service request and can be digitally signed using a private key. The private key can be a part of a key pair that is created when the user initially subscribes to services provided by service provider network .

The escrow platform can sign the challenge or information based at last in part on the challenge using the private key of the public key private key pair. The public key can be provided to the instance . The digital signature and or the challenge can be communicated to client device through the secure communication channel over the network and or can be provided to the instance over the network . The client device can then access the instance using the IP address directly using the secured communication channel over the network such as a secure shell SSH protocol connection. If the digital signature is not authentic then the client device can be informed of the denial to access the instance and optionally can be instructed to retry by sending another request for access to the instance .

In implementations the audit agent of the escrow platform can maintain statistical information about the client device the target platform and or the users of the client device . The statistical information can include a historical account of past and present activity by the user or the client device . In some implementations escrow platform can provide audit logs to audit agent . The activity information can include for example but not is limited to how often the user or the client device attempts to access a target e.g. instance how often the attempts are successful duration of each access or types of targets accessed. The statistical information can provided upon request by the user or the client device in the form of an audit log.

In implementations the escrow platform can provide access by the user or the target platform based upon a policy procedure maintained by policy agent . The policy procedure can be a flexible policy and be controlled by an administrator of the target e.g. instance escrow platform . The policy procedure can be consulted prior to client device being granted access to target platform . For example the policy procedure can be consulted by service provider network or instance deployment manager before the instance is launch. Additionally and or alternatively the policy procedure can be consulted by escrow platform before signing the challenge. The policy procedure can be used to restrict access to certain users or a class of users to certain target platforms or classes of target platforms and can use one or more metrics. The one or more metrics can include but are not limited to a user based a target based or a temporal based metric. By way of a non limiting example the policy procedure can allow a certain user or class of users to have access to a certain subset of targets only during certain time periods. The policy procure can allow another user or a class of users for example a user with a higher administrator level privilege to have priority access over other users or a class of users. Other types or conditions for the policy can be used. For example users may be able to have access to a certain subset of targets but not all the targets at the same time.

At the client device receives the digital signature challenge and or the signed challenge from the escrow platform . At the client device provides the digital signature challenge and or the signed challenge to the target platform . The target platform can authenticate the digital signature using a public key associated with the private key that created the digital signature and can provide an acknowledgment to the client device that access has been granted. The client device can then communicate with the target platform for example using a secure connection such as a secure shell SSH protocol. Alternatively the target platform can provide a denial of service message to the client device if the digital signature is not authentic. At the process can end or return to the beginning at .

The client device can provide the challenge obtained from the instance to the escrow platform . Additionally the client device can provide authentication information to the escrow platform or the client device can pre authenticate with the escrow platform before sending the challenge. Once the client device is authenticated with the escrow platform the client device can communicate with the escrow platform using a secured connection such over the secure communication channel over the network using a secure socket layer connection. Upon receipt of the challenge the escrow platform can then generate one or more cryptographic key pairs to generate a digital signature using a digital signature algorithm. For example the one or more cryptographic key pairs can include a public key private key pair. The escrow platform can use the private key of the generated key pair to produce the digital signature. The escrow platform can also store the associated public key in the key store and or provide the associated public key to the instance .

At the digital signature can be provided to the instance which can verify the digital signature at . For example the instance can verify the digital signature using the public key associated with the private key that signed the challenge. At authorization can be provided to access the instance via the API to the client device when the digital signature is verified as authentic. For example an IP address of the instance can be provided to the client device and the client device can use the IP address to communicate directly with the instance using a secure communication protocol such as over the secure communication channel over the network using a SSH protocol. At the process can end or return to the beginning at .

As illustrated in computing device can include one or more processors of varying core configurations and clock frequencies. Computing device can also include one or more memory devices that serve as a main memory during the operation of computing device . Computing device can also include one or more peripheral interfaces such as keyboards mice touchpads computer screens touchscreens etc. for enabling human interaction with and manipulation of computing device .

Computing device can also include one or more network interfaces for communicating via one or more networks such as Ethernet adapters wireless transceivers or serial network components for communicating over wired or wireless media using protocols such as Ethernet wireless Ethernet Global System for Mobile Communications GSM Enhanced Data rates for GSM Evolution EDGE Universal Mobile Telecommunications System UMTS Worldwide Interoperability for Microwave Access WiMAX Long Term Evolution LTE etc. Computing device can also include one or more storage device of varying physical dimensions and storage capacities such as flash drives hard drives random access memory etc. for storing data such as images files and program instructions for execution by the one or more processors . One or more software programs can be stored in the one or more memory devices and or on in the one or more storage devices . For example the one or more software program can include an operating system and any other software program utilized by computing device .

The computing device can comprise one or more processor s which may comprise a microprocessor microcontroller digital signal processor co processor or other similar devices known to those having ordinary skill in the art. The applications described herein may be implemented as either software firmware and or hardware applications and may be implemented as a set of computer or machine readable instructions stored in any type of non transitory computer readable or machine readable storage medium or other storage device. Some non limiting examples of non transitory computer readable mediums may be embodied using any currently known media such as magnetic or optical storage media including removable media such as floppy disks compact discs DVDs BLU RAY flash memory hard disk drives etc. In addition the storage device s as discussed herein may comprise a combination of non transitory volatile or nonvolatile memory such as random access memory RAM or read only memory ROM . One or more storage devices has stored thereon instructions that may be executed by the one or more processors such that the processor s implement the functionality described herein. In addition or alternatively some or all of the software implemented functionality of the processor s may be implemented using firmware and or hardware devices such as application specific integrated circuits ASICs programmable logic arrays state machines etc.

In embodiments the components of computing device need not be enclosed within a single enclosure or even located in close proximity to one another. Those skilled in the art will appreciate that the above described componentry are examples only as computing device can include any type of hardware componentry including any necessary accompanying firmware or software for performing the disclosed embodiments. Computing device can also be implemented in part or in whole by electronic circuit components or processors such as application specific integrated circuits ASICs or field programmable gate arrays FPGAs .

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the foregoing detailed description references are made to the accompanying figures which illustrate specific exemplary embodiments. Electrical mechanical logical and structural changes may be made to the exemplary embodiments without departing from the spirit and scope of the present teachings. The foregoing detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. For example although methods has been described in top to bottom fashion the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the term one or more of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Those skilled in the art will recognize that these and other variations are possible.

