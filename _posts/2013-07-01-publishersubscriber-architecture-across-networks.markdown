---

title: Publisher/subscriber architecture across networks
abstract: A publisher-subscriber architecture with standardized and/or dynamic event/message look up can be implemented on wagering game establishment networks to establish a robust and flexible reporting and reacting mechanism. This publisher subscriber architecture is extendible to allow processes to publish and subscribe to other processes in different network through an intermediary publisher/subscriber or publisher/subscriber manager.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09401068&OS=09401068&RS=09401068
owner: BALLY GAMING, INC.
number: 09401068
owner_city: Las Vegas
owner_country: US
publication_date: 20130701
---
This application is a continuation application that claims priority benefit of U.S. application Ser. No. 13 128 649 which is a National Stage Application of PCT US09 63769 filed 9 Nov. 2009 which claims priority benefit of Provisional U.S. Application No. 61 113 457 filed 11 Nov. 2008.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. Copyright 2008 WMS Gaming Inc.

Embodiments of the inventive subject matter relate generally to wagering game systems and more particularly to causing an activity to occur across multiple devices in response an event occurrence.

Electronic wagering game machines WGMs such as slot machines video poker machines and the like have been a cornerstone of the gaming industry for several years. Electronic WGMs are capable of collecting and reporting an enormous amount of information. Because casinos are interested in providing interesting and exciting gaming experiences a single casino may operate a wide variety of WGMs produced by a number of different manufacturers.

The description that follows includes exemplary systems methods techniques instruction sequences and computer program products that embody techniques of the present inventive subject matter. However it is understood that the described embodiments may be practiced without these specific details. For instance although examples refer to floor standing wagering game machines embodiments may be implemented in other types of wagering game machines including handheld models bartop models etc. In other instances well known instruction instances protocols structures and techniques have not been shown in detail in order not to obfuscate the description.

Analyzing information reported by WGMs utilizing different reporting mechanisms can be difficult and cumbersome especially if information is presented in several different formats. A publisher subscriber architecture with standardized and or dynamic event message look up can be implemented on wagering game establishment networks to establish a robust and flexible reporting and reacting mechanism. Processes that operate in accordance with the publisher subscriber architecture can coordinate operations across multiple devices in a wagering game establishment and even across multiple wagering game establishments in response to an event occurring. Processes can operate as publishers and or subscribers and can reside on a WGM e.g. standalone portable etc. or a server. Processes operating as publishers on a WGM can publish information about events that occur on the WGM. Examples of events include a win a beverage order a bonus condition being met in a wagering game a wager etc. Processes operating as subscribers can interpret published event information from different vendors and use published event information in a number of different ways. For example a subscriber can initiate a casino wide promotion in response to a game condition being published in an event. As another example a first subscriber can notify a hospitality system of published event information that indicates a beverage order while a second subscriber extracts useful data from the published beverage order for statistics on the types of beverages ordered in the casino.

At stage A a process operating as a publisher publisher process on the WGM detects that an event has occurred and publishes the event. Examples of events include a win a wager a beverage order a spin etc. Publishing an event comprises providing information about the event to interested entities e.g. subscriber processes . Examples of providing information include transmitting a message to a recipient posting a message to a central database notifying a recipient of a location to access data about the event etc. In published the detected event comprises the publisher process on the WGM transmitting a message over the network to the wagering game server . The casino wide promotion controller has previously subscribed to the type of event published and or the publisher process on the WGM . Embodiments are not limited to implementing subscriber entities on a wagering game server. A subscriber entity may reside on a variety of devices.

At stage B the casino wide promotion controller determines that the event should trigger a casino wide promotion and initiates the casino wide promotion on WGMs and . For example the casino wide promotion controller examines the message from the publisher process and to determine event information elements perhaps including an event identifier and or event type indicator. The casino wide promotion controller can then map the event information elements to data that causes initiation of the casino wide promotion e.g. function pointer command name etc. . For the example depicted in the casino wide promotion controller transmits command messages to the WGMs and to cause the WGMs and to perform operation for the casino wide promotion and present one or more graphical indicators of the casino wide promotion. Examples of casino wide promotions include a slot tournament a random drawing playing of an animation sequence etc. In addition the casino wide promotion controller can initiate different casino wide promotions and or a casino wide promotion that involves multiple activities based on the published event. For example a condition in a game such as bonus symbols lining up on a slot machine payline may be an event. Information indicating the game condition is transmitted to the casino wide promotion controller . The casino wide promotion controller determines that the event is a trigger for a casino wide promotion that involves a random drawing and an animation sequence to be played across multiple large screen displays. The casino wide promotion controllers cause a group of wagering game machines to execute code to allow players at the group of wagering game machines to participate in the random drawing. The casino wide promotion controller also causes a group of displays that corresponds to the group of wagering game machines to play an animation sequence that corresponds to the random drawing.

At stage C the WGMs and receive the respective command messages from the casino wide promotion controller and begin performing operations for the casino wide promotion. The WGMs and also present graphical indicators of the casino wide promotion e.g. display a text and images indicating a random drawing .

At stage D the casino wide promotion controller selects a winner of the promotion and notifies the winner via the WGM . The notification may be transmitted to the WGM by a protocol message a published event where the casino wide promotion controller publishes the event to a subscriber process on the WGM etc. For example the casino wide promotion controller randomly selects the WGM and transmits a notification to the WGM to notify a player at the WGM that the player has won.

At stage E WGM displays an indication to the winner. The casino wide promotion controller may also cause the other WGMs and to notify participants of the win. For example lights on top of the plurality of WGMs light up randomly until stopping on the WGM where the winner is playing. The persistent light indicates the winner and a prize is awarded to the winner.

At . the process publishes information about the event to a centralized event database on a wagering game server . For example the publisher process transmits a message that indicates the event to the wagering game server . Although the centralized event database is depicted on the wagering game server the event database may be on a network drive second server etc.

At . the wagering game server receives information about the event and stores the event information in the event database. Examples of the wagering game server storing information about the event includes storing the information at a memory location appending a file with the event information updating a data structure with the event information etc. One or more subscribers can access the event database. In this example a casino wide promotion controller and a hospitality services unit have subscribed to the event and or publisher process. The casino wide promotion controller and the hospitality services unit may be running on the wagering game server a different server a wagering game machine a portable computer etc.

At . the casino wide promotion controller detects addition of the event to the event database. The casino wide promotion controller can detect addition of the event by monitoring a block of memory in the event database checking a modified date of a file etc. In addition the wagering game server may send a notification message to the casino wide promotion controller when a new event is added to the event database.

At . the casino wide promotion controller accesses the event information in the event database and determines a type of event based on an event identifier in the published event information. The casino wide promotion controller may be subscribed to different types of events. The casino wide promotion controller can determine how to process the event information based on the event identifier. For example event information may have a standard format programmed into the casino wide promotion controller . In another example the casino wide promotion controller accesses a database of event types to dynamically process the event information. The casino wide promotion controller can access the database of event types to determine one or more of content format length etc. of a message conveying the event information. For instance a the casino wide promotion controller can assume that an event identifier or event type indicator will be encoded within a first 30 bits of a message carrying the event information. With the event identifier or event type indicator the casino wide promotion controller can access the database of event types to determine how to process the message e.g. parse the message based on indicated data types and field lengths invoke a specified message parser to parse the message etc. .

At . the casino wide promotion controller processes the event information to determine an activity or activities and causes the activity or activities to be performed based on processing the event information. For example the casino wide promotion controller accesses a table and maps an event type or the event identifier to a function pointer command message script etc. The event information itself may identify a command name include script to be executed etc. The casino wide promotion controller indicates the determined activity or activities to the plurality of wagering game machines .

At . the plurality of gaming machines begin performing the one or more activities indicated by the casino wide promotion controller .

At block . the hospitality services unit detects addition of the event information to the event database. The hospitality services unit can detect addition of the event by monitoring a block of memory in the event database checking a modified date of a file etc. In addition the wagering game server may send a notification message to the hospitality services unit when a new event is added to the event database.

At block . the hospitality services unit accesses the event information in the event database and determines a type of event based on an event identifier in the published event information. In this example the hospitality services unit determines an event identifier that corresponds to the jackpot threshold being exceeded.

At block . the hospitality service processes the event information to determine one or more activities to be performed and indicates the activities. For instance the hospitality services unit determines that a beverage special should be offered at those of the plurality of wagering game machines with active players. The hospitality services unit then transmits a message to the those active ones of the plurality of wagering game machines to cause them to display a graphical representation of the offer. Further the hospitality services unit may determine if certain conditions are met for an activity. For instance the hospitality services unit can determine that all players who participate in the casino wide promotion initiated by the casino wide promotion controller are awarded a digital coupon for a free appetizer at a restaurant. The hospitality services unit communicates with the casino wide promotion controller to ascertain the wagering game machine with participating players and transmits the digital coupon to those wagering game machines.

A centralized database may facilitate transfer of event information between a publisher and a subscriber. Before a publisher process can publish event information to a centralized event database it registers with the centralized event database or a process managing the centralized database. is a flowchart depicting example operations for registering as a publisher with a centralized event database. Flow begins at block where a centralized event database detects a request from a process on a WGM to register as a publisher. The registration request identifies the WGM associated with the process and one or more event types that the process publishes.

At block the centralized event database determines the one or more event types to be published by the process based on one or more event identifiers in the registration request. For example a process publishes both win events and wagering events.

At block the centralized event database stores an indication of information to be published for each event type with an associated event identifier. The indication represents a definition of the information to be included in the published event. For example a win event may comprise a win amount a WGM identifier a time date stamp a wagering game identifier a name of a player etc.

At block the centralized event database sends a confirmation to the process that it has been registered as a publisher.

The centralized event database manages events published by a plurality of publishers. The centralized event database facilitates subscription by allowing subscribers access to published events. is a flowchart depicting example operations for registering as a subscriber with a centralized event database. Flow begins at block where the centralized event database detects a request from a process to register as a subscriber. The request identifies the process and one or more event identifiers.

At block the centralized event database determines one or more event types for which the subscriber requested subscription based on the one or more event identifiers in the request.

At block the centralized event database sends a confirmation to the subscriber indicating where to access published events of each type. For example the centralized event database grants the subscriber access to a file containing the published events to the subscriber. The process managing the centralized database can also notify the subscriber of previously published events of interest to the subscriber. As another example the centralized event database returns a multicast internet protocol IP address that allows the subscriber to receive the published events. The subscriber may receive published events directly from one or more publishers or from the centralized event database. In some examples more than one event type may be published in a single location e.g. a file a block of memory a port RSS feed etc. . The subscriber is responsible for determining if a published event is relevant to the subscriber based on an event identifier. In other examples a single event type is published in a single location. The centralized event database returns the location based on an event identifier in the subscription request.

As depicted in subscribers detect when events are added to the centralized event database. The detection can be based on monitoring a location e.g. a file a block of memory etc. receiving a notification from the centralized event database etc. In some examples the centralized event database may send each subscriber a notification when any type of event is added. In other examples the centralized event database may send a notification to a subscriber based on an event type. For example a subscriber requested subscription to beverage order events. The centralized event database sends a notification to the subscriber when a beverage order event is added. In addition the notification may or may not include information about the event. If the notification does not include the event information the subscriber retrieves the event information based on access information returned by the centralized event database.

In some cases a subscriber may want to subscribe to a subset of the published events of a certain type. For example a subscriber wants to subscribe to beverage order events from WGMs in a particular section of a casino. The subscriber can include a location along with an event identifier in a subscription request to a centralized event database. The centralized event database can use the location to determine when a notification should be sent to the subscriber.

Although the above Figures depict examples of a publisher subscriber architecture that utilizes a centralized posting facility for event information embodiments are not so limited. Embodiments can implement the architecture with direct communications between publishers and subscribers with centralized registration of publishers and subscribers without centrally storing event information etc. is an example conceptual diagram depicting publishing events to a plurality of subscribers. Two publisher processes a wagering game event publisher and a hospitality event publisher are running on a WGM . Three subscriber processes a wagering game event subscriber a hospitality event subscriber and a statistics tracking unit are also running on the WGM . Although the subscriber processes are depicted as running on the WGM embodiments are not so limited. The subscriber processes may be running on a server a network device e.g. a computer etc. also depicts a server that hosts a hospitality service unit and a statistics aggregator .

At stage A the hospitality event publisher detects a beverage order event. Detecting a beverage order comprises detecting an indication e.g. a button push a tap on a touch screen etc. by a player.

At stage B the hospitality event publisher publishes information about the beverage order event to one or more subscribers. In this example the hospitality event publisher publishes information about the beverage order event to the hospitality event subscriber and the statistics tracking unit . The example presumes that the hospitality event subscriber and the statistics tracking unit have previously subscribed to hospitality events beverage order events and or the hospitality event publisher . Example information published about the beverage event includes a beverage type date time stamp a WGM identifier or location a wagering game identifier demographics of a player etc.

At stage C the hospitality event subscriber receives the information published about the beverage order event and determines the beverage type based on the published information. For example the beverage type may be a Margarita. The hospitality event subscriber then generates a beverage order based on the published information. For example the hospitality event subscriber uses the beverage type and a player identifier from the published information to generate the beverage order.

At stage D the hospitality event subscriber transmits the generated beverage order based on the published beverage order event to the hospitality service unit . The hospitality service unit requests that a bartender prepare the order and dispatches a member of a wait staff to deliver the beverage.

At stage E the statistics tracking unit receives the published event and records statistical data based on the beverage order event.

At stage F the statistics tracking unit transmits the recorded statistical data to the statistics aggregator . The statistics aggregator aggregates statistical data from a plurality of statistics tracking units instantiated on multiple WGMs.

At block the subscriber establishes data structures and or instantiates one or more processes to listen for published events on the network address and port. A single event type can be published to a single network address. For example a subscriber sends an Internet Group Management Protocol membership message to a multicast router that has been configured to publish a particular type of event to a particular multicast network address. In another example more than one event type may be published in a multicast group. For example the subscriber joins a multicast group that receives publications of multiple types of events. The subscriber receives published events of the multiple types and filters for the event type of interest perhaps based on an event identifier.

The subscriber may examine event information in addition to the event identifier to determine if the event is relevant to the subscriber. For example an interactive signage controller may subscribe to published win events. The interactive signage controller displays a replay of a win if the win is above a threshold. The interactive signage controller determines if the win exceeds the threshold based on a win amount published in the win event.

In some cases subscribers may send a subscription request to a publisher process. The publisher process maintains contact information e.g. an internet protocol address an e mail address etc. for each subscriber. A subscriber may access a database to determine which publishers are publishing events relevant to the subscriber. The subscriber sends subscription requests to publishers that publish relevant events.

At block the publisher collects information about the event. For example the event is a wager. Collected information may include a wager amount a player identifier a time date stamp a WGM identifier a wagering game title etc.

At block the publisher determines one or more subscribers to the event. For instance the publisher accesses a locally maintained data structures that indicates network addresses ports and process identifiers of subscribers interested in the event. In another example the publisher determines that the event is published over an established socket.

At block the publisher publishes the event to the determined one or more subscribers. For example the publisher publishes a wager event to an accounting server and an advertisement unit. The accounting server debits the wager from a wagering account of a player. The advertisement unit causes the wagering game machine to display information about a loyalty club if the wager is above a threshold.

Published events may be used in a variety of different ways. depict examples of using published events. is an example conceptual diagram of replaying a win across multiple devices based on a published win event. At stage A a win event is detected at a roulette wheel . For example electronic sensors and software at the roulette wheel detect a win and generates data about the win. A win publisher examines the generated data and determines that the win is above a given threshold. The win publisher generates an event that indicates the win win amount and roulette wheel .

At stage B the win publisher publishes the roulette win event to one or more subscribers. In this example the win publisher provides data that indicates the win amount or indication that the threshold was exceeded game type time of the win and location of the roulette wheel to an interactive signage controller running on a server .

At stage C the interactive signage controller receives the data provided by the win publisher. The interactive signage controller determines that a threshold condition is satisfied based on the data provided by the win publisher e.g. compares the win amount against the threshold recognizes a threshold exceeded flag etc. . The threshold may be a default value a dynamic value that changes based on conditions in a casino e.g. time of day number of patrons etc. . The interactive signage controller then obtains a video of the win. For instance the interactive signage controller uses the location of the roulette wheel and the win time to request a video segment from a repository of security video. A backend system provides a given segment of video from a camera monitoring the roulette wheel based on the win time and a presumed window of time e.g. several seconds prior and subsequent to the indicated win time .

At stage D the interactive signage controller transmits an indication of the video segment to a plurality of interactive displays . The interactive signage controller may send the video segment a location of the video segment etc. Examples of interactive displays include a television a secondary display on a WGM a projector etc.

At block an event type is indicated with the published event data is determined. For instance an event identifier that corresponds to an event type or an indication of an event type is recognized in a message providing the published event data.

At block one or more activities associated with the determined event type are determined. For example a subscriber accesses a data structure indexed by event type indicators. Each entry indicates one or more activities e.g. scripts executable code function pointers application programming interface call etc. .

At block it is determined if a conditional applies to the determined event type. For example a subscriber determines that an entry accessed with the event type indicator indicates one or more conditionals. Embodiments can implement evaluation of the conditional s in code executed responsive to the published event. If a conditional applies then control flows to block . If a conditional does not apply then control flows to block .

At block it is determined if the published event data satisfies the conditional. For example it is determined if a win amount exceeds a threshold. If the published event data satisfies the conditional then control flows to block . If the published event data does not satisfy the conditional then the flow ends.

At block the one or more activities associated with the event type are caused to be performed. For example a subscriber executes associated executable code or script invokes a code unit transmits a message transmits a command message etc.

The depicted flow diagrams are examples meant to aid in understanding embodiments and should not be used to limit the embodiments. Embodiments may perform additional operations fewer operations operations in a different order operations in parallel and some operations differently. For instance additional operations may be performed in to evaluate additional conditionals.

At stage A an event publishing unit detects a beverage order event and determines a type of beverage. In this example the event publishing unit detects a click on the order beverage button . The event publishing unit determines the type of beverage based on a value indicated with the beverage type drop down list .

At stage B the event publishing unit publishes the event to one or more subscribers. In this example the event publishing unit publishes the event to a hospitality server .

At stage C the hospitality server determines that the event comprises a beverage order and notifies a member of a wait staff to fill the order. The hospitality server may display the order on an order terminal e mail the order to a personal digital assistant of the member of the wait staff etc.

At stage . the publisher process determines a type of beverage. In the previous example the publisher process determines a beverage type associated with the tapped icon.

At stage . the publisher process publishes the beverage order event to one or more subscribers. For example the publisher process multicasts data about the beverage order event to a multicast group.

At stage . the hospitality server determines the type of beverage based on the beverage order event data. For example the type of beverage is a Bud Light beer.

At stage . the hospitality server notifies a member of a wait staff about the order. In response the member of the wait staff prepares and delivers the ordered beverage. For example the hospitality server sends the order via a short message service SMS text message to a mobile phone of a waitress.

Although the depicted examples are set within a wagering game establishment publisher subscriber processes within a wagering game network of a wagering game establishment can interact with processes external to the wagering game network. For instance a hierarchy of processes can establish publisher subscriber relationships for events related to an online social network. Assume Kim Cat and Chris are friends in an online social network. These friends have friend lists that can be imported into a wagering game establishment.

Kim opens her friend list which indicates Cat and Chris on a first wagering game machine in a wagering game establishment. A first subscriber process associated with the friend list registers with a publisher subscriber friend manager on a server in the wagering game network of the wagering game establishment. The first subscriber process registers interest in Cat and Chris.

The publisher subscriber friend manager updates a structure to indicate registration of the first subscriber process. The publisher subscriber friend manager then communicates with a publisher process of the online social network to register interest in events generated by Chris or Cat. The social network publisher process updates a structure to indicate the subscription of the publisher subscriber friend manager. The social network publisher also records an indication that the publisher subscriber manager is aware of Kim.

Cat logs into a second wagering game machine in the wagering game establishment thus generating a login event. The publisher subscriber friend manager detects the login event generated by Cat and publishes the login event to Kim. Kim s friends list may be updated with a status for Cat that indicates the wagering game establishment.

After logging in Cat opens her friend list on the second wagering game machine. A second subscriber process associated with Cat s friend list registers with the publisher subscriber friend manager. The second subscriber process registers interest in events generated by Kim and Cat.

The publisher subscriber friend manager updates a structure to indicate registration of the second subscriber process. The publisher subscriber friend manager then provides communication information to the first subscriber and the second subscriber processes for the first and second subscriber processes to communicate with each other. With the communication information the first and second subscriber processes also operate as publisher processes and publish events to each other.

The publisher subscriber friend manager subscribes to the social network publisher to receive publications of events generated by Kim and Chris. The online social network publisher process updates a structure to indicate the subscription. If Kim were to log out of the first wagering game machine and log into the online social network while the subscription remained the online social network publisher process would publish events generated by Kim to the publisher subscriber friend manger. For now the online social network publisher process records an indication that the publisher subscriber friend manager is aware of Cat.

Chris logs into a computer and launches her friend list which indicates Kim and Cat. The online social network publisher process detects a login event generated by Chris and publishes the login event to the publisher subscriber friend manager. The publisher subscriber friend manager then publishes the login event to the first and second subscriber processes at the first and the second wagering game machines.

A third subscriber process associated with Chris friend list subscribes with the publisher subscriber friend manager to events generated by Cat and Kim. The third subscriber process can subscribe directly with the publisher subscriber friend manager e.g. using information provided by the online social network publisher process or via the online social network publisher process which then begins to operate as a subscriber as well as a publisher.

If Kim generates a win event a replay of the winning spin can be pushed to Chris and Cat. The second subscriber process can receive a publication of the win event and determine one or more activities to perform on the second wagering game machine to replay the winning spin. The third subscriber process also receives a publication of the win event. The third subscriber can request the winning spin replay from the wagering game network directly or indirectly and play the winning spin on the computer.

The publisher subscriber friend manager can also coordinate activities across the second wagering game machine and the computer. The second and third subscriber processes can update status for Kim to indicate her win. The publisher subscriber friend manager can pull the winning spin replay from the first wagering game machine and push it to the second wagering game machine and the computer. The publisher subscriber friend manager can also temporarily open a video chat on the first wagering game machine with Chris and Cat.

Numerous variations are possible with just the social network example. Embodiments can coordinate a variety of activities in response to notification of events. Furthermore embodiments can employ multicasting and broadcasting techniques to inform interested entities of particular events. A user can configure a subscriber process to filter out certain events.

Embodiments may take the form of an entirely hardware embodiment a software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system . Furthermore embodiments of the inventive subject matter may take the form of a computer program product embodied in any tangible medium of expression having computer usable program code embodied in the medium. The described embodiments may be provided as a computer program product or software that may include a machine readable medium having stored thereon instructions which may be used to program a computer system or other electronic device s to perform a process according to embodiments whether presently described or not since every conceivable variation is not enumerated herein. A machine readable medium includes any mechanism for storing or transmitting information in a form e.g. software processing application readable by a machine e.g. a computer . The machine readable storage medium may include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory or other types of medium suitable for storing electronic instructions. In addition embodiments may be embodied as a machine readable signal medium examples of which include an electrical optical acoustical or other form of propagated signal e.g. carrier waves infrared signals digital signals etc. or wireline wireless or other communications medium.

Computer program code for carrying out operations of the embodiments may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on a user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN a personal area network PAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The CPU is also connected to an input output I O bus which can include any suitable bus technologies such as an AGTL frontside bus and a PCI backside bus. The I O bus is connected to a payout mechanism primary display secondary display value input device player input device information reader and storage unit . The player input device can include the value input device to the extent the player input device is used to place wagers. The I O bus is also connected to an external system interface which is connected to external systems e.g. wagering game networks .

In one embodiment the wagering game machine can include additional peripheral devices and or more than one of each component shown in . For example in one embodiment the wagering game machine can include multiple external system interfaces and or multiple CPUs . In one embodiment any of the components can be integrated or subdivided.

Any component of the architecture can include hardware firmware and or machine readable media including instructions for performing the operations described herein. Machine readable media includes any mechanism that provides i.e. stores and or transmits information in a form readable by a machine e.g. a wagering game machine computer etc. . For example tangible machine readable media includes read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory machines etc. Machine readable media also includes any media suitable for transmitting software over a network.

While describes an example wagering game machine architecture this section continues with a discussion wagering game networks.

Each casino includes a local area network which includes an access point a wagering game server and wagering game machines . The access point provides wireless communication links and wired communication links . The wired and wireless communication links can employ any suitable connection technology such as Bluetooth 802.11 Ethernet public switched telephone networks SONET etc. In some embodiments the wagering game server can serve wagering games and distribute content to devices located in other casinos or at other locations on the communications network .

The wagering game machines described herein can take any suitable form such as floor standing models handheld mobile units bartop models workstation type console models etc. Further the wagering game machines can be primarily dedicated for use in conducting wagering games or can include non dedicated devices such as mobile phones personal digital assistants personal computers etc. In one embodiment the wagering game network can include other network devices such as accounting servers wide area progressive servers player tracking servers and or other devices suitable for use in connection with embodiments of the invention.

In some embodiments wagering game machines and wagering game servers work together such that a wagering game machine can be operated as a thin thick or intermediate client. For example one or more elements of game play may be controlled by the wagering game machine client or the wagering game server server . Game play elements can include executable game code lookup tables configuration files game outcome audio or visual representations of the game game assets or the like. In a thin client example the wagering game server can perform functions such as determining game outcome or managing assets while the wagering game machine can present a graphical representation of such outcome or asset modification to the user e.g. player . In a thick client example the wagering game machines can determine game outcomes and communicate the outcomes to the wagering game server for recording or managing a player s account.

In some embodiments either the wagering game machines client or the wagering game server can provide functionality that is not directly related to game play. For example account transactions and account rules may be managed centrally e.g. by the wagering game server or locally e.g. by the wagering game machine . Other functionality not directly related to game play may include power management presentation of advertising software or firmware updates system quality or security checks etc.

One or more publisher and or subscriber processes may be running on wagering game server . The publisher processes detect occurrence of an event collect information about the event and publish information to one or more subscribers. The subscriber processes receive a first published event and initiate a second event based on the type of the first event.

Any of the wagering game network components e.g. the wagering game machines can include hardware and machine readable media including instructions for performing the operations described herein.

This detailed description refers to specific examples in the drawings and illustrations. These examples are described in sufficient detail to enable those skilled in the art to practice the inventive subject matter. These examples also serve to illustrate how the inventive subject matter can be applied to various purposes or embodiments. Other embodiments are included within the inventive subject matter as logical mechanical electrical and other changes can be made to the example embodiments described herein. Features of various embodiments described herein however essential to the example embodiments in which they are incorporated do not limit the inventive subject matter as a whole and any reference to the invention its elements operation and application are not limiting as a whole but serve only to define these example embodiments. This detailed description does not therefore limit embodiments of the invention which are defined only by the appended claims. Each of the embodiments described herein are contemplated as falling within the inventive subject matter which is set forth in the following claims.

