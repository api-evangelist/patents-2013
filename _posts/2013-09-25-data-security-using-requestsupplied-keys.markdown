---

title: Data security using request-supplied keys
abstract: Requests are submitted to a request processing entity where the requests include a cryptographic key to be used in fulfilling the request. The request processing entity, upon receipt of the request, extracts the key from the request and uses the key to perform one or more cryptographic operations to fulfill the request. The one or more cryptographic operations may include encryption/decryption of data that to be/is stored, in encrypted form, by a subsystem of the request processing entity. Upon fulfillment of the request, the request processing entity may perform one or more operations to lose access to the key in the request, thereby losing the ability to use the key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09311500&OS=09311500&RS=09311500
owner: Amazon Technologies, Inc.
number: 09311500
owner_city: Seattle
owner_country: US
publication_date: 20130925
---
This application incorporates by reference for all purposes the full disclosure of co pending U.S. patent application Ser. No. 14 037 282 filed concurrently herewith entitled RESOURCE LOCATORS WITH KEYS. 

The security of computing resources and associated data is of high importance in many contexts. As an example organizations often utilize networks of computing devices to provide a robust set of services to their users. Networks often span multiple geographic boundaries and often connect with other networks. An organization for example may support its operations using both internal networks of computing resources and computing resources managed by others. Computers of the organization for instance may communicate with computers of other organizations to access and or provide data while using services of another organization. In many instances organizations configure and operate remote networks using hardware managed by other organizations thereby reducing infrastructure costs and achieving other advantages. With such configurations of computing resources ensuring that access to the resources and the data they hold is secure can be challenging especially as the size and complexity of such configurations grow.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein relate to the submission and processing of requests where the requests include cryptographic keys. The requests may be generated by and submitted from customers of a service provider such as a computing resource service provider. Processing the requests may include use of the keys included in the requests to perform one or more cryptographic operations such as encryption decryption and generation of electronic digital signatures on data. In some embodiments the techniques described and suggested herein are used to enable server side encryption and or related techniques such as decryption where the key to be used for encryption decryption is controlled by the client i.e. device of the customer or operating on behalf of the customer .

In various embodiments use of keys provided in requests is performed so that except for a limited time during which the keys are used the service provider lacks access to the key. For example the service provider may operate a data storage service. A customer may transmit data to the service provider for storage by the data storage service. A request to the service provider may include a key to be used to encrypt the data. The service provider may obtain the key from the request and use the key to encrypt the data so that the encrypted data may be persistently stored using the data storage service. When the key is no longer needed e.g. when encryption of the data has completed the service provider may perform one or more operations to lose access to the key such as by destroying or allowing to be destroyed any in memory copies of the key. Any copies of the data in plaintext form may similarly be destroyed or allowed to be destroyed. Once the key and plaintext data has been destroyed the customer can be assured that the provider is unable to decrypt the data. Thus even if a security breach or other event at the provider causes access to the data not authorized by the customer the breach by itself does not enable access to the data in plaintext form.

Keys may be provided in requests in various ways in accordance with different embodiments. For example in some embodiments the request includes the key in plaintext form. The plaintext key may be a symmetric key to be used in a symmetric key algorithm. The plaintext key may also be a public key of a public private key pair for an asymmetric key algorithm where the service provider lacks access to the private key of the key pair and the private key is accessible to an entity to be able to decrypt using the private key e.g. the customer . In some embodiments requests include keys in encrypted wrapped form. For example the key may be encrypted so as to be decryptable by the service provider or another entity at the direction of the service provider. The key used to encrypt the key in the request may be a secret shared with an entity able to decrypt the key e.g. service provider or a public key of a public private key pair where the private key is to be used by an entity to decrypt the encrypted key for processing the request. Note Need to update paragraph spacing. 

Upon receipt of a request with a key the service provider may access the key from the request decrypting or causing to be decrypted if applicable and then process the request. Other operations may be performed such as by verifying an electronic signature of the request or checking whether fulfillment of the request is in compliance with any applicable policy. Other details of operations that may be performed are discussed in more detail below.

As illustrated in the request includes data and a cryptographic key . The data may include various types of information and may be formatted various ways in accordance with various embodiments. For example in some embodiments the data is organized as a file such as a media file. Data may also be formatted in other ways. The data may be for instance organized for inclusion in a database or otherwise. The cryptographic key as discussed in more detail below may be a key used to encrypt the data or otherwise to perform one or more cryptographic operations on data. It should be noted as will be discussed in more detail below that the request may also include the cryptographic key in various ways. For example in some embodiments the request includes the cryptographic key in plaintext form. In other embodiments the request includes the cryptographic key in encrypted form. For example as discussed in more detail below the cryptographic key may be encrypted by another key such that the service provider or another system associated therewith is able to decrypt the encrypted cryptographic key . In this manner upon submission of the request from the customer to the service provider the service provider may use the cryptographic key to encrypt the data received in the request thereby generating encrypted data .

The encrypted data may then be stored in a data storage system . The data storage system while illustrated as separate from the service provider may be a subsystem of the service provider . For example the request may be submitted to a web server of the service provider where the web server is configured to allow access to the data storage system . Generally the data storage system may be operated as a service to customers such that customers can use resources of the service provider for the purpose of storing data. Other embodiments also include those in which the data storage system is separate from the service provider . The data storage system may for example be operated by an entity that is a third party to the service provider and the customer or in some embodiments the data storage system may be a subsystem of the customer that is a subsystem of a system of the customer . It should be noted that terms such as customer and service provider can have multiple meanings and such meanings are clear from context. For example the term customer may refer to an entity e.g. a legal entity such as an organization or individual or a system e.g. computing device or network of computing devices that support operations of a customer entity. Similarly the term service provider may refer to a legal entity or a system supporting operations of a service provider entity.

As illustrated in upon encryption of the data to generate the encrypted data the service provider may take one or more actions that cause the service provider to lose access to the cryptographic key . This is illustrated in as the service provider passing the cryptographic key to an icon labeled as trash. It should be noted that while passing the cryptographic key into trash as illustrated in the figure for the purpose of illustration various embodiments may take action to lose access to the cryptographic key that do not necessarily involve the transmission of the cryptographic key . For example in some embodiments upon receipt of the request and use of the cryptographic key the service provider may perform one or more operations to destroy the cryptographic key . Destruction of the cryptographic key may be performed in various ways in accordance with various embodiments. For example in some embodiments the cryptographic key and request are not persistently stored by the service provider but are maintained in volatile memory of a device of a service provider .

Destruction of the cryptographic key may be performed by allowing one or more memory locations that store the cryptographic key to be overwritten with other data such as data received as part of subsequent requests. Other operations may also be performed. For example if the cryptographic key is stored in volatile or nonvolatile memory the cryptographic key may be destroyed by overwriting e.g. via one or more write operations intended to destroy the cryptographic key one or more memory locations used to store the cryptographic key with other data such as random data or nonrandom data such as a string of zeros. Generally any operations that will cause the service provider to lose access to the cryptographic key may be used. In this manner the customer is able to submit requests to the service provider with cryptographic keys that the customer desires to be used to encrypt data . Further because the service provider is in various embodiments configured to lose access to the cryptographic key after use of the cryptographic key the customer can be assured that the service provider upon processing the request is unable to access the data by decrypting the decrypted data . In other words the security of the data is ultimately controlled by the customer with the service provider having access to the data for a limited time.

It should be noted that while various processes resulting in encrypted data and corresponding decrypting data are used throughout for the purpose of illustration the various processes may vary in accordance with other embodiments. For example example processes for encryption illustrated herein show encryption using a key supplied by a customer of a service provider and where encryption is performed such that after an amount of time the service provider loses access to the key that was used. However more complex schemes may also be used where more than one key is used to control access to data. For example referring to in some embodiments data may be encrypted using both a key supplied by the customer in a request as well as a key held by or otherwise accessible to the service provider. In this manner coordinated action between the customer and the service provider is required for access to the data by way of having an ability to decrypt the encrypted data. In some embodiments for example the data may be encrypted with one key and then again encrypted with another key. In other examples the cryptographic key may be combined with another key to generate yet another key used to encrypt the data . Such variations may also be extended to multiple parties in addition to the customer and the service provider so that generally coordinated action by a plurality of entities is required for legitimate access to data that has been encrypted that is to the data in plaintext form. Other variations are also considered as being within the scope of the present disclosure.

In addition while various embodiments described herein illustrate requests that have certain types of data requests may include other types of data. For example requests my include data for various parameters of the request which may be used by a service provider to determine if and or how to fulfill a request. Generally requests as discussed herein are simplified for the purpose of illustration. The requests may for instance include various contextual data such as an identity of a requestor a network address from which the request originates an identity of an entity that generated some or all of the request and or other types of data.

Further it should also be noted that while shows the request having data to be encrypted requests within the scope of the present disclosure do not necessarily have data to be encrypted. For example in some embodiments the requests may have a reference to data e.g. an identifier of a data object which may be in the form of a URL that is not necessarily included in the request. Processing such a request may include using the reference to obtain the data. As another example some requests may lack data because the requests include retrieval of data as one or more requested operations. A request to retrieve data may include a cryptographic key but the data may be stored in another location. Processing the request may include accessing encrypted data to decrypt using the cryptographic key provided in the request. Other variations are also considered as being within the scope of the present disclosure.

When a request is received through the customer interface the request may be received with appropriate authenticating information. For example as illustrated in a request may be received with a signature of the request. The signature may be generated in accordance with various embodiments. For example a customer that submitted the request may generate the signature using secret information shared between the customer and the service provider . As another example a customer may have used an asymmetric digital signature scheme to sign the request using a private key of a private public key pair. Generally any type of information which is used to authenticate the request may be used and in some embodiments requests may be submitted without such information. Further in some embodiments the electronic signature of a request is generated using a cryptographic key that is different than a cryptographic key supplied in the request although in some embodiments the electronic signature is generated using the same key that is supplied in the request.

As illustrated in however when a request is received through the customer interface the request is provided e.g. over an internal network of the service provider with the signature to an authentication system of the service provider . Alternatively a portion of the request sufficient for generating the electronic signature may be provided instead of the whole request. The authentication system may be a subsystem of the service provider configured to authenticate requests such as by verifying electronic signatures provided with requests. Upon verifying the signature of the request the authentication system may provide a response to the customer interface that indicates whether the signature is valid. A device of the customer interface may use the information provided by the authentication system in order to determine how to process the request . For example if the authentication system indicates that the signature is invalid the customer interface may deny the request. Similarly if the information from authentication system indicates that the signature of the request is valid the customer interface may cause the request to be processed.

While not illustrated in the figure the authentication system or another system operating within or on behalf of the service provider may operate to perform other operations in connection with determining how to process requests. For example the authentication system or another system operating in cooperation therewith may be used to check one or more policies which may be determinative of whether the request can be fulfilled. Policy determinations may be made based at least in part on various factors such as an identity of the requestor that submitted the request a time of day a logical identifier for a location in which data is stored or is to be stored and other contextual information. Policy may be managed through the customer interface or another interface through appropriately configured application programming interface API calls.

Returning to the embodiment illustrated in if the authentication system determines that the signature is valid the customer interface may determine to process the request. Processing the request may involve the transfer of encrypted data between the customer interface and request processing infrastructure . The request processing infrastructure may comprise one or more devices that collectively operate to provide a service of the service provider . For example as illustrated in the request processing infrastructure may comprise a plurality of data storage system used to store data on behalf of customer of the service provider . Other infrastructure including networking infrastructure while not illustrated may also be included. The passage of data e.g. over a network between the customer interface and the request processing infrastructure may occur in various ways in accordance with various embodiments in accordance with the various types of requests that may be submitted through the customer interface . For example if the request is a request to store data a customer interface may utilize a key provided in the request to encrypt the data and transmit the encrypted data to the request processing infrastructure for storage in one or more of the data storage systems .

Similarly if the request is a request to retrieve data a customer interface may transmit a communication to the request processing infrastructure that allows data from one or more of the data storage systems to be provided to the customer interface . The customer interface may then use a key provided in the request to decrypt the encrypted data and provide the decrypted data to the customer that submitted the request . It should be noted that the environment of the service provider illustrated in is simplified for the purpose of illustration and that numerous other devices and subsystems such as accounting systems that keep track of usage of the service provider by customers may also be included. Further a service provider may include facilities located in different geographical locations for the purpose of redundancy and or availability.

In addition while shows a request with a key as with all requests described and illustrated herein various other data may be provided within the request such as data to be operated on and or various metadata including contextual information about the request and authentication information usable to verify authenticity of the request. Various request parameters may also be included in the request. For instance a request parameter may specify that server side encryption is supposed to be used to encrypt data using a key provided with the request. If such a parameter is absent and or indicates that server side encryption is not to be used the request may be processed without encryption being performed regardless of whether a key is included in the request. Further for requests submitted with electronic signatures a parameter may specify which part of the request was used to generate an electronic signature. Such a parameter can indicate which part of a request should be used for checking an electronic signature thereby enabling requests to be modified after their generation such as by adding data to be operated on during fulfillment of the request. Generally requests are simplified in the present disclosure for the purpose of illustration.

With the cryptographic key having been obtained the process may include generating a request with the obtained cryptographic key that is generating a request that includes the obtained cryptographic key. The request may be generated by arranging data for the request in a manner suitable for transmission that is in a format processable by a system to which the request will be submitted. Once generated the generated request may be submitted . Submission of the generated request may be performed in any suitable manner such as by transmission to an Internet protocol IP address of a webserver configured to receive generated requests. Other operations may be performed for example in some embodiments the request is generated from a uniform resource locator URL . Communication with the domain name service DNS may occur to obtain an IP address for the system to which the generated request is then submitted . Generally any way of submitting the request may be performed.

Upon submission a request may be processed by a system to which the generated request was submitted . Accordingly the process may include receiving a response to the request or the response may be an appropriately configured response in accordance with a protocol by which the request was submitted. It should be noted that not all embodiments require receipt of a response to the request. For example some protocols may allow for the submission of requests without acknowledgement that the request has been received and or fulfilled. As an illustrative example the request may be to store data. In some embodiments upon submission it may be assumed that the request has been processed or likely had been processed where acknowledgement of processing of the request may not be required.

Upon receipt of the request the process may include determining whether to fulfill the request. The determination whether to fulfill the request may be made in various ways in accordance with various embodiments. For example as noted above in some instances the request may be received with an electronic signature of the request. Accordingly a determination may be made by determining whether the signature is valid. Determination of whether the signature is valid may be performed in various ways. For example the system performing the process may verify the signature itself or may transmit the signature and request or generally data signed to generate the signature to another system operable to verify the electronic signature. Further as noted above determining whether to fulfill the request may include performing a determination whether one or more policies would preclude fulfillment of the request. Generally any way by which a determination of whether to fulfill the request may be performed.

In addition while and other processes illustrated herein show determinations whether to fulfill the request in various embodiments systems may fulfill all appropriately configured requests without the need to have a valid electronic signature and or compliance with policy. Returning to the embodiment illustrated in if it is determined not to fill the request such as if a signature is invalid and or policy precludes fulfillment of the request the process may include denying the request. Denying the request may be performed in various ways in accordance with various embodiments. For example a response to the request may be provided that indicates that the request is denied and or that provides information why the request was denied. As another example denying the request may simply be performed by not taking any action. That is by not providing a response to the request and simply not fulfilling the request. Generally any way in which the request may not be fulfilled may be considered as denying the request.

If it is determined however to fulfill the request the process may include extracting a cryptographic key from the request. The extracted cryptographic key may then be used to perform one or more requested cryptographic operations that is to perform one or more cryptographic operations involved in fulfillment of the request. The one or more cryptographic operations may vary in accordance with various embodiments and in accordance with the type of request that was received. In some embodiments for example the one or more cryptographic operations include encryption of data included with the request and or encryption of other data. As another example the one or more cryptographic operations may include decryption of data referenced by and or provided in the request. Generally any type of cryptographic operations such as key derivation and or electronic signature generation and or verification may be performed as part of the one or more cryptographic operations. Further while various illustrative embodiments described herein show a single cryptographic operation such as encryption multiple types of cryptographic operations may be performed while fulfilling a single request. As an example one or more keys provided in a request may be used to encrypt data and generate an electronic signature of the data and or encrypted data where the electronic signature can be used for later validation that the data has been changed. Other variations are also considered as being within the scope of the present disclosure.

Upon performance of the one or more cryptographic operations the process may include providing a response to the request. The response may vary in accordance with the various embodiments and in accordance with the type of request that was made. For example if the request was to retrieve data the response may include data that was retrieved and decrypted. If the request was to store data the response may be an acknowledgement that the data has been stored. A check sum or other validation information may be provided with the response. At some point subsequent to performance of the one or more cryptographic operations involved in fulfillment of the request the process may include losing access to the extracted cryptographic key where access may be lost in various ways such as described above.

The process may also include storing the encrypted data. The encrypted data may be for example transmitted to a data storage system for persistent storage thereof. A response to the request may be provided where the response may include the encrypted encryption key. A system performing the process may lose access to the encryption key such as described above. In this manner once a system performing the process loses access to the encryption key the system no longer has the ability to decrypt the encrypted data and generally use of a private key corresponding to the customer public key is necessary to legitimately i.e. without guessing the key or otherwise obtaining access to the data in an unauthorized manner decrypt the encrypted data by first decrypting the encryption key in order to decrypt the decrypted data.

It should be noted as with all processes described herein variations are considered as being within the scope of the present disclosure. As an example shows a process for processing a PUT request where the request includes a customer public key. Such request can be processed in different ways in accordance with various embodiments. In some embodiments for example although use of a symmetric encryption key is generally computationally more efficient a customer public key may be used to encrypt the data that was received in the request instead of using an encryption key that is then wrapped by the public key. In this manner the data is decryptable only by an entity having access to the private key corresponding to the customer public key which in various embodiments may be only the customer that submitted the request.

As another example of a variation considered as being within the scope of the present disclosure the encrypted encryption key may be stored with the encrypted data and may or may not be transmitted in a response to the request. In such an embodiment to decrypt the data the encryption key may be accessed from storage provided to an entity able to decrypt the encryption key e.g. customer having a private key usable to decrypt the encryption key which may then provide the decrypted encryption key back to enable decryption of the data. For example a customer request to retrieve data may cause a provider to transmit an initial response with notification including the encrypted encryption key that the encryption key needs decrypting. The customer may decrypt the encryption key and provide the decrypted encryption key back to the provider to enable the provider to decrypt the encrypted data and provide the decrypted data to the customer. Other variations including variations where ciphertext is provided to the customer from the provider along with an encrypted key usable to decrypt the ciphertext are also considered as being within the scope of the present disclosure. For embodiments where for example server side encryption is used to PUT requests but client side encryption is used to obtain access to stored data a provider may provide instructions for properly processing data e.g. by properly canonicalizing data for decryption or may provide executable instructions in the form of a client library to ensure that decryption is performed correctly i.e. to ensure that decryption is performed in a manner that will succeed in decrypting the data .

A private key corresponding to a public key used to encrypt the encryption key may be used to decrypt the encrypted encryption key. Once the decrypted encryption key has been obtained the process may include generating a GET request with the decrypted encryption key and submitting e.g. transmitting the generated GET request such as described above. A system that receives the GET request may process the request by using the encryption key in the request to decrypt data that was encrypted by the encryption key. A response may then be received where the response may include appropriate information such as data that has been decrypted using the decrypted encryption key that was provided in the GET request.

As with all processes described herein variations of the process are considered to be within the scope of the present disclosure. For example the encrypted encryption key may be obtained by accessing the encrypted encryption key from remote storage when the encrypted encryption key is stored with the data that is encrypted under the encrypted encryption key. As another example in some embodiments the process may include submitting a GET request that is fulfilled by providing data encrypted under the encrypted encryption key. A system performing the process may obtain the encrypted data and use the decrypted encryption key to decrypt the encrypted data. In other words the process may be modified so that data is decrypted client side even if the data was encrypted server side.

As noted above numerous embodiments are considered as being within in the scope of the present disclosure. In some embodiments a customer and service provider are able to interact to achieve data security without use of a third party system to unwrap a key needed for cryptographic operations. accordingly shows an illustrative example of an environment in which various embodiments can be practiced. As with as illustrated in the environment includes a customer that submits a request to a service provider . In this example the request includes an encryption key which as indicated by the brackets surrounding the encryption key is wrapped by another key. The service provider has access to a key usable to unwrap the encryption key thereby enabling the service provider to perform cryptographic operations using encryption key .

A key usable to unwrap the cryptographic key may be obtained . Obtaining the key usable to unwrap the cryptographic key may be performed in various ways in accordance with various embodiments. For example the key usable to unwrap the wrapped cryptographic key may be stored by a system that performs the process . An identifier of the key usable to unwrap the wrapped cryptographic key may be used to locate the key usable to unwrap the wrapped cryptographic key from other keys which may be stored by the system. The identifier may be provided in the request that was received or may be otherwise determined such as by an association with an entity that submitted the request. Once the key usable to unwrap the wrapped cryptographic key has been obtained the process may include using the obtained key to unwrap the wrapped cryptographic key. In this manner an unwrapped cryptographic key is obtained. The unwrapped cryptographic key may be used to perform one or more cryptographic operations involved in fulfillment of the request that was received . A response to the request may be provided such as described above and access to the unwrapped cryptographic key may be lost .

In some embodiments as noted involvement of a third party is part of maintaining data security. accordingly shows an illustrative example of an environment with various embodiments can be practiced. The environment as illustrated includes a customer that submits a request to a service provider such as described above. Also as described above the request may include an encryption key that is wrapped by another key such as described above in connection with . However in the example of a subsystem of the service provider that receives the request or in some embodiments all subsystems of the service provider may not have access to a key usable to unwrap the encryption key . Accordingly the environment includes a key management system which has access to a key usable to unwrap the wrapped encryption key . The key management system may be any system operable to manage cryptographic keys on behalf of one or more customers of the service provider .

The key management system may be implemented in various ways in accordance with various embodiments. In some embodiments the key management system is a subsystem of the service provider which may be implemented by for instance a hardware security module HSM hosted by the service provider or another type of security module that securely stores cryptographic keys. In some embodiments the key management system is implemented as another service of the service provider which may be one of several services provided by the service provider and accessible to customer over a network such as described below. In some embodiments the key management system is a system such as described above however implemented by a third party to the service provider and customer . In such embodiments neither the customer nor the service provider has access to the key usable to unwrap the encryption key unless the key usable to unwrap the encryption key is shared with one or more of the customer or service provider . Other variations are also considered as being within the scope of the present disclosure. For example the key management system may be implemented as part of the customer in some embodiments. Generally the key management system is a system with which the service provider must communicate in order to unwrap or generally cause to have unwrapped the encryption key using the key usable to unwrap the encryption key. Communication between the service provider and the key management system may occur over one or more networks and in accordance with one or more appropriate network protocols. The network may be for example the Internet or any suitable network such as described below.

The wrapped cryptographic key may be transmitted in the form of a request to the unwrapping system which is appropriately configured for fulfillment by the unwrapping system. For example the request may be formatted in accordance with a format acceptable to the unwrapping system and the request may include information usable by the unwrapping system to determine whether to fulfill the request. Such information may include for example authentication information used to authenticate the request to the unwrapping system and or the request that was received with the wrapped cryptographic key. Other information which may be used for example to determine whether fulfillment of the request to the unwrapping system complies with one or more policies may also be provided or the information may be contextual information such as described above. Additional information may include an identifier of a key usable to unwrap the wrapped cryptographic key. Assuming that the unwrapping system fulfills the request that was transmitted the process may include receiving the unwrapped cryptographic key from the unwrapping system. The unwrapped cryptographic key may be used to perform one or more cryptographic operations involved in fulfillment of the request that was received . As response to the request may be provided such as described above and access to the unwrapped cryptographic key may be lost such as described above.

As noted several times throughout the above disclosure numerous variations are considered as being within the scope of the present disclosure. For example as discussed numerous variations utilize symmetric and or asymmetric cryptographic primitives. Symmetric key algorithms may include various schemes for performing cryptographic operations on data including block ciphers stream ciphers and digital signature schemes. Example symmetric key algorithms include but are not limited to the advanced encryption standard AES the data encryption standard DES triple DES 3DES Serpent Twofish blowfish CAST5 RC4 and the international data encryption algorithm IDEA . Symmetric key algorithms may also include those used to generate output of one way functions and include but are not limited to algorithms that utilize hash based message authentication codes HMACs message authentication codes MACs in general PBKDF2 and Bcrypt. Asymmetric key algorithms may also include various schemes for performing cryptographic operations on data. Example algorithms include but are not limited to those that utilize the Diffie Hellman key exchange protocol the digital signature standard DSS the digital signature algorithm the ElGamal algorithm various elliptic curve algorithms password authenticated key agreement techniques the pallier cryptosystem the RSA encryption algorithm PKCS 1 the Cramer Shoup cryptosystem the YAK authenticated key agreement protocol the NTRUEncrypt cryptosystem the McEliece cryptosystem and others. Elliptic curve algorithms include the elliptic curve Diffie Hellman ECDH key agreement scheme the Elliptic Curve Integrated Encryption Scheme ECIES the Elliptic Curve Digital Signature Algorithm ECDSA the ECMQV key agreement scheme and the ECQV implicit certificate scheme. Other algorithms and combinations of algorithms are also considered as being within the scope of the present disclosure.

In addition as noted various embodiments of the present disclosure relate to the use of cryptographic keys included in requests to perform various cryptographic operations. While the keys are discussed as being used to perform the operations it should be noted that various embodiments of the present disclosure include those where keys are transformed in some way before being used. As an example in cases where a key in a request is a passcode the passcode may be transformed e.g. with a key derivation function before being used to perform additional cryptographic operations. Further while the above disclosure discusses specific types of keys e.g. encryption keys such keys may similarly be transformed before use. Other variations include those where multiple keys are provided in requests and request parameters and or formatting of the request indicate how the multiple keys should be used.

Other variations considered as being within the scope of the present disclosure include embodiments that utilize pre signed uniform resource locators URLs . Referring to environments such as illustrated in that include a customer of a service provider a customer can pre generate URLs that include an electronic signature of a portion of the URL and or other information such as a cryptographic key. The customer may provide the URL to another entity and the other entity can utilize the URL to submit requests to the service provider to cause the service provider to perform one or more operations under the authorization of the customer. The service provider can receive a request submitted with the URL verify the electronic signature and perform the one or more operations using a key provided in the URL. In this manner various conveniences involving server side encryption and decryption with customer control over keys and provider inability to access keys except when necessary are achieved. The use of pre signed URLs and variations thereof are discussed in detail in concurrently filed U.S. patent application Ser. No. 14 037 282 entitled Resource Locators With Keys which is incorporated by reference in its entirety.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. Servers as used herein may be implemented in various ways such as hardware devices or virtual computer systems. In some contexts servers may refer to a programming module being executed on a computer system. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling some even a majority of the data access and business logic for an application. The application server may provide access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the web server in the form of HyperText Markup Language HTML Extensible Markup Language XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the web server. It should be understood that the web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein. Further operations described herein as being performed by a single device may unless otherwise clear from context be performed collectively by multiple devices which may form a distributed system.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect of the present disclosure. For example the data store illustrated may include mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as page image information and access rights information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user through a device operated by the user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser. It should be noted however that embodiments of the present disclosure are not necessarily limited to the context of web pages but may be more generally applicable to processing requests in general where the requests are not necessarily requests for content.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop laptop or tablet computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Various embodiments of the present disclosure utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as Transmission Control Protocol Internet Protocol TCP IP protocols operating in various layers of the Open System Interconnection OSI model File Transfer Protocol FTP Universal Plug and Play UpnP Network File System NFS Common Internet File System CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a web server the web server can run any of a variety of server or mid tier applications including Hypertext Transfer Protocol HTTP servers FTP servers Common Gateway Interface CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response to requests from user devices such as by executing one or more web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU or processor at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disc Read Only Memory CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected when unmodified and referring to physical connections is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. The use of the term set e.g. a set of items or subset unless otherwise noted or contradicted by context is to be construed as a nonempty collection comprising one or more members. Further unless otherwise noted or contradicted by context the term subset of a corresponding set does not necessarily denote a proper subset of the corresponding set but the subset and the corresponding set may be equal.

Conjunctive language such as phrases of the form at least one of A B and C or at least one of A B and C unless specifically stated otherwise or otherwise clearly contradicted by context is otherwise understood with the context as used in general to present that an item term etc. may be either A or B or C or any nonempty subset of the set of A and B and C. For instance in the illustrative example of a set having three members used in the above conjunctive phrase at least one of A B and C and at least one of A B and C refers to any of the following sets A B C A B A C B C A B C. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of A at least one of B and at least one of C to each be present.

Operations of processes described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. Processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments of the present disclosure to be practiced otherwise than as specifically described herein. Accordingly the scope of the present disclosure includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the scope of the present disclosure unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

