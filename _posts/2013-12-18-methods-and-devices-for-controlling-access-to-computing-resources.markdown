---

title: Methods and devices for controlling access to computing resources
abstract: Methods and devices for controlling access to resources are disclosed herein. In one example embodiment, the method comprises: executing an application at a first computing device, wherein an attempt to access a computing resource on the computing device is made by the application; determining that the application is not configured to access the computing resource, in response to the attempt; displaying, in a user interface of the computing device, a permission request to allow the application to access the computing resource; and transmitting data from the computing device to the application server, the data notifying the application server that the attempt to access the computing resource was made by the application when the application was not configured to access the computing resource, and the data being usable by the application server to determine whether a corresponding computing resource on at least one different computing device is likely to be accessed when the application is executed on the at least one different computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09112866&OS=09112866&RS=09112866
owner: BlackBerry Limited
number: 09112866
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20131218
---
This application is a continuation of U.S. patent application Ser. No. 13 155 217 filed Jun. 7 2011. The entire contents of U.S. patent application Ser. No. 13 155 217 are hereby incorporated by reference.

Embodiments described herein relate generally to controlling access to computing resources by applications executing on a computing device.

When executing an application on a computing device the application may access functionality provided by a computing resource on the computing device. For example a computing resource may include a camera with which photographic operations may be performed or a Global Positioning System GPS subsystem which may indicate the physical location of the computing device. To prevent unauthorized access to certain computing resources on the computing device by for example third party applications the device may be configured to request permission to access the computing resources from a user before allowing an application to access the computing resource.

An application developer may disclose the computing resources that the developer s application may access when the application is executed on a computing device by identifying those computing resources in an installation manifest. This installation manifest can then be provided to computing devices upon which the application is to be installed. The installation manifest may be read when the application is being installed at a given computing device so that for each of one or more of the computing resources identifying in the installation manifest a permission request to access the computing resource can be displayed to the user before the application is executed.

The computing resources that are identified in an installation manifest associated with an application as being computing resources that the application may access when the application is executed on a given computing device are so identified at the discretion of the application developer. Accordingly the installation manifest may not always be complete.

There may be computing resources that the application accesses during execution that have not been identified in the installation manifest associated with the application. Had those computing resources actually been identified in the installation manifest a user would have been able to accept or deny permission requests to allow the application to access those computing resources during an installation of the application. However since the computing resources were not identified in the installation manifest a user may not become aware that the application will access those computing resources until after the installation of the application is complete and the application is being executed i.e. at runtime . When during execution of the application the application accesses a computing resource that the installation manifest fails to identify an out of context and undesirable prompt may be displayed to the user. Such prompts are generally undesirable because it may be preferable to obtain user permissions regarding access to computing resources by an application when the application is installed and not later when the computing resources are actually accessed.

In general permission requests that are displayed during execution of the application can disrupt the user experience of the application. For example if a device attempts to upload a stored photo from an application the device may be provide a prompt with a request to access the file system on the computing device before being allowed to select the desired photo. This may be jarring and inconvenient for the user.

Also permission requests to allow an application to access computing resources may indicate to a user that the application is potentially harmful. For example if a game application attempts to access private email messages on the computing device this may raise a security concern regarding the application. The user might have elected not to install this application in the first place if the user were made aware of this application s behavior prior to installation. Therefore it may be desirable to allow the user to deal with these permission requests during installation of the application and not during execution of the application after the application has already been installed.

At least some embodiments described herein generally relate to methods that facilitate the indication to a computing device during installation of an application that a computing resource will likely be accessed on the computing device by the application even though the computing resource is not yet so identified in an installation manifest associated with that application. This may minimize the number of permission requests to access computing resources that will be displayed to a user during execution of the application.

In one broad aspect there is provided a method of transmitting data from a computing device to an application server the method comprising executing an application at the computing device wherein an attempt to access a computing resource on the computing device is made by the application determining that the application is not configured to access the computing resource in response to the attempt displaying in a user interface of the computing device a permission request to allow the application to access the computing resource and transmitting data from the computing device to the application server the data notifying the application server that the attempt to access the computing resource was made by the application when the application was not configured to access the computing resource and the data being usable by the application server to determine whether a corresponding computing resource on at least one different computing device is likely to be accessed when the application is executed on the at least one different computing device.

In some embodiments the application is not configured to access the computing resource if an installation manifest associated with the application fails to identify the computing resource as a resource that the application will access on the computing device when the application is executed.

In some embodiments the method further comprises downloading the application to the computing device downloading the installation manifest associated with the application to the computing device and installing the application on the computing device. The method may further comprise allowing the application to access the computing resource if an acceptance of the permission request is received.

In another broad aspect there is provided a computing device configured to transmit data to an application server wherein the computing device comprises a processor configured to execute an application wherein an attempt to access a computing resource on the computing device is made by the application determine that the application is not configured to access the computing resource in response to the attempt display in a user interface of the computing device a permission request to allow the application to access the computing resource and transmit data to the application server the data notifying the application server that the attempt to access the computing resource was made by the application when the application was not configured to access the computing resource and the data being usable by the application server to determine whether a corresponding computing resource on at least one different computing device is likely to be accessed when the application is executed on the at least one different computing device. The computing device may comprise a mobile device.

In another broad aspect there is provided a computer readable medium comprising instructions which when executed by a processor of a computing device cause the processor to perform a method of transmitting data from the computing device to an application server and wherein the method comprises executing an application at the computing device wherein an attempt to access a computing resource on the computing device is made by the application determining that the application is not configured to access the computing resource in response to the attempt displaying in a user interface of the computing device a permission request to allow the application to access the computing resource and transmitting data from the computing device to the application server the data notifying the application server that the attempt to access the computing resource was made by the application when the application was not configured to access the computing resource and the data being usable by the application server to determine whether a corresponding computing resource on at least one different computing device is likely to be accessed when the application is executed on the different computing device.

In another broad aspect there is provided a method of indicating that a computing resource is accessed by an application the method performed by a processor of an application server the method comprising receiving from a first computing device data indicating that an attempt to access the computing resource on the first computing device was made by the application when the application was not configured to access the computing resource on the first computing device for the computing resource on at least one different second computing device that corresponds to the computing resource on the first computing device determining that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device and transmitting to the at least one second computing device data indicating that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device.

In some embodiments the method may further comprise computing a number of first computing devices from which the data indicating that an attempt to access a computing resource on the first computing device was made by the application when the application was not configured to access the computing resource on the first computing device is received and verifying that the number meets or exceeds a predefined threshold before determining that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device.

In some embodiments the predefined threshold is a number that is configurable at the application server.

In some embodiments the application is not configured to access the computing resource on the first computing device if an installation manifest associated with the application fails to identify the computing resource on the first computing device as a resource that the application will access on the first computing device when the application is executed on the first computing device.

In some embodiments the method further comprises transmitting to a developer device a request that the installation manifest associated with the application be updated to indicate that the computing resource is likely to be accessed by the application when the application is executed.

In another broad aspect there is provided a server device configured to indicate that a computing resource is accessed by an application the server device comprising a processor configured to receive from a first computing device data indicating that an attempt to access the computing resource on the first computing device was made by the application when the application was not configured to access the computing resource on the first computing device for the computing resource on at least one different second computing device that corresponds to the computing resource on the first computing device determine that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device and transmit to the at least one second computing device data indicating that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device.

In another broad aspect there is provided a computer readable medium comprising instructions which when executed by a processor of a server device cause the processor to perform a method of indicating that a computing resource is accessed by an application wherein the method comprises receiving from a first computing device data indicating that an attempt to access the computing resource on the first computing device was made by the application when the application was not configured to access the computing resource on the first computing device for the computing resource on at least one different second computing device that corresponds to the computing resource on the first computing device determining that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device and transmitting to the at least one second computing device data indicating that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device.

In another broad aspect there is provided a method of managing access to a computing resource the method comprising determining at least one computing resource on the computing device that an application is configured to access when the application is executed for a computing resource on the computing device that the application is not configured to access when the application is executed receiving at the computing device data that indicates that the computing resource is likely to be accessed when the application is executed on the computing device and determining that the computing resource on the computing device that the application is not configured to access when the application is executed is likely to be accessed when the application is executed on the computing device based on the data and displaying in a user interface of the computing device a first permission request to allow the application to access the computing resource on the computing device that the application is not configured to access when the application is executed.

In some embodiments the method may further comprise downloading an installation manifest associated with the application to the computing device the installation manifest identifying the at least one computing resource on the computing device that the application is configured to access when the application is executed and the installation manifest failing to identify the computing resource on the computing device that the application is not configured to access when the application is executed.

In some embodiments the method may further comprise displaying at least one second permission request to allow the application to access the at least one computing resource on the computing device that the application is configured to access when the application is executed the first permission request being visually distinguishable when displayed in the user interface of the computing device from the at least one second permission request.

In some embodiments the displaying is performed during an installation of the application on the computing device.

In some embodiments the method may further comprise allowing the application to access the computing resource on the computing device that the application is not configured to access when the application is executed if the first permission request is accepted.

In another broad aspect there is provided a computing device configured to manage access to a computing resource the computing device comprising a processor configured to determine at least one computing resource on the computing device that an application is configured to access when the application is executed for a computing resource on the computing device that the application is not configured to access when the application is executed receive at the computing device data that indicates that the computing resource is likely to be accessed when the application is executed on the computing device and determine that the computing resource on the computing device that the application is not configured to access when the application is executed is likely to be accessed when the application is executed on the computing device based on the data and display in a user interface of the computing device a first permission request to allow the application to access the computing resource on the computing device that the application is not configured to access when the application is executed. The computing device may comprise a mobile device.

In another broad aspect there is provided a computer readable medium comprising instructions which when executed by a processor of a computing device cause the processor to perform a method of managing access to a computing resource wherein the method comprises determining at least one computing resource on the computing device that an application is configured to access when the application is executed for a computing resource on the computing device that the application is not configured to access when the application is executed receiving at the computing device data that indicates that the computing resource is likely to be accessed when the application is executed on the computing device and determining that the computing resource on the computing device that the application is not configured to access when the application is executed is likely to be accessed when the application is executed on the computing device based on the data and displaying in a user interface of the computing device a first permission request to allow the application to access the computing resource on the computing device that the application is not configured to access when the application is executed.

In another broad aspect there is provided a system for managing access to a computer resource wherein the system comprises a first computing device configured to transmit data to an application server wherein the first computing device comprises a first processor configured to execute an application wherein an attempt to access a computing resource on the first computing device is made by the application determine that the application is not configured to access the computing resource in response to the attempt display in a user interface of the first computing device a permission request to allow the application to access the computing resource on the first computing device and transmit data to the application server the data notifying the application server that the attempt to access the computing resource was made by the application when the application was not configured to access the computing resource the application server comprising a second processor configured to receive from the first computing device data indicating that the attempt to access the computing resource on the first computing device was made by the application when the application was not configured to access the computing resource on the first computing device for the computing resource on at least one second computing device that corresponds to the computing resource on the first computing device determine that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device and transmit to the at least one second computing device data indicating that the computing resource on the at least one second computing device is likely to be accessed when the application is executed on the at least one second computing device and the second computing device comprising a third processor configured to determine at least one computing resource on the second computing device that the application is configured to access when the application is executed for a computing resource on the second computing device that the application is not configured to access when the application is executed receive at the second computing device application server data that indicates that the computing resource on the second computing device is likely to be accessed when the application is executed on the second computing device and determine that the computing resource on the second computing device that the application is not configured to access when the application is executed is likely to be accessed when the application is executed on the second computing device based on the application server data and display in a user interface of the second computing device a permission request to allow the application to access the computing resource on the second computing device that the application is not configured to access when the application is executed.

Reference is first made to for a general description of an example structure of a mobile device and how the mobile device operates and communicates with other devices. The mobile device sometimes referred to alternatively as a mobile station or portable electronic device may comprise a two way communication device with advanced data communication capabilities having the capability to communicate with other computer systems and devices. The mobile device may include the capability for voice communications data communications or a combination of the two. Depending on the functionality provided by the mobile device it may be referred to as a smartphone a data messaging device a two way pager a cellular telephone with data messaging capabilities a wireless Internet appliance a laptop computer a tablet computer a media player such as an MP3 player an electronic book reader or a data communication device with or without telephony capabilities . Although a mobile device is described herein by way of illustration embodiments described herein may be applicable to other computing devices other than mobile devices. For example embodiments described herein may be applied to other computing platforms that guard resources with permission access requests in variant implementations.

Referring now to specifically a block diagram of a mobile device in one example implementation is shown generally. Mobile device comprises a number of components the controlling component being microprocessor . Microprocessor controls the overall operation of mobile device . In some embodiments certain communication functions including data and voice communications are performed through communication subsystem . Communication subsystem receives messages from and sends messages to a wireless network .

In this example implementation of mobile device communication subsystem may be configured for cellular communication in accordance with the Global System for Mobile Communication GSM and General Packet Radio Services GPRS standards. The GSM GPRS wireless network is used worldwide and it is expected that other standards such as Enhanced Data GSM Environment EDGE and Universal Mobile Telecommunications Service UMTS may be employed. These standards are mentioned as examples only and other standards may be employed on computing devices to which embodiments described herein are applied.

New standards are still being defined but it is believed that they will have similarities to the network behavior described herein and it will also be understood by persons skilled in the art that the described embodiments are intended to use any other suitable standards that are developed in the future. The wireless link connecting communication subsystem with network represents one or more different Radio Frequency RF channels operating according to defined protocols specified for GSM GPRS communications. With newer network protocols these channels are capable of supporting both circuit switched voice communications and packet switched data communications.

The wireless network associated with mobile device may comprise a GSM GPRS wireless network in one example implementation of mobile device however other wireless networks may also be associated with mobile device in variant implementations. Different types of wireless networks that may be employed include for example data centric wireless networks voice centric wireless networks and dual mode networks that can support both voice and data communications over the same physical base stations. Combined dual mode networks include but are not limited to Code Division Multiple Access CDMA or CDMA2000 networks GSM GPRS networks as mentioned above and n generation e.g. 2.5G 3G 3.5G 4G etc. networks like EDGE UMTS High Speed Downlink Packet Access HSDPA High Speed Uplink Packet Access HSDPA High Speed Packet Access HSPA and Long Term Evolution LTE etc. Some older examples of data centric networks include the Mobitex Radio Network and the DataTAC Radio Network. Examples of older voice centric data networks include Personal Communication Systems PCS networks like GSM and Time Division Multiple Access TDMA systems.

Microprocessor also interacts with additional subsystems such as a Random Access Memory RAM flash memory display auxiliary input output I O subsystem serial port keyboard one or more speakers microphone short range communication subsystem and other device subsystems .

Some of the subsystems of mobile device perform communication related functions whereas other subsystems may provide resident or on device functions. By way of example display and keyboard may be used for both communication related functions such as entering a text message for transmission over network and device resident functions such as a calculator media player or task list. Operating system software used by microprocessor is typically stored in a persistent store such as flash memory which may alternatively be a read only memory ROM or similar storage element not shown . Those skilled in the art will appreciate that the operating system specific device applications illustrated as applications in below or parts thereof may be temporarily loaded into a volatile store such as RAM .

In some embodiments mobile device may send and receive communication signals over network after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of a mobile device . To identify a subscriber mobile device may require a Subscriber Identity Module or SIM card to be inserted in a SIM interface in order to communicate with a network. SIM is one type of a conventional smart card used to identify a subscriber of mobile device and to personalize the mobile device among other things. Without SIM mobile device is not fully operational for communication with network .

By inserting SIM into SIM interface a subscriber can access all subscribed services. Services could include web browsing and messaging such as e mail voice mail Short Message Service SMS media transfers such as music downloading or streaming and Multimedia Messaging Services MMS . More advanced services may include point of sale field service and sales force automation. SIM includes a processor and memory for storing information. Once SIM is inserted in SIM interface it is coupled to microprocessor . In order to identify the subscriber SIM contains some user parameters such as an International Mobile Subscriber Identity IMSI . An advantage of using SIM is that subscribers are not necessarily bound by any single physical mobile device. SIM may store additional subscriber information for a mobile device as well including datebook or calendar information and recent call information. In certain embodiments SIM may be a different type of user identifier and may be integral to mobile device or not present at all. By way of further examples a Universal Integrated Circuit Card UICC eUICC Embedded UICC Removable User Identify Module R UIM CDMA Subscriber Identify Module CSIM or Universal Subscriber Identify Module USIM may be employed.

Mobile device includes a power pack that supplies power to electronic components and that supports portability. The power pack may be of any type but for clarity it will be assumed that mobile device is a battery powered device and includes a battery interface for receiving one or more rechargeable batteries . Battery interface is coupled to a regulator not shown which assists battery in providing power V to mobile device . Although current technology makes use of a battery future technologies such as micro fuel cells may provide the power to mobile device .

Microprocessor in addition to its operating system functions enables execution of software applications on mobile device . A set of applications that control basic device operations including data and voice communication applications will normally be installed in flash memory or other non volatile storage on mobile device during its manufacture.

Additional applications may also be loaded onto mobile device through network auxiliary I O subsystem serial port short range communications subsystem or the other device subsystems . This flexibility in application installation increases the functionality of mobile device and may provide enhanced on device functions communication related functions or both. For example secure communication applications may enable electronic commerce functions and other such financial transactions to be performed using mobile device . Numerous other types of applications may be loaded onto mobile device or other computing devices including without limitation messaging applications e.g. e mail text instant video etc. voice communication applications calendar applications address book applications utility applications browser application media player e.g. audio video etc. applications social network applications camera applications gaming applications productivity applications etc.

Serial port enables a subscriber to set preferences through an external device or software application and extends the capabilities of mobile device by providing for information or software downloads to mobile device other than through a wireless communication network. The alternate download path may for example be used to load an encryption key onto mobile device through a direct and thus reliable and trusted connection to provide secure device communication.

It should be noted that the term download and forms thereof as used herein in the specification and in the claims are used generally to describe a transfer of data from one system to another and is not intended to be limiting with regards to the origin or destination of the transfer for example. Accordingly where the term download and forms thereof are used in the specification and in the claims it is intended to encompass other forms of transfers including for example an upload or a sideload of data e.g. a Universal Serial Bus USB sideload .

Short range communications subsystem provides for wireless device connections to enable communication between mobile device and different systems or devices without the use of network . For example subsystem may include an infrared device and associated circuits and components for short range communication. Examples of short range communication would include standards developed by the Infrared Data Association IrDA Near Field Communication NFC Bluetooth and the 802.11 family of standards developed by IEEE.

In use a received signal such as a text message an e mail message or web page download will be processed by communication subsystem and input to microprocessor . Microprocessor will then process the received signal for output to display or alternatively to auxiliary I O subsystem . A subscriber may also compose data items such as e mail messages for example using keyboard in conjunction with display and possibly auxiliary I O subsystem . Auxiliary I O subsystem may include devices such as a touch screen mouse infrared fingerprint detector or a roller wheel with a dynamic button pressing capability. Further auxiliary I O subsystem may comprise a two dimensional navigation or scrolling component such as a track ball a joystick or a directional pad each optionally with a dynamic button pressing capability. Keyboard is an alphanumeric keyboard and or telephone type keypad. A composed item may be transmitted over network through communication subsystem .

For voice communications the overall operation of mobile device is substantially similar except that the received signals would be output to the one or more speakers and signals for transmission would be generated by microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on mobile device . Although voice or other audio signal output is accomplished primarily through the one or more speakers display may also be used to provide additional information such as the identity of a calling party duration of a voice call or other voice call related information. Microphone can receive a supply of power in the form of a bias voltage and bias current from the rechargeable battery . Different types and configurations of microphone can be incorporated into the mobile device .

Referring now to specifically a block diagram of the communication subsystem of is shown. Communication subsystem comprises a receiver a transmitter one or more embedded or internal antenna elements Local Oscillators LOs and a processing module such as a Digital Signal Processor DSP .

The particular design of communication subsystem is dependent upon the network in which mobile device is intended to operate thus it should be understood that the design illustrated in serves only as one example. Signals received by antenna through network are input to receiver which may perform such common receiver functions as signal amplification frequency down conversion filtering channel selection and analog to digital A D conversion. A D conversion of a received signal allows more complex communication functions such as demodulation and decoding to be performed in DSP . In a similar manner signals to be transmitted are processed including modulation and encoding by DSP . These DSP processed signals are input to transmitter for digital to analog D A conversion frequency up conversion filtering amplification and transmission over network via antenna . DSP not only processes communication signals but also provides for receiver and transmitter control. For example the gains applied to communication signals in receiver and transmitter may be adaptively controlled through automatic gain control algorithms implemented in DSP .

The wireless link between mobile device and a network may contain one or more different channels typically different RF channels and associated protocols used between mobile device and network . A RF channel is a limited resource that must be conserved typically due to limits in overall bandwidth and limited battery power of mobile device .

When mobile device is fully operational transmitter is typically keyed or turned on only when it is sending to network and is otherwise turned off to conserve resources. Similarly receiver is periodically turned off to conserve power until it is needed to receive signals or information if at all during designated time periods.

Referring now to specifically a block diagram of a node of a wireless network is shown as . In practice network comprises one or more nodes . Mobile device communicates with a node within wireless network . In the example implementation of node is configured in accordance with General Packet Radio Service GPRS and Global Systems for Mobile GSM technologies. Node includes a base station controller BSC with an associated tower station a Packet Control Unit PCU added for GPRS support in GSM a Mobile Switching Center MSC a Home Location Register HLR a Visitor Location Registry VLR a Serving GPRS Support Node SGSN a Gateway GPRS Support Node GGSN and a Dynamic Host Configuration Protocol DHCP . This list of components is not meant to be an exhaustive list of the components of every node within a GSM GPRS network but rather a list of components that are commonly used in communications through network .

In a GSM network MSC is coupled to BSC and to a landline network such as a Public Switched Telephone Network PSTN to satisfy circuit switched requirements. The connection through PCU SGSN and GGSN to the public or private network Internet also referred to herein generally as a shared network infrastructure represents the data path for GPRS capable mobile devices. In a GSM network extended with GPRS capabilities BSC also contains a Packet Control Unit PCU that connects to SGSN to control segmentation radio channel allocation and to satisfy packet switched requirements. To track mobile device location and availability for both circuit switched and packet switched management HLR is shared between MSC and SGSN . Access to VLR is controlled by MSC .

Station is a fixed transceiver station. Station and BSC together form the fixed transceiver equipment. The fixed transceiver equipment provides wireless network coverage for a particular coverage area commonly referred to as a cell . The fixed transceiver equipment transmits communication signals to and receives communication signals from mobile devices within its cell via station . The fixed transceiver equipment normally performs such functions as modulation and possibly encoding and or encryption of signals to be transmitted to the mobile device in accordance with particular usually predetermined communication protocols and parameters under control of its controller. The fixed transceiver equipment similarly demodulates and possibly decodes and decrypts if necessary any communication signals received from mobile device within its cell. Communication protocols and parameters may vary between different nodes. For example one node may employ a different modulation scheme and operate at different frequencies than other nodes.

For all mobile devices registered with a specific network permanent configuration data such as a user profile is stored in HLR . HLR also contains location information for each registered mobile device and can be queried to determine the current location of a mobile device. MSC is responsible for a group of location areas and stores the data of the mobile devices currently in its area of responsibility in VLR . Further VLR also contains information on mobile devices that are visiting other networks. The information in VLR includes part of the permanent mobile device data transmitted from HLR to VLR for faster access. By moving additional information from a remote HLR node to VLR the amount of traffic between these nodes can be reduced so that voice and data services can be provided with faster response times and at the same time requiring less use of computing resources.

SGSN and GGSN are elements added for GPRS support namely packet switched data support within GSM. SGSN and MSC have similar responsibilities within wireless network by keeping track of the location of each mobile device . SGSN also performs security functions and access control for data traffic on network . GGSN provides internetworking connections with external packet switched networks and connects to one or more SGSN s via an Internet Protocol IP backbone network operated within the network . During normal operations a given mobile device must perform a GPRS Attach to acquire an IP address and to access data services. This requirement is not present in circuit switched voice channels as Integrated Services Digital Network ISDN addresses are used for routing incoming and outgoing calls. Currently all GPRS capable networks use private dynamically assigned IP addresses thus requiring a DHCP server connected to the GGSN . There are many mechanisms for dynamic IP assignment including using a combination of a Remote Authentication Dial In User Service RADIUS server and DHCP server.

Once the GPRS Attach is complete a logical connection is established from a mobile device through PCU and SGSN to an Access Point Node APN within GGSN . The APN represents a logical end of an IP tunnel that can either access direct Internet compatible services or private network connections. The APN also represents a security mechanism for network insofar as each mobile device must be assigned to one or more APNs and mobile devices cannot exchange data without first performing a GPRS Attach to an APN that it has been authorized to use. The APN may be considered to be similar to an Internet domain name such as myconnection.wireless.com .

Once the GPRS Attach is complete a tunnel is created and all traffic is exchanged within standard IP packets using any protocol that can be supported in IP packets. This includes tunneling methods such as IP over IP as in the case with some IPSecurity IPsec connections used with Virtual Private Networks VPN . These tunnels are also referred to as Packet Data Protocol PDP Contexts and there are a limited number of these available in the network . To maximize use of the PDP Contexts network will run an idle timer for each PDP Context to determine if there is a lack of activity. When a mobile device is not using its PDP Context the PDP Context can be deallocated and the IP address returned to the IP address pool managed by DHCP server .

Referring now to a block diagram illustrating components of a host system in one example configuration is shown. Host system will typically be a corporate office or other local area network LAN but may instead be a home office computer or some other private system for example in variant implementations. In this example shown in host system is depicted as a LAN of an organization to which a user of mobile device belongs.

LAN comprises a number of network components connected to each other by LAN connections . For instance a user s desktop computer with an accompanying cradle for the user s mobile device is situated on LAN . Cradle for mobile device may be coupled to computer by a serial or a USB connection for example. Other user computers are also situated on LAN and each may or may not be equipped with an accompanying cradle for a mobile device. Cradle facilitates the loading of information e.g. PIM data private symmetric encryption keys to facilitate secure communications between mobile device and LAN from user computer to mobile device and may be particularly useful for bulk information updates often performed in initializing mobile device for use. The information downloaded to mobile device may include certificates used in the exchange of messages. It will be understood by persons skilled in the art that user computers will typically be also connected to other peripheral devices not explicitly shown in .

Embodiments described herein relate generally to control of applications e.g. . Accordingly only a subset of network components of LAN are shown in for ease of exposition and it will be understood by persons skilled in the art that LAN will comprise additional components not explicitly shown in for this example configuration. More generally LAN may represent a smaller part of a larger network not shown of the organization and may comprise different components and or be arranged in different topologies than that shown in the example of .

In this example mobile device communicates with LAN through a node of wireless network and a shared network infrastructure such as a service provider network or the public Internet. Access to LAN may be provided through one or more routers not shown and computing devices of LAN may operate from behind a firewall or proxy server .

In a variant implementation LAN comprises a wireless VPN router not shown to facilitate data exchange between the LAN and mobile device . The concept of a wireless VPN router is new in the wireless industry and implies that a VPN connection can be established directly through a specific wireless network to mobile device . The possibility of using a wireless VPN router has only recently been available and could be used when the new Internet Protocol IP Version 6 IPV6 arrives into IP based wireless networks. This new protocol will provide enough IP addresses to dedicate an IP address to every mobile device making it possible to push information to a mobile device at any time. An advantage of using a wireless VPN router is that it could be an off the shelf VPN component not requiring a separate wireless gateway and separate wireless infrastructure to be used. A VPN connection would preferably be a Transmission Control Protocol TCP IP or User Datagram Protocol UDP IP connection to deliver the messages directly to mobile device in this variant implementation.

Secure communication protocols rely on public and private encryption keys to provide confidentiality and integrity and on a Public Key Infrastructure PKI to communicate information that provides authentication and authorization. Data encrypted using a private key of a private key public key pair can only be decrypted using the corresponding public key of the pair and vice versa. Private key information is never made public whereas public key information is shared.

For example if a sender wishes to send a message to a recipient in encrypted form the recipient s public key is used to encrypt a message which can then be decrypted only using the recipient s private key. Alternatively in some encoding techniques a one time session key is generated and used to encrypt the body of a message typically with a symmetric encryption technique e.g. Triple DES . The session key is then encrypted using the recipient s public key e.g. with a public key encryption algorithm such as RSA which can then be decrypted only using the recipient s private key. The decrypted session key can then be used to decrypt the message body. The message header may be used to specify the particular encryption scheme that must be used to decrypt the message. Other encryption techniques based on public key cryptography may be used in variant implementations. However in each of these cases only the recipient s private key may be used to facilitate decryption of the message and in this way the confidentiality of messages can be maintained.

As a further example a sender may sign a message using a digital signature. A digital signature is a digest of the message e.g. a hash of the message encrypted using the sender s private key which can then be appended to the outgoing message. To verify the signature of the message when received the recipient uses the same technique as the sender e.g. using the same standard hash algorithm to obtain a digest of the received message. The recipient also uses the sender s public key to decrypt the digital signature in order to obtain what should be a matching digest for the received message. If the digests of the received message do not match this suggests that either the message content was changed during transport and or the message did not originate from the sender whose public key was used for verification. By verifying a digital signature in this way authentication of the sender and message integrity can be maintained.

An encoded message may be encrypted signed or both encrypted and signed. The authenticity of public keys used in these operations is validated using certificates. A certificate is a digital document issued by a certificate authority CA . Certificates are used to authenticate the association between users and their public keys and essentially provides a level of trust in the authenticity of the users public keys. Certificates contain information about the certificate holder with certificate contents typically formatted in accordance with an accepted standard e.g. X.509 .

For a public key to be trusted its issuing organization must be trusted. The relationship between a trusted CA and a user s public key can be represented by a series of related certificates also referred to as a certificate chain. The certificate chain can be followed to determine the validity of a certificate.

Certificate servers store information about certificates and lists identifying certificates that have been revoked. These certificate servers can be accessed to obtain certificates and to verify certificate authenticity and revocation status. For example a Lightweight Directory Access Protocol LDAP server may be used to obtain certificates and an Online Certificate Status Protocol OCSP server may be used to verify certificate revocation status.

User computers can obtain certificates from a number of sources for storage on computers and or mobile devices e.g. mobile device . These certificate sources may be private e.g. dedicated for use within an organization or public may reside locally or remotely and may be accessible from within an organization s private network or through the Internet for example. In the example shown in multiple PKI servers associated with the organization reside on LAN . PKI servers include a CA server for issuing certificates an LDAP server used to search for and download certificates e.g. for individuals within the organization and an OCSP server used to verify the revocation status of certificates.

Certificates may be retrieved from LDAP server by a user computer for example to be downloaded to mobile device via cradle . However in a variant implementation LDAP server may be accessed directly i.e. over the air in this context by mobile device and mobile device may search for and retrieve individual certificates through a mobile data server . Similarly mobile data server may be adapted to allow mobile device to directly query OCSP server to verify the revocation status of certificates.

In variant implementations only selected PKI servers may be made accessible to mobile devices e.g. allowing certificates to be downloaded only from a user s computer while allowing the revocation status of certificates to be checked from mobile device .

In variant implementations certain PKI servers may be made accessible only to mobile devices registered to particular users as specified by an IT administrator possibly in accordance with an IT policy for example.

Other sources of certificates not shown may include a Windows certificate store another secure certificate store on or outside LAN and smart cards for example.

Applications executable on a mobile device may be stored on an application server . Application server may have an application database not shown that stores applications for download and execution on the mobile device . To have access to the applications stored on the application server each user may have a user account managed by the application server . Access to the application server may be provided via a client application operating on mobile device although in variant embodiments access to the application server may be provided through a web browser for example.

As illustrated the application server may comprise an internal network server of the host system used to store applications to be deployed to the organization s mobile devices . In a variant embodiment the application server may additionally or alternatively provide an application store or application market that is accessible from the mobile device . The application store may allow users of a mobile device to search for purchase and download applications to their mobile device . In some embodiments the application server may reside outside of the host system on a remote system accessible via the public or private network for example.

For ease of understanding the described embodiments related to application control further illustrates a simplified view of a subset of components of the mobile device described above. The mobile device may run software applications sometimes referred to simply as apps that access computing resources on the mobile device . Applications may be stored in the flash memory of the mobile device or other persistent store and may access computing resources available on the mobile device when executed. Access may be in the form of the applications invoking application programming interfaces APIs made available by the OS to access the computing resources for example.

Computing resources may be associated with a hardware component e.g. sensors radios or peripherals described above or a software module e.g. ones that provide access to data or communication buses described above and may be made accessible to the application via an API provided by the operating system OS of the mobile device . For example the mobile device may allow applications to access a GPS subsystem that is capable of determining the physical location of the mobile device or a camera subsystem that is capable of capturing photographs or video. Other accessible resources may include access to software functionality e.g. encryption services or data e.g. phone book entries available on the mobile device for example.

An installation manifest not explicitly shown in that identifies the computing resources that an application may access when the application is executed on mobile device may be associated with the application . Accordingly when a given computing resource is identified in an installation manifest associated with an application the application is configured to access the computing resource and the user can expect that computing resource to be accessed by the application though not necessarily in every single instance when the application executes. Conversely when the installation manifest associated with the application fails to identify the computing resource as a resource that the application will access on the computing device when the application is executed then the application is not configured to access the computing resource.

The installation manifest may be uploaded with the application to the application server from a developer device by the application developer. The installation manifest may be stored with the application on the application server and subsequently provided with an application being downloaded to mobile device .

A software or application developer creating the application may include the installation manifest in an application manifest that describes the application which may be specifically formatted for the operating system OS that the application is intended to be executed on. For example the application manifest may be a property list plist file for the iOS operating system or an AndroidManifest.xml file in the Android operating system in some implementations. The application manifest may be stored in an XML format.

Referring now to a flowchart diagram illustrating acts associated with at least one example embodiment is shown generally as . For convenience embodiments are described in the context of a mobile device such as the mobile device shown in .

To more clearly illustrate the acts of reference will also be made to B and which show examples of visual output involving an example scenario where an application entitled CycleNation that is installed on two separate mobile devices Bob s device and Sylvia s device will be discussed.

At an application e.g. application of is downloaded from an application server e.g. application server of to a first mobile device e.g. mobile device the application being transmitted from the application server to the mobile device at .

In the case where applications stored on an application server are provided in an application store application may be downloaded at as a result of a mobile device searching for applications available on the application store identifying a desired application and downloading the desired application to mobile device . In another embodiment the transmission of the application may occur as a result of information technology IT personnel of an organization e.g. an administrator deciding to deploy an application to mobile devices within their organization through the host system .

At an installation manifest associated with the application downloaded at is also downloaded to the first mobile device the installation manifest being transmitted from the application server to the first mobile device at . As previously noted the installation manifest identifies computing resources that the application may access when the application is executed on the first mobile device . In some embodiments the installation manifest may be downloaded together with the application e.g. in a package bundle downloaded at .

At the first mobile device installs the application downloaded at . The installation process may include displaying to a user in a user interface e.g. in display of permission requests to access each of the computing resources identified in the installation manifest downloaded to the first mobile device at and associated with the application .

In an example scenario a user Bob may find a cycling application entitled CycleNation in an application store available for download to his mobile device. The CycleNation application may need to determine the location of Bob s mobile device to identify Bob s mobile device on cycling routes and access the application developer s website to display cycling maps. As such the CycleNation application s installation manifest may identify the web browsing and location based services computing resources on Bob s mobile device to indicate that Bob should expect the CycleNation application to access these two resources e.g. their respective APIs of Bob s mobile device when the application is executed.

Referring to an example visual output that may be displayed on a user interface of Bob s device when installing the CycleNation application is shown. As illustrated the permission request is displayed for the web browsing and location based services computing resources each requiring access to Bob s mobile web browser API and location based services API . The location of Bob s device may be determined based on data provided by GPS or wireless networks or both. The permission request may present the option to allow or deny access to each of the listed computing resources. It will be understood that in variant embodiments different user interfaces to present permission requests may be provided. For example permission requests may be provided for each requested computing resource in successive individual screens.

In a variant embodiment permission requests for these resources may not be displayed on the first mobile device and the permission to access the computing resources may be automatically accepted. This may happen for example if the first mobile device can determine that the application developer for the application has a trusted status as defined in a user configuration. Alternatively a security policy e.g. IT policy governing use of the first mobile device may provide that certain permission requests may be automatically accepted.

At at some point in time after the installation of the application at the first mobile device executes the application . This may be performed in response to a user s direction to execute the application by selecting an associated application icon for example. During execution of the application an attempt to access a computing resource on the first mobile device is made by the application .

In the example scenario described above this may involve the mobile device accessing a camera API that the CycleNation application provides to capture photographs of features on a cycling route.

At the first mobile device determines that the application is not configured to access the computing resource in response to the attempt made at . It may do this for example by examining the installation manifest associated with the application and determining that the installation manifest fails to identify the computing resource as a computing resource that the application will access on the first mobile device when the application is executed.

In the example scenario described above the installation manifest for the CycleNation application does not list the camera API as a computing resource that the application will access when the application is executed. This resulted in a permission request not being displayed for the computing resource during installation.

An installation manifest associated with a given application may fail to identify a computing resource as one that the given application will access for various reasons. For example an application may attempt to surreptitiously gain access to a computing resource hoping that after having installed and executed the application the user will be less likely to deny access to certain computing resource on the user s mobile device. In some instances the failure to identify the computing resource in the installation manifest may not be malicious for example an application developer may simply have neglected to update the installation manifest when releasing a new version of the application to indicate that the new version of the application will access a computing resource not previously identified in the installation manifest associated with the application. For example in the CycleNation example scenario the application developer may have added the camera functionality to the application and uploaded it to the application server without making a corresponding update to the installation manifest. As a further example additional functionality may be provided by an application as a result of the application developer adding new features to an application or because a new computing resource is being made available on certain mobile devices.

At the first mobile device displays a permission request to allow the application to access the computing resource that the application is attempting to access at during execution of the application . This permission request may be displayed to a user in a user interface of the first mobile device .

At the first mobile device transmits data that notifies the application server of the attempt to access the computing resource by the application made at when the application was not configured to access the computing resource as determined at . This data is then received by the application server at . At the application may be allowed access to the computing resource if the permission request displayed at is accepted by the user or the access may be otherwise denied which may occur before after or contemporaneously with the transmission of data to the applications server at .

Now referring to further acts performed at application server the data received from first mobile device at may be transmitted from multiple different first mobile devices . For example the application may be installed on a number of first mobile devices and each of those first mobile devices may transmit data to the application server indicating that an attempt to access a particular computing resource was made by the application at all of those first mobile devices .

The greater the number of first mobile devices that the application server receives this notification from the more likely it is that the application actually does access the particular computing resource when the application is executed. Obtaining this type of data from multiple first mobile devices may be referred to as crowd sourcing and the data may be referred to as crowd sourced usage data . The crowd sourced usage data may be used at the application server for example to determine that it is likely that the application accesses the particular computing resource when the application is executed even though the particular computing resource is not identified in the installation manifest associated with the application as being a computing resource that the application will access when the application is executed.

In accordance with at least one embodiment described herein when application server can determine based on the crowd sourced usage data that it has received e.g. at for each first mobile device that the application actually does access the particular computing resource when the application is executed despite the particular computing resource not being so identified in the installation manifest it can use this information to improve the usability of other computing devices e.g. second mobile device . For example application server can provide this information to the other computing devices so that permission requests in respect of the computing resource not identified in the installation manifest may be provided during the installation of an application rather than during the execution of the application. As a further example application server may notify the application s developer to update the installation manifest.

Referring again to at the application server may compute a number of the first mobile devices from which data indicating that an attempt to access a computing resource on the respective first mobile device was made. This may involve tracking and recording the identity of each first mobile device .

At the application server may verify that the number exceeds a predefined threshold before determining that the application is likely to access the computing resource on other second mobile devices when the application is executed on those other second mobile devices . In some embodiments the predefined threshold is a number that is configurable at the application server . For example this may be a minimum number of first computing devices that reports of the attempts to access a computing resource. The minimum number may depend on the type or category of the application . It will be understood that other ways to predefine the threshold may also be possible in variant embodiments.

In at least one embodiment the predefined threshold may be one. That is after receiving data e.g. at indicating that an attempt to access a computing resource on a single mobile device e.g. first mobile device was made the application server may determine that the application is likely to access the computing resource on other devices when the application is executed on those other devices. However a higher threshold may be defined to ensure that the data received at was not the result of a device malfunction.

In a variant embodiment the device may be able to track the number of times i.e. how many instances the computing resource is accessed on the first device after the permission request is accepted at . This information may then also be provided to the application server for use in determining whether the resource is likely to be accessed. For example if a computing resource is seldom accessed again after the initial permission request at the application server may consider this as a factor when determining whether the computing resource is likely to be accessed. A predefined threshold number for accesses after the initial permission request is accepted may also be configured at the application server for this purpose.

At if the number computed at meets or exceeds the predefined threshold the application server determines that the corresponding computing resource on a second mobile device is likely to be accessed when the application is executed on the second mobile device .

In response to the determination at optionally at the application server may transmit to a developer device a request that the installation manifest associated with the application be updated to indicate that the computing resource is likely to be accessed by the application when the application is executed. The request may be useful in informing the application developer that the installation manifest associated with their application needs to be updated e.g. as may be the case when the application developer failed to update the installation manifest when updating their application .

In response to the determination at at the application server transmits data to the second mobile device indicating that the computing resource for which the determination was made is likely to be accessed by the application when the application executed on the second mobile device even though the application may not be configured to access the computing resource at the second mobile device e.g. because the installation manifest fails to identify the computing resource . The data transmitted at may be considered as supplementing the data provided by the installation manifest that is downloaded to the second mobile device . In embodiments where the act at is performed the data transmitted at may occur before after or contemporaneously with the transmission of the request at .

By way of illustration reference is made to the example scenario presented earlier in this description. The CycleNation application may be installed on a number of different first mobile devices. When the application is executed and an attempt to access the camera API is made on one or more of these first mobile devices the application server may receive data from each of these first mobile devices indicating that the CycleNation application is attempting to access the camera API even though the application is not configured to access the camera API of the first mobile device based on the installation manifest associated with the application. If the number of first mobile devices reporting that an attempt to access the camera API was made by the CycleNation application exceeds a predefined threshold the application server may then determine that the CycleNation application is likely to access the camera API on other mobile devices. Subsequently data indicating that the camera API is likely to be accessed can be transmitted to the other mobile devices to inform these other mobile devices even though the other devices may not expect the camera API to be accessed since the installation manifest still fails to identify that the CycleNation application will access the camera API.

The application server is able to obtain information about the computing resources that an application is likely to access by receiving the data from devices on which the applications are already deployed rather than analyzing the application itself or the associated installation manifest. For example the described embodiments may be preferable to known methods of profiling API invocations made by an application to determine the computing resources the application is likely to access since there may be occasions when the mere invocation of an API is insufficient to accurately determine the computing resources that the application will likely access. For example in the Unix operating system an invocation of an Open system function may result in any one of the opening of a file requiring access to the file system computing resource or a socket requiring access to the network communications computing resource depending on the parameters provided in the invocation. As a result an application server may not be able to determine which computing resource the application is likely to access from knowledge and analysis of the API invocation alone.

As previously noted once an application server has determined that a computing resource is likely to be accessed at the second mobile device by the application it can use that information when providing the same application to the second mobile device . Reference is now made to acts performed at the second mobile device in . Some of the acts performed at the second mobile device are analogous to acts previously described with respect to the first mobile device and the reader is directed to the earlier description of these acts for further details.

At the application is transmitted from the application server and downloaded to the second mobile device and at the installation manifest associated with the application may be transmitted and downloaded to the second mobile device in a manner analogous to the corresponding acts performed at the first mobile device .

In accordance with example embodiments described herein prior to installation of the application on the second mobile device the data indicating that the computing resource is likely to be accessed by the application when the application executes on the second mobile device as transmitted by application server at is received at the second mobile device at .

For example the data received at may be received prior to the initiation of an installation . The data received at may be received with the application downloaded at with the installation manifest at or both.

In variant embodiments the data received at may be received in response to the initiation of an installation but before the installation is completed. In these embodiments the data received at may be requested from the application server by the second mobile device not shown in .

In variant embodiments the data received at may be received after installation of an application is completed.

At the second mobile device may determine at least one computing resource on the second mobile device that the application is configured to access when the application is executed. As with the first mobile device the second mobile device may identify computing resources on the installation manifest as those that are likely to be accessed by the application .

Continuing with the CycleNation application example the same installation manifest as downloaded to the first mobile device that identifies the web browsing and location based services computing resources may be downloaded to the second mobile device after or when the CycleNation application is downloaded to the second mobile device. Accordingly the second mobile device may identify the same computing resources as those that are likely to be accessed by the CycleNation application on the first mobile device.

At the second mobile device may determine at least one computing resource on the computing device that the application is not configured to access when the application is executed. As discussed with respect to act above this may be performed by examining the installation manifest associated with the application and the data received at to determine that the installation manifest fails to identify a computing resource as one that will be accessed by the application because the computing resource is identified in the data received at but not in the installation manifest received at .

At the second mobile device displays in a user interface of the second mobile device a first permission request to allow the application to access the identified computing resource on the second mobile device that the application is not configured to access when the application is executed.

If the first permission request is denied the second mobile device may be configured to perform certain acts not shown in which may include without limitation aborting the installation and or deleting the application from the mobile device allowing the application to be installed but not executed or allowing the application to be installed and executed despite the first permission request not being accepted etc.

Optionally the second mobile device may also display at least one second permission request to allow the application to access the at least one computing resource on the computing device that the application is configured to access when the application is executed. Second permission requests may be displayed alongside or generally listed together with the first permission request. In one embodiment the first permission request may be displayed so that it is visually distinguishable from any second permissions requests being displayed to highlight the absence of the associated computing resource from the installation manifest for example. The first permission request may be visually distinguished using an asterisk red or other colored text or highlighting warning language or other formatting or markings. Other ways of drawing attention to the first permission request may be implemented in variant embodiments.

At the second mobile device may allow the application to access to the computing resource on the second mobile device that the application is not configured to access when the application is executed if the first permission request displayed at is accepted. The second mobile device may also allow the application to access to the computing resource on the second mobile device that the application is configured to access when the application is executed if the corresponding second permission request is accepted not explicitly shown in .

Referring to an example visual output showing first and second permission requests for the CycleNation application when installing the application at a second mobile device i.e. Sylvia s device is shown. As illustrated the second permission requests for the computing resources that the application is configured to access web browsing and location based services as identified in the installation manifest are displayed. The first permission request for the camera resource based on the supplementary data provided by the application server is also displayed in a visually distinguished manner with a box around the first permission request and the first permission request is marked with an asterisk. In this example a note is also provided in the user interface to explicitly indicate to the user that the computing resource is not listed in the installation manifest. The user can then select to allow or deny access to each of these computing resources by the CycleNation application through the provided radio buttons or other user interface.

If the first permission request is accepted the installation of the CycleNation application may be permitted to continue for example. If the first permission request is denied the second mobile device may be configured to perform certain acts which may include without limitation aborting the installation and or deleting the application from the mobile device allowing the application to be installed but not executed or allowing the application to be installed and executed despite the first permission request not being accepted etc.

Some of the acts of one or more methods described herein may be provided as software instructions stored on computer readable storage media and executable by a processor. Examples of computer readable storage media may include a hard disk a floppy disk an optical disk e.g. a compact disk a digital video disk a flash drive or flash memory magnetic tape and memory. Other configurations are possible as well.

In variant implementations some of the acts of one or more methods described herein may be provided as executable software instructions stored in transmission media.

As used herein the wording and or is intended to represent an inclusive or. That is X and or Y is intended to mean X or Y or both. Moreover X Y and or Z is intended to mean X or Y or Z or any combination thereof.

The present disclosure makes reference to a number of embodiments. However it will be understood by persons skilled in the art that other variants and modifications may be made without departing from the scope of the embodiments defined in the claims appended hereto.

