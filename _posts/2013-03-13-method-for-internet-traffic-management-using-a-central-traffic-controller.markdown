---

title: Method for internet traffic management using a central traffic controller
abstract: A method for internet traffic management, comprising receiving a request for a path set from an application at a network traffic controller, wherein the request contains an intended traffic destination endpoint, evaluating a plurality of network devices in a network, identifying a plurality of paths usable by the application to transmit traffic from the application to the intended traffic destination endpoint, including the plurality of paths in the path set, and sharing the path set with the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09450874&OS=09450874&RS=09450874
owner: Futurewei Technologies, Inc.
number: 09450874
owner_city: Plano
owner_country: US
publication_date: 20130313
---
This application claims priority to U.S. Provisional Application No. 61 749 087 filed Jan. 4 2013 by Shujin Zhang et al. titled Method For Internet Traffic Management Using A Central Traffic Controller which is incorporated herein by reference in its entirety.

Modern communication and data networks are comprised of nodes that transport data through the network. The nodes include routers and or switches that select paths for the individual data as to travel through the network. As used herein path may mean a list of next hop addresses used by a packet to travel from a source to a destination Internet Protocol IP address. When large amounts of data are to be transported from a common source A to a common destination Z a data path can be established from A to Z. All the data to be transported from A to Z can be mapped to this path. By doing so the nodes in the path no longer need to determine the path to transport the data packets. Instead the nodes merely transport the data to the next node in the path which may improve the efficiency of data transportation. The data is then transported from node to node through the network until the data arrives at the destination node.

Routers commonly establish paths between two end points based on IP addresses at the two end points. Currently A to Z paths may be built by routing protocols and policies using the shortest distance metrics between the source and destination IP addresses e.g. paths having the fewest number of next hop addresses. Once a shortest distance path between end points A and Z is determined all traffic between those end points may be required to follow the same path. Normally routers do not select the second shortest path or third shortest path. However if one source generates comparatively more traffic than another the path servicing that source may become congested.

One attempt to resolve the congestion problem relies on adding more paths to the source. Since paths may be built by routing protocols and policies based on destination IP addresses this approach may be limited by the routing protocols and algorithms.

In another attempt to resolve the congestion problem each IP device makes its own path selection decisions using the destination IP address based on the agreement with other devices. In such a solution the path may be determined before the packet leaves the source tying together path creation and packet forwarding. This may lead to a variety of difficulties including i a node may not make a forwarding decision without the agreement of all of the other nodes ii there may not be a way to use other paths when the shortest path is congested iii it may not be possible to have many paths and to simultaneously use these paths arbitrarily e.g. because Equal Cost Multi Path ECMP routing requires all paths be identical and vi an application may not have much influence on forwarding decision since its IP may have already determined the path.

In still another attempt to resolve the congestion problem every network device may store all the available paths to a destination. In this solution each device may check path conditions and select a path based on the results. This solution may present two problems i this may place an impractical amount of data in the devices and ii checking path conditions during forwarding may demand an impractical amount of processing for the devices.

In one aspect the disclosure includes a method for internet traffic management comprising receiving a request for a path set from an application at a network traffic controller wherein the request contains an intended traffic destination endpoint evaluating a plurality of network devices in a network identifying a plurality of paths usable by the application to transmit traffic from the application to the intended traffic destination endpoint including the plurality of paths in the path set and sharing the path set with the application.

In another aspect the disclosure includes an apparatus comprising a processor configured to request a path set from a network traffic controller receive the path set from the network traffic controller wherein the path set comprises a plurality of paths from the application to a predefined destination select a path from the path set and send traffic to the predefined destination using the selected path.

In yet another aspect the disclosure includes a computer program product comprising computer executable instructions stored on a non transitory medium that when executed by a processor cause the processor to assess the capabilities of a network select a plurality of network devices from the network map for inclusion in a path select a plurality of paths for inclusion in a network view create a network view and share the network view with at least one application.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

The disclosure includes using centralized network traffic controller paradigm to make high level traffic control decisions while retaining some level of individual application control of traffic routing. As used herein the term path may mean a unit of network resource and may have prescribed properties e.g. bandwidth latency jitter and packet loss. A centralized traffic controller e.g. an SDN controller may have global knowledge both of network nodes and all of the paths between the nodes. Applications may create paths using this central traffic controller which will be aware of the global path conditions and may query the central traffic controller for the optimal path. Application requests may include certain performance specifications e.g. service requirements e.g. Wide Access Network WAN Application Acceleration Service WaaS caching service reliability etc. Applications may query the central traffic controller initially and or at periodic intervals including during the course of a single transmission of traffic. Consequently as will be evident to those of ordinary skill the shortest distance metrics i.e. the fewest number of next hop addresses may not be the sole criteria used by the central traffic controller when determining optimal path but rather the optimal path calculation metrics may include a variety of network performance information e.g. avoiding congested areas minimizing packet loss etc. depending on the needs of the application.

The label switched network may comprise a plurality of edge nodes including a first ingress node a second ingress node a plurality of first egress nodes and a plurality of second egress nodes . When a P2MP LSP in the label switched network comprises at least some of the edge nodes the first ingress node and second ingress node may be referred to as root nodes and the first egress nodes and second egress nodes may be referred to as leaf nodes. Additionally the label switched network may comprise a plurality of internal nodes which may communicate with one another and with the edge nodes.

The first ingress node and the second ingress node may communicate with a source node at a first external network such as an Internet Protocol IP network which may be coupled to the label switched network . As such the first ingress node and the second ingress node may transport data e.g. data packets between the label switch network and the external network . In some embodiments the data transported may comprise data associated with inter application communication. In other embodiments the data transported may comprise control signals. In still other embodiments this data may comprise both control signals and inter application communications. In embodiments wherein the data comprises control signals this data may pass through an intermediary central traffic controller or network controller not pictured e.g. a SDN controller that may further comprise a network operating system NOS for controlling one or more internal nodes of switched network . Further some of the first egress nodes and second egress nodes may be grouped in pairs where each pair may be coupled to a second external network or a client.

In an example embodiment the edge nodes and internal nodes may be any devices or components that support transportation of the packets through the label switched network . For example the network nodes may include switches routers servers or various combinations of such devices. The network nodes may receive packets from other network nodes determine which network nodes to send the packets to and transmit the packets to the other network nodes. In some embodiments at least some of the network nodes may be Label Switch Routers LSRs which may be configured to modify or update the labels of the packets transported in the label switched network . Further at least some of the edge nodes may be label edge routers LERs which may be configured to insert or remove the labels of the packets transported between the label switched network and the external network .

The label switched network may comprise a first P2MP LSP which may be established to multicast data traffic from the first external network to the destination nodes or other networks . The first P2MP LSP may comprise the first ingress node and at least some of the first egress nodes . The first P2MP LSP is shown using solid arrow lines in . To protect the first P2MP LSP against link or node failures the label switched network may comprise a second P2MP LSP which may comprise the second ingress node and at least some of the second egress nodes . The second P2MP LSP is shown using dashed arrow lines in . Each second egress node may be paired with a first egress node of the first P2MP LSP . The second P2MP LSP may also comprise some of the same or completely different internal nodes . The second P2MP LSP may provide a backup path to the first P2MP LSP and may be used to forward traffic from the first external network to the first P2MP LSP or second P2MP LSP e.g. to egress node when a network component of P2MP LSP fails.

In applications e.g. software programs hosted on sources or devices e.g. video servers or the source node of may communicate with a central traffic controller or network controller e.g. an SDN controller through SDN API connections facing the applications . The central traffic controller may be configured to perform control path and or control plane functionality such as drawing a network map and defining the information in a routing table that defines what to do with incoming packets. The central traffic controller may be configured for management and control functionality of the control plane which may include routing and resource management. The central traffic controller may include SDN management software modules not depicted and may communicate with lower layer NOSs . NOSs may be hosted on the same device as the central traffic controller or a different device and may monitor and control the underlying network components and e.g. internal nodes of which may separately be any components configured to receive and or transmit data through the data network. The control path is represented by dashed lines and the data path is represented by solid lines. The NOSs may provide an abstraction layer between decision devices and forwarding devices on one side and the central traffic controller on the other may be coupled to the decision devices and forwarding devices and may communicate with the decision devices and forwarding devices e.g. via OpenFlow defined protocols on OpenFlow controllers. The NOSs may possess comprehensive topology knowledge and resource information with respect to the underlying decision devices . The NOSs may pass this information to the central traffic controller which may be maintained by the central traffic controller as a network map. With a network map the central traffic controller may make decisions on how to assign resources and route different application information flows through the SDN architecture .

In some embodiments forwarding devices may only process the outer address of a packet embodiment described below in accordance with this disclosure. The decision devices may function as decision nodes . Decisions nodes may possess a cache storing one or more provider addresses or an address at which a content host may be reached to provide specified content. Upon receipt of a packet from an application the decision node may check whether a cache entry contains one or more provider addresses associated with the data requested in the packet to which the packet may be routed. If so the decision node may route the packet to a selected provider address e.g. by adding a packet header to the original packet from the application and forwarding the packet based on a well defined rule. If not the decision node may ask the central traffic controller for provider addresses and may update its cache upon receipt thereof. When a second decision node receives a packet from a first decision node the second decision node may remove the packet header and deliver the packet to the application s using the original packet header address.

The central traffic controller may comprise a Network Map Controller which may be responsible for identifying and storing the global network topology in a network map. The Network Map Controller may comprise a Network Map Element a Mapping Services Element a Directing Services Element and an Event Services Element . Network Map Element may store the network map. Mapping Services Element may receive input from the network devices for dynamically updating the network map e.g. adding a new node to the physical network topology stored in Network Map Element . Directing Services Element which may be provided by a NOS e.g. NOS of may let applications directly setup forwarding path e.g. by allowing the applications to make routing decisions rather than the routing protocol. Event Services Element may monitor the function of one or more network links and or devices and may inform the Network Map Controller of event based changes e.g. a failed link or component which may trigger a dynamic update to the network map.

The central traffic controller may further comprise a Network View Controller which may be responsible for selecting network views to serve to applications . The Network View Controller may comprise a Network View Element a Network View Element a Network View Element a Path Services Element a Notification Services Element a Discovery Services Element and a Location Services Element . Network View Elements may store sets of paths i.e. path sets and or discrete network views comprising at least a portion of the network map topology from Network Map Element and may be in communication with Applications e.g. via a programmable API or Controller Interface which may be an interface engine for exchanging data between e.g. APIs at applications and the Network View Elements . As shown in a single network view stored at a Network View Element e.g. Network View Element may service a single application e.g. application . Similarly a single application e.g. application may have access to network views stored at multiple Network View Elements e.g. Network View Elements and . In like manner a single network view stored at a single Network View Element e.g. Network View Element may service multiple applications e.g. applications and . The Network View Controller may manage this sharing. The sharing of network views by multiple applications or multiple applications sharing the same network view may optionally be visible to the applications that are using them separately e.g. using Virtual Local Area Network VLAN or Virtual Private Network VPN techniques according to network configurations. The connections between Network View Elements and applications are illustrative of the interactions permissible and are not limiting as would be understood by one of skill in the art. Path Services Element may be responsible for identifying one or more available paths between devices on the physical network and passing the information to the Network View Controller so that appropriate network views may be selected for the requesting application. Notification Services Element may be responsible for interfacing with the applications to inform the applications of events and or changes in the relevant network view s and or underlying physical network e.g. by dynamically updating the network view s . Discovery Services Element may be responsible for identifying services that the network may provide in the network view. Location Services Element may be responsible for finding the service location and one or more preferred paths for reaching the service location.

Returning to network maps a network map and or network topology may be a complete representation of the physical network managed under the Network Map Controller e.g. comprising network components and or forwarding devices of . Network maps may include communication links bandwidth latency port capability etc. of the physical network e.g. network components and or forwarding devices of . Network maps may comprise nodes representing the physical devices and links representing the connections between the physical devices. Nodes may be direct maps of nodes or may be representations of e.g. a subnet in a map. Each node may have a node name assigned by the Network View Controller or in some embodiments by querying a policy database where names may be defined by a Network Manager . Network Manager may be a program for providing detection and configuration for systems to automatically connect to network as well known in the art. Links may be direct maps of paths between nodes may be tunnels e.g. virtual links between nodes or may be abstractions of logical paths between nodes. Links may represent multiple parallel connections between nodes and may be represented by the link s attributes or capabilities. The central traffic controller may further comprise an element for Routing Services for interfacing with the network e.g. network devices which element may comprise a Universal Message Object UMO API.

Network View Elements may comprise select portions of the global network map e.g. as apportioned by the Network View Controller . The Network View Controller may ensure that the Network View Elements are compatible with the requests of the applications . For example if a link in a network view is a virtual link over multiple network nodes e.g. a tunnel or abstraction of a logical path between network nodes the Network View Controller may ensure that the virtual link does not include any loops. Network View Elements may include node and link capabilities. Node capability may be the physical routing device s capability as monitored by e.g. Mapping Services Element or may be any abstract capability defined by the map and Network View Controller . Link capability may be physical link s capability as monitored by e.g. Mapping Services Element or may be any abstract capability defined by the map and Network View Controller . Link capability may be a direct mapping of the link capability if it may be a direct mapping of a link in a map. Link capability may be a tunnel capability that may be the minimum of all capabilities between two nodes. Link capability may be a combination of multiple parallel connections between nodes equal to or less than the summation of the combined link capabilities. Link capability may be classified or reclassified by the Network View Controller based on the application s request and or current network map status. For example if a network map link has a 10 gigabit G bandwidth capacity the mapped link in view may be 2G or 8G etc. depending on e.g. actual conditions in the network etc. If a link has a latency of 1 millisecond ms e.g. the mapped link in the network view passed to the application may have 2 ms according to Network View Controller .

Network View Elements may be created at the request of any application . Requests from applications may provide some special requirements on the network view e.g. minimum capabilities of the nodes and or links. Network View Controller may create the network view according to such requirements coupled with the currently available resources. Network View Controller may assign a network view ID to newly created network views and may allocate system resources to the view e.g. Network View Elements . If the application places no special requirement on the requested network view Network View Controller may create a network view based on currently available network resources and default management policies. Once created the Network View Controller may return the view to application. When the application no longer requires the view it may request that the Network View Controller destroy the network view. Network View Controller may then reclaim all network resources allocated to the network view. In embodiments with isolated network view sharing isolated network views may form complete sub network systems permitting additional functionality e.g. users may build network management and control modules in such network views.

Further information concerning network map and network view architectures in SDNs may be found in U.S. patent application Ser. No. 13 802 297 titled Methods of Representing Software Defined Networking Based Multiple Layer Network Topology Views which application is incorporated herein by reference.

As will be understood by those of skill in the art alternate embodiments may pass greater or lesser amounts of information to applications. Some embodiments may pass simple path information while others may pass whole network maps. Modifications to the present disclosure to suitably achieve the same objective while maximizing resource utilization will be apparent and are within the scope of the present disclosure.

At least some of the features methods described in the disclosure may be implemented in a general computing device and or a network apparatus or component such as a computer or network component with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. For instance the features methods of the disclosure may be implemented using hardware firmware and or software installed to run on hardware. illustrates a typical general purpose network component suitable for implementing one or more embodiments of the components disclosed herein. The network component includes a processor which may be referred to as a central processor unit or CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM input output I O devices e.g. cameras microphones display screens etc. and network connectivity devices . The processor may be implemented as one or more CPU chips or may be part of one or more application specific integrated circuits ASICs and or digital signal processors DSPs .

The secondary storage is typically comprised of one or more disk drives or erasable programmable ROM EPROM and is used for non volatile storage of data. Secondary storage may be used to store programs that are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage .

It is understood that by programming and or loading executable instructions onto the general computing device at least one of the processor the ROM and the RAM are changed transforming the general computing device in part into a particular machine or apparatus e.g. a video codec having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 5 percent . . . 50 percent 51 percent 52 percent . . . 95 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. All documents described herein are incorporated herein by reference.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

