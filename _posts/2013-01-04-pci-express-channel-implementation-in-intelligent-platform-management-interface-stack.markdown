---

title: PCI express channel implementation in intelligent platform management interface stack
abstract: Certain embodiments of the present disclosure are directed to a baseboard management controller (BMC) that includes a PCI express (PCIe) interface controller configured to provide access to a PCIe channel over a PCIe link, and firmware. The firmware includes a PCIe module being configured to access the PCIe channel through the PCIe interface controller and registered as a PCIe function. A software stack of the BMC communicates, through the PCIe module, with a PCIe device over the PCIe channel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09043527&OS=09043527&RS=09043527
owner: AMERICAN MEGATRENDS, INC.
number: 09043527
owner_city: Norcross
owner_country: US
publication_date: 20130104
---
The present disclosure relates generally to a baseboard management controller and more specifically to PCI express channel implementation in an Intelligent Platform Management Interface stack of the baseboard management controller.

Computers are often linked together through networks to allow the resources of a computer at one location to be utilized by users located at a different location. In a distributed environment such as this computers known as servers perform various tasks for client computers that communicate with the servers over a network. Servers enable sharing of files and other resources between client computers and the server. As an example a world wide web web server may provide text graphics and other resources to client computers over the Internet.

It is often necessary to manage the operation of a server computer. For instance it is often desirable to view information regarding the relative health of a server computer. This is especially true for server computers that maintain resources that are utilized by a large number of client computers such as within a corporate network or the internet. For many conventional systems the technician that needs to view the screen displays and interact with the server being managed is required to be physically located at the site of the server. However it is not always feasible for a technician to be physically present at the location of the server computer.

For example a system administrator of a corporate network may be present at one location while the servers of the corporate network may be spread around the country or even the globe. To effectively manage the servers on the corporate network the system administrator must be able to monitor each of the server computers regardless of their location. Because the system administrator cannot be physically present at each server to be managed effective management of the server computers becomes very difficult if not impossible. As a result it can be very costly to maintain servers located in disparate physical locations.

Some systems for remotely administering server computers utilize an integrated or add in management device. Such a management device can provide remote access to detailed information regarding the health and status of a managed server computer. In some cases the management device can also redirect the video output from the server computer to a remote location and allow keyboard and mouse input to be provided to the server from the remote location. In some implementations the management device may also include a baseboard management controller BMC . In general a BMC is a microcontroller that monitors the health and operation of the computer. In one implementation a BMC monitors health related aspects associated with the computer such as the temperature of components within the computer the speed of rotational components e.g. spindle motor CPU fan etc. within the system the voltage across or applied to one or more components within the system and the available or used capacity of memory devices within the system. Other parameters may also be monitored.

In order to make the data gathered by the BMC available to programs and to other computer systems a standard called the Intelligent Platform Management Interface IPMI has been created. IPMI is an industry standard for system monitoring and event recovery. The IPMI specification provides a common message based interface for accessing all of the manageable features in a compatible computer. IPMI includes a rich set of predefined commands for reading temperature voltage fan speed chassis intrusion and other parameters. System event logs hardware watchdogs and power control can also be accessed through IPMI. In this manner IPMI defines protocols for accessing the various parameters collected by a BMC through an operating system or through an external connection such as through a network or serial connection.

In order for a host computer to transfer data to and to receive data from a BMC one of several system interfaces must be utilized. For instance if the host computer desires to upgrade the firmware of the BMC the host computer must utilize a system interface to do so. IPMI traditionally defines only three possible system interfaces a keyboard controller style KCS interface a system management interface chip SMIC interface and a block transfer BT interface. Each of these interfaces however can be very slow. In particular KCS interfaces are based on a legacy keyboard controller interface that is extremely slow. Unfortunately no other communications channels are supported by IPMI for use as a system interface.

Therefore an unaddressed need exists in the art to address the aforementioned deficiencies and inadequacies.

Certain embodiments of the present disclosure are directed to a baseboard management controller BMC . The BMC includes a PCI express PCIe interface controller configured to provide access to a PCIe channel over a PCIe link firmware and a processor. The firmware includes a PCIe module having a data transfer unit the data transfer unit being configured to access the PCIe channel through the PCIe interface controller and registered as a PCIe function a software stack implementing a plurality of functions in accordance with IMPI a PCIe driver configured to provide access to the data transfer unit a PCIe library implementing a plurality functions utilizing through the PCIe driver the data transfer unit and a PCIe handler in communication with the software stack and the PCIe library. A program of the software stack is configured to call the PCIe handler to communicate through the PCIe library and the PCIe driver with a PCIe device over the PCIe channel. The processor is configured to execute the firmware.

In certain embodiments the data transfer unit is configured to establish a data transfer channel between the data transfer unit and the PCIe device over the PCIe link. In certain embodiments the PCIe driver is configured to provide common access to the data transfer channel and is specific to a physical implementation of the PCIe interface controller.

In certain embodiments the PCIe device is a host computer having a data transfer module registered as a PCIe function. The data transfer unit of the BMC is in communication with the data transfer module through the PCIe link and enables data transfer to and from the data transfer module through the established data transfer channel.

In certain embodiments the PCIe handler is configured to receive a request for communication through the PCIe interface controller and to call a function of the PCIe library in response to the request. In certain embodiments a program of the software stack is configured to send a request to the PCIe handler for transferring a file image to the data transfer module of the host computer. The PCIe handler is configured to call in response to the request the PCIe library to load the file image and to transfer the file image to the data transfer module through the established data transfer channel over the PCIe link.

In certain embodiments the PCIe library is configured to provide a function that is called by a calling program and that calls the PCIe driver to detect whether data has been placed in a storage area for the calling program. The PCIe library is further configured to provide a function that calls the PCIe driver to retrieve data stored in the storage area of the data transfer unit and that transfers the retrieved data to the calling program.

Certain embodiments of the present disclosure are directed to a method for utilizing a PCIe interface at a BMC. The method includes operating a PCIe interface controller at the BMC to provide access to a PCIe channel over a PCIe link configuring a data transfer unit of a PCIe module at the BMC to access the PCIe channel through the PCIe interface controller and registering the data transfer unit as a PCIe function executing at a processor of the BMC a software stack that implements a plurality of functions in accordance with IMPI executing a PCIe driver to provide access to the data transfer unit executing a PCIe library that implements a plurality functions utilizing through the PCIe driver the data transfer unit executing a PCIe handler in communication with the software stack and the PCIe library and executing a program of the software stack to call the PCIe handler to communicate through the PCIe library and the PCIe driver with a PCIe device over the PCIe channel.

Certain embodiments of the present disclosure are directed to a non transitory computer storage medium having computer executable instructions stored thereon. The instructions when executed by a processor of a BMC cause the processor to operate a PCIe interface controller at the BMC to provide access to a PCIe channel over a PCIe link execute a data transfer unit of a PCIe module at the BMC to access the PCIe channel through the PCIe interface controller and register the data transfer unit as a PCIe function execute a software stack that implements a plurality of functions in accordance with IMPI execute a PCIe driver to access the data transfer unit execute a PCIe library that implements a plurality functions utilizing through the PCIe driver the data transfer unit execute a PCIe handler in communication with the software stack and the PCIe library and execute a program of the software stack to call the PCIe handler to communicate through the PCIe library and the PCIe driver with a PCIe device over the PCIe channel.

These and other aspects of the present disclosure will become apparent from the following description of the preferred embodiment taken in conjunction with the following drawings and their captions although variations and modifications therein may be affected without departing from the spirit and scope of the novel concepts of the disclosure.

The present disclosure is more particularly described in the following examples that are intended as illustrative only since numerous modifications and variations therein will be apparent to those skilled in the art. Various embodiments of the disclosure are now described in detail. Referring to the drawings like numbers if any indicate like components throughout the views. As used in the description herein and throughout the claims that follow the meaning of a an and the includes plural reference unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise. Moreover titles or subtitles may be used in the specification for the convenience of a reader which shall have no influence on the scope of the present disclosure. Additionally some terms used in this specification are more specifically defined below.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain terms may be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that same thing can be said in more than one way. Consequently alternative language and synonyms may be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only and in no way limits the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

As used herein around about or approximately shall generally mean within 20 percent preferably within 10 percent and more preferably within 5 percent of a given value or range. Numerical quantities given herein are approximate meaning that the term around about or approximately can be inferred if not expressly stated.

As used herein the terms comprising including carrying having containing involving and the like are to be understood to be open ended i.e. to mean including but not limited to.

As used herein the phrase at least one of A B and C should be construed to mean a logical A or B or C using a non exclusive logical OR. It should be understood that one or more steps within a method may be executed in different order or concurrently without altering the principles of the present disclosure.

As used herein the term module may refer to be part of or include an Application Specific Integrated Circuit ASIC an electronic circuit a combinational logic circuit a field programmable gate array FPGA a processor shared dedicated or group that executes code other suitable hardware components that provide the described functionality or a combination of some or all of the above such as in a system on chip. The term module may include memory shared dedicated or group that stores code executed by the processor.

The term code as used above may include software firmware and or microcode and may refer to programs routines functions classes and or objects. The term shared as used above means that some or all code from multiple modules may be executed using a single shared processor. In addition some or all code from multiple modules may be stored by a single shared memory. The term group as used above means that some or all code from a single module may be executed using a group of processors. In addition some or all code from a single module may be stored using a group of memories.

The apparatuses and methods described herein may be implemented by one or more computer programs executed by one or more processors. The computer programs include processor executable instructions that are stored on a non transitory tangible computer readable medium. The computer programs may also include stored data. Non limiting examples of the non transitory tangible computer readable medium are nonvolatile memory magnetic storage and optical storage.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the implementations presented herein may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The implementations presented herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules or data files may be located in both local and remote memory storage devices.

Turning now to a general operating environment for the implementations presented herein will be described. As shown in a system is provided that includes a host computer that is to be remotely managed. A management device also referred to alternately as a redirection device an interaction device or management hardware is interposed between a network and the host computer . A remote computer is linked to the network and the host computer may or may not be linked to the same network or another network not shown. The network may be of various forms such as a local area network LAN or wide area network WAN including the interne. A user located at the remote computer may remotely manage aspects of the operation of the host computer via the network and the management device .

The management device may be linked to the host computer through several input output I O connections of the host computer . Generally a host computer will have a video display output such as an analog or digital video graphics array VGA output. Also the host computer typically includes a PS 2 port or ordinary serial port configured as a mouse port a keyboard port and may also include a universal serial bus USB port .

The video display output provides a signal that ordinarily is passed directly to a display screen or monitor where screen frames are displayed for a user present at the host computer . However in the embodiment shown the video display output provides a video signal to a video input of the management device . The management device then passes the video signal through a video output to the display screen where a normal video display of screen frames occurs. Additional details regarding the operation of the management device and its operations upon the video signal are described in U.S. Pat. No. 7 260 624 entitled Systems and Methods for Establishing Interaction Between A Local computer and a Remote Computer which is assigned to the assignee of the instant patent application and expressly incorporated herein by reference.

User input devices may also be provided for the host computer including a local mouse and local keyboard . Conventionally the local mouse and local keyboard would be directly connected to the mouse port and keyboard port of the host computer . However for the embodiment shown the local mouse and local keyboard are connected to a mouse port and keyboard port respectively of the management device and provide mouse and keyboard data to the management device through these connections. The management device then passes the mouse data and keyboard data to the respective ports of the host computer .

In addition to providing the pass through of the video signal to the display screen the management device captures screen frame data from the video signal and transfers the screen frame data across the network to the remote computer . The remote computer has a network interface linking the remote computer to the network . The network interface used by the remote computer may be of various forms such as a dial up modem or an Ethernet connection to a LAN. Various protocols of data transfer may be utilized between the management device and the remote computer such as the TCP IP protocol ordinarily used via the Internet.

The remote computer implements an application such as a dedicated application or plug in executing within a general purpose browser window such as a web browser for receiving the screen frame data through the network interface and providing a display on the display screen . The display includes the screen frame data produced by the host computer that corresponds to the screen frame data transferred by the management device . Typically the remote computer includes a video adapter that has a video output connected to the display screen to provide the video signals.

To allow the user of the remote computer to fully interact with the host computer user interface devices such as a mouse and keyboard are connected to a mouse port and keyboard port respectively of the remote computer . The user manipulates the mouse and keyboard to interact with the screen frame shown on the display screen which may be formed wholly or in part by the screen frame data received over the network . When the user activity at the remote computer is entered with respect to the screen frame data received from the management device then the processing device of the remote computer transfers the user activity data over the network to the management device that subsequently passes it to the mouse port and or keyboard port .

Once the host computer receives the user activity data through the mouse port and or keyboard port the host computer then implements the user activity as if it had occurred directly through the local mouse or local keyboard . When implemented the user activity alters the screen frame to be displayed. Therefore the video signal output by the video connector to the management device provides the screen frames that show the change caused by the user activity at the remote computer such as the mouse pointer moving or typed letters appearing in an electronic document.

The management device transfers the screen frame data showing the user activity to the remote computer where it is then provided to the display screen . Thus the user activity initially performed at the remote computer is represented on the display screen immediately as it is being performed by the user and then once again after updating the video display of the host computer and transferring the updated screen frame back to the remote computer .

According to other implementations the management device may be or may also include a baseboard management controller BMC . In general a BMC is a microcontroller that monitors the health and operation of the host computer . In one implementation a BMC in the management device monitors health related aspects associated with the computer such as the temperature of components within the computer the speed of rotational components e.g. spindle motor CPU fan etc. within the computer the voltage across or applied to one or more components within the computer and the available or used capacity of memory devices within the computer . Other parameters may also be monitored.

In order to make the data gathered by the BMC available from the management device to programs executing on the computer and to other computer systems such as the remote computer the firmware of the management device is compatible with the Intelligent Platform Management Interface IPMI . IPMI is an industry standard for system monitoring and event recovery. The IPMI specification provides a common message based interface for accessing all of the manageable features in a compatible computer. IPMI includes a rich set of predefined commands for reading temperature voltage fan speed chassis intrusion and other parameters. System event logs hardware watchdogs and power control can also be accessed through IPMI. In this manner IPMI defines protocols for accessing the various parameters collected by a BMC through an operating system or through an external connection such as through a network or serial connection. Additional details regarding IPMI can be found in the IPMI Specification Version 2.0 which is publicly available from INTEL CORPORATION and which is incorporated herein by reference.

In order for an IPMI client application executing on the host computer to transfer IPMI messages to the management device one of several system interfaces must be utilized. For instance if an IPMI client application executing on the computer needs to transmit information to the management device regarding current CPU usage the IPMI client application must utilize a system interface to do so. The IPMI Specification defines several possible system interfaces a keyboard controller style KCS interface a system management interface chip SMIC interface a block transfer BT interface and SMBus System Interface SSIF . These interfaces can be very slow. In particular KCS interfaces are typically implemented over a LPC bus and based on a legacy keyboard controller interface that is extremely slow. In addition the management device can also communicate with the host computer through a PCI express link .

Turning now to an illustrative computer architecture for the various computing systems utilized in the embodiments described herein will be provided. It should be appreciated that although the embodiments described herein are discussed in the context of server computers virtually any type of computing device may be utilized. It should be appreciated that the architecture shown in may be utilized to embody the managed host computer the remote computer or any of the other computer systems described herein.

The illustrative architecture shown in is for a computer that includes a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication path. In this example the management device is implemented by a BMC . In one illustrative embodiment a CPU operates in conjunction with a chipset . The CPU is a standard central processor that performs arithmetic and logical operations necessary for the operation of the computer. The computer may include a multitude of CPUs .

The chipset includes a north bridge and a south bridge . The north bridge provides an interface between the CPU and the remainder of the computer . The north bridge also provides an interface to a random access memory RAM used as the main memory in the computer and possibly to an on board graphics adapter . The north bridge may also include functionality for providing networking functionality through a gigabit Ethernet adapter . The gigabit Ethernet adapter is capable of connecting the computer to another computer via a network. Connections which may be made by the network adapter may include LAN or WAN connections. LAN and WAN networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. The north bridge is connected to the south bridge .

The south bridge is responsible for controlling many of the input output functions of the computer . In particular the south bridge may provide one or more universal serial bus USB ports a sound adapter an Ethernet controller and one or more general purpose input output GPIO pins . The south bridge may also provide a bus for interfacing peripheral card devices such as a graphics adapter . In one embodiment the bus comprises a peripheral component interconnect PCI bus. The south bridge may also provide a system management bus for use in managing the various components of the computer . Additional details regarding the operation of the system management bus and its connected components are provided below.

The south bridge is also operative to provide one or more interfaces for connecting mass storage devices to the computer . For instance according to an embodiment the south bridge includes a serial advanced technology attachment SATA adapter for providing one or more serial ATA ports and an ATA adapter for providing one or more ATA ports . The serial ATA ports and the ATA ports may be in turn connected to one or more mass storage devices storing an operating system and application programs such as the SATA disk drive . As known to those skilled in the art an operating system comprises a set of programs that control operations of a computer and allocation of resources. An application program is software that runs on top of the operating system software or other runtime environment and uses computer resources to perform application specific tasks desired by the user.

The mass storage devices connected to the south bridge and their associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed by the computer . By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer.

A low pin count LPC interface may also be provided by the south bridge for connecting a Super I O device . The Super I O device is responsible for providing a number of input output ports including a keyboard port a mouse port a serial interface a parallel port and other types of input output ports. The LPC interface may also connect a computer storage media such as a ROM or a flash memory such as a NVRAM for storing the firmware that includes program code containing the basic routines that help to start up the computer and to transfer information between elements within the computer .

As described briefly above the south bridge may include a system management bus . The system management bus may be coupled to the BMC . In general the BMC is a microcontroller that monitors operation of the computer system . In a more specific embodiment the BMC monitors health related aspects associated with the computer system such as but not limited to the temperature of one or more components of the computer system speed of rotational components e.g. spindle motor CPU Fan etc. within the system the voltage across or applied to one or more components within the system and the available or used capacity of memory devices within the system . To accomplish these monitoring functions the BMC is communicatively connected to one or more components by way of the management bus . In an embodiment these components include sensor devices for measuring various operating and performance related parameters within the computer system .

The management bus is used by the BMC to request and or receive various operating and performance related parameters from one or more components which are also communicatively connected to the management bus . For instance in one embodiment the management bus may communicatively connects the BMC to a CPU temperature sensor and a CPU fan not shown in thereby providing a means for the BMC to monitor and or control operation of these components. The BMC may also include sensors connected directly thereto. The BMC can establish a connection with the super I O device through the serial ports . The super I O interface connects to the south bridge through a Low Pin Count LPC bus. The BMC can also connect with the south bridge through the Ethernet controller . Further the BMC can connect to the north bridge through a PCI express link and or to the south bridge through another PCI express link .

It should be appreciated that the computer may comprise other types of computing devices including hand held computers embedded computer systems personal digital assistants and other types of computing devices known to those skilled in the art. It is also contemplated that the computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

In certain embodiments the BMC includes among other things a PCI express interface controller that provides access to a PCI express link firmware stored in a memory and a processor . The firmware include a PCI express module having a data transfer unit . The data transfer unit can access the PCI express link through the PCI express interface controller and is registered as a PCI express function. The firmware further includes IPMI compatible software which contains a software stack implementing a plurality of functions in accordance with IMPI. The IPMI compatible software can include one or more communication interfaces such as a KCS interface and a network interface . The KCS interface is in communication with the LPC controller . The network interface is in communication with the network controller . Thus the software stack can access the KCS communication channel and the network communication channel through the KCS interface and the network interface . The software stack is in communication with an IPMB bus through an IPMB interface and can communicate with other IPMI compatible devices over the IPMB bus.

The firmware also includes a PCI express driver configured to provide access to the data transfer unit a PCI express library implementing a plurality functions utilizing the data transfer unit through the PCI express driver and a PCI express handler in communication with the software stack and the PCI express library . The processor is configured to execute the firmware . The PCI express handler provides the software stack an access to a PCI express channel. A management program of the software stack can call the PCI express handler to communicate with a PCI express device e.g. the host computer over the PCI express link through the PCI express library and the PCI express driver . The PCI express handler provides functions that can be used by the software stack to utilize some specific PCI express functions. For example the software stack can call a predefined function of the PCI express handler to transfer data to a PCI express endpoint.

In certain embodiments the software stack can be a BMC stack or IPMI stack. The software stack includes a TCP IP stack a web server application program and the MAC address that identifies the software stack as the destination of network packets addressed to the MAC address . Thus by executing the web server application program and the TCP IP stack and programming the network controller to forward network packets addressed to the MAC address the software stack can receive and respond to requests for management information via a web interface. Further because the software stack has been allocated a MAC address an IP address may also be allocated to the software stack . The IP address identifies the software stack on the TCP IP network so that network packets may be routed to and from the software stack using the IP address . The IP address may also be allocated a domain name that may be utilized in a URL to identify one or more web pages available from the web server application program . In certain embodiments the remote computer can establish a network communication and upload data to the BMC . For example the remote computer can upload a file such as a BMC firmware to the BMC which in turn transfers the file to the host computer through communication channels such as the PCI express channel discussed below that have been established between the BMC and the host computer .

The software stack also includes a management program that can configure or program the network controller to filter or pass network packets addressed to the MAC address and received over the network to the software stack . The management program also monitors analyzes and communicates measured operating and performance related parameters within the host system sensed via the sensors of the host computer . The sensors measure or sense operating and performance related parameters associated with the host computer and provides this information to the software stack via a system interface for analysis and more particularly for determination on whether an event is occurring within the host computer. The software stack can be in compliance with the IPMI standard.

The BMC is registered as a multi function PCI express device. For example the firmware of the BMC may have a first function i.e. Function that provides a graphic interface. In other words the firmware of the BMC includes a graphic controller unit which can be utilized by other components of the firmware to communicate with the graphic interface to output video signals to the video output . The BMC has a video output port . The graphic interface controller unit can be registered as a PCI express function. The graphic interface controller unit outputs video signals to the video output port . The graphic interface controller unit can be accessible by the host computer through the PCI express link between the north bridge and the PCI express interface controller .

The BMC may have a second function i.e. Function that is the data transfer unit and that provides a data exchange interface. The data transfer unit is configured to establish a data transfer channel between the data transfer unit and another PCI express device over the PCI express link . In certain embodiments the other PCI express device is the host computer having a data transfer module registered as a PCI express function. illustrates functional blocks of a host computer in accordance with certain embodiments of the present disclosure. The data transfer unit of the BMC is in communication with data transfer module through the PCI express link and enables data transfer to and from the data transfer module through the established data transfer channel on the PCI express link. In certain embodiments the data transfer unit can receive data transmitted from the data transfer module and place the received data in a storage area. The PCI express driver is configured to provide access to the storage area of the data transfer unit.

In certain embodiments the data transfer unit can be initiated by the processor on a process that is separate from the process running the data transfer unit. The inter process communication between the data transfer unit and the software stack can be implemented by using a shared memory or a message queue. The BMC through the PCI express interface is connected to the north bridge and the south bridge of the host computer over PCI express links . The graphic controller may be also connected to the video output port . The software stack is in communication with the graphic controller and sends graphic instructions data and or commands to the graphic controller . The graphic controller outputs video signals to the video output port . The CPU of the host computer has access to the graphic controller through the north bridge. At the same time the graphic controller has access to the main memory of the host computer through the north bridge .

The PCI express library module may include configuration data documentation help data message templates pre written code and subroutines classes values or type specifications. The PCI express library module calls the PCI express driver module to access and manipulate the PCI express interface through the data transfer unit which in turn communicates with the host computer through the PCI express channel . The PCI express library module for example can have a number of subroutines that are designed to handle various tasks using the PCI express interface . One exemplary task is to transfer data between the BMC and the host computer . In certain embodiments the PCI express library module provides data transfer functions implementing data transfer through the PCI express channel . The data transfer functions call the predefined driver functions of the PCI express driver module to transfer data for example utilizing the shared memory or the message queue. For example the PCI express library module can receive a file image construct data units containing data of the file image receive an indication of the destination PCI express device transmits the data units to the PCI express driver module and informs the PCI express driver module an address of the destination PCI express device.

In certain embodiments the software stack has a PCI express handler that makes PCI express interfaces and functions available to the other applications or programs of the software stack. The PCI express handler is in communication with the PCI express library module and can call subroutines or functions of the PCI express library module . The PCI express handler can be configured to receive requests for communication through the PCI express interface and calls a function of the PCI express library module in response to the request.

In certain embodiments the management program of the software stack sends a request to the PCI express handler for transferring a file image from the BMC to the data transfer module of the host computer . The PCI express handler in response to the request calls the PCI express library module to load the file image and then transfer the file image to the data transfer module through the established PCI express data transfer channel over the PCI express link .

The PCI express library module utilizes the PCI express driver module to communicate with the data transfer unit . The PCI express library module provides functions that can be called by the PCI express handler . One function can be used to call the PCI express driver module in order to detect whether data has been placed in the storage area for the PCI express handler . The PCI express library module also provides a function that calls the PCI express driver module to retrieve data stored in the storage area of the data transfer unit and transfer the retrieved data to the PCI express handler . For example the management program of the software stack in response to a indication that a file image has been transmitted to the data transfer unit from the data transfer module for the management program can call that function of the PCI express library module to retrieve the file image.

Referring to in certain embodiments a BMC firmware upgrade application utilizing the data transfer module and executed on the host computers can initiate an upgrade transaction to upgrade the existing firmware of the BMC with a replacement firmware. The upgrade application can call PCI express libraries and a PCI express driver for example provided by the operating system of the host computer and a PCI express driver to communicate with a PCI express interface which in turn controls communication with the PCI express channel . In this way the upgrade application can communicate with the data transfer unit of the BMC which is registered in the configuration PCI express registers of the BMC . The PCI express interface in accordance with the PCI express specification can include a transaction layer and a data link layer. The upgrade application calls the functions provided by the PCI express library in order to communicate through the PCI express channel with the data transfer unit of the BMC and transfer the replacement firmware to the BMC . The PCI express library calls the PCI driver to implement its functions. In this example the upgrade application utilizes the PCI express library and driver to communicate the replacement firmware to the PCI express interface and instruct the PCI express interface that the replacement firmware is to be transmitted to the BMC . The PCI express interface upon receiving the replacement firmware construct transaction layer packets destined to the data transfer unit of the BMC which is a PCI express function using the data of the replacement firmware in accordance with the PCI express specification. The transaction layer packets are then placed in the transmit buffers of the transaction layer of the PCI express interface . The PCI express interface then transmits the transaction layer packets containing the data of the replacement firmware in the transmit buffers to the data link layer. At the data link layer the PCI interface further generates data link layer packets which are used to assure that integrity is maintained when the transaction layer packets move between two PCI express devices for this firmware upgrade transaction. The transaction layer packets and the data link layer packets are sent to the PCI express channel and then transmitted to the BMC through the PCI express link .

The BMC receives the transaction layer packets and the data link layer packets transmitted from the host computer through the PCI express link . The PCI express interface at the BMC then at its data link layer checks integrity of the received transaction layer packets and then places the transaction layer packets in the receipt buffers of the transaction layer. The data transfer unit then retrieves the replacement firmware from the PCI express interface and places the replacement firmware in its storage area which is reconstructed from the data packets of the data transfer unit .

Various mechanisms can be used to notify the management program that the replacement firmware has been transmitted to the BMC through the PCI express interface . The management program communicates with the PCI express handler in order to retrieve the replacement firmware from the PCI express module of the BMC. The PCI express handler calls a function or subroutine of the PCI express library module implemented for retrieving data from the data transfer unit . The called function or subroutine of the PCI express library module calls the PCI express driver module to retrieve the replacement firmware from the data transfer unit . The management program can store the replacement firmware in a Serial Peripheral Interface SPI memory chip through an SPI interface . During a next booting process the BMC can load the replacement firmware from the SPI memory chip .

The foregoing description of the exemplary embodiments of the disclosure has been presented only for the purposes of illustration and description and is not intended to be exhaustive or to limit the disclosure to the precise forms disclosed. Many modifications and variations are possible in light of the above teaching.

The embodiments were chosen and described in order to explain the principles of the disclosure and their practical application so as to enable others skilled in the art to utilize the disclosure and various embodiments and with various modifications as are suited to the particular use contemplated. Alternative embodiments will become apparent to those skilled in the art to which the present disclosure pertains without departing from its spirit and scope. Accordingly the scope of the present disclosure is defined by the appended claims rather than the foregoing description and the exemplary embodiments described therein.

