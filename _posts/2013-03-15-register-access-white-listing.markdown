---

title: Register access white listing
abstract: A system employs a white list of authorized transactions to control access to system registers. In an embodiment, the white list is loaded into filter registers during system boot. Routing logic monitors a logical interconnect fabric of the system for register access requests. The routing logic parses source, destination information from a request to index the white list. If the white list includes an entry corresponding to the processing entity indicated in the source information and the register indicated in the destination information, the routing logic will permit the requested access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09330027&OS=09330027&RS=09330027
owner: Intel Corporation
number: 09330027
owner_city: Santa Clara
owner_country: US
publication_date: 20130315
---
Embodiments described herein generally relate to microprocessor based systems and in particular to security concerns associated with unauthorized access to system registers.

Configuration registers contain information that impacts a processor s capabilities and operation. Improper configuration register settings can result in an inoperable processor or a processor that exhibits unintended or unpredictable behavior. Register access control may be particularly significant for system on chip SoC and other highly integrated platforms that incorporate the intellectual assets of multiple entities.

Embodiments pertain to controlling register access transactions which typically include a request to read or write a configuration register of a system resource. In at least one embodiment a register access request is initiated by a processing entity within the system and targets a configuration register of a logical system component. In at least one embodiment register access requests may be freely permitted or granted during an initial setup of the system following a power on or system reset. After initializing the system register access filtering may be enabled and subsequent register access requests may be subjected to filtering in some embodiments. Embodiments of register access filtering impose a presumed invalid structure under which only explicitly identified source destination transactions are permitted.

In at least one embodiment information pertaining to a register access request including the identity of the processing entity requesting the access as well as the configuration register indicated as the target in the request form a source destination tuple or pair that is used to index a white list map key. In at least one embodiment the white list map key maps the source destination pair to a portion of a white list map associated with the source destination pair. In some embodiments the address of the targeted register is compared to one or more ranges of configuration register addresses the requestor is authorized to access. If the address of a configuration register indicated in the request does not lie within any one or more of the ranges of configuration register addresses indicated in the portion of the white list applicable to the requestor the access is presumed to be unauthorized and the requested access is denied in some embodiments.

In at least one embodiment a white list of authorized register access transactions is employed in an SoC platform. A white list key and map may be constructed from secure white list information. The white list information may be incorporated into or referenced by a basic input output system BIOS and loaded into persistent storage during a boot sequence in some of the embodiments. In at least one of the embodiments the platform may include one or more interconnects collectively referred to as a fabric that conveys register access requests from source to destination. Following a successful boot of the platform the platform may enable filtering logic in conjunction to the fabric to detect register access requests identify source destination pairs in the requests navigate the white list key and map to access permitted access information and deny or grant the request.

In at least one embodiment an access control method includes accessing white list data indicative of authorized source destination pairs for register access transactions granting register access requests having a source destination pair identified in the white list data and denying register access requests having a source destination pair not identified in the white list data. In some embodiments the white list data includes a white list map containing a plurality of entries with each entry indicating a source destination pair and a corresponding range of authorized register addresses. In at least one embodiment the register access requests indicates a processing entity as the source and a configuration register of a logical component as the destination of the register access requests.

In some embodiments the white list data includes a white list key. In at least one embodiment the white list key may include a plurality of entries indicating respective portions of the white list map. In some embodiments the white list key entry corresponds to a source destination pair and indicates an offset and a range identifying a beginning and ending of white list map entries corresponding to the source destination pair. In some embodiments the method further includes enabling unfiltered register access responsive to initiation of a boot sequence retrieving the white list data from persistent storage loading the white list data into filter registers associated with a routing fabric enabling register access filtering and blocking access to the filter registers. In at least one embodiment retrieving the white list data includes retrieving from a BIOS the white list data. In some embodiments the white list data is digitally signed and retrieving the white list data includes verifying the digital signature.

In some embodiments an SoC includes a processor an I O hub a fabric filtering logic and a storage medium. In at least one embodiment the fabric provides logical connections between elements of the system on chip and the I O hub. In some embodiments the filtering logic monitors the fabric for register access requests. In at least one embodiment the storage medium includes processor executable code that when executed by the processor performs a method including accessing white list data indicative of authorized source destination pairs for register access transactions granting register access requests having a source destination pair identified in the white list data and denying register access requests having a source destination pair not identified in the white list data. In some embodiments the storage medium further includes processor executable code that when executed by the processor performs a method including enabling unfiltered register access responsive to initiation of a boot sequence retrieving the white list data from persistent storage loading the white list data into filter registers associated with the fabric enabling register access filtering and blocking access to the filter registers.

In the following description details are set forth in conjunction with embodiments to facilitate discussion of the disclosed subject matter. It should be apparent to a person of ordinary skill in the field however that the disclosed embodiments are exemplary and not exhaustive of all possible embodiments.

Throughout this disclosure a hyphenated form of a reference numeral refers to a specific instance of an element and the un hyphenated form of the reference numeral refers to the element generically or collectively. Thus widget refers to an instance of a widget class which may be referred to collectively as widgets and any one of which may be referred to generically as a widget .

In at least one embodiment I O hub includes an audio adapter a storage controller an I O bus controller to support a peripheral bus and a low bandwidth or legacy bus LB controller to provide access to a flash read only memory ROM or other form of persistent storage via an LB bus . In some embodiments flash ROM includes BIOS containing white list data . In at least one embodiment storage controller controls a solid state drive which may be a NAND flash drive or other form of mass nonvolatile storage. In at least one embodiment LB bus is a serial peripheral interface SPI bus and peripheral bus is a universal serial bus USB .

In some embodiments I O hub includes a secure digital I O SDIO chip connected to I O hub . In at least one embodiment SDIO chip provides support for various wireless communication protocols including in at least one embodiment Wi Fi. In some embodiments I O hub may include one or more interfaces that may support WiFi and or wireless telephony protocols. In other embodiments I O hub may integrate RF hardware within I O hub or SoC using RF CMOS complementary metal oxide semiconductor fabrication technology.

In some embodiments I O hub includes a bus interface unit that provides an interface between interconnect and an interconnect internal to I O hub to which audio adapter storage controller I O bus controller and LB controller are connected.

In at least one embodiment system includes routing logic that monitors physical interconnects and and provides a logical network like fabric interconnecting each of the elements of SoC and I O hub .

In at least one embodiment computer system further includes a dedicated power management unit which may connect to I O hub through USB or another form of interconnect. In other embodiments power management unit may be integrated within I O hub or SoC . Some embodiments may include power management resources for I O hub as well as SoC .

In at least one embodiment front end monitors and maintains an instruction pointer and fetches instructions for execution from L1 instruction cache . In some embodiments front end may also perform all or some decoding of instructions fetched from L1 instruction cache before scheduling and issuing instructions for execution in execution module . In at least one embodiment execution module includes one or more pipelined integer arithmetic logic units load store units floating point pipelines and branch units. In some embodiments execution module may include a register file that the pipeline accesses to provide operands and store results of arithmetic floating point and logical operations. In at least one embodiment load store instructions executed within execution module may access L1 data cache to obtain data for a read or load or to store data in the L1 data cache . Although one embodiment may include a single core processor other embodiments may include two four or some other number of cores. Similarly although in one embodiment processor includes an L1 instruction cache an L1 data cache and an L2 cache in other embodiments processor may include more or fewer cache elements. In some embodiments processor may include a level 3 L3 cache. In some embodiments when multiple processing cores are included the L3 cache may be a shared cache that is shared among the two or more processing cores.

In some embodiments a filtering enable bit indicates whether routing logic subjects register access request to authorization filtering. In at least one embodiment if filtering enable bit is set routing logic indexes the white list key and white list map that are loaded into filter registers with source destination pair to determine whether the requested access is authorized. In at least one embodiment white list key maps source destination pair to a range of entries in white list map . In some embodiments the destination which may be the address of a configuration register is compared against addresses indicated within the range corresponding to source destination pair to determine whether the access is authorized. In at least one embodiment an authorization bit is set if the requested register access is authorized. Otherwise the access is denied in some embodiments.

In at least one embodiment during an initial portion of a boot sequence following a system reset or power on event the filtering enable bit is cleared so that register access is permitted without filtering. In some embodiments once the platform is installed and operational the BIOS or another component may set the filtering enable bit after which all requests to read or write configuration registers within SoC are subjected to the white list filtering.

Embodiments may be implemented in many different system types and platforms. illustrates one embodiment of a system for use in conjunction with at least one embodiment a cache controller that supports read write cache partitions. In at least one embodiment system is a multi processor system that includes a first processor and a second processor . In some embodiments two processors are included. Other embodiments may include more or fewer processors. In at least one embodiment processors include a core region and an integration region . In some embodiments core region includes one or more processing cores . In at least one embodiment integration region includes a memory controller hub MCH a processor hub point to point interface and a processor processor point to point interface .

In some embodiments processing cores may each include hardware and firmware resources not depicted to support an execution pipeline. These resources may include in some embodiments a cache memory hierarchy which may include a dedicated L1 instruction cache a dedicated L1 data cache an L2 data instruction cache or a combination thereof pre fetch logic and buffers branch prediction logic decode logic a register file various parallel execution resources including arithmetic logic units floating point units load store units address generation units a data cache and so forth.

In at least one embodiment MCH supports bidirectional transfer of data between a processor and a system memory via a memory interconnection . In some embodiments system memory may be a double data rate DDR type dynamic random access memory DRAM while memory interconnection and MCH may comply with a DDR interface specification. In at least one embodiment system memory may represent a bank of memory interfaces or slots that may be populated with corresponding memory circuits for a desired DRAM capacity.

In some embodiments each processor in multi processor system includes an MCH to communicate with a portion of system memory that is local to processor . In some embodiments system memory is local to processor and represents a portion of the system memory as a whole. In at least one embodiment system is a distributed memory multiprocessor system in which each processor can access each portion of system memory whether local or not. In some embodiments while local accesses may have lower latency accesses to non local portions of system memory are permitted.

In at least one embodiment each processor also includes a point to point interface that supports communication of information with a point to point interface of one of the other processors via an inter processor point to point interconnection . In some embodiments processor hub point to point interconnections and processor processor point to point interconnections are distinct instances of a common set of interconnections. In other embodiments point to point interconnections may differ from point to point interconnections .

In some embodiments processors include point to point interfaces to communicate via point to point interconnections with a point to point interface of an I O hub . In at least one embodiment I O hub includes a graphics interface to support bidirectional communication of data with a graphics adapter via a graphics interconnection which may be implemented as a high speed serial bus e.g. a peripheral components interface express PCIe bus or another suitable bus.

In some embodiments I O hub also communicates via an interface and a corresponding interconnection with a bus bridge hub that supports various bus protocols for different types of I O devices or peripheral devices. In at least one embodiment bus bridge hub supports a network interface controller NIC that implements a packet switched network communication protocol e.g. Gigabit Ethernet a sound card or audio adapter and a low bandwidth bus e.g. low pin count LPC C Industry Standard Architecture ISA to support legacy interfaces referred to herein as desktop devices that might include interfaces for a keyboard mouse serial port parallel port and a removable media drive and may further include an interface for a nonvolatile memory NVM device such as flash ROM . In at least one embodiment low bandwidth bus supports other low bandwidth I O devices e.g. keyboard mouse and touchscreen controller . In some embodiments storage protocol bus e.g. serial AT attachment SATA small computer system interface SCSI supports persistent storage devices including conventional magnetic core hard disk drives HDD . In some embodiments HDD includes operating system OS which may represent processor executable instructions including operating system instructions application program instructions and so forth that when executed by the processor cause the processor to perform operations described herein.

In at least one embodiment system also includes an HDD like semiconductor based storage resource referred to as solid state drive SDD and a general purpose serial communication bus e.g. USB PCI PCIe to support various devices. Although specific instances of communication busses and bus targets have been illustrated and described other embodiments may employ different communication busses and different target devices.

In some embodiments HDD includes OS which may represent processor executable instructions including operating system instructions application program instructions and so forth that when executed by the processor cause the processor to perform operations described herein. In some embodiments HDD uses storage protocol bus as an interface with bus bridge hub . In at least one embodiment OS includes white list map and white list map key . In some embodiments white list map keeps track of which processing entity source has access to which register range s in each logic component destination in system while white list map key keeps track of each possible source destination port in system .

In at least one embodiment OS also includes sensor application programming interface API which provides application program access to one or more sensors not depicted that may be included in system . In some embodiments sensors that system might have include an accelerometer a global positioning system GPS device a gyro meter an inclinometer and a light sensor. In at least one embodiment resume module may be implemented as software that when executed performs operations for reducing latency when transitioning system from a power conservation state to an operating state. In some embodiments resume module may work in conjunction with solid state drive SSD to reduce the amount of SSD storage required responsive to system entering a power conservation mode. Resume module may in some embodiments flush standby and temporary memory pages before transitioning to a sleep mode. In some embodiments by reducing the amount of system memory space that system is required to preserve upon entering a low power state resume module beneficially reduces the amount of time required to perform the transition from the low power state to an operating state. In at least one embodiment connect module may include software instructions that when executed perform complementary functions for conserving power while reducing the amount of latency or delay associated with traditional wake up sequences. In some embodiments connect module may periodically update certain dynamic applications including email and social network applications so that when system wakes from a low power mode the applications that are often most likely to require refreshing are up to date. In at least one embodiment the inclusion of touchscreen support in conjunction with support for communication devices enable system to provide features traditionally found in dedicated tablet devices as well as features found in dedicated laptop and desktop type systems.

Additionally a circuit level model with logic and or transistor gates may be produced at some stages of the design process. This model may be similarly simulated sometimes by dedicated hardware simulators that form the model using programmable logic. This type of simulation taken a degree further may be an emulation technique. In any case re configurable hardware is another embodiment that may involve a tangible machine readable medium storing a model employing the disclosed techniques.

Furthermore most designs at some stage reach a level of data representing the physical placement of various devices in the hardware model. In the case where conventional semiconductor fabrication techniques are used the data representing the hardware model may be the data specifying the presence or absence of various features on different mask layers for masks used to produce the integrated circuit. Again this data representing the integrated circuit embodies the techniques disclosed in that the circuitry or logic in the data can be simulated or fabricated to perform these techniques.

In any representation of the design the data may be stored in any form of a tangible machine readable medium. In some embodiments an optical or electrical wave modulated or otherwise generated to transmit such information a memory or a magnetic or optical storage such as a disc may be the tangible machine readable medium. Any of these mediums may carry the design information. The term carry e.g. a tangible machine readable medium carrying information thus covers information stored on a storage device or information encoded or modulated into or on to a carrier wave. The set of bits describing the design or the particular part of the design are when embodied in a machine readable medium such as a carrier or storage medium an article that may be sold in and of itself or used by others for further design or fabrication.

Embodiment 1 is an access control method comprising i accessing white list data indicative of authorized source destination pairs for register access transactions ii granting register access requests having a source destination pair identified in the white list data and iii denying register access requests having a source destination pair not identified in the white list data.

In embodiment 2 the white list data included in the subject matter of embodiment 1 can optionally include a white list map containing a plurality of entries and each entry can optionally indicate a source destination pair and a corresponding range of authorized register addresses.

In embodiment 3 the register access requests included in the subject matter of embodiment 2 can optionally indicate a processing entity as the source and a configuration register of a logical component as the destination of the register access requests.

In embodiment 4 the white list data included in the subject matter of embodiment 3 can optionally include a white list key and the white list key can optionally include a plurality of entries indicating respective portions of the white list map.

In embodiment 5 the subject matter of embodiment 4 can optionally include a white list key entry that corresponds to a source destination pair and indicates an offset and a range identifying a beginning and ending of white list map entries corresponding to the source destination pair.

In embodiment 6 the subject matter of embodiment 1 can optionally include i enabling unfiltered register access responsive to initiation of a boot sequence ii retrieving the white list data from persistent storage iii loading the white list data into filter registers associated with a routing fabric iv enabling register access filtering and v blocking access to the filter registers.

In embodiment 7 the retrieving of the white list data included in the subject matter of embodiment 6 can optionally include retrieving by a basic input output system the white list data.

In embodiment 8 the white list data included in the subject matter of embodiment 7 is optionally digitally signed and the retrieving of the white list data included in the subject matter of embodiment 7 optionally includes verifying the digital signature.

Embodiment 9 is a computer system comprising a system on chip including a processor and a memory controller an I O hub connected to the system on chip a fabric to provide logical connections between elements of the system on chip and elements of the I O hub filtering logic to monitor the fabric for register access requests a storage medium and executable code stored in the storage medium and accessible to the processor wherein the code causes the processor to perform a method comprising i accessing white list data indicative of authorized source destination pairs for register access transactions ii granting register access requests having a source destination pair identified in the white list data and iii denying register access requests having a source destination pair not identified in the white list data.

In embodiment 10 the white list data included in the subject matter of embodiment 9 can optionally a white list map containing a plurality of entries and each entry can optionally indicate a source destination pair and a corresponding range of register addresses.

In embodiment 11 the register access requests included in the subject matter of embodiment 10 can optionally indicate a processing entity as the source and a configuration register of a logical component as the destination of the register access requests.

In embodiment 12 the white list data included in the subject matter of embodiment 11 can optionally include a white list key and the white list key can optionally include a plurality of entries indicating respective portions of the white list map.

In embodiment 13 the subject matter of embodiment 12 can optionally include a white list key entry corresponding to a source destination pair and indicates an offset and a range identifying a beginning and ending of white list map entries corresponding to the source destination pair.

In embodiment 14 the subject matter of embodiment 9 can optionally include i enabling unfiltered register access responsive to initiation of a boot sequence ii retrieving the white list data from persistent storage iii loading the white list data into filter registers associated with the fabric iv enabling register access filtering and v blocking access to the filter registers.

In embodiment 15 the retrieving of the white list data included in the subject matter of embodiment 14 can optionally include retrieving by a basic input output system the white list data.

In embodiment 16 the white list data included in the subject matter of embodiment 15 is optionally digitally signed and the retrieving of the white list data included in the subject matter of embodiment 15 can optionally include verifying the digital signature.

Embodiment 17 is a computer readable storage medium including processor executable instructions to cause a processor to i access white list data indicative of authorized source destination pairs for register access transactions ii grant register access requests having a source destination pair identified in the white list data and iii deny register access requests having a source destination pair not identified in the white list data.

In embodiment 18 the white list data included in the subject matter of embodiment 17 can optionally include a white list map containing a plurality of entries and each entry can optionally indicate a source destination pair and a corresponding range of register addresses.

In embodiment 19 the register access requests included in the subject matter of embodiment 18 can optionally indicate a processing entity as the source and a configuration register of a logical component as the destination of the register access requests.

In embodiment 20 the white list data included in the subject matter of embodiment 19 can optionally include a white list key and the white list key can optionally include a plurality of entries indicating respective portions of the white list map.

In embodiment 21 the subject matter of embodiment 20 can optionally include a white list key entry corresponding to a source destination pair and indicates an offset and a range identifying a beginning and ending of white list map entries corresponding to the source destination pair.

In embodiment 22 the subject matter of embodiment 17 can optionally include instructions to cause the processor to i enable unfiltered register access responsive to initiation of a boot sequence ii retrieve the white list data from persistent storage iii load the white list data into filter registers associated with a routing fabric iv enable register access filtering and v block access to the filter registers.

In embodiment 23 the instructions to retrieve the white list data included in the subject matter of embodiment 22 can optionally include instructions to retrieve by a basic input output system the white list data.

In embodiment 24 the white list data included in the subject matter of embodiment 23 is optionally digitally signed and the instructions to retrieve the white list data included in the subject matter of embodiment 23 can optionally include instructions to verify the digital signature.

In embodiment 25 the subject matter of any one of embodiments 1 2 3 4 or 5 can optionally include i enabling unfiltered register access responsive to initiation of a boot sequence ii retrieving the white list data from persistent storage iii loading the white list data into filter registers associated with a routing fabric iv enabling register access filtering and v blocking access to the filter registers.

In embodiment 26 the method included in the subject matter of any one of embodiments 9 10 11 12 or 13 can optionally include i retrieving the white list data from persistent storage ii loading the white list data into filter registers associated with the fabric and iii enabling register access filtering.

In embodiment 27 the subject matter of any one of embodiments 17 18 19 20 or 21 can optionally include instructions to cause the processor to i enable unfiltered register access responsive to initiation of a boot sequence ii retrieve the white list data from persistent storage iii load the white list data into filter registers associated with a routing fabric iv enable register access filtering and v block access to the filter registers wherein retrieving the white list data includes retrieving from a basic input output system the white list data and further wherein the white list data is digitally signed.

To the maximum extent allowed by law the scope of the present disclosure is to be determined by the broadest permissible interpretation of the following claims and their equivalents and shall not be restricted or limited to the specific embodiments described in the foregoing detailed description.

