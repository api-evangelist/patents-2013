---

title: Updating software components through online stores
abstract: The present invention extends to methods, systems, and computer program products for updating software components through online stores. A computing device interacts with an online store to download applications and frameworks that are distributed from the online store. The computer system includes an operating system configured to keep distributed applications and frameworks updated. The operating system can, automatically and without user intervention, intelligently schedule and attempt application and framework updates in a manner that minimizes user disruptions. The operating system can manage application and framework updating for any and/or all user accounts on a computing device. The operating system can manage updates even when each application and/or framework is to be separately installed for different user accounts that have the application and/or framework installed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09645809&OS=09645809&RS=09645809
owner: Microsoft Technology Licensing, LLC
number: 09645809
owner_city: Redmond
owner_country: US
publication_date: 20130816
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 828 658 entitled Updating Software Components Through Online Stores filed May 29 2013 which is incorporated herein in its entirety.

Computer systems and related technology affect many aspects of society. Indeed the computer system s ability to process information has transformed the way we live and work. Computer systems now commonly perform a host of tasks e.g. word processing scheduling accounting etc. that prior to the advent of the computer system were performed manually. More recently computer systems have been coupled to one another and to other electronic devices to form both wired and wireless computer networks over which the computer systems and other electronic devices can transfer electronic data. Accordingly the performance of many computing tasks is distributed across a number of different computer systems and or a number of different computing environments.

Applications distributed from online stores often share common frameworks to reduce disk footprint and to enable shared components of different applications to be updated at the same time. Within at least some systems application and framework updating is performed manually. Thus under some circumstances frameworks can go un updated. For example when a new version of a framework is released it may not be updated unless a new application or updated application was acquired and new updated application was expressly bound to a new version of the framework it used.

Many online stores include the ability to find download and install application and application updates. At least some applications distributed through an on the store share one or more common frameworks. Frameworks are typically developed for backward compatible. So typically advantageous for users to have the latest versions of those frameworks even if developers create an application using an older version of a framework. Framework updates can include security fixes performance improvements and other benefits.

However as descried framework updates are not guaranteed to be downloaded. A user may only ever get the version of a framework bound to an application. That is the version of the framework used when the application was developed. Thus under a variety of scenarios a user may never get available framework updates. In one scenario a developer never updates their application to be bound to a newly released framework. In another scenario a user never decides to install available updates. In a further scenario a user never acquires a new application that happens to be bound to an updated framework. As such the user can be left in a potentially insecure slow or other undesirable state.

Further conventional update techniques often result in relatively large application packages where things are either baked directly into the operating system and require operating system updates to improve them or the common items are repeatedly included over and over again inside of each individual application. Duplicating common items consumes storage resources and puts the onus on the developer to re implement each change and manually submit an update to each individual application.

The present invention extends to methods systems and computer program products for updating software components through online stores. In some embodiments automatically and without user intervention an application update query is sent an online store. The application update query queries the online store for updates to any of the plurality of applications installed at the computer system. Automatically and without user intervention a separate framework update query is sent to the online store in parallel with the application update query. The framework update query queries the online store for updates to any frameworks utilized by any of a pluralist of applications installed at the computer system.

A framework update is received in response to the framework update query. The framework update includes an update to a framework utilized by one or more applications installed at the computer system. Automatically and without user intervention the framework update is scheduled for installation at the computer system during an operating system maintenance window at the computer system. The framework update is installed at an available time to update the one or more applications at the computer system.

In other embodiments a software component e.g. an application or a framework update is received from the online store. It is determined that the software component update is applicable to a plurality of user accounts at the computer system. The software component update is to be separately installed for each of the plurality of accounts. Automatically and without user intervention the software component update is scheduled for installation for each of the plurality of user accounts during an operating system maintenance window at the computer system. For each of the plurality of accounts the software component update is installed at an available time to update the software component for the user account.

In further embodiments a user command is received to acquire at least a portion of an application from the online store. It is determined that the application is bound to a version of a framework. It is also determined that a newer version of the framework is available from the online store. The newer version of the framework is more recently updated than the version of the framework.

A request is sent to the online store for the at least a portion of the application and the newer version of the framework. A newer version of the framework is received from the online store in response to the request. Automatically and without user intervention the newer version of the framework is scheduled for installation at the computer system. The newer version of the framework installed at an available time to at least update the application.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Additional features and advantages of the invention will be set forth in the description which follows and in part will be obvious from the description or may be learned by the practice of the invention. The features and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the present invention will become more fully apparent from the following description and appended claims or may be learned by the practice of the invention as set forth hereinafter.

The present invention extends to methods systems and computer program products for updating software components through online stores. In some embodiments automatically and without user intervention an application update query is sent an online store. The application update query queries the online store for updates to any of the plurality of applications installed at the computer system. Automatically and without user intervention a separate framework update query is sent to the online store in parallel with the application update query. The framework update query queries the online store for updates to any frameworks utilized by any of a pluralist of applications installed at the computer system.

A framework update is received in response to the framework update query. The framework update includes an update to a framework utilized by one or more applications installed at the computer system. Automatically and without user intervention the framework update is scheduled for installation at the computer system during an operating system maintenance window at the computer system. The framework update is installed at an available time to update the one or more applications at the computer system.

In other embodiments a software component e.g. an application or a framework update is received from the online store. It is determined that the software component update is applicable to a plurality of user accounts at the computer system. The software component update is to be separately installed for each of the plurality of accounts. Automatically and without user intervention the software component update is scheduled for installation for each of the plurality of user accounts during an operating system maintenance window at the computer system. For each of the plurality of accounts the software component update is installed at an available time to update the software component for the user account.

In further embodiments a user command is received to acquire at least a portion of an application from the online store. It is determined that the application is bound to a version of a framework. It is also determined that a newer version of the framework is available from the online store. The newer version of the framework is more recently updated than the version of the framework.

A request is sent to the online store for the at least a portion of the application and the newer version of the framework. A newer version of the framework is received from the online store in response to the request. Automatically and without user intervention the newer version of the framework is scheduled for installation at the computer system. The newer version of the framework installed at an available time to at least update the application.

In some embodiments a single query for acquiring an application contains information for the application being acquired. An online store can return information for the application as well as any newer frameworks applicable to the application.

In other embodiments during automatic and or interactive updating a e.g. client side agent sends information for applications and or frameworks it is aware of. An online store can return information for any newer applications updates and frameworks updates .

Automatic updating can include scheduling downloaded applications updates and framework updates to be installed for example during a maintenance window.

User initiated application acquisition and or interactive updating can be installed as portion of a user issued command and can be more immediate . Installation can be handled internally subsequent to applications and or frameworks being downloaded without further user actions.

Embodiments of the present invention may comprise or utilize a special purpose or general purpose computer including computer hardware such as for example one or more processors and system memory as discussed in greater detail below. Embodiments within the scope of the present invention also include physical and other computer readable media for carrying or storing computer executable instructions and or data structures. Such computer readable media can be any available media that can be accessed by a general purpose or special purpose computer system. Computer readable media that store computer executable instructions are computer storage media devices . Computer readable media that carry computer executable instructions are transmission media. Thus by way of example and not limitation embodiments of the invention can comprise at least two distinctly different kinds of computer readable media computer storage media devices and transmission media.

Computer storage media devices includes RAM ROM EEPROM CD ROM solid state drives SSDs e.g. based on RAM Flash memory phase change memory PCM other types of memory other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to store desired program code means in the form of computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer.

A network is defined as one or more data links that enable the transport of electronic data between computer systems and or modules and or other electronic devices. When information is transferred or provided over a network or another communications connection either hardwired wireless or a combination of hardwired or wireless to a computer the computer properly views the connection as a transmission medium. Transmissions media can include a network and or data links which can be used to carry desired program code means in the form of computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. Combinations of the above should also be included within the scope of computer readable media.

Further upon reaching various computer system components program code means in the form of computer executable instructions or data structures can be transferred automatically from transmission media to computer storage media devices or vice versa . For example computer executable instructions or data structures received over a network or data link can be buffered in RAM within a network interface module e.g. a NIC and then eventually transferred to computer system RAM and or to less volatile computer storage media devices at a computer system. Thus it should be understood that computer storage media devices can be included in computer system components that also or even primarily utilize transmission media.

Computer executable instructions comprise for example instructions and data which when executed at a processor cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language or even source code. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the described features or acts described above. Rather the described features and acts are disclosed as example forms of implementing the claims.

Those skilled in the art will appreciate that the invention may be practiced in network computing environments with many types of computer system configurations including personal computers desktop computers laptop computers message processors hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers mobile telephones PDAs tablets pagers routers switches and the like. The invention may also be practiced in distributed system environments where local and remote computer systems which are linked either by hardwired data links wireless data links or by a combination of hardwired and wireless data links through a network both perform tasks. In a distributed system environment program modules may be located in both local and remote memory storage devices.

Embodiments of the invention can also be implemented in cloud computing environments. In this description and the following claims cloud computing is defined as a model for enabling on demand network access to a shared pool of configurable computing resources. For example cloud computing can be employed in the marketplace to offer ubiquitous and convenient on demand access to the shared pool of configurable computing resources. The shared pool of configurable computing resources can be rapidly provisioned via virtualization and released with low management effort or service provider interaction and then scaled accordingly.

A cloud computing model can be composed of various characteristics such as for example on demand self service broad network access resource pooling rapid elasticity measured service and so forth. A cloud computing model can also expose various service models such as for example Software as a Service SaaS Platform as a Service PaaS and Infrastructure as a Service IaaS . A cloud computing model can also be deployed using different deployment models such as private cloud community cloud public cloud hybrid cloud and so forth. In this description and in the claims a cloud computing environment is an environment in which cloud computing is employed.

In this description and the in the following claims a framework is defined as software providing generic functionality that can be selectively changed by additional user written code thus providing application specific software. A software framework is a reusable software platform used to develop applications products and solutions. Frameworks include support programs compilers code libraries tool sets and application programming interfaces APIs that bring together all the different components to enable development of a project or solution.

In general embodiments of the invention relate to updating software components through an online store. A computing device interacts with an online store to download applications and frameworks that are distributed from the online store. The computer system includes an operating system configured to keep distributed applications and frameworks updated. The operating system can automatically and without user intervention intelligently schedule and attempt application and framework updates in a manner that minimizes user disruptions.

The operating system can manage application and framework updating for any and or all user accounts on a computing device. The operating system can manage updates even when each application and or framework is to be separately installed for different user accounts that have the application and or framework installed. The operating system can also avoid downloading and updating applications and frameworks the computing device is connected to costed networks. The online store can track separate telemetry for each distributed application and framework.

Referring now to computer system includes operating system and account database . Operating system can be a collection of software that manages computer hardware resources of computer system and provides common services for applications running at computer system . Operating system can be virtually an operating system including but not limited to Microsoft Windows Apple iOS and Google Android .

Operating system further includes scheduler and agent . In general scheduler installer is configured to schedule applications application updates frameworks and framework updates for installation at computer system . Scheduler installer is also configured to attempt installation of applications application updates frameworks and framework updates for at computer system at scheduled and or other available times.

Computer system may be used by a single user or may be used by a plurality of users. Account database stores information for different user accounts include accounts and . Different user accounts can correspond to the same or different users. A user may be have one user account or may have multiple user accounts. For example accounts and may correspond to users and respectively. On the other hand both accounts and may be accounts of user . A user may have multiple different user accounts to access computer system with different privileges e.g. as a regular user or an administrator . Each different account can be associated with its own settings and resources.

Computer system can also have one or more applications and one or more corresponding frameworks installed such as for example applications and and framework . One or more applications can depend on the same framework. For example as indicated by the dashed lines applications and can depend on framework .

In some embodiments applications and or frameworks are installed at computer system for a number of different user accounts. Thus applications and or frameworks can be installed at computer system multiple times. As such application updates and or framework updates are installed multiple times once for each user account that has the corresponding to be updated application and or framework installed.

In general online store is configured to distribute applications application updates frameworks and framework updates to other computer systems. For example online store can distribute any of applications frameworks or updates thereto to other computer systems including computer system . Telemetry module can track separate telemetry data for distributed applications application updates frameworks and framework updates.

In some embodiments online store has a purchase module for purchasing applications and or frameworks. As such some of applications and or frameworks may need to be purchased before distribution is permitted. Others of applications and or frameworks may be distributed without purchase i.e. they are free . Even when an application and or framework is initially purchased corresponding updates may be distributed without further purchase i.e. updates are free .

Returning to computer system agent is configured to query online store from time to time or at specified intervals for updates corresponding to applications and or frameworks installed at computer system . In some embodiments agent queries online store automatically and without user intervention. In other embodiments a user causes agent to query online store . Separate application update queries and framework update queries can be sent to online independently of one another. Agent can accept any returned application updates and or framework updates. Agent can notify scheduler installer of any updates so that the updates can be scheduled for installation and subsequently installed.

Method includes automatically and without user intervention sending an application update query to the online store the application update query querying the online store for updates to any of the plurality of applications installed at the computer system . For example agent can automatically send application update query to online store . Application update query can query online store for any updates to applications installed at computer system .

Method includes automatically and without user intervention sending a separate framework update query to the online store in parallel with the application update query the framework update query querying the online store for updates to any frameworks utilized by any of the plurality of applications installed at the computer system . For example agent can automatically send framework update query to online store in parallel with application update query . Framework update query can independently query online store for updates to frameworks utilized by any of the applications installed at computer system such as for example application application etc.

Online store can receive framework update query . Online store can determine that there is an update to framework . Online store can return framework update the update to framework to computer system .

Method includes receiving a framework update in response to the framework update query the framework update including an update to a framework utilized by one or more applications installed at the computer system the one or more applications selected from among the plurality of applications . For example agent can receive framework update from online store .

Method includes automatically and without user intervention scheduling the framework update for installation at the computer system during an operating system maintenance window at the computer system . For example scheduler installer can schedule framework update for installation. Installation can be scheduled possibly at different times for each of one or more user accounts that have framework installed. For example installation can be schedule for one or more both of user accounts and . Scheduler installer can use any of a variety of different algorithms when determining an installation schedule for framework update . Some algorithms can include scheduling installation of a framework update for a maintenance window of operating system system idle time or the next time a user logs on.

Method includes installing the framework update at an available time to update the one or more applications at the computer system . For example scheduler installer can install framework update at an available time to update one or more of applications and . Framework update can be installed possibly at different times for each of one or more user accounts. For example framework update can be installed at one available time for user account and or can be installed at different available time for user account . An available time may be an operating system maintenance window or some other available time such as for example system idle time or the next time a user logs on.

Online store can receive application update query . Online store can determine that there is an update to application . Online store can return application update the update to application to computer system .

Method includes receiving an application update the application update including an update to a specified application installed at the computer system . For example agent can receive application update from online store .

Method includes automatically and without user intervention scheduling the application update for installation at the computer system during the operating system maintenance window . For example similar to scheduling of framework update scheduler installer can schedule application update for installation. Installation can be scheduled possibly at different times for each of one or more user accounts that have application installed.

Method includes installing the application update at the available time to update the specified application . For example similar to framework update scheduler installer can install application update at an available time to update application . Application update can be installed possibly at different times for each of one or more user accounts.

In some embodiments application update query and framework update query are packaged as a single query. During a user initiated command for acquiring an Application the single query contains information of the Application being acquired and the Online Store returns back the information of the Application and any newer Frameworks applicable to the Application.

During automatic updating and Interactive updating agent client side sends information of the Application and Frameworks it is aware of. Online Store returns back information of any newer Applications updates and Frameworks updates .

Referring now to computer system includes operating system and account database . Operating system can be a collection of software that manages computer hardware resources of computer system and provides common services for applications running at computer system . Operating system can be virtually an operating system including but not limited to Microsoft Windows Apple iOS and Google Android .

Operating system further includes scheduler and agent . In general scheduler installer is configured to schedule applications application updates frameworks and framework updates for installation at computer system . Scheduler installer is also configured to attempt installation of applications application updates frameworks and framework updates for at computer system at scheduled and or other available times.

As such computer system can also have one or more software components such as applications and or frameworks installed.

Computer system may be used by a single user or may be used by a plurality of users. Account database stores information for different user accounts include accounts and . Different user accounts can correspond to the same or different users. A user may be have one user account or may have multiple user accounts. For example accounts and may correspond to users and respectively. On the other hand both accounts and may be accounts of user . A user may have multiple different user accounts to access computer system with different privileges e.g. as a regular user or an administrator . Each different account can be associated with its own settings and resources. For example accounts and are associated with settings and respectively. Account settings can include an indication of what applications and or frameworks are installed for a corresponding user account.

Accordingly software components can be installed at computer system can be installed for a number of different user accounts such that the software components are installed multiple times. As such updates to the software components are also installed multiple times e.g. once for each user account .

In general online store is configured to distribute software components e.g. applications application updates frameworks and framework updates to other computer systems. Online store may or may not include a purchase module.

Returning to computer system agent is configured to query online store from time to time or at specified intervals for updates corresponding to software components installed at computer system . In some embodiments agent queries online store automatically and without user intervention. In other embodiments a user causes agent to query online store . Agent can accept any returned software component updates. Agent can notify scheduler installer of any updates so that the updates can be scheduled for installation and subsequently installed for multiple user accounts.

Method includes receiving a software component update from the online store . For example agent can receive software component update from online store . Software component update can be an update to software component e.g. an application or framework .

Method includes determining that the software component update is applicable to a plurality of user accounts at the computer system the software component update to be separately installed for each of the plurality of accounts . For example agent can refer to settings and to determine that software component is installed for both user account and user account respectively. Agent can further determine that software component update is to be separately installed for user account and user account .

Method includes automatically and without user intervention scheduling the software component update for installation for each of the plurality of user accounts during an operating system maintenance window at the computer system . For example scheduler installer can schedule installation of software component update for each of user accounts and during a maintenance window for operating system .

Method includes for each of the plurality of accounts installing the software component update at an available time to update the software component for the user account . For example for each of user accounts and scheduler installer can install software component update at available but possibly different times. For example framework update can be installed for user account at one available time such as the maintenance window for operating system . Framework update can be installed for user account at a different available time such as the next time user account logs. In general an available time may be an operating system maintenance window or some other available time such as for example system idle time or the next time a user logs on.

Referring now to computer system includes operating system . Operating system can be a collection of software that manages computer hardware resources of computer system and provides common services for applications running at computer system . Operating system can be virtually an operating system including but not limited to Microsoft Windows Apple iOS and Google Android .

Operating system further includes scheduler and agent . In general scheduler installer is configured to schedule applications application updates frameworks and framework updates for installation at computer system . Scheduler installer is also configured to attempt installation of applications application updates frameworks and framework updates for at computer system at scheduled and or other available times.

As such computer system can also have applications which are bound to corresponding frameworks. For example computer system includes application which is bound as indicted by the dashed line to framework .

Agent is configured to query online store for application and or framework updates from time to time at specified intervals or in response to user commands. Agent can accept any returned software component updates. Agent can notify scheduler installer of any updates so that the updates can be scheduled for installation and subsequently installed for multiple user accounts.

In response to a user generated or automatically generated application update command requesting updates for an application agent can determine frameworks to which the application is bound. Agent can formulate an additional independent request or supplement an existing request so that updates to such frameworks are also requested.

Method includes receiving a user command to acquire at least a portion of an application from the online store . For example agent can receive application update command form user . Application update command can instruct agent to request any updates for application from online store .

Method includes determining that the application is bound to a version of a framework . For example agent can determine that application is bound to framework . Method includes determining that a newer version of the framework is available from the online store the newer version of the framework being more recently updated than the version of the framework . For example agent can determine that a newer version of framework is available at online store . Agent can communicate with online store over network to determine that a newer version of framework is available.

In any event agent can formulate update request . Update request can request both updates to application and updates to framework .

Method includes sending a request for the at least a portion of the application and the newer version of the framework to the online store . For example agent can send update request to online store . Update request requests updates to application and updates to framework .

Online store can receive update request . Online store can identify available application update for application and framework update for framework . Online store can send application update and framework update to computer system .

Method includes receiving the newer version of the framework from the online store in response to the request . For example agent can receive framework update and also application update from online store .

Method includes automatically and without user intervention scheduling the newer version of the framework for installation at the computer system. Method includes installing the newer version of the framework at an available time to at least update the application. For example scheduler installer can schedule installation of and install framework update to update framework . Scheduler installer can schedule installation of and install application update to update framework application .

In some embodiments during user initiated acquiring an Application and Interactive updating applications and or frameworks can get installed as part of the same user initiated command and essentially immediately. The user is relieved from having to perform other actions. Installation is handled internally once corresponding Applications Frameworks are returned by the Online Store by downloading them and post download doing the install for the user.

Caller can be an operating system store for interactive activities automatic updates for automatic background activities or other such scenarios. Caller can initiate a scan e.g. sync updates against Client Web Service specifying a search filter . For example a scan can be a search for an update for a single app multiple apps or all apps on the system. A search filter context is sent to Client Web Service . Client Web Service returns applicable applications and frameworks e.g. new updates .

Based on search context and or based on the specific scenario being executed apply filter can sort updates into applicable app. updates updates for applications themselves applicable app. referenced framework updates specific framework updates used by application updates and other framework updates other framework updates to be installed independently . Applicable app. and framework updates are installed for example following a maintenance window installation schedule established in an operating system.

5. Applicable application and framework updates are then installed for example following a maintenance window installation scheduling established in an operating system.

As described applications and frameworks can be automatically installed by an operating system. After a successful download applications and or frameworks can be scheduled for installation during an operating system s maintenance window. If a computing device is off or suspended during the maintenance window installation attempts can be rescheduled for system idle time. If after specified period of time e.g. three days those installations are unsuccessful the installations can be further rescheduled to the next time a user logs in. Installations can be attempted for user accounts currently logged into a computing device. For any user accounts with applications and or frameworks installed but that are not logged in installation of updates are rescheduled for the next user log in of each of those user accounts.

If at any of the above times an application is in use in the foreground or is playing media in the background the update can silently fail so as to not interrupt the user by force closing the application. Installation can then be rescheduled according to the same or similar logic. On the other hand installation of updates is not blocked by applications that are suspended or that have scheduled background tasks. Installations can move forward with application state and tasks being preserved throughout the update.

As described applications and framework can be handled completely independently from each other. When acquiring new applications from an online store simultaneous acquisitions of the latest frameworks used by that application can occur. When an operating system automatically updates applications in the background a parallel check for updated frameworks can occur as well. Any applicable updates for each applications and or frameworks can be automatically updated in the background. An agent can check that a computing device is not on a metered internet connection or battery power. The agent can suspend updates until both of those conditions abate.

When checking for updates interactively a simultaneous acquisition of the latest framework s used by an application can take place. Thus two separate operations happen at essentially the same time rather than a single operation that attempts to bring application and framework down as a group. This separate independent process for updating frameworks helps ensure developers that newer framework versions are being used. Further customers need not worry about framework updates. To customers frameworks and framework updates may completely invisible and simply a part of the system that lets everything just work .

Telemetry is can be sent for each download so that the knowledge workers can monitor quality as they manage new releases.

Accordingly embodiments of the invention provide an end to end solution that permits application packages to be smaller and helps alleviate developer worry about distributing common frameworks with their applications.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

