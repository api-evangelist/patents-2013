---

title: Techniques for separating the processing of clients' traffic to different zones
abstract: A system and method for separation of traffic processing in a computing farm. The method comprises allocating a first group of computing resources of the computing farm to a trusted zone and a second group of computing resources to an un-trusted zone, wherein the computing resources in the first group are allocated to ensure at least service-level agreements (SLA) guaranteed to a group of trusted clients; determining, based on a plurality of security risk indication parameters, if a client associated with an incoming traffic is a trusted client or an un-trusted client; forwarding the incoming traffic to the second group of computing resources when the client is determined to be an un-trusted client; and diverting the incoming traffic to the first group of computing resources when the client is determined to be a trusted client, thereby ensuring at least the SLA guaranteed to the trusted client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09130977&OS=09130977&RS=09130977
owner: Radware, Ltd.
number: 09130977
owner_city: Tel Aviv
owner_country: IL
publication_date: 20130117
---
This application claims the benefit of U.S. provisional application No. 61 625 872 filed on Apr. 18 2012 the contents of which are herein incorporated by reference.

This invention generally relates to techniques for protecting networks and computing resources and for guaranteeing continuous services by such resources.

A significant problem facing the Internet community is that on line businesses and organizations are vulnerable to malicious attacks. Recently attacks have been committed using a wide arsenal of attack techniques and tools targeting both the information maintained by the on line businesses and their IT infrastructure. Hackers and attackers are constantly trying to improve their attacks to cause irrecoverable damage overcome currently deployed protection mechanisms and so on.

Attacks and attack attempts are executed against servers and clients at different layers e.g. a network layer and an application layer . Attacks have become more sophisticated and their scope has also been increased. That is a multitude number of infected machines and groups of organized attackers take part in coordinated attack campaigns. Thus it has become a significant challenge to secure online businesses and organizations against targeted attack campaigns.

As a result organizations and businesses loose revenue due to security related downtime information theft and the compromise of confidential information. Consequently the organizations and businesses suffer immeasurable damage to their brand and image. In many cases even after the attack has stopped the remediation process can be a long and expensive process. That is it may take a long time to restore the services applications provided by the attacked site back to functioning properly.

Currently available security systems cannot guarantee full protection against a vast number of cyber threat categories and the numerous number of attack vectors that exist to execute such threats. As a result when a site is under attack a portion of the site or the entire site may be idle and legitimate clients cannot access the servers of the site or they experience a very low service response time high latency .

Examples for cyber attacks include denial of service DoS and intrusion types of attacks. An intrusion type of attack is typically performed by injecting a malware code into servers in the site. The malware code is often downloaded by a legitimate client and can be used against him in couple of ways. For example the malware can be used to expose the client s confidential information and or used to take control over the client s computer to perform other malicious activities. Other types of cyber attacks include buffer overflow attacks misuse of computing resources and the like. Types of web directed attacks include for example web defacement attacks cross site scripting attacks and so on.

Although there are various security systems designed to detect prevent or mitigate cyber attacks there is no security system that can fully guarantee that such attacks will not succeed in negatively impacting the sites services and that clients of the site will not be affected. Thus when a site is under attack there is always a chance that the Quality of Service QoS will be compromised and the service level agreement SLA cannot be guaranteed to the site s users.

It would therefore be advantageous to provide an efficient solution that would ensure the guaranteed SLA to the site s trusted clients even when the site is under attack and even though some of the security systems cannot guarantee the detection and prevention of the attacks against the site.

Certain embodiments disclosed herein include a method for separation of traffic processing in a computing farm. The method comprises allocating a first group of computing resources of the computing farm to a trusted zone and a second group of computing resources to an un trusted zone wherein the computing resources in the first group are allocated to ensure at least service level agreements SLA guaranteed to a group of trusted clients determining based on a plurality of security risk indication parameters if a client associated with an incoming traffic is a trusted client or an un trusted client forwarding the incoming traffic to the second group of computing resources when the client is determined to be an un trusted client and diverting the incoming traffic to the first group of computing resources when the client is determined to be a trusted client thereby ensuring at least the SLA guaranteed to the trusted client.

Certain embodiments disclosed herein also include a load balancing appliance configured to separate traffic processing in a computing farm. The method comprises an external system interface configured to receive at least a plurality of security risk indication parameters and a plurality of zoning trigger parameters a zoning module for determining if a zoning mode is required in the computing farm wherein the zoning module is further configured to determine based on a plurality of security risk indication parameters if a client associated with an incoming traffic is a trusted client or an un trusted client and a balancer configured to forward the incoming traffic to a second group of computing resources in the computing farm when the client is determined to be an un trusted client and divert the incoming traffic to a first group of computing resources in the computing farm when the client is determined to be a trusted client wherein the first group of computing resources are allocated to ensure at least a service level agreement SLA guaranteed to the trusted client.

Certain embodiments disclosed also herein a computing farm that comprises a first group of computing resources allocated to ensure at least service level agreements guaranteed to a group of trusted clients a second group of computing resources at least one load balancing appliance connected to at least the second group of computing resources wherein the load balancing appliance is configured to determine based on a plurality of security risk indication parameters if a client associated with an incoming traffic is a trusted client or an un trusted client forward the incoming traffic to the second group of computing resources when the client is determined to be an un trusted client and divert the incoming traffic to the first group of computing resources when the client is determined to a trusted client thereby ensuring at least a service level agreement SLA guaranteed to the trusted client.

The embodiments disclosed herein are only examples of the many possible advantageous uses and implementations of the innovative teachings presented herein. In general statements made in the specification of the present application do not necessarily limit any of the various claimed inventions. Moreover some statements may apply to some inventive features but not to others. In general unless otherwise indicated singular elements may be in plural and vice versa with no loss of generality. In the drawings like numerals refer to like parts through several views.

Certain exemplary embodiments disclosed herein allow distinguishing between trusted and un trusted clients accessing a site. An un trusted client can be an anonymous client of whose history legitimacy reputation and or identity is unknown. There is a higher probability that an un trusted client would perform attack activities against the site. A trusted client is a client having an identity and or reputation that is known as legitimate in all regards as to utilization of the services provided by the site. A site includes a plurality of servers that provide services to the clients. The site may be part of a global computing farm located in distributed geographical locations a local server farm or a combination thereof.

According to certain embodiments disclosed herein a determination is made if the site should be transferred to a zoning mode. In one embodiment the site is switched to a zoning mode during an attack or during a period of time when the site is considered to be under high risk to be a target of a cyber attack. The cyber attack can be any type of known and unknown attack including for example DoS Distributed DoS DDoS intrusion attack web defacement cross site scripting buffer overflow misuse of computing resources and the like.

In the zoning mode the computing resources of the site are dynamically allocated and separated to a trusted zone and an un trusted zone. The computing resources in the trusted zone are selected to ensure high SLA to trusted clients based in part on pre defined and or previously learned service usage characteristics.

Traffic from trusted clients is routed to the trusted zone for processing therein. Traffic from un trusted clients is not processed in the trusted zone thus enabling delivery of a higher security SLA availability and better user experience to trusted clients. To this end traffic from all clients is continuously monitored and based on a plurality of parameters described in detail below it is determined if a client is trusted or un trusted. In addition a plurality of parameters is evaluated to determine if the site should be switched to a zoning mode.

For the sake of simplicity only two sites and and three clients and are shown in . However the embodiments disclosed herein can be applied to any number of clients and sites. The clients may be located in different geographical locations. The sites may be a datacenter a server farm a cloud based computing system or combinations thereof. According to one embodiment each of sites and is designed to deliver an SLA including but not limited to a security and availability SLA guaranteed to each of the clients and . For the sake of simplicity and without limiting the scope of the disclosed embodiment the site is selected to be in an un trusted zone while the site is defined as a trusted zone.

Primarily traffic from clients and is directed to the load balancer of the site . The load balancer is configured with and continuously receives for example through its application programming interface APIs security risk indication parameters. Based on these parameters the load balancer computes a threat level value for each of the clients accessing the site . In an embodiment the computed threat level value allows determining if a client is trusted or un trusted.

The security risk indication parameters include at least one of a pre complied list of trusted clients per IP address a reputation score per IP address or geographical region application layer parameters e.g. clients cookies a client unique identification ID token user ID an affiliation of a client e.g. a client belongs to a trusted company or is an internal client of the organization parameters collected from external and internal client authentication services e.g. call back procedure etc. geo analysis e.g. the origin of a client s traffic in comparison to other clients a type of content and or application accessed by the client behavioral analysis e.g. comparing the clients behavior to a normal behavior of the client and so on. Some of the above listed security risk indication parameters can be received from external resources such as reputation services servers Firewalls VPNs Radius servers LDAP servers databases external API feeds and the like.

The load balancer further receives for example through its APIs one or more zoning trigger parameters that provide an indication as to whether the load balancer should switch to a zoning mode. That is a zoning trigger parameter can indicate a potential risk that an attack is about to take place against the site or that the site is currently under attack. The zone trigger parameter s can be received from the security engine or from any other external source such as but not limited to a network security manager reputation services servers or media outlets e.g. if the site name is mentioned in online media as a target of cyber attack groups .

A zone trigger parameter may be also a predefined rule. For example such a rule may be a predefined time window e.g. a certain date time in a day or day in a week geographical location of the source traffic a predefined pattern of content in the incoming traffic or traffic directed to a certain service e.g. traffic to a finance application .

In one embodiment the zoning trigger parameters may be configured in a proactive policy saved in the load balancer . One or more proactive policies can be implemented in situations where there is a high risk condition for a cyber attack even before such an attack occurs. For example activation of the trusted and un trusted zones when a warning about a possible attack has been raised at a certain hour in a day during a holiday vacation when most of the information technology IT team is not present at the site or in response to a specific event to which attackers may react by attacking the site. In another embodiment the zone trigger parameter may be an external trigger from a user e.g. a system administrator or a network security manager and so on. The load balancer determines based on one or more of the zoning trigger parameters if the site should switch to a zoning mode. That is if trusted and un trusted zones should be created and if traffic should be diverted to these zones. In another embodiment the switching to a zoning mode is based on one or more proactive policies and zoning trigger parameters defined therein.

As mentioned above a threat level value is computed for each client based on one or more of the security risk indication parameters. This value may be a binary value a color coded value e.g. red green and yellow or any numerical value that can be utilized to determine if the client should be treated as a trusted or un trusted client. The computation of the threat level value may include in an exemplary embodiment assigning a score to each risk indication parameter. This allows providing a certain weight to certain parameters for example based the relevancy of a certain parameter to a client. Then the threat level value can be computed based on the parameters scores of the client. The computation of the threat level value may be for example an average or weighted average of the scores. A computed threat level value may be compared to a predefined threshold to determine if the client is a trusted client. The threat level may be set to a value indicating that the client should be labeled as trusted based on a single predefined parameter. For example if the client s IP is in a pre compiled list of trusted IP addresses then the value may be set to indicate that the client should be labeled as trusted.

After the load balancer determines the type of the client trusted or un trusted and when the site operates in a zoning mode the load balancer diverts the traffic from the client to the zone assigned to the client. Specifically if the client is determined to be trusted then its traffic is diverted to the trusted zone to be processed therein. On the other hand traffic from a client determined to be un trusted is forwarded to the un trusted zone.

As illustrated in the client is a trusted client thus traffic originating from the client is forwarded by the load balancer to the site which is in the trusted zone. The client is an un trusted client thus its traffic is processed by the site which is in the un trusted zone. The site can process the traffic to mitigate any attack executed by the client . The site may also collect information about the behavior of the client in order to learn the type of the attack being performed in case an attack is actually executed. Such forensics information can be shared with a security organization SOC and or utilized to develop counter attacks or new mitigation techniques. As the site processes only traffic that originates in trusted clients the SLA can be guaranteed to the client as the site will be less likely impacted by an ongoing attack.

In one embodiment the site is a replica of the site i.e. includes the same computing resources and service content as in the site which has been designed to efficiently support all clients trusted and un trusted that access the site . Thus the site can efficiently support and provide the guaranteed SLA to a sub set of clients only trusted clients . In another embodiment only a set of servers in the site can be pre allocated to process traffic of trusted clients diverted by the load balancer where additional servers may be added ah hoc based on the volume of traffic.

According to another embodiment a set of servers in the site may be configured as a trusted zone while the other servers are in the un trusted zone e.g. servers Sand Sare allocated to the trusted zone and Sis allocated to the un trusted zone . The servers in the trusted zone process traffic only from trusted clients. In addition the site may be utilized to process traffic of trusted clients as well. Traffic from trusted clients can be load balanced among the servers allocated to the trusted zone in the sites and based in part on global load balancing criteria. Such criteria include but are not limited to proximity between a client and site latency cost and so on.

In the deployment shown in traffic from certain clients can be blocked by the security engine . Typically traffic from a client e.g. client that has been identified as an attack is blocked and not forwarded to processing by either of sites or .

According to this embodiment the ADC is configured with and continuously receives security risk indication parameters. Using these parameters the ADC computes a threat level value for each client as discussed in detail above. Primarily traffic from both clients and is distributed among all the active servers Sto S. The traffic is monitored and the client threat level is computed. When the local farm switches to a zoning mode based in part on the zoning trigger parameters described above trusted and un trusted zones and respectively are created in the farm . The determination if a client is trusted or un trusted is described above.

The trusted zone and un trusted zone include a set of servers Sto S. For example the trusted zone includes the servers S S and S while the un trusted zone includes severs Sthrough S. Each group of servers in the respective zone is assigned with a different virtual IP VIP address. For example servers in the zone are assigned with an address VIP while servers in the zone are assigned with the address VIP. In another embodiment only one VIP address is assigned to both zones.

Accordingly all clients send their traffic to this VIP address and the ADC routes traffic from trusted clients to the trusted zone and traffic from un trusted clients to the un trusted zone . In one embodiment the ADC is configured with the servers that should be included in each zone. In another embodiment the ADC dynamically and in real time selects the servers to be allocated to the secure zone . The selection is performed in such a way that trusted clients will always receive the guaranteed SLA.

In one embodiment the allocation of servers i.e. computing resources to each zone is performed using a learning mechanism that generates a load profile baseline. With this aim a load profile while in normal or baseline not under attack of the site is computed. The load profile summarizes typical load characteristics of each trusted client and or a group of trusted clients. The load profile may further register the load characteristics of different client groups originating from different locations. The load characteristics are per different times of the day week etc. When the site is under attack the load profile can be used to calculate how to dynamically separate the farm i.e. how many servers to allocate to the trusted zone and how many servers to be assigned to the un trusted zone . In one embodiment deviation from the baseline would trigger the allocation of additional servers to the trusted zone.

In another embodiment weights can be assigned to various allocation criteria. For example there should be always at least five servers in the trusted zone and per traffic characteristics more servers are added if specific transactions and or applications are invoked. In yet another embodiment the farm may include a group of dedicated servers that are provisioned and used only at the zoning mode of the site. Thus when the farm operates in a zoning mode the capacity of the farm is increased. In an embodiment that can be utilized herein each server in the farm is assigned with a SLA number that indicates which group of clients the server can serve. If a server is assigned with a SLA number that correlates to trusted clients then this server can process only traffic received from trusted clients. The assigned SLA numbers can be dynamically changed. Allocation of servers to the trusted zone may also include assigning a new VIP address to such servers and performing graceful termination of computed sessions executed therein.

Once the trusted and un trusted zones have been established the ADC forwards traffic from clients determined to be trusted e.g. client to the servers in the trusted zone . In addition traffic from clients determined to be un trusted e.g. client is forwarded to the servers in un trusted zone . Traffic in each zone can be load balanced among the servers in the zone by the ADC .

As mentioned above because the trusted zone processes only traffic that originates in trusted clients the SLA can be guaranteed to the client because the servers in the trusted zone will be less likely to be impacted by an attack. In one embodiment the ADC monitors the resources utilized to process traffic from trusted clients and determines if more resources i.e. servers should be allocated to the trusted zone to ensure the SLA to trusted clients.

At S a plurality of zoning trigger parameters is received at the ADC to determine if the farm should switch to a zoning mode. In certain embodiments some of the zoning trigger parameters may also be pre configured with the ADC . A detailed discussion of the zoning trigger parameters is provided above. At S based on one or more of the received zoning trigger parameters it is determined if the farm should operate in a zoning mode. If so execution continues with S otherwise execution returns to S where new zoning trigger parameters may be received and evaluated. It should be noted that while the farm is not in the zoning mode the ADC routes traffic according its standard load balancing schema.

At S trusted and un trusted zones are created by allocating servers of the farm to each zone. Various embodiments for allocating sufficient resources to each zone are discussed in detail above. At S servers allocated to the trusted zone are allocated with an address representing the trusted group e.g. a VIP address different than the servers in the un trusted zone group.

At S incoming traffic from a client e.g. client of the server is received at the ADC . At S a threat level value is computed for the client based on one or more security risk indication parameters discussed in detail above.

At S it is determined if the threat level value provides an indication that the client e.g. client is an un trusted client and if so execution continues with S otherwise execution proceeds to S where the traffic is forwarded to one of the servers in the trusted zone according to the load balancing schema of the ADC . The determination at S may be performed based on a predefined threshold related to the computed threat level value or a binary value associated with the threat level value. For example if the risk indication parameters include a list of trusted client then the threat level value for client designated in the list is set 0 indicating a binary value of a trusted client. In another embodiment the threat level value is color coded thus the determination is based on its color e.g. red is an un trusted client . At S the traffic from the client determined to be un trusted is forwarded to one or more servers in the un trusted zone e.g. zone for processing therein.

It should be noted that once the trusted and un trusted zones are established traffic from trusted clients is forwarded to the trusted zone while traffic from un trusted clients is forwarded to the un trusted zone. As mentioned above additional servers may be added to the trusted zone as needed to ensure high SLA and performance to trusted clients. In an embodiment the classification of clients to trusted and un trusted zones can also be performed when the farm or site does not operate in the zoning mode.

It should be noted that in the embodiments discussed above the traffic may be of protocols that allow redirection of traffic in the application layer e.g. HTTP SIP and protocols that do not allow redirection e.g. SMTP UDP etc . It should be further noted that the embodiments disclosed herein allow processing of traffic from all clients in the site regardless of being trusted and un trusted thus there is no false positive related to blocking of legitimate traffic.

The interface provides an interface to an external system such as but not limited to an attack detection device a security management system and the like. In one embodiment the interface provides APIs to the external system through which the plurality of the security risk indication parameters and the trigger zoning parameters are received.

The zoning module is configured to determine if a zoning mode should be applied. In addition the zoning module computes a threat level value for a client accessing the computing farm to determine if the client is trusted or un trusted. The balancer directs the traffic to different zones responsive of an input from the zoning model with regard to the type of client the traffic is received from i.e. trusted or un trusted . The balancer can also balance traffic among servers in each zone when operating in a zoning mode or among servers in the entire farm according to a load balancing schema. The processor uses instructions stored in the memory to execute tasks traditionally performed by the load balancing appliance and optionally for execution of the tasks performed by the modules and . The load balancing appliance may be but is not limited to a load balancer an ADC a virtual ADC and the like. The load balancing appliance in another embodiment includes a combination of application specific integrated circuits and processors. In a further embodiment the load balancing appliance is distributed across several devices and processors.

The foregoing detailed description has set forth a few of the many forms that different embodiments of the invention can take. It is intended that the foregoing detailed description be understood as an illustration of selected forms that the invention can take and not as a limitation to the definition of the invention.

Most preferably the various embodiments discussed herein can be implemented as hardware firmware software or any combination thereof. Moreover the software is preferably implemented as an application program tangibly embodied on a program storage unit or computer readable medium. The application program may be uploaded to and executed by a machine comprising any suitable architecture. Preferably the machine is implemented on a computer platform having hardware such as one or more central processing units CPUs a memory and input output interfaces. The computer platform may also include an operating system and microinstruction code. The various processes and functions described herein may be either part of the microinstruction code or part of the application program or any combination thereof which may be executed by a CPU whether or not such computer or processor is explicitly shown. In addition various other peripheral units may be connected to the computer platform such as an additional data storage unit and a printing unit. Furthermore a non transitory computer readable medium is any computer readable medium except for a transitory propagating signal.

