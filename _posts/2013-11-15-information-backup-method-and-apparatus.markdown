---

title: Information backup method and apparatus
abstract: The present invention discloses an information backup method in the field of computer technologies. A log file is monitored at an electronic device that comprises a local memory. A first part of the log file is determined to be associated with a first subset of operations that comprise a first action of uninstalling a specific application. In accordance with the determination, user information that is associated with the specific application is stored in the local memory, and the user information may comprise a user database, a configuration file and a private file generated and updated when a user uses the specific application. A second part of the log file is further determined to be associated with a second subset of operations that comprise a second action of reinstalling the specific application. The user information is extracted from the local memory for use in the second action of reinstalling the specific application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09164748&OS=09164748&RS=09164748
owner: TENCENT TECHNOLOGY (SHENZHEN) COMPANY LIMITED
number: 09164748
owner_city: Shenzhen, Guangdong Province
owner_country: CN
publication_date: 20131115
---
This application is a continuation application of PCT Patent Application No. PCT CN2013 081649 entitled INFORMATION BACKUP METHOD AND APPARATUS filed on Aug. 16 2013 which claims priority to Chinese Patent Application No. 201210296666.7 entitled INFORMATION BACKUP METHOD AND APPARATUS filed on Aug. 20 2012 both of which are incorporated by reference in their entirety.

The disclosed implementations relate generally to the field of computer technology and particularly to systems methods and devices for backing up user information associated with a software application and supporting efficient reinstallation and recovery of the application in an electronic device.

Mobile devices in place of many conventional electronic devices are widely applied in our daily life offering unprecedented user experiences due to their readily accessible and extremely accommodating characteristics. For instance laptop computers are able to implement most functions of desktop computers while allowing users to work anywhere. Tablets and smart phones constantly update users with useful information e.g. emails messages weather and stock price serve their entertainment needs and support various educational and social activities. In particular smart phones have become indispensable to many people s working and personal life during the past few years.

Although these mobile devices are mainly developmental products of hardware technologies the unprecedented user experiences are largely enabled by tremendous amount of software applications developed on various mobile platforms. As of January 2013 900 000 applications are available for downloading in the Apple App Store by iPhone or iPad users. Mobile device users may regularly install uninstall recover and update software applications as they need due to easy access to miscellaneous applications.

During operation each application generates unique user information including application configuration settings and personal data that is stored within the mobile device. Data management of the user information could impose a challenge on the mobile device during both courses of operating and uninstalling the corresponding application. In particular if the user information is mistakenly deleted upon uninstallation it may not be recoverable when the application is reinstalled and the loss of the user information may seriously comprise the user experience of the recovered application in the future. Shared by other electronic devices this information management problem is more pronounced in mobile devices because these devices normally involve more frequent operations on software applications.

As a solution a backup plug in is integrated in another application to receive from the application a message that indicates an uninstalling action. This other application passively waits for the message and subsequently initializes to back up the user information associated with the uninstalled application. However the uninstalled application oftentimes does not realize a need to send the message for actively inducing the backup process and therefore fails to send the necessary message. Not receiving this message the other application is blind to the ongoing uninstallation process and thus fails to back up the user information of the uninstalled application. Therefore a need exists to improve data management of software applications particularly during the course of application uninstallation and recovery.

The present invention relates to an information backup method in the field of computer technologies and particularly to systems methods and devices for backing up user information associated with a software application to allow efficient reinstallation and recovery of the application within an electronic device.

In accordance with one aspect of the invention an information backup method is implemented at an electronic device that comprises a local memory. A log file is monitored and a first part of the log file is subsequently determined to be associated with a first subset of operations that comprise a first action of uninstalling a specific application. In accordance with the determination user information that is associated with the specific application is stored in the local memory and the user information may comprise a user database a configuration file and a private file generated and updated when a user uses the specific application. A second part of the log file is further determined to be associated with a second subset of operations that comprise a second action of reinstalling the specific application. The user information is extracted from the local memory for use in the second action of reinstalling the specific application.

In accordance with another aspect of the invention a non transitory computer readable medium is applied to back up user information for a specific application. The computer readable medium has instructions stored thereon which when executed by one or more processors in an electronic device cause the processors to perform operations including monitoring a log file determining that a first part of the log file is associated with a first subset of operations comprising a first action of uninstalling a specific application storing the user information in a local memory determining that a second part of the log file is associated with a second subset of operations comprising a second action of reinstalling the specific application and extracting the user information that is stored in the local memory for use in the second action of reinstalling the specific application.

Further in accordance with one aspect of the invention an electronic device is applied to back up user information for a specific application. The electronic device comprises one or more processors and memory having instructions stored thereon which when executed by the one or more processors cause the processors to perform operations including monitoring a log file determining that a first part of the log file is associated with a first subset of operations comprising a first action of uninstalling a specific application storing the user information in a local memory determining that a second part of the log file is associated with a second subset of operations comprising a second action of reinstalling the specific application and extracting the user information that is stored in the local memory for use in the second action of reinstalling the specific application.

Other embodiments and advantages are apparent to those skilled in the art in light of the descriptions and drawings in this specification.

Reference will now be made in detail to various implementations examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the present disclosure and the described implementations herein. However implementations described herein may be practiced without these specific details. In other instances well known methods procedures components and mechanical apparatus have not been described in detail so as not to unnecessarily obscure aspects of the implementations.

Each individual electronic device such as one mobile device is normally installed with multiple software applications used to serve different purposes including making calls sending emails and messages chatting reading news shopping paying bills and checking information e.g. stock prices and weather . As a result of these activities each application generates a set of user information that may comprise a user database a configuration file and a private file. In some embodiments downloaded pictures and documents may be stored in the user database. Settings and configurations of the specific application are maintained in the configuration file. Account names and passwords are stored in the private file which may require a higher level of security.

Each software application may generate one or two categories of the user information and is not required to generate all three categories. For instance a simple application for browsing the Internet may result in several downloaded pictures stored in the user database but not necessarily produce a configuration file or a private file. In contrast an instant messaging application may generate all three categories of user information including a database that keeps record of a general chat history and detailed chat contents for each individual chat a configuration file that defines the settings of the application and a private file that stores the user name and password for at least one chat account.

In some embodiments the user information may be managed and stored remotely in the server . In particular in a social network application where pictures and diaries are uploaded to the server the corresponding database configuration and private file may be stored remotely in the server that is most probably owned and managed by a social media. In other preferred embodiments the local software applications retain control of the user information and therefore are programmed to reserve some or all user information in a local memory of the electronic device although a cached copy of the user information may still be created and stored by the server . Under these circumstances the mobile devices may communicate with the servers in order to receive the cached copy from or to share the reserved user information with the servers .

In some embodiments the mobile devices are coupled to exchange and share their respective user information via telecommunication networks sponsored by commercial wireless carriers e.g. AT T Verizon and T Mobile . In addition each mobile device may be further coupled to a desktop or laptop computer via a wired or wireless communication network . The user information is transferred from the mobile device to the computer in a similar way associated with a regular data synchronization process.

In accordance with some embodiments the user information stored in an electronic device e.g. a mobile device A may be optionally communicated to and backed up in various locations within the data backup system when a corresponding application is uninstalled from the specific electronic device. In a preferred embodiment the user information may be proactively backed up in a local memory of the electronic device that comprises the uninstalled application as a local application. In doing so the electronic device can enhance data security by confining the user information within itself during operation and after uninstallation of the specific application .

The electronic device may be coupled to another electronic device selected from a mobile device B the computers and the servers . In accordance with the preferred embodiment the user information of the local application may be further transferred to this other electronic device for centralized storage and management once it is backed up within the electronic device. In addition to the above preferred implementations the user information of the specific application may also be directly backed up by this other electric device.

Regardless of the electronic device used for information backup or storage the mobile device B and the computers could be controlled by the same user of the electronic device i.e. the mobile device A in this instance that generates the user information. Therefore the user information could be securely stored in an external electronic device but remain readily accessible to the user.

On the other hand the servers may be a host that sponsors the uninstalled application during regular operation and herein maintains the user information upon uninstallation of the application. In certain embodiments the server is not related to the specific application and rather provides a unique data backup service established for backing up data that are generated by different applications and different users. As a result the user information is centralized for storage and management in this other electronic device.

Furthermore the user information has to be conveniently retrievable when the specific application needs to be reinstalled on the electronic device the mobile device in this instance . In some embodiments the specific application is an upgraded version of the uninstalled specific application while in some other embodiments the identical specific application is reinstalled after a previous uninstallation. The user database configurations and private information is recovered for use in the specific application and therefore the user may enjoy smooth software reinstallation without losing previous records or setting up the application as new.

The electronic device typically includes one or more processing units sometimes called CPUs or processors for executing programs e.g. programs stored in memory one or more communication interfaces memory an input output I O interface e.g. touch screen keypads camera A display screen B and one or more communication buses for interconnecting these components. Memory includes high speed random access memory such as DRAM SRAM DDR RAM or other random access solid state memory devices and typically includes non volatile memory such as one or more magnetic disk storage devices optical disk storage devices flash memory devices or other non volatile solid state storage devices. Memory optionally includes one or more storage devices remotely located from the CPU s . Memory or alternately the non volatile memory device s within memory comprises a non transitory computer readable storage medium. In some embodiments memory or the computer readable storage medium of memory stores the following programs modules and data structures or a subset thereof 

In some embodiments the programs or modules identified above correspond to sets of instructions for performing a function described above. The sets of instructions can be executed by one or more processors e.g. the CPUs . The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these programs or modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory stores a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

In accordance with some embodiments the information backup module is reserved for backing up user information associated with a specific application that may or may not be included in the electronic device . The information backup module at least comprises a log monitoring module and a backup module . The log monitoring module monitors the log file that contains information denoting a queue of jobs. The queue of jobs comprises a plurality of operations that may include uninstallation of the specific application. When uninstallation is detected in the log monitoring module the backup module stores the user information associated with the specific application within a local memory.

In some embodiments the information backup module further comprises a collecting module that identifies and obtains a package name of a corresponding software package that constitutes the specific application and or a restoring module that retrieves the stored user information for recovering or reinstalling the corresponding uninstalled application.

In a preferred embodiment as discussed above the electronic device represents the electronic device that contains the specific application and therefore the specific application is a local application within the electronic device . In this situation the electronic device actually monitors the log file generated by its own operating system . An uninstallation action may be detected for the specific application as soon as it is internally queued in the log file or enabled for execution. As an example the information backup module may back up the user information associated with application A B or C that are installed locally.

In certain embodiments the electronic device is distinct from another electronic device that holds the specific application to be uninstalled. Nevertheless the log monitoring module manages the electronic device to proactively obtain the log file from the other electronic device that actually generates the log file. Subsequently the log monitoring module checks the log file for the uninstallation action that is occurring or will occur within the electronic device and in response to a positive detection the backup module backs up the user information within the local memory of the electronic device i.e. remotely away from the other electronic device . Specifically as discussed above the electronic device may be selected from a mobile device a server or a computer that receives both the log file and the user information from this other electronic device via a wired or wireless communication network.

The log file is critical during the course of implementing of the information backup method . In computing the log file generally records events taking place in the execution of a system in order to provide an audit trail that can be used to understand the activity of the system and to diagnose problems. In this instance the log file is maintained and monitored in real time to track the plurality of operations that are scheduled for implementation. To be specific each line of the log file may include but is not limited to execution time execution action and execution object for real time recording of each operation under execution. In some embodiments the log file may record the action of uninstallation that has been initialized and however the user information is not yet purged when the information backup method is initialized.

The information backup module may add a monitoring thread in a background thread pool and the monitoring thread is always in a running state so that the content of the log file is read in real time through the monitoring thread thereby implementing the monitoring step on the log file. As a specific example for an Android based platform logcat data may be processed as a thread of execution in the background of operation. Therefore by monitoring the log file in real time the electronic device may conveniently recognize the ongoing action of uninstallation based on the contents of the log file.

In addition to a real time determination of uninstallation the information backup method is preferred to be implemented in a predictive manner. The log file may contain operations that are scheduled but not initialized for actual implementation. In response to a detection of upcoming uninstallation of the specific application the information backup module stores the user information in advance before uninstallation of the specific application is even initialized. In doing so the electronic device protects the user information from data corruption that may occur as early as the start of the uninstallation action.

In accordance with some embodiments this specific application may include but is not limited to QQ Word and WeChat and is identified by a package name of a corresponding software package that constitutes the specific application. When an operation is executed on the specific application the package name is incorporated in a script associated with the operation so as to identify an execution object of the operation.

To positively identify uninstallation the log monitoring module may determine that a part of the log file refers to a specific action of uninstallation. An action generally refers to an operation on an application such as uninstalling the application adding a shortcut and dialing a phone number. In this instance the action is to uninstall the specific application. As an example on an Android based platform the script that relates to such an uninstallation action is Android.intent.action.DELETE embedded in a line of the logcat data and the specific application is uninstalled as a result of running the script. However in addition to such information concerning the action of uninstallation it needs to be determined whether a certain part e.g. a line of the log file also contains the name of the corresponding software package that constitutes the specific application.

The order is flexible as to determining the action of uninstallation and determining the package name in the part of the log file. A determination rule may be set as determining the Action of uninstalling the application in the log file either prior to or subsequent to determining the package name. In a particular embodiment a line of the log file is read and the content of the log file is compared with a script corresponding to the action of uninstalling a specific application. If a segment of the log file content matches the corresponding script it is determined that the log file contains the Action of uninstalling the application. The line of the log file is subsequently compared with the package name of the application. When a segment of the log file content matches the package name as well it is determined that the specific application is being or will be uninstalled. However if the content of the log file is different from the script corresponding to the action of uninstalling an application the determination procedure is terminated avoiding a waste of system resources for searching out the package name and therefore improving overall efficiency.

In accordance with the determination the backup module stores in a local memory user information that is associated with the corresponding software package. In some implementations the step of storing the user information may further include a creating an interface to prompt the user to determine a set of backup options for storing the user information and b in accordance with the set of backup options storing the user information selectively in the local memory.

The user may be prompted at a display interface of the electronic device to back up the user information of the application. Exemplary prompting manners include but are not limited to a dialog box prompt on a display screen B or a voice prompt via a speaker. is an exemplary user interface that is created on the display screen of the electronic device when the specific application is determined to be uninstalled in accordance with some embodiments. On the display interface the user is prompted to select a part or all user information for backup. In some embodiments the user may be also prompted to determine a path where the user information may be stored.

Typically the user information further comprises one or more of a user database a configuration file and a private file which together constitute classified information generated when a user uses the specific application. For example the user database normally includes downloaded pictures and documents chat histories or lists of contacts. In contrast setting information of fonts and background colors are stored in the configuration file and confidential account names and passwords are stored in the private file. In some embodiments a part rather than all of the user information needs to be backed up upon uninstallation of the corresponding application.

In particular a backup option may be set forth by the user for selectively backing up each category of the user information. In some embodiments a detailed backup inquiry is displayed at the display interface for the user to determine the backup option concerning each category of the user information. When the user fails to respond within a preset time the respective category of the user information may be restrained from backing up in order to reduce complexity of the backup operation. The preset time may be randomly set for example at 5 seconds or 10 seconds. See .

As illustrated in the user information may be extracted and further applied in a subsequent reinstallation process for the specific application. To do so the information backup method may further comprise a step of determining that a second part of the log file is associated with a second subset of the plurality of operations and this subset comprises a second action of reinstalling the specific application. In certain embodiments the log file is constantly updated according to the queue of jobs existing in the electronic device and therefore may have been entirely updated between steps and .

In accordance with the determination the previously stored user information is extracted from the local memory for use in the action of reinstalling the specific application. The reinstalled specific application may be an identical application that the user has previously removed or an updated version of the uninstalled specific application.

In some embodiments the user information has to be extracted within a certain time window after the user information is stored in the local memory. Otherwise the user information is purged from the local memory if it is not used for reinstalling the specific application within the time window.

In some embodiments the step of extracting the user information may further include a creating an interface to prompt the user to determine a set of recovery options for recovering the user information in the installed specific application and b in accordance with the set of recovery options selectively extracting the user information in the local memory.

The user may be prompted at a display interface of the electronic device to select the recovery options. are two exemplary user interfaces and that are created on the display interface of the electronic device when the specific application is determined to be reinstalled in accordance with some embodiments. On the display interface the user is prompted to determine whether he wants to recover some user information from a previous back. If the user selects No the specific application is reinstalled as new without resorting to previous user information. However if the user selects yes another interface pops up prompting the user to select specific categories of the user information for recovery.

Each backup plug in is bound in the respective parent application through a specific interface and the specific application is therefore referred to as a local application of the backup plug in . This specific application may be identified by a package name of a corresponding software package that constitutes the specific application. In some embodiments the collecting module in the backup plug in may obtain the package name of the specific application through an Application Programming Interface API of the application.

In some implementations the backup plug in is integrated in more than one application e.g. both applications A and B such that the user information of one specific application may be managed or backed up by different applications. For instance the backup plug ins in both applications A and B determine that the specific application is being uninstalled. The database and the configuration file may be backed up by application A while the private file may be backed up by application B. When the specific application is reinstalled the backup plug ins of applications A and B retrieve their respective user information such that the specific application may be properly recovered according to the retrieved user information.

In a preferred embodiment the electronic device represents an electronic device where the specific application is initially installed and the specific application is a local application within the electronic device . As an example the specific application is application C stored in the memory . Both backup plug ins are linked to application C and actually monitors the log file generated by the local operating system . As a result the log monitoring module in the backup plug ins detects an uninstallation action of the application C as soon as the action is internally queued in the log file or enabled for execution.

The backup module in the backup plug ins may back up the user information locally within the electronic device . However in some embodiments the user information is further communicated to and stored in another electronic device selected from a mobile device a computer and a server.

On the other hand the specific application may be installed in an electronic device that is distinct from the electronic device . Nevertheless the log monitoring module manages the electronic device to proactively obtain the log file from the other electronic device that generates the log file. Subsequently the log monitoring module checks the log file for the uninstallation action that is occurring or will occur on the other electronic device and in response to a positive detection the backup module backs up the user information within the local memory of the electronic device i.e. remotely away from the electronic device . Specifically the electronic device may be selected from a mobile device a server or a computer that receives both the log file and the user information from the other electronic device via a wired or wireless communication network.

As illustrated in the extrinsic backing up solutions involving electronic devices and are particularly useful for ensuring efficient data and resource management. In particular the local memory itself may have a limited size in the electronic device where the specific application is installed and the size of the user information could be relatively large for local storage. Storage in another device may effectively overcome these problems. Moreover in some embodiments the user information may be centralized in one computer for various applications running on different electronic devices owned by a common user or in a server for one specific application installed on various devices owned by different users. Therefore such extrinsic backing up solutions may be utilized under some particular circumstances.

The backup plug in first obtains a name of a software package that constitutes the specific application.

In accordance with a location of the specific application C the first electronic device collects a log file locally in the first electronic device or remotely from the second electronic device. As discussed above the log file contains information denoting a queue of jobs. The queue of jobs may further comprise a plurality of operations that may involve the specific application.

The log file is monitored by the backup plug in in application A. Application A further determines that a subset of the plurality of operations associated with a part of the log file comprises an action of uninstalling a software package that constitutes the specific application. In some embodiments the determining further comprises determining the part of the log file including the corresponding package name of the software package.

In accordance with a positive determination the user information of the specific application is stored in a local memory of the first electronic device. In some embodiments both applications A and B are involved in the information backup operation. Both applications A and B monitor the log file and determine that a first part of the log file is associated with a first action of uninstalling the specific application. The respective backup plug in in each application A or B may select one category of user information e.g. a configuration file and different back plug ins may end up selecting different categories of user information for backing up at step .

The user information may be further applied to reinstall the specific application. To do so the information backup method may further comprise a step of determining that another part of the log file is associated with another subset of the plurality of operations and this other subset comprises another action of reinstalling the software package of the specific application. In some embodiments different categories of the user information are collected according to the particular backup plug ins in the involved applications such that the previously stored user information is extracted from the local memory of the first electronic device for use in the action of reinstalling the software package. The reinstalled specific application may be an identical application that the user has previously removed or an updated version of the uninstalled specific application i.e. application C herein.

One of those skilled in the art may see that the backup plug in manages the user information based on information in the log file. The log file has to be available to the backup plug in at steps and such that the backup plug in may proactively determine whether the respective action of uninstallation or installation is running or pending on the second electronic device. Therefore the user information concerning the specific application are stored into and retracted from the local memory in the first electronic device in accordance with the respective determination of application uninstallation and reinstallation.

Such a user information backup method may be implemented with no or litter user intervention. Based on the restored user information the specific application may automatically return to its original status prior to the uninstallation action. The user may not even be aware of any change in terms of his experiences with the application. Such an enhanced user experience is particularly critical for many gaming or social networking applications installed on mobile devices. Given that these applications may be regularly uninstalled installed or updated the users would benefit from such a user information backup method by enjoying a smooth transition between the original and updated applications.

When application C i.e. the specific application is located in the second electronic device both the log file and the user information have to be communicated between the first and second electronic device during the course of implementing the method . On one hand the log file has to be transferred to the first electronic device such that the backup plug in may determine whether the actions of uninstallation and installation are running or pending on the second electronic device. On the other hand the user information concerning the specific application are transferred from and returned to the first electronic device when the information needs to be stored in or extracted from the local memory for information backup or recovery respectively. The log file and the user information may be transferred via a wired or wireless communication network established between the electronic devices.

The above disclosures are merely preferred implementations of the present invention but are not intended to limit the scope of the claims of the present invention. Any equivalent change made according to the claims of the present invention modification still falls within the scope of the present invention.

While particular implementations are described above it will be understood it is not intended to limit the invention to these particular implementations. On the contrary the invention includes alternatives modifications and equivalents that are within the spirit and scope of the appended claims. Numerous specific details are set forth in order to provide a thorough understanding of the subject matter presented herein. But it will be apparent to one of ordinary skill in the art that the subject matter may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the implementations.

Although the terms first second etc. may be used herein to describe various elements these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example first ranking criteria could be termed second ranking criteria and similarly second ranking criteria could be termed first ranking criteria without departing from the scope of the present invention. First ranking criteria and second ranking criteria are both ranking criteria but they are not the same ranking criteria.

The terminology used in the description of the invention herein is for the purpose of describing particular implementations only and is not intended to be limiting of the invention. As used in the description of the invention and the appended claims the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will also be understood that the term and or as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms includes including comprises and or comprising when used in this specification specify the presence of stated features operations elements and or components but do not preclude the presence or addition of one or more other features operations elements components and or groups thereof.

As used herein the term if may be construed to mean when or upon or in response to determining or in accordance with a determination or in response to detecting that a stated condition precedent is true depending on the context. Similarly the phrase if it is determined that a stated condition precedent is true or if a stated condition precedent is true or when a stated condition precedent is true may be construed to mean upon determining or in response to determining or in accordance with a determination or upon detecting or in response to detecting that the stated condition precedent is true depending on the context.

Although some of the various drawings illustrate a number of logical stages in a particular order stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned others will be obvious to those of ordinary skill in the art and so do not present an exhaustive list of alternatives. Moreover it should be recognized that the stages could be implemented in hardware firmware software or any combination thereof.

The foregoing description for purpose of explanation has been described with reference to specific implementations. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The implementations were chosen and described in order to best explain principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various implementations with various modifications as are suited to the particular use contemplated. Implementations include alternatives modifications and equivalents that are within the spirit and scope of the appended claims. Numerous specific details are set forth in order to provide a thorough understanding of the subject matter presented herein. But it will be apparent to one of ordinary skill in the art that the subject matter may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the implementations.

