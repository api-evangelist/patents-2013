---

title: Graphical data conversion/translation
abstract: One or more computer-readable storage media for storing computer-executable instructions executable by processing logic is provided. The media storing one or more instructions that when executed by the processing logic causes the processing logic to receive data in a first format for conversion to a second format different than the first format, wherein the data includes information having a first type and information having a second type and display the data in the first format via a graphical interface. One or more translation rules are received relating to processing the information having the first type or the information having the second type. The one or more translation rules are pre-applied to the data in the first format. Effects of the pre-applied rules on the displayed data are displayed via the graphical interface. The data in the first format is converted to the data in the second format based on the one or more translation rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08654138&OS=08654138&RS=08654138
owner: The Mathworks, Inc.
number: 08654138
owner_city: Natick
owner_country: US
publication_date: 20130821
---
This application is a continuation of U.S. patent application Ser. No. 13 241 462 filed Sep. 23 2011 which claims priority under 35 U.S.C. 119 based on U.S. Provisional Patent Application No. 61 494 165 filed on Jun. 7 2011 the disclosures of which are incorporated by reference herein.

The prevalence of digital data has significantly increased the ease with which information in shared between various entities such as different individuals tools software applications devices etc. Unfortunately in many instances the format of data is initially incompatible with a receiving entity or device. In such cases to use the data it may be necessary to reformat or convert the data into a compatible format.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following detailed description does not limit the invention.

Embodiments described herein relate to systems and methods for converting and or translating data from one format to another. More specifically a user may provide source data to a conversion translation engine CTE in a first format such as a spreadsheet format. The data may be graphically displayed via a graphical user interface GUI associated with the CTE. The user may provide one or more translation rules relating to processing the data via GUI. Execution of the translation rules converts or translates referred to herein as conversion generally at least a portion of the source data into a second format usable by another application or programming element. For example data unreadable by a particular application may be replaced with data that is readable by the application.

Consistent with embodiments described herein the CTE may pre apply the provided rules and graphically display the effects of the pre applied rules on the displayed data. If the displayed results are in accordance with the user s wishes the translation rules may be executed and converted data may be generated and stored.

One or more embodiments of the invention may be implemented on one or more computing devices. The one or more computing devices may be a system or part of a system. The one or more computing devices may include a desktop computer a laptop computer a client computer a server computer a mainframe computer a personal digital assistant PDA a web enabled cellular telephone a smart phone a smart sensor actuator or some other computing device.

I O bus may be an interconnect bus configured to enable communication among various components in computing device such as processing logic secondary storage pointing device output device and communication interface . The communication may include among other things transferring information e.g. data and control information between the components.

Memory bus may be an interconnect bus configured to enable information to be transferred between processing logic and primary storage . The information may include instructions and or data that may be executed manipulated and or otherwise processed by processing logic . The instructions and or data may include instructions and or data that are configured to implement one or more embodiments described herein.

Processing logic may include logic configured to interpret execute and or otherwise process information contained in for example primary storage and or secondary storage . The information may include instructions and or data configured to implement one or more embodiments described herein. Processing logic may comprise a variety of heterogeneous hardware. The hardware may include for example some combination of one or more processors microprocessors field programmable gate arrays FPGAs application specific instruction set processors ASIPs application specific integrated circuits ASICs complex programmable logic devices CPLDs graphics processing units or other types of processing logic that may interpret execute manipulate and or otherwise process the information. Processing logic may comprise a single core or multiple cores. An example of a processor that may be used to implement processing logic is the Intel Xeon processor available from Intel Corporation Santa Clara Calif.

Secondary storage may be a computer readable media that is accessible to the processing logic via I O bus . Secondary storage may be configured to store information for processing logic . The information may be executed interpreted manipulated and or otherwise processed by processing logic . Secondary storage may comprise for example a storage device such as a magnetic disk optical disk random access memory RAM disk flash drive etc. The information may be stored on one or more computer readable media contained in the storage device. Examples of media that may be contained in the storage device may include magnetic discs optical discs and memory devices e.g. flash memory devices static RAM SRAM devices dynamic RAM DRAM devices or other memory devices . The information may include data and or computer executable instructions that may implement one or more embodiments of the invention.

Input device may include one or more mechanisms that permit a user to input information into computing device such as a keyboard keypad or control buttons a microphone a remote control a touch screen display e.g. touch screen display a camera or video camera a computer mouse trackball gyroscopic device e.g. gyroscope mini mouse stylus graphics tablet joystick isotonic or isometric pointing stick accelerometer palm mouse foot mouse puck eyeball controlled device finger mouse light pen light gun eye tracking device steering wheel yoke jog dial space ball directional pad dance pad soap mouse haptic device tactile device and discrete pointing device. For example input device may be a computer mouse that includes switches or buttons that may enable a user to point click and drag items in a display. Movements of the pointing device may be echoed on the display by movements of a pointer cursor and or other visual changes.

Output device may include one or more mechanisms that may output information from computing device . Output device may include logic that may be directed by for example processing logic to output the information from computing device . The information may be presented in the form of a display that may be displayed by output device . The information may include for example graphical user interface GUI elements e.g. windows widgets etc. a graphical block diagram of a model text or other information. Output device may include for example a cathode ray tube CRT plasma display device light emitting diode LED display device liquid crystal display LCD device vacuum florescent display VFD device surface conduction electron emitter display SED device field emission display FED device haptic device tactile device printer speaker video projector multi dimensional display device or other output device.

Communication interface may include logic configured to interface computing device with for example a communication network and enable computing device to communicate with entities connected to the network. An example of a network that may be used with computing device will be described further below with respect to .

Communication interface may include a transceiver like mechanism that enables computing device to communicate with the entities connected to the network. Communication interface may be implemented as a built in network adapter network interface card NIC Personal Computer Memory Card International Association PCMCIA network card card bus network adapter wireless network adapter Universal Serial Bus USB network adapter modem or other device suitable for interfacing computing device to the network.

Primary storage is accessible to processing logic via bus . Primary storage may comprise one or more computer readable media configured to store information for processing logic . The information may include computer executable instructions and or data that are configured to implement operating system OS windows manager WM and conversion translation engine CTE . The instructions may be executed interpreted and or otherwise processed by processing logic .

Primary storage may comprise a RAM that may include RAM devices configured to store information e.g. data executable instructions . The RAM devices may be volatile or non volatile and may include for example one or more DRAM devices flash memory devices SRAM devices zero capacitor RAM ZRAM devices twin transistor RAM TTRAM devices read only memory ROM devices ferroelectric RAM FeRAM devices magneto resistive RAM MRAM devices phase change memory RAM PRAM devices or other types of RAM devices.

OS may be a conventional operating system that may be configured to implement various conventional operating system functions. These functions may include for example scheduling one or more portions of CTE to run on processing logic managing primary storage controlling access to various components associated with computing device e.g. pointing device output device network interface secondary storage and controlling access to data received transmitted by these components. Examples of operating systems that may be adapted to implement OS include the Linux operating system Microsoft Windows operating system the Symbian operating system and the Android operating system. A version of the Linux operating system that may be used is Red Hat Linux available from Red Hat Corporation Raleigh N.C. Versions of the Microsoft Windows operating system that may be used include the Microsoft Windows Vista and Microsoft Windows XP operating systems available from Microsoft Inc. Redmond Wash.

WM may be a conventional window manager that enables graphical user interface GUI elements such as widgets to be managed in a display that may be displayed by output device . WM may also be configured to 1 capture one or more positions of pointing device and or other data associated with pointing device and 2 provide the positions and or data to OS and or CTE . The positions and or data may be provided for example in messages that are sent to OS and or CTE . Examples of window managers that may be used with one or more embodiments of the invention include but are not limited to the X windows manager e.g. GNOME KDE which is often used with the Linux operating system and window managers used with the Microsoft XP and Vista operating systems. It should be noted that other window managers or components that are configured to implement various functions associated with window managers may be used with one or more embodiments of the invention.

CTE may be executed as a standalone application or as a plug in or component of another application such as a modeling environment e.g. a graphical modeling environment textual modeling environment or other data processing environment that may be configured to implement one or more embodiments of the invention. Some or all of CTE may operate under the control of OS .

CTE may include hardware based and or software based logic configured to provide a computing environment that may allow for example a user to perform tasks related to disciplines such as but not limited to mathematics science engineering medicine business biology finance and so on. As described CTE may include a plug in or component such as a component of a modeling environment such as MATLAB or a plug in for a data processing application such as Microsoft Excel .

Additional examples of CTEs that may incorporate one or more embodiments of the invention include but are not limited to Simulink Stateflow and SimEvents which are available from The MathWorks Inc. Unified Modeling Language UML profiles associated with UML e.g. Modeling Analysis and Real Time Embedded Systems MARTE Systems Modeling Language SysML Avionics Architecture Description Language AADL etc. GNU Octave from the GNU Project MATRIXx and LabView from National Instruments Mathematica from Wolfram Research Inc. Mathcad from Mathsoft Engineering Education Inc. Maple from Maplesoft Extend from Imagine That Inc. Scilab and Scicos from The French Institution for Research in Computer Science and Control INRIA Modelica or Dymola from Dynasim AB VisSim from Visual Solutions SoftWIRE from Measurement Computing Corporation WiT from DALSA Coreco VEE Pro and SystemVue from Agilent Technologies Inc. Vision Program Manager from PPT Vision Inc. Khoros from Khoral Research Inc. VisiQuest from Pegasus Imaging Corporation Gedae from Gedae Inc. Virtuoso from Cadence Design Systems Inc. Rational Rose Rhapsody and Tau from International Business Machines IBM Inc. SCADE from Esterel Technologies and Ptolemy from the University of California at Berkeley.

Consistent with embodiments described herein CTE may contain computer executable instructions and data that are configured to perform various tasks as described herein. More specifically GUI logic may include logic configured to receive user information and commands relating to converting selected or identified source data from a first format to a second format based on one or more defined rules. For example GUI logic may receive an identification of a particular group of source data in a first format such as a file designation . GUI logic may retrieve the source data and graphically display the data to the user for interaction. As described in additional detail below GUI logic may be configured to receive one or more conversion translation rules output pre processed data and receive user instructions relating to the received rules and data.

Conversion rules logic may include logic configured to receive one or more rules for transforming or converting portions of received retrieved source data into a different format type or to re characterize a portion of the data into a particular data type or configuration. For example consistent with implementations described herein such rules may define data exclusions data replacements and data format conversions. By way of example assume that a received data file includes a listing of dates provided in the formation mm dd yyyy e.g. 05 01 2011 for May 1 2011 . A conversion rule may be received that operates on the retrieved data to convert dates in this format to a dd.mm.yyyy format e.g. 01.05.2011 .

In one implementation conversion rules logic may establish conversion rules based on rule criteria received via the GUI. Such rules may be based on pre set rule types having user configurable variables and criteria. The established rules may be stored in a primary or second storage for subsequent use by pre application logic and rules execution logic in the manner described below.

In an exemplary implementation rules established and stored by conversion rules logic may each have a priority or execution order associated therewith. In this manner it is possible to generate interdependent rules. For example a first rule may convert data from a string based format to a numeric format e.g. dates from a Month Day Year format or a mm.dd.yyyy to a serial date format such as a MATLAB serial date format . A second rule may exclude non numeric data. By ordering the rules in this manner the date cells in the data may not be excluded since they were initially converted to numeric format date cells thereby avoiding exclusion by the second rule.

Consistent with embodiments described herein rule ordering may be established via GUI logic . For example established rules may be dragged and dropped to desired positions in a listing of rules as described below.

Pre application logic may include logic configured to process the retrieved source data based on the conversion rules established and stored by conversion rules logic and any additional inferential processing performed based on a type of the requested conversion or other factors. Inferential processing may include metadata processing associated with the data such as data type identification variable name generation data segmentation etc. Consistent with embodiments described herein pre application of rules and inferential processing may be performed automatically upon designation of source data and may be dynamically updated upon addition of or modification of conversion rules or any other conversion criteria such as target format designation etc.

The results of the data processing by pre application logic may be forwarded to GUI logic for output in conjunction the displayed data. In one embodiment the output takes the form of graphical overlays of the processed or converted data over the original data. In this manner the user can easily identify what data has been changed or transformed and the manner of the transformation. In one embodiment color coding may be associated with each rule established via conversion rules logic . Output of pre processed data may be similarly styled e.g. color coded thereby further enhancing the ability to easily identify the effects of the established rules.

Rules execution and data storage logic may include logic configured to perform final conversion translation of the initial source data upon user review of the pre applied conversion translation generated by pre application logic . In one implementation execution of the final conversion translation may be initiated via the GUI such as via a button or menu command associated with the GUI. Rules execution and data storage logic may output the processing and converted data for storage in primary or secondary storage for subsequent use.

CTE may generate and output a graphical user interface based on the retrieved received source data . For example GUI logic may generate a GUI that includes a least a portion of the source data depicted in the initial source format. illustrates one exemplary GUI consistent with implementations described herein. As shown GUI may include a windowed configuration having a configuration area and a data preview area . Configuration area may include target type selection element a data range element a conversion rules area and a conversion or importation selection element . Data preview area may include a spreadsheet like configuration comprising a number of rows and columns for initially displaying source data in a source data format e.g. the format of the source data .

In general the elements of configuration area may enable a user to initiate conversion or translation of source data by providing a number of interface elements for selecting data or importation type for converted data a portion of source data to be converted and a number of conversion rules to be applied to source data . For example target type selection element may include a selection element such as a drop down menu pick list etc. for enabling a user to select a target data type for conversion from source data or a portion of the source data as described below . By way of example target data types may include matrix array column vectors dataset etc. Other conversion types may also be implemented for non numeric data such as video audio image conversions. In such implementations conversions may include related processing such as resolution changes cropping matting enhancing encoding changes etc.

Data range element may enable the user to specify one or more portions of source data for conversion or translation. For example as described above when data preview area includes a spreadsheet like configuration preview area may include a number of rows denoted by numerical designations e.g. 1 2 3 etc. and a number of columns designated by alphabetical designations e.g. A B C D etc. . In such an implementation data range element may be configured as a text box for receiving user input of a range of data such as A G as shown in designating the data from cell A to cell G inclusive.

In other implementations the user may select the portions of source data for conversion via interaction with preview area using input device such as a keyboard or computer mouse. In such an implementation the user may select e.g. by clicking and dragging etc. portion of the data in preview area . Upon selection data range element may be updated to reflect the selected portion .

As shown in in one implementation data preview area of GUI may graphically identify the selected portion of source data such as by highlighting low lighting e.g. spotlighting circling etc. In addition once selected portion may be provided with a graphical element or affordance for enabling the user to deselect the selection. As shown in in one embodiment such a graphical element may include a box having an x positioned therein.

In addition consistent with embodiments described herein portion may be provided with a description element identifying a title or name to be associated with selected portion and a size of the selected portion. In the example of description element indicates that the initial name of the selected portion is untitled and its size is 367 rows by 7 columns. In some embodiments the displayed size may indicate a size of the selected portion in the target or destination format following any exclusions applied to the data. The user may interact with description element to edit the name associated with portion . Editing a name in description element may cause a corresponding data type in an output data file to also be renamed or modified. Consistent with embodiments described below CTE e.g. pre application logic may infer or determine information regarding selected portions such as name data type etc. In such an implementation headings or other information in source data may be used to determine the initial content of description element . In addition it should be noted that where additional selected portions have been selected each portion may be provided with respective deselection and description elements .

Conversion rules area may be configured to receive criteria for conversion rules to be applied to selected portion of source data . Upon initial retrieval of source data and selection of portion conversion rules may be initially unpopulated. That is no rules may be provided. In other implementations one or more pre populated rules may be included within conversion rules area for example based on the content of the source data and the target data type. For example if source data is a spreadsheet containing dates and the target data type is a numeric matrix conversion rules area may be pre populated with a date conversion rule.

As described below CTE via GUI logic and conversion rules logic may receive user selection of one or more rules for user in performing pre application and eventual conversion of source data .

Conversion or importation selection element may include a graphical element selection of which causes CTE e.g. rules execution and data storage logic to execute the conversion process in accordance with the information presented via GUI . That is rules execution and data storage logic may convert source data into target data not shown and may store the target data in a location suitable for subsequent use such as by the calling software program or entity such as MATLAB . In some implementations as described below selection of conversion selection element may cause rules execution and data storage logic to generate and output computer code relating to the conversion for use by other programs applications or applied to other input data sets. For example the output code may define the various rules received via conversion rules area as well as the configuration information received and or described via configuration area .

Returning to once the initial source data has been displayed a selection of at least a portion of the source data may be received from the user block . For example as described above the user may interact with a data range element and or data preview area to select portion of source data .

A number of conversion rules or other conversion information may be received from the user block . For example conversion rules logic may receive and store one or more conversion translation rules from the user via interaction with conversion rules area in GUI . In one embodiment each of the received conversion rules may include identification criteria and operation criteria. For example a received conversion rule may define that all rows having any non numeric cells in selected portion be excluded from the generated target data. In this example the identification criterion is any non numeric cells and the operation criterion is exclude. Other exemplary operations may include replacement cell data conversion etc. In some embodiments an operation may require a designation of additional criteria such as what value to replace an indentified value with what format to convert an identified value into etc.

In addition to the conversion rules other conversion translation information may be received in block . For example target data type selection element may enable a user to select a target data type for use in performing the converting source data . Exemplary target data types include matrix matrices column vectors row vectors datasets timeseries data object etc. A matrix refers to a multi dimensional table of numeric data. Column and row vector refers to single dimensional arrays of data. A dataset refers to a hybrid data collection that may include more than one type of information. A timeseries is a matrix that stores data and time values as well as the metadata information that includes units events data quality and interpolation method. Each type of conversion translation may introduce different requirements for conversion for source data to target data. For example matrices may not include non numeric data etc.

Upon addition of at least one conversion rule the conversion rule s may be pre applied to selected portion s of source data block and the preview display may be updated to graphically illustrate the effects of application of the rule s block . For example pre application logic may dynamically retrieve the conversion rules determine the effects of the rules e.g. process the source data in accordance with the rules and update data preview area to depict the effect of conversion rules on potentially output target data.

In one implementation operation element may include a drop down menu or pick list identifying available rule operations. Exemplary operations include replacement operations conversion operations and exclusion operations although other operations may be available without departing from the spirit or scope of the embodiments described herein. As defined herein a replacement operation refers to CTE removing identified data from the source data and inserting in its place defined replacement data. A conversion operation refers to modifying a format of identified source data. An exclusion operation refers to removing or eliminating defined data from the output target data. In some embodiments exclusion operations may be performed on entire rows or columns of source data.

Data identifying element may include a drop down menu or pick list identifying available identification mechanisms associated with a particular operation element . For example upon user selection of a particular operation element GUI logic may determine available types of source data identification elements and provide the identified types as options in data identifying element . Target value indicating element may include an interface element for receiving an indicating of a replacement format or data value corresponding to the associated operation. For example target value indicating element associated with a replacement operation may indicate a particular data value or a string using a regular expression. In contrast a target value indicating element associated with a convert operation may indicate a data type or format type.

Graphic identifier element may indicate a color or other graphical indicia or visual style e.g. shading highlighting cross hatching underlining font type typefacing italics bold etc. etc. associated with a particular rule. As described below the graphic identifier element may be used to enable the user to easily identify source data that has been acted upon or affected by a particular conversion rule . Add remove indicator may be provided to enable the user to remove an existing rule e.g. the minus sign or add a new rule e.g. the plus sign . For example selection of the plus sign in add remove indicator my result in addition of a new blank rule immediate below the selected indicator .

In the example of rule defines an exclude rule in which operation element is defined as exclude rows with and data identifying element is defined as non numeric cells. For this operation no target value indicating element is necessary. Pre application or execution of rule identifies and excludes from output target data any rows in selected portion that include any non numeric cells.

Rule defines a convert rule in which operation element is defined as convert data identifying element is defined as Excel dates to and target value indicating element is defined as datenum. Pre application or execution of rule identifies any cells that include Excel formatted dates and converts the dates to the MATLAB datenum format a serial date format useable in MATLAB .

Rule defines replace rule in which operation element is defined as replace data identifying element is defined as blanks with and target value indicating element is defined as 0.0. Pre application or execution of rule identifies any cells that are blank and replaces them with the number 0.0. In this manner replace rules may be used to convert data otherwise incompatible with the target data format e.g. blank cells in the case of rule with compatible data.

As described above upon entry of at least one conversion rule in conversion rules area data preview area may be automatically updated to graphically depict the effects of the established rules. Consistent with embodiments described herein such graphical depiction may include a number of different visual styles or color coded overlays on selected portion of source data in which the overlays include the modified or converted data and the applied visual style e.g. color shading etc. indicates conversion rule that caused the modification. In this manner the user is easily and substantially instantaneously able to determine the effect that a particular rule may have without losing the ability to view or determine the content of the original source data. In some implementations the output graphical overlays may be toggled on or off via a user selected option or configurations setting.

As shown in graphic identifier element associated with rule includes vertical cross hatching graphic identifier element associated with rule includes crisscross hatching and graphic identifier element associated with rule includes diagonal cross hatching. It should be understood that various other types of visual styles may be used such as colors type faces fonts highlighting etc. Accordingly in some embodiments associated of visual styles to conversion rules may be referred to as color coding. 

Upon entry creation of conversions rules the visual style corresponding to the graphic indicator elements of the applied rules may be depicted in corresponding portions selected portion in data preview area . For example as shown in pre application of conversion rule vertical cross hatching indicia causes various rows in selected portion to be excluded from output target data. This effect is represented by applying or overlaying the visual style associated with graphic identifier element of rule to the affected portions of selected portion . In the illustrated portion of this includes rows and .

Simultaneously any corresponding value changes in affected portions of selected portion may be similarly overlaid over the affected data in data preview area . Because conversion rule is an exclusion rule and not a replacement or conversion rule no data changes are depicted. However pre application of conversion rule crisscross hatching indicia causes a number of cells in column A in selected portion to be converted in accordance with the rule. This effect is represented by applying or overlaying the crisscross hatching indicia to the affected cells and by also overlaying the converted values of the affected cells. For example the Excel formatted date value of 5 15 2003 in cell A of portion is overlaid with a converted datenum value of 731034. Using both the visual style and the overlaid resulting data value users are easily able to determine which rule is applied and what the resulting effect on the data is.

Similarly pre application of conversion rule diagonal cross hatching indicia causes a number of cells in rows and in selected portion to be converted in accordance with the rule. This effect is represented by applying or overlaying the diagonal cross hatching indicia to the affected cells and by also overlaying the converted values of the affected cells the number 0.0 in this example .

In an additional implementation a hover or mouseover effect may be further used to highlight the changes resulting from conversion rule application. For example GUI may determine that the user has positioned a pointing device cursor over a particular portion of the preview data. GUI may cause the all cells corresponding to the particular rule to be further highlighted the corresponding conversion rule in conversion rules area to be highlighted etc.

Returning to once all rules have been created and the preview data approved by the user CTE may convert the selected portion s of the source data to target data based on the applied rules and other configuration information block . Such additional configuration information may include conversion type information from target data type selection element dataset name information from description element or other inferred predicted data information etc. For example rules execution and storage logic may execute conversion translation of the selected portion s of the source data based on the received conversion rules and other information and may store the converted data for subsequent use.

In one implementation conversion of the selected portion s of the source data to output target data may include generation of computer code corresponding to the conversion. For example using MATLAB as an example conversion of source data to MATLAB compatible data further comprises generation of MATLAB code that identifies the applied conversion rules . Such code may be used in subsequent instances to convert translate data without requiring graphical manipulation of preview data.

Consistent with embodiments described herein conversion rules may include ordering or priority information. In this manner created conversion rules may be applied sequentially with subsequent rules executing following execution of earlier rules. In one implementation rule ordering may be indicated by the user by ordering conversion rules graphically within conversion rule area . For example in the example of rule may be executed before rule which may be executed before rule . An order of the rules may be modified by for example dragging and dropping an established rule within conversion rules area . The effect of a change in ordering of rules may be immediately determined by pre application logic and graphically depicted in GUI .

Consistent with additional embodiments described herein CTE may determine incompatibilities within the selected portion of the source data based on the content of the source data and the selected type of importation conversion and may graphically depict the incompatibilities for review by the user prior to conversion. For example string data in the source data may be incompatible for inclusion into a numeric matrix. Pre application logic may identify the incompatibilities and may cause GUI logic to provide graphical indications of the incompatibilities. For example a particular visual style e.g. color such as red etc. may be applied to the incompatible data. In addition user selection of an indicated incompatible portion of source data e.g. clicking hovering etc. may cause information regarding the incompatibility to be presented to the user. In one implementation such information may take the form of a tooltip or other pop up window or bubble.

In accordance with this embodiment an additional portion of GUI may be leveraged to provide conversion information such as locations of incompatible data in the source data e.g. rows columns cells time spatial position etc. locations of modified data e.g. via conversion rules in the selected portion of the source data etc. In some implementations pre application logic may be further configured to suggest or propose one or more conversion rules to remedy the identified incompatibilities. The proposed conversion rule may be automatically generated and inserted into conversion rules area .

Referring to GUI may be provided with a vertical scroll bar . Consistent with embodiments described herein locations of conversion effects or file incompatibilities may be denoted via message elements provided on vertical scroll bar . For example pre application logic may during pre application of conversion rules determine the locations of conversion effects or file incompatibilities within source data . Pre application logic may cause GUI logic to provide message elements in vertical scroll bar corresponding to the determined locations.

For example assume that a total length of scroll bar corresponds to a total vertical length of source data . In this case a vertical positioning of message elements within scroll bar may indicate a relative position of the data corresponding to the message within source data . For example a message element halfway down scroll bar may corresponding to data halfway through source data .

Although not depicted in in some embodiments GUI may additionally or alternatively be provided with a horizontal scroll bar indicating file incompatibilities at relative portions in a width of source data e.g. in various columns of source data . Message elements provided in the horizontal scroll bar similar to message elements may be positioned to indicate relative locations of conversion effects or file incompatibilities.

Consistent with embodiments described herein different messages may be indicated via visual styling e.g. color coding of message elements . For example identified incompatible data may be denoted by red message elements . In an additional implementation effects of one or more of conversion rules may be indicated by message elements having a color style corresponding to the associated conversion rule . In addition user selection of a particular message element e.g. hovering etc. may cause information regarding the message element to be presented to the user such as a reason for a determined incompatibility an identification of an applied conversion rule a row number associated with the data relating to the selected message element etc. Such information may take the form of a tooltip or other pop up window or bubble.

In response to this selection pre application logic may identify likely data groupings in the source data block infer information regarding the identified groupings block and may provide inferred information regarding the source data as metadata for the target data block . For example assuming that user has selected column vectors as the target data type pre application logic may identify likely column vectors e.g. one dimensional arrays of numerical data in the source data infer column vector information e.g. name and size information based on the source data in relation to the selected portion of the source data and may provide a graphical indication of the inferred information via GUI . In this example the inferred data includes variable names and array sizes associated with the determined column vectors.

Consistent with implementations described herein pre application logic may infer variable name information based on text information included in source data corresponding to the identified column vector. For example column C in source data may include a heading Quantity in row . Although row of the source data is not included in the inferred column vector for column C and is not included in the selected portion of source data the information provided therein may be used to infer a variable name for associated with the corresponding identified column vector e.g. data in cells C to C and C to C. This inferred variable name is provided to the user in the corresponding description element .

The user may interact with description elements to edit the variable name associated with each column vector. Although column vectors are referred to specifically in data regarding other target data types may be similarly inferred such as matrix names etc.

A number of data type description elements may be provided corresponding to each of the identified data types. For example data type description element and each identify the type of data associated with the corresponding portion . In the example of data type description element identifies portion as a string and data type description element identifies portion as a double e.g. a matrix of double precision numerals . The user may interact with data type description elements to edit the data type by for example selecting from a number of possible data types.

In addition to data type description elements GUI may also provide a number of variable description elements corresponding to data portions . Each variable description element may include an inferred variable name corresponding to the associated data portion. Consistent with implementations described herein pre application logic may infer variable name information based on text information included in source data .

For the example of a single data object has been identified that includes an integer array and three numerical matrices to sometimes referred to as a matrix of doubles or simply doubles . Consistent with embodiments described herein configuration area associated with the data object target data type may include a variable names selection element and an observation names selection element . Users may interact with GUI to select sub portions corresponding to each of the variable names and observation names. Selection of specific variable names selection element and an observation names selection element may then enable pre application logic to determine which selected sub portions and correspond to which type of information.

In the example of the orientation of an icon in variable names selection element indicates that a top horizontal sub portion corresponds to the variable names information. Similarly the orientation of an icon in observation names selection element indicates that a left side vertical sub portion corresponds to the observation names information.

Although described in in relation to variable and observation names information implementations described herein may enable any object elements to be defined within the context of CTE based on position and configuration of selected portions of source data . In addition pre application logic may perform inferential determinations based on the source data to identify the most likely types of data or data groupings. In addition CTE may provide an application programming interface API for enabling extension of the data object creation embodiments to other data object types.

Although the embodiment of and depict source data and data preview area as having a spreadsheet like configuration other configurations are suitable for different types of data. For example an image audio waveform or linear video representation may be provided in data preview area for handling by CTE .

One or more embodiments of the invention may be implemented in a distributed environment. illustrates an example of a distributed environment that may be configured to implement one or more embodiments of the invention. Referring to environment may contain various entities including computing device target environment service provider cluster and network . Note that the distributed environment illustrated in is just one example of an environment that may be used with embodiments of the invention. Other distributed environments that may be used with embodiments of the invention may contain more entities fewer entities entities in arrangements that differ from the arrangement illustrated in and so on.

Details of computing device were described above with respect to . In distributed environment computing device may be configured to among other things exchange information e.g. data with other entities e.g. target environment service provider and cluster in network . Computing device may interface with network via communication interface .

Network may include a communication network capable of exchanging information between the entities in network . The network may include digital and or analog aspects. The information may include machine readable information having a format that may be adapted for use for example in the network and or with one or more entities in network . For example the information may be encapsulated in one or more packets that may be used to transfer the information through network .

Information may be exchanged between entities using various network protocols such as but not limited to the Internet Protocol IP Asynchronous Transfer Mode ATM Synchronous Optical Network SONET the User Datagram Protocol UDP Transmission Control Protocol TCP Institute of Electrical and Electronics Engineers IEEE 802.11 etc.

Network may comprise various network devices such as gateways routers switches firewalls servers repeaters address translators etc. Portions of network may be wired e.g. using wired conductors optical fibers etc. and or wireless e.g. using free space optical FSO radio frequency RF acoustic transmission paths etc. . Portions of network may include a substantially open public network such as the Internet. Portions of network may include a more restricted network such as a private corporate network or virtual private network VPN . It should be noted that implementations of networks and or devices operating on networks described herein are not limited with regards to information carried by the networks protocols used in the networks the architecture configuration of the networks etc.

Service provider may include logic e.g. software that makes a service available to another entity in distributed environment . Service provider may also include a server operated by for example an individual a corporation an educational institution a government agency and so on that provides one or more services to a destination such as computing device . The services may include software containing computer executable instructions that implement one or more embodiments of the invention or portions thereof and may be executed in whole or in part by 1 a destination 2 service provider on behalf of the destination or 3 some combination thereof.

For example in an embodiment service provider may provide one or more subscription based services that may be available to various customers. The services may be accessed by a customer via network . The customer may access the services using a computing device such as computing device . The services may include services that implement one or more embodiments of the invention or portions thereof. Service provider may limit access to certain services based on e.g. a customer service agreement between the customer and service provider .

The service agreement may allow the customer to access the services that may allow the customer to build execute and or analyze a model such as model as described above. The service agreement may include other types of arrangements such as certain fee based arrangements or restricted access arrangements. For example a customer may pay a fee which provides the customer unlimited access to a given package of services for a given time period e.g. per minute hourly daily monthly yearly etc. . For services not included in the package the customer may have to pay an additional fee in order to access the services. Still other arrangements may be resource usage based. For example the customer may be assessed a fee based on an amount of computing resources or network bandwidth used.

Cluster may include a number of units of execution UEs that may perform processing of one or more embodiments of the invention or portions thereof on behalf of computing device and or another entity such as service provider . UEs may reside on a single device or chip or on multiple devices or chips. For example UEs may be implemented in a single ASIC or in multiple ASICs. Likewise UEs may be implemented in a single computing device or multiple computing devices. Other examples of UEs may include FPGAs CPLDs ASIPs processors multiprocessor systems on chip MPSoCs graphic processing units microprocessors etc.

UEs may be configured to perform operations on behalf of another entity. For example in an embodiment UEs are configured to execute portions of code associated with the CTE . Here CTE may dispatch certain activities pertaining to one or more embodiments of the invention to UEs for execution. Service provider may configure cluster to provide for example the above described services to computing device on a subscription basis e.g. via a web service .

It should be noted that one or more embodiments of the invention may be implemented in environments other than a CTE. For example one or more embodiments of the invention may be implemented in an operating system such as OS a window manager such as WM an application e.g. Excel a driver and so on. Moreover one or more embodiments of the invention may be adapted to operate in environments that may be multidimensional e.g. 2 D 3 D etc. .

The foregoing description of embodiments is intended to provide illustration and description but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. For example while a series of acts has been described above with respect to the order of the acts may be modified in other implementations. Further non dependent acts may be performed in parallel.

Also the term user as used herein is intended to be broadly interpreted to include for example a computing device e.g. a workstation or a user of a computing device unless otherwise stated.

It will be apparent that embodiments described herein may be implemented in many different forms of software and hardware. Software code and or specialized hardware used to implement embodiments described herein is not limiting of the invention. Thus the operation and behavior of embodiments were described without reference to the specific software code and or specialized hardware it being understood that one would be able to design software and or hardware to implement the embodiments based on the description herein.

Further certain embodiments of the invention may be implemented as logic that performs one or more functions. This logic may be hardware based software based or a combination of hardware based and software based. The logic may be stored in one or more computer readable storage media and may include computer executable instructions for execution by processing logic such as processing logic . The computer executable instructions may be configured to implement one or more embodiments of the invention. The computer readable storage media may be volatile or non volatile and may include for example flash memories removable disks non removable disks and so on.

In addition it should be noted that various electromagnetic signals such as wireless signals electrical signals carried over a wire optical signals carried over optical fiber etc. may be encoded to carry data and or computer executable instructions configured to implement one or more embodiments of the invention on for example a communication network such as network .

No element act or instruction used herein should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

