---

title: Search techniques for rich internet applications
abstract: A computing device includes one or more rich internet application (RIA) client engines. Each RIA client engine includes a corresponding private RIA storage area. The computing device also includes a per-RIA public storage area for each RIA. The per-RIA public storage area including a subset of data items in the private RIA storage area of the corresponding RIA client engine. A search engine of the computing device may search the data items in the one or more per-RIA public storage areas and link to content in the private RIA storage area of the corresponding RIA client engine at a given data item matching a search request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09280602&OS=09280602&RS=09280602
owner: Microsoft Technology Licensing, LLC
number: 09280602
owner_city: Redmond
owner_country: US
publication_date: 20130709
---
This application is a continuation of U.S. patent application Ser. No. 12 145 522 filed Jun. 25 2008 which is incorporated herein by reference in its entirety.

Computing devices have made significant contributions toward the advancement of modern society and are utilized in a number of applications to achieve advantageous results. Computing devices have facilitated increased productivity and reduced costs in communicating and analyzing data in most areas of entertainment education business and science. The amount of information accessible through computing devices continues to increase. There are a number of techniques for locating information depending upon where the data is located. Generally search engines are information retrieval systems used to locate content information data and the like on computing systems. Internet search engines enable searching of publicly accessible information on the World Wide Web but not application data that is private to a user. Desktop search engines enable searching the local system for user specific information.

Referring now to a computing environment according to the conventional art is shown. The computing environment includes one or more applications that run locally on a user computing device e.g. desktop applications local storage for storing data for use by the applications and a search engine . The search engine s crawler collects metadata about each item of content in the local storage and indexes the content based on the metadata. The search index may then be queried by the query routine of the search engine to find one or more data items that match the search query. The matching data items are displayed to the user as search results. The user may select a given data item in the search results to deeply link to the data in a corresponding application.

In addition to content and application that run locally on a user computing device there are a growing number of rich internet applications. The rich internet applications are applications with features and functionality similar to desktop applications. At least a portion of each rich internet application runs locally in a secure environment e.g. sandbox and a portion may also run on a server. The content and application data of a rich internet application is stored in a private storage area of the rich internet application and is not generally available outside the rich internet application. Therefore the content of rich internet applications and application data is not readily searchable by the desktop search engine. Accordingly there is a need for search techniques that provide for searching the content of rich internet applications.

Embodiments of the present technology are directed toward search techniques for rich internet applications. In one embodiment a method for enabling searching rich internet applications includes publishing a subset of private rich internet application data to a corresponding per rich internet application public storage area for each of one or more rich internet applications and a relative link to one or more given items of the subset in the private rich internet application data. The method also includes generating a search index of data stored in the per rich internet application public storage area. The method may also include receiving a search request querying the search index based on the search request and outputting a search result of the query. The method may further include receiving a selection of a given item of the search result starting a given rich internet application based on the selected given item and passing the relative link for the given item to the rich internet application. In response thereto the rich internet application converts the relative link to a qualified link and outputs content at the given item through the rich internet application.

In another embodiment one or more computing device readable media including instructions which when executed cause a computing system to implement a method that includes publishing a subset of data and relative link thereto in a public rich internet application storage and notifying a search engine of the publication of the subset of data and relative links. In response thereto the search engine analyzes the subset of data published to each per rich internet application public storage to build an encoded index based on a system of weighting and stores the encoded index in a search index.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Reference will now be made in detail to the embodiments of the present technology examples of which are illustrated in the accompanying drawings. While the present technology will be described in conjunction with these embodiments it will be understood that they are not intended to limit the invention to these embodiments. On the contrary the invention is intended to cover alternatives modifications and equivalents which may be included within the scope of the invention as defined by the appended claims. Furthermore in the following detailed description of the present technology numerous specific details are set forth in order to provide a thorough understanding of the present technology. However it is understood that the present technology may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail as not to unnecessarily obscure aspects of the present technology.

Referring now to an exemplary user computing device in accordance with one embodiment of the present technology is shown. The exemplary user computing device may be a desktop personal computer PC laptop computer personal digital assistant PDA smart phone netbook personal computer ultra mobile personal computer UMPC mobile internet device MID ebook or the like. The user computing device includes one or more processors e.g. CPU GPU one or more computing device readable media and one or more input output I O devices . The processors computing device readable media and I O device are typically communicatively coupled to each other by a chip set and or one or more busses. The chipset acts as a simple input output hub for communicating data and instructions between the processors the computing device readable media and the I O devices .

The I O devices include a network adapter e.g. Ethernet card for communicating with one or more server computers over one or more networks. The I O devices also include a CD drive DVD drive and or the like and peripherals such as a keyboard a pointing device a speaker a printer and or the like.

The computing device readable media may be characterized as primary memory and secondary memory. Generally the secondary memory such as a magnetic and or optical storage provides for non volatile storage of computer readable instructions and data for use by the computing device . For instance the disk drive may store the operating system OS desktop applications and data and one or more rich internet applications e.g. client engines and data . The primary memory such as the system memory and or graphics memory provides for volatile storage of computer readable instructions and data for use by the computing device . For instance the system memory may temporarily store a portion of the operating system a portion of one or more applications and associated data and a portion of one or more rich internet application and associated data that are currently used by the CPU GPU and the like.

Referring now to a computing environment in accordance with one embodiment of the present technology is shown. The computing environment includes one or more rich internet application client engines and a search engine . The computing environment may also include one or more desktop applications as illustrated in . The search engine includes a search crawler a search index and a query routine . At least a portion of each rich internet application runs locally in a secure environment e.g. sandbox and a portion may also run on a server. In particular rich internet applications introduce an intermediate layer of code often called a client engine between the user machine and the server. The client engine is usually downloaded at the beginning of the application and may be supplemented by further code downloads as the application progresses. The client engine is programmed to perform application functions that will enhance some aspect of the user experience such as the user interface responsiveness when handling certain user interactions personalizing data information content and the like to the given user and or the like. Rich internet applications may also generally be referred to as rich clients rich web clients or rich web applications.

A subset of each rich internet application s data personal to a user is made available to a respective per RIA public data storage so that it can be integrated with the rest of the local user data. The subset of each rich internet application s data is made available outside of the rich internet application in the sense that it is available to other applications or systems like the local search engine . The public data storage areas for the respective rich internet applications enable each application to integrate a subset of its private application data into the local machine for an integrated user experience. The public rich internet application data can be used in platform experiences like desktop search or application experience for manipulation by other applications such as a spreadsheet application.

Referring now to each rich internet application client engine in accordance with one embodiment of the present technology includes a local portion of an application private RIA storage a safe application programming interface API and a RIA host . The application stores data that is private to the respective user locally in the private RIA storage e.g. the rich internet application is sandboxed . The data stored locally may be downloaded from one or more networks or may be input locally on the user computing device . A subset of the application s data may be published to the public RIA storage area . In particular each rich internet application client engine can publish data items through the safe API into its own specific public data storage area . The RIA host manages the rich internet application identity and sandboxing. In particular the RIA host provides for deeply linking from search results generated by the query routine to data in the private RIA storage based on the public RIA storage data .

Operation of the computing environment shown in will be further explained with reference to which show a method for searching rich internet application data. At the rich internet application client engine publishes a subset of the private RIA data to a corresponding per RIA public storage along with a relative link to the corresponding data in the private storage of the rich internet application. In one implementation a safe API of the rich internet application client engine publishes a subset of the given rich internet application s data stored in the private RIA storage to a public RIA storage associated with the given rich internet application. The safe API also generates a relative path corresponding to the fully qualified path e.g. URL of the location in the private RIA storage of each item for the subset of data. At the rich internet application may also notify the search engine of the publication of data to the rich internet application s corresponding public RIA storage . In one implementation the safe API of the rich internet application client engine may notify the search crawler that data has been published by the rich internet application to its corresponding public RIA storage

In one implementation the developer of a rich internet application chooses which data items to publish into the RIA public data storage area as search items. For the search items the developer may provide a title one or more keywords an optional FormName and a safe relative navigation uniform resource locator e.g. ID 25 within the rich internet application. For example the following pseudo code illustrates publishing of exemplary search item data 

In addition to manually publishing data items for search indexing the rich internet application developer can automatically publish items from the rich internet application data model. The developer may define the rich internet application data model using classes to describe the data entities and relationships between them. For example a purchasing rich internet application may have Order and a collection of OrderLine that work together to represent a complete purchase order. The private data mode is stored in per rich internet application private storage. The private data model may be specified for example by the following pseudo code 

At the search crawler sometimes also referred to as a spider analyzes the subset of data published to the public RIA storage of each rich internet application to build an index of the data. The analysis generally builds list of words found in the files on the public RIA storage and the metadata for those files and where the words were found. The search crawler builds an index based on a system of weighting e.g. ranking The weighting for example might assign a weight to each entry with increasing values assigned to words as they appear near the top of a document in sub headings in links in the meta tags or in the title of the page. The index may be encoded to reduce the storage requirements and or time to search the index. The search crawler may also index the local storage of the desktop applications as illustrated in . In one implementation a search crawler such as in Windows Desktop Search or Google Desktop Search indexes the data in each of the per RIA public storage . The public RIA data storage area may be automatically indexed by the search crawler as part of the user s regular User s Profile or Documents area.

The encoded index is then stored in a search index at . If the search crawler indexes items in the local storage the indexed items from the local storage may be combined with the indexed items from the per RIA public storages in a single search index or a separate search index may be maintained for items in the local storage . The processes of may be performed periodically in response to a change of the data in a private RIA storage area or in response to receipt of a search request just before the search index is queried.

At the query routine receives a search request. The search request may be a simple text search literal search concept based search advanced query search natural query search or the like. In one implementation the query routine provides a graphical user interface including a text field to enter the search request. The query routine examines the search index and determines the one or more applicable search results at . The search results include a listing of best matching data according to a specified criteria. At the query routine outputs the search results. The search results may include but is not limited to the name of the item e.g. file the name of the rich internet application date time created date time modified item size item type a summary of the item and or the like for each item in the per RIA public storages that matches the search request as determined from the search index. The search results may also include the name of the item e.g. file name path the name of the application date time created date time modified item size item type a summary of the item and or the like for each time in the local storage that matches the search request as determined from the search index.

At selection of a given item in the search result is received. In one implementation the user may select the given item in the search results displayed in the graphical user interface using a pointing device a keyboard or the like. At the query routine starts a given rich internet application that the selected item is associated with and passes a relative link for the given search result item to the rich internet application. The user may also or alternatively specify a given application to start that can access the selected item in the private RIA storage.

At the rich internet application receives the relative link. At the relative link is converted to a qualified link to the selected item in the search result in the private RIA storage. In one instance the developer can provide code in the RIA host to process a relative navigation uniform resource locator URL to enable deep navigation to the corresponding fully qualified uniform resource locator URL when the rich internet application starts. The code in the RIA host can process the relative navigation uniform resource locator and query string when the rich internet application starts. For example the following pseudo code illustrates navigation upon startup of the rich internet application based on the relative navigation uniform resource locator 

The RIA application programming interface interacts with the RIA host to safely expand the relative URL to a full navigation URL. Thus the rich internet application developer provides a navigation entry point to enable automatic deep linking Thereafter when the user searches for an item in the search index and clicks on a search result the search systems will work with the RIA host to launch the rich internet application and navigate into the application with specific data e.g. to a particular purchase order For example the following pseudo code illustrates deep linking 

At the content at the qualified link in the private storage of the rich internet application is output through the rich internet application. The data may be output within the rich internet application or may be output for use by another application.

Referring now to an exemplary graphical user interface GUI provide by the query routine of a search engine in accordance with one embodiment of the present technology is shown. A user may type in one or more keywords into a query field to find matching data items and files across all rich internet application. The query may also find matching data items and files across the local file system personal profile and local application data e.g. Outlook . The matching data items and files are shown to the user as a list of search results in a results field of the GUI . The user can click on a given item in the search results to deeply navigate into the given rich internet application with specific form for the data item. For example the user may type in Butterfly to which multiple matches are returned as the search results. The user can refine the search with additional keywords to isolate the particular data item that they are looking for.

The search results may be aggregated based upon one or more parameters such as the file type storage location date created modified or the like. For example when the user searches from within a rich internet application they will see an aggregate set of results including published data items from the current rich internet application search results from their local data published data items from other local rich internet application and optionally from their enterprise search engine and or internet search engines

Accordingly embodiments of the present technology advantageously publish specified data items to a per rich internet application data storage areas. The data items may be automatically published for search indexing from a specified application data model. The systems search engine may therefore search data items of rich internet applications. In addition users may deeply link from search results to the selected data item in the given rich internet application.

The foregoing descriptions of specific embodiments of the present technology have been presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed and obviously many modifications and variations are possible in light of the above teaching. The embodiments were chosen and described in order to best explain the principles of the present technology and its practical application to thereby enable others skilled in the art to best utilize the present technology and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the Claims appended hereto and their equivalents.

