---

title: Automatic discovery of multiple controllers in Software Defined Networks (SDNs)
abstract: Controllers in a Software Defined Network (SDN) automatically discover and authenticate each other as part of the control plane operations, without any need for manual configuration of other controllers. The new capability of such controllers is based on Controller-Advertisement messages transferred between controllers in the same or different SDNs. In doing so, multiple controllers can be used for load sharing, improved reliability under failure of a controller by enabling seamless take over and recovery. Moreover, controllers can cooperate to enable end-to-end services to work across multiple SDNs. Controller-Advertisement messages are also used to check the health statuses of discovered controllers in the same or different SDNs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09094285&OS=09094285&RS=09094285
owner: ARGELA YAZILIM VE BILISIM TEKNOLOJILERI SAN. VE TIC. A.S.
number: 09094285
owner_city: 
owner_country: TR
publication_date: 20130125
---
The disclosed invention generally relates to the controller component of a Software Defined Network SDN . In particular it relates to such controllers automatically discovering and authenticating each other as part of the control plane operations without any need for manual configuration of other controllers as it is being done in prior art. The system of this invention is a new capability of the controller that receives Controller Advertisement messages from other controllers in the same or different SDN performing authentication and subsequently performing control plane information exchange. The Controller Advertisement messages used for discovery are also used to periodically check the health of the pool of discovered controllers. Multiple controllers can be used for load sharing improved reliability under failure of a controller by enabling seamless take over and recovery. Also controllers can cooperate to enable end to end services to work across multiple SDNs.

Software Defined Networking SDN is a new paradigm where the control of computer and communication networks is accomplished via programmatic interfaces. There are a number of approaches to SDN. In the most popular approach the data and control planes that typically reside in a switch are separated and the control plane is moved to a separate device commonly referred to as the controller as described in the article OpenFlow Enabling Innovation in Campus Networks by Nick McKeown et al. which appeared in ACM SIGCOMM Computer Communication Review vol. 38 no. 2 April 2008 and also in the Pre Grant Application by Casado et al. 2009 0138577 . When triggered the controller calculates the most appropriate route through the network between two nodes and programs all switches along this route accordingly. The controller can be a physical server a virtual machine or an appliance. There can be multiple controllers in a computer network in this approach. It is possible to divide the network into regions and have different controllers control each region. It is also possible to have multiple controllers control a single switch for reliability and or performance issues where each controller may control different ports or different flow types or flows with different end nodes. In this approach a well defined protocol OpenFlow is used for communication between the network forwarding devices and the controller. The controller also has a northbound application programming interface so that different custom control applications that use the OpenFlow data may be installed on the controller. This approach is advocated by the Open Networking Foundation ONF that aims to standardize the OpenFlow protocol. The latest version of the OpenFlow protocol may be accessed via the ONF web page. It is also possible to use a protocol other than OpenFlow to enable proper operation of this approach. illustrates the OpenFlow based SDN concept with a single controller and a plurality of switches and . In dotted lines and represent control plane connections between the controller and the switches while solid lines and represent the switch to switch data plane connections. All interactions in between the controller and the switches use a clearly defined protocol such as OpenFlow. This protocol allows for the control plane operations wherein the controller programs the switches to specify the route of data paths or flows slices . The controller programs the switch by simply uploading one or more forwarding table s or table entries .

In a second approach to SDN virtual switches as described in the Pre Grant Application by Casado et al. 2010 0257263 are deployed as part of an overlay network on top of the existing network infrastructure using protocols such as VXLAN or NVGRE which are defined in IETF Internet Drafts draft mahalingam dutt dcops vxlan 00.txt and draft sridharan virtualization nvgre 01.txt respectively. In this approach the data and control planes are still kept separate in the overlay and the controller or a group of controllers is used to control the virtual switches.

In a third SDN approach the data and control planes are not physically separated. Instead every forwarding device in the network uses programmatic interfaces for network control on which custom control applications may be installed. This vendor specific approach may be visualized as having an SDN controller in each forwarding device and using a vendor specific protocol for communication between the controller and the forwarder.

The Pre Grant Publication to Kato 2012 025049 describes a Load Distribution System Load Distribution Method and Program for SDN. In Kato the load distribution amongst controllers is made possible using a proxy server that is situated between the switches and the controllers. The proxy server enables transparency of the different controllers to each of the switches. It also enables seamless load balancing amongst the controllers unbeknownst to the switches in the network.

The Pre Grant Publication to Yamato et al. 2011 0317701 describes one possible method to formulate routing decisions in a SDN architecture where multiple controllers are deployed. The routing decision as calculated by the controller that controls the switch from which the route originates is communicated to the other relevant controllers in the network by this controller using a message that includes the forwarding path information.

In Kato as well as Yamata et al. as with the remainder of the prior art when multiple controllers are used a manual configuration step is needed to program each controller with the information of the other controller s . The present invention eliminates this manual step by providing a system and method that allow each controller to automatically discover and authenticate other controllers in the network.

The present invention provides a method for a first controller in a first subnetwork to automatically discover a second controller of a second subnetwork said first subnetwork further comprising at least a first switch and said second subnetwork further comprising at least a second switch said method as implemented in said first controller comprising the steps of a receiving a message from said first switch identifying activation of a first port which is due to establishment of a connection between a first port in said first switch and a second port in said second switch b generating a Controller Advertisement message carrying information required to identify and access said first controller c forwarding said generated Controller Advertisement message from said first controller to said first switch said first port in said first switch further forwarding said Controller Advertisement message to said second port in said second switch said second switch further forwarding said Controller Advertisement message to said second controller along with an identification of said second port over which said Controller Advertisement message was received wherein said second controller in said second subnetwork identifies said first controller in said first subnetwork based on information carried in said Controller Advertisement and said second controller generating a Controller Information Base CIB entry containing information required to identify and access said first controller.

Reciprocally and independently of the Controller Advertisement message originating from the first controller the present invention also provides the steps of a receiving a message from said second switch identifying activation of a second port which is due to establishment of a connection between a second port in said second switch and a first port in said first switch b generating a Controller Advertisement message carrying information required to identify and access said second controller c forwarding said generated Controller Advertisement message from said second controller to said second switch said second port in said second switch further forwarding said Controller Advertisement message to said first port in said first switch said first switch further forwarding said Controller Advertisement message to said first controller along with an identification of said first port over which said Controller Advertisement message was received wherein said first controller in said first subnetwork identifies said second controller in said second subnetwork based on information carried in said Controller Advertisement and said first controller generating a CIB entry containing information required to identify and access said second controller.

The present invention also provides a method to check health of automatically discovered controllers comprising the steps of a a first controller generating a first Controller Advertisement message carrying the information required to identify and access said first controller when a new switch port becomes active b said first controller sending said generated first Controller Advertisement to a first switch having said newly activated port c said first controller reciprocally and independently of said first Controller Advertisement message receiving at least a second Controller Advertisement message from at least a second controller d said first controller periodically generating a third unsolicited Controller Advertisement message with its access information and solicit flag set to check health of said second controller e said first controller receiving at least a fourth Controller Advertisement message from said second controller indicating health information of said second controller wherein first controller s CIB is updated with said health information.

The present invention also provides a method for a first controller in a first subnetwork to automatically discover a second controller of a second subnetwork said first subnetwork further comprising at least a first switch and said second subnetwork further comprising at least a second switch said method as implemented in said first controller comprising the steps of a receiving a message from said first switch identifying activation of a first port which is due to establishment of a connection between a first port in said first switch and a second port in said second switch b generating a Controller Advertisement message carrying information required to identify and access said first controller c forwarding said generated Controller Advertisement message from said first controller to said first switch said first port in said first switch further forwarding said Controller Advertisement message to said second port in said second switch said second switch further forwarding said Controller Advertisement message to said second controller along with an identification of said second port over which said Controller Advertisement message was received d if said first controller and said second controller are a single controller then i updating said single controller s Network Information Base NIB with a new entry showing new connection information between said first switch first port and said second switch second port utilizing the information carried in the optional switch id and port no fields of said Controller Advertisement message and ii discarding any Controller Advertisement messages that are looped to itself e if said first controller and said second controller are different controllers then said second controller i identifying said first controller using information carried in said Controller Advertisement message originated from said first controller and ii generating a new CIB entry containing information for said first controller.

The present invention also provides an article of manufacture having computer readable storage medium comprising computer readable program code executable by a computer to implement a method for a first controller in a first subnetwork to automatically discover a second controller of a second subnetwork said first subnetwork further comprising at least a first switch and said second subnetwork further comprising at least a second switch said medium comprising a computer readable program code executed by said computer to receive a message from said first switch identifying activation of a first port which is due to establishment of a connection between a first port in said first switch and a second port in said second switch b computer readable program code executed by said computer to generate a Controller Advertisement message carrying information required to identify and access said first controller c computer readable program code executed by said computer to forward said generated Controller Advertisement message from said first controller to said first switch said first port in said first switch further forwarding said Controller Advertisement message to said second port in said second switch said second switch further forwarding said Controller Advertisement message to said second controller along with an identification of said second port over which said Controller Advertisement message was received wherein said second controller in said second subnetwork identifies said first controller in said first subnetwork based on information carried in said Controller Advertisement and said second controller generating a CIB entry containing information required to identify and access said first controller.

Method and system for controllers to discover each other within the same Software Defined Network SDN where there are at least two controllers or across a plurality of interconnected SDNs where each SDN is controlled by one or more controllers. The method comprises the steps of a switch controlled by a controller in an SDN establishing a new data connection to another switch controlled by another controller in the same or different SDN each of these two interconnected switches sending a notification message to its respective controller about the newly established data connection each controller responding to the received notification message by a Controller Advertisement message carrying information required to identify and access the controller the switch receiving the Controller Advertisement message passing that message to the other interconnected switch which in turn propagates it to the other controller. Mutually doing so each controller learns the other controller s connection information to establish a direct peer controller control plane connection to authenticate and share control plane data such as routing table or service capabilities. While OpenFlow defines control plane messages to enable the controller to switch dialog this invention describes additional control plane messages between controllers which can be used with protocols other than OpenFlow.

While this invention is illustrated and described in a preferred embodiment the invention may be produced in many different configurations. There is depicted in the drawings and will herein be described in detail a preferred embodiment of the invention with the understanding that the present disclosure is to be considered as an exemplification of the principles of the invention and the associated functional specifications for its construction and is not intended to limit the invention to the embodiment illustrated. Those skilled in the art will envision many other possible variations within the scope of the present invention.

In the prior art when multiple controllers are used in a Software Defined Network SDN or several SDNs are interconnected each with different controllers a manual configuration step is needed to program each controller with the information of the other controller s . The present invention eliminates that manual step by providing a system and method that allows each controller to automatically discover and authenticate other controllers in the network. An Autonomous System AS may be represented as a single SDN. Alternatively it may be comprised of many interconnected SDNs. Thus two SDNs that are interconnected may be in the same AS or in different Autonomous Systems. If the interconnected SDNs are in the same AS their controllers may exchange all the control information they contain. Doing so the controllers will be replicas of each other. However policies may be defined to limit the control plane information each such controller shares with the other controllers. If the SDNs are in different Autonomous Systems their controllers will only exchange limited control information. For example the internal network of the AS may be represented to the foreign controller in a more summarized or aggregated form. Also there will be processes in place to ensure the other controller is trusted. The method of exchange of control information amongst controllers once they discover each other could be similar to exchange of routing information amongst routers in the classical Internet using various routing protocols and therefore is kept outside the scope of this patent application.

The controller discovery process covered in this invention can be triggered by a change in the network for example when a new connection is established and or periodically at regular intervals. The former is more efficient in terms of messages injected into the network but at the same time it is more prone to message losses. Although some rules are defined in the following paragraphs to tolerate potential losses it is advisable to perform controller discovery at regular intervals that are not short besides being triggered by changes in the network.

The information gathered through the controller discovery process can be stored in the CIB which is similar to the NIB used to store the information required to control the underlying switches. CIB can be considered as a table whose entries contain the information necessary to identify and access the discovered controllers as shown in TABLE I below 

Below are the possible fields of a CIB entry that stores the access information for a discovered controller 

The controllers listed in the CIB may change status under different conditions. For example upon receiving a Controller Advertisement message from a remote controller the status of the remote controller will be set as Live whereas not receiving a Controller Advertisement message from a previously discovered remote controller in the health check process will change the status to Dead . Alternatively if a data link that was previously used to interconnect the switches which enabled the control plane connectivity between the controllers is broken i.e. the port of the switch in the CIB table above associated with a remote controller and access between the controllers thereby becomes unavailable the status of the remote controller will be set as Not Accessible upon receiving a message indicating the corresponding change in the network. While there are other values that can possibly be used for representing the status of a controller it may also suffice to use only two values which are Live and Dead .

The discovery process involves a single message namely the Controller Advertisement message which is used by controllers to advertise their presence together with connection information. Since there is no explicit reply message of Controller Advertisement message losses can be tolerated by adhering to the following rules 

The Controller Advertisement message will have the following structure in addition to the IP header if encapsulated as an IP packet 

When a new data connection is established between two switches in an SDN network a physical connection is established between the ports of these switches. Upon such a change in the port status i.e. the port changing status from idle to active of the said switches they notify their respective controllers of the corresponding change. Then the controllers can act accordingly to discover the change in the network.

In Switch is controlled by Controller on the first subnetwork whereas Switch and Switch are controlled by Controller on the second subnetwork. The OpenFlow protocol is run on control links between the controllers and the switches shown in dashed lines numbered with and . Initially as shown in Switch and Switch are not connected and Controller and Controller are not aware of each other. Thereafter as depicted in a data connection numbered with is established between port p of Switch and port p of Switch. When this connection is established the controller discovery process is automatically triggered. An exemplary flowchart showing the discovery process initiated by Controller upon connecting ports p and p is depicted in and . It should be noted that although depict a discovery process initiated by Controller a reciprocal discovery process not shown is also initiated by Controller and is within the scope of the present invention.

The steps below describe the controller discovery process initiated by Controller as illustrated in . Reference is also made to as it depicts the sequence of messages.

It is also possible for a switch to be managed by multiple controllers for redundancy and or performance issues. illustrates such a scenario where a first subnetwork is managed by Controller and a second subnetwork is managed by Controller and Controller. In this scenario dotted lines and represent various control links. It should be noted that while Switch has only one control link with Controller Switch has two control links and one for each of the controllers Controller and Controller i.e. Switch is managed by Controller and Controller . Similarly Switch has two control links and one for each of the controllers Controller and Controller i.e. Switch is also managed by Controller and Controller . The controller discovery process covered in this invention covers such a scenario such that the Controller Advertisement message prepared by Controller is forwarded to both Controller and Controller by Switch. Moreover Controller and Controller both prepare Controller Advertisement messages to be forwarded to Switch and eventually to Controller when notified by Switch of the change in the port status i.e. the port changing status from idle to active .

Additionally the present invention provides for an article of manufacture comprising computer readable program code contained within implementing one or more modules to automatically discover multiple controllers in software defined networks SDNs . Furthermore the present invention includes a computer program code based product which is a storage medium having program code stored therein which can be used to instruct a computer to perform any of the methods associated with the present invention. The computer storage medium includes any of but is not limited to the following CD ROM DVD magnetic tape optical disc hard drive floppy disk ferroelectric memory flash memory ferromagnetic memory optical storage charge coupled devices magnetic or optical cards smart cards EEPROM EPROM RAM ROM DRAM SRAM SDRAM or any other appropriate static or dynamic memory or data storage devices.

Implemented in computer program code based products are software modules for a receiving a message from said first switch identifying activation of a first port which is due to establishment of a connection between a first port in said first switch and a second port in said second switch b generating a Controller Advertisement message carrying information required to identify and access said first controller c forwarding said generated Controller Advertisement message from said first controller to said first switch said first port in said first switch further forwarding said Controller Advertisement message to said second port in said second switch said second switch further forwarding said Controller Advertisement message to said second controller along with an identification of said second port over which said Controller Advertisement message was received wherein said second controller in said second subnetwork identifies said first controller in said first subnetwork based on information carried in said Controller Advertisement and said second controller generating a Controller Information Base CIB entry containing information required to identify and access said first controller.

Implemented in computer program code based products are software modules for reciprocally and independently of the Controller Advertisement message originating from the first controller a receiving a message from said second switch identifying activation of a second port which is due to establishment of a connection between a second port in said second switch and a first port in said first switch b generating a Controller Advertisement message carrying information required to identify and access said second controller c forwarding said generated Controller Advertisement message from said second controller to said second switch said second port in said second switch further forwarding said Controller Advertisement message to said first port in said first switch said first switch further forwarding said Controller Advertisement message to said first controller along with an identification of said first port over which said Controller Advertisement message was received wherein said first controller in said first subnetwork identifies said second controller in said second subnetwork based on information carried in said Controller Advertisement and said first controller generating a Controller Information Base CIB entry containing information required to identify and access said second controller.

Also implemented in computer program code based products are software modules for a receiving a message from said first switch identifying activation of a first port which is due to establishment of a connection between a first port in said first switch and a second port in said second switch b generating a Controller Advertisement message carrying information required to identify and access said first controller c forwarding said generated Controller Advertisement message from said first controller to said first switch said first port in said first switch further forwarding said Controller Advertisement message to said second port in said second switch said second switch further forwarding said Controller Advertisement message to said second controller along with an identification of said second port over which said Controller Advertisement message was received d if said first controller and said second controller are a single controller then i updating said single controller s Network Information Base NIB with a new entry showing new connection information between said first switch and said second switch utilizing the information carried in the optional switch id and port no fields of said Controller Advertisement message and ii discarding any Controller Advertisement messages that are looped to itself e if said first controller and said second controller are different controllers then said second controller i identifying said first controller using information carried in said Controller Advertisement message originated from said first controller and ii generating a new CIB entry containing information for said first controller.

Once a controller has discovered a number of neighboring controllers it should keep track of their statuses for proper operation. This can be achieved by sending Controller Advertisement messages with solicit flag set to each of the previously discovered controllers and waiting for them to send their Controller Advertisement messages in return.

Returning to the discussion of through and considering the CIB given in TABLE IV which is the same as the example in TABLE I Controller will prepare a Controller Advertisement message with solicit flag set carrying its own access information and then send the advertisement message to each of the controllers in the CIB. As neighboring controllers receive the Controller Advertisement message with solicit flag set they will respond to Controller with their Controller Advertisement messages with solicit flag cleared. Upon receiving the advertisement messages from neighboring controllers Controller will maintain the statuses of these controllers. This process should be repeated at regular intervals for proper operation.

In addition to sending advertisement messages per CIB entry periodically network change events should be processed to maintain the statuses of discovered controllers. For instance upon receiving a Port Status message showing that a port has become inactive the accessibility states of the neighboring controllers that are accessible through that port should be changed accordingly.

After discovering each other two controllers should build a secure connection between themselves like Transport Layer Security TLS over which controller to controller information such as routing service and capability information will be exchanged. Establishing the secure connection is well defined and beyond the scope of this invention.

After completing the discovery process and establishing a secure end to end connection the two controllers may need to exchange information such as 

1 Routing information NIB The controllers may share a part of aggregate or all the routing information that they maintain so as to enable packet routing between the networks that are in their control.

2 Network capability information The controllers may exchange the capabilities of their networks such as the maximum bandwidth or minimum latency that can be offered so as to support end to end quality of service QoS .

3 Controller capability information Each controller may have different hardware and software specific capabilities. Accordingly each controller may be capable of handling only specific types of flows and may have upper bounds on the traffic load that it can handle.

It is also possible to include some or all of this information in the Controller Advertisement messages as part of the discovery process. This can be achieved by using the optional fields defined in the Controller Advertisement message.

A system and method has been shown in the above embodiments for the effective implementation of automatic discovery of multiple controllers in software defined networks SDNs . While various preferred embodiments have been shown and described it will be understood that there is no intent to limit the invention by such disclosure but rather it is intended to cover all modifications falling within the spirit and scope of the invention as defined in the appended claims. For example the present invention should not be limited by number of sub networks number of controllers number of switches number of switches per controller number of controllers per switch software program computing environment or specific computing hardware.

