---

title: Bi-directional linking of product build information
abstract: Software product build information is bi-directionally linked. At least a first build instance of the software product is built and the first build instance is published by a supplier build repository. Responsive to an entity who is not the supplier indicating a use of the first build instance in a client product, build information relating to the use of the first build instance in the client product is received. The build information relating to the use of the first build instance in the client product is published by the supplier build repository.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09086860&OS=09086860&RS=09086860
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09086860
owner_city: Armonk
owner_country: US
publication_date: 20130221
---
Software developers often build applications using existing components in lieu of programming entire applications from scratch. Subroutine libraries program generators visual programming systems and databases are examples of software technologies that have been developed to facilitate application development.

There are a number of reasons why using existing software components is desirable. For example the use of existing software components reduces the amount of time dedicated to writing program code. Moreover developers can focus on high level integration of the software components into an application without necessarily having expertise to program the components themselves. Also existing software components oftentimes have been extensively tested thus reducing the amount of time necessary for testing and de bugging of an application using the software components.

One or more embodiments disclosed within this specification relate to bi directionally linking software product build information.

A method of bi directionally linking software product build information can include building via a supplier side processor at least a first build instance of the software product and publishing the first build instance by a supplier build repository. The method also can include responsive to an entity who is not the supplier indicating a use of the first build instance in a client product receiving build information relating to the use of the first build instance in the client product. The method further can include publishing by the supplier build repository the build information relating to the use of the first build instance in the client product.

Another embodiment can include a system having a processor. The processor can be configured to initiate executable operations. The executable operations can include building via a supplier side processor at least a first build instance of the software product and publishing the first build instance by a supplier build repository. The executable operations also can include responsive to an entity who is not the supplier indicating a use of the first build instance in a client product receiving build information relating to the use of the first build instance in the client product. The executable operations further can include publishing by the supplier build repository the build information relating to the use of the first build instance in the client product.

Another embodiment can include a computer program product for bi directionally linking software product build information. The computer program product can include a computer readable storage medium having stored thereon program code that when executed configures a processor to perform a method. The method can include building via a supplier side processor at least a first build instance of the software product and publishing the first build instance by a supplier build repository. The method also can include responsive to an entity who is not the supplier indicating a use of the first build instance in a client product receiving build information relating to the use of the first build instance in the client product. The method further can include publishing by the supplier build repository the build information relating to the use of the first build instance in the client product.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied e.g. stored thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. The phrase computer readable storage medium means a non transitory storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk drive HDD a solid state drive SSD a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM a digital versatile disc DVD an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer other programmable data processing apparatus or other devices create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

For purposes of simplicity and clarity of illustration elements shown in the figures have not necessarily been drawn to scale. For example the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further where considered appropriate reference numbers are repeated among the figures to indicate corresponding analogous or like features.

Arrangements described herein relate to bi directionally linking software product build information between a supplier that provides product builds and entities that use the product builds. Several definitions that apply throughout this document will now be presented.

As used herein the term product build means a process by which a product is built. For example a product build X refers to a process of manipulating source code to produce a product X. Certain product build information is typically constant across a product build such as the product name product owner website etc. Other product build information is not constant however. For example different build information may be associated with different build streams or build instances.

As used herein the term build stream means a specific version of a product. For example a Product build X may contain multiple build streams such as Build stream 1.0 Build stream 1.5 and Build stream latest. Product build information constant across a build stream may include the version number release lead and supplier builds and components.

As used herein the term build instance means a specific instance in which product X is produced from source code. Build instances typically are identified by build identifiers. A build identifier can be a time stamp but this is not a requirement. A build stream can contain multiple build instances. Each build instance has a unique for at least the build stream build identifier. Each build instance also can have an associated result identifier e.g. success or failure green or red etc. .

As used herein the term build engine means software that implements a product build to build a product. For instance a build engine may implement a product build X to produce a build instance of product X. The build engine also may implement the product build X to produce other build instances of product X when the source code for product X is updated changed.

As used herein the term build result means components built for a particular build instance and associated build information related to the build instance. The associated build information can be metadata though this need not be the case.

As used herein the term build repository means a storage area configured to store one or more build streams and or build instances. A build repository also may be configured to store various product build information such as information described herein. In illustration a build repository can include a database that stores product build information for a product build streams of the product and or build instances of the product. The database also can identify where build components are stored in the build repository.

As used herein the term publish means to store and make accessible to one or more entities for use. For example a repository may receive a build instance and or build information store the build instance and or build information and make the build instance and or build information accessible to one or more entities that choose to access the build instance and or build information.

In operation the supplier build engine can via a processor execute a product build to create a build instance for a supplier product . For example the supplier build engine can execute the product build to generate a build result for the supplier product . The build result can include the build instance and corresponding build information . Execution of the product build can be initiated by the supplier who maintains the supplier product for which the build instance is created.

The supplier build engine can communicate the build result to the supplier build repository to be published by the supplier build repository . The supplier build repository can include files where the components of the build instance are stored and a database in which the build information is stored. Additional build instances and build information for the product also can be published by the supplier build repository . The build instance can include components of the supplier product built for that build instance . The build information can identify information about the supplier side build of the build instance for example information related to the product for which the build instance is built information related to the build stream for which the build instance is built the components of the supplier product used in the build instance and any other information relevant to the supplier product the build stream the build instance and or the supplier who built via the supplier build engine the build instance .

An entity for example a user group or organization who is not a supplier of the product or a user group or organization who is the supplier of the product can access the build instance to build other products that include the build instance or that include components of the supplier product included in the build instance . For example the entity can access the build instance from the supplier build repository . As noted the supplier build repository also may contain other build instances. Rules can be configured and enforced so that the latest good build instance of the product is available to be accessed or the same build instance presently in use elsewhere is available to be accessed. The invention is not limited in this regard however and rules can be configured and enforced to allow other build instances to be accessed.

In illustration an entity can access the build instance using a uniform resource identifier URI e.g. a uniform resource locator URL or access the build instance in any other suitable manner. The entity may access the desired build instance directly from the supplier build repository or another repository where the build instance may be stored. For example a first entity may use a particular build instance for their product and publish the build result for that product by another repository. Such build result for the first entity s own product can include the build instance and at least a portion of the build information for the build instance . A second entity may access the build instance and any corresponding build information from the repository of the first entity or from the supplier build repository . By way of example the build result for the first entity s own product can indicate where the build instance may be accessed.

In some instances the entity for example a user representing the entity may be required to enter entity and or user data to access the build instance . For example the user can provide a unique identifier such as a user name email address or the like a password or pass code etc. The present arrangements are not limited in this regard however.

Regardless of how an entity accesses the particular build instance when the entity accesses the build instance the corresponding build information also may be provided to that entity. The client side build engine can via a processor execute a product build for a client product to generate a build result for the client product . Execution of the client side product build can be initiated by an entity who maintains a client product for which a build instance is created. The build result can include a build instance of the client product and build information for the build instance . The client product and hence the build instance can include one or more components of the build instance . For example the number of components of the build instance that are used in the build instance of the client product can be less than the total number of components of the build instance though this need not be the case.

The client side build engine can communicate the build result to the client build repository to be published by the client build repository . The client build repository can include files where the components of the build instance are stored and a database in which the build information is stored. Additional build instances and build information for the client side product also can be published by the client build repository .

The build information can identify information about the client side build of the build instance for example information related to the client product for which the build instance is built information related to the build stream for which the build instance is built the components of the client product used in the build instance and any other information relevant to the client product the build stream and or the build instance . Moreover the build information can identify build information about the build instance used in the build instance . For example the build information can identify the supplier of the build instance the supplier product for which the build instance is generated the stream for which the build instance is generated components of the build instance that are used in the build instance components of the supplier product used in the build instance and any other information relevant to the supplier product the build stream for the supplier product and or the build instance . The build information can be communicated to the client build repository for publishing by the product build used by the client side build engine or communicated to the client build repository for publishing by another module which identifies the components of the build instance used in the build instance .

Further client side build engine can communicate to the supplier build repository additional build information for the build instance . In another arrangement the additional build information for the build instance can be provided by a user accessing the build instance such as a user who is to retrieve the build instance and provide the build instance to the client side build engine . For example the user can be prompted to enter such information and such information can be validated before the user is provided access to the build instance . In other arrangements a portion of the additional build information can be provided by the user and a portion of the additional build information can be provided by the client side build engine .

The supplier build repository may add the additional build information to the existing build information thereby associating the additional build information with the build instance and existing build information and causing the additional build information to be published by nature of the build information being published. Because the additional build information is provided by the client side build engine the additional build information indicates the entity s use of the build instance .

Such additional build information can identify the entity that uses the build instance to generate the build instance the particular build instance the particular build instance the components of the build instance used in the build instance components of the client product used in the build instance the build stream for which the build instance is generated the build stream for which the build instance is generated the supplier product for which the build instance is generated the client product for which the build instance is generated and or the like. The additional build information can be communicated to the supplier build repository for publishing by the product build used by the client side build engine or can be communicated to the supplier build repository for publishing by another module which identifies the components of the build instance used in the build instance . Accordingly the build information contained in and published by the supplier build repository can identify client products such as the client product which use particular build instances such as the build instance of the supplier product as well as indicate dependencies and or relationships.

At this point it should be noted that since the supplier build repository and or the client build repository include information which may be used to establish bi directional linking of build information related to the build instance no additional repository and or database is required to implement the processes methods described herein.

Any of a variety of means can be used perform the aforementioned publishing of the build results . For example using one or more suitable file transfer FTP protocols representational state transfer REST e.g. in accordance with Open Services for Lifecycle Collaboration Change Management OSLC CM or the like. Suitable application program interfaces APIs can be provided to facilitate publishing of the build results in accordance with a suitable program protocol though this need not be the case. Further the aforementioned databases can be updated with record updates or addition of new records new information can be posted or the like. When a series of build instances publish it may only be necessary to update product build and or product stream information in the event of a change of the information. In some instances only information for the most recent build instance of a client product need be kept.

The system further can include a supplier repository manager . The supplier repository manager can be configured to monitor based on the build information e.g. the build information information relating to the usage of build instances e.g. the build instance in client products e.g. the client product . The supplier repository manager also can be configured to delete or archive build instances and corresponding build information for those build instances not being used in the most recent versions of client products or not being used at all. If no current client products are using a particular build instance the supplier repository manager can be confident that deleting or archiving that build instance will not affect the client products. For example if the build information indicates that the client product is using the build instance a new build instance of the supplier product is built and the build information for the new build instance for the supplier product indicates that a new build instance of the client product is using the new build instance of the supplier product then the supplier repository manager can delete and or archive the build instance and the associated build information .

Moreover the supplier repository manager can be configured to proactively notify entities maintaining client products e.g. an entity maintaining the client product changes to particular components of the supplier product that have been or are planned to be implemented subsequent to the use of such components in the client products. In illustration if a new build instance of the supplier product has been built the supplier repository manager can identify such new build instance and notify the entity managing the client product that the new build instance is available. Similarly if a new build instance of the supplier product has been planned information regarding the plan can be added to the supplier build repository . The supplier repository manager can identify plan to build the new build instance and notify the entity managing the client product that the new build instance is planned.

The supplier repository manager can communicate messages to such entities to notify the entities of such changes for example via email text messaging or the like. Further if significant defects are discovered in a particular build instance the supplier repository manager identify entities which have used the particular build instance and notify communicate messages to such entities to notify the entities of the defects and or recommend that such entities use another build instance in their respective client products .

In addition by knowing which entities are using the supplier product the owner of the supplier product e.g. via the supplier repository manager is able to based on the additional build information added to the build information perform verification as to whether the client products or the entities that manage the client products are complying with license requirements pertaining to the use of the supplier product e.g. the build instance in the client product . In illustration the additional build information can be processed by the supplier repository manager to determine whether the additional build information includes information pertinent to a particular licensing scheme. Such information can be automatically requested of an entity when the entity requests to access a build instance.

The various notification publications described herein can be communicated in any suitable manner for example via one or more communication networks. Such communication networks can be implemented as or include any of a variety of different networks such as a WAN a LAN a wireless network a mobile network a Virtual Private Network VPN the Internet the Public Switched Telephone Network PSTN or the like.

The memory elements can include one or more physical memory devices such as for example local memory and one or more bulk storage devices . Local memory refers to RAM or other non persistent memory device s generally used during actual execution of the program code. The bulk storage device s can be implemented as a hard disk drive HDD solid state drive SSD or other persistent data storage device. The processing system also can include one or more cache memories not shown that provide temporary storage of at least some program code in order to reduce the number of times program code must be retrieved from the bulk storage device during execution.

Input output I O devices such as one or more network adapters can be coupled to processing system to enable processing system to become coupled to other systems computer systems remote printers and or remote storage devices through intervening private or public networks. Modems cable modems transceivers and Ethernet cards are examples of different types of network adapters that can be used with processing system .

As pictured in the memory elements can store the components of the system of such as the supplier build engine the supplier build repository and the supplier repository manager . Being implemented in the form of executable program code these components of the system can be executed by the processing system and as such can be considered part of the processing system . Moreover the supplier build engine the supplier build repository and the supplier repository manager are functional data structures that impart functionality when employed as part of the processing system of .

A processing system similar to that described for can be used to host the client side build engine and or the client build repository described in .

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms includes including comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

Reference throughout this specification to one embodiment an embodiment or similar language means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment disclosed within this specification. Thus appearances of the phrases in one embodiment in an embodiment and similar language throughout this specification may but do not necessarily all refer to the same embodiment.

The term plurality as used herein is defined as two or more than two. The term another as used herein is defined as at least a second or more. The term coupled as used herein is defined as connected whether directly without any intervening elements or indirectly with one or more intervening elements unless otherwise indicated. Two elements also can be coupled mechanically electrically or communicatively linked through a communication channel pathway network or system. The term and or as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will also be understood that although the terms first second etc. may be used herein to describe various elements these elements should not be limited by these terms as these terms are only used to distinguish one element from another unless stated otherwise or the context indicates otherwise.

The term if may be construed to mean when or upon or in response to determining or in response to detecting depending on the context. Similarly the phrase if it is determined or if a stated condition or event is detected may be construed to mean upon determining or in response to determining or upon detecting the stated condition or event or in response to detecting the stated condition or event depending on the context.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the embodiments disclosed within this specification have been presented for purposes of illustration and description but are not intended to be exhaustive or limited to the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the embodiments of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the inventive arrangements for various embodiments with various modifications as are suited to the particular use contemplated.

