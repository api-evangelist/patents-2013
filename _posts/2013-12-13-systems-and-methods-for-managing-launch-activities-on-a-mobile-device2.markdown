---

title: Systems and methods for managing launch activities on a mobile device
abstract: A computer-implemented method for managing launch activities on a mobile device may include maintaining a plurality of launch activities associated with an application. Each launch activity in the plurality of launch activities may be associated with a different launch icon. The method may further include identifying a mobile device environment within which the application is being used. The method may also include selecting, from the plurality of launch activities, a launch activity that corresponds to the mobile device environment. The method may additionally include enabling the launch activity that corresponds to the mobile device environment. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09615193&OS=09615193&RS=09615193
owner: Symantec Corporation
number: 09615193
owner_city: Mountain View
owner_country: US
publication_date: 20131213
---
When mobile users search for mobile applications in an application store e.g. ANDROID APPS on GOOGLE PLAY they may discover many variations of the same application. For example a user searching for a security application may be confused to find multiple applications from the same software security vendor each with a different or slightly different name. Vendors may sell such products under different names depending on whether for example the application is meant for an enterprise environment or a consumer environment. Selling multiple versions of the same product or application may create brand confusion for customers and unnecessary overhead for vendors and developers. Developers may attempt to address this problem by creating a single application that can be altered after purchase for use with the various environments within which the application may be used. However on certain mobile platforms such as ANDROID once an application is installed developers may be unable to change the application name and icon unless they uninstall the application alter the application manifest file to point to a different name and icon recompile the application code into an Application Package File APK and reinstall the application.

What is needed therefore is a more efficient and effective mechanism for tailoring application for particular computing environments.

As will be described in greater detail below the instant disclosure generally relates to systems and methods for managing launch activities on a mobile device. For example a method for managing launch activities on a mobile device may include maintaining a plurality of launch activities associated with an application. Each launch activity in the plurality of launch activities may be associated with a different launch icon. The method may further include identifying a mobile device environment within which the application is being used. The method may also include selecting from the plurality of launch activities a launch activity that corresponds to the mobile device environment. The method may additionally include enabling the launch activity that corresponds to the mobile device environment.

In some embodiments identifying the mobile device environment may include identifying a license that was used to activate the application. In some examples identifying the mobile device environment may include identifying a carrier of the mobile device a manufacturer of the mobile computing device and or a device type of the mobile device.

In at least one embodiment enabling the launch activity may include enabling display of a launch icon associated with the launch activity. In some examples the launch icon may include a graphical image and an application name configured to be displayed within a root application launcher interface. In various embodiments the computer implemented method may further include after enabling display of the launch icon displaying a notification within a graphical user interface on the mobile device that indicates to a user of the mobile device that display of the launch icon has been enabled.

In at least one example the computer implemented method may further include disabling after identifying the mobile device environment within which the application is being used at least one launch activity within the plurality of launch activities that does not correspond to the mobile device environment.

In one embodiment a system for implementing the above described method may include a maintenance module stored in memory that maintains a plurality of launch activities associated with an application. Each launch activity in the plurality of launch activities may be associated with a different launch icon. The system may further include an identification module stored in memory that identifies a mobile device environment within which the application is being used. The system may also include a selection module stored in memory that selects from the plurality of launch activities a launch activity that corresponds to the mobile device environment. The system may additionally include a launch configuration module stored in memory that enables the launch activity that corresponds to the mobile device environment. The system may also include at least one processor configured to execute the maintenance module the identification module the selection module and the launch configuration module.

In some examples the system may further include a notification module stored in memory that displays a notification within a graphical user interface on a mobile device that indicates to a user of the mobile device that display of the launch icon has been enabled.

In some examples the above described method may be encoded as computer readable instructions on a non transitory computer readable medium. For example a computer readable medium may include one or more computer executable instructions that when executed by at least one processor of a computing device may cause the computing device to maintain a plurality of launch activities associated with an application. Each launch activity in the plurality of launch activities may be associated with a different launch icon. The one or more computer executable instructions may further cause the computing device to identify a mobile device environment within which the application is being used. The one or more computer executable instructions may also cause the computing device to select from the plurality of launch activities a launch activity that corresponds to the mobile device environment. The one or more computer executable instructions may additionally cause the computing device to enable the launch activity that corresponds to the mobile device environment.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The present disclosure is generally directed to systems and methods for managing launch activities on a mobile device. As will be explained in greater detail below the systems and methods herein may identify an environment within which an application on a mobile device is being used and enable a launch activity that corresponds to that environment. For example embodiments of the instant disclosure may maintain multiple launch activities that correspond to different launch icons. The systems and methods herein may then detect an environment within which the application on the mobile device is being used and select and enable the launch activity that corresponds to that environment. By dynamically enabling and disabling launch activities for an application on a mobile device e.g. on an ANDROID device mobile developers can create a single application that can be tailored after installation for use within a variety of mobile environments thereby decreasing developer overhead and decreasing confusion for customers attempting to purchase the application.

The following will provide with reference to detailed descriptions of exemplary systems for managing launch activities on a mobile device. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . In addition detailed descriptions of graphical user interfaces that show exemplary implementations of the method described in will be provided in connection with . Detailed descriptions of a computing system and network architecture capable of implementing one or more of the embodiments described herein will also be provided in connection with respectively.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example and as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. mobile computing device and or application store server computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

Exemplary system in may be implemented in a variety of ways. For example all or a portion of exemplary system may represent portions of exemplary system in . As shown in system may include a mobile computing device in communication with an application store server via a network . In one example mobile computing device may be programmed with one or more of modules . Additionally or alternatively application store server may be programmed with one or more of modules .

In one embodiment one or more of modules from may when executed by at least one processor of mobile computing device and or application store server enable mobile computing device and or application store server to manage launch activities on a mobile device. For example and as will be described in greater detail below maintenance module may be programmed to maintain a plurality of launch activities associated with an application that is stored on mobile computing device . In addition each launch activity in the plurality of launch activities may be associated with a different launch icon. Identification module may be programmed to identify a mobile device environment within which the application is being used such as a mobile device environment of mobile computing device . Selection module may be programmed to select from the plurality of launch activities a launch activity that corresponds to the mobile device environment of mobile computing device . In addition launch configuration module may be programmed to enable the launch activity that corresponds to the mobile device environment of mobile computing device .

In some embodiments notification module may be programmed to display a notification within a graphical user interface on mobile computing device that indicates to a user of mobile computing device that display of the launch icon has been enabled.

Mobile computing device generally represents any type or form of mobile computing device capable of reading computer executable instructions. Examples of mobile computing device include without limitation laptops tablets cellular phones Personal Digital Assistants PDAs multimedia players embedded systems combinations of one or more of the same exemplary computing system in or any other suitable mobile computing device. In addition mobile computing device may represent and or be configured with a variety of mobile device platforms and or operating systems such as ANDROID ASHA BLACKBERRY iOS WINDOWS PHONE WINDOWS RT BADA BLACKBERRY OS BREW GRIDOS LINUX MER NEMO MOBILE S40 SAILFISH OS SHR SYMBIAN OS TIZEN WEBOS and or any other suitable platform and or operating system.

Application store server generally represents any type or form of computing system that is configured to provide and or sell mobile applications via a graphical user interface e.g. via an internet browser or app store application . In some embodiments application store server may be configured to receive a request from an application on a mobile device to activate a license for the application. For example an application on mobile computing device may after installation attempt to activate a license for the application by connecting to and communicating with application store server . Examples of application stores provides by application server include without limitation GOOGLE PLAY on ANDROID APP STORE on IOS MARKETPLACE on WINDOWS PHONE etc.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a Wide Area Network WAN a Local Area Network LAN a Personal Area Network PAN the Internet Power Line Communications PLC a cellular network e.g. a Global System for Mobile Communications GSM network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections. In one embodiment network may facilitate communication between mobile computing device and application store server .

As illustrated in at step one or more of the systems described herein may maintain a plurality of launch activities associated with an application and each launch activity in the plurality of launch activities may be associated with a different launch icon. For example maintenance module may as part of mobile computing device in maintain a plurality of launch activities associated with an application that is stored on mobile computing device .

As used herein the phrase launch activity generally refers to any code and or process that executes in response to activation of a launch icon on a mobile device. For example a launch activity may include a process that executes when a user of a mobile computing device e.g. mobile computing device taps or clicks an icon on a mobile phone. In some examples a launch activity may provide an interactive graphical user interface that is displayed in response to a user activating a launch icon associated with an application. For example after a user taps the launch icon associated with an application the application may display the application home screen.

A launch activity may be activated in a variety of ways. For example a user of a mobile device may activate a launch activity on the mobile device by tapping clicking and or selecting an application icon associated with the launch activity. In some embodiments a launch activity may be an entry point into an application. For example a launch icon that is associated with an application may when tapped or clicked provide a user of the application with an interactive graphical user interface that allows the user to access and or utilize functions of the application.

In various embodiments the phrase launch activity may refer to a launcher activity on ANDROID devices. A launcher activity on an ANDROID device may be any activity or process of an application that is designated in code as the main and or launcher activity. For example when a user taps or clicks the launch icon associated with an ANDROID application the application may in response display a graphical user interface that is defined by the parameters code and or computer readable instructions that may be included within the launcher activity. In some embodiments a launcher activity may be any activity designated by e.g. a set of computer readable instructions or code within the manifest of an Application Package File APK as the main and or launcher activity of an application. In some examples and as will be described in greater detail below a manifest for an APK may contain multiple launcher activities configured to be enabled or disabled by the application.

In at least one example the phrase launcher activity may refer to code and or computer readable instructions within the manifest of an APK that designates an activity as a launcher activity for an application. In these examples the manifest may contain code and or computer readable instructions for each launcher activity that points to one or more launch icon resources e.g. a graphical image resource and character string resource that are associated with the application. For example the manifest may point to a resource folder that contains an icon image and a name resource that contains a character string configured to be displayed along with the icon image. In some embodiments after an application is installed on a device e.g. an ANDROID device the application may be unable to point to icon resources different from those designated during installation i.e. once an application is installed the application icon and application name may be locked in place by an operating system of a device .

As used herein the phrase launch icon generally refers to any graphical image and or text configured to be displayed within a graphical user interface that when activated causes a computing device to execute an application associated with the launch icon. In some embodiments the phrase launch icon may refer to both an image file and a graphical depiction of the name of the application. For example a launch icon for an ANDROID application may include both an image file and a character string configured to be displayed in an application launcher interface. In these examples a user of an ANDROID device may initiate or start the application by tapping the image and or character string associated with the application. The phrase launch icon may refer to any other suitable graphical shortcut representation character string name depiction and or image configured to be displayed on a device that when activated executes the launch activity of an application associated with the launch icon.

A plurality of launch activities associated with an application may be maintained in a variety of ways. For example an application that includes a plurality of launch activities may be referred to as an application that maintains a plurality of launch activities. Alternatively launch activities may be maintained by being installed with an application. In some embodiments a launch activity may be maintained by being programmed into and or included with an application. For example maintenance module may be configured to maintain and or provide a list of launch activities for an application. In addition maintenance module may be configured to ensure that each launch activity points to and is associated with the correct launch icon.

Any suitable number of launch activities may be associated with an application e.g. two five ten or fifty launch activities etc. . In some embodiments e.g. on ANDROID devices maintenance module may maintain a plurality of launch activities by designating multiple activities within an application manifest as launcher activities. In this example each activity within the manifest that is designated as a launcher activity may point to a different launch icon. For example one launcher activity may point to a launch icon for business environments while a second launcher activity may point to a launch icon for consumer environments.

Launch activities may be associated with an application in a variety of a ways. For example on ANDROID devices a launch activity may be associated with an application if it is designated as a launcher activity within the manifest of the APK. Launch activities may also be associated with an application in any other suitable manner.

As illustrated in at step one or more of the systems described herein may identify a mobile device environment within which the application is being used. For example identification module may identify a mobile device environment within which the application on mobile computing device is being used.

As used herein the phrase mobile device environment generally refers to any type of setting situation platform operating system hardware configuration software configuration surrounding circumstance condition context and or locale within which an application is being used. For example a mobile device environment may refer to an enterprise environment or a consumer environment. In this example an enterprise environment may be a business oriented environment while a consumer environment may be one that is tailored for individual users. In some embodiments the phrase mobile device environment may refer to a hardware configuration and or specific device type. For example an application installed on a GOOGLE NEXUS device may be within a different mobile device environment than an application installed on a SAMSUNG GALAXY device. In another example an application installed on a WINDOWS tablet device may be within a different mobile device environment than an application installed on a WINDOWS mobile phone.

In at least one embodiment the phrase mobile device environment may refer to a carrier of the mobile device within which an application is being used. For example an application being used on a VERIZON mobile phone may be within a different mobile device environment than an application being used on a SPRINT mobile phone. In some examples a mobile device environment may refer to a vendor of the application. For example a NORTON security application provided by COMCAST may be within a different mobile device environment than a NORTON security application provided by VERIZON. In some embodiments the phrase mobile device environment may refer to a demographic within which an application is being used. For example applications used by young mobile device users e.g. children or teenagers may be within a different mobile device environment than applications used by adult users.

In some examples the phrase mobile device environment may refer to an environment arbitrarily designated by a developer and or vendor of the application. For example a mobile application developer may for branding purposes designate users within the United States as being within a different mobile device environment than users within other countries. The phrase mobile device environment may refer to any other suitable context and or environment within which an application on a mobile device may be used.

Identification module may identify a mobile device environment within which the application is being used in a variety of ways. For example identification module may identify a mobile device environment by identifying a license used to activate the application. In some examples an application may be licensed for activation on mobile computing device . In this example identification module may identify the mobile device environment by identifying the license used to activate the application. For example identification module may detect that the license used to activate the application was a license used by a particular business.

In some embodiments identification module may identify a mobile device environment by identifying a carrier of mobile computing device . For example identification module may detect that mobile computing device is a VERIZON mobile phone. Additionally or alternatively identification module may identify a mobile device environment by identifying a manufacturer of mobile computing device . For example identification module may detect that mobile computing device is a device manufactured by SAMSUNG. In various examples identification module may identify a mobile device environment by identifying a device type of mobile computing device . In some embodiments the device type may refer to the form factor of a mobile computing device such as for example a tablet or smartphone form factor. In at least one embodiment the device type may refer to a specific build of a mobile computing device such as a device built for heavy outdoor use as opposed to a device built for casual use. For example identification module may identify a mobile device environment for mobile computing device by detecting that mobile computing device is a TOUGHBOOK i.e. a mobile device designed for rigorous use . Identification module may identify a mobile device environment using any other suitable process.

As illustrated in at step one or more of the systems described herein may select from the plurality of launch activities a launch activity that corresponds to the mobile device environment. For example selection module may select from the plurality of launch activities a launch activity that corresponds to the mobile device environment of mobile computing device .

Selection module may select a launch activity in a variety of ways. For example selection module may parse a list or file that contains associations between launch activities and mobile device environments and may select the launch activity that is associated with the mobile device environment identified by identification module . In embodiments where mobile computing device is an ANDROID device selection module may select one of multiple launcher activities designated as such within the application manifest. For example a manifest for an application may designate two activities as launcher activities one launcher activity for a consumer environment and another for an enterprise environment. In this example identification module may have previously identified that a consumer license was used to activate the application and selection module may then based on the fact that identification module identified a consumer license select the launcher activity within the manifest that corresponds to a consumer environment.

As illustrated in at step one or more of the systems described herein may enable the launch activity that corresponds to the mobile device environment. For example launch configuration module may enable a launch activity that corresponds to the mobile device environment of mobile computing device .

Launch configuration module may enable the launch activity in a variety of ways. For example launch configuration module may enable the launch activity by enabling display of a launch icon associated with the launch activity. In some embodiments the launch icon may include a graphical image and an application name configured to be displayed within a root application launcher interface. A root application launcher interface may include an interface that displays launch icons that are pointed to by the launch activity. In some examples after an application is installed on mobile computing device the application may be unable to cause a launch activity to point to a different launch icon.

In some examples launch configuration module may enable the launch activity that corresponds to the mobile device environment by enabling a launcher activity within an application manifest that corresponds to the mobile device environment. For example launch configuration module may designate the launcher activity selected by selection module as the active or enabled launcher activity. In some examples launch configuration module may enable a launch activity by calling and executing a system level Application Programming Interface API function configured to enable and or disable application activities. Launch configuration module may enable the launch activity that corresponds to mobile device environment using any other suitable process.

In at least one embodiment launch configuration module may after identifying the mobile device environment within which the application is being used disable at least one launch activity within the plurality of launch activities that does not correspond to the mobile device environment. For example identification module may identify that the mobile device environment is a consumer environment and launch configuration module may then disable a launch activity corresponding to a business environment. Launch configuration module may disable the at least one launch activity that does not correspond to the mobile device environment in a variety of ways. For example on ANDROID devices launch configuration module may alter application settings for the at least one launcher activity. In some examples launch configuration module may disable the at least one launch activity by calling and executing a system level API function that is configured to enable and or disable application activities. Launch configuration module may disable the at least one launch activity using any other suitable process.

Launch configuration module may disable the at least one launch activity at any time after identification module identifies the mobile device environment. For example launch configuration module may disable the at least one launch activity immediately after identification module identifies the mobile device environment or at any other length of time after the mobile device environment has been identified.

In some embodiments after enabling display of the launch icon the systems described herein may display a notification within a graphical user interface on the mobile computing device that indicates to a user of the mobile computing device that display of the launch icon has been enabled. For example notification module may after launch configuration module enables display of the launch icon display a notification within a graphical user interface on mobile computing device that indicates to a user of mobile computing device that display of the launch icon has been enabled.

The following descriptions of are provided to illustrate embodiments of implementing the above described method on a mobile computing device such as mobile computing device in . are illustrations of an exemplary graphical user interface used to sell mobile applications. For example application store server may be configured to display within an internet browser or an app store on mobile computing device . shows a variety of software security applications provided by exemplary software security vendor Security 1. Security 1 in this exemplary illustration is selling three different versions of their product including Security 1st Antivirus Essentials Security 1Enterprise Solutions and Security 1Safety Suite. A user searching for a Security 1product may be confused to find multiple versions of the same Security 1product. The user may be unsure which Security 1product is right for them.

To address this issue and to cut down on the overhead incurred by managing multiple applications Security 1may provide a single product that can after installation be tailored to fit the environment in which it is being used. shows what the mobile application store may look like after Security 1creates a single unified product named Security 1Mobile Security. When a user searches for a Security 1product in the mobile application store they may no longer be shown multiple Security 1applications but instead may be shown the unified Security 1Mobile Security application. The Security 1Mobile Security application may be an application that can be tailored after installation for use with the environment that the application is being used in. Users who are looking to purchase a product from Security 1may no longer have trouble finding the right application as now there may be only one application to choose from. Thus the systems and methods herein may make it possible for vendors such as Security 1 to easily provide a single product that can be tailored to fit any environment such as the Security 1Mobile Security application depicted in .

As described above the systems and methods herein may enable an application name and icon to dynamically adapt to various mobile device environments without the need to recompile and reinstall the application. Users searching for a mobile product in an application store may be confronted with a confusing array of product versions. One product version may be intended for consumer environments while another may be intended for enterprise environments but this may not always be clear to the user and as such the user may find the experience frustrating. Managing multiple versions of a product may be frustrating for developers and vendors as well as developers may spend unnecessary time and resources maintaining several versions of the same product.

As discussed in detail above the systems and methods described herein may overcome the aforementioned issues and or other problems by designating multiple activities as launcher activities within the manifest of an APK. Each launcher activity may be configured to point to a different name and icon. When an environment for the application is discovered e.g. when a license is used to activate the application the systems and methods presented herein may enable the launcher activity that is associated with the environment and thus enable the system to display the name and icon associated with the launcher activity. The application may be configured in such a way that any launcher activity and its associated name and icon may be dynamically enabled and or disabled thereby allowing a single application to adapt to the environment within which it is being used. This in turn may provide vendors with better branding solutions streamline the development process and avoid user frustration.

Computing system broadly represents any single or multi processor computing device or system capable of executing computer readable instructions. Examples of computing system include without limitation workstations laptops client side terminals servers distributed computing systems handheld devices or any other computing system or device. In its most basic configuration computing system may include at least one processor and a system memory .

Processor generally represents any type or form of physical processing unit e.g. a hardware implemented central processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation Random Access Memory RAM Read Only Memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an Industry Standard Architecture ISA Peripheral Component Interconnect PCI PCI Express PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure .

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface .

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation Small Computer System Interface SCSI host adapters Universal Serial Bus USB host adapters Institute of Electrical and Electronics Engineers IEEE 1394 host adapters Advanced Technology Attachment ATA Parallel ATA PATA Serial ATA SATA and External SATA eSATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a solid state drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium as used herein generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and non transitory type media such as magnetic storage media e.g. hard disk drives tape drives and floppy disks optical storage media e.g. Compact Disks CDs Digital Video Disks DVDs and BLU RAY disks electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an Application Specific Integrated Circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Client systems and generally represent any type or form of computing device or system such as exemplary computing system in . Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a WAN a LAN a PAN or the Internet. In one example client systems and or and or servers and or may include all or a portion of exemplary system from .

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent Network Attached Storage NAS devices configured to communicate with servers and using various protocols such as Network File System NFS Server Message Block SMB or Common Internet File System CIFS .

Servers and may also be connected to a Storage Area Network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that storage devices N and intelligent storage array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network .

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for managing launch activities on a mobile device.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

In some examples all or a portion of exemplary system in may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

In various embodiments all ora portion of exemplary system in may facilitate multi tenancy within a cloud based computing environment. In other words the software modules described herein may configure a computing system e.g. a server to facilitate multi tenancy for one or more of the functions described herein. For example one or more of the software modules described herein may program a server to enable two or more clients e.g. customers to share an application that is running on the server. A server programmed in this manner may share an application operating system processing system and or storage system among multiple customers i.e. tenants . One or more of the modules described herein may also partition data and or configuration information of a multi tenant application for each customer such that one customer cannot access data and or configuration information of another customer.

According to various embodiments all or a portion of exemplary system in may be implemented within a virtual environment. For example the modules and or data described herein may reside and or execute within a virtual machine. As used herein the phrase virtual machine generally refers to any operating system environment that is abstracted from computing hardware by a virtual machine manager e.g. a hypervisor . Additionally or alternatively the modules and or data described herein may reside and or execute within a virtualization layer. As used herein the phrase virtualization layer generally refers to any data layer and or application layer that overlays and or is abstracted from an operating system environment. A virtualization layer may be managed by a software virtualization solution e.g. a file system filter that presents the virtualization layer as though it were part of an underlying base operating system. For example a software virtualization solution may redirect calls that are initially directed to locations within a base file system and or registry to locations within a virtualization layer.

In some examples all or a portion of exemplary system in may represent portions of a mobile computing environment. Mobile computing environments may be implemented by a wide range of mobile computing devices including mobile phones tablet computers e book readers personal digital assistants wearable computing devices e.g. computing devices with a head mounted display smartwatches etc. and the like. In some examples mobile computing environments may have one or more distinct features including for example reliance on battery power presenting only one foreground application at any given time remote management features touchscreen features location and movement data e.g. provided by Global Positioning Systems gyroscopes accelerometers etc. restricted platforms that restrict modifications to system level configurations and or that limit the ability of third party software to inspect the behavior of other applications controls to restrict the installation of applications e.g. to only originate from approved application stores etc. Various functions described herein may be provided for a mobile computing environment and or may interact with a mobile computing environment.

In addition all or a portion of exemplary system in may represent portions of interact with consume data produced by and or produce data consumed by one or more systems for information management. As used herein the phrase information management may refer to the protection organization and or storage of data. Examples of systems for information management may include without limitation storage systems backup systems archival systems replication systems high availability systems data search systems virtualization systems and the like.

In some embodiments all or a portion of exemplary system in may represent portions of produce data protected by and or communicate with one or more systems for information security. As used herein the phrase information security may refer to the control of access to protected data. Examples of systems for information security may include without limitation systems providing managed security services data loss prevention systems identity authentication systems access control systems encryption systems policy compliance systems intrusion detection and prevention systems electronic discovery systems and the like.

According to some examples all or a portion of exemplary system in may represent portions of communicate with and or receive protection from one or more systems for endpoint security. As used herein the phrase endpoint security may refer to the protection of endpoint systems from unauthorized and or illegitimate use access and or control. Examples of systems for endpoint protection may include without limitation anti malware systems user authentication systems encryption systems privacy systems spam filtering services and the like.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules recited herein may transform a launch icon by identifying and transforming launch activity data. Additionally or alternatively one or more of the modules recited herein may transform a processor volatile memory non volatile memory and or any other portion of a physical computing device from one form to another by executing on the computing device storing data on the computing device and or otherwise interacting with the computing device.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms connected to and coupled to and their derivatives as used in the specification and claims are to be construed as permitting both direct and indirect i.e. via other elements or components connection. In addition the terms a or an as used in the specification and claims are to be construed as meaning at least one of. Finally for ease of use the terms including and having and their derivatives as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

