---

title: Data processing apparatus and data processing method
abstract: A data processing apparatus includes a first program that causes the data processing apparatus to perform a display of a first screen relating to a process using hardware specific to the data processing apparatus, and to perform the process in accordance with setting data input via the first screen, includes an interface that receives setting data relating to the process from a second program, and causes the data processing apparatus to perform the process in accordance with the setting data received from the second program.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535662&OS=09535662&RS=09535662
owner: Ricoh Company, Ltd.
number: 09535662
owner_city: Tokyo
owner_country: JP
publication_date: 20130909
---
A data processing apparatus such as a so called multifunction device or a uniting device including an open Application Program Interface API and an application platform that provides an execution environment for an application developed by using the API is known see Patent Document 1 for example . Hereinafter the application platform is referred to as a Software Development Kit platform or SDK platform and the application is referred to as an SDK application .

For the SDK platform an API for enabling the SDK application to provide a function similar to that provided by standard application is open to the public. Thus it is possible to use a function via an operation screen different from the standard application but similar to that provided by the standard application. In other words while basically using the standard application an operation screen different from the standard application can be used.

In the conventional SDK platform there is a merit in that new SDK application implemented or developed by a third vender a manufacturer a software house or the like using the API of the SDK platform can be additionally mounted on a data processing apparatus even after the data processing apparatus is shipped. However in order to open the API that provides functions that are the same as those provided by the standard application it is necessary to implement functions similar to those of the standard application to the SDK platform. Thus implementations are overlapped between the SDK platform and the standard application and it is inefficient in the development or maintenance of the entirety of the data processing apparatus.

This problem is not limited to an embodiment of the SDK and is a common problem for an embodiment in which processes are performed by a device using application developed by open API.

The present invention is made in light of the above problems and provides a data processing apparatus and a data processing method capable of improving efficiency in developing the entirety of software of the data processing apparatus.

According to an embodiment there is provided a data processing apparatus including a first program that causes the data processing apparatus to perform a display of a first screen relating to a process using hardware specific to the data processing apparatus and to perform the process in accordance with setting data input via the first screen includes an interface that receives setting data relating to the process from a second program and causes the data processing apparatus to perform the process in accordance with the setting data received from the second program.

According to another embodiment there is provided a data processing method performed by a data processing apparatus including a first program that causes the data processing apparatus to perform a display of a first screen relating to a process using hardware specific to the data processing apparatus and to perform the process in accordance with setting data input via the first screen and includes an interface that receives setting data relating to the process from a second program the method including causing by the first program the data processing apparatus to perform the process in accordance with the setting data received from the second program.

Note also that arbitrary combinations of the above described elements and any changes of expressions in the present invention made among methods devices systems recording media computer programs and so forth are valid as embodiments of the present invention.

The invention will be described herein with reference to illustrative embodiments. Those skilled in the art will recognize that many alternative embodiments can be accomplished using the teachings of the present invention and that the invention is not limited to the embodiments illustrated for explanatory purposes.

It is to be noted that in the explanation of the drawings the same components are given the same reference numerals and explanations are not repeated.

The ROM stores various programs data that are used by the programs and the like. The RAM provides a memory area to load a program a work area for the loaded program and the like. The CPU actualizes various functions by executing the program loaded on the RAM . The HDD stores programs data used by the programs and the like. The NVRAM stores various setting data and the like.

The scanner is hardware image reading unit to read image data from a document. The printer is hardware printing unit to print print data on a printing paper or the like. The modem is hardware to connect to a telephone line and is used to perform sending and receiving of image data by a facsimile communication.

The operation panel is hardware including an input unit such as a button or the like to accept an input from a user a display unit such as a liquid crystal panel or the like. The liquid crystal panel may include a touch panel function. At this time the liquid crystal panel functions as the input unit as well. The network interface is hardware to connect to a wired or wireless network such as LAN or the like.

The SD card slot is used to read a program stored in an SD card . For the image forming apparatus the program stored in the SD card may be loaded on the RAM to be executed in addition to the program stored in the ROM . Here the SD card slot may be substituted by hardware to read a program or the like stored in another recording medium other than the SD card such as for example a CD ROM a Universal Serial Bus USB memory or the like.

The standard application is a group of application programs that are previously implemented on the image forming apparatus as a standard when being shipped. In scan application print application copy application and facsimile application are exemplified as the standard application . The scan application performs a scan job using the scanner or the like. The print application performs a print job using the printer or the like. The copy application performs a copy job using the scanner the printer or the like. The facsimile application performs a sending job or a receiving job of facsimile using the modem or the like. Here the scanner the printer the modem and the like are an example of the hardware specific to the image forming apparatus .

The control service is a group of software modules that provide functions to control various hardware resources or the like to upper application or the like. The control service includes for example a function relating to a network communication a control function of the scanner a control function of the printer management functions of the memories the RAM the ROM the NVRAM or the like or the like.

The SDK application is an application program referred to as a plug in as well. that is additionally installed to expand capability of the image forming apparatus after the image forming apparatus is shipped. In the SDK copy application is exemplified as an example of the SDK application . The SDK copy application is one of the SDK application that is generated for using the copy function via an operation screen different from that provided by the copy application . This means that the SDK copy application displays an operation screen that is different from that displayed by the copy application and causes the image forming apparatus to perform a copy job in accordance with the job parameter input via the operation screen. The job parameter is a parameter that composes setting data for jobs such as the copy job or the like.

The SDK platform includes an Application Program Interface API for developing the SDK application and provides an execution environment for the SDK application . The API may be in a form of a function an object oriented class a method of the class or the like. An API provided by the SDK platform is referred to as an SDKAPI . For example the SDK platform provides an SDKAPI relating to the scan function an SDKAPI relating to the print function an SDKAPI relating to the copy function or the like to the SDK application . The SDKAPIs are open to the public and the SDK application may be developed by a third vender or the like. The SDK platform may include a Java registered trademark Virtual Machine VM . At this time the SDK application may be implemented by a Java registered trademark language.

The OS is a so called Operating System OS . Each software on the image forming apparatus is operated as a process or a thread on the OS .

The copy application an example of a first program includes copy API Application Programming Interface an example of an interface of the first program . The copy API is an API based on HyperText Transfer Protocol HTTP hereinafter simply referred to as Web API that makes the functions of the copy application usable by other programs. By composing the copy API as the Web API limitations relating to programming language development language for other programs that use the copy API can be suppressed. For example it is possible to call the copy API easily by a program implemented by Java registered trademark language even when the copy application is implemented by C language. Further it is possible to call the copy API via a network.

When the SDK copy application an example of the second program calls the SDKAPI relating to the copy function the SDK platform calls the copy API corresponding to the SDKAPI via HTTP. It means that the SDKAPI corresponding to the copy API in the SDK platform is equivalent to an API that wraps the SDKAPI. Thus implementation of the SDKAPI relating to the copy function is substantially common with implementation of the copy application .

Another embodiment in which the SDK copy application directly calls the copy API may be adopted. However the status of the SDK copy application can be easily grasped by the SDK platform when the SDK copy application calls the copy API via the SDKAPI.

The copy API may not be necessarily the Web API. For example the copy API may be an API that depends on a specific programming language when such a dependency on the programming language is permitted.

Further for other standard application such as the scan application the print application the facsimile application or the like similar to the copy application an API relating to a function specific to the application may be open to the public.

An operation of the image forming apparatus is explained in the following. is a sequence diagram illustrating an example of the operation of the image forming apparatus relating to the copy job. Here an example in which the SDK copy application is selected as an application to be operated or used is explained. In data are transmitted via the SDKAPI between the SDK copy application and the SDK platform . Data are transmitted via the copy API between the SDK platform and the copy application as explained above with reference to .

In step S when an instruction to activate the SDK copy application is selected via a list screen of the SDK application displayed on the operation panel the SDK copy application is activated as a thread for example S . The SDK copy application causes the operation panel to display an operation screen of the SDK copy application hereinafter referred to as an SDK copy operation screen in response to the activation.

Subsequently the SDK copy application requests the SDK platform to obtain job setting ID S . Then the SDK platform requests the copy application to obtain the job setting ID S . Here the job setting ID is identification data to uniquely manage a job parameter set by each of the SDK applications in the copy application . For example when there is SDK application hereinafter referred to as SDK copy application B other than the SDK copy application as SDK application for performing the copy job the job setting ID are used by the copy application to differentiate the job parameter received by the SDK copy application and the job parameter received by the SDK copy application B as the identification data. However if it is unnecessary to differentiate the job parameters between the SDK copy application and the SDK copy application B the job setting ID is also unnecessary.

The copy application generates the job setting ID and sends back the generated job setting ID to the SDK platform S . The SDK platform sends back the job setting ID to the SDK copy application S .

Subsequently one of job parameters relating to the copy job is input by a user via the SDK copy operation screen S . This means that processes of steps S to S are performed every time setting to one of the job parameters is input.

The job parameter relating to the copy job is for example the number of copies gathering two in one four in one or the like color setting or the like. Basically items that are capable of being set by the SDK copy operation screen are equal to items that are expected for the copy application to set or capable of being set for the copy application . However an item that is not expected for the copy application to set or the like may be included. At this time a process relating to such an item may be completed without using the copy application . For example it is assumed that the SDK copy application has a function in which scanned image data is sent to a predetermined destination in the middle of the copy job and the destination is capable of being set as the item in the SDK copy operation screen. At this time the scanned image data may be sent to the destination by a request to send the scanned image data sent from the SDK copy application to the control service without passing through the SDK platform .

The SDK copy application inputs a setting request of the job parameter including a parameter name of the set job parameter the value of the parameter the job setting ID or the like in accordance with the setting of the job parameter by the user in the SDK platform S . The SDK platform transmits the setting request to the copy application S .

The copy application updates a setting status of the setting of a group of job parameters stored in the RAM in correspondence with the job setting ID included in the setting request. Specifically the value of the job parameter corresponding to the parameter name included in the setting request is updated by the value included in the setting request. Thus the copy application manages the current setting status of the job parameter. Here the copy application grasps relationships between the job parameters such as an essential relationship an exclusive relationship or the like. Thus the copy application is capable of updating a value of another job parameter in accordance with a value of a certain job parameter if necessary. As an example of the essential relationship a relationship between staple and sort can be exemplified because when staple is selected it is essential to select sort at the same time. As an example of the exclusive relationship a relationship between two in one two pages are gathered in one page and four in one four pages are gathered in one page can be exemplified because these cannot be selected at the same time.

Subsequently the copy application sends back parameter status data to the SDK platform S . Then the SDK platform sends back the parameter status data to the SDK copy application S .

The parameter status data includes a setting value for each of the job parameters. The parameter status data sent back to the SDK platform may be a difference with respect to the parameter status data that is sent back to the SDK platform in a previous process of step S. For example when setting of staple ON for staple is requested in step S parameter status data indicating that staple and sort are set is sent back to the SDK platform in step S.

Alternatively the parameter status data may include data for all of the job parameters relating to the copy job. Further alternatively a copy API in which only the difference of the parameter status data is sent back and a copy API in which all of the parameter status data are sent back are prepared and either one may be selected by a side that calls the copy API

The SDK copy application updates a display status of the SDK copy operation screen based on the sent back parameter status data.

Further in this embodiment timing when a screen displayed by the copy application is automatically transited from the SDK copy operation screen displayed by the SDK copy application is set. This timing is referred to as a screen transition setting .

For the screen transition setting for example timing when the copy job is started timing when the copy job is terminated due to a generation of an error or the like not to transit or the like may be set. In this embodiment an example in which the screen transition setting is set when a start key start button of the operation panel is pushed is explained. Alternatively the screen transition setting may be previously set before the start key of the operation panel is pushed.

When setting of the job parameter is completed and the start key of the operation panel is pushed S the SDK copy application inputs a setting request of the screen transition setting in the SDK platform S . Here it is assumed that the timing when the copy job is started is set as the screen transition setting.

Subsequently the SDK platform transmits the setting request of the screen transition setting to the copy application S . The copy application stores the screen transition setting in the RAM for example.

Subsequently the SDK copy application inputs a starting request of the copy job in the SDK platform by designating the application ID of its own application ID of the SDK copy application S . The SDK platform transmits the starting request to the copy application S . The application ID is identification data of the application program in the image forming apparatus . Unique application ID is allocated to each of the SDK application the SDK platform and the standard applications respectively.

The copy application stores the application ID designated in the starting request of the copy job as the application ID of the SDK application that has requested the starting request in the RAM for example.

Then as described above as it is assumed that the timing when the copy job is started is set as the screen transition setting the copy application requests transition of an owner of the operation panel to the control service by designating the application ID of its own in accordance with the starting request of the copy job S . The owner of the operation panel hereinafter simply referred to as an owner means a subject that occupies display permission of data on the operation panel . That is according to the embodiment only a single application program is capable of displaying data on the operation panel at the same time. The owner has been the SDK platform . Here for cases when the timing when the copy job is started is not set as the screen transition setting for example the timing when the copy job is terminated due to a generation of an error or the like not to transit or the like is set as the screen transition setting the copy application does not request a transition of an owner of the operation panel to the control service in step S.

Subsequently the control service requests the SDK platform to release the owner S . Here the control service cannot differentiate each SDK application so that the control service sees the SDK platform as a single application program similar to each of the standard application . Thus for the control service the SDK platform becomes the owner when either one of the SDK application displays data on the operation panel . The SDK platform manages which of the SDK application displays data on the operation panel .

Subsequently when it is possible to release the owner the SDK platform sends back a response indicating that the owner is to be released to the control service S . Subsequently the control service requests the copy application that corresponds to the application ID designated in the request of transition of the owner in step S to transit to be the owner S . The copy application sends back a response indicating that the owner is to be transited to the control service S .

Subsequently the control service reports a fact that the owner is transited by designating the application ID of the copy application that is the new owner to the copy application and the SDK platform respectively S and S .

Here the owner of the operation panel becomes a designation to report a pushing event or the like of various hard keys buttons of the operation panel in addition to have the display permission of data on the operation panel . Thus by transitioning the owner to the copy application the SDK copy application and the SDK platform can transfer the control in accordance with the pushing operation of the hard key of the operation panel while performing the copy job to the copy application . That is a necessity to implement for such control is lowered for the SDK platform .

The copy application requests the control service to display a screen hereinafter referred to as a job status reporting screen for reporting a copy job status in accordance with a fact that the copy application becomes the owner S . The control service in response to the request transits a screen to be displayed from the SDK copy operation screen to the job status reporting screen.

In this embodiment the operation screen and the job status reporting screen of the copy application are substantially the same except that messages are different. That is the operation screen of the copy application is used also as the job status reporting screen . However alternatively these screens may be completely differently implemented for example.

Referring back to subsequently the copy application requests starting of the copy job to the control service S . The control service controls the scanner the printer or the like to have the image forming apparatus perform processes relating to the copy job in accordance with the starting request of the copy job.

While the copy job is being performed the control service sequentially reports a change of the status of the copy job in accordance with a change of the progress status of the copy job generation of an error or the like to the copy application S S . The copy application controls the image forming apparatus to perform a process corresponding to the change of the status in accordance with the report of the change of the status of the copy job. For example a displayed content of the job status reporting screen is updated. Specifically a displayed content in the area such as the number of read documents the number of copied documents or the like is updated. Further when generation of an error such as a paper jam or the like is reported the copy application controls the image forming apparatus to display a screen for reporting the error.

The copy application transmits the change of the status of the copy job to the SDK platform S and S . Then the SDK platform transmits the status of the copy job to the SDK copy application S and S . As the change of the status of the copy job is transmitted to the SDK platform and the SDK copy application a process specific to the SDK copy application can be performed by the image forming apparatus in accordance with the change of the status of the copy job.

Meanwhile when intermission of the copy job is input such as a stop key stop button is pushed by the user or the like an event that the stop key is pushed is reported from the control service to the copy application that is the current owner. At this time the copy application performs a control to intermit the copy job.

As such control of the copy job is transferred to the copy application so that process control in accordance with a change in status while performing the copy job can be performed by the implementation of the copy job. That is a necessity of such implementation for the SDK platform is lowered.

When completion of the copy job is reported from the control service S the copy application requests the control service to transfer the owner of the operation panel by designating the application ID of the SDK platform S . The control service requests the copy application to release the owner S . When it is possible to release the owner the copy application sends back a response indicating that the owner is to be released to the control service S .

Subsequently the control service requests the SDK platform that corresponds to the application ID designated in the request of transition of the owner in step S to transit to be the owner S . The SDK platform sends back a response indicating that the owner is to be transited to the control service S .

Subsequently the control service reports a fact that the owner is transited by designating the application ID of the SDK platform that is the new owner to the copy application and the SDK platform respectively S and S . Here the SDK platform requests the SDK copy application which is selected as application to be operated or used among the SDK application to display the operation screen. The SDK copy application displays the SDK copy operation screen as illustrated in on the operation panel via the SDK platform and the control service in response to the request. That is the screen is automatically changed from the job status reporting screen to the SDK copy operation screen in accordance with the completion end of the copy job. Thus from user point of view the screen goes back to the initial state where the SDK copy application is selected to be used.

Subsequently the copy application reports the end of the copy job to the SDK platform S . Then the SDK platform reports the end of the copy job to the SDK copy application S .

In the above embodiment the copy job is explained. Alternatively the same control may be performed for jobs of the other standard application such as the scan job the print job the facsimile sending and receiving job or the like. At this time each of the standard application may include an API equivalent to the copy API of the copy application .

As described above according to the embodiment control of a job for which a request to perform is made to the SDK application can be transferred to the standard application . Thus a necessity to implement complicated processes relating to control or management of a job for both the standard application and the SDK platform can be lowered. In other words such an implementation can be only made to the standard application . As a result efficiency in developing the entirety of the software of the image forming apparatus can be improved.

Further as the implementation of the SDK platform relating to a function of the standard application is common with the implementation of the standard application occurrence of time lag between the standard application and the SDK application can be prevented.

That is for example when new hardware is added to the image forming apparatus the standard application is prepared to provide a function using the new hardware after a process corresponding to the new hardware is completed in the control service . On the other hand it is necessary to implement an API for using the new hardware in the SDK platform for the SDK application to be prepared to provide the function using the new hardware. Thus there has been a case in which time lag occurs between when the standard application capable of using the function of the new hardware is released and when SDK application capable of using the function of the new hardware is released.

However according to the embodiment when the standard application is prepared to provide the function using the new hardware the SDK application can correspond to the new hardware because the SDK application can transfer the control of the job to the standard application .

Although the image forming apparatus is exemplified as an example of the data processing apparatus another data processing apparatus other than the image forming apparatus may be used instead provided that the data processing apparatus is operable by a control of the program. For example the data processing apparatus may be a computer such as a Personal Computer PC or the like a projector a digital camera a mobile phone a smartphone a tablet terminal a video conference system or the like.

The individual constituents of the image forming apparatus may be embodied by arbitrary combinations of hardware and software typified by a CPU of an arbitrary computer a memory a program loaded in the memory so as to embody the constituents illustrated in the drawings a storage unit for storing the program such as a hard disk and an interface for network connection. It may be understood by those skilled in the art that methods and devices for the embodiment allow various modifications.

Although a preferred embodiment of the image forming apparatus has been specifically illustrated and described it is to be understood that minor modifications may be made therein without departing from the spirit and scope of the invention as defined by the claims.

The present invention is not limited to the specifically disclosed embodiments and numerous variations and modifications and modifications may be made without departing from the spirit and scope of the present invention.

The present application is based on and claims the benefit of priority of Japanese Priority Application No. 2012 204253 filed on Sep. 18 2012 the entire contents of which are hereby incorporated by reference.

