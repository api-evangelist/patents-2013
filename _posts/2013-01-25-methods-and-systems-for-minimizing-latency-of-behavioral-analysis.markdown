---

title: Methods and systems for minimizing latency of behavioral analysis
abstract: The various aspects include methods, systems, and devices configured to make use of caching techniques and behavior signature caches to improve processor performance and/or reduce the amount of power consumed by the computing device by reducing analyzer latency. The signature caching system may be configured to adapt to rapid and frequent changes in behavioral specifications and models and provide a multi-fold improvement in the scalability of behavioral analysis operations performed on the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09349001&OS=09349001&RS=09349001
owner: QUALCOMM Incorporated
number: 09349001
owner_city: San Diego
owner_country: US
publication_date: 20130125
---
This application claims the benefit of priority to U.S. Provisional Patent Application No. 61 646 590 entitled System Apparatus and Method for Adaptive Observation of Mobile Device Behavior filed May 14 2012 and U.S. Provisional Application No. 61 683 274 entitled System Apparatus and Method for Adaptive Observation of Mobile Device Behavior filed Aug. 15 2012 the entire contents of both which are hereby incorporated by reference for all purposes.

Cellular and wireless communication technologies have seen explosive growth over the past several years. This growth has been fueled by better communications hardware larger networks and more reliable protocols. Wireless service providers are now able to offer their customers an ever expanding array of features and services and provide users with unprecedented levels of access to information resources and communications. To keep pace with these service enhancements mobile electronic devices e.g. cellular phones tablets laptops etc. have become more powerful and complex than ever. This complexity has created new opportunities for malicious software software conflicts hardware faults and other similar errors or phenomena to negatively impact a mobile device s long term and continued performance and power utilization levels. Accordingly correcting the conditions and or mobile device behaviors that may negatively impact the mobile device s long term and continued performance and power utilization levels is beneficial to consumers.

The various embodiments include methods and mobile devices configured for improving the performance of mobile devices based on whether observed mobile device behaviors match behavior signatures stored in memory. An embodiment method includes observing mobile device behaviors and generating a corrective action behavior signature based on observed mobile device behaviors determining whether the generated behavior signature matches a behavior signature stored in a cache memory of the mobile device and taking a corrective action in response to determining that the generated behavior signature matches a behavior signature stored in the cache memory of the mobile device. An embodiment method may further include receiving a behavior signature from a second mobile device and storing the received behavior signature in the cache memory. An embodiment method may further include receiving a behavior signature from a network server and storing the received behavior signature in the cache memory. An embodiment method may further include determining whether the generated behavior signature matches a behavior signature stored in a server memory of a service accessible via a network connection when it is determined that the generated behavior signature does not match a behavior signature stored in the cache memory and taking a corrective action in response to determining that the generated behavior signature matches a behavior signature stored in a server memory of a service accessible via a network connection.

In an embodiment the cache memory may be populated by observing mobile device behaviors over a period of time to recognize mobile device behaviors that are inconsistent with normal operation patterns determining whether a behavior signature corresponding to the observed behaviors is stored in the cache memory identifying a limited set of behaviors associated with inconsistent operations when it is determined that a behavior signature corresponding to the observed behaviors is not stored in the cache memory receiving behavior inputs from one or more of a high level application a system kernel and a driver regarding the limited set of behaviors receiving a context input regarding the limited set of behaviors of the mobile device performing temporal and spatial correlations of the received behavior inputs and the received context input generating a behavior vector based on a result of the spatial and temporal correlations generating the behavior signature based on the behavior vector and storing the generated behavior signature in the cache memory.

In an embodiment a mobile device may include a transceiver configured to establish a network connect a cache memory and a processor coupled to the transceiver and cache memory and configured with processor executable instructions to perform operations including observing mobile device behaviors and generating a behavior signature based on observed mobile device behaviors determining whether the generated behavior signature matches a behavior signature stored in a cache memory of the mobile device and taking a corrective action in response to determining that the generated behavior signature matches a behavior signature stored in the cache memory of the mobile device. In an embodiment mobile device the processor may be configured to perform operations further including receiving a behavior signature from a second mobile device and storing the received behavior signature in the cache memory. In an embodiment mobile device the processor may be configured to perform operations further including embodiment method may further include receiving a behavior signature from a network server and storing the received behavior signature in the cache memory. In an embodiment mobile device the processor may be configured to perform operations further including embodiment method may further include determining whether the generated behavior signature matches a behavior signature stored in a server memory of a service accessible via a network connection when it is determined that the generated behavior signature does not match a behavior signature stored in the cache memory and taking a corrective action in response to determining that the generated behavior signature matches a behavior signature stored in a server memory of a service accessible via a network connection.

In an embodiment the mobile device processor may be configured to perform operations to populate the cache memory including observing mobile device behaviors over a period of time to recognize mobile device behaviors that are inconsistent with normal operation patterns determining whether a behavior signature corresponding to the observed behaviors is stored in the cache memory identifying a limited set of behaviors associated with inconsistent operations when it is determined that a behavior signature corresponding to the observed behaviors is not stored in the cache memory receiving behavior inputs from one or more of a high level application a system kernel and a driver regarding the limited set of behaviors receiving a context input regarding the limited set of behaviors of the mobile device performing temporal and spatial correlations of the received behavior inputs and the received context input generating a behavior vector based on a result of the spatial and temporal correlations generating the behavior signature based on the behavior vector and storing the generated behavior signature in the cache memory.

An embodiment mobile device may include means for performing the functions of the embodiment methods described above. A further embodiment may include a non transitory processor readable storage medium on which are stored processor executable instructions configured to cause a mobile device processor to perform the functions of the embodiment methods described above.

The various aspects will be described in detail with reference to the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes and are not intended to limit the scope of the invention or the claims.

The word exemplary is used herein to mean serving as an example instance or illustration. Any implementation described herein as exemplary is not necessarily to be construed as preferred or advantageous over other implementations.

The terms mobile computing device and mobile device are used interchangeably herein to refer to any one or all of cellular telephones smartphones personal or mobile multi media players personal data assistants PDA s laptop computers tablet computers smartbooks ultrabooks palm top computers wireless electronic mail receivers multimedia Internet enabled cellular telephones wireless gaming controllers and similar personal electronic devices which include a memory a programmable processor for which performance is important and operate under battery power such that power conservation methods are of benefit. While the various aspects are particularly useful for mobile computing devices such as smartphones which have limited resources and run on battery power the aspects are generally useful in any electronic device that includes a processor and executes application programs.

The terms performance degrading and performance degradation are used herein to refer to a wide variety of undesirable mobile device operations and characteristics such as longer processing times lower battery life loss of private data malicious economic activity e.g. sending unauthorized premium SMS message operations relating to commandeering the mobile device or utilizing the phone for spying or botnet activities etc.

The various aspects include mobile devices systems and methods for efficiently identifying analyzing classifying modeling preventing and or correcting the conditions and or mobile device behaviors that often degrade a mobile device s performance and or power utilization levels over time.

The various aspects include methods systems and devices configured to make use of caching techniques and behavior signature caches to improve processor performance and or reduce the amount of power consumed by the computing device by reducing analyzer latency which is the amount of time required for the mobile device to process and analyze behavior information to determine whether a particular mobile device behavior software application or process is benign suspicious malicious or performance degrading. The various aspects may include a signature caching system configured to adapt to rapid and frequent changes in behavioral specifications and models such as those produced in or used by a machine learning classifier or analyzer module of the mobile device. This signature caching system may also provide a multi fold improvement in the scalability of behavioral analysis operations performed on the mobile device.

Generally the performance and power efficiency of a mobile device degrade over time. Recently anti virus companies e.g. McAfee Symantec etc. have begun marketing mobile anti virus firewall and encryption products that aim to slow this degradation. However many of these solutions rely on the periodic execution of a computationally intensive scanning engine on the mobile device which may consume many of the mobile device s processing and battery resources slow or render the mobile device useless for extended periods of time and or otherwise degrade the user experience. In addition these solutions are typically limited to detecting known viruses and malware and do not address the multiple complex factors and or the interactions that often combine to contribute to a mobile device s degradation over time such as when the performance degradation is not caused by viruses or malware. For these and other reasons existing anti virus firewall and encryption products do not provide adequate solutions for identifying the numerous factors that may contribute to a mobile device s degradation over time for backing up the mobile device for preventing mobile device degradation or for efficiently restoring an aging mobile device to its original condition.

Various solutions exist for modeling the behavior of processes or application programs executing on a computing device and such behavior models may be used to differentiate between malicious and benign process programs on computing devices. However these existing modeling solutions are not suitable for use on mobile devices because such solutions generally require the execution of computationally intensive processes that consume a significant amount of processing memory and energy resources all of which may be scarce on mobile devices. In addition these solutions are generally limited to evaluating the behavior of individual application programs or processes and do not provide an accurate or complete model of the performance degrading mobile device behaviors. For these and other reasons existing modeling solutions are not adequate for identifying the numerous factors that may contribute to a mobile device s degradation over time for preventing mobile device degradation or for efficiently restoring an aging mobile device to its original condition.

Mobile devices are resource constrained systems that have relatively limited processing memory and energy resources. Modern mobile devices are also complex systems and there are a large variety of factors that may contribute to the degradation in performance and power utilization levels of a mobile device over time including poorly designed software applications malware viruses fragmented memory background processes etc. Due to the number variety and complexity of these factors it is often not feasible to evaluate all the factors that may contribute to the degradation in performance and or power utilization levels of the complex yet resource constrained systems of modern mobile devices.

The various aspects include mobile devices systems and methods for efficiently identifying analyzing classifying modeling preventing and or correcting the conditions and or mobile device behaviors that often degrade a mobile device s performance and or power utilization levels over time from a limited coarse set of behavior observations. By storing signatures and information on such conditions and corrective actions in a cache memory and or a central database such as the cloud and enabling mobile devices to quickly access and use this information the various aspects enable mobile devices to react to performance limiting and undesirable operating conditions much faster and with lower power consumption than would otherwise be possible if the mobile device had to analyze all behaviors for their potential effect on performance. In other words caching the signature and information that can be used to recognize benign or not benign behaviors based on more thorough analyses mobile devices may be able to promptly recognize non benign or suspicious behaviors operating conditions.

In an aspect an observer process daemon module or sub system herein collectively referred to as a module of the mobile device may instrument or coordinate various application programming interfaces APIs at various levels of the mobile device system and collect behavior information from the instrumented APIs. The observer module may constantly monitor the mobile device via a low power process background processes etc. to identify the normal operation patterns of the mobile device and or to identify behaviors that are not consistent with previously computed normal operation patterns. An analyzer module of the mobile device may analyze and or classify the collected behavior information generate behavior vectors generate spatial and or temporal correlations based on the behavior vector and information collected from various other mobile device sub systems and determine whether a particular mobile device behavior software application or process is benign suspicious or malicious performance degrading. The generated behavior vectors and spatial and temporal correlations may also be used by various modules e.g. by an actuation module etc. of the mobile device to recognize identify and or respond to behaviors that are determined to have a high probability of negatively impacting the mobile device s performance or battery consumption levels.

In an aspect the observer module may be configured to communicate e.g. via a memory write operation function call API etc. the collected behavior information to a behavior vector cache module e.g. via a memory write operation etc. . Such a behavior vector cache module may generate a behavior signature from the collected behavior information and determine whether the generated behavior signature matches or corresponds to a behavior vector stored in a behavior vector cache memory. The generated behavior signature may succinctly describe observed behavior of the mobile device software application or process in a value or vector data structure e.g. in the form of a string of numbers etc. . In an aspect the behavior signature may function as an identifier and or a certification that enables the mobile device system to quickly recognize identify verify confirm and or trust that an observed behavior has previously been analyzed and classified without requiring the mobile device to perform any additional cumbersome or power intensive analysis or verification operations. Since the behavior signature may be compared to certain operating state parameters by the mobile device processor to recognize that a performance reducing situation exists the use of cached behavior signatures may reduce the analyzer latency which is the amount of time that the analyzer module would require to receive behavior information collected by the observer module process the received behavior information and generate output suitable for use in determining whether observed behaviors are benign suspicious malicious or performance degrading.

Generally a mobile device will become less responsive and or more susceptible to performance degradation as its analyzer latency increases and thus it is beneficial to consumers to reduce the analyzer latency of a mobile device. For example a mobile device may be configured to either allow restrict or block the operations of one or more mobile device sub systems applications or processes while the mobile device performs behavior analysis operations to determine whether a particular mobile device behavior software application or process is benign suspicious malicious or performance degrading. If the mobile device allows an application to continue operating while the mobile device performs the behavior analysis operations a high large analyzer latency may provide sufficient time for a malicious application to complete its malicious operations before it is blocked. On the other hand if the mobile device restricts or blocks the application a high large analyzer latency may impede the progress of a benign application and or reduce the responsiveness of the mobile device and thus degrade the user experience . Therefore regardless of whether mobile device is configured to allow restrict or block the operations of the applications or process reducing the analyzer latency will be beneficial to mobile device users.

Various aspects make use of caching techniques and behavior signature caches to reduce analyzer latency. In an aspect the mobile device system may be configured to reduce analyzer latency by circumventing the analyzer module and directly invoking the operations of the actuation module which may respond immediately to known detected behaviors when a signature generated for an observed behavior application or process matches or corresponds to an entry in a cache. In an aspect the mobile device system may be configured so that the cache lookup or comparison is performed very fast and efficiently further reducing analyzer latency. In an aspect the behavior signature caching operations may be performed in a manner that is similar to DNS caching which locally caches the results of a query received from a network server. Thus in various aspects the behavior signature may be cached on the mobile device to the network server i.e. located on the cloud or both.

In an aspect the mobile device system may be configured to invoke the operations of the analyzer module when the mobile device determines that the behavior vector cache does not store an entry that matches or corresponds to the generated behavior signature. The analyzer module may pull or receive the collected behavior information generate behavior vectors generate spatial and or temporal correlations based on the behavior vector and information collected from various other mobile device sub systems generate output suitable for use in determining whether a particular mobile device behavior is benign suspicious malicious or performance degrading store the output in the behavior vector cache and or call or invoke the operations of the actuation module. The actuation module may then take corrective actions or respond to behaviors that are determined to have a high probability of negatively impacting the mobile device s performance or battery consumption levels.

In an aspect the mobile device system may be configured to store the generated behavior vector and or behavior signature in the behavior vector cache when the mobile device determines that the cache does not store an entry that corresponds to the behavior signature. Working off line or in parallel the analyzer module may pull the information from the behavior vector cache generate spatial and or temporal correlations based on information included in the behavior vector and store the results back in the cache. By working from the behavior vector cache the analyzer module can accomplish its processing while the mobile device continues generating behavior signatures and comparing them to cache entries. In this way the latency associated with processing the behavior vectors in the analyzer module is removed from the analyzer latency of the mobile device and the analyzer latency is reduced.

In an aspect the mobile device may be configured to communicate with a network server that includes an online behavior signature database. The network server may receive a large number of reports from many mobile devices and analyze consolidate or otherwise turn such crowd sourced information into useable information e.g. behavior models behavior vectors signatures etc. that can be used or accessed by all mobile devices. The network server may continuously reevaluate existing data behavior models vectors and signatures as new behavior analysis reports are received from mobile devices and or generate new or updated models vectors or signatures based on historical information e.g. collected from prior executions previous applications of behavior models etc. new information machine learning context modeling and detected changes in the available information mobile device states environmental conditions network conditions mobile device performance battery consumption levels etc.

The behavior signature caching operations may improve the scalability of the behavioral analysis without degrading the system performance or battery life. In the case of a cloud based analyzer caching e.g. via the network server the savings of behavior signature caching can be even more significant. Different mobile devices will learn different behaviors based on the apps they run as well as based on the classifier variations across devices. Sharing this signature caching information among many mobile devices will allow one device in the system to detect malicious behavior and provide a signature to all other devices in the system thereby enabling all other devices in the system to rapidly recognize malicious or malfunctioning apps and promptly take action to prevent or correct undesirable behavior with very little analysis latency i.e. just the latency of a table look up operation .

The various aspects may be implemented within a variety of communication systems such as the example communication system illustrated in . A typical cell telephone network includes a plurality of cell base stations coupled to a network operations center which operates to connect voice calls and data between mobile devices e.g. cell phones laptops tablets etc. and other network destinations such as via telephone land lines e.g. a POTS network not shown and the Internet . Communications between the mobile devices and the telephone network may be accomplished via two way wireless communication links such as 4G 3G CDMA TDMA LTE and or other cell telephone communication technologies. The telephone network may also include one or more servers coupled to or within the network operations center that provide a connection to the Internet .

The communication system may further include network servers connected to the telephone network and to the Internet . The connection between the network server and the telephone network may be through the Internet or through a private network as illustrated by the dashed arrows . The network server may also be implemented as a server within the network infrastructure of a cloud service provider network . Communications between the network server and the mobile devices may be achieved through the telephone network the internet private network not illustrated or any combination thereof.

The mobile device may be configured to generate behavior models vectors and or signatures and send the generated models vectors and signatures to the network server e.g. via the telephone network for analysis and or storage. Likewise the network server may be configured to send the stored models vectors and signatures to the mobile device which may receive and use the behavior models vectors and signatures to reduce its analyzer latency.

Each of the modules may be implemented in software hardware or any combination thereof. In various aspects the modules may be implemented within parts of the operating system e.g. within the kernel in the kernel space in the user space etc. within separate programs or applications in specialized hardware buffers or processors or any combination thereof. In an aspect one or more of the modules may be implemented as software instructions executing on one or more processors of the mobile device .

The behavior observer module may be configured to instrument or coordinate application programming interfaces APIs at various levels modules of the mobile device and monitor observe mobile device operations and events e.g. system events state changes etc. at the various levels modules via the instrumented APIs collect information pertaining to the observed operations events intelligently filter the collected information generate one or more observations based on the filtered information and store the generated observations in a memory e.g. in a log file cache memory etc. and or send e.g. via memory writes function calls etc. the generated observations to the behavior vector cache module or the behavior analyzer module .

In an aspect the behavior observer module may be configured to generate a behavior signature based on observed mobile device behaviors and store the signature in a behavior vector cache e.g. via the behavior vector cache module . In an aspect the behavior observer module may be configured to communicate e.g. via a memory write operation function call etc. the collected behavior information to the behavior vector cache module which may generate a behavior signature from the received behavior information and determine whether the generated behavior signature matches or corresponds to a behavior vector stored in a behavior vector cache memory. The generated behavior signature may succinctly describe observed behavior of the mobile device software application or process in a value or vector data structure e.g. in the form of a string of numbers etc. and or function as an identifier enables the mobile device to quickly determine whether an observed behavior is benign suspicious malicious or performance degrading.

The behavior observer module may monitor observe mobile device operations and events by collecting information pertaining to library application programming interface API calls in an application framework or run time libraries system call APIs file system and networking sub system operations device including sensor devices state changes and other similar events. The behavior observer module may also monitor file system activity which may include searching for filenames categories of file accesses personal info or normal data files creating or deleting files e.g. type exe zip etc. file read write seek operations changing file permissions etc.

The behavior observer module may also monitor data network activity which may include types of connections protocols port numbers server client that the device is connected to the number of connections volume or frequency of communications etc. The behavior observer module may monitor phone network activity which may include monitoring the type and number of calls or messages e.g. SMS etc. sent out received or intercepted e.g. the number of premium calls placed .

The behavior observer module may also monitor the system resource usage which may include monitoring the number of forks memory access operations number of files open etc. The behavior observer module may monitor the state of the mobile device which may include monitoring various factors such as whether the display is on or off whether the device is locked or unlocked the amount of battery remaining the state of the camera etc. The behavior observer module may also monitor inter process communications IPC by for example monitoring intents to crucial services browser contracts provider etc. the degree of inter process communications pop up windows etc.

The behavior observer module may also monitor driver statistics and or the status of one or more hardware components which may include cameras sensors electronic displays WiFi communication components data controllers memory controllers system controllers access ports timers peripheral devices wireless communication components external memory chips voltage regulators oscillators phase locked loops peripheral bridges and other similar components used to support the processors and clients running on the mobile computing device.

The behavior observer module may also monitor one or more hardware counters that denote the state or status of the mobile computing device and or mobile device sub systems. A hardware counter may include a special purpose register of the processors cores that is configured to store a count or state of hardware related activities or events occurring in the mobile computing device.

To reduce the number of factors monitored to a manageable level in an aspect the behavior observer module may perform coarse observations by monitoring observing an initial set of behaviors or factors that are a small subset of all factors that could contribute to the mobile device s degradation. In an aspect the behavior observer module may receive the initial set of behaviors and or factors from a network server and or a component in a cloud service provider network . In an aspect the initial set of behaviors factors may be specified in data behavior models received from the network server or cloud service provider network .

The behavior analyzer module may be configured to receive the observations from the behavior vector cache module or pull the observations from the behavior vector cache. The behavior analyzer module may also be configured to receive observations behavior signatures behavior vectors models and or additional information from a third party network server and or a component in a cloud service or network . The behavior analyzer module may compare the received information e.g. signatures with information stored in the behavior vector cache to identify subsystems processes and or applications that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device.

In various aspects the mobile device may be configured to receive behavior signatures from other mobile devices which may be included in or accessed through a local network WiFi direct a peer to peer connection an enterprise local area network a secure ad hoc network e.g. military deployment or sharing of a common higher layer structure e.g. enterprise connected over a virtual private network . In this manner the mobile devices may benefit from learned knowledge of other mobile devices in the same network.

In an aspect the mobile device may be configured to automatically locate and form a group with other mobile devices in the same vicinity. The mobile devices may be further configured to automatically select or elect a group owner GO which may be responsible for generating maintaining and communicating an advertizing schedule that identifies when each mobile device in the group is to broadcast or transmit behavior signatures or vectors stored in their respective behavior signature caches. Each mobile device may broadcast the contents of its behavior signature cache at the scheduled time and the remaining mobile devices in the group may receive and update their behavior signature cache with the received behavior vectors and signatures. In this manner all the mobile devices in the group may benefit from learned knowledge of each of the other mobile devices .

In various aspects the mobile device may be configured to receive behavior signatures from the network server or cloud service provider network which may be included in or accessed through the Internet a local network e.g. WiFi direct P2P etc. an enterprise local area network a secure ad hoc network e.g. military deployment or sharing of a common higher layer structure e.g. enterprise connected over VPN . The network server may receive a large number of behavior reports vectors or signatures from many mobile devices and analyze consolidate or otherwise turn such crowd sourced information into useable information e.g. behavior models behavior vectors signatures etc. that can be used or accessed by all mobile devices. The network server may send the generated models vectors and signatures to the mobile device which may receive and implement apply or use the information to identify benign malicious or performance degrading mobile device behaviors without consuming an excessive amount of processing memory or energy resources of the mobile device . The mobile device may then correct or prevent the identified malicious or performance degrading mobile device behaviors from degrading the performance and power utilization levels of the mobile device.

In an aspect the behavior analyzer module may include intelligence for utilizing a limited set of information i.e. coarse observations to identify behaviors processes or programs that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device. For example the behavior analyzer module may be configured to analyze information e.g. in the form of observations collected from various modules e.g. the behavior observer module external context information module etc. learn the normal operational behaviors of the mobile device generate one or more behavior vectors based the results of the comparisons and compare the generated behavior vectors to other behavior models to determine whether a particular mobile device behavior software application or process is performance degrading malicious benign or suspicious.

When the behavior analyzer module determines that a behavior software application or process is malicious or performance degrading the behavior analyzer module may notify the actuator module which may perform various actions or operations to correct mobile device behaviors determined to be malicious or performance degrading and or perform operations to heal cure isolate or otherwise fix the identified problem. In an aspect the behavior analyzer module may also store the generated behavior vectors and or signatures in the behavior vector cache e.g. via the behavior vector cache module which allows the system to circumvent the behavior analyzer module and directly invoke the operations of the actuation module which may respond immediately to known detected behaviors the next time that the same or similar behavior software application or process is observed. In this manner the various aspects avoid re analyzing the same or similar mobile device behaviors thereby reducing the analyzer latency.

In an aspect when the behavior analyzer module determines that a behavior software application or process is suspicious the behavior analyzer module may notify the behavior observer module . In response the behavior observer module may adjust the granularity of its observations i.e. the level of detail at which mobile device behaviors are observed and or change the behaviors that are observed based on information received from the analyzer module e.g. results of the real time analysis operations generate or collect new or additional behavior information and send the new additional information to the behavior analyzer module for further analysis classification. Such feedback communications between the observer module and the behavior analyzer module enable the mobile device to recursively increase the granularity of the observations i.e. make finer or more detailed observations or change the features behaviors that are observed until a source of a suspicious or performance degrading mobile device behavior is identified until a processing or battery consumption threshold is reached or until the mobile device processor determines that the source of the suspicious or performance degrading mobile device behavior cannot be identified from further increases in observation granularity.

If the mobile device processor determines that the generated behavior signature matches or corresponds to a behavior vector stored in a behavior vector cache memory i.e. determination block Yes in block the mobile device processor may respond immediately to known detected behaviors identified from the information stored in the cache memory. On the other hand if the mobile device processor determines that the generated behavior signature does not correspond to a behavior vector stored in a behavior vector cache memory i.e. determination block No in block the mobile device processor may analyze and or classify the collected behavior information generate behavior vectors generate spatial and or temporal correlations based on the behavior vector and information collected from various other mobile device sub systems. In bock the mobile device processor may determine whether the observed mobile device behavior is benign suspicious malicious or performance degrading. In block the mobile device processor may respond to the observed mobile device behaviors determined to be malicious or performance degrading.

In block the mobile device processor may generate a behavior signature suitable for use in quickly identifying the observed and analyzed behavior and verifying that the behavior has previously been analyzed and classified without requiring the mobile device to perform any additional cumbersome or power intensive analysis or verification operations. In block the mobile device processor may store the generated behavior signature in the cache memory.

The observer mode module may receive control information from various sources which may include an analyzer unit e.g. the behavior analyzer module described above with reference to and or an application API. The observer mode module may send control information pertaining to various observer modes to the adaptive filter module and the high level behavior detection module .

The adaptive filter module may receive data information from multiple sources and intelligently filter the received information to generate a smaller subset of information selected from the received information. This filter may be adapted based on information or control received from the analyzer module or a higher level process communicating through an API. The filtered information may be sent to the throttle module which may be responsible for controlling the amount of information flowing from the filter to ensure that the high level behavior detection module does not become flooded or overloaded with requests or information.

The high level behavior detection module may receive data information from the throttle module control information from the observer mode module and context information from other components of the mobile device. The high level behavior detection module may use the received information to perform spatial and temporal correlations to detect or identify high level behaviors that may cause the device to perform at sub optimal levels. The results of the spatial and temporal correlations may be sent to the behavior vector generator which may receive the correlation information and generate a behavior vector that describes the behaviors of a particular process application or sub system. In an aspect the behavior vector generator may generate the behavior vector such that each high level behavior of a particular process application or sub system is an element of the behavior vector. In an aspect the generated behavior vector may be stored in a secure buffer . Examples of high level behavior detection may include detection of the existence of a particular event the amount or frequency of another event the relationship between multiple events the order in which events occur time differences between the occurrence of certain events etc.

In the various aspects the behavior observer module may perform adaptive observations and control the observation granularity. That is the behavior observer module may dynamically identify the relevant behaviors that are to be observed and dynamically determine the level of detail at which the identified behaviors are to be observed. In this manner the behavior observer module enables the system to monitor the behaviors of the mobile device at various levels e.g. multiple coarse and fine levels . The behavior observer module may enable the system to adapt to what is being observed. The behavior observer module may enable the system to dynamically change the factors behaviors being observed based on a focused subset of information which may be obtained from a wide variety of sources.

As discussed above the behavior observer module may perform adaptive observation techniques and control the observation granularity based on information received from a variety of sources. For example the high level behavior detection module may receive information from the throttle module the observer mode module and context information received from other components e.g. sensors of the mobile device. As an example a high level behavior detection module performing temporal correlations might detect that a camera has been used and that the mobile device is attempting to upload the picture to a server. The high level behavior detection module may also perform spatial correlations to determine whether an application on the mobile device took the picture while the device was holstered and attached to the user s belt. The high level behavior detection module may determine whether this detected high level behavior e.g. usage of the camera while holstered is a behavior that is acceptable or common which may be achieved by comparing the current behavior with past behaviors of the mobile device and or accessing information collected from a plurality of devices e.g. information received from a crowd sourcing server . Since taking pictures and uploading them to a server while holstered is an unusual behavior as may be determined from observed normal behaviors in the context of being holstered in this situation the high level behavior detection module may recognize this as a potentially threatening behavior and initiate an appropriate response e.g. shutting off the camera sounding an alarm etc. .

The various aspects may provide cross layer observations on mobile devices encompassing webkit SDK NDK kernel drivers and hardware in order to characterize system behavior. The behavior observations may be made in real time.

The observer module may perform adaptive observation techniques and control the observation granularity. As discussed above there are a large number i.e. thousands of factors that could contribute to the mobile device s degradation and it may not be feasible to monitor observe all of the different factors that may contribute to the degradation of the device s performance. To overcome this the various aspects dynamically identify the relevant behaviors that are to be observed and dynamically determine the level of detail at which the identified behaviors are to be observed.

In determination block the mobile device processor may determine whether suspicious behaviors or potential problems can be identified and corrected based on the results of the behavioral analysis. When the mobile device processor determines that the suspicious behaviors or potential problems can be identified and corrected based on the results of the behavioral analysis i.e. determination block Yes in block the processor may initiate a process to correct the behavior and return to block to perform additional coarse observations.

When the mobile device processor determines that the suspicious behaviors or potential problems cannot be identified and or corrected based on the results of the behavioral analysis i.e. determination block No in determination block the mobile device processor may determine whether there is a likelihood of a problem. In an aspect the mobile device processor may determine that there is a likelihood of a problem by computing a probability of the mobile device encountering potential problems and or engaging in suspicious behaviors and determining whether the computed probability is greater than a predetermined threshold. When the mobile device processor determines that the computed probability is not greater than the predetermined threshold and or there is not a likelihood that suspicious behaviors or potential problems exist and or are detectable i.e. determination block No the processor may return to block to perform additional coarse observations.

When the mobile device processor determines that there is a likelihood that suspicious behaviors or potential problems exist and or are detectable i.e. determination block Yes in block the mobile device processor may perform deeper logging observations or finer logging on the identified subsystems processes or applications. In block the mobile device processor may perform deeper and more detailed observations on the identified subsystems processes or applications. In block the mobile device processor may perform further and or deeper behavioral analysis based on the deeper and more detailed observations. In determination block the mobile device processor may again determine whether the suspicious behaviors or potential problems can be identified and corrected based on the results of the deeper behavioral analysis. When the mobile device processor determines that the suspicious behaviors or potential problems cannot be identified and corrected based on the results of the deeper behavioral analysis i.e. determination block No the processor may repeat the operations in blocks until the level of detail is fine enough to identify the problem or until it is determined that the problem cannot be identified with additional detail or that no problem exists.

When the mobile device processor determines that the suspicious behaviors or potential problems can be identified and corrected based on the results of the deeper behavioral analysis i.e. determination block Yes in block the mobile device processor may perform operations to correct the problem behavior and the processor may return to block to perform additional operations.

In an aspect as part of blocks of method the mobile device processor may perform real time behavior analysis of the system s behaviors to identify suspicious behavior from limited and coarse observations to dynamically determine the behaviors to observe in greater detail and to dynamically determine the precise level of detail required for the observations. This enables the mobile device processor to efficiently identify and prevent problems from occurring without requiring the use of a large amount of processor memory or battery resources on the device.

The various aspects may be implemented on a variety of mobile computing devices an example of which is illustrated in in the form of a smartphone. A smartphone may include a processor coupled to internal memory a display and to a speaker. Additionally the smartphone may include an antenna for sending and receiving electromagnetic radiation that may be connected to a wireless data link and or cellular telephone transceiver coupled to the processor . Smartphones typically also include menu selection buttons or rocker switches for receiving user inputs.

A typical smartphone also includes a sound encoding decoding CODEC circuit which digitizes sound received from a microphone into data packets suitable for wireless transmission and decodes received sound data packets to generate analog signals that are provided to the speaker to generate sound. Also one or more of the processor wireless transceiver and CODEC may include a digital signal processor DSP circuit not shown separately .

Portions of the aspect methods may be accomplished in a client server architecture with some of the processing occurring in a server such as maintaining databases of normal operational behaviors which may be accessed by a mobile device processor while executing the aspect methods. Such aspects may be implemented on any of a variety of commercially available server devices such as the server illustrated in . Such a server typically includes a processor coupled to volatile memory and a large capacity nonvolatile memory such as a disk drive . The server may also include a floppy disc drive compact disc CD or DVD disc drive coupled to the processor . The server may also include network access ports coupled to the processor for establishing data connections with a network such as a local area network coupled to other broadcast system computers and servers.

The processors may be any programmable microprocessor microcomputer or multiple processor chip or chips that can be configured by software instructions applications to perform a variety of functions including the functions of the various aspects described below. In some mobile devices multiple processors may be provided such as one processor dedicated to wireless communication functions and one or more processors dedicated to running other applications. Typically software applications may be stored in the internal memory before they are accessed and loaded into the processor . The processor may include internal memory sufficient to store the application software instructions.

The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various aspects must be performed in the order presented. As will be appreciated by one of skill in the art the order of steps in the foregoing aspects may be performed in any order. Words such as thereafter then next etc. are not intended to limit the order of the steps these words are simply used to guide the reader through the description of the methods. Further any reference to claim elements in the singular for example using the articles a an or the is not to be construed as limiting the element to the singular.

The various illustrative logical blocks modules circuits and algorithm steps described in connection with the aspects disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

Many mobile computing devices operating system kernels are organized into a user space where non privileged code runs and a kernel space where privileged code runs . This separation is of particular importance in Android and other general public license GPL environments where code that is part of the kernel space must be GPL licensed while code running in the user space may not be GPL licensed. It should be understood that the various software components modules discussed here may be implemented in either the kernel space or the user space unless expressly stated otherwise.

The hardware used to implement the various illustrative logics logical blocks modules and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a multiprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a multiprocessor a plurality of multiprocessors one or more multiprocessors in conjunction with a DSP core or any other such configuration. Alternatively some steps or methods may be performed by circuitry that is specific to a given function.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored as one or more instructions or code on a non transitory computer readable medium or non transitory processor readable medium. The steps of a method or algorithm disclosed herein may be embodied in a processor executable software module which may reside on a non transitory computer readable or processor readable storage medium. Non transitory computer readable or processor readable storage media may be any storage media that may be accessed by a computer or a processor. By way of example but not limitation such non transitory computer readable or processor readable media may include RAM ROM EEPROM FLASH memory CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that may be used to store desired program code in the form of instructions or data structures and that may be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above are also included within the scope of non transitory computer readable and processor readable media. Additionally the operations of a method or algorithm may reside as one or any combination or set of codes and or instructions on a non transitory processor readable medium and or computer readable medium which may be incorporated into a computer program product.

The preceding description of the disclosed aspects is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects without departing from the spirit or scope of the invention. Thus the present invention is not intended to be limited to the aspects shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein.

