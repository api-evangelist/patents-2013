---

title: Systems and methods for determining trust when interacting with online resources
abstract: Systems and methods for determining trust when interacting with online resources are described, including requesting a secure connection with an online resource; receiving a certificate from the online resource, wherein the certificate is signed by a chain of at least one certificate authority (CA) with the last CA in the chain being a root CA; determining that the root CA is an entity root CA without determining whether the root CA is a third-party root CA, wherein the entity root CA is associated with an entity certificate issued to an entity and the entity is associated with a score; determining whether the score is equal to or greater than a threshold; and, if the score is equal to or greater than the threshold, establishing the secure connection with the online resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09282092&OS=09282092&RS=09282092
owner: GOOGLE INC.
number: 09282092
owner_city: Mountain View
owner_country: US
publication_date: 20130308
---
This application is a non provisional of U.S. Provisional Patent Application No. 61 618 320 filed Mar. 30 2012 the entire contents of which are incorporated herein in their entirety by reference.

The discussion below relates generally to online data processing and more particularly to systems and methods for determining trust when interacting with online resources.

An online party establishes trust using a certificate. For example when a browser accesses a website using the Hypertext Transfer Protocol Secure HTTPS protocol or the Secure Sockets Layer SSL protocol the website establishes trust by sending a certificate signed by a trusted certificate authority CA or root CA . The certificate is based on domain name binding which means that the certificate is issued only for a specific domain name and is only valid for that specific domain name which can be identified using a universal resource locator URL . This may be referred to as domain based trust. 

Domain based trust however may not be user friendly. For example different domain names can be confusingly similar e.g. usersalliance.com useralliance.com and usersaliance.com . When a user unintentionally accesses a website created to deceive the user e.g. useralliance.com that website may present a valid certificate issued to and possibly stolen from another website e.g. usersalliance.com that the user may have intended to access. The user s browser may detect that useralliance.com is not the same as usersalliance.com and ask the user whether he or she would like to continue accessing useralliance.com the unintentionally accessed website .

Since useralliance.com was created with a confusingly similar name in a manner that may have been intended to deceive the user the user may not realize that an s is missing and thus may incorrectly respond e.g. Yes continue accessing. . The deceiving website useralliance.com may then present or mimic the web pages that the user is led to believe he or she is accessing e.g. legitimate web pages to improperly induce the user to provide personal information financial information or other valuable information.

Another problem with domain based trust is that the certificate issued for one domain name is not valid for another domain name owned by the same entity. For example a financial institution e.g. Best FI may own BestFlcards.com BestFlbank.com and onlineBestFlaccount.com. The financial institution Best FI would require separate certificates for each of those domain names to use them in online financial transactions with its customers. If Best FI decides to change the name of one of the three domain names or add another domain e.g. for website access email signing code signing or other function the financial institution Best FI would need to obtain a new certificate.

The subject matter described herein is taught by way of example implementations. Various details have been omitted for the sake of clarity and to avoid obscuring the subject matter. Examples shown below are directed to structures and functions for implementing systems and methods for determining trust when interacting with online resources.

In response the online resource e.g. a website may send a certificate which may include a public key of the online resource e.g. Resource Public Key . The certificate may include other information e.g. Resource Identity . Requester then determines the trustworthiness of the online resource by checking that certificate is issued by the same entity that owns the online resource . This may be determined by identifying the root certificate authority CA in a certificate issuing signing chain and determining that the root CA is an entity root CA .

A certificate authority CA is a party that may issue certificates. The CA uses a certificate associated with it e.g. CA certificate to sign the issued certificates. An issued certificate signed by a CA certificate in some example implementations refers to binding the public key of the CA certificate to the issued certificate thus passing the trust of the CA to the holder of the issued certificate. In some example implementations a certificate may be issued for a limited duration e.g. a duration in terms of a number of weeks months years or other unit .

A certificate issuing signing chain is a chain of trust leading to a trusted root CA. Regardless of the length of the certificate issuing signing chain the last CA in the chain is a root CA. In this example the root CA is an entity root CA . An entity root CA refers to a root CA or simply a CA associated with a root certificate issued to and owned by an entity that also owns the online resource . In other words the entity itself functions as a root CA to issue certificates used within the entity.

To determine the entity root CA requester may traverse up the certificate issuing signing chain. In some example implementations certificate may be issued by a root CA e.g. certificate is signed by the certificate of the root CA . In other example implementations as in certificate may be issued by an intermediate CA e.g. certificate is signed by an intermediate CA certificate . The intermediate CA certificate in turn may be issued by another intermediate CA not shown or a root CA e.g. the intermediate CA certificate is signed by a root CA certificate . When the root CA is an entity root CA the entity is determined. For example the entity may be identified by looking up the Root CA Identity in the root CA certificate .

Determining trustworthiness based on an entity root CA or entity may be referred to as entity based trust e.g. trust of the entity is passed down to the online resource through the certificate issuing signing chain . An entity root certificate e.g. root CA certificate used by an entity root CA to sign other certificates of the entity may be generated by and issued to the entity itself e.g. a self issued root certificate . In some example implementations an entity root certificate issued to an entity may be generated or signed by a party outside of the entity e.g. a third party root CA . Examples of third party root CAs which may also be referred to as commercial CAs or trusted root CAs include but are not limited to VeriSign Comodo Entrust DigiCert GeoTrust Network Solutions etc.

In some example implementations an entity may be defined by a hierarchical or tree structure of certificates with the entity root CA certificate as the root node of the structure. For example an entity is the owner of all resources having certificates signed by certificate chains leading to the same entity root CA certificate . The root certificate of an entity may be used to sign certificates used in any resources e.g. for SSL connection email signing code signing owned by the entity. In some example implementations some of the certificates signed by the entity root certificate may in turn be used to sign other certificates used within the entity. Certificates may include or omit domain names since the certificates are not used with a domain name to establish trust e.g. not domain name binding . In some example implementations certificates used within an entity may include the identity of the entity.

After determining the root CA certificate of an entity root CA requester does not need to determine whether the root CA certificate is issued by a third party CA. Thus trustworthiness of a third party is not relied upon for the online resource . To establish the trustworthiness of the online resource requester may determine whether a reputation score associated with the entity or the online resource is greater than or equal to a reputation threshold. If the reputation score is less than the reputation threshold requester may issue a warning to the user e.g. the user using requester to access the online resource with or without giving the user an opportunity to proceed with accessing the online resource .

If the reputation score is greater than or equal to the reputation threshold a secure connection is established to the online resource . After the secure connection has been established secure communication may be carried out between requester and online resource .

Requester establishing a secure connection may involve for example using the online resource s public key to encrypt a key of the requester thus sending the encrypted key to the online resource and other encrypted data that may be needed to establish the connection. Online resource then decrypts the key of the requester using its private key and uses the key of the requester to decrypt the other encrypted data. After online resource receives the key of the requester online resource and requester may start using the key of the requestor to communicate securely until the purpose of the secure communication has been achieved and the secure connection has been disconnected.

The reputation score may be a reputation score associated with the online resource entity root CA another resource owned by the same entity the entity itself or any combination thereof. For example the reputation score may be a score associated with the entity which may be used to establish a secure connection to any resource owned by the entity. In some example implementations there may be a single reputation score for the entire entity. In other example implementations two or more reputation scores may be used e.g. a score for each resource each line of business each region each resource or another division . One or more reputation scores may be stored on the requester online resource another part of the entity or a combination thereof.

Initially or when the reputation score is below a minimum reputation threshold trust may be bootstrapped from another reputation source. For example when a site is visited for the first time the user or a third party may provide an indication of trustworthiness. In some example implementations the reputation score may be set to a level above the minimum reputation threshold if the entity root CA is signed by a chain of at least one CA with the last CA in the chain being any third party root CA providing certificate signing as a business. In other example implementations third party trustworthiness is not relied on e.g. the entity root CA is associated with an entity certificate issued by the entity itself .

According to at least one example implementation the reputation score may be set to a level above the minimum reputation threshold if the business entity owns another resource with a certificate signed by any third party root CA e.g. signed by a chain of at least one CA with the last CA in the chain being any third party root CA .

There are factors that may increase or decrease the reputation score. For example positive factors that may increase the reputation score may include the history of access to a resource owned by the entity. Another factor may be the history of one or more other resources owned by the same entity. The longer the history e.g. more usage data the greater the increase of the reputation score. For example a user s interaction history with one or more resources associated with an entity may be recorded and or summarized by requester e.g. a browser email provider operating system or any resource . The history of more than one resource may be combined to contribute to a higher reputation score.

Other positive factors may include the age of the resources or the entity itself e.g. the reputation score may be increased by the increase in age of the resources . Additional positive factors may be factors associated with productive enjoyable or otherwise positive user experiences e.g. a shopping card resource a payment processing service search engines map resources etc. . More than one factor may be combined to contribute to a higher reputation score.

Factors that may decrease the reputation score may include identification or indication by a user that one or more resources owned by the entity are unreliable or untrustworthy. Additional negative factors may include factors associated with a destructive deceitful or otherwise negative user experience e.g. unstable application mishandling of user data confusing user interface etc. .

Factors that may increase or decrease the reputation score may include interactions with the entity that are weighted by closeness in one or more social graphs or circles of the interacting users. For example users on a social network can establish circles of relationships e.g. family members and friends in one circle hiking buddies or users having similar interests or hobbies in another circle professional acquaintances in a third circle etc. . The social graphs may be used as a natural defense against poisoning attacks and Sybil attacks e.g. an attacker creates a large number of identities and uses them to elevate the reputation of a bad site or ruin the reputation of a good one . Since most users do not have attackers in their circles weighting the opinion of users closer in the social graph would tend to remove bad actors.

In some example implementations one or more user interface UI features not shown may be provided to users to indicate the use of the users history and or data in establishing trust with a resource e.g. web service email service code execution mobile applications etc. . For example data relating to a user s visits to a website may be shown e.g. You ve interacted with this entity for two years averaging 200 visits per month. . Email communication may be indicated e.g. You have received signed email. . Webmail or email may include an embedded tag indicating the entity name or identifier. A user installing a mobile application from an entity Vanguard Mobile may be shown that the application comes from the same entity Vanguard that the user has accessed before by logging into one of its websites or using its services for N years receiving M number of emails from the entity s email service and or performing T number of transactions with the entity. The data and statistics help assure the user that Vanguard Mobile is the real Vanguard the user has interacted with and trusted.

In some example implementations one or more services not shown may be provided to protect users from for example phishing or other deceptive practices. For example a user facing device or interface e.g. a browser smartphone login assistant or interface may implement features that eliminate or minimize the need for a user to manually enter his or her login credentials e.g. user name and or password . Obviating the need to manual enter login credentials would eliminate the chances of manually entering the login credentials for a legitimate site into a malicious lookalike site. The user facing device or interface may decide the credentials to use based on the entity name which may be retrieved from an entity root CA.

In some examples process may be implemented with different fewer or more steps. Process may be implemented as computer executable instructions which can be stored on a medium loaded onto one or more processors of one or more computing devices and executed as a computer implemented method. An entity root CA may be used in place of a third party root CA anywhere a third party root CA can be used.

As an example an entity root CA can be used to authenticate or provide trust to two or more resources of an entity or a brand of an entity. An entity root CA or a third party root CA may be the root CA of a signing certificate chain that signs a brand dossier of the entity.

An entity may have businesses services products assets organizations or resources in general in many namespaces. For example the entities may own a number of domain names in the domain name system DNS namespace. Some of domain names and or subdomain names of the entity may be signed by certificate authorities CAs . The entity may have acquired or been assigned names in the namespaces of different social networks. The entity may provide services and or applications on many platforms e.g. in the namespaces of different operating systems for smartphones tablets computers etc. . The larger the entity the more resources it has in different namespaces for each of different brands.

A brand dossier signed by a public key e.g. of a certificate provides a trusted mechanism to link or group together different names in various namespaces of a brand. The reputation established with different names of an entity or a brand of an entity can be preserved or united to lend support to new names of the brand. The new names may be in existing and or new namespaces or platforms. For example once a brand has acquired trustworthy and or reputable recognition the brand may for example provide a service H on a new social network Y in the namespace of social network Y. Instead of having to establish trust and or reputation of service H from zero the brand may quickly and easily show or project the brand s established trust and reputation to service H using a brand dossier.

Below is an example brand dossier shown as in the format of a dossier file. In implementation the format and or content of a dossier file may be different than what are shown below.

The example dossier file above is formatted for human readable for discussion which may not be necessary in actual implementation. The example dossier file is shown with line numbers for discussion which may not be included in actual implementation. The canonical element of the dossier file may be implemented using a public key e.g. included on line 5 . For example the public key may be from a certificate signed by a chain of one or more signing certificates as described about.

In some implementations a fingerprint of the public key may be obtained and or use. For example the fingerprint of the public key may be used as an identifier of the brand e.g. BRANDID shown on line 1 . A fingerprint of a unique public key is also a unique identifier. In some implementations a fingerprint may be shortened using any technique known to those skilled in the art.

Lines 2 4 may show other information of the example dossier file. Lines 6 and 7 may show the one or more locations where the example dossier file may be located or stored. The different names in different namespaces are shown in lines 9 28. For example lines 9 12 provide the name Foo Inc. in namespace domain name X and other related information e.g. Locator and Sig . Lines 13 16 show name Foo in namespace domain name Y and other related information. And so on. One place in the dossier file e.g. last line line 29 includes a signature of the other parts e.g. lines 1 28 of the dossier file. The signature may be obtained using the public key shown on line 5 to sign the contents of lines 1 28 and appended to the end of the dossier file.

A dossier file is extensible and changeable to add replace and or remove names and namespaces. For example when a brand is adding a new service on a new platform i.e. adding a new name in a new namespace the new name new namespace and any additional related information are added to the dossier file. The updated dossier file except the SIG signature is then resigned with the same public key e.g. the one shown on line 5 or a new public key of a new certificate i.e. updating the dossier file includes replacing the public key on line 5 with the new one .

In promoting the new name associated with the brand the brand owner uses or provides the dossier file associated with the name in providing products and or services. A potential consumer of the products and or services may verify the name for trustworthiness and or reputation e.g. whether the name belongs to a reputable organization or brand using the associated dossier file. To verify that the provided dossier file has not been altered check for the accuracy of the name and namespace in the dossier file signed the relevant portion of the dossier file e.g. lines 1 to 28 or 2 to 28 with the key on line 5 and compare the signature with that on line 29. Alternatively or in addition if the new name e.g. line 18 or 21 has its own certificate e.g. line 19 or signing chain e.g. line 22 the new name may be verify using the certificate or signing chain. After the new name and or the content of the dossier file are verified next is to verify that the public key on line 5 is signed by an authoritative source. The authoritative source can be for example a third party CA or an entity root CA with a sufficiently high reputation score .

An entity or organization business or government may create obtain and or use numerous brand identifiers for its brands. Two or more brand identifiers may be use one public key. In some implementations each brand identifier may use its own public key. If a dossier file becomes long or if shorter dossier files are to be implemented the dossier files linked together in a structure such as a Merkle tree.

Computing device can be communicatively coupled to input user interface and output device interface . Either one or both of input user interface and output device interface can be a wired or wireless interface and can be detachable. Input user interface may include any device component sensor or interface physical or virtual which can be used to provide input e.g. keyboard a pointing cursor control microphone camera braille motion sensor optical reader and or the like . Output device interface may include a display monitor printer speaker braille or the like. In some example implementations input user interface and output device interface can be embedded with or physically coupled to computing device e.g. a mobile computing device with buttons or touch screen input user interface and an output or printing display or a television .

Computing device can be communicatively coupled to external storage and network for communicating with any number of networked components devices and systems including one or more computing devices of the same or different configuration. Computing device or any connected computing device can be functioning as providing services of or referred to as a server client thin server general machine special purpose machine or other label.

I O interface can include but is not limited to wired and or wireless interfaces using any communication or I O protocols or standards e.g. Ethernet 802.11x Universal System Bus WiMax modem a cellular network protocol and the like for communicating information to and or from at least all the connected components devices and networks in computing environment . Network can be any network or combination of networks e.g. the Internet local area network wide area network a telephonic network a cellular network satellite network and the like .

Computing device can use and or communicate using computer usable or computer readable media including transitory media and non transitory media. Transitory media include transmission media e.g. metal cables fiber optics signals carrier waves and the like. Non transitory media include magnetic media e.g. disks and tapes optical media e.g. CD ROM digital video disks Blu ray disks solid state media e.g. RAM ROM flash memory solid state storage and other nonvolatile storage or memory.

Computing device can be used to implement techniques methods applications processes or computer executable instructions to implement at least one implementation e.g. a described implementation . Computer executable instructions can be retrieved from transitory media and stored on and retrieved from non transitory media. The executable instructions can originate from one or more of any programming scripting and machine languages e.g. C C C Java Visual Basic Python Perl JavaScript and others .

Processor s can execute under any operating system OS not shown in a native or virtual environment. To implement a described implementation one or more applications can be deployed that include logic unit application programming interface API unit input unit output unit certificate management unit score management unit front end management unit and inter unit communication mechanism for the different units to communicate with each other with the OS and with other applications not shown . For example certificate management unit score management unit and front end management unit may implement one or more processes shown in . The described units and elements can be varied in design function configuration or implementation and are not limited to the descriptions provided.

In some example implementations when information or an execution instruction is received by API unit it may be communicated to one or more other units e.g. logic unit input unit output unit certificate management unit score management unit front end management unit . For example after input unit has detected a response from a resource with a certificate input unit may use API unit to communicate the certificate to certificate management unit . Certificate management unit may determine that the root CA is the entity root CA and interact via API unit with score management unit to detect the reputation score and determine whether the score is above a threshold. Score management unit may then communicate with front end management unit to warn the user of the low reputation score or communicate with logic unit to establish a secure connection if the reputation score is above the threshold.

In some examples logic unit may be configured to control the information flow among the units and direct the services provided by API unit input unit output unit certificate management unit score management unit and front end management unit in order to implement an implementation described above. For example the flow of one or more processes or implementations may be controlled by logic unit alone or in conjunction with API unit .

Although a few example implementations have been shown and described these example implementations are provided to convey the subject matter described herein to people who are familiar with this field. It should be understood that the subject matter described herein may be embodied in various forms without being limited to the described example implementations. The subject matter described herein can be practiced without those specifically defined or described matters or with other or different elements or matters not described. It will be appreciated by those familiar with this field that changes may be made in these example implementations without departing from the subject matter described herein as defined in the appended claims and their equivalents.

