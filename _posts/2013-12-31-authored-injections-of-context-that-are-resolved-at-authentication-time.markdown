---

title: Authored injections of context that are resolved at authentication time
abstract: Techniques are described for enabling principals to inject context information into a credential (e.g. session credential). Once the credential has been issued, any arbitrary principal is allowed to inject context information into the existing credential. The injected context is scoped to the principal that made the injection. Subsequently, at authentication time, when the credential is used to request access to a particular resource, the system can verify whether the principal that made the injection is trusted and if the principal is deemed trusted, the context information can be applied to a policy that controls access to one or more resources, or can alternatively be translated into some context residing in a different namespace which can then be applied to the policy. In addition, the system enables arbitrary users to insert additional deny statements into an existing credential, which further restrict the scope of permissions granted by the credential.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479492&OS=09479492&RS=09479492
owner: Amazon Technologies, Inc.
number: 09479492
owner_city: Reno
owner_country: US
publication_date: 20131231
---
This application is a continuation application of U.S. Nonprovisional application Ser. No. 13 429 180 filed Mar. 23 2012 entitled AUTHORED INJECTIONS OF CONTEXT THAT ARE RESOLVED AT AUTHENTICATION TIME which is incorporated herein by reference in its entirety for all purposes.

In today s Internet communications many web sites are designed to authenticate and track a user when communication is first established. In order to accomplish this users typically identify themselves to the web site by supplying a username and password combination. Thereafter the web site will generate a credential e.g. a unique session identifier to identify the user s session as having been authenticated. Subsequent interaction between the user and the web site is performed by using the credential as proof of the authenticated session. This eliminates the need to pass the confidential user name and password combination back and forth with each transaction while still enabling the communication between the user and the web site to remain secure.

Credentials may also be used in many other aspects of computer security such as to provide authentication and authorization access control lists encryption and decryption of electronic communications digital rights management DRM and a variety of other contexts. In most instances the use of credentials follows the paradigm of first issuing a credential to a user or other entity and subsequently allowing that user or entity to utilize the credential to assert their identity or gain permission to perform a particular action.

In the following description various embodiments will be illustrated by way of example and not by way of limitation in the figures of the accompanying drawings. References to various embodiments in this disclosure are not necessarily to the same embodiment and such references mean at least one. While specific implementations and other details are discussed it is to be understood that this is done for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the claimed subject matter.

Systems and methods in accordance with the embodiments described herein overcome the various deficiencies in existing approaches for providing security in computer systems. In particular the various embodiments provide approaches for providing the ability to enrich existing credentials or principals with additional context information that can be utilized later at authentication time.

In accordance with various embodiments systems and methods are described for enabling arbitrary principals to inject context information into a session credential or principal. As used throughout this disclosure a credential can be any object that is used to establish an identity or obtain permission to perform a particular action by a user application or other entity on a computing device. Credentials can include but are not limited to session objects unique identifiers user names and passwords cryptographic keys tickets certificates and various other constructs. For example the credential can be provided by a server to a user in order to indicate that the user has been authenticated and the user may subsequently use the credential to log into various systems access and modify data and perform a wide variety of other functions that they may otherwise be restricted from doing. As used throughout this disclosure a principal represents a user or any other entity that can be authenticated by a computer system or network. Principals are usually capable of being assigned rights to various resources in the system. A principal is usually associated with a unique identifier that allows the principal to be referenced for identification purposes or for assigning permissions.

In accordance with an embodiment once the credential has been issued to a user by a server or other issuing authority any arbitrary principal or user is then allowed to inject context information into the existing credential. The injected context information is then associated with a specific scope based on the injection. For example the context information may be scoped to the principal that provided the injection. In an alternative embodiment any arbitrary principal is allowed to inject context information into another principal. For example an author principal may inject information specifying that another principal is associated with a particular attribute. The injected context is then scoped to the author principal that made the injection.

At authentication time when the credential is used to request access to a particular resource or action the system can first determine which principal made the injection of the context information into the credential and also determine whether that the author principal is trusted by the system. If the author principal is deemed to be trusted the context information can be applied to a policy that controls access to one or more resources or can alternatively be translated into some context residing in a different namespace which can then be applied to the policy.

In this manner a principal is allowed to enrich a credential or another principal after it has been created with additional context information that can be relevant for a policy which is applied to the credential at authentication or authorization time. Because any arbitrary principal is allowed to make the injection no security assertions need to be made at the time of injection and all the verifications can be performed later upon authentication.

In accordance with various embodiments the context information can be injected by using an application programming interface API . In accordance with one embodiment the API invocation can receive a session token credential a set of new injections of context information and a set of added deny statements to be applied to the policy. The specified injections can be scoped to the injection author e.g. the identifier of the principal calling the API . For example if principal injects the internet protocol IP address of the source of a request the final injection can take the format of principal1 sourceip. 

During authentication time a published document can be utilized to map the fully scoped injections into more general context information that will be applied to the credential. In accordance with an embodiment the published document can be a policy or a collection of policies that is processed at the time when the credential is used to request a particular action.

Additionally the system described herein allows any arbitrary principal to add deny statements to the credential after it has been issued. The deny statements are statements that further restrict the permissions or access rights granted by the credential. In accordance with an embodiment because deny statements can only restrict access and cannot expand it they can be safely added by any principal.

In accordance with an embodiment a principal is allowed to invoke the adjust session API in order to inject context information into the session credential . The context information can be any information that will be utilized by the system at a later point in time such as at the time of using the credential for authentication. For example the context information may specify the source internet protocol IP address of a user that is associated with the session. While the system allows any arbitrary principal to make the injection the injected context information is scoped to the author that has made the injection. For example if principal having principal ID 123 makes an injection of a particular key XYZ the context information injected into the credential is of the form principal123 keyXYZ. 

In accordance with an embodiment the context information is injected by taking the existing session credential generating a new credential that has the context information embedded therein and returning the new credential as a response to the API call. Alternatively the context information can be embedded directly into the existing credential. In either case the session credential remains associated with the entity that was originally issued the credential by the system.

Once the context information has been injected it can remain with the credential for the lifetime of the credential or in some embodiments until it is removed by an authorized user. The context information can be used by the system when applying the credential at authentication or authorization time. For example if a policy needs the context information to perform some appropriate security check during authentication the system can retrieve the context information from the credential and if the principal that injected the context is deemed trusted the system can utilize that context to perform the check. In accordance with an embodiment the system can also utilize a mapping document to translate the context information from being scoped to the principal into a more general context that is scoped to the appropriate security authority or namespace applicable to the policy. For example if the context injected into the credential is of the form principal1 sourceIP and if principal1 is deemed trusted the system can translate the context into a more general context such as securityAuthority sourceIP or the like. The mapping file can be managed separately from the injections by various principals and can be directly controlled by the security authority.

In accordance with an embodiment the system also allows the principal to add one or more deny statements to the session credential . A deny statement can be any restriction or limitation on the scope of access rights that would normally be granted by the use of the credential . In accordance with an embodiment any arbitrary principal can specify a deny statement to be added to the session credential . When the principal invokes the API to add a deny statement the system can first verify that the statement purported to be a deny statement would indeed restrict the scope of permissions granted by the credential. If the statement would expand the scope of permissions in any manner the system can reject the addition of the deny statement. If the statement does pass the verification of being a true deny statement the system can insert the statement into the session credential . Thereafter e.g. upon authentication or authorization time any user that uses the credential will be subject to the restrictions specified in the deny statements .

In accordance with at least one embodiment the access policy on the server may refer to the source IP address of the user . If the console would make the request without any context information the source IP address would appear to be the console s IP address which does not reflect the user s actual address. Accordingly it may be desirable for a principal to add some extra context information to the credential in order to specify the true source IP address of the user .

At the time of injection this context information can be un translated and un authorized and scoped to the entity that made the injection. When the request is finally made from the console to the server as part of authenticating the request the security framework on the server can recognize that there has been some extra context information added to the credential associated with the request which indicates the source IP address. At this point the security framework of the server can look up an authorization whitelist which specifies whether the entity that has made the injection is allowed to specify the source IP of the request. If the whitelist allows the injector to specify the source IP e.g. if the principal is deemed trusted the server can then map the source IP address from being scoped to the principal into a more general context that is of a scope relevant to the security framework of the server and applicable to the policy .

As shown in operation the process can begin with a server or other issuing entity generating a credential that will grant the holder of the credential a set of access rights to perform one or more actions. In accordance with an embodiment the credential can be issued to a user or application that has been initially authenticated. Alternatively the credential may be issued to users or applications that have not yet been authenticated. In accordance with an embodiment the credential is associated with the session of a user initiating interaction with the console or server.

In operation the system allows any arbitrary principal to inject context information into the credential after it has been created. The injection of the context information can occur in a different location then the step of generating the credential and issuing it to a principal. In accordance with one embodiment the user or application that has been issued the credential can use an API to inject the context information to the credential. In alternative embodiments a different user or application can be allowed to inject the context information even though the credential was not originally issued for the injecting user.

In operation the context information injected into the credential is scoped to the principal that has made the injection. In accordance with one embodiment no security assertions are performed at this point allowing any user or principal to inject the context without requiring them to satisfy any additional security measures.

In operation subsequently at authentication time a request can be received to use the credential to grant access to a resource or to perform a particular action. For example the credential can be asserted by the user making a request to access a web service read write a table in a database log into another system or the like. The authentication request can be accompanied by the credential that is provided to the security authority.

In operation the security authority can determine whether the principal that has made the injection is deemed trusted. For example the server can inspect a white list of all authorized users and principals that are allowed specify the context information contained in the credential.

In operation if the principal is deemed trusted the context information is mapped or translated into a different namespace. For example the context information can be translated from being scoped to the principal that has made the injection to context of a more global scope that is applicable to the policy on the system.

In operation the translated context information is used in satisfying the authentication request. For example if the policy references a source IP address that is provided by a security framework the context information translated from the source IP contained in the credential can be used to authenticate the request.

As shown in operation the system can issue a credential to a selected entity as previously described. In operation the system can receive a set of deny statements to be added to the credential. In one embodiment the deny statements can be provided by any arbitrary principal utilizing an API to modify the session credential.

In operation the system verifies that the set of added statements in fact do restrict the scope of the permissions that would normally be granted by this credential. In accordance with an embodiment if the added statements do not enlarge the scope of the credential in any way they can be deemed true deny statements. If the purported statements do in fact pass this verification they can be added to the credential operation . Thereafter if the credential is used to authenticate or authorize access the added deny statements can restrict the holder of the credential from performing the actions prohibited by the deny statements.

As discussed different approaches can be implemented in various environments in accordance with the described embodiments. For example illustrates an example of an environment for implementing aspects in accordance with various embodiments. As will be appreciated although a Web based environment is used for purposes of explanation different environments may be used as appropriate to implement various embodiments. The system includes an electronic client device which can include any appropriate device operable to send and receive requests messages or information over an appropriate network and convey information back to a user of the device. Examples of such client devices include personal computers cell phones handheld messaging devices laptop computers set top boxes personal data assistants electronic book readers and the like. The network can include any appropriate network including an intranet the Internet a cellular network a local area network or any other such network or combination thereof. Components used for such a system can depend at least in part upon the type of network and or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network can be enabled via wired or wireless connections and combinations thereof. In this example the network includes the Internet as the environment includes a Web server for receiving requests and serving content in response thereto although for other networks an alternative device serving a similar purpose could be used as would be apparent to one of ordinary skill in the art.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device and handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server . It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log or session data . It should be understood that there can be many other aspects that may need to be stored in the data store such as page image information and access rights information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information can then be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

Various embodiments discussed or suggested herein can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

