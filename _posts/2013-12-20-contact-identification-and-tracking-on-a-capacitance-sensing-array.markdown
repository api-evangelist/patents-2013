---

title: Contact identification and tracking on a capacitance sensing array
abstract: The capacitance sensing array comprising a plurality of nodes corresponding to intersections of a first plurality of electrodes with a second plurality of electrodes may be scanned. Capacitance values associated with one or more of the nodes may be measured. The capacitance values may be representative of a touch object proximate to the one or more of the nodes. A peak capacitance value of the capacitance values of one or more of the nodes may be identified. A set of capacitance values comprising cells based on the peak capacitance value may be generated. A portion of the cells of the set are associated with the nodes corresponding to the intersections of the first plurality of electrodes with the second plurality of electrodes and at least one of the cells of the set is associated with a virtual node that does not correspond to the intersections.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09207822&OS=09207822&RS=09207822
owner: PARADE TECHNOLOGIES, LTD.
number: 09207822
owner_city: Santa Clara
owner_country: US
publication_date: 20131220
---
This application is a continuation of U.S. application Ser. No. 13 217 147 filed Aug. 24 2011 which claims priority to U.S. Provisional Patent Application No. 61 376 656 filed Aug. 24 2010 both of which are incorporated by reference herein in their entirety.

This disclosure relates to the field of touch sensors and in particular to contact identification and tracking on a touch sensor.

Computing devices such as notebook computers personal data assistants PDAs kiosks and mobile handsets have user interface devices which are also known as human interface devices HID . One user interface device that has become more common is a touch sensor pad also commonly referred to as a touchpad . A basic notebook computer touch sensor pad emulates the function of a personal computer PC mouse. A touch sensor pad is typically embedded into a PC notebook for built in portability. A touch sensor pad replicates mouse X Y movement by using two defined axes which contain a collection of sensor elements that detect the position of one or more conductive objects such as a finger. Mouse right left button clicks can be replicated by two mechanical buttons located in the vicinity of the touchpad or by tapping commands on the touch sensor pad itself. The touch sensor pad provides a user interface device for performing such functions as positioning a pointer or selecting an item on a display. These touch sensor pads may include multi dimensional sensor arrays for detecting movement in multiple axes. The sensor array may include a one dimensional sensor array detecting movement in one axis. The sensor array may also be two dimensional detecting movements in two axes.

Another user interface device that has become more common is a touch screen. Touch screens also known as touchscreens touch windows touch panels or touchscreen panels are transparent display overlays which are typically either pressure sensitive resistive or piezoelectric electrically sensitive capacitive acoustically sensitive surface acoustic wave SAW or photo sensitive infra red . The effect of such overlays allows a display to be used as an input device removing the keyboard and or the mouse as the primary input device for interacting with the display s content. Such displays can be attached to computers or as terminals to networks. Touch screens have become familiar in retail settings on point of sale systems on ATMs on mobile handsets on kiosks on game consoles and on PDAs where a stylus is sometimes used to manipulate the graphical user interface GUI and to enter data. A user can touch a touch screen or a touch sensor pad to manipulate data. For example a user can apply a single touch by using a finger to touch the surface of a touch screen to select an item from a menu.

The following description sets forth numerous specific details such as examples of specific systems components methods and so forth in order to provide a good understanding of several embodiments of the present invention. It will be apparent to one skilled in the art however that at least some embodiments of the present invention may be practiced without these specific details. In other instances well known components or methods are not described in detail or are presented in a simple block diagram format in order to avoid unnecessarily obscuring the present invention. Thus the specific details set forth are merely exemplary. Particular implementations may vary from these exemplary details and still be contemplated to be within the spirit and scope of the present invention.

An embodiment of a capacitive sensor array may include sensor elements arranged such that each unit cell corresponding to an intersection between sensor elements may include a main trace and one or more primary subtraces branching away from the main trace. In one embodiment a sensor element may also include one or more secondary subtraces branching from a primary subtrace or one or more tertiary subtraces branching from a secondary subtrace. In one embodiment a sensor array having such a pattern may have decreased signal disparity and reduced manufacturability problems as compared to other patterns such as a diamond pattern. Specifically a capacitive sensor array with sensor elements having main traces and subtraces branching from the main trace such as a totem pole pattern may be manufactured with decreased cost and increased yield rate as well as improved optical quality.

An embodiment of such a capacitive sensor array may include a first and a second plurality of sensor elements each intersecting each of the first plurality of sensor elements. Each intersection between one of the first plurality of sensor elements and one of the second plurality of sensor elements may be associated with a corresponding unit cell. In one embodiment a unit cell corresponding to an intersection may be understood as an area including all locations on the surface of the sensor array that are nearer to the corresponding intersection than to any other intersection between sensor elements.

In one embodiment of a capacitive sensor array each of the second plurality of sensor elements includes a main trace that crosses at least one of the plurality of unit cells and further includes within each unit cell a primary subtrace that branches away from the main trace. In one embodiment the primary subtrace may be one of two or more primary subtraces branching symmetrically from opposite sides of the main trace resembling a totem pole . Alternatively the primary subtraces may branch asymmetrically from the main trace.

In one embodiment the sensor array includes sensor elements N where N is a positive integer that are disposed as a two dimensional matrix also referred to as an XY matrix . The sensor array is coupled to pins N of the processing device via one or more analog buses transporting multiple signals. In this embodiment each sensor element N is represented as a capacitor.

In one embodiment the capacitance sensor may include a relaxation oscillator or other means to convert a capacitance into a measured value. The capacitance sensor may also include a counter or timer to measure the oscillator output. The capacitance sensor may further include software components to convert the count value e.g. capacitance value into a sensor element detection decision also referred to as switch detection decision or relative magnitude. It should be noted that there are various known methods for measuring capacitance such as current versus voltage phase shift measurement resistor capacitor charge timing capacitive bridge divider charge transfer successive approximation sigma delta modulators charge accumulation circuits field effect mutual capacitance frequency shift or other capacitance measurement algorithms. It should be noted however instead of evaluating the raw counts relative to a threshold the capacitance sensor may be evaluating other measurements to determine the user interaction. For example in the capacitance sensor having a sigma delta modulator the capacitance sensor is evaluating the ratio of pulse widths of the output instead of the raw counts being over or under a certain threshold.

In one embodiment the processing device further includes processing logic . Operations of the processing logic may be implemented in firmware alternatively it may be implemented in hardware or software. The processing logic may receive signals from the capacitance sensor and determine the state of the sensor array such as whether an object e.g. a finger is detected on or in proximity to the sensor array e.g. determining the presence of the object where the object is detected on the sensor array e.g. determining the location of the object tracking the motion of the object or other information related to an object detected at the touch sensor.

In another embodiment instead of performing the operations of the processing logic in the processing device the processing device may send the raw data or partially processed data to the host . The host as illustrated in may include decision logic that performs some or all of the operations of the processing logic . Operations of the decision logic may be implemented in firmware hardware software or a combination thereof. The host may include a high level Application Programming Interface API in applications that perform routines on the received data such as compensating for sensitivity differences other compensation algorithms baseline update routines start up and or initialization routines interpolation operations or scaling operations. The operations described with respect to the processing logic may be implemented in the decision logic the applications or in other hardware software and or firmware external to the processing device . In some other embodiments the processing device is the host .

In another embodiment the processing device may also include a non sensing actions block . This block may be used to process and or receive transmit data to and from the host . For example additional components may be implemented to operate with the processing device along with the sensor array e.g. keyboard keypad mouse trackball LEDs displays or other peripheral devices .

The processing device may reside on a common carrier substrate such as for example an integrated circuit IC die substrate or a multi chip module substrate. Alternatively the components of the processing device may be one or more separate integrated circuits and or discrete components. In one embodiment the processing device may be the Programmable System on a Chip PSoC processing device developed by Cypress Semiconductor Corporation San Jose Calif. Alternatively the processing device may be one or more other processing devices known by those of ordinary skill in the art such as a microprocessor or central processing unit a controller special purpose processor digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable device. In an alternative embodiment for example the processing device may be a network processor having multiple processors including a core unit and multiple micro engines. Additionally the processing device may include any combination of general purpose processing device s and special purpose processing device s .

In one embodiment the electronic system is implemented in a device that includes the touch sensing surface as the user interface such as handheld electronics portable telephones cellular telephones notebook computers personal computers personal data assistants PDAs kiosks keyboards televisions remote controls monitors handheld multi media devices handheld video players gaming devices control panels of a household or industrial appliances or other computer peripheral or input devices. Alternatively the electronic system may be used in other types of devices. It should be noted that the components of electronic system may include all the components described above. Alternatively electronic system may include only some of the components described above or include additional components not listed herein.

Capacitance sensor includes multiplexer control demultiplexer and multiplexer clock generator signal generator demodulation circuit and analog to digital converter ADC . ADC is further coupled with touch coordinate converter . Touch coordinate converter outputs a signal to the processing logic .

The transmit and receive electrodes in the electrode matrix may be arranged so that each of the transmit electrodes overlap and cross each of the receive electrodes such as to form an array of intersections while maintaining galvanic isolation from each other. Thus each transmit electrode may be capacitively coupled with each of the receive electrodes. For example transmit electrode is capacitively coupled with receive electrode at the point where transmit electrode and receive electrode overlap.

Clock generator supplies a clock signal to signal generator which produces a TX signal to be supplied to the transmit electrodes of touch sensor array . In one embodiment the signal generator includes a set of switches that operate according to the clock signal from clock generator . The switches may generate a TX signal by periodically connecting the output of signal generator to a first voltage and then to a second voltage wherein said first and second voltages are different.

The output of signal generator is connected with demultiplexer which allows the TX signal to be applied to any of the M transmit electrodes of touch sensor array . In one embodiment multiplexer control controls demultiplexer so that the TX signal is applied to each transmit electrode in a controlled sequence. Demultiplexer may also be used to ground float or connect an alternate signal to the other transmit electrodes to which the TX signal is not currently being applied.

Because of the capacitive coupling between the transmit and receive electrodes the TX signal applied to each transmit electrode induces a current within each of the receive electrodes. For instance when the TX signal is applied to transmit electrode through demultiplexer the TX signal induces an RX signal on the receive electrodes in matrix . The RX signal on each of the receive electrodes can then be measured in sequence by using multiplexer to connect each of the N receive electrodes to demodulation circuit in sequence.

The mutual capacitance associated with each intersection between a TX electrode and an RX electrode can be sensed by selecting every available combination of TX electrode and an RX electrode using demultiplexer and multiplexer . To improve performance multiplexer may also be segmented to allow more than one of the receive electrodes in matrix to be routed to additional demodulation circuits . In an optimized configuration wherein there is a 1 to 1 correspondence of instances of demodulation circuit with receive electrodes multiplexer may not be present in the system.

When an object such as a finger approaches the electrode matrix the object causes a decrease in the mutual capacitance between only some of the electrodes. For example if a finger is placed near the intersection of transmit electrode and receive electrode the presence of the finger will decrease the mutual capacitance between electrodes and . Thus the location of the finger on the touchpad can be determined by identifying the one or more receive electrodes having a decreased mutual capacitance in addition to identifying the transmit electrode to which the TX signal was applied at the time the decreased mutual capacitance was measured on the one or more receive electrodes.

By determining the mutual capacitances associated with each intersection of electrodes in the matrix the locations of one or more touch contacts may be determined. The determination may be sequential in parallel or may occur more frequently at commonly used electrodes.

In alternative embodiments other methods for detecting the presence of a finger or conductive object may be used where the finger or conductive object causes an increase in capacitance at one or more electrodes which may be arranged in a grid or other pattern. For example a finger placed near an electrode of a capacitive sensor may introduce an additional capacitance to ground that increases the total capacitance between the electrode and ground. The location of the finger can be determined from the locations of one or more electrodes at which an increased capacitance is detected.

The induced current signal is rectified by demodulation circuit . The rectified current output by demodulation circuit can then be filtered and converted to a digital code by ADC .

The digital code is converted to touch coordinates indicating a position of an input on touch sensor array by touch coordinate converter . The touch coordinates are transmitted as an input signal to the processing logic . In one embodiment the input signal is received at an input to the processing logic . In one embodiment the input may be configured to receive capacitance measurements indicating a plurality of row coordinates and a plurality of column coordinates. Alternatively the input may be configured to receive row coordinates and column coordinates.

In one embodiment the sensor array can be configured to detect multiple touches. One technique for multi touch detection uses a two axis implementation one axis to support rows and another axis to support columns. Additional axes such as a diagonal axis implemented on the surface using additional layers can allow resolution of additional touches.

In one embodiment the processing device is connected to a host which may receive the measured capacitances or calculated centroid locations from the processing device .

The sensor array illustrated in may include sensor elements arranged in a diamond pattern. Specifically the sensor elements of sensor array may be arranged in a single solid diamond SSD pattern as shown in . In other embodiments the sensors elements and may be hollow diamonds single hollow diamonds or may be pairs of diamonds coupled at one or both ends dual solid diamonds . In another embodiment pairs of hollow diamonds may be coupled at one or both ends dual hollow diamonds .

The self capacitance and mutual capacitance sensing methods described are meant to be exemplary only. Other methods of self capacitance and mutual capacitance may be utilized to detect capacitance on rows and columns in a self capacitance array or for each array in a mutual capacitance array. Furthermore self capacitance sensing methods may be used to measure capacitance in all points addressable or other multi touch arrays by increasing the number of sensing inputs. Likewise mutual capacitance sensing methods may be used to measure capacitance on single touch arrays. In such embodiments the same circuitry and processing may be used but only a single contact may be detected and tracked on the array. In one embodiment additional contacts that are detected on a multi touch array may be ignored completely. In another embodiment capacitance data from additional contacts may be used to determine the location of a single contact based on capacitance data from the entire array.

In one embodiment of a capacitive sensing device configured to measure mutual capacitance capacitance values for each node may be stored in a memory such as RAM ROM flash or other storage locations. Capacitance values may be the raw capacitance values for each node or the compensated capacitance value calculated by subtracting a base capacitance value indicative of a sensor with no conductive object present i.e. baseline from the raw capacitance values. In this embodiment the compensated capacitance values are non zero only for active nodes that is nodes at which there is measurable capacitance change from capacitance measured with no contacts present on the array.

Compensated capacitance values may then be used to determine the presence size and location of a single or multiple contact locations on the sensing array. For sensing arrays configured to measure capacitance at nodes or intersections across the sensing array the resulting image of a capacitance sensing scan may appear as that illustrated in . illustrates an embodiment of an array of capacitance sensing nodes that arise from eight columns and ten rows as illustrated in the embodiments described with reference to . Each square is indicative of a single intersection between rows and columns. In a mutual capacitance array each square is indicative of the node formed from transmit electrode and receive electrode . The mutual capacitance of each node may be measured by a capacitance sensor and stored in a memory. For a single touch the array will show a single peak node as well as strong nodes weak nodes and inactive nodes . In one embodiment a 5 5 matrix of nodes may be used to calculate the center of mass or centroid of a contact on the sensing array . This means that twenty five nodes may be used in the calculation of the centroid. The X and Y location of the contact is given by the following equations 

While the contact is on the sensor array such that the peak node is at least two nodes from the edge a complete 25 node array may be used to calculate position. However as illustrated in as the contact moves toward the edge of the array such that peak node is less than two nodes from the edge some capacitance data may be lost due to the fact that no sensors exist to detect the capacitance. In this situation the reported position will be missing data from the left most part of the touch causing the reported centroid to shift to the right.

In one embodiment illustrated in the capacitance values detected at the nodes immediately right of the meridian of sensors defined by the peak node is mirrored and virtual nodes are created. Virtual nodes are not present on the array but exist only in software a memory location or in device firmware. In one embodiment virtual nodes may only exist as part of an algorithm for calculating contact position. The algorithm may be executed in software by a processing device which is configured to execute commands based on programming stored in a memory location. The memory may be Flash RAM ROM or any other recordable medium. Virtual nodes are used to calculate the centroid of the contact by filling in the missing nodes that are non existent due to peak node s presence at the edge of the array . In another embodiment the virtual electrodes themselves might not even exist. In this embodiment the virtual electrodes may only be a reference to a real node on the array so that the processor uses the real value twice but once in reference to a virtual position when calculating the contact location.

While a contact location on the left edge of the array is illustrated in and described method of it would be clear to one of ordinary skill in the art that the same method may be used if contact location is at the right edge or at the top or bottom of the array. Furthermore it would be clear to one of ordinary skill in the art that the same method may be used if the contact location at one of the corners of the array. In such a case two meridians are defined in step and the virtual electrodes are populated by their respective sensors along both rows and columns. While illustrate embodiment using a 5 5 matrix and associated virtual electrodes in some embodiments larger or smaller matrices may in used. For example in smaller arrays with greater sensitivity it may be advantageous to reduce the matrix to a 3 3 collection of nodes. In other embodiments perhaps designed for larger arrays or arrays capable of detecting larger contacts larger matrices may be used such as 7 7 or even 9 9.

In another embodiment illustrated in a subset of the active sensor may be used to calculate position. An 8 10 array is scanned and capacitance data gathered for each of the nodes on the array. A peak node is identified as well as a group of sensors immediately adjacent to the peak node in each of the four directions. The additional sensors may have strong values such as node or weaker values such as node . As illustrated in the peak node is used to determine a row and a column of nodes at which the intersection is the peak node. Instead of a 5 5 matrix of nodes used to calculate the centroid for the contact four column nodes four row electrodes and the peak electrode are used. In this embodiment the number of nodes used is only nine. As illustrated in only two virtual electrodes need be created and populated as the peak node moves toward the left edge of the array . Instead of ten virtual nodes being created and populated as illustrated in illustrates that only two virtual nodes are created and populated. In this embodiment the memory and processing overhead is decreased thus decreasing the processing time and increasing the response time for the array. In one embodiment the configuration of may use the same method illustrated in except that a group of nine sensors is defined rather than an N M matrix.

While illustrate embodiment using a nine nodes and associated virtual electrodes in some embodiments more or fewer nodes may in used. For example in smaller arrays with greater sensitivity it may be advantageous to reduce the matrix to a collection of five nodes a peak node and one node in each direction. In other embodiments perhaps designed for larger arrays or arrays capable of detecting larger contacts larger collections may be used such as thirteen or even seventeen.

In another embodiment illustrated in the 5 5 matrix of nodes that is used to calculate the centroid of the contact location from is used to define sixteen 2 2 matrices of nodes B Q used to define a vector directions B Q. Each 2 2 matrix B Q that is derived from the 5 5 matrix is illustrated in . Each node in the 2 2 matrix pulls the vector B Q toward its corner. The vector of each node in the 2 2 matrix B Q is then summed to create a vector B Q for the 2 2 matrix. The vector direction of each 2 2 matrix points toward the center of mass of the contact location somewhere inside the area defined by the peak node .

where f x1 y1 f x2 y1 f x1 y2 and f x2 y2 correspond to the top left top right bottom left and bottom right cells of each 2 2 matrix of .

An advantage of this embodiment is that no extra processing is required when the contact location is near the edge of the array . In this case the vectors from the non edge 2 2 matrices still point to the center of mass of the contact location so their intersection may be used to calculate the position of the contact on the array.

Still another embodiment for calculating contact position on a capacitance sensing array is illustrated in . illustrates a three dimensional representation of the signal on each of the nodes of an 8 9 matrix. The value of the capacitance change due to the contact of a conductive object is shown as a vertical bar at each of the seventy two nodes in the array. Nodes with a greater amount of capacitance change from a baseline are shown as having a taller vertical bar. In the embodiment shown in only a single touch is shown. However it would be clear that such an approach could be used to demonstrate and calculate the position of two sensors on the array. In such a case there might be two groups of vertical bars spaced apart by some distance. The embodiment shown in has only 8 columns and 9 rows. This is not intended to be limiting. In fact a sensor design could be constructed that has any number of columns and rows. The limitation is only how many inputs the capacitance measurement circuitry has and may be expanded by coupling the transmit and receive electrodes to multiple capacitance sensing circuits. The capacitance values of each node in the matrix may be determined and recorded.

Using these capacitance sensing values a line is drawn from the three dimensional location of each node to the eight nodes around it. The three dimensional location is given by the column number and the row number to establish X and Y locations and the change in capacitance to establish the Z height. This creates an image of the array similar to that shown in . Each intersection of eight points represents one of the vertical bars from and a three dimensional rendering of the touch on the array is generated. Using this three dimensional rendering a perimeter can be defined for a plurality of heights. That is at defined capacitances a horizon is defined and a line drawn around the three dimensional rendering of the contact on the array.

One of the advantages of this method is that no extra processing is required when a contact is near the edge of the array. Touch data is detected for each node a three dimensional rendering is generated and polygons are generated regardless of the contact location. Contact locations near the edge of the array are taken into account by the capacitive data and the resulting polygons. The intersections of the perpendiculars of each of the line segments of the polygons do not require compensation near the edge of the array.

While the above embodiments have illustrated the use of five horizons to generate five polygons this is not intended to be limiting. Rather more or less than five horizons may be used depending on the requirements of the input device the resolution of the capacitance sensing circuitry and the required touch resolution of the array. In some situations less than five horizons may be used. For example smaller arrays with lower resolution capacitance sensors may not require the use or have the capability of implementing five horizons. Rather three horizons may be sufficient or in fact ideal. For larger arrays with more sensitive capacitance sensing circuitry and greater resolution more horizons may be used to create a higher resolution scattering of perpendicular intersections. While this may require more processing overhead and memory larger arrays may not be limited by processing capability.

Large contacts represent unique challenges to a capacitance sensing array. While normal contacts are likely to have clearly defined peak nodes that may be used to determine the nodes included in centroid calculations larger contacts may have multiple peak nodes or single peak nodes that jitter throughout the touch. In the former multiple peaks may generate the identification of multiple contacts when only one larger contact exists. In the latter the jitter may create position noise and cause difficulty for a user in interacting with the array. illustrates an embodiment of a 20 20 array with three touches . Touches and are standard touches including a single peak node and respectively and several other active nodes. Touch is a larger touch which characterized by two peak nodes either persistent or alternating. Touches and are illustrated in . In the embodiments of 3 3 matrices of nodes and are used to calculate the centroid positions and . 3 3 matrices and are defined by first identifying peak nodes and and including the eight surrounding nodes. Centroids and for touches and respectively are given by 

In one embodiment if the nodes in the closed area is greater than the threshold number the touch may be ignored altogether. In another embodiment if the number of nodes in the closed area is greater than the threshold area the threshold may be increased such that the number of nodes is decreased. In this embodiment a large touch that is normally too large of the array may not be ignored but rather its centroid may be calculated from a smaller group of sensors.

For touches that are far too large to be detected as an activation such as when a palm or face is in contact with the array it is important that these touches be ignored. illustrates an embodiment of a 20 20 array wherein two touches are detected. The first touch may be a large touch for which the number of active nodes is less than the threshold number. The second touch may be a large touch for which the number of active nodes is far greater than the threshold number. Touch may be a user s palm or face. Touch may be a standard large touch for which the centroid should be calculated according to the method shown in . To ensure touch is not detected as a normal touch or a large touch it may be ignored according to the method shown in .

The array may first be scanned in block by capacitance sensor from . The capacitance values may be stored for each node. The capacitance values may then be compared to the capacitance values for each of the neighboring nodes and peak nodes identified in block . A closed area may then be defined for each peak node in block . The closed area may be defined as including all adjacent nodes that have capacitance values greater than or equal to a fraction the capacitance value of the peak node. For each closed area the active nodes may be counted in block and compared to a first threshold in decision block . The first threshold may be indicative of a number of nodes that is too great to be a real touch on the array. If the number of nodes in the closed area is greater than the first threshold no detection may be output in block . If the number of nodes in the closed area is less than the first threshold the number may then be compared to a second threshold in decision block . The second threshold may be indicative of a large touch as shown in touch . If the number of nodes in the closed area is greater than the second threshold the centroid for the entire closed area all of the nodes may be calculated in block . If the number of nodes in the closed area is not greater than the second threshold the peak node may be used to define a matrix of sensors around the peak node in block . The matrix may be a 3 3 matrix in one embodiment. In another embodiment the matrix may be a 5 5 matrix or some other number of nodes. One of ordinary skill in the art would understand that the number of sensors in the matrix defined by the peak node is dependent on the application requirements the processing capabilities of the sensing and processing circuits and the physical construction of the array. After a matrix is defined in block the centroid for the peak node may be calculated in block .

When multiple contacts are present on the array it is important to identify each contact and maintain that identification as one or more of them moves while maintaining contact with the array. Several methods may be used for tracking contacts including least squares probability and velocity acceleration calculation. One embodiment for tracking contacts may use the Hungarian Algorithm. The Hungarian Algorithm is combinatorial optimization algorithm which solves the assignment problem in polynomial time. A combinatorial optimization algorithm seeks to minimize or maximize a real function by systematically choosing the values of real or integer variables from within an allowed set. In the area of capacitance sensing on multitouch arrays the assignment problem is which identification to assign to each touch between time t and time t.

First the square of the distances between each touch at time t and each touch at time t is calculated as 

A matrix of the squares of distances between touches at time t and t is then constructed according to . The lowest number for each column is subtracted from the other cells in each column generating non negative cells in the matrix with at least one zero per column according to . An zero cell in the first column is marked. If there is a zero in the second column in a row where there is not already a marked cell that cell is also marked. The third column is then analyzed. In the data shown in the zero cell in the third column shares a row with a previously marked cell in the second column so it is not marked. If the number of zero cells with a mark is equal to the number of touches than the process is finished. However in the example shown here there are only two marked cells at this point so the analysis must continue. Also shown in each of the columns with marked cells is marked with a . If there are zero elements in the unmarked column as shown in there are two possible situations the row contains an unmarked zero and a marked zero or the row contains no marked zero. If the latter is true the zero cell is marked with a second mark. If the former is true mark the row that has both the marked and unmarked zero cell and mark the unmarked zero cell with a second mark as shown in . As shown in cells that do not have a marked row or a marked column are identified bold solid line and cells that have both a marked row and a marked column are identified bold dashed line . The cell from the former with the lowest value is subtracted from all of the cells in the former and added to all the cells in the latter resulting in the matrix shown in . The procedure illustrated by the matrices shown in is repeated until the number of zeros with the second mark is equal to the number of touches N as shown in with J being the final resulting matrix. Each zero is then marked shaded cells shown in and the zeros with the first mark and the second mark are swapped so that each zero cell that had a first mark now has a second mark and vice versa as shown in . The cells marked with the first mark in show which of the touches at time t correspond to which touches at time t. For this analysis 1 corresponds to 1n 2 corresponds to 2n and 3 corresponds to 3n.

While the example of the Hungarian algorithm shown above is used to track three touches between time t and t it would be clear to one of ordinary skill in the art that as few as two touches may be tracked using the Hungarian algorithm. The upper limit on the number of touches that may be tracked is limited only by the processing capability of the processor. In a standard touchscreen these touches may number as many as ten corresponding to each finger on two hands. However more than ten touches may be implemented as well using a much larger matrix.

While touch locations are tracked only with regard to a single dimension x is shown in the above example it would be clear to one of ordinary skill in the art to use the Hungarian algorithm to track touch locations along the y axis as well. Furthermore in applications capable of detecting z axis location such as proximity sensing capacitance sensing field effect sensing and optical scanning applications a third axis may also be processed.

In a self capacitance sensing system similar to that shown in the response of the sensors to conductive object moving across the array has a more Gaussian response. That is the interaction between the conductive object and the sensor has a peak value as the object is directly over the sensor and tapers as the object moves away until there is virtually no interaction between the object and the sensor.

In one embodiment the natural logarithm function may be calculated by the processor. This may require more processing capability than is available in many touchscreen controllers. In another embodiment the natural logarithm function may be implemented as a look up vector.

While the embodiment shown in illustrates the use of three sensors in the Gaussian curve interpolation it would be clear to one of ordinary skill in the art that more than three sensors might be used. In one embodiment five sensors may be used. The decision to use more or fewer sensors in the Gaussian curve interpolation is based on the sensor pitch the anticipated size of the conductive object the resolution of the capacitance sensing circuit and the required output resolution of the capacitance sensing array.

In self and mutual capacitance sensing array a baseline value is subtracted from the measured capacitances of each sensor to create a compensated value. This compensated value is used to interpolate the position of a conductive object on the capacitance sensing array. illustrates an array of nine sensors . Each sensor has a non zero capacitance value with the peak sensor identified as . A threshold may be applied to the sensors and the capacitance values below threshold subtracted from capacitance values for sensors . This is shown in wherein the shaded portions of sensors are subtracted from the capacitance values to yield the values illustrated in . In there are seven sensors that have a capacitance value above the threshold . Only a subset of these sensors may be used to calculate the position of the object on the array the capacitance values near the ends of the distribution are wasted both on those sensors and on the sensor that are used in the position calculation.

While the embodiment shown in shows five sensor used in the calculation of the centroid it would be clear to one or ordinary skill in the art to use more or less than five sensor depending on the design requirements. The above equation uses only three sensors but could be expanded to five or more sensors in one embodiment if required by the application.

Certain embodiments may be implemented as a computer program product that may include instructions stored on a computer readable medium. These instructions may be used to program a general purpose or special purpose processor to perform the described operations. A computer readable medium includes any mechanism for storing or transmitting information in a form e.g. software processing application readable by a machine e.g. a computer . The computer readable storage medium may include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory or another type of medium suitable for storing electronic instructions.

Additionally some embodiments may be practiced in distributed computing environments where the computer readable medium is stored on and or executed by more than one computer system. In addition the information transferred between computer systems may either be pulled or pushed across the transmission medium connecting the computer systems.

Although the operations of the method s herein are shown and described in a particular order the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operation may be performed at least in part concurrently with other operations. In another embodiment instructions or sub operations of distinct operations may be in an intermittent and or alternating manner.

In the foregoing specification the invention has been described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

