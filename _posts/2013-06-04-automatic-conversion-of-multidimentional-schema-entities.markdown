---

title: Automatic conversion of multidimentional schema entities
abstract: In various embodiments, a system receives a multidimensional schema entity of a first type and converts the multidimensional schema entity to a second type. The system receives user input and converts the multidimensional schema entity to the second type based on the input received from the user. In various embodiments, the system creates multidimensional schema entities automatically. In various embodiments, a method for converting multidimensional schema entities from one or more types to one or more other types is described. In various embodiments, a multidimensional schema entity is created automatically based on input from two other multidimensional schema entities. In various embodiments, two multidimensional schema entities are merged in one multidimensional schema entity. In various embodiments, multidimensional schema entities are used to generate a report. Queries extract data from the multidimensional schema entities and load it in the report. The report is presented on a graphical user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949291&OS=08949291&RS=08949291
owner: SAP SE
number: 08949291
owner_city: Walldorf
owner_country: DE
publication_date: 20130604
---
This application is a divisional application of U.S. patent application Ser. No. 12 959 381 filed Dec. 3 2010.

The field relates generally to business intelligence applications and more specifically to converting multidimensional schema entities from one type to another.

When conducting business activities companies create and process data. Such data can be used as a basis for making decisions. Business Intelligence BI collates and prepares enterprise data. By analyzing the data using BI tools insights that support a decision making process within a company may be obtained. Among other things BI enables the creation of reports about business processes and their results and analysis and interpretation data about customers suppliers internal activities and others.

In business software systems information is often modeled using multidimensional objects that store one or more dimensions of one or more types of information. Such multidimensional objects may be classified in one or more types according to one or more characteristics or parameters the objects possess.

Embodiments of techniques for automatic conversion of multidimensional schema entities are described herein. In the following description numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention can be practiced without one or more of the specific details or with other methods components materials etc. For example reference to vertical or horizontal direction herein can be seen as a convention and changed when practicing the invention. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

In various embodiments Business Intelligence BI may refer to a category of software systems and applications used to improve business enterprise decision making and governance. Such software tools provide techniques for analyzing and leveraging enterprise applications and data. These tools are commonly applied to financial human resource marketing sales service provision customer and supplier analyses and others. More specifically these tools may include reporting and analysis tools to analyze forecast and present information content delivery infrastructure systems for delivery storage and management of reports and analytics data warehousing systems for cleansing and consolidating information from disparate sources and integration tools to analyze and generate workflows based on enterprise systems. Business Intelligence tools work with data management systems such as relational databases or On Line Analytic Processing OLAP systems used to collect store and manage raw data and transactional enterprise systems that generate data.

In various embodiments a data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multidimensional e.g. OLAP object oriented databases and the like. Further data sources may include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open DataBase Connectivity ODBC and the like. Data sources may also include a data source where the data is not stored like data streams broadcast data and the like.

In various embodiments business intelligence applications model complex data sets in multiple dimensions. A star schema also referred to as dimensional model is a collection of data sets where one data set may be a fact table of business data and the fact table may be related to multiple data sets representing numeric facts across one or more dimensions. For example a star schema may include business data related to customers products sales regions and others. Sales data may thus be described in relation to products and customers across the dimension of time. Using star schemas multidimensional tables may be created in a relational database.

A dimension is a line in a real or abstract space. An example of a real space dimension is a pair of anti parallel cardinal points on a compass e.g. North and South North northwest and South southeast. Another real dimension is time. An example of an abstract space dimension is a list of stores. The dimension is abstract because the list can be ordered alphabetically by name by store number by distance from head office etc. Examples of dimensions include region store year customer employee product line and the like.

In various embodiments a dimension object models a set of business entities of a common nature such as a geographical location a product or group of products and a time period that are used to structure an analysis. Dimension objects can have properties e.g. attributes or details attached to them. For instance a Customer could have an address. Dimension objects can be structured into OLAP hierarchies. For instance Countries contain States which contain Cities. When a dimension object is directly used in a report what appears is not the business entity but an attribute such as a unique name or caption designed to be user friendly.

In various embodiments business intelligence objects that store physical data may be referred to as information providers. Such information providers may be of one or more types for example info cubes data store objects DSO and information objects hereinafter also referred to as info objects .

In various embodiments an information object is a collection of one or more pieces of metadata. The metadata describes one or more aspects of a component in a system. Information objects may be implemented in binary or human readable format. In various embodiments the information objects may be implemented in eXtensible Markup Language XML .

In various embodiments an info cube may be a collection of information objects and each information object may store relational business data. Info cubes may be filled with data from one or more data sources. An info cube describes a self contained dataset from the reporting view for example for a business oriented area. An info cube is a set of relational tables that are created in accordance with a star schema a large fact table in the center with several dimension tables surrounding it.

In various embodiments an operational data store integrates data from different data sources for reporting purposes. In an information technology landscape many different data sources may exist such as databases legacy systems and others.

In various embodiments a data transfer process DTP specifies how data may be transferred from a source object to a target object in a BI system. For example a DTP may specify a source object as a source to obtain data from a target object to load data in and one or more rules to transform the data if the source object and the target object have different structures.

In various embodiments a transformation is a way to consolidate cleanse and integrate data. A transformation may include one or more rules specifying how data may be transformed from a source object to a target object along a data flow.

Info cube ODS and multi provider may be referred to as information providers collectively. Each type of information provider has their own structure semantics and data management procedures. Thus if an information provider has to be merged with another information provider or transformed from one type to another type a lot of effort may be required to analyze the input and output information providers and apply data transformations.

At process block a target object with a default structure is created. This target object is also called target info cube or target information provider.

At process block metadata per the operation is processed. Metadata processing may involve analyzing metadata in a source information provider i.e. source object and reorganizing the structure of such metadata to fit a target information provider i.e. target object . Metadata processing may involve classifying metadata elements based on type of metadata. In one embodiment the source information provider metadata elements are classified as follows all character elements as characteristics numeric elements as measures date element as date and unit elements as unit of measure UOM . Upon classification the source metadata elements are associated to the newly created target info cube target object . In one embodiment the metadata elements are allowed to be modified and rearranged by the users. Further metadata processing may involve creating one or more data transformation processes to specify how data should be loaded in a source object or loaded from a source object to a target object. In one embodiment transformation and mappings are created between the source information provider and the newly created target info cube target object .

At process block the target object is validated. Such validation may include for example validating that a newly created target object has a structure to fit data loaded from a source object. In another example such validation may include checks to determine if the data that is to be loaded may fit into the target object structure or if modifications are required. At process block the target object is deployed on the system. Then at block the data load process into the target object starts. The data load process strictly follows data integrity aspects of the data during conversion. At process block the results of the operation are verified.

The method for automatic conversion as described in is a single click operation. The conversion is fully automated process. No preliminary work is involved in understanding the source information providers and transforming them in the best way to the target info cube as one click conversion. The conversion uses best case default logic. During the conversion information is maintained about the data transfer process the transformation and its mappings to the source information providers. The existing data in the source information providers is available in the target info cube in its integrity. The one click conversion is a complete process of transformation of existing information providers to a target info cube. The target info cube is created with no user intervention. User verification and modification is allowed only if required.

The methods as described in A B and have a number of advantages. For example human effort is not needed to understand the existing info cube and how to translate the info cube to a DSO or to merge info cubes. Further human intervention is not needed to maintain information about a current DTP a current transformation and their replication to a newly created DSO after the conversion.

Also the method as described in A B and ensures that existing data and data flow are available in a newly created e.g. converted DSO thus facilitating data integrity.

Some embodiments of the invention may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components may be implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. Examples of computer readable media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment of the invention may be implemented using Java C or other object oriented programming language and development tools. Another embodiment of the invention may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open DataBase Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of and examples for the invention are described herein for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather the scope of the invention is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

