---

title: Natural language-aided hypertext document authoring
abstract: Natural language (NL) processing of NL commands is performed to determine one or more of (i) content to be included in a hypertext document, (ii) a layout for the hypertext document, or (iii) parameters corresponding to behavior of the hypertext document. Performing the NL processing includes: determining assumptions concerning one or both of (a) ambiguities associated with the NL commands or (b) information necessary for creating the hypertext document not specified by the NL commands. The assumptions correspond to the one or more of (i) content to be included in the hypertext document, (ii) the layout for the hypertext document, or (iii) the parameters corresponding to behavior of the hypertext document. Hypertext document code or data for displaying the hypertext document is generated based on the NL processing of the NL commands including the determined assumptions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09594737&OS=09594737&RS=09594737
owner: Wolfram Alpha LLC
number: 09594737
owner_city: Champaign
owner_country: US
publication_date: 20131209
---
The present disclosure generally relates to systems that enable generation of hypertext language documents such as web pages using natural language input.

Web documents may contain content markup language e.g. Hypertext Markup Language HTML Extensible Hypertext Markup Language XHTML Extensible Markup Language XML etc. elements stylesheets e.g. Cascading Style Sheets CSS scripts e.g. JAVASCRIPT etc. . Markup language elements and scripting language statements must be written in a precise syntax so that a web browser can correctly render the corresponding web pages. When there are errors in the syntax of the markup language elements and or scripting language statements the web browser may not interpret the markup language elements and or scripting language statements correctly and or may render a web page in a manner that was not intended by the author of the markup language file. For a novice learning the correct syntax of web page code is burdensome and time consuming. Even for an experienced designer creation of a web page that works correctly across myriad web browsers operating systems and devices is often very time consuming.

WYSIWYG what you see is what you get website builders are tools that provide a visual interface for website design that is the user of a WYSIWYG website builder is not required to learn code. Such website builders have a gentle learning curve and allow novices to build a website and get it running live on the Internet quickly. Website builders however are inflexible and have limitations with respect to creating web pages that differ from a fixed set of templates. Additionally the code automatically generated by website builders is often inefficient non semantic and or invalid. For example Microsoft Frontpage and Adobe Dreamweaver are WYSIWYG web editors whose generated source code output may be neither human readable nor human editable.

On the other hand web editors are tools to facilitate manual construction of websites and are highly flexible as compared to website builders. Web editors however typically require users to have significant knowledge of web page coding and languages e.g. HTML XML CSS JAVASCRIPT etc. .

In some embodiments a method of creating or modifying a hypertext document comprises receiving at one or more computer processors natural language NL commands describing one or more of i content of the hypertext document ii a layout of the hypertext document or iii behavior of the hypertext document and performing at one or more computer processors NL processing of the NL commands to determine one or more of i content to be included in the hypertext document ii a layout for the hypertext document or iii parameters corresponding to behavior of the hypertext document. Performing the NL processing includes determining at one or more computer processors assumptions concerning one or both of a ambiguities associated with the NL commands or b information necessary for creating the hypertext document not specified by the NL commands wherein the assumptions correspond to the one or more of i content to be included in the hypertext document ii the layout for the hypertext document or iii the parameters corresponding to behavior of the hypertext document and generating at one or more computer processors hypertext document code or data for displaying the hypertext document wherein generating the hypertext document code or data is based on the NL processing of the NL commands including the determined assumptions.

In another embodiment a system comprises one or more processing devices configured to perform the method of the previous paragraph. In another embodiment machine readable instructions that when executed by one or more processing devices cause the one or more processing devices to perform the method of the previous paragraph are stored on one or more computer readable media.

In yet another embodiment a method of modifying a hypertext document includes receiving at one or more computer processors natural language NL commands describing one or more of i a change of content of the hypertext document ii a change of layout of the hypertext document or iii a change of behavior of the hypertext document and performing at one or more computer processors NL processing of the NL commands to determine one or more of i content to be included in the hypertext document or content in the hypertext document to be modified ii a change to a layout of the hypertext document or iii a change of parameters corresponding to behavior of the hypertext document. Performing the NL processing includes determining at one or more computer processors assumptions concerning one or both of a ambiguities associated with the NL commands or b information necessary for modifying the hypertext document not specified by the NL commands wherein the assumptions correspond to the one or more of i content to be included in the hypertext document or content in the hypertext document that is to be modified ii the change of the layout for the hypertext document or iii the change of the parameters corresponding to behavior of the hypertext document and modifying using one or more computer processors hypertext document code or data in the hypertext document wherein modifying the hypertext document code or data is based on the NL processing of the NL commands including the determined assumptions.

In another embodiment a system comprises one or more processing devices configured to perform the method of the previous paragraph. In another embodiment machine readable instructions that when executed by one or more processing devices cause the one or more processing devices to perform the method of the previous paragraph are stored on one or more computer readable media.

The system of and other methods techniques systems are described with respect to web pages merely for purposes of illustration. Similar systems techniques etc. may be utilized to create and or modify other types of hypertext documents.

The system includes an input module for receiving NL commands from a user. For example the system may be configured to generate a graphical user interface GUI having a text box in some embodiments and the input module may be configured to receive NL commands from the text box. As another example the input module may be configured to receive NL commands that were generated from an audio input in some embodiments. For example a user computer may include an audio input device coupled to a speech recognition system and the input module may be configured to receive NL commands from the speech recognition system. The input module may provide elementary error and consistency checking for example to help ensure that at least a minimum input is present or prompting a user with an error when a length limit is exceeded.

The system also includes an NL processing module configured to analyze and process NL commands received via the input module . The NL processing module may include a parser configured to examine an input to extract keywords group words into phrases identify numerical expressions categorize data etc. for example. In some embodiments the parser may perform an initial go no go analysis on the keywords phrases or numerical expressions to determine if there is enough information to proceed to a further step. When there is not enough information to make even a cursory pass at further analysis the parser may cause the user to be prompted for additional information such as information that may clarify the formula desired by the user. Alternatively the system may generate a message that the system cannot interpret the input.

In some embodiments the parser may take an initial input and create tokens and then assemble the tokens into one or more expressions in a precise syntax. In some embodiments the parser may perform additional processing such as attempting to identify phrases attempting to rearrange tokens to see if the rearrangements match something that the parser understands such as a phrase. For instance the parser may utilize algorithmic rearrangements of the input. Also in some embodiments the parser may cause the user to be prompted to rephrase the input. Then the parser may analyze the original input in conjunction with the rephrased input. Further the parser may utilize machine learning techniques to identify language processing algorithms that work better than others in some embodiments.

The one or more expressions generated by the parser may be provided to a web page data generator . The web page data generator is configured to apply the one or more expressions generated by the parser and determine one or more actions to be performed on a web page data document such as generating and adding web page data to the document or modifying existing web page data in the document . The web page data may include content markup language elements stylesheets and or scripting language statements corresponding to one or more web pages. For example a web browser may render a web page using the web page data in some embodiments and or implementations. As another example a web server may use the web page data to dynamically generate web pages that in turn may be rendered by a web browser.

In some embodiments the web page generation system may include a web browser configured to render one or more web pages corresponding to the web page data and the rendered web page s may be displayed on a display device communicatively coupled to the web page generation system . This may be useful for example to enable a user to visualize the web page s that results from the current web page data visualize how changes to the web page data affect the resulting web page s etc. Similarly in some embodiments the web page generation system may include web server functionality associated with generating using the web page data one or more dynamic web pages that in turn may be rendered by the web browser .

The web page data generator includes a control module generally configured to analyze the one or more expressions generated by the NL processing module and map the one or more expressions to one or more of i one or more markup language elements ii one or more scripting language statements iii one or more stylesheet instructions iv content to be added to the web page data etc. in some embodiments. For example the control module may be configured to recognize NL commands as corresponding to particular tasks associated with web page design and to construct based on such recognition one or both of i web page code e.g. including one or more of a one or more markup language elements b one or more scripting language statements c one or more stylesheet instructions d content to be added to the web page data etc. to be added to the web page data document or ii web page code to replace existing web page code in the web page data document . For example in some embodiments the control module may access a mapping of NL commands to web page coding actions and or data e.g. web page content . In some embodiments at least some of the mapping is preconfigured. In some embodiments the control module is configured additionally or alternatively to adapt the mapping over time and or with respect to a particular web page or pages being developed. The mapping may indicate web page coding actions such as one or more of adding specified content to a web page specifying or changing a layout of the web page specifying or changing parameters corresponding to behavior of the web page etc. in various embodiments. The mapping may be stored in a memory of the web page generation system in some embodiments and or computed by parsing a specification such as an HTML 4.01 doctype declaration http www.w3.org TR html4 strict.dtd or using another suitable method such as http www.w3.org html wg drafts html master syntax.html overview of the parsing model.

In some embodiments the mapping indicates web page code e.g. including one or more of a one or more markup language elements b one or more scripting language statements c one or more stylesheet instructions d content to be added to the web page data etc. that correspond to different actions. For example the mapping may indicate that an action such as Add Image corresponds to an HTML element . The mapping may indicate multiple different code options for a particular action. For example the mapping may indicate that an action such as Add Button corresponds to an HTML element as well as to an HTML element . The mapping may be stored in a memory of the web page generation system in some embodiments.

In some embodiments the control module is configured to use the mapping to analyze the one or more expressions generated by the NL processing module and to map the one or more expressions to one or more of i one or more markup language elements ii one or more scripting language statements iii one or more stylesheet instructions iv content to be added to the web page data etc. in some embodiments.

In some embodiments the control module may be configured to determine parameters attributes variables etc. that are to be included in the web page code. For example the control module may be configured to determine values of one or more parameters that are to be included in the web page code based on information in the NL input and or the one or more expressions generated by the NL processing module . As another example the control module may be configured to make assumptions regarding values of one or more parameters that are to be included in the web page code. Additionally or alternatively the control module may be configured to prompt a user for information for determining values of one or more parameters that are to be included in the web page code. In some embodiments the control module may be configured to determine which parameters are mandatory versus which parameters are optional and may generate web page code without determining values of some or all of the optional parameters.

The control module is coupled to an editor . The editor is configured to receive file editing commands from the control module and in response modify the web page data document accordingly. For example the control module may generate instructions that indicate a particular node to be added to the document and a location in the document at which the node should be added. Continuing with this example the control module may provide the instructions to the editor and the editor then implements the instructions e.g. inserts the indicated node to the parsed document at the specified location. Similarly the control module may generate instructions that indicate a particular node already in the document and how the node should be modified. Continuing with this example the control module may provide the instructions to the editor and the editor then implements the instructions e.g. parses the document and modifies the indicated node as specified.

The web page data generator may include a context module coupled to the control module . The context module may be configured to determine context information and provide the context information to the control module . The control module may then use the context information when analyzing the one or more expressions generated by the NL processing module and or when constructing web page code. For example the context information may assist the control module in determining how to interpret NL commands and or how to map NL commands to web page coding actions. The context module may analyze over time the expressions generated by the NL processing module and or interpretations of the expressions generated by the control module . As an illustrative example if a user issued a first NL command move button to right and then a second NL command move it a little more the context module may analyze such commands and make one or more assumptions such as it in the second NL command refers to the button in the first NL command and move . . . a little more in the second NL command refers to directional instruction in the first NL command and thus move . . . a little more should be interpreted as move . . . a little more to right where a little more is interpreted in the context of the document to mean a small percentage expressed in a relative unit of measurement such as an em e.g. move 1.2 ems or a more absolute unit of measurement such as a pixel e.g. move 10 pixels . Similarly an analysis of earlier instructions may help to interpret button in the first NL command. For example if there are already multiple buttons in the web page being constructed the context module may interpret button in the first NL command as the most recently referred to button in earlier NL commands.

Similarly in some embodiments the context module may be configured to analyze existing web page data including parsing existing web page data in some embodiments. For instance continuing with the illustrative example above the context module may parse the web page data and identify code in the web page data document that corresponds to layout placement of the relevant button. The context module may provide an indication of a location of the identified code to the control module . The context module may also provide the identified code or values of relevant parameters in the identified code to the control module . The control module may utilize the information provided by the context module to appropriately instruct the editor module to modify the identified code. For instance continuing with the illustrative example above the control module may instruct the editor module to appropriately modify existing code in the web page data document that corresponds to placement of the relevant button.

In some embodiments the context module may be configured to apply learning techniques to adapt the mapping based on usage by a particular user a group of users etc. For example a particular user may utilize NL phrases to indicate code actions where the NL phrases of the user are generally different than NL phrases used by a wider group of users. In some embodiments the context module may be configured with a default mapping of NL phrases to code actions based on an analysis of a population of potential users for example and may apply learning techniques to adapt the mapping to accommodate different NL phrases utilized by a particular user a small group of users a large population of users etc.

In some embodiments the context module may be configured to analyze other documents a file storage system etc. with respect to content that may be added to linked to etc. the web page data document . For example the web page generation system may include or be communicatively coupled to one or more machine readable storage devices that store documents files etc. organized according to a file storage system. Such documents files etc. may have content data that a user wants incorporated into a web page and the context module may be configured to analyze such files and or storage system for the purpose of for example providing the content data or links to files in which the content data is included to the control module . The control module may utilize the information provided by the context module to appropriately instruct the editor module parse the document and to insert the content data or links to the content data in the web page data document . For instance continuing with the illustrative example above the control module may instruct the editor module to appropriately modify existing code in the web page data document that corresponds to placement of the relevant button.

In some embodiments the context module may be configured to analyze user activity to determine context information. For example the web page generation system may include or be communicatively coupled to a user input device such as a mouse a trackball etc. and the context module may be configured to analyze use of the user input device to generate context information. For example the context module may be configured to analyze a location of a mouse pointer or the like to determine where attention of the user is focused. This may be helpful for example in making an assumption regarding to which object an NL command is referring e.g. move it to the right . Similarly the web page generation system may include or be communicatively coupled to one or more sensors configured to track eye movement hand gestures finger placement etc. and the context module may be configured to analyze use of the user input device to generate context information. For example the context module may be configured to analyze eye focus information hand gesture information finger placement information etc. to determine where attention of the user is focused. This may be helpful for example in making an assumption regarding to which object an NL command is referring e.g. move it to the right .

In some embodiments the control module may be configured to determine assumptions concerning one or more of i ambiguities associated with the NL commands ii information necessary for creating the web page not specified by the NL commands etc. For instance continuing with the illustrative example above in the NL command move it a little more it is not clear what it refers to it is not clear in which direction it is to be moved and it is not clear how far is further. Thus the control module may be configured to make assumptions regarding what it refers to the direction it is to be move and how far it is to be moved. In some embodiments the control module may be configured to make assumptions based on context information based on adjacent or similar elements in the web page document . In some embodiments the control module may be configured to make assumptions based on context information provided by the context module . In some embodiments the control module may be configured to make assumptions additionally or alternatively based on other information such as a knowledge database e.g. including information regarding web page design techniques historical usage information etc. In general the control module may be configured to make assumptions that correspond to the one or more of i content to be included in the web page ii the layout for the web page iii parameters corresponding to behavior of the web page etc.

The system may be utilized in some embodiments to modify an already created web page e.g. created using another type of system such as a prior art web site builder or web editor . For example the document may correspond to an already created web page and the context module may be configured to analyze the document and to provide context information. The system may be configured such as described above to facilitate a user s modifications of the document using NL commands.

In some embodiments the system may be implemented at least in part on a user computer such as a desktop computer a laptop computer a tablet computer a mobile telephone etc. For example one or more components of the system may be implemented using one or more processors executing software and or firmware machine readable instructions. GUIs generated by the system may be displayed on one or more display devices of the user computer. In some embodiments the system may be implemented as a client server system and or using cloud computing techniques. For example at least some components of the system may be implemented on one or more server devices communicatively coupled to a user computer via a communications network such as a local area network LAN a metropolitan area network MAN a wide area network WAN a mobile communications network the Internet etc. For example one or more components of the system may be implemented using one or more processors of one or more servers the one or more processors executing software and or firmware machine readable instructions. Thus in some embodiments the user computer may include a network interface device configured to permit communication via the communication network with the one or more servers. Similarly the one or more servers may each include a network interface device configured to permit communication via the communication network with the user computer and or others of the one or more servers.

In some embodiments the hypertext document may be stored on a storage device e.g. a disk drive a FLASH device a RAM etc. of or communicatively coupled to the user device. In some embodiments the hypertext document may be stored on a storage device e.g. a disk drive a FLASH device a RAM etc. of or communicatively coupled to the one or more server devices such as in a client server and or cloud computing implementation.

At block an NL command is received. The NL command may describe at least at a general level one or more of i content of a web page ii a layout of the web page iii behavior of the web page etc. Referring to the block may be implemented by the input module for example.

In some embodiments the NL command may have been entered by a user as text using for example a keyboard a touch screen etc. In some embodiments the NL command may have been entered by a user using speech recognition techniques.

At block NL processing of the NL command is performed to determine one or more of i content to be included in the web page ii a layout for the web page iii parameters corresponding to behavior of the web page etc. Block may be performed by the NL processing module and the control module in some embodiments and block may include processing such as described above with respect to the NL processing module and the control module in some embodiments.

For example in some embodiments the NL processing includes determining one or more assumptions concerning one or more of i ambiguities associated with the NL command ii information not specified by the NL command but necessary for performing a web page coding action etc. In some embodiments the assumptions correspond to the one or more of i content to be included in the web page ii a layout for the web page iii parameters corresponding to behavior of the web page etc.

At block one or more web page coding actions are taken based on the NL processing of block . The one or more web page coding actions may include writing to the document one or more of i one or more markup language elements ii one or more scripting language statements iii content or links to content etc. Block may include determining the one or more of i one or more markup language elements ii one or more scripting language statements iii content or links to content etc. based on the NL processing of block . For example a web page coding action determined at block may be mapped to markup language elements scripting language statements etc.

In an embodiment the control module may determine values of at least the required attributes i.e. src and alt of the tag. For example the control module may determine that parameter values for src and alt cannot be determined from information in the NL input and or the one or more expressions generated by the NL processing module . The control module may also determine that parameter values for src and alt cannot be assumed. Thus in one embodiment the control module may prompt the user to provide values for at least the attributes src and alt.

In some embodiments the GUI display or another suitable display prompts the user in a suitable manner for providing parameter values for optional attributes of the tag.

Next the control module generates using the determined parameter values semantically valid HTML text such as 

In an embodiment the control module assigns a unique identifier e.g. id to the generated HTML text. More generally the control module may assign a respective unique identifier to each node or element in the web page. This may allow the control module to later identify particular nodes or elements in the document when for example the control module needs to modify an existing node element. Additionally this may allow the control module to refer to the node when generating CSS rules.

Having generated semantically valid HTML text the control module parses the generated HTML into a node and queues the node for insertion at an as yet unspecified location in the document object .

Continuing with the interpretation of the user s input command the parser and or the control module determines that the NL phrase to upper right corner generally corresponds to placement of the image within the web page. Additionally the control module may make assumptions about an exact placement of the image. Thus the control module using i the NL phrase and or one or more expressions generated by the NL processing module ii the mapping and iii its assumptions determines that an appropriate CSS rule for placement of the image should include a declaration value float right . Additionally the control module determines that the CSS rule is associated with the generated HTML text corresponding to img and id 1 and therefore determines that the CSS rule should have a selector of img 1 . Thus the control module generates a semantically valid CSS rule such as 

Having generated the semantically valid HTML text and the associated semantically valid CSS rule the control module determines a location in the document at which to insert HTML text and CSS rule and instructs the editor module to insert the HTML text and CSS rule at the specified location.

Further the system may make one or more other initial assumptions in some embodiments. For example the NL command does not specify a shape or size of the button. Thus the system may make initial assumptions regarding the shape and size of the button. Similarly the NL command does not specify a location of the button. Thus the system may make initial assumptions regarding where the button will be located. Additionally the NL command does not specify whether the button should include text and if so what text should be included. Thus the system may make initial assumptions regarding text included in the button.

In some embodiments the control module may utilize a GUI display similar to GUI display to prompt the user to provide values of required and optional in some embodiments and or scenarios attributes of a selected HTML element e.g. or .

In a manner similar to the technique discussed above with respect to the control module may generate a button node e.g. semantically valid HTML text and a semantically valid CSS rule for placement of the button node. For example the button node is assigned a unique identifier. Having generated the semantically valid HTML text and the associated semantically valid CSS rule the control module determines a location in the document at which to insert HTML text and CSS rule and instructs the editor module to insert the HTML text and CSS rule at the specified location.

Additionally the system makes an assumption regarding a new location for the button . For example the NL command does not specify an exact new location for the button merely that it should be moved to the right. Thus the system makes an assumption that the button should be moved half way between its current location and a right edge of the web document . The system may generate appropriate CSS code to change the location of the button and appropriately modifies the document . For example the control module may use the unique identifier assigned to the button to identify the CSS rule in the document that corresponds to the button and the control module may instruct the editor to appropriately modify the CSS rule replace the CSS rule with a new CSS rule etc.

The system may generate appropriate HTML code to change the shape of the button and appropriately modifies the document . For example the control module may use the unique identifier assigned to the button to identify the HTML text in the document that corresponds to the button and the control module may instruct the editor to appropriately modify the HTML text replace the HTML text with new HTML text etc.

As illustrated by the examples discussed with respect to the user need not enter commands in a precise syntax. Additionally the commands need not specify all parameters needed to generate the web document code because the system is capable of making assumptions regarding missing or ambiguous information. Thus the creation of web documents is simplified for novices yet flexibility such as provided by web editors is maintained.

In some embodiments the system is configured to assist a user in modifying an already existing web page document. For example the already existing web page document may have been created by the system or another system such as a WYSIWYG website builder or web editor. is a diagram of an example rendering of a web page that may have been developed by the system or another system such as a WYSIWYG website builder or web editor. The web page includes a heading a text box and a button .

In one illustrative example discussed with references to a user may enter an NL input such as focus the first input on load make first input be in input box focus first input on text box etc. The system interprets the NL input and determines that the user wishes that the default focus of the web page upon loading should be the text box . The control module may determine that there is a plurality of ways to provide the requested functionality to the web page . For example in an embodiment the control module may determine that jQuery JavaScript code can be utilized to provide the desired functionality. is an example of jQuery JavaScript code that the control module may determine is suitable for providing the desired functionality. The control module may use the mapping to generate the jQuery JavaScript code using the selected template. Thus in some embodiments the control module may use the mapping to translate an NL command to jQuery JavaScript code.

As another example the control module may determine that vanilla JavaScript code can be utilized to provide the desired functionality. is an example of vanilla JavaScript code that the control module may determine is suitable for providing the desired functionality. The control module may use the mapping to generate the vanilla JavaScript code using the selected template. Thus in some embodiments the control module may use the mapping to translate an NL command to vanilla JavaScript code.

As yet another example the control module may determine that the existing HTML code can be modified to provide the desired functionality. is an example of a modification of the HTML code that the control module may determine is suitable for providing the desired functionality. In particular the code has been modified to insert the element autofocus .

In an embodiment when the control module determines that there are a plurality of ways to provide requested functionality the control module may attempt to make an assumption regarding which way should be utilized. For example the control module may be configured to rank the efficiency of the ways e.g. in terms of code size speed etc. or some other suitable metric or metrics determine which ways support the largest number of browsers in current use etc. The control module may then choose one of the ways based on the efficiency ranking the numbers of supported browsers etc. In some embodiments the user may be informed of i the different ways and ii the chosen assumption and be given an opportunity to change the selection.

The control module then instructs the editor to add code e.g. code or code to the web document or modify existing code in the web document e.g. modify HTML code to provide the requested functionality.

In some embodiments the control module may be configured to prompt the user to select which one of the plurality of ways of providing the requested functionality should be utilized. For example the control module may generate a GUI to inform the user of the different ways and prompt the user to select one of the ways. In some embodiments the control module may be configured to prompt the user to provide more information to assist the control module in making a selection. For example the control module may generate a GUI to prompt the user for more information such as a ranking of importance by the user of factors such as code size number of browsers supported etc. In some embodiments the control module may be configured to eliminate some of the ways that may be utilized based on the efficiency ranking the numbers of supported browsers etc. Then the control module may be configured to prompt the user to select which one of the reduced number of ways should be utilized.

In another illustrative example discussed with references to a user may enter an NL input such as make background blue. The system interprets the NL input and determines that the user wishes that the background color of the web page should be blue. The control module may determine that there is a plurality of ways to provide the requested functionality to the web page . For example in an embodiment the control module may determine that jQuery JavaScript code can be utilized to provide the desired functionality. is an example of jQuery JavaScript code that the control module may determine is suitable for providing the desired functionality. The control module may select a jQuery JavaScript template from a list of jQuery JavaScript templates known to the system using the mapping and generates the jQuery JavaScript code using the selected template.

As another example the control module may determine that vanilla JavaScript code can be utilized to provide the desired functionality. is an example of vanilla JavaScript code that the control module may determine is suitable for providing the desired functionality. The control module may select a vanilla JavaScript template from a list of vanilla JavaScript templates known to the system using the mapping and generates the vanilla JavaScript code using the selected template.

As yet another example the control module may determine that HTML code can be utilized to provide the desired functionality. is an example of HTML code that the control module may determine is suitable for providing the desired functionality. The control module may selects a HTML element from a list of HTML elements known to the system using the mapping and determines that a tag will need a color attribute to set the background color. The control module may determine that the color attribute can be determined from information in the NL input and thus control module may utilize the term blue in the NL input as the required parameter.

In an embodiment when the control module determines that there are a plurality of ways to provide requested functionality the control module may attempt to make an assumption regarding which way should be utilized. For example the control module may be configured to rank the efficiency of the ways e.g. in terms of code size speed etc. or some other suitable metric or metrics determine which ways support the largest number of browsers in current use etc. The control module may then choose one of the ways based on the efficiency ranking the numbers of supported browsers etc. In some embodiments the user may be informed of i the different ways and ii the chosen assumption and be given an opportunity to change the selection.

The control module then instructs the editor to add code e.g. code code or code to the web document to provide the requested functionality.

In some embodiments the control module may be configured to prompt the user to select which one of the plurality of ways of providing the requested functionality should be utilized. For example the control module may generate a GUI to inform the user of the different ways and prompt the user to select one of the ways. In some embodiments the control module may be configured to prompt the user to provide more information to assist the control module in making a selection. For example the control module may generate a GUI to prompt the user for more information such as a ranking of importance by the user of factors such as code size number of browsers supported etc. In some embodiments the control module may be configured to eliminate some of the ways that may be utilized based on the efficiency ranking the numbers of supported browsers etc. Then the control module may be configured to prompt the user to select which one of the reduced number of ways should be utilized.

In another illustrative example a user may enter an NL input such as change doctype to html 5 make it html 5 make it an html 5 page etc. The system interprets the NL input and determines that the user wishes that a document type of the web document should be set to HTML5. The control module may use the mapping to determine that a doctype declaration is needed. The system may analyze the code to determine that the declaration in the web document corresponds to a doctype declaration and may determine that the declaration may be modified in order to set the document type of the web document to HTML5. For example the control module may determine that the declaration should be modified to 

The control module then instructs the editor to modify the declaration to set the document type of the web document to HTML5. 

In another illustrative example a user may enter an NL input such as change header to My Cool Search Page change wording of header to My Cool Search Page modify header to read My Cool Search Page etc. The system interprets the NL input and determines that the user wants to change the wording of an existing heading. The system may analyze the code to determine which heading in the code is to be changed. If there are multiple headings the system may make an assumption regarding which heading is to be changed and or may prompt the user with a GUI for example to provide more information to assist the system in selecting one of the headers using techniques such as described above.

In another illustrative example a user may enter an NL input such as make the font bigger make font bigger bigger font etc. The system interprets the NL input and determines that the user wants to change the font size of text of one or more existing elements of the web document . The system may analyze the code to determine which element or elements are to be changed. If there are multiple existing elements with text the system may make an assumption regarding which element is to be changed and or may prompt the user with a GUI for example to provide more information to assist the system in selecting one or more of the elements using techniques such as described above.

For example in one embodiment the control module may make the assumption that the user wants to change the text of the element most recently created or modified. For example the control module may assume that the heading is to be modified. The control module may generate using the mapping the following CSS code 

The control module then instructs the editor to add the appropriate code to the web document and may instruct the editor to re load or re evaluate the document if such a reloading is necessary to execute the newly inserted code.

In another illustrative example a user may enter an NL input such as post input box value to URL when button pressed post input box to URL when button activated post input box contents to URL when button selected etc. The system interprets the NL input and determines that the user wants a value received via an input box to be posted to a URL when a button is pressed. The system may analyze the code in an attempt to determine the input box to which the user is referring. If there are multiple existing input boxes the system may make an assumption regarding to which one of the input boxes is the user referring using techniques such as described above. Similarly if there are multiple existing buttons the system may make an assumption regarding to which one of the buttons is the user referring using techniques such as described above. In an embodiment because there is only one input box and one button the system may assume that the user is referring to the input box and the button . The system may determine that the desired functionality is when a user selects the button a value in the input box should be posted to a URL.

The control module may prompt the user to specify a URL to which to post. For example the control module may generate a GUI and cause the GUI to be displayed.

After the user indicates the URL the control module may generate code for providing the requested functionality. For example the control module may determine using the mapping a template for posting something to a URL based on an input event. Additionally the control module may generate using the template the code . Further the control module may determine that the code should be added to the web document . The control module then instructs the editor to add the code to the web document .

In yet another illustrative example a user may enter an NL input such as add a table with 8 rows and 3 columns insert table having 8 rows and 3 columns insert table with 3 columns and eight rows etc. The system interprets the NL input and determines that the user wants to add a table to the document . The system may make one or more assumptions and or prompt the user for additional information using techniques such as described above. For example the NL input does not specify a location on the rendered document for the table so the system may make an assumption regarding location e.g. after last already existing element on the rendered document or prompt the user to specify a location. Similarly the NL input does not specify content for the table so the system may make an assumption that the table is to be empty or prompt the user for more information. Also the NL input does not specify how borders lines in the table are to be displayed so the system may make an assumption that no borders lines in the table are to be shown or prompt the user for more information.

The control module may generate code corresponding to a table with eight rows and three columns. For example the control module may determine using the mapping HTML elements corresponding to a table. Additionally the control module may generate using the template the code . Further the control module may determine that the code should be added to the web document . The control module then instructs the editor to add the code to the web document .

In still another illustrative example a user may enter an NL input such as add a lorem ipsum paragraph insert lorem ipsum text etc. The system interprets the NL input and determines that the user wants to add a paragraph with a Lorem Ipsum passage. The system may make one or more assumptions and or prompt the user for additional information using techniques such as described above. For example the NL input does not specify a location on the rendered document for the paragraph so the system may make an assumption regarding location e.g. after last already existing element on the rendered document or prompt the user to specify a location.

The control module may generate code corresponding to a paragraph with a Lorem Ipsum passage. For example the control module may determine using the mapping a template for a paragraph of text. Additionally the control module may generate using the template the code . Further the control module may determine that the code should be added to the web document . The control module then instructs the editor to add the code to the web document .

In some embodiments the system may be configured to utilize different web document themes that specify color schemes fonts etc. and NL commands or phrases may be mapped to different themes. For example an NL command such as make it simpler may be mapped to a theme with a grayscale color scheme sans serif fonts etc. Thus in response to an NL command such as make it simpler the control module may modify the web document to utilize the grayscale color scheme sans serif fonts etc. in an embodiment. As another example an NL command such as jazz it up may be mapped to a theme with a bold color scheme drop shadow fonts stylized buttons etc. Thus in response to an NL command such as jazz it up the control module may modify the web document to utilize the bold color scheme drop shadow fonts stylized buttons etc. in an embodiment.

In some embodiments the system may be configured to interface with an external information source to permit the system to obtain information for use in generating web documents. For example in one embodiment the system may be configured to communicatively couple to the WOLFRAM ALPHA system provided by Wolfram Alpha LLC. For example the system may be configured to interface with the WOLFRAM ALPHA system using an application programming interface API . Thus in another illustrative example a user may enter an NL input such as add a picture of George Washington . The system interprets the NL input and determines that the user wants to add a picture to the web document . The system may also determine that the phrase George Washington may indicate the content of the picture. In an embodiment the system queries using the API the WOLFRAM ALPHA system with a query such as picture of George Washington . In response the WOLFRAM ALPHA system responds to the query with an answer which may include an image of George Washington e.g. a GIF image object . The system may parse the answer from the WOLFRAM ALPHA system for an image object and then add the image to the web document .

The system may make one or more assumptions and or prompt the user for additional information using techniques such as described above. For example the NL input does not specify a location on the rendered document for the image so the system may make an assumption regarding location e.g. after last already existing element on the rendered document or prompt the user to specify a location. Similarly if the answer from the WOLFRAM ALPHA system includes multiple image objects the system may make an assumption regarding which image object e.g. the first image object in the answer or prompt the user to specify which image object should be utilized.

More generally the system may be configured to utilize the external information source to assist with NL interpretation of NL inputs to the system . For example in some embodiments the system may be configured to communicatively couple to the WOLFRAM ALPHA system and to utilize WOLFRAM ALPHA system to assist with NL interpretation of NL inputs to the system . For example in some embodiments the system may be configured to send to the WOLFRAM ALPHA system as a query words or phrases that the system is not able to interpret. The system may utilize answers from the WOLFRAM ALPHA system to help interpret the query in which the words or phrases were included.

In some embodiments the external system is configured to provide content in response to requests from the web page generation system . Thus in an example a user may enter an NL input such as add a picture of George Washington . The system interprets the NL input and determines that the user wants to add a picture to a web document. The system may also determine that the phrase George Washington may indicate the content of the picture. In an embodiment the system generates a request for a picture of George Washington and sends the request to the external system via the network . In response the external system responds to the request with the requested content e.g. a GIF image object . The system may parse the response from the external system for an image object and then add the image to the web document.

In some embodiments the external system is configured additionally or alternatively with NL processing functionality and to provide results of NL processing of an NL input in response to a request. For example in some embodiments the system may be configured to send to the external system words or phrases that the system is not able to interpret. For example in an embodiment the system generates a request for NL processing of certain words or phrases and sends the request to the external system via the network . In response the external system responds to the request with a result of NL processing of the words or phrases. For example the result may indicate an interpretation represented in a precise syntax that the system is configured to understand. The system may then utilize the interpretation to generate web page code and or modify existing web page code.

In some embodiments the system may be configured to interface with the external system using a suitable API associated with the external system .

Unless specifically stated otherwise discussions herein using words such as processing computing calculating determining presenting displaying or the like may refer to actions or processes of a machine e.g. a computer that manipulates or transforms data represented as physical e.g. electronic magnetic or optical quantities within one or more memories e.g. volatile memory non volatile memory or a combination thereof registers or other machine components that receive store transmit or display information.

As used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment or the phrase in an embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some embodiments may be described using the expression coupled and connected along with their derivatives. For example some embodiments may be described using the term coupled to indicate that two or more elements are in direct physical or electrical contact. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. The embodiments are not limited in this context.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process method article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present .

In addition use of the a or an are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the description. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.

At least some of the various blocks operations and techniques described above may be implemented utilizing hardware a processor executing firmware instructions a processor executing software instructions or any combination thereof. When implemented in hardware the hardware may comprise one or more of discrete components an integrated circuit an ASIC a programmable logic device etc. When implemented utilizing a processor executing software or firmware instructions the software or firmware instructions may be stored in any tangible non transitory computer readable medium or media such as a magnetic disk an optical disk a tape drive a RAM a ROM a flash memory a memory of a processor etc. Likewise the software or firmware instructions may be delivered to a user or a system via any known or desired delivery method including for example on a tangible non transitory computer readable medium or media or via communication media. The software or firmware instructions may include machine readable instructions that when executed by the processor cause the processor to perform various acts.

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for identifying terminal road segments through the disclosed principles herein. Thus while particular embodiments and applications have been illustrated and described it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims.

