---

title: Managing credentials
abstract: In a centralized credential management system, website credentials are stored in a vault storage at a vault. The website credentials are encrypted based upon a key not available to the vault and are for authenticating a user to a third party website. Through a client, a user authenticates to the vault and retrieves the encrypted website credentials and parameters and code for properly injecting the credentials into a website authentication form. The website credentials are decrypted at the client and injected into the authentication form using the parameters and code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09026788&OS=09026788&RS=09026788
owner: Symantec Corporation
number: 09026788
owner_city: Mountain View
owner_country: US
publication_date: 20130425
---
This Application is a continuation of U.S. application Ser. No. 12 186 651 filed Aug. 6 2008 and entitled Credential Management System and Method which is incorporated herein by reference.

Many Internet users hold accounts with many websites providing services or other functionality such as online banking online auctions online shopping social websites and more. Typically a set of credentials is associated with each account and at least a subset of these credentials usually consisting of a username and a password is used by the website to verify a user s identity. More extensive or limited sets of credentials are also used. Websites that provide more sensitive services such as online banking can require more credentials e.g. a date of birth a social security number or other types of credentials. Less sensitive services may only require a single identifier such as an e mail address.

Users can implement certain practices that can increase the security of their credentials. For example they can use a mix of letters and numbers change their passwords frequently and not use the same credentials for signing on to different sites.

Some users find such security practices inconvenient. For example some users to make use of a single username and a single password for many of their online accounts across different websites. A successful data mining attack on one of the websites where an account is held can grant the attacker access to the rest of the user s online accounts.

One solution to this inconvenience is to centrally manage the sets of credentials such that the user can cause them to be provided to a website for authentication. Centrally managed credentials are said to be managed by or logically stored at a vault. When a user wishes to authenticate to a website the user interacts with a computer the client to authenticate the user to the vault. The vault can then process a request from the client to authenticate the user to a given website. The vault can look up the credentials stored for the user for the given website and send them to the client which can submit them to the website to authenticate the user.

What is needed is a way to transparently to the user provide the credentials from the vault to the website. If the vault is untrusted the user credentials can be stored only in an encrypted form at the vault. The key used to encrypt the credentials may be stored at a trusted client or safeguarded by the user. What is needed is an efficient way to transform the encrypted credentials What is also needed is a more sophisticated layered approach to credentials management.

In accordance with an embodiment of the present invention a vault stored website credentials for authenticating a user to a third party website. The website credentials are encrypted based upon a key not available to the vault thereby reducing the risk that the user s website credentials would be compromised in the event the vault is compromised. When the user wants to authenticate to a website the user authenticates to the vault using vault credentials and retrieves the encrypted credentials for the website along with parameters and code useful for properly injecting the website credentials into a website authentication form. The encrypted credentials are decrypted at the client and injected into the form using the parameters and code. The user is then authenticated to the website. These and other features will be more readily understood from the following detailed description of preferred embodiments of the invention that is provided in connection with the accompanying drawings.

An embodiment of the invention can authenticate a user to a website. The user can access the website using a client which can be a personal computer a mobile phone a thin client or any other virtual or physical device capable of conveying information from a website to a user.

Client can include a processor coupled to a memory storing instructions adapted to be executed by the processor to perform at least part of the method in accordance with an embodiment of the present invention. An example of a client includes a Personal Computer executing a browser and storing a cryptographic key that is used to encrypt the website credentials before they are sent to the vault for storage. The key can be stored as part of a bookmarklet in RAM on a hard disk etc. For example in the Firefox browser DOM storage is used while for Internet Explorer Microsoft s userData storage facility is used. Safari Webkit uses a client database implementation based upon an HTML5 draft. Safari Webkit uses a client database implementation based on HTML5 draft recommendation. For sites that support the ability to post form data dynamically a locally stored key can be used to decrypt website credentials without requiring the user to click a bookmarklet. The key is deliberately not sent to the vault. If the user is unable or unwilling to store the key in their browser s local storage an embodiment of the present invention can default to querying the user to provide the key. The key can be stored on hardware such as a token a flash memory stick a SIM card e.g. in a mobile telephone etc. The hardware storing the key can be tamper resistant and in some embodiments can connect to other devices in any suitable way such as via a USB connection via wireless connection which can be encrypted etc. In some embodiments the device storing the key can perform other functions such as generating a One Time Password.

Other examples of client include a mobile platform e.g. a cell phone a PDA etc. that can convey information from website to user in any suitable way. Embodiments of the present invention can be implemented on a cell phone. The cell phone can receive a SIM card that stores the key and software on the SIM card in the cell phone or both and can perform the method in accordance with an embodiment of the present invention. For example the browser on the cell phone can store or access a list or catalog of third party web sites for which the user has stored his credentials at the vault. It can also act as a gateway for the user to provide his authentication credentials to log on to the vault. When the user is logged on to the vault and selects a catalogued web site to which to log on the browser on the phone can retrieve the sign on page from the selected site. It can also retrieve the user s encrypted credentials for the site from the vault as well as code and or parameters specific to the sign on page. The cell phone browser can use a key stored on the tamper resistant SIM card to decrypt the credentials inject the decrypted credentials into the third party web site log on page using the code and or parameters and cause the user to be logged on to the third party site.

Website is an example of network accessible resource that can be provided with user authentication credentials in accordance with embodiments of the present invention. Other examples can include an FTP server an SMTP e mail server etc. The present invention can be implemented for any network accessible resource that authenticates its users. Such resources can permit users to register and maintain accounts. Accessing the resource using the account can grant to user access to otherwise restricted content.

An account on a resource such as a website can be associated with a physical or virtual user . One or more credentials can also be associated with the account. This can include information such as the name of the user a username the e mail address of the user and other information useful to identifying the user and distinguishing the user from other users. The credentials can be stored at the website and or at other locations such as at an authentication service. The credentials need not be explicitly stored anywhere but can be derived from information made available to the verifier.

The credentials needed to authenticate the user to a website may be stored in a vault that can be accessible to the user . The vault can be implemented as an application in any computing environment in accordance with embodiments of the present invention. It can run as a single application on a single computer or can span across servers in different locations. It is also possible to implement the vault directly in hardware e.g. using an Application Specific Integrated Circuit. The encrypted credentials may be stored at a location different than that at which the vault s credential management software resides. Communication between the vault and the client can occur over a secure connection such as one that implements SSL.

In accordance with an embodiment of the present invention once the key has been provided the user can add its login credentials for a pre set list of sites along with a description of the service offering. Entering of the user credentials can include entries for a username a password and a brief description of the site in the form of notes. The encrypted data username password can be stored in vault database as can a hashed salted value of the key for additional verification.

In an embodiment the xxTEA algorithm or any other encryption algorithm can be used to encrypt the website credentials. This can be implemented in JavaScript functions that execute on the page in flash etc.

Once the user has entered its website credentials and the information saved to the vault database the user can be navigated to a page that can contain the link that the user should add to its bookmarks bar. This link can include the user s website credentials encryption key which can be visually obfuscated along with a unique value an apikey that maps the user s username to a specific value that has been generated by the software in accordance with an embodiment of the present invention. This can provide for increased security by assuring that the user authenticated to the vault is mapped to the appropriate user account when using the bookmarklet.

In accordance with embodiments of the present invention the key can be stored at the client or provided by the user each time it is needed retrieved from a trusted location each time it is needed or derived at least partly from information provided by the user or information obtained from a trusted location.

If a user needs to add information to the initial list of websites that may not have been initially entered or edit existing information an embodiment can include an edit button. When the user clicks on the edit button it can be prompted to enter the key used in the setup steps described previously. If the user enters the wrong key it can be permitted to re enter the correct value up to a certain number of times before the account is possibly locked depending on the security policy. This can place the user in an edit mode to add or correct information.

As known in the art a bookmarklet is an applet a small computer application stored as the URL of a bookmark in a web browser or as a hyperlink on a web page. Bookmarklets are designed to add one click functionality to a browser or web page. When clicked a bookmarklet performs a function such as a search query or data extraction. Usually the applet is a JavaScript program.

Prior to activating the one click functionality of the bookmarklet the user should first be authenticated by the vault. If the user is not logged in and the user clicks on the bookmarklet the user can be redirected to the vault for authentication. Once authenticated the user can be redirected back to the page where they clicked on the bookmarklet.

Once the user has been authenticated by the vault and the user is on the website authentication page the user clicks the link contained in the bookmarklet which injects the form fill code from the vault into the page. In particular the link can retrieve the encrypted user credentials and form fill parameters for the current login page from the vault using for example a JSON P method. The form fill code can use the key which can be encoded obfuscated in the link and can be used by the page code to decrypt the user website credentials. The decrypted user credentials e.g. username password etc. can be inserted into the website authentication form and the form can be submitted to the website.

If the user has selected the bookmarklet while not on the specific website authentication page a popup can be displayed that can contain the list of sites for which the user has entered website credentials. The popup can be in the form of HTML CSS that can be inserted into the displayed page. The user can select the site in the popup and if it is one click enabled the user can be automatically signed in i.e. authenticated to the selected website. The enabled websites can use a transitional page to authenticate the user in which the key is retrieved from the browser local storage if available or requested from the user etc. If the website does not support direct login the user can be navigated to the site and can then click the bookmarklet again to authenticate to the website.

In accordance with an embodiment of the present invention a carousel can be used to display the different web sites pages that the user has enrolled in the vault i.e. for which the user has stored website credentials at its vault account. The user can visualize in a single place all the different pages and through a rotation tool can select a specific page then click and access that page. An embodiment of the present invention can be enabled with the carousel such that user credentials stored at the vault for a given website are injected into a page retrieved when the user clicks on a graphic representation of such a site in the carousel. In this way the carousel interface can be used to quickly authenticate to any website listed in the carousel.

In third party is a network resource that can be used by vault to assess the risk that user is honest or fraudulent. For example third party can be a resource that provides a reverse DNS lookup service. The IP address received as part of a message from a client containing user vault credentials can be submitted to such a service which can return a host name the geographical location of the host etc. The host name and other information such as the geographical data can be compared to facts known about the user to assess the likelihood that the vault credentials originate from the correct user . For example if it is known that user has historically logged on to the vault from a single given host in the United States and if the reverse IP lookup reveals a different host name located in Nigeria vault may decide to request one or more additional credentials to verify that the user is the registrant of the vault account to which access is sought. Likewise if the server name and location match that in the historical record then access may be granted without requiring further vault credentials. In some cases no third party may be needed to help vault to assess the risk of a request for access. For example vault may assess inherent properties of the request e.g. the number of such requests received per unit time an excessively high number could indicate fraud the number of failed recent attempts a high number could indicate fraud etc.

VIP refers to the VeriSign Identity Protection VIP service which can verify credentials such as an OTP. If the risk assessed by the vault is above a given threshold the vault can request that the user provide an additional credential such as an OTP. The OTP is received by the vault and then sent to VIP for verification. If VIP indicates to the vault that the OTP is successfully verified then the user client is granted access to the vault account. Otherwise access is denied. User may be given another opportunity to submit another OTP or other credential.

A user can request through client to be authenticated to vault . In one embodiment this request is made initially by client to vault . In another embodiment user indicates to client that it wants to authenticate itself to a website . Client sends a request for website credentials to vault which determines that user is not presently authenticated to vault and sends a request for vault credentials to client . In both cases user submits vault credentials to vault through client .

Authenticator can verify the vault credentials and can pass the results of the verification as well as information obtained from communications with client such as the source IP address used by client to risk engine . Authenticator can also obtain additional information from a networked third party resource such as the hostname associated with the client via a reverse IP lookup and pass such information to the risk engine . Based upon the information provided by authenticator risk engine can determine the risk that the authentication request is fraudulent and pass the result to authenticator . The risk can be quantified in any suitable way e.g. high low a numerical value etc. Authenticator can store a risk threshold that can be unique to a user unique to a given type of users or the same for all users. Authenticator can compare the determined risk to the risk threshold. If the determined risk is above that of the threshold authenticator can request one or more additional credentials from user client such as an OTP. Authenticator can submit the OTP to a networked resource such as the VeriSign Identity Protection VIP server . The results of the verification can be passed to the risk engine . If and when the determined risk is lower than the threshold then the user is authenticated to the vault and the user request for credentials can be passed to request processor .

Request processor can be communicatively coupled to database . Database can store user account information which can include a user identifier one or more credentials correlated with a website to which they pertain parameters useful to the client for properly injecting the credentials into an authentication form for the website. It can also contain executable code that can be sent to client to assist in completing the authentication form. The credentials stored in database can be encrypted based upon a key not available to vault . The key can be available to the client which can encrypt the credentials before they are sent to vault and decrypt the encrypted credentials received from vault before providing them to website . The key can be stored in a bookmarklet at client be otherwise stored at client e.g. in RAM flash memory hard disk etc. derived from user provided credentials at client etc. Request processor can retrieve credentials parameters and or code for the website and send them to the client .

In accordance with embodiments of the present invention the risk threshold can be adjusted based upon the type or identity of the web site for which a user has requested credentials. The thresholds can be stored at database correlated with the websites or website types to which they pertain. A determined risk of a user authentication may be below a risk threshold for a first website and above a risk threshold for a second site. If the user has authenticated to the vault to authenticate to the first website and then requests website credentials for the second website vault can request that user provide additional credentials to lower the determined risk below that of the risk threshold that corresponds to the second website.

If the user is not presently authenticated to the vault the vault can send a request for vault credentials to client . shows a vault credentials request form that includes a username and a password field that user completes to authenticate to the vault. User selects the Sign On to Vault button after completing the fields and can be logged on to the vault.

If the risk of a vault authentication is above a given risk threshold the vault can request one or more additional credentials such as the OTP requested in the vault supplemental credential request form shown in . The form includes fields for an OTP and a social security number . User selects the Sign On to Vault button after completing the fields and can be logged on to the vault.

In accordance with an embodiment of the present invention a user can provide website credentials to a vault by registering with the vault . Registration can include establishing user vault credentials and establishing a user vault account. User can manually enter user website credentials e.g. a user identifier and a password at the client to be sent to the vault . Client can include software that encrypts the website credentials using a key that can be supplied by the user generated by the client software derived by the client software from information provided by the user such as credential information or received and stored at the client . Once encrypted the website credentials can be sent to the vault to be stored at database associated with user information such as a user identifier user vault credentials website authentication form parameters and code etc. Likewise code at the client can cause website credentials provided manually by user in filling out website authentication forms to be collected encrypted and sent to vault to be stored in the user s vault account provided the user is authenticated to the vault .

Those skilled in the art that will appreciate that there are a number of ways of implementing the authentication procedure at a client and that there correspondingly will be numerous ways for the client to receive an indication to provide credentials and to collect the credentials.

When the client retrieves the website credentials from the vault to supply to a website the vault can send the website credentials to the requesting client in the encrypted form in which they were originally submitted. Any suitable encryption algorithm can be used such as blowfish AES DSA and the like.

The website credentials can be passed to the client as key value pars where the key can represent the name of the form element e.g. the form elements and on the authentication web form into which the value e.g. the values and should be injected.

In one embodiment the client can use the HTML Document Object Model DOM search for form elements in the web authentication form to find elements with names matching the form element keys in the pairs received from the server and then change the value of the form elements using the DOM application programming interface. This can be done using JavaScript but it is also possible to implement as a browser plug in or by other means of integration.

In another embodiment the HTML data constituting the web authentication form can be intercepted and the HTML code can be modified so that the values are inserted into the corresponding HTML form elements before the form is rendered at the client.

While the data constituting the form can be encoded as HTML other encodings can be used including but not limited to XHTML and WML.

As the authentication web forms used to access websites can change in one embodiment of the invention the vault can maintain knowledge about various authentication forms in the form of a library and changes the form element keys before passing the pairs to the client. The library can store information about the names of fields for authentication forms used for a wide range of websites that can be of interest to users of the system. It can also store the code that can help properly inject the website credentials into such forms. The library information can be stored in database .

Some authentication web forms can require a more complicated procedure at the client than passage of variables through a single web form to authenticate a user. For example some online banks use a multi page authentication procedure. In order to ensure proper authentication to these sites the vault can pass a piece of code such as JavaScript along with the credentials that will conduct the authentication as needed for the particular website. Typically the vault will maintain pieces of code customized to each of these sites.

In some cases the key encrypting the user website credentials will change. In accordance with an embodiment of the present invention the encryption of the website credentials at the vault can also be changed. A message can be sent from client to vault indicating that the key has changed for a user . In response vault can send all of the website credentials stored in the user account which are encrypted using the old key. Client can use the old key to decrypt the website credentials received from vault and then use the new key to re encrypt the credentials. Client can then send the website credentials encrypted with the new key to vault for storage in the vault account. In this way user website credentials encrypted with an outdated key can be efficiently replaced by website credentials encrypted with a current key.

While the invention has been described with reference to exemplary embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the invention without departing from the essential scope thereof. Therefore it is intended that the invention not be limited to the particular embodiment disclosed as the best or only mode contemplated for carrying out this invention but that the invention will include all embodiments falling within the scope of the appended claims. Also in the drawings and the description there have been disclosed exemplary embodiments of the invention and although specific terms may have been employed they are unless otherwise stated used in a generic and descriptive sense only and not for purposes of limitation the scope of the invention therefore not being so limited. Moreover the use of the terms first second etc. do not denote any order or importance but rather the terms first second etc. are used to distinguish one element from another. Furthermore the use of the terms a an etc. do not denote a limitation of quantity but rather denote the presence of at least one of the referenced item.

