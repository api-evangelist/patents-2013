---

title: Method and system for generating a data grid interface to monitor and recommend relevant products
abstract: Techniques for a product search grid are disclosed herein. The method for presenting a grid includes receiving data in association with a plurality of products from one or more merchant websites; presenting a data grid including cells based on the data, wherein each cell of the cells represents a product of the products or a replacement of a product of the products; displaying information regarding the products or the replacements of the products in the cells; and updating the contents of cells of the data grid automatically in real time in response to new data received from the merchant websites.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09117239&OS=09117239&RS=09117239
owner: 
number: 09117239
owner_city: 
owner_country: 
publication_date: 20130315
---
This application is a continuation in part of U.S. non Provisional application Ser. No. 13 802 102 filed on Mar. 13 2013 the content of which is incorporated herein by reference in its entirety.

At least one embodiment of the present invention pertains to tracking ecommerce data and more particularly to monitoring and recommending relevant products based on ecommerce data.

The rapid growth in computer the Internet and telecommunication technology has brought about a change in how product manufacturers sell their goods. While brick and mortar establishments still provide an outlet for goods running an ecommerce website is relatively inexpensive compared to a brick and mortar establishment and this has led to a large number of online retailers. In order to remain competitive it can be important for online retailers to monitor competitor s prices and offerings. Manufacturers also have an interest in monitoring the pricing and availability of their products that are sold through online retailers.

There are times when a person a vendor or a manufacturer wants to create a list of products being sold at a list of retailers. In this scenario the goal is to identify closely related products being sold at different merchants. These closely related products can be either identical or similar in nature. The information regarding the closely related products is useful for various applications including competitive pricing enforcing minimum price monitoring MAP violation commerce analytics and marketing.

Unfortunately the process of identifying closely related products is typically a manual and cumbersome task. The task is often dependent on the subjective judgment of a user conducting the task. Different persons may disagree on criterion of how to define a set of closely related products. Whether multiple products are similar to each other can be confirmed or denied based on different criteria. Furthermore the user conducting the task may not fully understand the criteria to make an appropriate judgment on the criteria.

The technology introduced here provides a system to automatically adjusting criteria of determining product closeness based on a trained set of data. The system continues to update as the user gives more feedback information to the system or if the market changes.

In accordance with the techniques introduced here therefore a method for recommending similar products is provided. The method includes receiving a positive input from a user the positive input indicating that the user accepts that a first product is similar to a second product determining by a database one or more specification keys of the first product that a database record of the second product contain for each of the specification keys increasing a weight counter for the specification key in response to the positive input calculating a closeness score between the first and second products based on values of the specification keys of the first product values of the specification keys of the second product and weight counters for the specification keys and recommending the first product as a replacement of the second product based on the closeness score.

In accordance with the techniques introduced here another method for recommending similar products is provided. The method includes receiving a negative input from a user the negative input indicating that the user rejects that a first product is similar to a second product determining by a database one or more specification keys of the first product that a database record of the second product contain for each of the specification keys decreasing a weight counter for the specification key in response to the positive input calculating a closeness score between the first and second products based on values of the specification keys of the first product values of the specification keys of the second product and weight counters for the specification keys and recommending the first product as a replacement of the second product based on the closeness score.

In accordance with the techniques introduced here yet another method for recommending similar products is provided. The method includes transmitting to a client terminal or a display device prices of a plurality of products being sold at a plurality of online merchants if a second product of the plurality of products is not being sold at an individual online merchant of the plurality of online merchants transmitting a price of a first product being sold at the individual online merchant as a replacement of the second product receiving a positive input from a user the positive input indicating that the user accepts that a first product is similar to a second product updating a plurality of closeness scores based on the positive input wherein each of the closeness scores corresponds to two products and indicates how similar these two products are for the user and determining whether to keep the price of the first product based on the closeness scores.

In accordance with the techniques introduced here a computer system for recommending similar products is provided. The computer system includes a processor a network interface and a memory. The network interface is coupled to the processor through which the computer system can retrieve specification information of products from merchant web servers. The memory stores instructions which when executed by the processor cause the computer system to perform a process. The process includes receiving a positive input from a user the positive input indicating that the user accepts that a first product is similar to a second product determining by a database one or more specification keys of the first product that a database record of the second product contain for each of the specification keys increasing a weight counter for the specification key in response to the positive input calculating a closeness score between the first and second products based on values of the specification keys of the first product values of the specification keys of the second product and weight counters for the specification keys and recommending the first product as a replacement of the second product based on the closeness score.

The system helps people pick products that are similar in nature to each other. The system further provides an easy to use interface that shows the user s products and exactly matched products at competing retailers. The system populates the empty cells that have no exactly matched products with recommended similar products. Recommendations are based on attributes such as price color weight or other attributes. The user of the system has the option to accept or reject those recommended matches. If the user accepts a recommended match the system strengthens the weight of the common attributes of the products for other recommendations. With the information regarding the user accepting and rejecting the recommended matches the system can adjust the attribute weighting across the user s full product set. Thus the system learns the preference of the user without too many input work from the user. The system does the learning by parsing key value pairs and data types that are found in unstructured data from the product web pages.

The information regarding the closely related products is useful for various applications. In one embodiment a merchant can use the system to monitor prices of competitors products that are similar to its house brand products. In another embodiment a merchant can line up comparable products from competitor manufacturers using the system to help picking the exact part from products having different brand names. This is particularly effective for drop in replacement commodity products such as computer memory.

Other aspects of the technology introduced here will be apparent from the accompanying figures and from the detailed description which follows.

References in this description to an embodiment one embodiment or the like mean that the particular feature function or characteristic being described is included in at least one embodiment of the present invention. Occurrences of such phrases in this description do not necessarily all refer to the same embodiment nor are they necessarily mutually exclusive.

An example of the data mining system in operation begins with an application requesting data from the data mining system through the network . In one embodiment the request can be for price data relating to a particular product. The data mining system receives the request and initiates a search to gather information relating to the request. Several sources are available from which the data mining system can gather data. One source is a dedicated data feed for example a CSV comma separated values feed an RSS Really Simple Syndication feed etc. that is provided by merchants data aggregators or other sources. The data mining system can connect to a data feed and download information related to the product requested by the application .

Another source of data for the data mining system is an external data source . Large merchants shopping sites and data aggregators often expose an application programming interface API that allows an outside entity to access selected information contained in the merchant s databases. For example the data mining system can include an engine which accesses a merchant database through an exposed API and gathers information related to the product requested by the application .

Yet another source of information which the data mining system can use to obtain product information for application is the buy page of a merchant site that displays a particular product. The buy pages are online web pages where customers can purchase the products. The data mining system can connect to the merchant site through the network . The data mining system can then parse the information contained on the merchant s product page to gather information relevant to the application s request. In one embodiment the data mining system connects to the merchant site through a proxy server .

An application connects to the data mining system through the web server to request information. In one embodiment the web server provides access to a web based dashboard that acts as an interface between an end user and the data mining system. In another embodiment the web server exposes an API which external entities can utilize to access the data mining system or data maintained by the data mining system. Regardless of how the data mining system is accessed when a request for information is received a job request is forwarded from the web server to the job server .

Job server maintains a queue of job requests received from web server . Acquisition engine monitors the job queue maintained by job server . In one embodiment acquisition engine is a self replicating engine which maintains a suitable number of instantiations to process the job requests within the job queue. In one embodiment acquisition engine stores results from performing a job in the datastore . In another embodiment the results are also stored in a local copy of shared memory . The data in the local copy can then be replicated to other local copies in the shared memory so the data is available to all elements of the data mining system.

Datastore includes a write cache and a read cache . Because there can be multiple acquisition engines working concurrently there is potentially a high volume of writes to a database included in datastore that can happen concurrently. This may cause a bottleneck and slow down the data acquisition process. In order to prevent this bottleneck write cache stores the data as the data is returned by the acquisition engines and then the data is written to the database from the cache . The read cache works in a similar manner except that the data is stored in a cache so there is not a bottleneck created by a large number of reads to the database.

The traffic router receives the requests from the miners and selects a proxy server for processing the request among a plurality of available proxy servers . If there is a current connection between an available proxy server and the target web host the traffic router selects this proxy server having the current connection for the request. In this case the traffic router utilizes an existing connection route to the target web host for fetching the network object without the need of initiating a new connection. If there is no current connection between the target web host and any available proxy server the traffic selects a proxy server to initiate a new connection between the proxy server and the target web host.

In one embodiment the selection of proxy server for the new connection is based on two principles. First the route history between the target web host and each proxy server is considered. For a web host and a proxy server the route history is defined as a number of expired connections between the web host and the proxy server. The route histories between different web hosts and different proxy servers are tracked and recorded in a route history database. The proxy server has the least route history with the target host is preferred for initiating the new connection. Thus the chance of one or more particular proxy servers frequently connecting to the same target host is minimized. The target host will receive connections from different proxy servers so that no particular proxy server is suspected or blocked.

Second the current load of each proxy server is also considered. For each proxy server the current load is defined as a total number of the proxy server s current connections with all web hosts. The current load of each proxy server is tracked and recorded in a current load database. The proxy server having the least current load i.e. the proxy server having the smallest number of current connections is preferred for initiating new connection. Therefore the burden of the proxy servers tends to be spread evenly and chance of overusing any particular proxy server is minimized.

Each proxy server may be different in terms of authentication mode and communication protocol. For example each proxy server may have different authentication mode and or different username password or other credentials. Furthermore a proxy server may require receiving requests in different protocols such as VPN SOCKS SRCIP L2TP or HTTP. The network object requests received by the traffic router are usually requests using the HTTP protocol.

Once online merchandise monitor system has extracted online product information from online merchants the system can parse the information into organized data for products. illustrates an example of a product data structure. The product data structure includes a product ID also referred to as PID . The product ID is a unique identifier for a type of product. Multiple models of products can be identified by the same product ID as the same product. The product data structure further includes one or more link data structure . Each link data structure includes a link ID also referred to as LID . A link ID is a unique identifier of a product being sold at a particular merchant. In other words each link ID typically corresponds to a product buy page hosted on a merchant website. Other items including coupons circulars articles social network friends pictures can also be assigned with link ID . In one embodiment the system can includes millions of link IDs in a database of the system.

The link data structure further includes link specification data . The link specification data are chunks of text and or numbers that describe the product being sold at the corresponding product buy page. In other words the link specification data includes property information about the product. For instance the link specification data may include physical specifications such as the product s weight or an abstract definition of the product. In some embodiment the link specification data may include information that is not created from unstructured data of the product buy page. For example the link specification data may include implied value like the product s data of birth or manufacture date or color of the product recognized from the picture in the product buy page.

The product data structure can further include composite specification data which are based on the link specification data of one or more different link IDs. The system is capable of determining the composite specification data at a per user level. In other words the description or definition of a product data structure for one user can be different than the description or definition of the product for another user. When one link specification data within a product data structure changes the system can change the composite specification data accordingly.

When two different link IDs are included in a product data structure of the same product ID the products corresponding to the link IDs are considered either identical or similar. The online merchandise monitor system provides a product dashboard to list the prices of products from different online merchants. If a specific product is unavailable from a particular online merchant the system can instead list a price of a similar product.

For each listed product the dashboard attempts to list prices of the product from each monitored merchant. There are cases that a merchant does not carry a monitored product. For instance as shown in merchant OldEgg does not carry product Landgate 2 TB hard drive. The online merchandise monitor system tries to search for products that merchant B carries similar to the product . Hence the dashboard shows the status searching in the dashboard block corresponding to the merchant B and the product .

In one embodiment the online merchandise monitor system uses web service application programming interface API to identify similar products that are sold by merchant B. Then the system uses Asynchronous JavaScript and XML AJAX interface to display the recommended products in the appropriate blocks. For instance the dashboard block corresponding to the merchant Goodbuy and the product Queenston HyperS solid state drive 120 GB shows a price of 99 with a mark including asterisks. The mark indicates that merchant Goodbuy does not carry the product and that the online merchandise monitor system has found a product similar to the product Queenston HyperS solid state drive 120 GB that is being sold at merchant Goodbuy. The similar product is sold at a price 99 at merchant Goodbuy. In other words this similar product priced at 99 is the best match for the product from the merchant Goodbuy. In some embodiments the boxes with matched similar products flash yellow to denote the user that the online merchandise monitor system has a recommendation of similar product.

The dashboard can include an update button . Once a user clicks the update button the online merchandise monitor system initiates new enquires attempting to find the best matches for products that are not sold from the merchants.

A user can move the curser over a block also referred to as a cell having recommendation to see a popup window. As shown in when a curse is over a block a popup window displays near the block . The popup window contains a list of detailed specifications of the recommended similar product including a product picture description barcode and other information. In another embodiment when a curse is hovering over a block a window shows additional information about the item to allow a user to classify the item. In yet another embodiment the user can interact with the blocks via other types of interactions.

The block further includes a plus sign . If the user considers the recommended product is a good match to the monitored product he can hit the plus sign . When the plus sign is hit the online merchandise monitor system treats the recommended product as being accepted. The criterions that are used to identify the recommended product will be positively reinforced in the database for the user. In one embodiment a table containing weight preference updates its content in the background. Accordingly the monitor system changes the recommendations for other products on the dashboard based on the updated weight preferences.

Similarly the block can further include a minus sign . If the user considers the recommended product is a bad match to the monitored product he can hit the minus sign . The dashboard will remove the recommended product. The table containing weight preference will update its content accordingly.

The plus sign and minus sign can be used for purpose other than indicating a good or a bad match to the product. For example the plus sign and minus sign can be used for increase or decrease the rating of the product. In another example users can click the plus sign and minus sign to suggest whether a promotion represented by the block is noteworthy or not. In some other embodiments the block can include additional control elements allowing the users to further interact with the block without the need to use the popup interactive elements.

The product dashboard can be utilized to other type of pricing data and is not restricted to products being sold by resellers with the prices shown in the cells. For instance the product dashboard can show data such as rebates shipping and total cost of ownership in the cells of the product dashboard .

The information in the cells of the product dashboard can be presented in other forms instead of text. For instance the information in the cells can be presented with images animated figures e.g. animated GIF or animated PNG movies games and any other rich content including sound and or interactive content. The purpose of the cell is to grant the users easy access to a large quantity of data at a glance. For instance multiple users can view the same grid e.g. product dashboard of data and update the contents in real time. The update made by any of these users will reflect on the instances of the grid being viewed by other users.

The contents of the cells can change automatically without any user interaction or intervention. In other words the grid can automatically update the contents of the cells when new data are received in real time. For instance when product price changes in real time or time limited offers start or finish the cells can automatically reflect the changes on the grid.

The column and the rows of the grid can be used to designate other factors instead of products and merchants. For instance the columns of the grid can be used to designate certain collections of people and the rows of the product dashboard be used to designate people. Such a grid or dashboard can be used to identify similarities between the collections i.e. groups of people. In another example the columns of the grid can be used to designate news publications and the rows of the product dashboard be used to designate head topics.

The size of each cell is not limited to one column or one cell. In other words certain cells can span across multiple columns and or multiple rows. In one example a cell representing a bundled product can overlap two rows in the grid. In another example a cell representing a cross site promotion between a reseller and the manufacturer can span across the columns for the reseller and the manufacturer. Cells can vary in size from any type of ranking system including whether or not certain listings are more favorable than others.

In one embodiment a time element can also be added into a cell to allow a user specifying the slice of time for the grid. Using the time element a user can back track the historical information of the grid as if he was viewing it live. This would be done by multiple slices of grid data that can be layered on top of each other. This control can be done manually by the user or via an automatically flyby mode where the user can allow the system to advance the slices at any time rate.

Furthermore these slices can be merged to display the data in 3D figure. One dimension of the 3D figure can be designated to time points of the slices. User can use the 3D figure to track alert violations or promotion periods for instance.

The online merchandise monitor system attempts to populate each block in the dashboard. The system treats any product from a specific merchant that is not being displayed in the dashboard as a potential match candidate. Each time a user trains the system by accepting or rejecting a match in a block the system adjusts the recommendations for all blocks of the entire column i.e. of the specific merchant that the block belongs to. The benefit is that a small amount of training can be sufficient to provide satisfying matches even at an early stage of training.

In some embodiments the online merchandise monitor system can identify matches via an API provided by an online merchant based on keywords that exist in the weight table or Universal Product Code UPC tags. In some other embodiments the candidate matches can be expressed as key value pairs.

In one embodiment for each user the online merchandise monitor system maintains a user account. Each user account includes a weight table for storing match training data for a corresponding user. When a user clicks a plus sign or a minus sign to accept or reject a recommendation of a similar product. The specification data of the similar product will be reinforced also referred to as plus reinforcement or weaken also referred to as minus reinforcement in the weight table of the user. For instance a user may click a plus sign to accept a 2 TB Eastern Hard Drive as appropriate match for the target product. The specification data of the 2 TB Eastern Hard Drive include size 2 TB and color black denoted as key value pairs. After the user hits the plus sign the system increase a counter for each of the specification entries in a weight table of the user.

The system administrator of the online merchandise monitor system can manually adjust each weight counter or even lock the weight counters in the weight table. For instance in one embodiment the administrator can assign safeguard values including minimum and maximum accepted values in the weight table to avoid the system to be overly trained. The system can record the values of the weigh counter when the user initiates a plus or minus reinforcement. But if a weight counter value exceeds the maximum accepted value or is less than the minimum accepted value the system uses the maximum or minimum accepted value as the weight counter value of the specification to conduct the product matching.

In one embodiment the online merchandise monitor system uses specification keys for matching products. If two products have the same specification keys but different specification values they have a weaker relationship between each other than two products that have the same specification keys and the same specification values. Likewise two products that do not have the same specification keys or values have an even weaker relationship.

The system stores a detailed list of specifications for each link ID. The system retrieves the information from product buy pages of the merchant website and parses the specification information of products from the retrieved product buy pages. For instance a product buy page may list information such as Capacity 128 GB. The system will parse the information and store the specification as a key value pair for the product. Data with different data types can be parsed from the product buy pages. The system can define relationships between associated data types. For example the system can define a conversion relationship between data type GB and data type TB. 

In another example the system can define a relationship between data type GB and data type GiB. One GiB gibibyte roughly equals to 1.074 GB gibabyte . Since the system recognize the data types GB and GiB are associated data types for storage capacity or other purposes with a defined conversion relationship the system can compare products having capacity denoted as GB with products having capacity denoted as GiB.

In one embodiment the system stores the associated data types as a linked list. For example the system can pick one data type among a group of associated data types as the prime data type. Other data types in the group can be converted to the prime data type before comparing the specification data among products. In some other embodiment the system can store the associated data types as other types of data structures as readily appreciated by a person having ordinary skill in the art.

The system continues to parse the information collected from the product buy pages. The system uses an evaluation statement to recognize data type from the parsed information. Once the data type is recognized and is not a prime data type the system uses a datatype statement to convert the recognized data type into a prime data type.

In one embodiment the online merchandise monitor system can assign specification values to the key value pairs from information that is not in the text of the product buy pages. For instance the system can recognize the color of the product from a product image shown on the product buy page and assign the color value as a text or numerical value to the specification information for the product color.

At step the system receives a positive input from a user. The positive input indicates that the user accepts that a first product is similar to a second product.

At step the system s database determines one or more specification keys of the first product that a database record of the second product contain.

At step for each of the specification keys the system increases a weight counter for the specification key in response to the positive input.

At step the system calculates a closeness score between the first and second products based on values of the specification keys of the first product values of the specification keys of the second product and weight counters for the specification keys. A numerical value of the closeness score indicates how similar the first product is to the second product. In one embodiment the closeness score is a sum of differences of the values of the specification keys of the first and second products the differences being weighted by the weight counters for the specification keys. If a value of one of the specification keys of the first or second product is not available the closeness score is calculated assuming the value is 1.

At step the system calculates closeness scores between other products and the second product based on values of the specification keys of the other product values of the specification keys of the second product and weight counters for the specification keys.

At step the system selects a product having the highest closeness score with the second product is recommended. At step the system recommends the selected product as a replacement of the second product based on the closeness score.

At step the computer system presents a data grid including cells based on the data wherein each cell of the cells represents a product of the products or a replacement of a product of the products. In some embodiments at least one cell of the cells span across multiple columns or multiple rows. A cell spanning across multiple rows can represent a bundled product. A cell spanning across multiple columns can represent a product that is being sold by a merchant designated by a first column of the columns and is manufactured by manufacture designated by a second column of the columns. The cells can contain text images animated figures movies games audio clips or interactive contents.

At step the computer system displays information regarding the products or the replacements of the products in the cells. In some embodiments the information regarding the products or the replacements of the products in the cells can include product prices rebate information shipping information or cost of ownership information.

At step the computer system updates the contents of cells of the data grid automatically in real time in response to new data received from the merchant websites without an intervention from a user. In one embodiment the new data include information of a price change for a product an update of a time limited offer a change of shipping information or a change of a rebate for a product.

At step the computer system updates the data grid in response to a user interacting with a cell of the cells wherein the user is one of a plurality of users each of whom is viewing an instance of the data grid. At step the computer system synchronizes the instances of the data grid being viewed by the users based on the updating.

At step the computer system switching between frames of a cell in response to a user interacting with an interactive time control wherein the frames represent statuses of a product at different time points. In some other embodiments the computer system displays sequentially the frames of the cell in response to a user interacting with an interactive time control. In one embodiment the interactive time control can include buttons to switch forward or backward between the frames. In another embodiment the interactive time control can include buttons to start the sequential playing of the frames or stop it.

The processor s is are the central processing unit CPU of the server and thus control the overall operation of the server . In certain embodiments the processor s accomplish this by executing software or firmware stored in memory . The processor s may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs trusted platform modules TPMs or the like or a combination of such devices.

The memory is or includes the main memory of the server . The memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. In use the memory may contain among other things code embodying at least a portion of an operating system of the server . Code may also include instructions for executing the techniques disclosed herein.

Also connected to the processor s through the interconnect are a network adapter and a storage adapter . The network adapter provides the server with the ability to communicate with devices such as online merchant web servers and client devices over a network and may be for example an Ethernet adapter or Fibre Channel adapter. The storage adapter allows the server to access a persistent storage and may be for example a Fibre Channel adapter or SCSI adapter.

The code stored in memory may be implemented as software and or firmware to program the processor s to carry out actions described below. In certain embodiments such software or firmware may be initially provided to the server by downloading it from a system through the server e.g. via network adapter .

The techniques introduced herein can be implemented by for example programmable circuitry e.g. one or more microprocessors programmed with software and or firmware or entirely in special purpose hardwired circuitry or in a combination of such forms. Special purpose hardwired circuitry may be in the form of for example one or more application specific integrated circuits ASICs programmable logic devices PLDs field programmable gate arrays FPGAs etc.

Software or firmware for use in implementing the techniques introduced here may be stored on a machine readable storage medium and may be executed by one or more general purpose or special purpose programmable microprocessors. A machine readable storage medium as the term is used herein includes any mechanism that can store information in a form accessible by a machine a machine may be for example a computer network device cellular phone personal digital assistant PDA manufacturing tool any device with one or more processors etc. . For example a machine accessible storage medium includes recordable non recordable media e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. etc.

The term logic as used herein can include for example programmable circuitry programmed with specific software and or firmware special purpose hardwired circuitry or a combination thereof.

In addition to the above mentioned examples various other modifications and alterations of the invention may be made without departing from the invention. Accordingly the above disclosure is not to be considered as limiting and the appended claims are to be interpreted as encompassing the true spirit and the entire scope of the invention.

