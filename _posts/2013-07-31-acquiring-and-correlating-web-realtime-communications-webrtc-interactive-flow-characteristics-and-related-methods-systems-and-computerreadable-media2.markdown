---

title: Acquiring and correlating web real-time communications (WEBRTC) interactive flow characteristics, and related methods, systems, and computer-readable media
abstract: Embodiments include acquiring and correlating Web Real-Time Communications (WebRTC) interactive flow characteristics, and related methods, systems, and computer-readable media. In one embodiment, a method for acquiring and correlating characteristics of WebRTC interactive flows comprises receiving, by an acquisition agent of a WebRTC client executing on a computing device, a peer connection initiation dialog for establishing a WebRTC interactive flow. The method further comprises determining, by the acquisition agent, one or more characteristics of the WebRTC interactive flow based on the peer connection initiation dialog. The method additionally comprises receiving, by a correlation agent, the one or more characteristics of the WebRTC interactive flow from the acquisition agent, and storing the one or more characteristics of the WebRTC interactive flow. The method also comprises correlating, by the correlation agent, one or more stored characteristics, and generating, by the correlation agent, one or more interaction records based on the correlating.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09614890&OS=09614890&RS=09614890
owner: Avaya Inc.
number: 09614890
owner_city: Basking Ridge
owner_country: US
publication_date: 20130731
---
The technology of the disclosure relates generally to Web Real Time Communications WebRTC interactive sessions.

Web Real Time Communications WebRTC is an ongoing effort to develop industry standards for integrating real time communications functionality into web clients such as web browsers to enable direct interaction with other web clients. This real time communications functionality is accessible by web developers via standard markup tags such as those provided by version 5 of the Hypertext Markup Language HTML5 and client side scripting Application Programming Interfaces APIs such as JavaScript APIs. More information regarding WebRTC may be found in WebRTC APIs and RTCWEB Protocols of the HTML5 Real Time Web by Alan B. Johnston and Daniel C. Burnett 2Edition 2013 Digital Codex LLC which is incorporated in its entirety herein by reference.

WebRTC provides built in capabilities for establishing real time video audio and or data streams in both point to point interactive sessions and multi party interactive sessions. The WebRTC standards are currently under joint development by the World Wide Web Consortium W3C and the Internet Engineering Task Force IETF . Information on the current state of WebRTC standards can be found at e.g. http www.w3c.org and http www ietf.org.

To establish a WebRTC interactive flow e.g. a real time video audio and or data exchange two WebRTC clients may retrieve WebRTC enabled web applications such as HTML5 JavaScript web applications from a web application server. Through the web applications the two WebRTC clients then engage in dialogue for initiating a peer connection over which the WebRTC interactive flow will pass. The peer connection initiation dialogue includes any data transmitted between the two WebRTC clients and or the web application server facilitating the establishment of the WebRTC interactive flow. As non limiting examples the peer connection initiation dialogue may include WebRTC session description objects HTTP header data certificates cryptographic keys and or network routing data. The peer connection initiation dialogue may include a media negotiation to communicate and reach an agreement on parameters that define characteristics of the interactive session.

In some embodiments the media negotiation may be implemented via a WebRTC offer answer exchange. A WebRTC offer answer exchange typically occurs via a secure network connection such as a Hyper Text Transfer Protocol Secure HTTPS connection or a Secure WebSockets connection. In a WebRTC offer answer exchange a first WebRTC client on a sender computing device sends an offer to a second WebRTC client on a recipient computing device. The offer includes a WebRTC session description object that specifies media types and capabilities that the first WebRTC client supports and prefers for use in the WebRTC interactive flow. The second WebRTC client then responds with a WebRTC session description object answer that indicates which of the offered media types and capabilities are supported and acceptable by the second WebRTC client for the WebRTC interactive flow. It is to be understood that the peer connection initiation dialogue may employ mechanisms other than a WebRTC offer answer exchange to establish a WebRTC interactive flow between WebRTC endpoints.

Once the peer connection initiation dialogue is complete the WebRTC clients may then establish a direct peer connection with one another and may begin an exchange of media or data packets transporting real time communications. The peer connection between the WebRTC clients typically employs the Secure Real time Transport Protocol SRTP to transport real time media flows and may utilize various other protocols for real time data interchange.

Some environments may require that records of all communication interactions including WebRTC interactive flows be maintained for security legal usage bill back and or archival purposes. For instance enterprise policies may dictate that records documenting all WebRTC interactive flows transmitted across an enterprise network are to be kept. However because the peer connection initiation dialogue and the peer connection itself may take place over secure network connections or may be otherwise encrypted data in the peer connection initiation dialogue and the WebRTC interactive flow that could offer insight into the WebRTC interactive flow may be opaque to the enterprise. Thus the enterprise may lack the ability to generate records of a WebRTC interactive flow beyond the most elemental data regarding the network traffic constituting the WebRTC interactive flow. Moreover the use of a central network element between endpoints to monitor the WebRTC interactive flow may not be practicable or desirable due to the topology of a typical WebRTC interactive flow. As non limiting examples the WebRTC interactive flow may pass directly from one endpoint to the other thus bypassing the central network element.

Embodiments disclosed in the detailed description provide acquiring and correlating Web Real Time Communications WebRTC interactive flow characteristics. Related methods systems and computer readable media are also disclosed. In this regard in one embodiment a method for acquiring and correlating characteristics of WebRTC interactive flows is provided. The method comprises receiving by an acquisition agent of a WebRTC client executing on a computing device a peer connection initiation dialogue for establishing a WebRTC interactive flow. The method further comprises determining by the acquisition agent one or more characteristics of the WebRTC interactive flow based on the peer connection initiation dialogue. The method additionally comprises receiving by a correlation agent the one or more characteristics of the WebRTC interactive flow from the acquisition agent. The method also comprises storing by the correlation agent the one or more characteristics of the WebRTC interactive flow. The method further comprises correlating by the correlation agent one or more stored characteristics. The method additionally comprises generating by the correlation agent one or more interaction records based on the correlating.

In another embodiment a system for acquiring and correlating characteristics of WebRTC interactive flows is provided. The system comprises at least one communications interface and a first computing device associated with the at least one communications interface and comprising an acquisition agent. The acquisition agent is configured to receive a peer connection initiation dialogue for establishing a WebRTC interactive flow. The acquisition agent is further configured to determine one or more characteristics of the WebRTC interactive flow based on the peer connection initiation dialogue. The system further comprises a second computing device associated with the at least one communications interface and comprising a correlation agent. The correlation agent is configured to receive the one or more characteristics of the WebRTC interactive flow from the acquisition agent. The correlation agent is further configured to store the one or more characteristics of the WebRTC interactive flow. The correlation agent is additionally configured to correlate one or more stored characteristics. The correlation agent is also configured to generate one or more interaction records based on the correlating.

In another embodiment a non transitory computer readable medium is provided. The non transitory computer readable medium has stored thereon computer executable instructions to cause a processor to implement a method comprising receiving by an acquisition agent of a WebRTC client a peer connection initiation dialogue for establishing a WebRTC interactive flow. The method implemented by the computer executable instructions further comprises determining by the acquisition agent one or more characteristics of the WebRTC interactive flow based on the peer connection initiation dialogue. The method implemented by the computer executable instructions additionally comprises receiving by a correlation agent the one or more characteristics of the WebRTC interactive flow from the acquisition agent. The method implemented by the computer executable instructions also comprises storing by the correlation agent the one or more characteristics of the WebRTC interactive flow. The method implemented by the computer executable instructions further comprises correlating by the correlation agent one or more stored characteristics. The method implemented by the computer executable instructions additionally comprises generating by the correlation agent one or more interaction records based on the correlating.

With reference now to the drawing figures several exemplary embodiments of the present disclosure are described. The word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments.

Embodiments disclosed in the detailed description provide acquiring and correlating Web Real Time Communications WebRTC interactive flow characteristics. Related methods systems and computer readable media are also disclosed. In this regard in one embodiment a method for acquiring and correlating characteristics of WebRTC interactive flows is provided. The method comprises receiving by an acquisition agent of a WebRTC client executing on a computing device a peer connection initiation dialogue for establishing a WebRTC interactive flow. The method further comprises determining by the acquisition agent one or more characteristics of the WebRTC interactive flow based on the peer connection initiation dialogue. The method additionally comprises receiving by a correlation agent the one or more characteristics of the WebRTC interactive flow from the acquisition agent. The method also comprises storing by the correlation agent the one or more characteristics of the WebRTC interactive flow. The method further comprises correlating by the correlation agent one or more stored characteristics. The method additionally comprises generating by the correlation agent one or more interaction records based on the correlating.

In this regard shows an exemplary WebRTC interactive system for acquisition and correlation of WebRTC interactive flow characteristics as disclosed herein. In particular the exemplary WebRTC interactive system includes an acquisition agent that provides a point for determining characteristics of a WebRTC interactive flow which otherwise may be inaccessible to network elements. Additionally the exemplary WebRTC interactive system includes a correlation agent that is communicatively coupled to the acquisition agent and that correlates stored WebRTC interactive flow characteristics to generate an interaction record . As used herein a WebRTC interactive session refers generally to operations for establishing a peer connection and commencing a WebRTC interactive flow between two or more endpoints. A WebRTC interactive flow as disclosed herein refers to an interactive media flow and or an interactive data flow that passes between or among two or more endpoints according to WebRTC standards and protocols. As non limiting examples an interactive media flow constituting a WebRTC interactive flow may comprise a real time audio stream and or a real time video stream or other real time media or data streams. Data and or media comprising a WebRTC interactive flow may be collectively referred to herein as content. 

Before discussing details of the acquisition agent and the correlation agent the establishment of a WebRTC interactive flow in the WebRTC interactive system of is first described. In a first computing device executes a first WebRTC client and a second computing device executes a second WebRTC client . It is to be understood that the computing devices and may both be located within a same public or private network or may be located within separate communicatively coupled public or private networks. Some embodiments of the WebRTC interactive system of may provide that each of the computing devices and may be any computing device having network communications capabilities such as a smartphone a tablet computer a dedicated web appliance a media server a desktop or server computer or a purpose built communications device as non limiting examples. The computing devices and include communications interfaces and respectively for connecting the computing devices and to one or more public and or private networks. In some embodiments the elements of the computing devices and may be distributed across more than one computing device and .

The WebRTC clients and in this example may each be a web browser application a dedicated communications application or an interface less application such as a daemon or service application as non limiting examples. The WebRTC client comprises a scripting engine and a WebRTC functionality provider . Similarly the WebRTC client comprises a scripting engine and a WebRTC functionality provider . The scripting engines and enable client side applications written in a scripting language such as JavaScript to be executed within the WebRTC clients and respectively. The scripting engines and also provide application programming interfaces APIs to facilitate communications with other functionality providers within the WebRTC clients and or the computing devices and or and or with other web clients user devices or web servers. The WebRTC functionality provider of the WebRTC client and the WebRTC functionality provider of the WebRTC client implement the protocols codecs and APIs necessary to enable real time interactive flows via WebRTC. The scripting engine and the WebRTC functionality provider are communicatively coupled via a set of defined APIs as indicated by bidirectional arrow . Likewise the scripting engine and the WebRTC functionality provider are communicatively coupled as shown by bidirectional arrow .

A WebRTC application server is provided for serving a WebRTC enabled web application not shown to requesting WebRTC clients . In some embodiments the WebRTC application server may be a single server while in some applications the WebRTC application server may comprise multiple servers that are communicatively coupled to each other. It is to be understood that the WebRTC application server may reside within the same public or private network as the computing devices and or or may be located within a separate communicatively coupled public or private network.

The WebRTC client and the WebRTC client then establish secure web connections and respectively with the WebRTC application server and engage in a peer connection initiation dialogue . The peer connection initiation dialogue may include any data transmitted between or among the WebRTC client the WebRTC client and or the WebRTC application server to establish a peer connection for the WebRTC interactive flow . The peer connection initiation dialogue may include WebRTC session description objects HTTP header data certificates cryptographic keys and or network routing data as non limiting examples. In some embodiments the peer connection initiation dialogue may comprise a WebRTC offer answer exchange. Data exchanged during the peer connection initiation dialogue may be used to determine the media types and capabilities for the desired WebRTC interactive flow . Once the peer connection initiation dialogue is complete the WebRTC interactive flow may be established via a secure peer connection between the WebRTC client and the WebRTC client . Accordingly in the vertices of the WebRTC triangle are the WebRTC application server the WebRTC client and the WebRTC client . The edges of the triangle are represented by the secure web connections and and the secure peer connection .

It is to be understood that some embodiments may utilize topographies other than the WebRTC triangle topography illustrated in . For example some embodiments may employ a trapezoid topography in which two web servers communicate directly with each other via protocols such as Session Initiation Protocol SIP or Jingle as non limiting examples. It is to be further understood that instead of the WebRTC client the computing device may comprise a SIP client device a Jingle client device or a Public Switched Telephone Network PSTN gateway device that is communicatively coupled to a telephone.

In some embodiments the secure web connection and or the secure peer connection may pass through a network element . The network element may be a computing device having network communications capabilities and providing media transport and or media processing functionality. As a non limiting example the network element may be a Traversal Using Relays around NAT TURN server.

In the example of the peer connection initiation dialogue takes place over the secure web connection while the resulting WebRTC interactive flow passes via the secure peer connection . As a result it may be impracticable or impossible for an entity over whose network the WebRTC interactive flow takes place to generate a record of the WebRTC interactive flow for security legal usage bill back and or archival purposes. For example if the WebRTC client is part of an enterprise network elements of the enterprise network responsible for enforcing enterprise policies may be unable to determine an identity of the participants websites or servers involved in the WebRTC interactive flow .

In this regard the acquisition agent and the correlation agent of are provided. The acquisition agent is communicatively coupled to the scripting engine of the WebRTC client as indicated by bidirectional arrow . In some embodiments the acquisition agent may be implemented as an extension or plug in for the WebRTC client may be integrated into the WebRTC functionality provider and or the scripting engine and or may be part of the WebRTC application not shown downloaded from the WebRTC application server . The acquisition agent is configured to access the content of the peer connection initiation dialogue after it is received within the WebRTC client . The acquisition agent may also access data provided by packets transporting the peer connection initiation dialogue such as a source Internet Protocol IP address a destination IP address a source port number a destination port number and or a network protocol in use as non limiting examples. Accordingly during establishment of a WebRTC interactive flow the acquisition agent of receives the peer connection initiation dialogue transported over the secure web connection . The acquisition agent may determine characteristics of the WebRTC interactive flow based on the peer connection initiation dialogue . In the case of unsecured network traffic the acquisition agent may similarly analyze the peer connection initiation dialogue for the purpose of determining characteristics of the WebRTC interactive flow . As non limiting examples the acquisition agent may determine WebRTC interactive flow characteristics including but not limited to the following a user identity a website identity a transport identity a server identity a transport address an Internet Protocol IP address an indication of a change to a media flow an indication of a termination of a media flow and or a timestamp.

The acquisition agent transmits the determined characteristics of the WebRTC interactive flow represented by arrow to the correlation agent . In some embodiments the acquisition agent is communicatively coupled to the correlation agent via a Hyper Text Transfer Protocol HTTP Hyper Text Transfer Protocol Secure HTTPS or a WebSockets connection as non limiting examples. Some embodiments may provide that the acquisition agent may transmit the WebRTC interactive flow characteristics over a secure WebRTC data flow not shown established between the acquisition agent and the correlation agent . The correlation agent may be located on the computing device on a different computing device within the same public or private network as the computing device or on a computing device in a separate communicatively coupled public or private network.

Upon receiving the WebRTC interactive flow characteristics the correlation agent stores the WebRTC interactive flow characteristics for concurrent or later use in generating the interaction record . The correlation agent may employ any appropriate database or data repository known to one of skill in the art to store the WebRTC interactive flow characteristics. The correlation agent may then correlate one or more stored characteristics not shown related to the WebRTC interactive flow and or one or more concurrent or previous WebRTC interactive flows not shown . In some embodiments the one or more stored characteristics may be characteristics of the WebRTC interactive flow gathered from multiple sources while some embodiments may provide that the one or more stored characteristics is related to other concurrent or previous WebRTC interactive flows. In this manner the correlation agent may gain insight into aspects of the WebRTC interactive flow that otherwise may be difficult to ascertain such as an identity of one or more participants in the WebRTC interactive flow endpoint capabilities or information regarding websites and servers involved in the WebRTC interactive flow as non limiting examples. The correlation agent generates the interaction record based on the results of the correlating. In some embodiments the interaction record may comprise a call description record a call detail record or a transaction record as non limiting examples.

Some embodiments may provide that the correlation agent also receives media characteristics indicated by dashed arrow from one or more network elements providing media transport and or media processing functionality. In some embodiments the media characteristics may include media transport characteristics such as data regarding changes to the WebRTC interactive flow routing of the WebRTC interactive flow or termination of the WebRTC interactive flow . According to some embodiments disclosed herein the media characteristics may include media processing characteristics such as data related to encoding and or transcoding the WebRTC interactive flow . The media characteristics may be stored by the correlation agent and correlated with stored WebRTC interactive flow characteristics and or stored media characteristics to generate the interaction record .

To illustrate exemplary communications flows during the acquiring and correlating of WebRTC interactive flow characteristics by the acquisition agent and the correlation agent of is provided. In the correlation agent the WebRTC client the WebRTC application server and the WebRTC client of are each represented by vertical dotted lines. The WebRTC functionality provider the scripting engine and the acquisition agent of the WebRTC client are shown as separate elements to better illustrate communications flows therebetween. It is to be understood that the WebRTC client may comprise a scripting engine and a WebRTC functionality provider which for the sake of clarity are omitted from this example. It is to be further understood that the WebRTC clients and have each downloaded a WebRTC enabled web application such as an HTML5 JavaScript WebRTC application from the WebRTC application server .

As seen in the establishment of a WebRTC interactive flow begins with a WebRTC offer answer exchange that corresponds to the peer connection initiation dialogue of . Accordingly the WebRTC client sends a session description object to the WebRTC application server in an encrypted format in this example via an HTTPS connection . The WebRTC session description object is a Session Description Protocol SDP object referred to as SDP Object A and is indicated by arrow . SDP Object A represents the offer in the WebRTC offer answer exchange. SDP Object A specifies the media types and capabilities that the WebRTC client supports and prefers for use in the WebRTC interactive flow. The WebRTC application server forwards the SDP Object A by a secure web connection to the acquisition agent of the WebRTC client as indicated by arrow .

As noted above the acquisition agent may access the contents of the SDP Object A of the peer connection initiation dialogue and may also access other data exchanged during the peer connection initiation dialogue such as HTTP header data certificates cryptographic keys and or network routing data provided by packets transporting the peer connection initiation dialogue . In this manner the acquisition agent may determine characteristics of a WebRTC interactive flow to be established. In some embodiments WebRTC interactive flow characteristics may include a user identity a website identity a transport identity a server identity a transport address an Internet Protocol IP address an indication of a change to a media flow an indication of a termination of a media flow and or a timestamp of the WebRTC interactive flow as non limiting examples.

The acquisition agent next passes the SDP Object A to the scripting engine for conventional processing as indicated by arrow . After the scripting engine receives the SDP Object A from the acquisition agent the scripting engine in response sends a WebRTC session description object referred to as SDP Object B to the acquisition agent indicated by arrow . The SDP Object B in this example represents the answer in the WebRTC offer answer exchange. In some embodiments the acquisition agent may examine the SDP Object B to further determine characteristics of the WebRTC interactive flow to be established. The SDP Object B is then sent to the WebRTC application server via a secure network connection as indicated by arrow . The WebRTC application server in turn forwards the SDP Object B to the WebRTC client as shown by arrow .

With continuing reference to the WebRTC clients and in particular the WebRTC functionality provider then begin hole punching to determine the best way to establish direct communications between the WebRTC clients and . The hole punching process is indicated by bidirectional arrow in . Hole punching is a technique often using protocols such as Interactive Connectivity Establishment ICE in which two web clients establish a connection with an unrestricted third party server not shown that uncovers external and internal address information for use in direct communications. If the hole punching is successful the WebRTC client and the WebRTC functionality provider of the WebRTC client begin key negotiations to establish a secure peer connection indicated by bidirectional arrow . Upon establishing a secure peer connection the WebRTC client and the WebRTC functionality provider of the WebRTC client begin exchanging a secure WebRTC interactive flow as shown by bidirectional arrow .

The acquisition agent of the WebRTC client communicates the determined characteristics of the WebRTC interactive flow to the correlation agent for storing. In some embodiments the WebRTC interactive flow characteristics may be communicated via a secure HTTP HTTPS connection or WebSockets connection while some embodiments may provide that the characteristics are communicated via a WebRTC data flow established between the acquisition agent and the correlation agent . In the latter scenario the acquisition agent and the correlation agent first establish a secure WebRTC data flow as indicated by bidirectional arrow . The correlation agent then receives and stores the characteristics of the WebRTC interactive flow from the acquisition agent as shown by arrow .

To generally describe exemplary operations for acquiring and correlating WebRTC interactive flow characteristics is provided. For the sake of clarity refers to elements of the exemplary WebRTC interactive system of . is a flowchart illustrating exemplary operations for the acquisition agent and the correlation agent of . In this example of operations begin with the acquisition agent of the WebRTC client receiving a peer connection initiation dialogue for establishing a WebRTC interactive flow block . The acquisition agent next determines one or more characteristics of the WebRTC interactive flow based on the peer connection initiation dialogue block . In some embodiments the characteristics of the WebRTC interactive flow may be determined based on a content of WebRTC session description objects not shown exchanged during the peer connection initiation dialogue and or on HTTP header data certificates cryptographic keys and or network routing data provided by packets transporting the peer connection initiation dialogue . As non limiting examples the characteristics of the WebRTC interactive flow may include a user identity a website identity a transport identity a server identity a transport address an Internet Protocol IP address an indication of a change to a media flow an indication of a termination of a media flow and or a timestamp of the WebRTC interactive flow .

The correlation agent then receives the one or more characteristics of the WebRTC interactive flow from the acquisition agent block . Some embodiments may provide that the WebRTC interactive flow characteristics may be communicated via a secure HTTP HTTPS connection or WebSockets connection or via a WebRTC data flow established between the acquisition agent and the correlation agent . The correlation agent next stores the one or more characteristics of the WebRTC interactive flow block . Storing the one or more characteristics of the WebRTC interactive flow may comprise storing the characteristics in a database or other data repository accessible to the correlation agent .

The correlation agent may then correlate one or more stored characteristics not shown related to the WebRTC interactive flow and or one or more concurrent or previous WebRTC interactive flows not shown block . In some embodiments the one or more stored characteristics may be characteristics of the WebRTC interactive flow gathered from multiple sources while some embodiments may provide that the one or more stored characteristics is related to other concurrent or previous WebRTC interactive flows. In this manner the correlation agent may gain insight into the participants or other aspects of the WebRTC interactive flow . Based on the correlating the correlation agent generates one or more interaction records block . The one or more interaction records may include a call description record a call detail record or a transaction record as non limiting examples. In some embodiments the stored WebRTC interactive flow characteristics may be subsequently deleted by the correlation agent as necessary. As non limiting examples the stored WebRTC interactive flow characteristics may be expunged after a defined time interval has passed or may be deleted upon a determination by the correlation agent that the stored WebRTC interactive flow characteristics no longer provide useful insight.

Some embodiments may provide that the acquisition agent and the correlation agent are configured to communicate via a secure HTTP HTTPS connection or WebSockets connection or via a WebRTC data flow established between the acquisition agent and the correlation agent . In the latter scenario the WebRTC client may optionally establish a WebRTC data flow between the WebRTC client and the correlation agent block . The correlation agent then receives the one or more characteristics of the WebRTC interactive flow from the acquisition agent block . The correlation agent stores the one or more characteristics of the WebRTC interactive flow block . According to some embodiments disclosed herein storing the one or more characteristics of the WebRTC interactive flow may comprise storing the characteristics in a database or other data repository accessible to the correlation agent .

The correlation agent also may optionally receive one or more media characteristics of the WebRTC interactive flow from a network element block . In some embodiments the media characteristics may include media transport characteristics such as data regarding changes to the WebRTC interactive flow routing of the WebRTC interactive flow or termination of the WebRTC interactive flow . According to some embodiments disclosed herein the media characteristics may include media processing characteristics such as data related to encoding and or transcoding the WebRTC interactive flow . The correlation agent may then store the one or more media characteristics of the WebRTC interactive flow block .

The correlation agent may then correlate one or more stored characteristics and or one or more stored media characteristics if appropriate block . By correlating the stored characteristics the correlation agent may generate insight into various facets of the WebRTC interactive flow that may otherwise be difficult to determine. Such insight may include as non limiting examples an identity of one or more participants an insight into endpoint capabilities or information regarding websites and servers involved in the WebRTC interactive flow . Based on the correlating the correlation agent may generate one or more interaction records block . In some embodiments the one or more interaction records may include a call description record a call detail record or a transaction record as non limiting examples. In some embodiments the stored WebRTC interactive flow characteristics may be subsequently deleted by the correlation agent as necessary block . As non limiting examples the stored WebRTC interactive flow characteristics may be expunged after a defined time interval has passed or may be deleted upon a determination by the correlation agent that the stored WebRTC interactive flow characteristics no longer provide useful insight.

The exemplary computer system includes a processing device or processor a main memory as non limiting examples read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM etc. and a static memory as non limiting examples flash memory static random access memory SRAM etc. which may communicate with each other via a bus . Alternatively the processing device may be connected to the main memory and or the static memory directly or via some other connectivity means.

The processing device represents one or more processing devices such as a microprocessor central processing unit CPU or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor a reduced instruction set computing RISC microprocessor a very long instruction word VLIW microprocessor a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing device is configured to execute processing logic in instructions and or cached instructions for performing the operations and steps discussed herein.

The computer system may further include a communications interface in the form of a network interface device . It also may or may not include an input to receive input and selections to be communicated to the computer system when executing the instructions . It also may or may not include an output including but not limited to display s . The display s may be a video display unit as non limiting examples a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device as a non limiting example a keyboard a cursor control device as a non limiting example a mouse and or a touch screen device as a non limiting example a tablet input device or screen .

The computer system may or may not include a data storage device that includes using drive s to store the functions described herein in a computer readable medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The functions can include the methods and or other functions of the processing system a participant user device and or a licensing server as non limiting examples. The one or more sets of instructions may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system . The main memory and the processing device also constitute machine accessible storage media. The instructions and or may further be transmitted or received over a network via the network interface device . The network may be an intra network or an inter network.

While the computer readable medium is shown in an exemplary embodiment to be a single medium the term machine accessible storage medium should be taken to include a single medium or multiple media as non limiting examples a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions . The term machine accessible storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies disclosed herein. The term machine accessible storage medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

The embodiments disclosed herein may be embodied in hardware and in instructions that are stored in hardware and may reside as non limiting examples in Random Access Memory RAM flash memory Read Only Memory ROM Electrically Programmable ROM EPROM Electrically Erasable Programmable ROM EEPROM registers a hard disk a removable disk a CD ROM or any other form of computer readable medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an Application Specific Integrated Circuit ASIC . The ASIC may reside in a remote station. In the alternative the processor and the storage medium may reside as discrete components in a remote station base station or server.

It is also noted that the operational steps described in any of the exemplary embodiments herein are described to provide examples and discussion. The operations described may be performed in numerous different sequences other than the illustrated sequences. Furthermore operations described in a single operational step may actually be performed in a number of different steps. Additionally one or more operational steps discussed in the exemplary embodiments may be combined. It is to be understood that the operational steps illustrated in the flow chart diagrams may be subject to numerous different modifications as will be readily apparent to one of skill in the art. Those of skill in the art would also understand that information and signals may be represented using any of a variety of different technologies and techniques. As non limiting examples data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

The previous description of the disclosure is provided to enable any person skilled in the art to make or use the disclosure. Various modifications to the disclosure will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other variations without departing from the spirit or scope of the disclosure. Thus the disclosure is not intended to be limited to the examples and designs described herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

