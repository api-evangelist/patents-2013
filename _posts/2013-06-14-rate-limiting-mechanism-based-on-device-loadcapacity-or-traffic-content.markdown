---

title: Rate limiting mechanism based on device load/capacity or traffic content
abstract: The present disclosure discloses a method and network device for a rate limiting mechanism based on device load/capacity or traffic content. Specifically, the system receives a request from a network node, and determines whether a ratio between a current load and a capacity exceeds a threshold. If so, the system determines a wait time period based on current load/capacity ratio, and responds to the network node with a message including the wait time period. Moreover, the system can inspect content of the request to determine a message type, and whether the message type indicates that the request is associated with dependent messages. If so, the system responds to the request with a busy message including the wait time period. Further, the system rejects new session requests if the number of concurrent sessions currently connected to the network device approaches the number of sessions associated with a regression point.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467326&OS=09467326&RS=09467326
owner: Hewlett-Packard Development Company, L.P.
number: 09467326
owner_city: Houston
owner_country: US
publication_date: 20130614
---
This application claims the benefit of priority on U.S. Provisional Patent Application 61 732 829 filed Dec. 3 2012 the entire contents of which are incorporated by reference.

Related patent applications to the subject application include the following 1 U.S. patent application entitled System and Method for Achieving Enhanced Performance with Multiple Networking Central Processing Unit CPU Cores by Janakiraman et al. U.S. application Ser. No. 13 692 622 filed Dec. 3 2012 2 U.S. patent application entitled Ingress Traffic Classification and Prioritization with Dynamic Load Balancing by Janakiraman et al. U.S. application Ser. No. 13 692 608 filed Dec. 3 2012 3 U.S. patent application entitled Method and System for Maintaining Derived Data Sets by Gopalasetty et al. U.S. application Ser. No. 13 692 920 filed Dec. 3 2012 4 U.S. patent application entitled System and Method for Message handling in a Network Device by Palkar et al. U.S. application Ser. No. 13 918 732 filed Jun. 14 2013 5 U.S. patent application entitled Session Based Forwarding by Janakiraman et al. U.S. application Ser. No. 13 918 748 filed Jun. 14 2013 6 U.S. patent application entitled Control Plane Protection for Various Tables Using Storm Prevention Entries by Janakiraman et al. U.S. application Ser. No. 13 918 770 filed Jun. 14 2013. The entire contents of the above applications are incorporated herein by reference.

The present disclosure relates to networking processing performance of a symmetric multiprocessing SMP network architecture. In particular the present disclosure relates to a system and method for providing a rate limiting mechanism based on device load capacity ratio or traffic content.

A symmetric multiprocessing SMP architecture generally is a multiprocessor computer architecture where two or more identical processors can connect to a single shared main memory. In the case of multi core processors the SMP architecture can apply to the CPU cores.

In an SMP architecture multiple networking CPUs or CPU cores can receive and transmit network traffic from a large number of access points. Generally each access point and or client in the network will need to be properly authenticated by the network. Such authentication may involve a multi step process e.g. including at least step 1 step 2 and step 3 for each access point. On a highly scalable platform it is possible that when a large volume of authentication requests are handled by the system around the same time period a significant number of requests will not be able to complete through all of the steps in the multi step process. Thus those requests will have to be re transmitted and their corresponding clients will need to renegotiate the authentication process i.e. going through the same multi step process again from the very first step.

Therefore it is very important for the system to have a mechanism that ensures initiated authentication processes complete prior to committing to new authentication processes. A conventional solution involves discarding any new authentication requests or returning a busy message if there are any existing incomplete authentication processes have been initiated so that those existing authentication processes have a better chance to complete without suffering downgraded system performance from accepting new authentication requests. However having no knowledge and visibility of the real time system load and or capacity the clients whose requests are discarded or declined will re transmit the same request at a random future time. Moreover it is possible that when the requests get re transmitted the system is still busy and still cannot commit to the new authentication requests from clients.

In the following description several specific details are presented to provide a thorough understanding. While the context of the disclosure is directed to SMP architecture performance enhancement one skilled in the relevant art will recognize however that the concepts and techniques disclosed herein can be practiced without one or more of the specific details or in combination with other components etc. In other instances well known implementations or operations are not shown or described in details to avoid obscuring aspects of various examples disclosed herein. It should be understood that this disclosure covers all modifications equivalents and alternatives falling within the spirit and scope of the present disclosure.

Embodiments of the present disclosure relate to networking processing performance. In particular the present disclosure relates to a system and method for providing a rate limiting mechanism based on device load capacity ratio or traffic content.

Specifically the system is capable of applying rate limits on the number of packets and or the number of sessions based on a variety of factors such as current system load system capacity ratio between current load and capacity type of request packets content of request packets etc. Moreover the system can determine and communicate a wait time period to the client based on the above factors.

A system failure a system reset installation of a new controller device or another event may cause a multitude of access points to request configuration information at the same time which results in a system overload. In one or more embodiments deep packet inspection is used to rate limit the requests for new configuration information. Components within a data plane i.e. components at an ingress interface that receive the requests for new configuration information limit the number of configuration requests that are forwarded to a Central Processing Unit CPU . Specifically the device components at an ingress interface identify requests for new configuration based on deep packet inspection or using another mechanism. In an example a hello message from an access point is recognized as a request to initiate a configuration process.

Thereafter per period of time the device components forward the requests to the CPU until a threshold number of requests have been forwarded. Once the threshold number of requests has been forwarded the components refrain from forwarding additional requests during that period of time. The additional requests may simply be dropped and or senders of the additional requests may be informed that the system is busy. Based on the messages received the senders of the additional requests may temporarily refrain from re sending the requests.

In an embodiment components at the ingress interface of a device forward packets to a Central Processing Unit CPU based on the current load of the CPU. If the load of the CPU is above a particular threshold the components do not forward the packets to the CPU for processing by the CPU. If the load of the CPU is below the particular threshold the components forward the packets to the CPU for processing by the CPU.

Rate limiting the amount of data that is forwarded from the ingress interface also referred to herein as the data plane to the Central Processing Unit also referred to herein as a portion of the control plane protects the control plane from being overloaded.

In an embodiment requests are received from a first device during a particular time period via an IP sec tunnel that has been established for communication with the device. Rate limiting requests as described above results in rejection of the requests because an allowed number of requests for the particular time period have already been forwarded to the CPU. A message is transmitted to the first device to 1 cause the first device to maintain the IP sec tunnel 2 refrain from re sending the request and or 3 re send the request after some time has elapsed. Maintaining the IP sec tunnel is advantageous as the IP sec tunnel does not have to be re established. For example an exchange of security credentials and or establishing a security association does not have to be redone.

In an embodiment the present disclosure relates to limiting a number of communication sessions. For example the present disclosure relates to initiating a threshold number of communication sessions within a particular time period and rejecting requests for the initiation of communication sessions after the threshold number has been reached.

Applications executing on one or more devices may establish a communication session for exchanging data. Session information about the communication session is stored on at least one device executing one of the applications that are exchanging data. Session information may include information associated with the applications users devices etc. involved in the communication session. Session information may include a unique identifier to distinguish the corresponding communication session from other communication sessions.

In an example a first client device executing a first application stores session information about a communication session. Messages transmitted on behalf of the first application by the first client device include the session information so that receiving devices and or applications are able to identify the session.

In an example a first endpoint such as a first application executing on a first device may attempt to establish a communication session with a second endpoint such as a second application executing on a second device or the same first device . In order to establish a communication session the first endpoint transmits a first packet that identifies a source port as the port which corresponds to the first application and an initial sequence number. The first packet further identifies a destination port as the port which corresponds to the second application. The second application receives the first packet and stores the sequence number of the first packet. Furthermore the second application transmits a reply packet to the first application with an initial sequence number. The first or second application may store or manage session information about the session and refer to the session information for future communication.

In an embodiment different control plan traffic is rate limited at different rates. In an embodiment Access Control Lists ACLs are used to implement different rates. In an example a source port or a destination port is associated with a particular rate for a particular type of traffic e.g. initiation of a new communication session . The particular rate indicates a number of communication sessions that may be initiated. When a source port sends a new request for initiating a communication session a number of already initiated sessions is compared to a threshold number of sessions. If the number of already initiated sessions requested by that source port meets or exceeds the threshold number of sessions then the request is rejected. If the number of already initiated sessions requested by that source port does not meet or exceed the threshold number of sessions then the request is granted and the communication session is established.

Specifically includes at least a control plane process two or more datapath processors a lockless shared memory accessible by the two or more datapath processors and a network interface .

Control plane process may be running on one or more CPU or CPU cores such as CP CPU CP CPU . . . CP CPU M . Furthermore control plane process typically handles network control or management traffic generated by and or terminated at network devices as opposed to data traffic generated and or terminated at client devices.

According to embodiments of the present disclosure datapath processors include a single slowpath SP processor e.g. SP CPU and multiple fastpath FP processors e.g. FP CPU FP CPU . . . FP CPU N . Only FP processors are able to receive data packets directly from network interface . SP processor on the other hand only receives data packets from FP processors.

Lockless shared memory is a flat structure that is shared by all datapath processors and not tied to any particular CPU or CPUs. Any datapath processor can read any memory location within lockless shared memory . Therefore both the single SP processor e.g. SP CPU and the multiple FP processors e.g. FP CPU FP CPU . . . FP CPU N have read access to lockless shared memory but only the single SP processor e.g. SP CPU has write access to lockless shared memory . More specifically any datapath processor can have access to any location in lockless shared memory in the disclosed system.

Also control plane process is communicatively coupled to slowpath SP CPU but not fastpath FP processors e.g. FP CPU FP CPU . . . FP CPU N . Thus whenever control plane process needs information from datapath processors control plane process will communicate with SP processor e.g. SP CPU .

At time point t access point sends a hello message to controller . Hello message is received by controller at time point t. Assuming that at time point t controller determines that the ratio between real time controller device load and controller capacity is 50 . Based on the determined load capacity ratio at time point t controller can either send a response or send a busy message to access point in response to hello message . For example in some embodiments controller may compare the current load capacity ratio at time point twith a predetermined threshold. If the load capacity ratio is higher than the threshold controller will send busy message at time point t otherwise controller will respond to hello message . Furthermore if controller decides to send busy message controller can further determine a wait time period indicating the amount of time access point shall wait before sending another request of the same type to controller . The wait time period can be determined as a function of the load capacity ratio e.g. the wait time can be directly proportional to the load capacity ratio. Busy message which is received by access point at time point t will include the determined wait time period in this example 10 seconds .

Likewise at time point t access point sends a second hello message to controller . Hello message is received by controller at time point t. Assuming that at time point t controller determines that the ratio between real time controller device load and controller capacity is 60 . Based on the determined load capacity ratio at time point t controller can send a busy message to access point at time point tin response to hello message . Furthermore controller can determine a wait time period e.g. 20 seconds based on the load capacity ratio e.g. 60 . Busy message which is received by access point at time point t will include the determined wait time e.g. 20 seconds .

Similarly assuming that at time point t access point sends a third hello message to controller . Hello message is received by controller at time point t. Assuming that at time point t controller determines that the ratio between real time controller device load and controller capacity is 90 . Based on the determined load capacity ratio at time point t controller can send a busy message to access point at time point tin response to hello message . Furthermore controller can determine a wait time period e.g. 60 seconds based on the load capacity ratio e.g. 90 . Busy message which is received by access point at time point t will include the determined wait time period e.g. 60 seconds .

In some embodiments where controller is connected to a number of access points and each access point has a number of associated wireless clients the capacity of controller can be measured by the maximum total number of clients that all of the access points connected to controller can service collectively. On the other hand the current load of controller indicates the actual number of clients that are associated with any access points currently connected to controller .

Generally the communication exchanges between controller and each access point follow the certain protocols which create dependencies between the communication exchange messages. For example an access point may first send a hello message to controller . Next controller sends a busy message or a hello response message to access point . Subsequently access point configuration messages are exchanged between controller and access point . Finally access point starts to forward client messages to controller . In this example access point configuration messages are dependent on the successful transmission and process of hello message from access point . Also client messages are dependent on the successful transmission and process of the access point configuration messages. Therefore controller is expected to receive different types of messages from the same access point according to a predetermined sequence order e.g. hello message followed by access point configuration message followed by client messages forwarded by the access points. Then controller can monitor the total number of authenticated access points that are connected to controller and start respond to certain types of messages e.g. hello message with busy message when the total number of authenticated access points exceeds a predetermined threshold.

Note that controller may only respond to hello messages from new access points with busy message while continuing to access other types of messages e.g. access configuration messages and or client messages from authenticated access points. In a hypothetical scenario if network controller already has 200 access points connected to it and there are 20 clients associated with each access point then there are a total of 2 000 clients sending messages that are transmitted through controller via 200 access points. Adding another authenticated access point would not help improving the performance of controller because it would allow a significant number of clients to able to transmit messages through controller that is already overloaded. Therefore it is more effective to throttle the number of access points that controller authenticates than throttling the number of clients.

In essence a process such as a software access point process SAPM residing on the disclosed network device can identify dependencies among different messages perform a deep packet inspection to determine a type associated with a received message and delay the processing of the message if it is the first message in a sequence of messages based on the identified dependencies among different messages.

Specifically as illustrated in at time point t one of access points e.g. AP sends a hello message to controller . Hello message is received by controller at time point t. Assuming that at time point t controller determines that the total number of authenticated access points that are connected to controller is less than a predetermined threshold e.g. 1 800 authenticated access points. Based on the determined total number of authenticated access points at time point t controller sends a hello response message to access point AP at time point tin response to hello message . Hello response message is received by access point AP at time point t. Subsequently controller and access point AP exchange a number of access point configuration messages . Access point configuration messages include specific configuration information for access point AP. Upon completion of configuration at time point t access point AP will start forwarding client messages which are received by controller at time point t.

Now assuming that at time point t another one of access points e.g. AP sends a hello message to controller . Hello message is received by controller at time point t. Furthermore assuming that at time point t controller determines that the total number of authenticated access points equals to a predetermined threshold e.g. 1 800 authenticated access points. Based on the determined total number of authenticated access points at time point t controller determines a wait time period for access point AP e.g. 600 seconds. Then controller sends a busy response message to access point AP at time point tin response to hello message . Busy message includes the determined wait time period for access point AP and is received by access point APat time point t. Note that the wait time period indicates the amount of time access point AP shall wait before sending hello message to controller . The wait time period can be determined as a function of the total number of authenticated access points that are currently connected to controller e.g. the wait time period can be directly proportional to the number of authenticated access points connected to controller .

As another example assuming that at time point t another one of access points e.g. AP sends a hello message to controller . Hello message is received by controller at time point t. Furthermore assuming that at time point t controller determines that the total number of authenticated access points e.g. 1 900 authenticated access points is greater than a predetermined threshold e.g. 1 800 authenticated access points. Based on the determined total number of authenticated access points at time point t controller determines a wait time period for access point AP e.g. 2 000 seconds. Alternatively or additionally the wait time period and or the predetermined threshold can also be determined based on system load metrics which may include but are not limited to control plane CP processor utilization slowpath SP processor utilization and or fastpath FP processor utilization. Then controller sends a busy response message to access point AP at time point tin response to hello message . Busy message includes the determined wait time period e.g. 2 000 seconds for access point AP and is received by access point APat time point t. Note that the wait time period indicates the amount of time access point AP shall wait before sending another hello message to controller .

As illustrated in the system disclosed herein is able to locate the peaking point of performance by identifying the maximum number of concurrent sessions that the controller can support without suffering from poor performance. Thereafter the disclosed system can apply the rate limiting mechanism on the identified maximum number of concurrent sessions such that the system can perform at the peak level as it approaches its maximum number of concurrent sessions.

Therefore besides rate limiting on packets the rate limiting mechanism disclosed in the present disclosure can also be applied on communication sessions. When rate limiting mechanism is applied to packets the system determines whether or not to discard a received packet based on various metrics such as system load system capacity 

CP processor utilization SP FP processor utilization load capacity ratio traffic content packet type etc. When rate limiting mechanism is applied to sessions the system will decline request for creation of a session and instead return a busy message indicating a wait time period after which the session creation request shall be retransmitted.

According to the present disclosure the rate limiting on concurrent sessions can be performed in a number of different ways. First the controller can determine the number of sessions that can are created and associated with a specific hello message. Because the hello message exchanges follow a specific pattern the controller can define and use an access control list ACL for rate limiting of the number of concurrent sessions allowed per hello message. For example the controller can specify an ACL entry to indicate that no more than 200 concurrent sessions are allowed from the access point that sent a particular hello message. Each of the 200 concurrent sessions corresponds to a client communication session.

In addition the controller can determine the maximum number of control sessions that are allowed by the system. For example the controller can specify in an ACL that no more than 100 control sessions are allowed. Each control session corresponds to a communication session between the controller and an access point. Accordingly no more than 100 access points can be connected to the controller at any given time.

The ACL entry illustrated in includes at least access point AP sub network controller Internet Protocol IP address protocol and access control policy . In this example AP sub network has a value of 10.10.20.0 16 controller IP has a value of 10.10.10.10 protocol indicates Encapsulating Security Payload ESP and access control policy indicates a rate limiting policy that permits a maximum of 100 concurrent sessions per second.

The ACL entry illustrated in includes at least access point AP sub network controller Internet Protocol IP address protocol source port destination port and access control policy . In this example AP sub network has a value of 10.10.30.0 8 controller IP has a value of 10.10.10.10 protocol indicates User Datagram Protocol UDP source port can be any port destination port is port and access control policy indicates a rate limiting policy that permits sessions per second.

In addition access control policy may also indicate a maximum allowed number of concurrent sessions for example a maximum of 150 concurrent sessions allowed by the controller. If such maximum session limitation is indicated in access control policy when there are 150 active concurrent sessions supported by the controller even though the current rate is less than the policy limit of 100 sessions per second the controller will not permit any additional sessions to be established until the total number of active concurrent sessions is below the specified maximum number e.g. 150 sessions.

Network interface can be any communication interface which includes but is not limited to a modem token ring interface Ethernet interface wireless IEEE 802.11 interface e.g. IEEE 802.11n IEEE 802.11ac etc. cellular wireless interface satellite transmission interface or any other interface for coupling network devices. In some embodiments network interface may be software defined and programmable for example via an Application Programming Interface API and thus allowing for remote control of the network device .

Shared memory can include storage components such as Dynamic Random Access Memory DRAM Static Random Access Memory SRAM etc. In some embodiments shared memory is a flat structure that is shared by all datapath processors including e.g. slow path processor core fastpath processor core fastpath processor core . . . fastpath processor core etc. and not tied to any particular CPU or CPU cores. Any datapath processor can read any memory location within shared memory . Shared memory can be used to store various tables to facilitate control plane protection for the various tables using storm prevention entries. For example the tables may include but are not limited to a bridge table a session table a user table a station table a tunnel table a route table and or route cache etc. It is important to note that there is no locking mechanism associated with shared memory . Any datapath processor can have access to any location in lockless shared memory in network device .

Slowpath processor core typically includes a networking processor core that is capable of processing network data traffic. Slowpath processor core is a single dedicated CPU core that typically handles table managements. Note that slowpath processor core only receives data packets from one or more fastpath processor cores such as fastpath processor core fastpath processor core . . . fastpath processor core . In other words slowpath processor core does not receive data packets directly from any line cards or network interfaces. Only the plurality of fastpath processor cores can send data packets to slowpath processor core . Moreover slowpath processor core is the only processor core having the write access to shared memory and thereby will not cause any data integrity issues even without a locking mechanism in place for shared memory .

Fastpath processor cores also include networking processor cores that are capable of processing network data traffic. However by definition fastpath processor cores only performs fast packet processing. Thus fastpath processor cores do not block themselves and wait for other components or modules during the processing of network packets. Any packets requiring special handling or wait by a processor core will be handed over by fastpath processor cores to slowpath processor core .

Each of fastpath processor cores maintains one or more counters. The counters are defined as a regular data type for example unsigned integer unsigned long long etc. in lieu of an atomic data type. When a fastpath processor core receives a packet it may increment or decrement the values of the counters to reflect network traffic information including but not limited to the number of received frames the number of received bytes error conditions and or error counts etc. In addition fastpath processor cores can use such information to apply rate limiting mechanisms as described in the present disclosure.

A typical pipeline process at fastpath processor cores includes one or more of port lookup VLAN lookup port VLAN table lookup bridge table lookup firewall session table lookup route table lookup packet encapsulation packet encryption packet decryption tunnel de capsulation forwarding etc.

According to embodiments of the present disclosure network services provided by network device solely or in combination with other wireless network devices include but are not limited to an Institute of Electrical and Electronics Engineers IEEE 802.1x authentication to an internal and or external Remote Authentication Dial In User Service RADIUS server an MAC authentication to an internal and or external RADIUS server a built in Dynamic Host Configuration Protocol DHCP service to assign wireless client devices IP addresses an internal secured management interface Layer forwarding Network Address Translation NAT service between the wireless network and a wired network coupled to the network device an internal and or external captive portal an external management system for managing the network devices in the wireless network etc.

The present disclosure may be realized in hardware software or a combination of hardware and software. The present disclosure may be realized in a centralized fashion in one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems coupled to a network. A typical combination of hardware and software may be an access point with a computer program that when being loaded and executed controls the device such that it carries out the methods described herein.

The present disclosure also may be embedded in non transitory fashion in a computer readable storage medium e.g. a programmable circuit a semiconductor memory such as a volatile memory such as random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

As used herein digital device generally includes a device that is adapted to transmit and or receive signaling and to process information within such signaling such as a station e.g. any data processing equipment such as a computer cellular phone personal digital assistant tablet devices etc. an access point data transfer devices such as network switches routers controllers etc. or the like.

As used herein access point AP generally refers to receiving points for any known or convenient wireless access technology which may later become known. Specifically the term AP is not intended to be limited to IEEE 802.11 based APs. APs generally function as an electronic device that is adapted to allow wireless devices to connect to a wired network via various communications standards.

As used herein the term interconnect or used descriptively as interconnected is generally defined as a communication pathway established over an information carrying medium. The interconnect may be a wired interconnect wherein the medium is a physical medium e.g. electrical wire optical fiber cable bus traces etc. a wireless interconnect e.g. air in combination with wireless signaling technology or a combination of these technologies.

As used herein information is generally defined as data address control management e.g. statistics or any combination thereof. For transmission information may be transmitted as a message namely a collection of bits in a predetermined format. One type of message namely a wireless message includes a header and payload data having a predetermined number of bits of information. The wireless message may be placed in a format as one or more packets frames or cells.

As used herein wireless local area network WLAN generally refers to a communications network links two or more devices using some wireless distribution method for example spread spectrum or orthogonal frequency division multiplexing radio and usually providing a connection through an access point to the Internet and thus providing users with the mobility to move around within a local coverage area and still stay connected to the network.

As used herein the term mechanism generally refers to a component of a system or device to serve one or more functions including but not limited to software components electronic components electrical components mechanical components electro mechanical components etc.

As used herein the term embodiment generally refers an embodiment that serves to illustrate by way of example but not limitation.

It will be appreciated to those skilled in the art that the preceding examples and embodiments are exemplary and not limiting to the scope of the present disclosure. It is intended that all permutations enhancements equivalents and improvements thereto that are apparent to those skilled in the art upon a reading of the specification and a study of the drawings are included within the true spirit and scope of the present disclosure. It is therefore intended that the following appended claims include all such modifications permutations and equivalents as fall within the true spirit and scope of the present disclosure.

While the present disclosure has been described in terms of various embodiments the present disclosure should not be limited to only those embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Likewise where a reference to a standard is made in the present disclosure the reference is generally made to the current version of the standard as applicable to the disclosed technology area. However the described embodiments may be practiced under subsequent development of the standard within the spirit and scope of the description and appended claims. The description is thus to be regarded as illustrative rather than limiting.

