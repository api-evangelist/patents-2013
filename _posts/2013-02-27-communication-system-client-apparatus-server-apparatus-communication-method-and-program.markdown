---

title: Communication system, client apparatus, server apparatus, communication method, and program
abstract: In a communication system in which a server apparatus on the Internet is connected to at least one client apparatus on an intranet via a firewall, the client apparatus comprises: acquisition means for acquiring, from the server apparatus, information associated with a transmission interval at which notifications are periodically transmitted to maintain the connection to the server; and management means for maintaining the connection by periodically transmitting the notifications based on the information associated with the acquired transmission interval, and the server apparatus comprises: decision means for deciding an interval, in which the connection in the push communication can be maintained in non-communication, based on the communication status information; and notification means for notifying the client apparatus of the decided interval as information associated with the transmission interval used to maintain the connection in the push communication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09277016&OS=09277016&RS=09277016
owner: CANON KABUSHIKI KAISHA
number: 09277016
owner_city: Tokyo
owner_country: JP
publication_date: 20130227
---
The present invention relates to a communication system a client apparatus a server apparatus a communication method and a program and more particularly to a method of maintaining connection in push communication and a communication method.

A communication scheme for continuously maintaining communication connection without imposing any unwanted load on a network has been proposed conventionally. In the conventional technique disconnection can be prevented by periodically transmitting packets Keep Alive . As for example a client autonomously decides an appropriate Keep Alive interval connection is continuously maintained without imposing any unwanted load on a network see for example Japanese Patent Laid Open No. 2003 18235 .

On the other hand a push communication scheme of performing communication past a proxy server by continuously maintaining connection from a server on the Internet to a client on an intranet located inside a firewall has been proposed see for example The WebSocket protocol draft ietf hybi thewebsocketprotocol 17 online Sep. 30 2011 IETF Searched on Dec. 27 2011 Internet .

In Japanese Patent Laid Open No. 2003 18235 appropriate Keep Alive transmission is impossible when communication is performed past a firewall by push communication as shown in The WebSocket protocol draft ietf hybi thewebsocketprotocol 17 online Sep. 30 2011 IETF Searched on Dec. 27 2011 Internet . This indicates that in push communication a communication device such as a firewall is present in a communication path so a server cannot perform Keep Alive transmission to a client apparatus on an intranet at an appropriate interval. As a result a communication apparatus in a communication path may disconnect connection so communication from the server on the Internet to the client apparatus becomes impossible.

Also if the Keep Alive interval is short the amount of excess communication increases so the amount of traffic increases and the communication efficiency lowers. However if the Keep Alive interval is long communication interruption occurs due to the presence of a firewall and connection cannot be maintained so instant data transfer becomes impossible.

The present invention has been made in consideration of the above mentioned problem and proposes a communication system capable of data transfer while continuing communication connection even if communication regulation in which communication connection is disconnected such as a firewall occurs in a communication path.

According to one aspect of the present invention there is provided a communication system in which a server apparatus on the Internet is connected to at least one client apparatus on an intranet via a firewall characterized in that the client apparatus comprises generation means for generating connection in push communication to the server apparatus acquisition means for acquiring from the server apparatus information associated with a transmission interval at which notifications are periodically transmitted to maintain the connection and management means for maintaining the connection generated by the generation means by periodically transmitting the notifications based on the information associated with the transmission interval acquired by the acquisition means and the server apparatus comprises communication control means for performing data communication using connection in push communication to the client apparatus storage means for storing communication status information associated with data communication performed by the communication control means decision means for deciding an interval in which the connection in the push communication can be maintained in non communication based on the communication status information stored in the storage means and notification means for notifying the client apparatus of the interval decided by the decision means as information associated with the transmission interval used to maintain the connection in the push communication.

According to another aspect of the present invention there is provided a client apparatus on an intranet connected to a server apparatus on the Internet via a firewall characterized by comprising generation means for generating connection in push communication to the server apparatus acquisition means for acquiring from the server apparatus information associated with a transmission interval at which notifications are periodically transmitted to maintain the connection and management means for maintaining the connection to the server apparatus generated by the generation means by periodically transmitting the notifications based on the information associated with the transmission interval acquired by the acquisition means.

According to another aspect of the present invention there is provided a server apparatus connected to at least one client apparatus on an intranet via a firewall characterized by comprising communication control means for performing data communication using connection in push communication to the client apparatus storage means for storing communication status information associated with data communication performed by the communication control means decision means for deciding an interval in which the connection in the push communication can be maintained in non communication based on the communication status information stored in the storage means and notification means for notifying the client apparatus of the interval decided by the decision means as information associated with a transmission interval in communication to maintain the connection in the push communication.

According to another aspect of the present invention there is provided a communication method for a client apparatus on an intranet connected to a server apparatus on the Internet via a firewall characterized by comprising a generation step of making generation means generate connection in push communication to the server apparatus an acquisition step of making acquisition means acquire from the server apparatus information associated with a transmission interval at which notifications are periodically transmitted to maintain the connection and a management step of making management means maintain the connection to the server apparatus generated in the generation step by periodically transmitting the notifications based on the information associated with the transmission interval acquired in the acquisition step.

According to another aspect of the present invention there is provided a communication method for a server apparatus connected to at least one client apparatus on an intranet via a firewall characterized by comprising a communication control step of making communication control means perform data communication using connection in push communication to the client apparatus a storage step of storing in storage means communication status information associated with data communication performed in the communication control step a decision step of making decision means decide an interval in which the connection in the push communication can be maintained in non communication based on the stored communication status information and a notification step of making notification means notify the client apparatus of the interval decided in the decision step as information associated with a transmission interval in communication performed to maintain the connection in the push communication.

According to another aspect of the present invention there is provided a program characterized by causing a computer to function as generation means for generating connection in push communication to a server apparatus on the Internet connected via a firewall acquisition means for acquiring from the server apparatus information associated with a transmission interval at which notifications are periodically transmitted to maintain the connection and management means for maintaining the connection to the server apparatus generated by the generation means by periodically transmitting the notifications based on the information associated with the transmission interval acquired by the acquisition means.

According to another aspect of the present invention there is provided a program characterized by causing a computer to function as communication control means for performing data communication using connection in push communication to a client apparatus on an intranet connected via a firewall storage means for storing communication status information associated with data communication performed by the communication control means decision means for deciding an interval in which the connection in the push communication can be maintained in non communication based on the stored communication status information and notification means for notifying the client apparatus of the interval decided by the decision means as information associated with a transmission interval in communication to maintain the connection in the push communication.

An appropriate Keep Alive interval can be decided even in communication between a client and a server via a firewall using the push communication scheme. Also communication for maintaining continuous connection can be done without imposing any unwanted load on a network.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

Modes for carrying out the present invention will be described below with reference to the accompanying drawings. Note that the following embodiments do not limit the present invention according to the scope of claims and all combinations of features described in these embodiments are not always indispensable for solving means of the present invention.

An example of the configuration of a communication system according to an embodiment of the present invention will be described. is a diagram illustrating an example of a system configuration for explaining the use environment of a communication system according to an embodiment of the present invention.

Note that as long as the functions of the present invention are implemented the operation of a program on a multifunction peripheral may be executed by a CPU RAM or ROM on a printer scanner or MFP Multifunction Peripheral as a matter of course. Also the operation of a program on a server may be executed under a virtual computer environment. Referring to a plurality of multifunction peripherals and are connected to a LAN . The server is connected to the multifunction peripheral via a firewall and the Internet .

The multifunction peripherals and and server hold IP addresses to communicate with other communication apparatuses on the LAN or Internet . The multifunction peripherals and provide services in reply to various requests like the server and the print server function LPD RFC1179 . Examples of the services are the Web files SNMP Simple Network Management Protocol and WS Eventing.

The server provides services in reply to requests from the multifunction peripherals and serving as service request sources. Examples of the services provided by the server are a Web service storage service image processing service and mail service. Also the server may communicate with other services in reply to requests from request sources. Moreover the server may include a virtual server formed by a plurality of physical servers and a virtual disk formed by a plurality of physical storages. Although only one server is shown in different types of processing may be physically distributed to a plurality of apparatuses to provide services.

In this embodiment in push communication between the multifunction peripheral and the server the server detects a communication error sent from the firewall . The server decides the connection valid time from the occurrence state of errors in push communication and notifies the multifunction peripheral of the decided connection valid time. The multifunction peripheral decides an appropriate Keep Alive communication interval based on the received connection valid time.

Push communication is a communication technique of performing communication from a server apparatus on the Internet to a client apparatus on an intranet past a firewall. An example of push communication is the WebSocket protocol. Note that as long as communication which uses an address is done to send a service provided by the server the protocol may be IPv4 or IPv6 and is not limited to a specific one.

Also the present invention is applicable to other communication schemes which use networks other than a LAN or the Internet and a wireless LAN such as IEEE802.11 as the connection scheme between the multifunction peripherals and and the server as a matter of course.

In the present invention protocols in respective layers an OSI reference model physical layer a data link layer a network layer a transport layer a connection layer a presentation layer and an application layer are not limited to the above mentioned communication protocols. Also a network device information processing apparatus and communication apparatus other than those in this embodiment may be connected.

Also the CPU executes processing of rasterizing an outline font into a display RAM set on for example a RAM and displays it on a CRT display unit via a CRTC display control unit . Moreover the CPU opens various registered windows and executes various types of data processing based on commands designated by for example a mouse cursor not shown displayed on the CRT . When the user uses a client application or various services he or she can open windows associated with operations such as their settings and perform settings. Note that the display unit is not limited to a CRT and may use for example a liquid crystal display or a plasma display.

The RAM functions as for example the main memory or work area for the CPU . The ROM includes for example a font ROM program ROM and data ROM none is shown . The font ROM or external memory HD stores for example font data used in for example the above mentioned document processing. The program ROM or external memory HD stores for example an operating system to be abbreviated as an OS hereinafter serving as a control program for the CPU . The data ROM or external memory HD stores various types of data used in the above mentioned document processing. Alternatively the program stored in the external memory HD is expanded into the RAM in execution and executed.

A keyboard controller KBC controls information input from a keyboard KB or a pointing device not shown . The CRTC controls display on the CRT . A disk controller DKC controls access to the external memory . A network controller NWC is connected to a network via a bidirectional interface .

The KB includes various keys. The CRT displays for example a graphics an image a text and a table. The external memory is formed by for example a hard disk HD or a Floppy disk FD . The external memory stores for example a boot program various applications font data a user file and an editing file.

A feeder automatic document feeder is a mechanism which feeds a paper sheet in scanning by a scanner unit . The document scanner unit scans and digitizes the information of the paper sheet. A UI unit is a mechanism which displays information upon accepting the operation input operation of the multifunction peripheral .

A sheet feed unit sends a print sheet to a fixing unit in printing. The fixing unit fixes toner on the sheet fed from the sheet feed unit to print. A sheet discharge unit discharges the sheet printed by the fixing unit . A finishing device performs various types of processing including stapling and punching of the sheet discharged from the sheet discharge unit in accordance with order information. A sheet discharge tray holds a printing product having undergone final printing finishing.

The multifunction peripherals and serving as client apparatuses communicate with the server serving as a server apparatus on the Internet via the LAN and firewall . The firewall may include a proxy server function for making a proxy reply to the client apparatus. Also although not shown in the multifunction peripherals and and the server can perform the same processing not only via the firewall but also via other communication apparatuses such as a load balancer and a reverse proxy.

The multifunction peripheral will be described first. Note that the multifunction peripheral has the same configuration. An MFP controller includes software components such as a main controller transmission reception unit connection management unit retransmission interval acquisition unit connection generation unit and retransmission interval determination unit . These software components control the overall multifunction peripheral . These software components control hardware components such as the feeder scanner unit UI unit sheet feed unit fixing unit sheet discharge unit finishing device and sheet discharge tray shown in .

The main controller performs main control of the multifunction peripheral . The main controller performs control and status monitoring of for example the transmission reception unit connection management unit retransmission interval acquisition unit connection generation unit and retransmission interval determination unit provided in the multifunction peripheral .

The transmission reception unit communicates with the server . At this time the transmission reception unit communicates via the main controller with the server using data acquired from for example the connection management unit retransmission interval acquisition unit connection generation unit or retransmission interval determination unit .

The connection management unit manages connection associated with push communication between the multifunction peripheral and the server . The retransmission interval acquisition unit acquires a Keep Alive transmission interval from the server . The retransmission interval acquisition unit acquires the Keep Alive transmission interval decided by the server to maintain connection in push communication.

The connection generation unit generates connection for push communication between the multifunction peripheral and the server . The retransmission interval determination unit determines the Keep Alive transmission interval acquired from the server to decide a Keep Alive transmission interval that can be set by the multifunction peripheral .

The retransmission interval determination unit determines whether the Keep Alive transmission interval acquired from the server satisfies the operation conditions of the multifunction peripheral and changes the Keep Alive transmission interval in accordance with these operation conditions. The detailed operation of the retransmission interval determination unit will be described in the fourth embodiment.

In this embodiment the main controller monitors for example these parts and performs appropriate communication processing with the server to manage connection in push communication between the multifunction peripheral and the server . Disconnection of connection in the middle of the communication path due for example to the presence of the firewall is avoided to attain efficient push communication.

The internal configuration of the server will be described next. Each processing unit included in the server is implemented by a program stored in for example the ROM or external memory and processing of this processing unit is executed by the CPU using the RAM as needed.

A transmission reception unit transmits receives information exchanged between the server and the transmission reception unit of the multifunction peripherals and using the NWC . A Web server is a Web service server which exchanges information with the transmission reception unit of the multifunction peripheral using a protocol such as the REST Representational State Transfer or SOAP Simple Object Access Protocol . Note that the present invention is not limited to these protocols. The multifunction peripheral and the server may communicate with each other using a protocol such as the TCP Transmission Control Protocol UDP User Datagram Protocol HTTP SSL Secure Socket Layer or TLS Transport Layer Security .

The Web server receives a request from the multifunction peripheral and transfers it to a push communication control unit . The Web server also serves to transfer reply information sent from the push communication control unit to the transmission reception unit .

A configuration example as a feature of the present invention will be described next. The push communication control unit performs overall control for invoking a processing unit required to perform push communication with the multifunction peripheral . The push communication control unit controls a communication status information storage unit a retransmission interval decision unit an identical domain determination unit a plural connection management unit a connection destination identifier management unit and a connection destination determination unit to maintain connection in push communication. In this processing the push communication control unit can perform data communication via the Web server and transmission reception unit to process requests from a plurality of multifunction peripherals.

The present invention is also applicable to the case wherein these types of processing are performed on a plurality of physical computers or a virtual computer.

Also when a large number of multifunction peripherals serving as processing request sources for the server are present it is necessary to hold a large number of connections for a long period of time. In this case a larger scale system can be easily established by including a network load balancer and reverse proxy neither is shown .

The communication status information storage unit stores pieces of information including connection information connection destination information and communication status as communication status information managed by the push communication control unit . Note that illustrates an example of the stored information. The communication status information shown in includes as items ID for uniquely identifying communication Time indicating the time at which communication is performed Client indicating a communication partner Data indicating the data type of communication and Status indicating the communication result. Also when communication has succeeded the information of the time for which non communication has continued is stored. Note that how to handle these pieces of information will be described in more detail later together with processing.

The retransmission interval decision unit decides a Keep Alive transmission interval required to maintain connection in push communication for each connection based on the communication status stored in the communication status information storage unit .

The identical domain determination unit determines other multifunction peripherals that belong to identical domains on which the disconnection conditions of connection in push communication are the same based on the communication status information of the multifunction peripheral managed by the push communication control unit . Determining identical domains makes it possible to decide an appropriate Keep Alive transmission interval based on the pieces of communication status information of other multifunction peripherals belonging to the identical domains even in the absence of the information of the multifunction peripheral which is identical to the past communication status information. In an example of the software configuration of the entire system shown in two multifunction peripherals the multifunction peripherals and belong to identical domains. A more detailed operation of the identical domain determination unit will be described in the third embodiment.

The plural connection management unit holds a plurality of connections between the server and one multifunction peripheral. When connection to this multifunction peripheral is disconnected this multifunction peripheral is notified of an error from the server by another non disconnected connection. This makes it possible to quickly restore the disconnected connection. A more detailed operation of the plural connection management unit will be described in the second embodiment.

The connection destination identifier management unit manages the multifunction peripheral serving as a connection destination to allow the plural connection management unit to determine communication with the multifunction peripheral. The connection management unit of the multifunction peripheral issues a client identifier for uniquely determining the multifunction peripheral and sends it in communication with the server . The connection destination identifier management unit manages the client identifier of the connection destination for each connection.

The push communication control unit controls the communication status information storage unit retransmission interval decision unit identical domain determination unit plural connection management unit connection destination identifier management unit and connection destination determination unit to maintain connection in push communication.

In an example of the software configuration of the entire system shown in a plurality of multifunction peripherals are present so one multifunction peripheral decides an appropriate Keep Alive interval first. In this embodiment one multifunction peripheral is selected by communication between the multifunction peripherals. Note that multifunction peripherals on identical domains may be searched by broadcast communication or multicast communication using the SLP Service Location Protocol or SNMP Simple Network Management Protocol . Also in this embodiment a method of selecting one multifunction peripheral by determining an apparatus which operates for a long period of time and an apparatus with a low CPU utilization ratio is used. However one multifunction peripheral may be determined from the resources or set values of other apparatuses. The order of priority of apparatuses can be set in these apparatuses in advance or determined upon selection by the user.

As another method of deciding one multifunction peripheral a method of deciding one multifunction peripheral by the server in connection from the multifunction peripheral may be used. When the server is connected to a new multifunction peripheral it selects one multifunction peripheral by determining an already connected multifunction peripheral on an identical domain an apparatus which operates for a long period of time and an apparatus with a low CPU utilization ratio. The server may determine one multifunction peripheral from the resources or set values of other apparatuses.

To decide an appropriate Keep Alive interval one multifunction peripheral selected in the foregoing way performs push communication while adjusting the Keep Alive interval. As a method of adjusting the Keep Alive interval the following method for example can be used. A multifunction peripheral sets a Keep Alive interval of for example 1 hr as a default. When push communication is performed if no error occurs after 1 hr the Keep Alive interval is extended to 2 hrs. If no communication error still occurs the Keep Alive interval is further extended for example the Keep Alive interval is sequentially extended to 12 hrs 24 hrs and 168 hrs . Note that the extension time of the Keep Alive interval may be determined by setting a fixed value in advance or using an arbitrary random value. With these types of processing the Keep Alive interval can be extended from an arbitrary default.

As another type of processing for deciding an appropriate Keep Alive interval an example of processing of deciding an appropriate Keep Alive interval when a push communication error has occurred due to too long Keep Alive interval will be given.

In step S the connection management unit of the multifunction peripheral uses the connection generation unit to perform user authentication of a proxy service for the firewall in push communication with the server . As a result if the firewall permits the multifunction peripheral it sends the result back to the multifunction peripheral . The multifunction peripheral then starts communication with the server . Note that if the proxy service does not require user authentication this user authentication processing may be omitted.

The firewall performs user authentication to store information including for example the IP address and port number of the multifunction peripheral and permit the multifunction peripheral to communicate with the server as a communication partner. The firewall then confirms the communication status between the multifunction peripheral and the server . If the firewall determines the end of communication the proxy service interrupts communication between the multifunction peripheral and the server .

At this time the firewall determines execution non execution of communication interruption using for example the time elapsed after authentication by the multifunction peripheral the timeout time after a shift to a non communication state and the time elapsed after the end of connection upon monitoring the communication status.

Note that a method of disconnecting connection by a communication device in a communication path is not limited to this embodiment. The case wherein communication is interrupted for other reasons is also included in this embodiment as a matter of course.

In step S the connection generation unit of the multifunction peripheral executes Opening Handshake that allows push communication for the push communication control unit of the server for details of this processing see The WebSocket protocol draft ietf hybi thewebsocketprotocol 17 online Sep. 30 2011 IETF Searched on Dec. 27 2011 Internet . When WebSocket connection is established between the multifunction peripheral and the server upon success of Opening Handshake the server becomes capable of push communication with the multifunction peripheral past the firewall .

At this time the push communication control unit of the server stores the status information of push communication in the communication status information storage unit . illustrates an example of the communication status information. In communication of step S information corresponding to ID 1 is stored in the example shown in . Also the ID address of the multifunction peripheral which performs push communication with the server in this case is set to 192.168.100.200. 

Although WebSocket is used as push communication in this embodiment the push communication method is not limited to WebSocket and other push communication methods can also be adopted.

In step S the server transmits WebSocket data to the multifunction peripheral located on the intranet side with respect to the firewall . At this time since the firewall permits transmission from the server to the multifunction peripheral it can send WebSocket data to the multifunction peripheral located on the intranet side with respect to the firewall . At this time the push communication control unit of the server stores the time and the transmission reception state between the server and the multifunction peripheral in the communication status information storage unit as a log.

If communication is not interrupted by the firewall WebSocket data transmission from the server to the multifunction peripheral also succeeds step S . At this time as in step S the push communication control unit of the server stores the time and the transmission reception state between the server and the multifunction peripheral in the communication status information storage unit as a log.

In step S the push communication control unit calculates the connection valid time upon success of push communication based on the communication interval held in the communication status information storage unit . If the communication interval between steps S and S is for example 30 min it is calculated as 30 min. In communication between ID 1 and ID 2 shown in the communication interval is calculated as 30 min. Note that the connection valid time may be calculated for the interval between steps S and S.

In step S the push communication control unit records a maximum connection valid time for each connection from the connection valid time calculated in step S and the past longest connection valid time. The maximum connection valid time indicates a value at which the communication interval between one communication operation and another communication operation next to it is longest in information recorded as communication status information shown in . In an example shown in the maximum connection valid time is 24 hrs.

The firewall interrupts WebSocket connection upon timeout when for example a non communication state between the multifunction peripheral and the server has continued for a long period of time step S . In this case the value of a timer for determining timeout in the firewall is defined in advance. Note that at the time of timeout the multifunction peripheral and the server cannot recognize disconnection of connection because the firewall does not notify the multifunction peripheral and server of disconnection of WebSocket connection.

In step S the server transmits WebSocket data. Note that if the firewall has interrupted WebSocket connection in step S the firewall generates a notification error. Because the firewall generates a notification error in step S the server receives the notification error transmitted from the firewall as the transmission result obtained in step S.

In step S the push communication control unit detects the notification error of the WebSocket data. As the communication error TCP reset RST port unreachable or timeout for example can be detected. At this time the push communication control unit of the server stores the time and the transmission reception state between the server and the multifunction peripheral in the communication status information storage unit as a log. Note that in an example shown in communication error information that is NG is stored as indicated by ID 5 .

Although push communication can be performed from the server to the multifunction peripheral while WebSocket connection is established it becomes impossible after the firewall disconnects WebSocket connection. At this time push communication from the server to the multifunction peripheral can be restarted as the multifunction peripheral performs Keep Alive transmission. Although the multifunction peripheral re executes Opening Handshake as Keep Alive transmission in this embodiment a Keep Alive transmission method is not limited to this.

In general when the Keep Alive interval is set short too much a load is imposed on a communication device and communication line. On the other hand if the Keep Alive interval is set long connection is interrupted by the firewall so the period in which the server cannot transmit data to the multifunction peripheral by push communication prolongs.

In step S the multifunction peripheral performs Keep Alive transmission to the server . The multifunction peripheral performs transmission at the default Keep Alive interval of the multifunction peripheral because the server has not notified the multifunction peripheral of an appropriate Keep Alive interval a maximum connection valid time to be described later . Note that the value of the default Keep Alive interval is defined to gradually extend from the set default by for example the user in advance and is held in the multifunction peripheral .

In step S the push communication control unit of the server uses the retransmission interval decision unit to add a maximum connection valid time for each connection which is held in the communication status information storage unit to a reply packet in step S and sends it back to the multifunction peripheral. In an example shown in 24 hrs is transmitted as the value of the maximum connection valid time.

In step S the multifunction peripheral uses the retransmission interval acquisition unit to acquire a value to be set as the Keep Alive interval from the value of the maximum connection valid time sent from the server in step S. Also the connection management unit sets the acquired value of the Keep Alive interval.

In step S the connection management unit of the multifunction peripheral performs proxy user authentication for the firewall at the Keep Alive interval set in step S. In step S the firewall resets the timer for timeout of connection between the multifunction peripheral and the server .

In step S the connection management unit of the multifunction peripheral performs proxy user re authentication at the set Keep Alive interval before the firewall disconnects connection upon timeout. With this operation communication between the multifunction peripheral and the server is permitted again and the timer for timeout in the firewall is reset. Note that the Keep Alive interval in user re authentication may start at the time of the previous user authentication operation or the last time the server performed push communication.

User re authentication in step S is performed at the Keep Alive interval set in step S so connection between the multifunction peripheral and the server is maintained. In step S the server can perform push communication with the multifunction peripheral . This is done to avoid a communication error due to connection disconnection by resetting the timer for timeout in step S.

Note that in this embodiment proxy user authentication is performed as Keep Alive transmission in steps S and S. However the present invention is not limited to this and is also applicable to the case wherein a communication device in a communication path is prevented from being interrupted in other protocols.

In step S the push communication control unit receives a push communication request from the multifunction peripheral . This operation corresponds to step S in .

In step S the push communication control unit acquires the communication status information of the multifunction peripheral from the communication status information storage unit to determine whether the maximum connection valid time is determined based on the acquired past communication status. Note that in step S this determination operation is done based on the past communication status information including not only the communication status information of the multifunction peripheral but also that of the multifunction peripheral belonging to an identical domain.

If no maximum connection valid time is determined NO in step S the determination operation cannot be done based on the past communication status information so in step S the server designates the default maximum connection valid time and sends a reply to the client multifunction peripheral step S in . In this case the client multifunction peripheral sets the default Keep Alive interval. Note that if NO is determined in step S the server may send a reply to the client without designating the maximum connection valid time but the multifunction peripheral sets the default Keep Alive interval in either case.

If the maximum connection valid time is determined YES in step S in step S the push communication control unit acquires the maximum connection valid time of push communication with the multifunction peripheral based on the communication status information stored in the communication status information storage unit .

In step S the push communication control unit sends the maximum connection valid time acquired in step S back to the client multifunction peripheral as a reply to the request received in step S. In this case the client multifunction peripheral sets the Keep Alive interval based on the received maximum connection valid time.

While connection is maintained push communication can be performed from the server to the multifunction peripheral steps S S in .

If communication is interrupted by the firewall the push communication control unit is notified of an error for push communication from the server step S in so the push communication control unit detects a failure of push communication in step S step S in .

If a failure of push communication is detected YES in step S in step S the push communication control unit acquires the communication status information of the multifunction peripheral from the communication status information storage unit and calculates the maximum connection valid time from the past communication status step S in . At this time it is desired to look up a log within a predetermined period or logs corresponding to a predetermined count instead of looking up all the communication statuses remaining in the log. A longest non communication time in the last week remaining in the log for example can be determined as a maximum connection valid time. With this operation by looking up the recent log and not looking up the old log an optimum maximum connection valid time can be calculated based on the recent communication status even if the timeout setting of the firewall is changed.

In step S the push communication control unit determines whether the maximum connection valid time or the default maximum connection valid time sent to the client multifunction peripheral in step S is different from that calculated in step S. If these two maximum connection valid times are different YES in step S the push communication control unit stores the maximum connection valid time calculated in step S in the communication status information storage unit in step S.

Note that the push communication control unit may update the valid time as needed at times other than upon the occurrence of a push communication error. The valid time can be updated as needed when for example the maximum connection valid time calculated from the past communication operation in step S at the time of communication success is stored in the communication status information storage unit the moment the calculated maximum connection valid time exceeds the previous maximum connection valid time.

In step S the push communication control unit uses the retransmission interval decision unit to add the maximum connection valid time which is held in the communication status information storage unit to a packet as a reply to a request from the multifunction peripheral and sends it back step S in .

In step S the push communication control unit determines a push communication end request from the multifunction peripheral or that of the server . If the end of push communication is determined YES in step S the processing sequence ends.

In step S the connection management unit uses the connection generation unit to establish WebSocket connection to the server . If the default maximum connection valid time is transmitted from the server or if no maximum connection valid time is transmitted the connection management unit sets a default for the Keep Alive interval in step S. On the other hand if the maximum connection valid time is transmitted from the server step S in in step S the connection management unit uses the retransmission interval acquisition unit to acquire the maximum connection valid time for each connection from the server .

In step S the connection management unit determines whether the acquired maximum connection valid time is different from the Keep Alive interval. If the maximum connection valid time is different YES in step S the process advances to step S. If the maximum connection valid time is equal to the Keep Alive interval NO in step S the process advances to step S.

In step S the connection management unit updates the setting of an appropriate Keep Alive interval to maintain connection in push communication using the value of the acquired maximum connection valid time. This operation corresponds to step S in . In step S the connection management unit performs proxy user authentication at the Keep Alive interval set in step S. This operation corresponds to step S in . The processing sequence ends.

With this operation the server can perform push communication while avoiding a communication error due to connection disconnection even if a non communication state continues past the timeout time of the firewall .

According to the above mentioned first embodiment when the firewall disconnects connection in push communication the server detects connection disconnection step S . The server notifies the multifunction peripheral of the maximum connection valid time based on the recent communication status step S . Further the client multifunction peripheral can maintain connection because it performs proxy user re authentication at an appropriate time interval by setting an appropriate Keep Alive interval again using the received maximum connection valid time.

It is therefore possible to provide an efficient communication system which is less likely to generate communication errors. More particularly it is possible to provide a communication system capable of reducing communication errors even in a communication environment in which the client cannot autonomously decide the Keep Alive interval and no communication error can be immediately transmitted to the client even if a server communication error is detected.

The first embodiment shows an example of one push communication connection between the multifunction peripheral and the server . This embodiment shows an example in which a plurality of push communication connections are generated between a multifunction peripheral and a server .

When a plurality of connections are generated between the same server and client if non disconnected connection is present the number of Keep Alive transmission operations from the multifunction peripheral can be reduced by preferentially using a non disconnected line. This indicates that a trial to restore disconnected connection is made using non connected connection. If restoration of connection succeeds the number of Keep Alive transmission operations can be reduced.

For this reason a push communication control unit of the server must determine a connection management unit of the same multifunction peripheral from a plurality of connections to be managed. Hence the connection management unit of the multifunction peripheral notifies the server of an identifier unique to the connection management unit of the multifunction peripheral in generating connection to the server .

The push communication control unit of the server uses a plural connection management unit to manage the identifier of the connection management unit of the multifunction peripheral. A unique identifier such as a UUID Universally Unique Identifier is managed. At this time one connection management unit is provided to each multifunction peripheral. Note that identifiers may be assigned by an arbitrary method as long as a plurality of connections having the same connection destination can be specified.

The plural connection management unit registers an identifier serving as a connection destination in a connection destination identifier management unit which manages the connection destination for each connection. The plural connection management unit uses a connection destination determination unit to determine identical multifunction peripherals based on the data of the connection destination identifier management unit .

The push communication control unit of the server determines connection to the same connection destination based on the connection destination information managed by the plural connection management unit . When connection to the same connection destination is present if a communication error for a push communication line occurs due to connection disconnection the push communication control unit restores the disconnected connection using another connection to the same connection destination and performs data transfer. Note that as a restoration method the multifunction peripheral may perform WebSocket Opening Handshake again via non disconnected connection. However another method may be used.

A redundant push communication line need not use the same protocol. Other protocols can also be used by setting in advance a line which allows communication in the connection management unit of the multifunction peripheral from the push communication control unit of the server .

A plurality of connections can be provided using protocols including email XMPP Extensible Messaging and Presence Protocol RFC6121 and SIP Session Initiation Protocol RFC3261 .

As described above if non disconnected connections are present even when connection is disconnected the disconnected connection is restored using these non disconnected connections. This makes it possible to build an efficient push communication system which continuously maintains push communication connection and is less likely to generate communication errors.

The third embodiment shows an example in which a plurality of push communication connections are generated on identical domains. An example in which a plurality of multifunction peripherals multifunction peripherals and are connected to identical domains will be given. This embodiment shows an example in which a system which performs efficient push communication when the same firewall is connected between the multifunction peripherals and and a server and serves as a network device which disconnects connection under the same conditions is built.

The maximum connection valid time is considered to be the same value for the plurality of multifunction peripherals and connected to the server via the same firewall . This makes it possible to decide appropriate Keep Alive intervals for the multifunction peripherals and before an error occurs in connection of push communication.

If the plurality of multifunction peripherals and have identical domains it is highly probable that the same firewall is present in the communication path with the server . Hence when the same firewall serving as a network device which disconnects connection is present it is highly probable that disconnection occurs under the same conditions for example the timeout time .

An identical domain determination unit of the server determines whether a plurality of multifunction peripherals belong to identical domains. If the domains of the multifunction peripherals are identical the identical domain determination unit determines that the firewall is the same and notifies a retransmission interval decision unit of the maximum connection valid time for the identical domains.

Assume that multifunction peripheral A at xxx001.yyy.co.jp and multifunction peripheral B at xxx002.yyy.co.jp for example are present. At this time when multifunction peripheral A performs Opening Handshake of WebSocket for the server the identical domain determination unit determines that multifunction peripheral B belongs to an identical domain yyy.co.jp. Further if the maximum connection valid time at xxx002.yyy.co.jp is 60 min the identical domain determination unit notifies the retransmission interval decision unit of this value. Hence a push communication control unit notifies the multifunction peripheral of a Keep Alive interval of 60 min. A retransmission interval acquisition unit performs Keep Alive transmission within 60 min.

This processing sequence can also be performed in processing of determining whether the maximum connection valid time in step S according to the first embodiment is determined.

In step S the push communication control unit uses the identical domain determination unit to acquire the past connection history for an identical domain. In step S the push communication control unit uses the identical domain determination unit to search for the connection histories of other multifunction peripherals belonging to identical domains. If the connection histories of other multifunction peripherals belonging to identical domains are present YES in step S the process advances to step S. On the other hand if no connection history is present NO in step S the process advances to step S.

In step S the push communication control unit uses the retransmission interval decision unit to set the value of the Keep Alive interval based on device default information. The process advances to step S.

In step S the push communication control unit uses the identical domain determination unit to set the value of the Keep Alive interval using the value of the maximum connection valid time acquired from the history information of identical domains. The process advances to step S.

In step S the push communication control unit transmits the maximum connection valid time to the multifunction peripheral . The processing sequence ends.

Note that this processing sequence may be executed when for example the maximum connection valid time in connection to an identical multifunction peripheral is updated.

As described above according to this embodiment when the firewall disconnects connection in push communication the server detects the maximum connection valid time from the information of other multifunction peripherals belonging to identical domains. Proxy user re authentication can be performed at an appropriate Keep Alive interval using this value. It is therefore possible to provide an efficient communication system.

A configuration which decides the Keep Alive retransmission interval in accordance with the operation conditions of a multifunction peripheral serving as a client apparatus will be described in this embodiment. A retransmission interval determination unit of the multifunction peripheral determines a Keep Alive transmission interval acquired from a server to decide a transmission interval that can be set in the multifunction peripheral . The retransmission interval determination unit changes the Keep Alive transmission interval in accordance with the operation conditions of the multifunction peripheral if the Keep Alive transmission interval acquired from the server does not satisfy the operation conditions of the multifunction peripheral .

The operation conditions of the multifunction peripheral are decided in accordance with for example power consumption setting policy or communication setting policy. Also a UI unit or management software not shown of the multifunction peripheral for example is used to set an operation condition for determining whether to prioritize the operation conditions of the multifunction peripheral or the maximum connection valid time of the server .

Assume that the Keep Alive transmission interval is set longer than for example 1 hr while the multifunction peripheral is in a power consumption operation. In this case if the maximum connection valid time acquired from the server is 15 min the multifunction peripheral prioritizes the transmission interval as the operation condition to set it longer than 1 hr. With this operation the multifunction peripheral sets the Keep Alive transmission interval to 1 hr when the maximum connection valid time of the server is 15 min.

Also the UI unit or the management software of the multifunction peripheral for example performs determination as to whether the Keep Alive transmission interval is to be changed in relation to the maximum connection valid time. If for example the difference between the maximum connection valid time and the Keep Alive transmission interval is smaller than a predetermined threshold it may be possible to perform setting for for example not changing the Keep Alive transmission interval of the multifunction peripheral . A change in transmission interval can be determined by setting the predetermined threshold to for example 30 min.

As described above according to this embodiment in addition to the effect of the first embodiment the Keep Alive interval can be set in accordance with the operation conditions of the multifunction peripheral. It is therefore possible to provide an efficient communication system corresponding to the operation settings of the client.

Aspects of the present invention can also be realized by a computer of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device for example computer readable medium .

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application Nos. 2012 047303 filed Mar. 2 2012 and 2013 033871 filed Feb. 22 2013 which are hereby incorporated by reference herein in their entirety.

