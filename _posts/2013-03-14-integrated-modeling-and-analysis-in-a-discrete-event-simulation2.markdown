---

title: Integrated modeling and analysis in a discrete event simulation
abstract: An integrated modeling and analysis system (IMAS) receives documents containing information relating to an overall operations system from a number of integrated product teams (IPTs). The IMAS creates a model architecture of the overall system the information received from the participating IPTs. The IMAS automatically imports the information without any interaction from support personnel. A discrete event modeling (DES) application in communication with the IMAS creates a DES model based on the model architecture in the IMAS. The DES application runs a simulation on the model generating statistical data relating to the overall system for analysis. The statistical data generates output reports in a format compatible with the analysis tools of the user. The IMAS includes a customizable user interface which allows a stakeholder to link and control the modeling information received from all other participating IPTs. Prior simulations and results can be archived for later reference.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633323&OS=09633323&RS=09633323
owner: Lockheed Martin Corporation
number: 09633323
owner_city: Bethesda
owner_country: US
publication_date: 20130314
---
This invention was made with Government support under Contract No. W15P7T 06 C T004 awarded by the Department of the Army. The Government has certain rights in this invention.

This disclosure relates to the field of sustainment and operations of systems. More particularly this disclosure relates to modeling systems for sustainment and operations.

Systems are designed deployed and operated for the benefit of one or more stakeholders. A stakeholder is any person or group within an organization which will be affected in some way in the implementation operation updating or maintenance of the system. For example in a system designed for operations and support of those operations stakeholders may include groups representing engineering maintenance logistics finance and operations. Any change or update to the system or any part thereof may have effects that ripple through the organization and impact one or more stakeholders in some way.

As systems are developed the goals and objectives of the stakeholders are taken into consideration and the processes designed for the system are directed to meeting the goals and objectives of the stakeholders. In larger organizations the processes may become complex and the corresponding systems grow in complexity proportionately. Further as organizations grow systems may be deployed at geographically dispersed locations. Based on the location and other factors different system configurations used across the organization may evolve.

Independently operating groups may have responsibility for specific aspects of a system. Multiple independent groups may represent sub systems or system components which function to define an overall operations system producing an integrated product. Therefore each group or integrated product team IPT may develop and maintain information specific to a segment or product line of an overall system. This information may be maintained independently of information maintained by other IPTs involved in the same overall system.

In order for a stakeholder to derive the intended benefit from the system it is imperative that the system be maintained in a state of operational readiness. To achieve this hardware and software components which constitute the system must be maintained in working condition. Parts that break wear out or are recalled must be removed from the system and or repaired and replacement parts reinstalled. During the time it takes to remove a part and receive and install the replacement part the system operates if at all at a diminished capacity.

Another factor integral to the overall value of a system is the cost of ownership. The cost of ownership of a system refers to the total costs of deploying operating and maintaining a system throughout the entire life cycle of the system. System sustainment costs may contribute to over 80 of the overall life cycle costs of a system. Some of the primary costs which impact system sustainment include the operational profile of the system the reliability of system parts and the supply chain architecture. Reliability is determined based on the failure rate of system parts and the ability to replace failed parts when needed. The supply chain architecture determines the availability of spare or replacement parts based on the location of the system relative to a repair depot. The minimization of system downtime and the overall cost of ownership can be competing factors which must be managed by the stakeholder to maximize system performance while insuring the system remains economically justifiable for the organization.

During system design prior to deployment the ultimate costs of factors such as system reliability and supply chain architecture are not known. This uncertainty creates challenges when designing systems for optimal benefit relative to dollars spent. System modeling is used to model the behavior of a proposed or existing system to determine future needs and costs of operations. Discrete event simulation DES provides a method of defining models that are representative of a system and defining various and inter related environmental properties that occur when operating the system. In DES events which occur within the constructed model involve state changes of various system components. These events may trigger other events downstream. As events are triggered they are stored in an event log in chronological order. The logged events may reflect future state changes of one or more associated system components. As each event is simulated the event list is updated with newly triggered events and is reordered according to the time sequence in which the events are modeled to occur.

There are commercially available DES software programs which include a DES engine for running a system model simulation. For example Arena a DES application available from Rockwell Automation Inc. of Milwaukee Wis. may be used to perform discrete event simulations. DES software packages however require the system model to be fully defined within the DES software. This requires the enlistment of software engineers well versed in DES programming to manually code the model into the DES applications. Conventional DES models use spreadsheets as inputs serving as a baseline from which the simulation is started. Relationships between system components are statically defined in the model and are used by the DES engine to simulate interdependent events that may affect multiple system components. When analysis of statistical data generated by the simulation indicates that adjustments or changes to the system model need to occur e.g. component changes for what if analysis the model must be redefined through the source code that inserts the model into the DES software. Thus the system model changes must be re programmed manually by programmers proficient in the DES language. Creation of models in this manner and the subsequent reprogramming that may be needed are time consuming. Furthermore these manual programming changes do not provide high fidelity analytic data due to their limited ability to define the complexities and interrelationships inherent in most systems.

When a system involves a number of IPTs each IPT serves as a stakeholder. Each stakeholder has an intimate familiarity with his her particular product line and maintains detailed information regarding the product line. This detailed information may include DES modeling information for the product line which is typically arranged in a spreadsheet format. In systems for the operation and support of military operations IPTs may maintain information in a standardized format such as the military standard MIL STD . MIL STD format establishes uniform engineering and technical requirements for military unique or substantially modified commercial processes procedures practices and methods. As a standard MIL STD provides a picture of system processes that are readily understandable between and among independent IPTs.

In a conventional DES configuration the development of a system model requires extensive configuration in the form of programming to provide input data that is representative of the system being modeled. In complex systems such as those systems involving multiple IPTs programmers responsible for defining the DES model must translate the data received from the various product lines defining the system and provide an accurate model definition which defines not only each individual product line but the inter relationships between multiple product lines in the overall system.

While programmers possess the skills to create the DES model they do not necessarily possess the familiarity with a product line that the team responsible for that product line possesses. Therefore a knowledge transfer from the team to the programmer must occur. This transfer of knowledge may be subject to misunderstanding misinterpretation or omissions due at least in part to the programmers lack of familiarity with the product line.

A system which defines a system model for discrete event simulation without the disadvantages of requiring reprogramming is desired.

An integrated modeling and analysis system IMAS for modeling a system in a discrete event simulation DES comprises a first processor in communication with a first memory. The first memory stores instructions that when executed by the first processor cause the first processor to define a database. The database is configured to directly import DES model information from at least one integrated product team IPT the at least one IPT maintaining DES model information for a product line which represents a portion of an overall operations system. The database stores the imported DES model information in at least one input data set. The processor further causes to be stored in the first memory information relating to at least one relationship between a first data element in a first input data set and a second data element in a second input data set. The information relating to the data relationship may be in the form of a structured query language SQL query. The first processor is further configured to create a user interface for displaying to a user on a display the user interface accepting from a user at least one input parameter for running a simulation of an overall operations system.

A second processor is configured in communication with a second memory the second memory containing instructions that when executed by the second processor cause the second processor to run a DES application which performs a simulation of the overall operations system. The DES application is in communication with the database via the first processor. The DES application is configured to query the database and extract information relating to a DES model of the overall system based on the at least one input data set and the information relating to the at least one relationship between the first data element in the first input data set and the second data element in the second input data set create a DES model and a DES event list based on the extracted DES model information and perform a simulation based on the DES model and the DES event list wherein performing the simulation generates statistics data and storing the statistics data in the database in at least one output data set.

The first processor is further configured to create at least one output report based on the at least one input data set the at least one output data set and the at least one input parameter.

At least one IPT maintains DES model documents relating to a product line associated with the IPT. The DES model documents may be stored in conformance with a predetermined documenting standard such as a military standard MIL STD format or protocol. In one configuration the DES model documents are imported directly to the database. The DES application creates a DES model from the imported data without the need for manual configuration of the DES model documents and accounts for inter relationships between the data of more than one IPT. Since the IMAS automatically imports the system information from the participating IPTs changes made to the DES model documents are updated and reflected in the model architecture in the IMAS as soon as those changes are made at the IPTs and imported to the database. The DES application uses the updated modeling architecture to generate an up to date model of the overall system without the need for reprogramming the DES application to account for the changes.

According to another aspect of the disclosure a non transitory computer readable medium stores instructions that when executed by a processor cause the processor to define a database and to store in memory information relating to at least one relationship between a first data element and a second data element. The first data element may relate to a DES model document maintained by a first IPT and the second data element may relate to a DES model document maintained by a second IPT. The database is configured to directly import DES model documents maintained by at least one IPT and to store the information in the DES model documents in at least one input data set within the database. A further set of instructions creates a user interface for displaying to a user on a display the user interface being configured to receive at least one input parameter from a user. The at least one input parameter relates to running a simulation of an overall operations system.

The computer readable medium further contains instructions which cause the processor to process queries from a DES application and generate DES model information based on the at least one input parameter and the at least one input data set. The processor transmits the DES model information to the DES application. The instructions further cause the processor to receive statistics information from the DES application during a simulation of the overall operations system and to store the statistics data within the database as at least one output data set.

Additional instructions cause the processor to periodically provide updated DES model information to the DES application based on the statistics data during the simulation of the overall operations system.

According to another aspect of the disclosure a computer implemented method of integrating modeling and analysis of a global sustainment solution for an operations system includes importing data contained in at least one DES model document directly into a database and storing the imported data as at least one input data set defining in a set of SQL queries at least one data relationship between a first data element in a first input data set and a second data element in a second input data set receiving via a user interface at least one input parameter relating to a DES simulation and communicating with a common modeling engine of a DES application to provide the at least one input parameter to the common modeling engine and to receive from the common modeling engine at least one query to extract data from the at least one data set generating DES model information from the extracted data and providing the DES model information to the common modeling engine receiving from a DES engine statistics data relating to a simulation being run by the DES engine and storing the statistics data in at least one output data set within the database.

It is to be understood that the figures and descriptions in this disclosure have been simplified to illustrate elements that are relevant for a clear understanding of the present invention while eliminating for the purpose of clarity many other elements found in typical computer systems and methods for processing analysis data such as modeling and analysis of operations systems. Those of ordinary skill in the art may recognize that other elements and or steps are desirable and or required in implementing the embodiments described herein. However because such elements and steps are well known in the art and because they do not facilitate a better understanding of the present invention a discussion of such elements and steps is not provided herein.

Discrete event simulation DES involves the modeling of the operation of a system. The operation of the system is represented as a chronological sequence of events. Each event may be viewed as occurring at a particular point of time and each event impacts at least one state in the system. The DES system is generally implemented in software on a general purpose computer. The simulation must keep track of time therefore the DES application maintains a simulation clock in which time progresses or hops from one event to the next scheduled event. The real time interval between events may be greater than that of the simulation clock but if no events are scheduled during that real time interval those time periods are ignored by the DES application.

The DES application maintains one or more event lists containing a chronological list of pending events. An event may be identified by its type and by a particular time at which it is to occur. The type of the event determines what software code should be executed to generate the simulation of that event in the modeled system. As each event is processed the DES application collects statistical data relating to the results of the simulation to that point. At the end of the simulation the collected statistics are provided as output for analysis. Analysis of the statistics provides modeled outcomes which may be experienced during the actual operation of the system. The statistics may indicate particular portions of the system where bottlenecks or failures may occur. This analysis provides the stakeholder with information which may be used to modify or redesign the system or identify where potential repair or maintenance needs may occur.

Logic within the DES engine then performs the simulation loop. The simulation loop may be implemented as software running on a computer processor the processor configured to receive instructions stored as software and to execute the instructions to perform the functions of the DES simulation loop. For example the instructions may implement a DO loop or a WHILE loop to implement simulation loop in software. At each iteration of the simulation loop the DES engine logic reads the value of the ending condition to determine the relevant ending condition and whether the condition is met . If the ending condition is false the next iteration of the loop is performed. At each iteration the DES engine advances the simulation clock to the next time interval when a next ordered event is scheduled to occur. The next event is simulated and removed from the event list . Events are identified by an event type which determines the program code which is executed by the processor to simulate the event. As the event is simulated statistics regarding the overall system states are generated and tracked. The statistics are updated while the event is simulated. The updated statistics may include a state change which affects the value of the ending condition. If during the simulation of an event the ending condition becomes true the loop will stop before performing a next iteration. When the ending condition is evaluated to be true statistics reports based on the statistics generated and stored during the simulation are generated as output of the simulation. If the ending condition has not changed and the value of the ending condition is still false then the loop will continue to the next iteration and the next scheduled event will be simulated.

In a conventional application of DES the simulation loop is performed by the DES engine after the system model has been manually generated by the user. The intent of these models is to simulate the system operations. As events are simulated the system component being modeled may experience state changes. In addition other system components may experience changes in their states based on interactions between the component currently being simulated and the other system components e.g. the support structure necessary to sustain those systems during the system s life cycle . In an attempt to capture the intricacies of these interactions extensive data sets are defined and created to reflect the system configuration the deployment and operation of the system and the sustainment support structure. However since these conventional tools are spreadsheet based the results provided by the models simply summarize the requirements necessary to sustain a number of systems during this period and do not provide a high fidelity picture of the overall system.

In order to provide a more comprehensive model of a complex system the model needs to include multiple system configurations which may be located across multiple locations which may be operated at different time intervals. However conventional spreadsheet models have limited processing capabilities. A typical complex system that integrates multiple configurations deployed to multiple locations over a term of years cannot be effectively modeled using spreadsheet based modeling tools.

System deployment involves the initial stages of implementing a planned operations system. Deployment includes creation of parts for the system the configuration of the system and actual deployment of the configured system . Once system deployment is performed systems operations may begin.

During systems operations the system is operated as designed . While the system is operating the operational status of the system is determined . The operational status may be determined by any number of means including direct observation by operations or maintenance personnel or through automated means such as system sensors which detect operational parameters relating to system components or outputs and determine that the detected values are within acceptable ranges. When the operational status of the system falls outside predetermined acceptable parameters systems maintenance may be required.

Systems maintenance involves determining the problem that caused the operational status of the system to fall outside of acceptable parameters. If the problem is determined to be a failed part the failed part is removed a replacement part is retrieved from a store and the failed part is replaced with the replacement part. Once the failed part is replaced systems operations may resume. During system maintenance after the identified failed part is removed the failed part is processed and repaired .

Failed part processing and repair defines a process where the failed part is identified and determines the appropriate repair location for the failed part. The failed part is then sent to the determined repair location and the failed part is repaired . After the failed part is repaired the repaired part may be used to replenish inventory of spare parts .

In addition to repairing the failed part once it is discovered a replacement for the failed part must be located and acquired to replace the part that failed. To obtain the required replacement a request for a spare part is made. If a replacement spare part is found the spare part is sent to the requestor and a request is made to replenish the spare part . In this way an adequate inventory of spare part is maintained. The spare part is retrieved as part of system maintenance and the failed part is replaced with the spare part . The spare part may be received via the normal supply chain or the spare part may be a refurbished part that was previously repaired .

The maintenance depots transfer parts in and or out of stores . Maintenance depot transfers parts in and out of stores 1 3 maintenance depot transfers parts in and out of stores 4 7 maintenance depot transfers parts in and out of stores 8 10 and maintenance depot transfers parts in and out of stores 11 14. By way of example systems relating to branches perform system operations. The ongoing operations are monitored to determine an operational status of the system shown in . If during monitoring of the operational status of the system a problem such as a failed part is identified the failed part is removed and sent to the corresponding maintenance depot for repair shown in . Similarly when a replacement part is needed to replace the failed part a spare part is requested and a replenishment part to replace the requested spare is made. A refurbished part repaired at the maintenance depot may be provided to the store to replenish the spare part inventory. Operations branches provide operations and support for the operations systems .

According to an embodiment of the integrated modeling and analysis system according to the disclosure the system may include a stakeholder IPT responsible for logistics. In a military operations scenario Logistics may maintain modeling information relating to the characteristics pertaining to logistics support of the overall operations system. These characteristics may be detailed in documents using the MIL STD to describe the components of logistics support in a spreadsheet format. According to an embodiment of the disclosure the documents maintained by Logistics are in MIL STD format and may be directly imported into a database as input data sets. Other IPTs such as Engineering Reliability and Maintainability and Finance may maintain similar documentation which may be directly imported to the database as additional input data sets.

The database stores information relating to the overall operations system which includes each segment defined by the independent IPTs. The database is in communication with a DES engine which may query the database before or during a simulation. The queries in combination with input parameters specified by a user extract the data provided by all IPTs to create a dynamic simulation model for the DES application without the need for intervention by a developer to define a detailed DES model. The operation of the integrated modeling and analysis system will now be described with reference to .

Individual integrated product teams IPTs have responsibility over an associated product line which defines a component of the overall operations system. Multiple product lines are thereby integrated to create an overall system. By way of example an operations and sustainment system may be defined through various IPTs such as Engineering Reliability and Maintainability Logistics and Finance. Each IPT may compile and maintain a model for their associated product line. The model may be structured as a DES model document used by a discrete event simulation program to provide an input to the simulation that models the IPT s product line. The model documents maintained by the IPT may be formatted in a spreadsheet format which stores information in the spreadsheet according to a standard such as MIL STD.

Each IPT is tasked with maintaining modeling information for its specific product line. For example Finance maintains model information relating to costs of operating and maintaining the system Engineering may maintain modeling information for individual parts or assemblies which make up the operational system Reliability and Maintainability may maintain model information relating to the upkeep Maintenance and Repair or Operations Systems and Logistics may maintain model information representing the supply chain including vendor information and part stores in the supply chain.

In order to model the overall system and capture a comprehensive view of the system which integrates Finance Engineering Reliability and Maintainability and Logistics the relationships between the product lines belonging to each of these IPTs must be identified. Then the input data to the DES application must be reconfigured to define the inter relationships between data elements originating from different IPT models. Conventionally the data was reconfigured manually. A programmer proficient in DES programming would create a new spreadsheet based DES model which included data elements originating from different IPTs and organize the data to represent relationships between different data elements. Once the data was reconfigured the resultant DES model was a static object which the DES engine used to run a simulation based on a pre determined sequence of events. When the simulation ends output statistics based on the static model that was used as input is provided. Manual programming however may not identify every inter relationship that exists between data elements. Furthermore as a simulation progresses changes to the system states resulting from simulated events may further affect other data elements or relationships between data elements. These changes are subtle and may not be captured by a static model. The IMAS provides an improved DES model for a system by directly importing the IPT DES model to the database as input data sets . SQL queries may be used to link fields in the input data sets to represent relationships in the data and to extract data based on criteria generated by the DES application as the simulation runs. The input data sets and the SQL queries which define the relationships between data elements form a sustainment model architecture in combination with the output data sets created from statistics generated during the simulation.

A user interface is associated with the IMAS database . The user interface is accessible by at least one of the IPTs . Through the user interface a user associated with one of the IPTs can specify the input parameters for a desired simulation. Based on the input parameters the IMAS database executes one or more SQL queries that extract selected data from the input data sets based at least in part on data relationships defined by the queries . The data in the input data sets may possess interrelationships between the input data from a first IPT and a second IPT . Based on the SQL query operations selected in the user interface a sub sample of the data in input data sets is extracted based on relationships between data stored in different data sets. In this manner subtle inter relationships between aspects of different product lines from different IPTs influence the data that is extracted and thereby affect the simulation.

A DES application is in communication with the database . The DES application includes a common modeling engine CME that models a target system and creates an event list containing a hierarchical list of events relating to the DES model of the system. The DES application further includes a DES engine . The DES engine performs the simulation loop based on the event list and DES model provided by the CME .

The CME operates in communication with database and executes SQL queries which extract selected data from the sustainment model architecture based on the input data sets and the input parameters. The data extracted from the sustainment model architecture defines system model information and data related to the discrete event sequence . This information allows the common modeling engine to create the event list and DES model provided to the DES engine without further manual intervention.

As the DES engine performs the simulation loop by executing each simulated event in the event list the results of the simulation are embodied as statistics which are stored in the database as output data sets . The output data sets further contribute to the sustainment model architecture . That is in combination with the input data sets received from the IPT s as DES modeling documents and the SQL queries which define the data relationships the output data sets serve to provide updated statuses of the data elements in the system. The updated statuses are used by the DES application during the simulation. As the database is queried by the CME to provide updated model information as the simulation is running a dynamic DES model is provided which reflects changes to the system states as a result of the ongoing simulation. This allows for subsequent events to access an updated system model which better reflects the system at that point of the simulation.

The output data sets created by the simulation are used to generate output reports based on the sustainment model architecture . Because the output data sets and the architecture are housed within a database as opposed to a flat data format such as a spreadsheet the output reports may be generated and formatted into a variety of different file formats. The selected format may be chosen based on a user preference. The format may be selected to provide output reports used by the end user as part of the overall system analysis where the format is compatible with the analysis tools used by the user. For example according to an embodiment the IMAS database may be implemented in a Microsoft Access relational database. The output reports may be selected to be in a format that is compatible with Microsoft Excel or alternatively a project management program such as Microsoft Project . While the above provides specific examples of output formats which may be used for output reports other formats may be used. By way of example the Open Database Connectivity ODBC interface may be used. In this manner the data stored in database may be provided in any format adhering to the ODBC standard. Thus the IMAS system provides dynamic system modeling with increased flexibility. In addition because the IMAS database receives the DES modeling documents directly from the IPTs and imports them directly to the database any updates to a DES model pertaining to an individual IPT is reflected immediately in the sustainment model architecture without the need for intervention by a programmer i.e. code changes . The updated DES model information is immediately stored in the input data sets and the up to date model information is immediately merged into the sustainment model architecture . Thus the IMAS system seamlessly links the DES model information maintained by separate IPTs .

Information contained in the documents maintained by the IPTs responsible for configuration cost data reliability and maintainability analysis and logistics and sustainment configuration may be stored according to a standard format. Standardization of the incoming data allows the documents to be imported to input data sets stored as a series database tables in the IMAS . Using the imported data sets a model architecture is defined within the IMAS which provides a DES model that is used by the DES application. The DES application includes a CME which receives the model architecture information from the IMAS . The DES application also includes a DES engine which runs the simulation based on the model created by the CME. As the simulation proceeds the DES engine generates statistical data relating to the state of the various system components. The statistical data is provided as output by the DES application and stored as output data sets in tables included in the IMAS .

The output data from OPUS sustainment models can used to provide initial input parameters for IMAS such as the allocation of spares per part per sparing location.

Output data for each operation performed within the model is written to a series of output data sets within the IMAS database . This data is then used to generate reports that are customizable to the stakeholder and to the requirements of the modeled system. The output data is stored in a hierarchical structure which allows for increased levels of fidelity in the overall system analysis and provides quick observations with respect to the system s key performance and cost drivers. The output data may be presented in a format that is compatible with legacy analysis tools already being used by the stakeholder. According to one non limiting embodiment the output data is processed and presented in a format which can be read and loaded by Microsoft Project . This allows the data to be used in combination with the visual and analytical representations provided by the analysis tools with regard to each component within each deployed system. Further the output tool may be used to provide a hierarchical representation of the performance of each system and the components that comprise each system.

It will be understood by those of skill in the art that various components and processes described in this specification may be achieved through the use of hardware software or a combination of hardware and software. The processes may be performed by a general purpose computer having a processor in communication with a memory. The memory may have stored therein instructions executable by the processor. Upon execution of the stored instructions by the processor the processor acts as a special purpose computer for performing the described processes. The instructions may be stored on a non transitory machine readable medium from which the instructions may be read and executed by a processor to perform the described processes. A computer configured to perform the described processes may be in communication with other computers or system components through a communications network implemented through appropriate input and output ports in the computer which links the computer to other computers or system components.

Thus there has been disclosed a system according to an aspect of the disclosure that provides a platform to perform time phased analysis on the life cycle of multiple system configurations deployed to multiple locations during multiple different time periods. The platform provides the capability to rapidly test and validate multiple sustainment solutions against the interactions of system operations within a designated supply chain structure. Furthermore through the implementation of a central database the system integrates data sets from contributing IPTs used for spreadsheet models with a discrete event simulation model. The data sets together with a series of SQL queries define the model architecture thereby driving a common modeling engine within the discrete event simulation. Upon loading and throughout the simulation scenario queries define the sequence of operations within the system architecture that need to be executed. As each operation executes statistics on the operation and the system executing the operation are collected and written to data sets within the database. Upon completion of the simulation scenario the database processes the output data into a series of customizable reports that identify the behavior and relationships between the system operations and the sustainment of those systems. In one configuration the system includes a customizable user interface within the database e.g. MS Access dB that enables stakeholders to link and unify data sets from contributing IPTs from various disciplines e.g. Engineering Reliability and Maintainability Finance and Logistics into a central location optimize and generate new test scenarios load and run model scenarios into the CME e.g. Arena based CME collect output data from the CME and generate test reports and archive and or retrieve test scenarios. Modification of data sets by IPTs causes changes that are automatically reflected within the model architecture without source code modification while direct traceability between the input data sets and the output data and analysis is achieved and captured through the database relationships.

While particular embodiments of the invention have been illustrated and described various modifications and combinations can be made without departing from the spirit and scope of the invention and all such modifications combinations and equivalents are intended to be covered and claimed.

