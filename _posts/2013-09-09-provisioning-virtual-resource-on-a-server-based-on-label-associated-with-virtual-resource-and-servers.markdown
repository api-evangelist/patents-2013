---

title: Provisioning virtual resource on a server based on label associated with virtual resource and servers
abstract: Virtual resource provisioning may be enhanced by coloring virtual resource instances and/or underlying implementation resources. Particular resource colors may be associated with particular treatments during allocation of implementation resources to virtual resources. There may be different types of colors corresponding to different types of allocation treatment. Exclusory colors may be utilized to reduce clustering of virtual resources with respect to implementation resources. Assignment of exclusory colors to virtual resources can help strike a balance between lower costs through efficient implementation resource utilization and higher fault tolerance through spreading across an available implementation resource pool. Inclusive colors may be utilized to require and/or prefer allocation of virtual resources to implementation resources painted with the inclusive color. Proximity colors may be utilized to enhance a computational performance of a set of virtual resources. Proximity colors may be associated with proximity specifications that define proximity in implementation resource networks.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436508&OS=09436508&RS=09436508
owner: Amazon Technologies, Inc.
number: 09436508
owner_city: Reno
owner_country: US
publication_date: 20130909
---
This application is a continuation of prior U.S. application Ser. No. 12 973 746 filed on Dec. 20 2010 titled Virtual Resource Provisioning with Capacity Coloring the contents of which is hereby incorporated in its entirety by reference.

It has become common for individuals and organizations to use computers and networks of computers to perform and assist in a wide variety of activities. Rather than owning and maintaining physical computers and associated facilities it is becoming more and more common to provision virtual computer systems and other virtual computing resources with a specialized provider of such virtual resources. Such virtual resource provisioning can provide a number of advantages such as reduced cost of desired services and or rapid response to changing service needs. However conventional virtual resource provisioning has a number of shortcomings.

Virtual resource providers may operate large fleets of computer hardware and other resources used to implement the virtual resources provisioned to customers. It is not uncommon for there to be a deliberate layer of abstraction between the virtual computing resources and the underlying implementation resources that decouples the two from a user s point of view. Such decoupling can enable a virtual resource provider to engage in sophisticated allocation and re allocation of the underlying implementation resources for purposes including efficient implementation resource utilization load balancing and fault tolerance without requiring the user to be concerned with implementation details. However at times users can become concerned about particular implementation details for example due to security concerns and regulatory requirements. Some conventional virtual resource providers attempts to address such concerns can have significant negative impacts on implementation resource allocation efficiency and or effectiveness including increased computational and or financial cost and reduced fault tolerance.

Same numbers are used throughout the disclosure and figures to reference like components and features but such repetition of number is for purposes of simplicity of explanation and understanding and should not be viewed as a limitation on the various embodiments.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Virtual resource provisioning may be enhanced by coloring virtual resource instances and or underlying implementation resources. Particular resource colors may be associated with particular treatments during allocation of implementation resources to virtual resources. The term color is used herein in a graph theoretic sense. For example a color may correspond to an alphanumeric string or other suitable distinguishing identifier specified by a user. Association with the identifier may color a resource. In at least one embodiment there may be different types of colors corresponding to different types of allocation treatment. For example the types of color may include an exclusory color type an inclusive color type and or a proximity color type.

The exclusory color type may be utilized to reduce clustering of virtual resources with respect to implementation resources. At least some implementation resources may correspond to points of failure. For example a particular virtual computing system VCS server may at least partially implement a particular set of virtual computer systems. A failure of the VCS server can result in failure of the entire set of virtual computer systems. By default a virtual resource provider may be configured to allocate virtual resources to implementation resources and or implementation resources to virtual resources so as to reduce the impact of such implementation resource failures. For example the virtual resource provider may lower a chance of correlated failure of a set of virtual resources e.g. belonging to a particular customer by spreading the virtual resources thinly across a relatively large number of implementation resources. However a particular customer may request allocation constraints that compromise this strategy. For example the customer may request that the set of virtual resources be implemented by a smaller pool of implementation resources and or implementation resources that are dedicated to the customer.

Assignment of exclusory colors to virtual resources can help strike an optimal balance between lower costs through efficient implementation resource utilization e.g. through clustering and higher fault tolerance through spreading across an available implementation resource pool. Virtual resources associated with an exclusory color can color paint implementation resources that participate in implementing those virtual resources. The allocation algorithm may require and or prefer implementation resources not yet associated painted with the exclusory color for newly requested virtual resources that are associated with that exclusory color. For example a first virtual computer system associated with an exclusory color labeled red may paint a first VCS server that implements the first virtual computer system the exclusory color red . A second virtual computer system associated with the exclusory color red may be excluded from the first VCS server. Colors may be scoped to particular customers or sets of customers e.g. the exclusory color red utilized by two customers may be treated as two colors and or be scoped at the virtual resource provider level so that there is one set of colors utilized by the customers of the virtual resource provider.

The inclusive color type may be utilized to require and or prefer allocation of virtual resources associated with an inclusive color to implementation resources painted with the inclusive color. Inclusive colors may be utilized to increase implementation resource utilization efficiency and or enhance a computational performance within particular implementation resource pools across particular sets of implementation resource pools including implementation resource pools associated with different customers and or among implementation resources of particular types. For example virtual computer systems associated with a particular inclusive color labeled green may be implemented with a set of specially configured VCS servers painted green .

The proximity color type may be utilized to enhance a computational performance of a set of virtual resources. The implementation resources of the virtual resource provider may be interconnected to one another in various ways and by communication connections of various capacities. Proximity between two implementation resources in the implementation resource network may correspond to a quality of a communication connection between the two implementation resources. For example two implementation resources may be closer in the implementation resource network when a communication connection between the two implementation resources is of higher bandwidth and or lower latency. Implementation resources that participate in the implementation of virtual resources associated with a particular proximity color and implementation resources that are proximate and or nearby in the implementation resource network may be painted with the proximity color. The allocation algorithm may require and or prefer implementation resources already painted with the proximity color when allocating new virtual resources associated with the proximity color. In at least one embodiment proximity colors may be associated with one or more proximity specifications that define proximity in the implementation resource network for the proximity colors.

Various approaches may be implemented in various environments for various applications. For example illustrates aspects of an example environment for implementing aspects in accordance with various embodiments. As will be appreciated although a Web based environment may be utilized for purposes of explanation different environments may be utilized as appropriate to implement various embodiments. The environment shown includes both a testing or a development portion or side and a production portion. The production portion includes an electronic client device which may include any appropriate device operable to send and receive requests messages or information over an appropriate network and convey information back to a user of the device . Examples of such client devices include personal computers cell phones handheld messaging devices laptop computers tablet computers set top boxes personal data assistants electronic book readers and the like.

The network may include any appropriate network including an intranet the Internet a cellular network a local area network a wide area network a wireless data network or any other such network or combination thereof. Components utilized for such a system may depend at least in part upon the type of network and or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network may be enabled by wired or wireless connections and combinations thereof. In this example the network includes the Internet as the environment includes a Web server for receiving requests and serving content in response thereto although for other networks an alternative device serving a similar purpose could be utilized as would be apparent to one of ordinary skill in the art.

The illustrative environment includes at least one application server and a data store . It should be understood that there may be several application servers layers or other elements processes or components which may be chained or otherwise configured which may interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and or retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment.

The application server may include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device and may even handle a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example.

The handling of all requests and responses as well as the delivery of content between the client device and the application server may be handled by the Web server . It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein may be executed on any appropriate device or host machine as discussed elsewhere herein. Further the environment may be architected in such a way that a test automation framework may be provided as a service to which a user or application may subscribe. A test automation framework may be provided as an implementation of any of the various testing patterns discussed herein although various other implementations may be utilized as well as discussed or suggested herein.

The environment may also include a development and or testing side which includes a user device allowing a user such as a developer data administrator or tester to access the system. The user device may be any appropriate device or machine such as is described above with respect to the client device . The environment may also include a development server which functions similar to the application server but typically runs code during development and testing before the code is deployed and executed on the production side and becomes accessible to outside users for example. In some embodiments an application server may function as a development server and separate production and testing storage may not be utilized.

The data store may include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which may be utilized to serve content for the production side. The data store also is shown to include a mechanism for storing testing data which may be utilized with the user information for the testing side. It should be understood that there may be many other aspects that are stored in the data store such as for page image information and access right information which may be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store .

The data store is operable through logic associated therewith to receive instructions from the application server or development server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and may access the catalog detail information to obtain information about items of that type. The information then may be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest may be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

In at least one embodiment one or more aspects of the environment may incorporate and or be incorporated into a virtual resource provisioning architecture. depicts aspects of an example virtual resource provisioning architecture in accordance with at least one embodiment. The example virtual resource provisioning architecture includes multiple clients communicatively connected to a virtual resource provider over a network . For example the clients may corresponding to computing devices such as the computing device of and or client programs incorporated into such computing devices. The ellipsis between the client and the client indicates that the virtual resource provisioning architecture may include any suitable number of clients although for clarity only two are shown in . Ellipses are used similarly throughout the drawings.

One or more of the clients may be utilized by one or more customers of the virtual resource provider to interact with a control plane of the virtual resource provider and thereby provision one or more virtual resources . Alternatively or in addition one or more of the clients may be utilized not necessarily by virtual resource provider customers to interact with provisioned virtual resources . The provisioned virtual resources may include any suitable type and or number of virtual resources . Examples of suitable virtual resources include virtual computer systems virtual network connections virtual data stores specialized data processing agents media streaming agents including audio and video streaming agents message queues publish subscribe topics configured to notify subscribers having subscriptions that match events published to the publish subscribe topics monitoring agents load balancing agents and suitable combinations thereof.

The virtual resource provider may include any suitable type and or number of implementation resources . Each of the virtual resources may be implemented by a set of the implementation resources . In at least one embodiment various implementation resources of the implementation resources may be configured to participate in implementing at least in part multiple virtual resources of the virtual resources . Examples of suitable implementation resources include virtual computer system VCS servers data store servers computers server racks networking hardware including switches routers gateways bridges hubs repeaters firewalls and wireless transceivers power supplies generators data centers rooms in data centers mobile data centers as well as non volatile storage devices including hard drives processing units such as central processing units CPUs caches in processing units processing cores in multi core processing units volatile storage devices such as memory modules including random access memory RAM modules and RAM chips of multi chip memory modules network interface hardware and suitable combinations thereof. The control plane may process virtual resource provisioning requests manage allocation of virtual resources to implementation resources and or manage allocation of implementation resources to virtual resources . An example virtual resource provider control plane in accordance with at least one embodiment is described below in more detail with reference to .

Particular implementation resources and or particular sets of implementation resources may correspond to points of failure and or to failure risk domains associated with a failure probability and or an annualized failure rate AFR . For example a particular type of hard drive may have an AFR of 1 . A data center may correspond to a risk domain capable of operating within specifications 99.8 of the time. At least a subset of such implementation resources and or risk domains may be colorable. That is the control plane may associate such implementation resources and or risk domains with a color for provisioning and or allocation purposes. Further examples of colorable risk domains include geographical regions including earthquake risk zones and flood risk zones domains defined by regulatory boundaries including political boundaries and organizational boundaries domains corresponding to independent virtual resource providers and domains corresponding to any suitable set of implementation resources.

At least a subset of the implementation resources may implement at least in part multiple virtual resources that is may be multi instance implementation resources. Multi instance implementation resources may have a capacity measurable in implementation resource allocation units allocation units or slots corresponding to minimum allocable portions of the multi instance implementation resources. Some virtual resources may require no more than one allocation unit from a multi instance implementation resource other virtual resources may require multiple allocation units. For example a VCS server may have a capacity of sixteen allocation units and a small type virtual computer system may require a single allocation unit at the VCS server whereas a large type virtual computer system may require four allocation units at the VCS server. The virtual resource provider may maintain virtual resources for multiple customers. When a multi instance implementation resource is capable of participating in an implementation e.g. a secure and or private implementation of multiple virtual resources for multiple customers it is called a multi tenant implementation resource.

The virtual resource provider may maintain a general implementation resource pool containing a significant portion of the implementation resources that is the default implementation resource pool from which to allocate implementation resources to satisfy virtual resource provisioning requests. Alternatively or in addition the virtual resource provider may maintain one or more implementation resource pools containing different subsets of the implementation resources . For example different implementation resource pools may be established for different customers and or sets of customers. In at least one embodiment particular implementation resource pools may be dedicated to particular customers e.g. contain implementation resources that are not shared with other customers of the virtual resource provider . Particular implementation resource pools may be special purpose and or contain implementation resources of particular types. Particular transition procedures may be associated with entry to and exit from particular implementation resource pools. In at least one embodiment an implementation resource pool is an example of a colorable subset of the implementation resources of the virtual resource provider .

Provisioning configuration re configuration and or de provisioning collectively provisioning of virtual resources may be controlled by the control plane of the virtual resource provider . depicts aspects of an example control plane in accordance with at least one embodiment. The control plane of is an example of the control plane of . The control plane may include a provisioning interface configured at least to receive virtual resource provisioning requests from one or more of the clients a workflow component configured at least to guide responses to provisioning requests in accordance with one or more provisioning workflows and a resource allocation component configured at least to manage allocation of implementation resources to virtual resources .

The provisioning interface may include any suitable provisioning interface elements. Examples of suitable provisioning interface elements include interface elements that correspond to requests to provision the virtual resources interface elements that provide access to virtual resource configuration information and one or more interface elements enabling authentication to establish authority for such provisioning related operations. The provisioning interface may incorporate and or be incorporated in a user interface UI such as a graphical user interface GUI a Web based interface a programmatic interface such as an application programming interface API and or a set of remote procedure calls RPCs corresponding to provisioning interface elements a messaging interface such as a messaging interface in which the interface elements of the provisioning interface correspond to messages of a communication protocol and or any suitable combination thereof. Web based interfaces may include Web services interfaces such as Representational State Transfer REST compliant RESTful Web services interfaces or Simple Object Access Protocol SOAP compliant Web services interfaces or other non RESTful Web services interfaces.

In at least one embodiment the provisioning interface and the resource allocation component may create and or cause the workflow component to create one or more workflows that are then maintained by the workflow component . Workflows such as provisioning workflows and policy enforcement workflows may include one or more sequences of tasks to be executed to perform a job such as provisioning or policy enforcement. A workflow as the term is used herein is not the tasks themselves but a task control structure that may control flow of information to and from tasks as well as the order of execution of the tasks it controls. For example a workflow may be considered a state machine that can manage and return the state of a process at any time during execution. Workflows may be created from workflow templates. For example a provisioning workflow may be created from a provisioning workflow template configured with parameters by the resource allocation component .

The workflow component may modify further specify and or further configure established workflows. For example the workflow component may select particular implementation resources of the virtual resource provider to execute and or be assigned to particular tasks. Such selection may be based at least in part on the computing resource needs of the particular task as assessed by the workflow component . As another example the workflow component may add additional and or duplicate tasks to an established workflow and or reconfigure information flow between tasks in the established workflow. Such modification of established workflows may be based at least in part on an execution efficiency analysis by the workflow component . For example some tasks may be efficiently performed in parallel while other tasks depend on the successful completion of previous tasks.

As part of provisioning a virtual resource the provisioning interface and or the workflow component may request that the resource allocation component determine the appropriate set of the implementation resources required to implement the virtual resource determine whether the required implementation resources are available and or in accordance with virtual resource provider allocation policies and or allocate the required implementation resources. The resource allocation component may incorporate any suitable resource allocation and or resource scheduling algorithm. Various aspects of such algorithms are well known to those of skill in art so only some details are described herein. The resource allocation component may include a resource coloring component configured at least to establish and maintain resource color definitions and colors associations with respect to the virtual resources and or the implementation resources of the virtual resource provider .

The resource coloring component may include a color specifications component configured at least to establish and maintain specifications and or definitions collectively specifications of resource colors of a variety of types. The types of resource color maintained by the color specification component may include resource color types corresponding to exclusory color specifications inclusive color specifications and proximity color specifications . Such specifications may include a name of a corresponding resource color and a scope of the corresponding resource color. For example a resource color name may correspond to a string of alphanumeric and or Unicode characters or other suitable distinguishing resource color identifier. The resource color scope may correspond to a specification domain with respect to the virtual resource provider within which the resource color identifier is required to be unique. Examples of resource color specification scopes include scoping to a customer or set of customers scoping to an implementation resource pool or set of implementation resource pools scoping to an implementation resource type or set of implementation resource types and scoping to the virtual resource provider as a whole.

Proximity color specifications may be associated with one or more sets of proximity criteria specifications . For example each proximity color defined by one of the proximity color specifications may be associated with one of the sets of proximity criteria specifications . Proximity criteria may specify criteria for determining a proximity of implementation resources in the implementation resource network. For example the proximity criteria may include a specification of a proximity metric based at least in part on communication connection capacity communication connection bandwidth and or communication connection one way or round trip latency. Alternatively or in addition the proximity criteria may include one or more sets of proximity thresholds corresponding to proximity regions in the implementation resource network. Such proximity regions may corresponding to levels of oversubscription to communication connection resources in the implementation resource network. As another alternative or further in addition the proximity criteria may be based at least in part on oversubscription ratios with respect to communication connection resources. The specifications maintained by the color specification component may be specified by an authorized user with the provisioning interface and or a suitable administrative interface not shown in .

The resource coloring component may further include a color index . The color index may track current associations between particular resource colors and particular sets of virtual resources and or implementation resources . For example the color index may track which of the implementation resources are currently painted with particular resource colors. An index maintenance component may maintain the color index responsive to resource allocations by the resource allocation component and or updates to resource color specifications and or proximity criteria specifications . A color filtering component may filter a set of candidate implementation resources e.g. being considered by the resource allocation component with respect to the resource color specifications and or proximity criteria specifications .

As described above different types of resource color can correspond to different treatments during resource allocation. depicts aspects of an example resource allocation that respects exclusory colors in accordance with at least one embodiment. An implementation resource pool I.R.P. includes multiple implementation resources . For example the implementation resource pool may correspond to a set of VCS servers dedicated to a particular customer of the virtual resource provider . The implementation resources of the implementation resource pool are multi instance implementation resources each capable of supporting multiple allocation units and respectively. For example each allocation unit may correspond to a capacity to implement a small type virtual computer system.

At a first time t a first allocation occurs for example in response to a provisioning request by a user associated with the particular customer. The depicted implementation resource pool is the implementation resource pool following the first allocation . For clarity same reference numerals are used for the features of the implementation resource pool at both times . The first allocation requires selection of a single allocation unit from the implementation resource pool and is associated with an exclusory color diagonal stripe e.g. defined with one of the exclusory color specifications of . Since the implementation resources begin without a resource color association the exclusory color association does not constrain the allocation and the resource allocation component selects the implementation resource to provide the required allocation unit .

In the depiction of the implementation resource pool after the allocation allocation unit is shaded with a diagonal stripe to indicate that it has been allocated to implementing a virtual resource associated with that color. In addition the resource color data of the implementation resource has been updated to indicate that the implementation resource has now been painted with the exclusory color diagonal stripe .

At a second time t a second allocation occurs for example in response to a second similar provisioning request by the user associated with the particular customer. Again the depicted implementation resource pool corresponds to a state of the implementation resource pool now after the second allocation . The second allocation again requires selection of a single allocation unit from the implementation resource pool and is associated with the exclusory color diagonal stripe . Since the implementation resource is now painted with the exclusory color diagonal stripe as indicated by the resource color data the implementation resource is excluded from consideration for selection i.e. is filtered out . Instead the implementation resource having no color association is selected to provide the required allocation unit .

In the depiction of the implementation resource pool after the second allocation the implementation resource is unchanged but the allocation unit of the implementation resource is now shaded with the diagonal stripe to indicate that it has been allocated to implementing a virtual resource associated with that color. In addition the resource color data of the implementation resource has been updated to indicate that the implementation resource has now also been painted with the exclusory color diagonal stripe .

A third allocation occurs at a third time t. In this example the third allocation occurs in response to a provisioning request by a different user associated with the particular customer. Furthermore this provisioning request is for a medium type virtual computer system and is associated with a different exclusory color grid lines . Again the depicted implementation resource pool corresponds to the state of the implementation resource pool now following the third allocation . Although the implementation resources are painted with the exclusory color diagonal stripe the implementation resources are not currently i.e. prior to allocation painted with the exclusory color grid lines and so are not excluded from consideration by the resource allocation component . In this example the medium type virtual computer system requires two allocation units and the resource allocation component selects implementation resource to provide both allocation units .

In the depiction of the implementation resource pool after the third allocation allocation units and of the implementation resource are shaded with a grid line pattern to indicate that they have been allocated to implementation a virtual resource associated with the exclusory color grid lines . In addition the resource color data of the implementation resource has been updated to indicate that the implementation resource has now also been painted with the exclusory color grid lines . Although each of the implementation resources have associated resource color data and are thus colorable in at least one embodiment a subset of the implementation resources are not so colorable.

Virtual resources and or implementation resources associated with inclusive colors may be treated differently than those associated with exclusory colors. depicts aspects of an example resource allocation that respects inclusive colors in accordance with at least one embodiment. In the example depicted in an implementation resource pool includes multiple implementation resources . A first subset of the implementation resource pool has been painted with a first inclusive color and a second subset has been painted with a second inclusive color .

For example the implementation resource pool may provide implementation resources of different types to implement virtual resources that in turn provide a service with a varying load. Different implementation resources may be associated with different costs and or capacities. For example the first inclusive color may designate low cost implementation resources and the second inclusive color may designate high capacity implementation resources .

Suppose a user having access to the implementation resource pool requests provisioning of a first virtual resource associated with the first inclusive color . The resource allocation component may be configured by the resource coloring component to required and or prefer selection of allocation units at the implementation resources . A different request for a second virtual resource associated with the second inclusive color may require and or prefer implementation resources .

In at least one embodiment the association of inclusive colors with implementation resources requires minimally that the implementation resources be colorable. In contrast proximity colors indicate subsets of the implementation resources that are related by an underlying structure of the virtual resource provider . depicts aspects of an example implementation resource network in accordance with at least one embodiment. In the example depicted in an implementation resource pool contains implementation resources interconnected as follows implementation resources and are directly connected as pairs then pairs and are directly connected sets of four and and and are directly connected and sets of eight and are directly connected.

Suppose the initial pairings such as and are connected with a high capacity low latency communication connection. In such a case the pairs may be considered proximate with respect to one or more of the specified proximity criteria . Whether pairs and are considered proximate by the resource coloring component may depend on the specified proximity criteria . This is also true for example for pairs and .

As a further allocation example suppose the implementation resources begin without a color association and a user having access to the implementation resource pool requests that a virtual resource associated with a proximity color blue be provisioned. Since none of the implementation resources are yet associated with a proximity color the resource allocation component does not particularly require and or prefer any of the implementation resources and may select for example implementation resource . In at least one embodiment in addition to painting colorable implementation resource with the proximity color blue the resource coloring component may determine which of the implementation resources satisfy the proximity criteria associated with the proximity color blue . For example it may be that implementation resources are within blue proximity and may be so painted e.g. the color index may be updated . Alternatively the search for proximate implementation resources may be delayed until the next provisioning request.

For example suppose further that the user later requests another virtual resource associated with the proximity color blue . In this example at least implementation resource is painted with proximity color blue . In addition implementation resources have been determined and or is then determined to be within blue proximity of implementation resource . Accordingly the resource allocation component may select the appropriate allocation units from the implementation resources . Selection of one of the implementation resources other than the implementation resource may or may not change the subset of the implementation resource pool within the blue neighborhood depending on the associated proximity criteria .

The description now turns to example steps and or procedures that may be performed in accordance with at least one embodiment. depicts example steps for virtual provisioning with an exclusory color in accordance with at least one embodiment. At step a request may be received to provision one or more virtual resources associated with an exclusory color. For example an authorized user may interact with the provisioning interface to specify the exclusory color and associate the exclusory color with the provisioning request. At step one or more implementation resource pools may be determined to be associated with the provisioning request. For example a workflow may determine the implementation resource pool s available to the user making the provisioning request.

At step it may be determined whether the associated implementation resource pool s determined at step include implementation resources with sufficient capacity to implement the requested virtual resource s given the current set of implementation resource allocation constraints including the constraint s imposed by the exclusory color. For example the resource allocation component may determine the sufficiency based at least in part on the implementation resource requirements of the requested virtual resource s and the implementation resources in the associated implementation resource pool s painted with the exclusory color. If the associated implementation resource pool s currently include sufficient capacity a procedure incorporating step may progress to step . Otherwise the procedure may progress to step . At step it may be determined whether additional capacity is available in one or more alternate implementation resource pools. For example the resource allocation component may search the general implementation resource pool for the additional capacity. If the additional capacity is available the procedure may progress to step . Otherwise the procedure may progress to step . At step sufficient implementation resource capacity to meet the requirements of the requested virtual resource s may be transitioned from the alternate implementation resource pool s to the associated implementation resource pool s determined at step . For example the resource allocation component may transition the additional implementation resource capacity in accordance with one or more configured implementation resource pool transition procedures. At step the current unavailability of additional capacity determined at step may be reported for example in a response to the request of step .

The current set of implementation resource allocation constraints may include that the associated implementation resource pool s contain implementation resources dedicated to one or more customers of the virtual resource provider . In such a case step may make a determination of insufficient capacity because the implementation resources in the associated implementation resource pool s are dedicated to one or more customers of the virtual resource provider other than the customer associated with the provisioning request of step . If step discovers alternate capacity step may transition sufficient capacity to an implementation resource pool to which the requesting customer has access. Step may correspond to or be incorporated in a request denied response to the request of step . In at least one embodiment steps and corresponding steps described below with reference to implement at least in part a dynamic implementation resource pool management capability of the resource allocation component .

At step a set of implementation resources may be selected from the associated implementation resource pool s . For example the resource allocation component may identify a set of candidate implementation resources in the associated implementation resource pool s . As part of step at step a set of implementation resources associated with the exclusory color may be filtered out. For example the color filtering component of the resource coloring component may filter out the candidate implementation resources currently painted with the exclusory color. The filtering may be hard so that step can fail if sufficient candidate implementation resources of the appropriate type cannot be found or soft so that step is permitted to search for alternate candidates painted with the exclusory color if the step would otherwise fail. Such soft filtering may include determination of one or more suitability scores for the alternate candidates and preferring selection of alternate candidates with more optimal scores. Such suitability scores may be based at least in part on a degree to which an alternate candidate is overloaded with respect to the exclusory color as well as a set of relative or absolute thresholds with respect to such overloading. At step the requested virtual resource s may be provisioned with a selected subset of the candidate implementation resources determined at step and or .

At step implementation resource data relating to exclusory color may be updated. For example the index maintenance component may update the color index based at least in part on the implementation resources selected at step to provision the virtual resource s . This step may correspond to updating the resource coloring data as described above with reference to . In at least one embodiment a particular multi instance implementation resource is not painted with the exclusory color unless the number of allocation units allocated to virtual resources associated with the exclusory color exceeds a threshold e.g. greater than one . Alternatively the implementation resource data relating to the exclusory color may include one or more counts corresponding to the number of allocation units allocated to particular exclusory colors and the filtering of step may require the count to be above the threshold value before filtering out the corresponding implementation resource.

At step a request may be received to provision one or more virtual resources associated with the inclusive color. For example an authorized user possibly different from the user of step may interact with the provisioning interface to request the virtual resource s and associate the provisioning request with the inclusive color. At step one or more implementation resource pools may be determined to be associated with the provisioning request for example as described above with reference to . At step it may be determined whether the associated implementation resource pool s determined at step include implementation resources with sufficient capacity to implement the requested virtual resource s given the current set of implementation resource allocation constraints including the constraint s imposed by the inclusive color. For example the resource allocation component may determine the sufficiency based at least in part on the implementation resource requirements of the requested virtual resource s and the implementation resources in the associated implementation resource pool s painted with the inclusive color. If the associated implementation resource pool s currently include sufficient capacity a procedure incorporating step may progress to step . Otherwise the procedure may progress to step and attempt to transition additional resources into the associated implementation resource pool s . Steps and correspond to steps and respectively described above with reference to .

At step a set of implementation resources may be selected from the associated implementation resource pool s . For example the resource allocation component may identify a set of candidate implementation resources in the associated implementation resource pool s . As part of step at step the set of candidate implementation resources may be refined to prefer implementation resources painted with the inclusive color. For example the color filtering component of the resource coloring component may refine the candidate implementation resources to prefer those currently painted with the inclusive color. The refinement and or filtering may be hard so that step can fail if sufficient candidate implementation resources of the appropriate type and painted with the inclusive color cannot be found or soft so that step is permitted to include alternate candidates not painted with the inclusive color if the step would otherwise fail. At step the requested virtual resource s may be provisioned with the candidate implementation resources selected at step and or or with a selected subset thereof.

At step a request may be received to provision one or more virtual resources associated with the proximity color. For example an authorized user possibly different from the user of step may interact with the provisioning interface to request the virtual resource s and associate the provisioning request with the proximity color. At step one or more implementation resource pools may be determined to be associated with the provisioning request for example as described above with reference to . At step it may be determined whether the associated implementation resource pool s determined at step include implementation resources with sufficient capacity to implement the requested virtual resource s given the current set of implementation resource allocation constraints including the constraint s imposed by the proximity color. For example the resource allocation component may determine the sufficiency based at least in part on the implementation resource requirements of the requested virtual resource s and the implementation resources in the associated implementation resource pool s painted with the proximity color. If the associated implementation resource pool s currently include sufficient capacity a procedure incorporating step may progress to step . Otherwise the procedure may progress to step and attempt to transition additional resources into the associated implementation resource pool s . Steps and correspond to steps and respectively described above with reference to .

At step a set of implementation resources may be selected from the associated implementation resource pool s . For example the resource allocation component may identify a set of candidate implementation resources in the associated implementation resource pool s . As part of step at step the set of candidate implementation resources may be refined to prefer implementation resources painted with the proximity color. For example the color filtering component of the resource coloring component may refine the candidate implementation resources to prefer those currently painted with the proximity color. The refinement and or filtering may be hard so that step can fail if sufficient candidate implementation resources of the appropriate type and painted with the proximity color cannot be found or soft so that step is permitted to include alternate candidates not painted with the proximity color if the step would otherwise fail. At step the requested virtual resource s may be provisioned with the candidate implementation resources selected at step and or or with a selected subset thereof.

At step implementation resource data relating to proximity color may be updated. For example the index maintenance component may update the color index based at least in part on the implementation resources selected at step to provision the virtual resource s and or the proximity criteria associated with the proximity color as described above with reference to . In at least one embodiment the updating of step may be partially or wholly incorporated into step as part of the refinement and or filtering process.

As described above with reference to the control plane may be facilitated by one or more workflows maintained by the workflow component . depicts example steps for workflow management in accordance with at least one embodiment. At step a request may be received by an interface of the control plane . For example one of the user interfaces of the control plane may receive the request from a user customer and or administrator of the virtual resource provider . The request may be a call to a programmatic interface such as an application programming interface API and or a Web services interface. Alternatively or in addition the request may be received through a graphical user interface GUI such as a Web based GUI. At step the request may be analyzed to determine one or more actions required to successfully complete the request. For example the provisioning interface may analyze the request and determine a set of actions required to provision a set of virtual resources . When an interface element receiving the request corresponds to a specific action to be performed the interface may extract information from the request to be utilized in determining aspects and or parameters of the action to be performed.

At step a request may be sent to create a workflow based at least in part on the one or more actions determined at step . For example provisioning interface may send the request to the workflow component . The request to create the workflow may include the action s action metadata such as type of action and or action parameters. In at least one embodiment the control plane and or the workflow component maintains a job queue for such requests and workflows are created responsive to new additions to the job queue. At step a workflow and one or more component tasks may be created. For example the workflow component may analyze the request of step to determine the appropriate workflow and component tasks to create.

At step execution of the component task s may be guided in accordance with the workflow. For example the workflow component may activate elements of interfaces of various implementation resources to provision the set of virtual resources. Alternatively or in addition the workflow component may manage bids for execution of the component task s by components of the virtual resource provider . At step it may be determined whether the workflow has finished. For example the workflow component may determine whether a final task in a sequence of tasks managed by the workflow has completed. If so a procedure incorporating step may progress to step . Otherwise the procedure may return to step for a next task and or task sequence. Workflows may guide multiple task sequences executing in parallel. In this case it may be that the workflow is not finished until each of the multiple task sequences completes and or an explicit workflow finished flag is set by one of the component tasks. At step the sender of the request of step may be informed of result s of the action s .

The various embodiments described herein may be implemented in a wide variety of operating environments which in some cases may include one or more user computers computing devices or processing devices which may be utilized to operate any of a number of applications. User or client devices may include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also may include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also may include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. Such a network may include for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof. The network may furthermore incorporate any suitable network topology. Examples of suitable network topologies include but are not limited to simple point to point star topology self organizing peer to peer topologies and combinations thereof.

In embodiments utilizing a Web server the Web server may run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment may include a variety of data stores and other memory and storage media as discussed above. These may reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device may include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also may include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader may be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules including program modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be utilized and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code may include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be utilized to store the desired information and which may be accessed by the a system device. Program modules program components and or programmatic objects may include computer readable and or computer executable instructions of and or corresponding to any suitable computer programming language. In at least one embodiment each computer readable medium may be tangible. In at least one embodiment each computer readable medium may be non transitory in time. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

The use of the terms a and an and the and similar referents in the context of describing embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments and does not pose a limitation on the scope unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of at least one embodiment.

Preferred embodiments are described herein including the best mode known to the inventors. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments to be constructed otherwise than as specifically described herein. Accordingly suitable embodiments include all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is contemplated as being incorporated into some suitable embodiment unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

For the Examiner s convenience Applicants note that this application is a continuation of U.S. application Ser. No. 12 973 746. The claims of the present application are different and possibly at least in some aspects broader in scope than the claims pursued in the parent application. To the extent any prior amendments or characterizations of the scope of any claim of the parent or any cited documents could be construed as a disclaimer of any subject matter supported by the present disclosure Applicants hereby rescind and retract such disclaimer. Accordingly the references previously presented in the parent applications may need to be revisited.

