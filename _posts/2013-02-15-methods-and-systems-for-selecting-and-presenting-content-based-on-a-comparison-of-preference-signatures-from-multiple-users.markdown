---

title: Methods and systems for selecting and presenting content based on a comparison of preference signatures from multiple users
abstract: A method of selecting and presenting content based on a comparison of preference signature from multiple users is provided. The method includes providing a set of content items having associated descriptive terms and receiving search input from users. The method includes presenting a subset of content items, receiving content selection actions, and learning users' preferences, wherein the preferences are weighted based on content items usage so that the user preferences are specified as a set of descriptive terms and associated weights. The method includes identifying users with similar preferences by comparing sets of learned user preferences and presenting content items to at least one user of the plurality of users by identifying for presentation content items selected by users identified as having learned user preferences that are similar to the learned user preferences of said at least one user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09128987&OS=09128987&RS=09128987
owner: Veveo, Inc.
number: 09128987
owner_city: Andover
owner_country: US
publication_date: 20130215
---
This application is a continuation of prior U.S. patent application Ser. No. 11 682 533 filed on Mar. 6 2007 entitled Methods and Systems For Selecting and Presenting Content Based On A Comparison Of Preference Signatures From Multiple Users which claims the benefit of the following applications the contents of which are incorporated by reference herein 

This application is related to the following applications all of which applications were filed on Mar. 6 2007 

This invention generally relates to learning user preferences and more specifically to using those preferences to personalize the user s interaction with various service providers and interactions with content query systems e.g. to better find results to queries provided by the user and to ordering the results for presentation to the user.

Personalization strategies to improve user experience can be chronologically classified into two categories 1 collaborative filtering and 2 content reordering. Each is summarized in turn.

Collaborative Filtering was used in the late 1990s to generate recommendations for users. The term collaborative filtering refers to clustering users with similar interests and offering recommendations to users in the cluster based on the habits of the other users. Two distinct filtering techniques user based and item based are used in filtering.

In U.S. Patent App. Pub. No. U.S. 2005 0240580 Zamir et al. describe a personalization approach for reordering search queries based on the user s preferences. The application describes a technique for learning the user s preferences and increasing the promotion level of a search result based on personalization. Zamir et al. create a user profile which is a list of keywords and categories listing the user preferences. The profile is generated from multiple sources such as 1 information provided by the user at the time the user registers a login 2 information from queries that the user has submitted in the past and 3 information from web pages the user has selected.

Some systems directed to reordering content in the context of television schedules define categories and sub categories according to an accepted standard. User preferences are gathered using various models such as 1 user input 2 stereotypical user models and 3 unobtrusive observation of user viewing habits. In some implementations these models operate in parallel and collect the user preference information.

In other systems a set of fixed attributes is defined and all media content and all user preferences are classified using these attributes. A vector of attribute weights captures the media content and the user preferences. The systems then determine the vector product between the content vector and the user preferences vector. The system suggests content to users where the values of the vector products exceed a predetermined threshold.

The invention provided methods and systems for selecting and presenting content based on learned user preferences.

Under an aspect of the invention a method of selecting and presenting a subset of content items to a user based on content item selections by other users having similar preferences as determined at least in part based on analyzing the weights of relative preferences of each user includes providing a set of content items wherein each content item has at least one associated descriptive term to describe the content item. The method also includes receiving a plurality of incremental inputs. Each incremental input being entered by a corresponding one of a plurality of users of an input device. The method further includes in response to each incremental input presenting a corresponding subset of content items and receiving selection actions of content items from the user who entered the incremental input for which the subset of content items was presented. The method includes for each user of the plurality of users learning the preferences of each user by associating a weight with each descriptive term associated with the selection actions of the user. The weight indicates the amount of use by the user of the selected content items associated with each of the descriptive terms so that the user preferences are specified as a set of descriptive terms and associated weights. The method further includes identifying users with similar preferences by comparing sets of learned user preferences to determine if the sets of preferences of the users match within a specified threshold and presenting content items to at least one user of the plurality of users by identifying for presentation content items selected by users identified as having learned user preferences that are similar to the learned user preferences of said at least one user.

Under another aspect of the invention the selecting and ordering the collection of content items is further based on popularity values associated with the content items. Each popularity value indicates a relative measure of a likelihood that the corresponding content item is desired by the user.

Under a further aspect of the invention the set of content items includes at least one of television program items movie items audio video media items music items contact information items personal schedule items web content items and purchasable product items. The descriptive terms can include at least one of title cast director content description and keywords associated with the content.

Under yet a further aspect of the invention the set of content items is contained on at least one of a cable television system a video on demand system an IPTV system and a personal video recorder.

These and other features will become readily apparent from the following detailed description wherein embodiments of the invention are shown and described by way of illustration.

Preferred embodiments of the invention capture user preferences for a single user or a family of users based on historical observations of the users activities and by use of a statistical learning model also referred to as a learning engine . In an illustrative embodiment the users of the family are members of a household using a single interface device. The learning model identifies a signature or set of signatures for the entire household as a stochastic signature. This stochastic signature is used to predict future activities in which members of the family may engage. For the sake of simplicity the description will refer to signatures and activities of a single user when in fact the same applies to a group of users using a single interface device.

One benefit of the learning engine is to enhance the user s experience by increasing the accuracy of the results of a user s query for content and organizing these results so as to put the most likely desired content items at the top of the results list. This increases the user s speed and efficiency in accessing the content he or she desires. In addition the signatures can be used to identify clusters of users with similar interests for use with collaborative filtering techniques. The learning system can be one aspect of an overall system that provides content and selectable actions to the user or the learning system can be a standalone system that monitors the user s actions across multiple systems and provides learned user preferences to external systems based on the context of the user s interaction with a particular external system.

The stochastic signature is a probabilistic model and it is an identity that can be used for validation prediction etc. While this type of signature can be used to identify a user according to his or her preference it is distinguished from a unique signature that a user may employ to authenticate an item or guarantee the source of the item for example. A stochastic signature may be created based on various types of activities for example watching television programs dialing telephone numbers listening to music etc. Thus embodiments of the invention are useful in a wide variety of contexts. In applications where there are multiple dataspaces to be searched the system will use a collection of stochastic signatures related to that dataspace. For example when searching a personal address book calendar or air line schedules the system can use the set of signatures related to that particular dataspace. In addition the system can also learn correlated activities across dataspaces. This allows the system to learn how the user interacts with related dataspaces and use that learned behavior to personalize the presentation of content to the user. However for the sake of simplicity certain embodiments of the invention will be described with reference to a single dataspace interface e.g. a television system interface.

In the context of a user device with limited input capability for example a television remote control the stochastic signature is particularly useful because it can be difficult and or time consuming to enter queries on such a limited input device. The stochastic signature increases the likelihood that the desired search results will be found based on limited query input. For example if a particular household has generally watched a certain program at a given time in the past stochastic signatures can be used to predict that the household will watch the program at the given time in the future. Thus instead of requiring a member of the household to enter the title of the program the learning system can predict that the member wishes to watch the program based on only a few button presses.

Embodiments of the present invention build on techniques systems and methods disclosed in earlier filed applications including but not limited to U.S. patent application Ser. No. 11 136 261 entitled Method and System For Performing Searches For Television Programming Using Reduced Text Input filed on May 24 2005 U.S. patent application Ser. No. 11 246 432 entitled Method And System For Incremental Search With Reduced Text Entry Where The Relevance Of Results Is A Dynamically Computed Function of User Input Search String Character Count filed on Oct. 7 2005 and U.S. patent application Ser. No. 11 235 928 entitled Method and System For Processing Ambiguous Multiterm Search Queries filed on Sep. 27 2005 the contents of which are hereby incorporated by reference. Those applications taught specific ways to perform incremental searches using ambiguous text input and method of ordering the search results. The present techniques however are not limited to systems and methods disclosed in the incorporated patent applications. Thus while reference to such systems and applications may be helpful it is not believed necessary to understand the present embodiments or inventions.

As mentioned the learning engine gathers information about channels genres and microgenres that the user has watched. Herein the term channel refers to a tunable entity in a television system. A channel can be identified by its name CBS ABC CNBC etc. .

The term genre refers to the overall theme of an item. In some systems every retrievable item is categorized into a genre. The collection of genres is system definable and can be as coarse or as fine grained as necessary. In addition the genres can be defined independent of the retrievable items and can be defined ahead of populating a content system with retrievable items. In one implementation a function g x returns a subset of the set of genres for a given item. Thus g x is a function with a domain space of a set of retrievable items and the range space of a set of all subsets of genres. This is so because any retrievable item may belong to more than one genre e.g. a movie Sleepless in Seattle has a genre of movie and romance.

The term microgenre refers to a very refined unambiguous theme of descriptor for a given item. For example New England Patriots as a search item has a microgenre of NFL Football and genres of football and sports. As with genres a search item can have multiple microgenres. While genres are macro themes microgenres are micro unambiguous themes these themes come from descriptive terms and metadata within the search items. Thus the microgenres for New England Patriots also include Tom Brady. Microgenres are not limited to a set of predetermined descriptors as are genres in the prior art but can be any word that describes the item. Whether a particular theme is a genre or microgenre depends on the particular item with which the theme is associated and the configuration of the content system. Thus microgenres are dynamic and generated on the fly while genres are static and system defined.

In dataspaces other than the television content space the channel genre and microgenre approach to characterizing items is modified to reflect the attributes of the content items in that particular dataspace. Thus for a telephone directory dataspace the channel statistics are replaced with statistics related to the person or entity called. The genre statistics are replaced by statistics related to the type of entity called for example individual or business. While the microgenre statistics are replaced by statistics related to key secondary attributes of the item such as home office and mobile telephone numbers as well as for example telephone numbers of persons related to the persons called.

Computational module is sent the current day s data periodically and determines the users signatures. In so doing computational module combines this current data with historical data using exponential smoothing or other smoothing techniques discussed below so that the signatures adapt over time to the users changing preferences. Computational module also performs other computations involving the signatures for example combining the individual signatures to obtain aggregate signatures that predict the viewing preferences of a large collection of individuals or creating signatures that capture the average activity level associated with a particular program described in greater detail below . In one embodiment of the system computational module resides in one or more servers to exploit the computational power of larger processors. However in some implementations e.g. where privacy is an issue computational module may reside in the client device.

A particular stochastic signature is a normalized vector of probabilities. The probabilities capture the historical patterns of the user s behavior with respect to a particular set of activities. An example of a signature for use with a television system is ABC 0.3 CBS 0.2 NBC 0.5 . This signature captures that over a given time period when the user was watching television the user watched ABC 30 of the time CBS 20 of the time and NBC 50 of the time. The stochastic nature of the signature says that this is a historical average and not an exact number.

Because the system captures the user s behavior and preferences across multiple dataspaces taking into account the geographic location of the user or the user s client device the multiple signatures can be represented as a set with three indices. Thus the convention signature t g s represents a signature in geographic location g at time t for dataspace s. This allows the system to use difference subspace projections to utilize the information contained in the entire set. For example the system may utilize the user s preferences based on activity across all geographic locations or based on a composite of multiple times for a given dataspace and given location. The composite signature is described in greater detail below.

Although time is obviously a continuous variable for the purpose of learning the user s preferences and activities a coarse or discretized view of time is used to capture all activity. Thus the system divides time into discrete quantities and represents time as an integer from one to the number of discrete quantities in a day. For example time can be divided into the number of minutes in a day thereby representing time as a number 1 to 1440. In addition this discrete representation of time can be further subdivided into time slots that encompass multiple minutes as discussed below. The duration and therefore the number of time slots is selected based on the nature of the activity of the particular dataspace. For example in the television dataspace it is appropriate to divide time into 30 minute time slots to correspond to the program boundaries. In other dataspaces the coarseness can vary. Although it is not necessary to have the same time division in all dataspaces the examples set forth below assume identical time slot durations for the sake of simplicity. Similarly geographic location though continuous is discretized and represented by character strings. For example the geographic location identifiers can be a postal code a major metropolitan area or an area of a given size with the latitude and longitude of its center being the location identifier.

There are many possible collections of signatures that capture the activities of the user or family of users at various levels of granularity. shows a sample signature hierarchy for the multiple dataspace learning model with n locations m dataspaces and k time slots . At the first level the figure illustrates activities in each location . Within each location the system captures dataspace specific activities in individual signatures. Inside each dataspace for each time slot the system obtains a unique signature. Finally the signature hierarchy captures the nature of the activity within the time slot by appropriate keyword genre and microgenre signatures or equivalent statistics depending on the dataspace as described above . The illustrative learning system shown in the figure has 3 nmk signatures in the collection.

The timeslots shown in can be further divided according to the particular needs of the learning system. Thus a top level time slot can have lower level time slots organized beneath the top level time slot. For example a top level time slot can be a day organized into lower level time slots of an hour or half hour increments each having its own collection of signatures. Similarly the day time slot can have a collection of composite signatures beneath it that aggregate all of the information of the individual time slots for that given day into a single composite signature.

Because activities vary widely in a multiple dataspace environment the system can capture the user s activities according to the signature hierarchy as duration and or count. In other words the system can track the amount of time the user spent performing an activity or the system can track the number of times the user preformed a particular activity or the system can record both. For example if the system is modeling a DVR recording activity or DVD ordering activity there is no duration measure associated with it. Thus in these cases the system will capture the intensity of the activities by the count frequencies of the activities. However other activities have duration as a natural measure of the intensity of the activities e.g. watching a television program . While still other activities have both count and duration as a natural measure of intensity e.g. placing a telephone call and conducting the call . To be inclusive of all activities the system models every activity by both count and duration. Thus there are two signatures for each keyword genre and microgenre division of the hierarchy. Likewise there are two for each composite as well. For each time location and dataspace a function defines the convolution of the two intensity measures into a single signature count duration single measure Equation 1 

For the sake of simplicity this description omits the adjective count or duration in referring to signatures opting for disambiguation based on the context.

In one embodiment of the invention signatures capture the television viewing activity of the family of users in a single geographic location and these signatures are used to identify and organize television program search results. The learning engine divides a day into time slots. For the purposes of this example there are 48 time slots in a 24 hour day. Thus one time slot corresponds to the smallest length TV program i.e. 30 minutes. In other implementations time slots may be larger or smaller for example in a system using stochastic signatures to identify a user s telephone calling preferences the time slots may be two to three hours long. During each time slot the user activity is recorded and the learning system creates a time slot signature for each time slot. In addition at the end of each day the learning system creates a composite signature based on the data collected across all time slots within the current day. The signature is said to be composite in that it represents a user s activity across multiple time slots. As discussed in greater detail below the learning system uses smoothing techniques to create evolving signatures that retain activities in the distant past as well as the most recent activities.

The day is divided into time slots because each family of users has a recurring viewing behavior based on the time of day. Thus the learning system learns television viewing preferences from the past behavior during a given time slot. Any queries for television content that originate in that time slot on a later day can use these preferences to identify and organize content by using that time slot s signature.

For example in an illustrative family of three husband wife and a child mornings and afternoons are taken up by soap operas and talk shows afternoons are taken up by cartoons and children s programming and evenings are taken up by business movies and prime time shows. During these periods it is likely that queries for current television content also relate to the corresponding past viewing behavior. Thus signatures that capture this past behavior are used to identify and organize content consistent with this past behavior. However for more aggregate behavior independent of time slots it is desirable to have a coarse grain view of the day s activity in the household. The time slot activity is aggregated into a day s activity this is the basis of the composite signature. Thus at the end of each day the system has collected and aggregated 49 different signatures 48 individual time slot signatures and one composite signature.

Composite signatures serve two purposes. First if the family of users has a slight time drift in their behavior e.g. some days a particular user watches a given program at 10 00 AM while other days at 10 45 AM the time slot signatures may get shifted by one slot. However the composite will still capture the overall viewing behavior correctly. Second a particular user may time shift deliberately by many time slots. The composite signatures will also correctly capture this behavior.

The above example implicitly assumes that the user has a recurring behavior with a periodicity of a day. However the learning system may utilize other periodicities as explained below. As mentioned above one benefit of the learning system is to enhance the user s experience by increasing the accuracy of the results of a user s query for content and organizing these results so as to put the most likely desired content items at the top of the results list. This increases the user s speed and efficiency in accessing the content he or she desires.

Towards this end the learning system infers periodicity of activities. For example as discussed above there is a daily periodicity of activities. However the daily periodicity model may not always apply as occurs during a weekend during which time the users activities can be quite different from those during the week. To capture this different behavior pattern for example the system will utilize two different periodicities. Thus the weekday periodicity will contain data for the days during the week while the weekend periodicity will be empty for those days and vice versa. This is an example of orthogonal periodicity.

The term orthogonal refers to the fact that the periodicity waveforms are orthogonal i.e. if f x is a periodicity function and g x is another periodicity function then f x and g x have orthogonal periodicity if 0 0 Equation 2 

Equation 2 defines strong orthogonality or pointwise orthogonality in contrast with the strict mathematical definition of orthogonality of functions see F. B. Hildebrand second edition McGraw Hill Book Company New York 1974 hereby incorporated by reference . illustrates an example of orthogonal periodicity. The figure shows a variety of waveforms that represent the activity captured by a set of signatures for a particular dataspace in a particular location. The Y axis is the intensity of activity during a particular day and X axis is the day. A weekday waveform captures the activity during the days of the week i.e. Monday Friday . Whereas a Saturday waveform and a Sunday waveform capture the activity on Saturday and Sunday respectively. A solid line shows weekday periodicity waveform a short dashed line shows the Saturday periodicity waveform and a long dashed line show Sunday periodicity waveform .

Although the above example is in terms of a week periodicity can extend beyond a week. For example periodicities can exist within a day or can extend beyond a week. In addition some periodicities may not be orthogonal. Thus the system uses a second kind of periodicity namely overlapping periodicity to capture this phenomenon.

In overlapping periodicities the periods overlap i.e. the same time and day can belong to multiple periods one having a larger frequency than the other. Thus the strong orthogonality property of Equation 2 does not apply to overlapping periodicities. shows an example of overlapping periodicity. In this example a user watches a recurring program every Wednesday along with the usual daily programs that she watches. Thus there is a weekly period with a frequency of once per week and a daily period with a frequency of once per day.

Overlapping periodicities are distinguished by storing the same activities in multiple sets of signatures one set for each overlapping periodicity. In the example of the system will store the same Wednesday activity both in daily set and weekly set . Notice that weekly set does not contain activities from other days. When a query is submitted on a Wednesday a union of both signatures is used in identifying and organizing the content results. Both signatures are combined in such as way as to reflect the fact that the weekly signature anchored on Wednesdays has a greater impact on the query results than does daily signature .

As mentioned above the learning system defines periodicities according to the users behavior. In one illustrative implementation the system compares each recorded user action and determines the periodicity of similar actions by measuring the time that elapses between the similar actions. The similarity can be based on for example the user watching the same television channel or the user watching television programs of the same genre or microgenre. Therefore if a user watches a particular television show on the first Tuesday of every month the system would capture this as a monthly periodicity. Thus although the system can use predefined periodicities the system creates periodicities of any time duration as needed by the particular usage case. As mentioned above capturing the user s viewing preferences in the television dataspace is only one example of an implementation of the learning system. Other examples include learning the user s dialing preferences in the telephone dataspace or tracking the user s buying behavior in the internet dataspace.

As explained above vectors can be used to capture the family of users behavior. A vector is defined as a linear array of numbers. Every vector belongs to a vector space. In one embodiment of the learning system the system only operates in vector spaces in R defined as 0 all Equation 3 

The dimensionality of the vector space depends on the type of vector. For example the dimensionality of a channel vector space is the number of channels in the television system. The values in the vector also depend on the type of vector e.g. it can be duration or count or any other metric deemed appropriate to capture the activity of the family of users. shows an example of a collection of vectors capturing the users activity between 10 00 AM and 10 30 AM on a weekday.

The vectors in correspond to three different vector spaces channel genre and microgenre. The dimensions of these vector spaces are the number of channels in the TV system the number of genres defined in the learning system and the number of microgenres dynamically created in the learning system respectively. Only nonzero values are stored in the various vectors. All other values are implicitly zero and are not stored in the system. Thus the learning system fundamentally stores all vectors as sparse vectors. The technology of sparse vectors and sparse matrix computations eases the burden of working with large vector spaces see I. S. Duff A. M. Erisman and J. K. Reid Monographs on Numerical Analysis Oxford Science Publications Clarendon Press Oxford 1986 for a description of numerical computations using sparse matrices and sparse vectors hereby incorporated by reference .

A channel vector in the figure has nonzero values for channels CBS ABC and CNBC. The values correspond to the number of minutes the user watched each channel between 10 00 AM and 10 30 AM. Similarly the program genres are captured in a genre vector . In this example the CBS and CNBC channels were broadcasting programs of type business and ABC was broadcasting a program of type comedy. Finally the program microgenres are captured in a microgenre vector . In the above example ABC was broadcasting the comedy show Seinfeld CNBC was broadcasting a business show Squawkbox and no microgenre was created for the CBS show.

As previously mentioned the techniques described above can be implemented in data collection modules and signature computation modules that reside on either a client device or a remote server system. Thus the channel genre and microgenre data can be gathered and processed locally by the client device or this information can be sent to a remote server system for processing. Likewise the signatures can reside on a client device or on a remote server system for use as described below.

In addition to capturing the user s activities according to keyword i.e. channel in the television dataspace context genre and microgenre the system also learns the amount of time the user spends in each dataspace independent of location and time slot. This gives rise to yet another signature the dataspace fraction signature. The dataspace fraction signature herein dfs has the coordinates of time and location and is represented by dfs t g . The signature dfs t g is a normalized probability vector indicating the fraction of time and or activity count the user spent in various dataspaces. For example dfs t g s contains the value indicating the fraction of time and or count spent in dataspace s at time t in location g. This two coordinate signature is used to reorder the search results space when a search across dataspaces is performed. Meanwhile as described above a three coordinate signature is used to reorder the items within each dataspace e.g. ks t g s denotes a keyword signature in time slot t in location g and in dataspace s ks t g s x denotes the value of element x in the keyword signature. Therefore when the user initiates a search across all dataspaces the system will reorder content items from the multiple dataspaces according to the user s dataspace preferences based on the information contained in the dataspace fraction signature. If the user performs actions in one particular dataspace relative to another the result from the more heavily used dataspace would be promoted over the results from the lesser used dataspace.

The following example is provided to illustrate this aspect of the learning system. A mobile user visited the telephone dataspace 30 times the television dataspace 20 times and the web dataspace 10 times while located in Denver during the 10 AM time slot. During these interactions with the system the user called Sam Sally and Stewart speaking for 5 15 and 10 minutes respectively. The user watched a television program entitled Seinfeld for 30 minutes. In addition the user browsed the Google webpage for 10 minutes and Yahoo webpage for 20 minutes respectively. Using a count measure for the dataspace fraction signature and a duration measures for the television telephone and web dataspaces the keyword signature and dataspace fraction signature ensemble will be as follows 

Thus if the user enters a text query starting with the letter S all results beginning with the letter S would be presented to the user. However the matching results from the phone space would be promoted over the results from the TV space and the web space because the dataspace fraction signature probability for the phone space is the greatest. This is so even though the probability for the lone TV space item is greater than any of the phone space items. Within the phone space the individual items would be sorted according to the keyword signature probability values. Therefore the entry for Sally would be promoted over the other phone space items. This example clearly shows the Bayesian property of the signatures. That is the probabilities add up to one conditioned on the fact that the user is in a particular dataspace see B. W. Lindgren G. W. McElrath D. A. Berry Macmillan publishing co. New York 1978 herein incorporated by reference for more details on Bayes s theorem .

As described above the signatures associated with a particular dataspace i.e. keyword genre and microgenre signatures capture the probability of the user performing a future action or desiring a future content item based on past activities and selections that took place within that particular dataspace. Thus the individual dataspace signatures are conditional signatures in that the probabilities they measure are conditioned upon the user operating in the particular dataspace to which those signatures relate.

The dataspace fraction signature probabilities can be used to weight the individual dataspace signature probabilities to provide a measure of the probability of a user performing a given action outside of a particular dataspace. This operation gives rise to an unconditional signature. The unconditional signature measures the probability of the user performing an action outside of any particular dataspace based on the information contained in the individual dataspace signatures and the information contained in the dataspace fraction signatures. The system uses Equation 4 below to determine the unconditional keyword signature for an activity A . Unconditional signatures for genre and microgenre can be determined in the same way. Equation 4 

The learning system can organize the various dataspaces content and selectable actions into a tree hierarchy which the user can navigate using the client device. The unconditional signatures are used by the learning system to rearrange the various branches of the tree structure so as to present the most favored content to the user based on the probabilities stored in the signatures. In addition the unconditional probabilities enable the system to present lists of commingled selectable actions and content items based on the most commonly performed actions and most commonly exhibited preferences. For example the learning system is capable of creating a My Favorites list based on the various signatures or the system could rearrange a content tree hierarchy in order to reduce the effort required of the user to reach certain preferred content.

The learning system is also capable of learning correlated activities across dataspaces. A correlated activity is an activity performed in a secondary dataspace while starting from a primary dataspace. In general by capturing correlated activities across dataspaces the system is learning not only standalone actions and content preferences but the system is learning chains of actions performed by the user. For example a user enters the telephone dataspace of his device to make a telephone call. During the telephone call the user wishes to enter the calendar dataspace to search for and review the date and time of a particular appointment. In this example the user remains engaged with the primary dataspace the telephone dataspace for the duration of the telephone call. The user also performs a correlated action the act of searching for an appointment in the secondary dataspace which is the calendar dataspace.

The purpose of learning the correlated activities is to achieve better ordering of the search query results in the secondary dataspace based on the correlated activities learned by the system. Thus the correlated activity signatures provide yet another way to learn the preferences of the user and how the user interacts with his or her client device. This additional set of preferences and learned actions further enhances the user experience.

In general the system has an activity matrix A that is a square N by N matrix where N is the number of dataspaces. Each entry in the matrix is a signature vector that captures the actions performed in the secondary dataspace while operating from the primary dataspace. Thus A is in fact a three dimensional matrix which can be defined as follows 0 for all items dataspace average number of accesses of item in dataspace while in dataspace 11 for all items dataspace Equation 5 

The matrix determined by Equation 5 captures the correlated activities of the user and therefore can be used in accordance with the techniques disclosed herein to predict the probability that the user would perform an action in a secondary dataspace while operating from a primary dataspace. In addition the correlated activity signatures can be used to determine the unconditional probability of the user accessing a keyword item x in dataspace s location g and at time t. The probability determination depends in part on the mode of access utilized by the user. As described in Equation 6 below if the user is entering dataspace s at the root level of the client device i.e. the user is not currently in a dataspace the probability determination is based on the dataspace fraction signature and the relevant signatures for the selected dataspace e.g. the keyword signature the genre signature or the microgenre signature . If the user is entering dataspace s from another dataspace the probability determination is based on the dataspace fraction signature and the correlated activity matrix A.

For the sake of simplicity the learning system s ability to capture correlated activities was described in terms of a primary and secondary dataspace only. However the invention is not limited to correlations between only two dataspaces. The learning system can also capture user activities and preferences when the user enters a first dataspace enters and performs an action in a second dataspace and enters and performs yet further actions in a third dataspace. In fact using the principles and techniques described above the learning system can create N number of correlation signatures.

As described above the users activity and preferences are stored as vectors. Capturing the users activity and preferences as vectors has many benefits. Among these is the fact that because signatures are vectors one can easily determine when two signatures are nearly identical. For example let tilde over x and tilde over y be two signatures in the same vector space. Lower case letters in bold will generally denote normalized probability vectors in appropriate dimension. A tilde over the top of a vector will generally denote un normalized vectors. Greek symbols and lower case letters without bold will generally denote scalars. If

then the two signatures are nearly identical. Equation 7 states that if the cosine of the angle between the two signatures is small enough then they are nearly identical up to a scaling factor. The scaling factor recognizes that two vectors may have different magnitudes but still be overlapping. For example a first user has a genre vector of sports world news and a second user has a genre vector of sports world news where the first value within the vector elements is the genre and the second value is minutes watched per day. Although the magnitudes of these two vectors are different the genres and ratio of minutes of sports to world news is identical. Thus the learning system identifies these two signatures as nearly identical. The learning system can exploit this aspect in a variety of ways as described in greater detail below.

In one illustrative implementation the system clusters signatures that are similar into subsets. The subsets can then be used for many purposes such as promotions targeted advertisements etc. For example if several users of a particular cluster have watched a certain television program this television program will be recommended to other users of the cluster who have yet to view the program. Similarly outside of the television context if users of a particular cluster have purchased a given item ads for this item are presented to the other users of the cluster who have not purchased the item.

The notion of viewing signatures as vectors can be exploited to determine the similarity between the signatures by using Equation 7. Each cluster represents nearly identical signatures. Initially the procedure starts with singleton clusters and recursively collapses them until no more merging is possible. An example of pseudo code that generates clusters of signatures is provided below 

In addition the learning system can decompose one or more signatures to approximate the number of family members in a signature the gender of each family member and the ages of the family members. The system uses a nonlinear optimization model to approximate these values. In this example the learning system uses genre signatures similar models apply to channel and microgenre signatures.

The technique starts with historical human behavioral statistical data on television viewing habits obtained from generally available data such as the user viewing preferences available from the DVB Project see www.dvb.org . In particular is a set of all genres that are available to the viewing public. Upper case Greek letters in bold font generally denotes sets. Thus a collection of probability distributions exists namely Probability that a genre would be watched by a person of gender and age male female 0 Equation 8 

The learning system also provides a signature s that collectively describes the viewing habits of the household. The illustrative maximum likelihood estimation problem formulated below defines the most likely set of household members that may produce the signature s. For the purposes of this example all vectors normalized or unnormalized are lower case bold letters.

The inputs to the optimization problem are the probability distribution functions f t and a family signature s that collectively represents the activities of a household. The outputs are n the number of members in the household where 1 n the age and gender of each family member i where 1 i n and a set of signatures s s . . . s where signature scorresponds to family member i. Further let N the cardinality of the Genre set set of all nonnegative basis matrices B for the vector space R i.e. B b b . . . b where bis a nonnegative N vector and b1 i N are linearly independent and for any vector s R 

The decision variables are as follows basis matrix B variables x x . . . x which represent the ages of family members with signatures corresponding to the basis vectors in B and variables y y . . . y which represent the gender of the corresponding family members.

For the purpose of optimization it is necessary to define an objective function to maximize. Towards this end the system uses an intermediate function as follows 

Function h v x y evaluates the likelihood probability of a person with age x and gender y having a signature v. Note that the system is taking the product of all the components of vector v. Thus the maximum likelihood estimation becomes

This optimization problem can be shown to be NP Hard see M. R. Garey and D. S. Johnson W. H. Freeman and Company New York 1979 herein incorporated by reference since any technique needs to search over the space of all bases in Rand the fact that the y variables are integer variable. This problem has some similarities to another non standard class of optimization problems known in the literature as semi definite programs. An approximate solution to this problem can be achieved using an illustrative technique described below.

The estimation technique uses a first approximation by converting these discrete variables to continuous variables with bounds. This makes the transformed problem amenable to differentiable optimization. The technique also uses a second approximation by identifying a subset of the set of all bases as the set of bases in Rthat are permutations of the coordinate basis matrix and restricts the search to this set. Given any basis from this set the inner iteration involves a steepest ascent technique in variables x and z to obtain a local maximum where zis a continuous approximation of y . The iterations are terminated when no improvement in the objective function occurs. After termination the gender variables that are fractional are rounded truncated using a rounding heuristic described below. Given a fixed basis matrix the transformed maximum likelihood estimation problem becomes a continuous maximum likelihood estimation problem and is given by the following equations 

An example of pseudo code for solving the above continuous maximum likelihood estimation problem is given below. The pseudo code consists of an outer iteration and inner iteration. In the outer iteration the code iterates through basis matrices. While in the inner iteration the code employs the steepest ascent optimization technique to obtain the optimal solution given a basis matrix.

The steepest ascent optimization technique has three steps. First the optimization technique obtains the gradient of the objective function at the current iteration. This is done in step . set forth below using difference approximations. The technique of using difference approximations as well as other numerical and matrix techniques can be found in D. G. Luenberger Addison Wesley publishing company Reading Mass. 1989 herein incorporated by reference. Second the optimization technique projects the gradient onto the null space of B to obtain the ascent direction d step . . Third the optimization technique obtains the optimal step length along d step . . In the field of optimization this is called a step length computation and involves a one dimensional optimization. The inner iterations proceed until no more improvement in the objective function is possible. After this the basis matrix is changed and the inner iterations are reinitiated. Finally rounding heuristics such as those in G. L. Nemhauser and L. A. Wolsey John Wiley sons New York 1988 herein incorporated by reference are employed to round off the fractional variables.

In the pseudo code set forth below I is an identity matrix of order N and Pis the ipermutation matrix in the sequence of permutations of the index set 1 2 3 . . . N.

The learning system also provides for remembering past behavior and integrating it into the current signature. The fundamental reason for remembering the past is to infer a recurring pattern in the user behavior and use the inference to aid in future navigation. Exponential smoothing is a way of gradually forgetting the distant past while giving more relevance to the immediate past. Thus activities done yesterday are given more relevance than activities done two days ago which in turn is given more importance than the activities done three days ago and so on see V. E. Benes Academic Press New York 1965 for additional information herein incorporated by reference . This technique has the added advantage of reducing the amount of computer memory consumed by the signature.

The learning system uses the concept of exponential smoothing in the context of learning the user s activities. For example a set of activities for today is captured in a signature s whereas all of the past activities are remembered in a signature s s remembers all of the past since the recurrence relation given below convolutes all of the past into a single signature . At the end of the day when the present becomes the past the system updates s by the recurrence relation 1 0 1 Equation 20 

In Equation 20 is called the smoothing parameter and it controls how much of the past the system remembers and how fast the past decays larger the faster the decay. Expanding the above recurrence relation into a recurrence equation illustrates the machinery of exponential smoothing. Where s denotes the past signature after n days and srepresents the activities done during the nday. Equation 20 expands into

Because is 1 Equation 21 clearly shows that less weight is given to the activities of that past. In some embodiments all signatures for each macro class channel genre microgenre are smoothed using the exponential smoothing technique. The determination of when to decay a particular signature is based on the dataspace of the signature and the nature of activities performed in the dataspace. For example in the television dataspace a decay period of one day is a suitable period because television shows typically reoccur on a daily basis. Whereas the decay period for the telephone dataspace would be longer so as to decay at a slower rate that the television dataspace. The decay parameter or smoothing parameter can be selected to control the degree of decay of the past user behavior.

The learning system also uses an adaptive decay technique to integrate the past signature information with the most recent signature information. This adaptive decay technique is based on a hybrid chronological activity based smoothing and provides improved results over strict chronology based aging when applied to signatures that take into account the user s geographic location. This technique enables the influence of past activities to decay over time while still preserving the past information during the user s absence from a particular geographic location for a stretch of time. In general the past signature will be decayed if 1 a new activity has occurred in the geographic location and 2 the elapsed time since the last signature decay event is greater than a threshold. In essence the system freezes the signatures when no activity is happening in a given location effectively stopping time for that location. When next an activity occurs in that location the system smoothes the signatures based on elapsed time.

If a traditional smoothing technique were employed to decay the memory of the past once per day for example the signature values may decay to zero if the user were absent from the geographic location for an extended period. Thus upon returning to that particular location the user would effectively have to retrain the system by rebuilding the signatures corresponding to that location. The adaptive decay technique avoids this problem.

An illustration of an implementation of the adaptive decay technique follows. As mentioned above signature decay occurs for all signatures in coordinates t g s i.e. time t geographic location g and dataspace s only when there is a new activity in t g s . In addition a minimum time must elapse before decaying takes place. To account for long elapsed times the system uses the concept of epoch time. Epoch time is the absolute local time since a certain distant past. The concept of epoch time can be found in current day operating systems e.g. Linux and WinCE that fix a reference point in the distant past and return the elapsed time since that reference point. For the example below T is the epoch time when some activity x happens in t g s . Note that the coordinate t is an integer denoting the discretized time denoting the time of day or time slot whereas T is an epoch time. For use in the Equation 22 below t g s is the decay threshold for signatures r t g s is the last time in epoch units that signatures in t g s were decayed and e t g s is a vector capturing a newly performed user action i.e. current signature with a duration count metric explained above in position x and zeros in all other positions. This technique also uses the smoothing parameter a as described above. Equation 22 shown below is one implementations the adaptive decay technique.

Under this implementation the system decays the signature if the time interval since the last decay is greater than the decay interval in this case the system performs a convex combination of the past activity and present activity. If the last decay has occurred more recently than the decay interval then the historic signature is combined with the current signature with a multiplier 1 applied to the current signature. The technique of using this multiplier optimizes storage. Typically when performing an exponential smoothing operation the past is the period of time up to time r t g s and the present is the period of time from time r t g s to time T. Under a typical application the new activity x would be stored in a temporary storage ts t g s along with all additional subsequent activities until the time r t g s t g s . At that time the smoothing formula would combine the past with the new activities according to Equation 23. 1 Equation 23 

The system avoids the need for temporary storage by combining each new activity with the past signature as each new activity occurs using the multiplier described above to offset what would otherwise be a premature composition. This ensures true exponential smoothing. Although the above discussion involved only the keyword signatures ks the same principles and techniques apply to all other signatures described herein.

As mentioned above one illustrative use of the learning system is to enhance the user experience during a search procedure. In one illustrative implementation the various individual aggregate and program signatures reside on a server system that contains a set of content items e.g. television programs television channels movies etc. . The server system uses the signatures to personalize search results provided to users of the system. In particular the results obtained through a query are identified and reordered by promoting relevance values of individual search results based on the set of signatures. For example in a system employing an incremental search method as described in the above incorporated U.S. Patent Applications the system begins searching for content item results as the user enters letters of a text query. The system identifies content items as candidates for presentation based on comparing the letters of the text query with descriptive terms associated with the content items. Each of these content items is associated with a base relevance value that measures the popularity of the item in the overall population. The system uses these base relevance values to rank which content items are likely sought by the user. Higher base relevance values indicate a higher overall popularity thus these items are assumed to be of more interest to the user than items with lower base relevance values.

However as explained in greater detail below the system modifies the base relevance values based on the set of user signatures. Thus if the set of signatures indicates given the particular time and day of the search that it is likely the user is searching for a program with the genre of news the system will promote the relevance values of programs with a genre of news that match the user s query text. Likewise the system can use the channel and microgenre data associated with the content items in conjunction with the channel and microgenre signatures to promote the base relevance values. The final relevance weights of each item determine if the item is included in the result set and help determine its position in a list of results. Many different promotion techniques can be implemented one example is the ruthless promotion technique described below.

The ruthless promotion technique ensures that any particular search result item that has a nonzero probability in a user signature will have its relevance value boosted such that it will be higher than any other search result items having a zero probability value in the same user signature. For use in Equation 24 below K is the number of search results retrieved with relevance numbers r r . . . r and M is the maximum value any relevance can have based on the general popularity of the search result. Typically search engines assign a relevance number to query results based on ranks with some maximum bound. These ranks can be a measure of the popularity or relevance of the items based on popular opinion. Search results are displayed in the shelf space sorted in descending order of relevance based on these ranks Herein the phrase shelf space refers to the portion of a display screen of a device that displays the search results in response to a user query. This portion can be organized as a column of text boxes in some implementations. The values p p . . . pare the channel signature probabilities 0 p 1 assigned by the learning system typically most of the pwill be 0 . The superscripts on the probabilities refer to type of signature e.g. channel genre or microgenre. The ruthless promotion technique computes new relevance numbers tilde over r tilde over r . . . tilde over r as

The search items are then reordered using the new relevance numbers. For example a user had watched the channels CARTOON NETWORK and COMEDY CHANNEL in the past with the signature probabilities 0.7 and 0.3 respectively. The generic relevance numbers for channels based on popular opinion are 500 300 100 and 70 for CBS CNBC COMEDY CHANNEL and CARTOON NETWORK respectively with a maximum bound of 1000. Table 1 and Table 2 show the displayed results and their corresponding relevance values when a query character C is typed. Table 1 shows the order of the query results without the benefit of the learning system and Table 2 shows the order of the results using the ruthless promotion technique. As can be seen the user convenience is enhanced because fewer scrolls are required to access the most likely watched channels.

Other promotion techniques are within the scope of the invention including for example techniques that do not necessarily ensure that a search result item that has a nonzero probability in a user signature will have its relevance value boosted such that it will be higher than any other search result items having a zero probability value in the same user signature. In particular because there are six signatures capturing the user activity at any time of day channel genre and microgenre for given time slot and their corresponding composite signatures these signatures are combined to compute new relevance weights. Equation 24 above shows the use of channel signature for promotion. In the example below there is an inherent importance in these signatures from more refined to more coarse. This variant of the ruthless promotion technique considers an aggregated promotion formula as follows 

In Equation 25 the superscript on the probabilities Prefers to time slot channel microgenre genre followed by composite channel microgenre and genre signatures with increasing values of k respectively. Since they are being multiplied by powers of M 1 a natural relevance importance is implied.

Signatures corresponding to overlapping periodicities are also combined to provide an aggregate signature for a particular time slot. The probabilities in the aggregate signature can be used with the promotion techniques above to identify and rank the results of search. In order to form an aggregate signature the vectors from the overlapping signatures are added together and renormalized. For example for a particular time slot a user has a first signature with a periodicity of every Monday and a second signature with a periodicity of every weekday. The first signature is the genre vector 0.2 news 0.8 sports the second signature is the genre vector 0.1 comedy 0.4 news 0.5 sports . To form an aggregate signature the system first arithmetically combines the two vectors to produce the new vector 0.1 comedy 0.6 news 1.3 sports and the system then normalizes the new vector by dividing each numerical element by the sum of the numerical elements of the vector i.e. 2.0. Thus the aggregate normalized genre probability vector of the two overlapping signatures is 0.05 comedy 0.3 news 0.65 sports .

In one implementation the learning system uses integer arithmetic for relevance promotion computations. In particular all probabilities are represented as integers appropriately scaled. One compelling motivation for using integer arithmetic is to make the learning system portable to disparate hardware and operating systems some of which may lack floating arithmetic.

The learning system uses a seminormalization approach to weight more recent activities more heavily in the signatures while deemphasizing but still retaining the information from more distant activities in the signature. Thus when personalizing services or content provided to the user the system is more heavily influenced by more recent activities. The basic idea of this seminormalization approach is to make the long term memory coarse grained by bucketing small probabilities that result from less common user preferences and or preferences captured in the more distance past while still bounding the range of values by using a small relevance scale factor. This approach allows the system to capture both small and large probabilities without requiring a large dynamic range to define the probability bounds. Thus a small scaling factor is used to distinguish between the relatively more probable activities in the captured in the signatures while the relatively less probable activities are not lost due to truncation errors.

An illustrative technique for converting an unnormalized signature x into a seminormalized signature is provided below. In signature x all elements xare nonnegative integers representing the activity intensity. Signature x is an N dimensional vector and x has at least one positive element. The value d is the infinity norm of x and

In order to seminormalize the signature x the system uses a fine grain memory threshold of probabilities K represented in log scale i.e. K is a positive integer denoting a probability threshold 10. All probabilities 10will be scaled in fine grain and all probabilities between 0 and 10will be scaled in coarse grain with bucketing. The system also uses a positive integer S as the seminormalization range represented in log scale. After seminormalization a probability value of 1 is scaled to 10. The largest value in the seminormalized vector would be 10. Although not required S can be equal to K. For use the in equations below let t 10 1 K 2 and u 10. Finally y is the seminormalized vector corresponding to p. Thus y f p K S where f is the function implementing the seminormalization algorithm. The function f is not an invertible function.

The first 2 parts of Equation 26 define the coarse grain bucketing and the last part of the equation defines the fine grain scaling. shows a pictorial representation of Equation 26. The X axis is shown in log scale. In S K and there are K buckets of width 0.1. The buckets start with the bucket having a left boundary 10and ending with the bucket with the right boundary 10. There is a special underflow bucket for any probability 

An example of this approach as applied to an electronic phonebook application on a mobile phone is provided below. In this example each outgoing call is counted and stored in a raw signature. The system scales the call counts by a large number so that truncation errors in the smoothing and aging process due to integer arithmetic are reduced. illustrates a raw phonebook signature with 6 entries. The row names in signature indicate the person called and the values are the scaled frequency after aging and smoothing. Thus the value 1 represents the long term memory of a phone call made to John perhaps many years ago and not repeated again. Similarly the entry corresponding to Jane has a signature value of 5. This value can be interpreted two ways 1 Jane was called as long ago as John but with a frequency five times greater than John or 2 Jane was called more recently with the same frequency as John. The larger values represent short term memories of calls made in the recent past. The normalized probabilities of these events are shown in a probability vector .

It is clear the dynamic range of probability vector is quite large. Using the techniques described above with K S 4 the system generated a seminormalized vector . The system has collapsed the memory of John and Jane into the underflow bucket thus making them indistinguishable. Some differentiation has been made for Debbie and Naren although these entries also represent long term memories and therefore the exact difference in frequency or recency of calls is not retained. However the system captures the precise relative values of Simon and Marty. The values in the seminormalized vector are completely bounded and suitable for stable relevance promotion.

The learning system is also useful for detecting sudden bursts of activity i.e. spike detection at a particular time and day for a particular search item e.g. a certain television channel. The system can use these spikes of activity to temporarily boost the base relevance values of particular items that have sudden popularity. Typically spikes happen when an emergency or crisis has happened in the recent past. For example if a particular news channel is presenting a late breaking news story that is attracting a high number of viewers the system will recognize the sudden popularity of the news program and boost its base relevance in recognition of the fact that other users of the system may also be interested in the news story.

In general when the collective activity level associated with a particular content item is above a certain threshold attributable to statistical variations then the activity level is considered a spike. The learning system analyzes the current and past activity levels by collectively examining all of the signatures of the user population. If each user is considered an independent random variable whose probability of watching a program is encoded in a stochastic signature then the collection of all these independent random variables provides a measure of the overall popularity of the content item. Thus the system employs these signatures to derive a joint probability distribution of the number of users watching a given program at a given time. Thus a new type of signature herein a program signature r is defined in Equation 27. Probability that a program is being watched by users at time 0 Equation 27 

An example of a technique for obtaining the program signature is provided below. In general when the activity level associated with a particular content item exceeds a certain inherent randomness value predicted by the program signature the system identifies such activity as a spike.

The system creates a set of program signatures each of which is a statistical convolution of all individual signatures in the population that have watched the particular program. By convolving the individual signatures the system creates an aggregate mean and standard deviation of the activity level associated with the given program. Thus a program signature captures the fraction of all of the current users interacting with the system that are currently watching the given program. Because the number of users interacting with the system changes over time the fraction of users watching a particular program changes over time as well. The system captures this information by creating program signatures for the various time slots.

These signatures estimate the mean and higher moments of the probability distribution of the number of people accessing this program in terms of fractional probabilities. The aggregate signature and related statistical measures define the normal level of activity for the particular search item. Thus by continually monitoring the current level of activity for the particular search item at a given time the system can detect if the current activity is above or below the normal level. If the activity exceeds a certain threshold the system adjusts the reordering technique to temporarily boost the relevance of the particular search item to recognize that the item may be of particular interest.

An example of creating an aggregate signature is provided below. For the sake of simplicity the example is restricted to one day one time slot one content item i and a single category of signature e.g. channel genre or microgenre . This technique for finding the aggregate signature is applied to all time periods all days all search items and all signatures. In the following example N is the number of users using the system qis the normalized signature value of user j for item i i.e. the fraction of time user j watched program i where 1 j N is the index set 1 2 . . . N is the set of subsets of of size m where 0 m N and X is a random variable denoting the number of users currently watching program i.

The unnormalized probability that there are m users watching program i herein r is determined by Equation 28.

The probability density function of X f m the mean of X and the standard deviation of X are now given by the following equations 

The system monitors the number of users watching program i. Chebychev s inequality dictates that with 96 confidence the random variable X cannot be above 5 due to inherent randomness. Thus whenever the number of users watching program i goes beyond 5 the system identifies this as a spike of activity. The system can temporarily boost the base relevance of program i in queries for which program i is a candidate in recognition of the fact that the user may be interested in the same program. The relevance can be boosted by a predetermined amount or it may be boosted by an amount that is proportional to the increase in viewing of the program. In addition the system can use a variety of multiples of not only 5 to determine when a spike of activity is occurring.

The system can also infer the overall relevance of particular search items using the aggregate signatures. As described above the system computes the mean of the statistical convolution of N signatures N being the number of system users. Using this mean value the system generically reorders the search results even in the absence of a signature for a particular user. Thus the user benefits from the systems knowledge of the popular option of various search items and these popular opinions are used to identify and order search results for presentation to the user. For example if the aggregate signature has a large mean for the television program The Apprentice then any user who does not have a personal signature will have this item in the top shelf on an appropriate query the query for instance can be trump which is a microgenre of the program The Apprentice .

The learning system also allows accessing rare search items using preprocessing. In some implementations described above the search engines work by first gathering significant amounts of results matching the query and filtering out low relevance results before applying a promotion technique. This technique has several advantages including increasing the speed of the system and reduces network bandwidth required. However a specific user may be interested in an item having low overall popularity that is filtered out of the results before applying a promotion technique. In the absence of a signature this rare item may never me presented in the search results this rare item is sometimes referred to as the long tail in the probability distribution sense .

In order to capture the rare item in the ordered search results some implementations of the system compute the relevance before filtering using the promotion techniques described above or other promotion techniques. Thus the rare item is ranked highly for the particular user allowing him or her to access the item with ease. Here signatures enable fine grain customization and increase user satisfaction.

An inherent feature of the stochastic signature mechanism is the probabilistic nature of the signature entries i.e. the signature entries are all normalized probabilities. This enables the system to export the signatures to other potentially unrelated systems with ease. For example over some period of time the television system interface described above learns that in general a given user prefers the Spirituality genre 50 of the time Sports genre 40 of the time and the Seinfeld show 10 of the time. In response the system creates a set of signatures for the user that captures these preferences. The user can elect to share this signature information with other systems.

Therefore when the user registers with a website that sells books the user can elect to share his signature information with this website. Because the signature information is stored in terms of normalized probabilities the signature can be easily imported into the website that is configured to utilize such probability information. In addition the website need not have an identical set of genres as that of the television system in order to use the signature information. For example the website may not have Seinfeld defined as a genre or category of books. In this case the website can simply renormalize the signature by removing the irrelevant entries i.e. Seinfeld and determining new normalized probabilities for the remaining genres. Thus the new normalized probabilities for the user would be 56 for Spirituality and 44 for Sports. Sharing signatures in this way obviates the need for relearning in the new system. Also different subsets of signatures can be shared for different systems.

As explained above the learning system captures the user s preferences across multiple dataspaces. In addition portions of the learning system can be incorporated into various user client devices thereby enabling the system to capture the user s preferences across multiple devices. For example the system can track the user s actions performed on a mobile telephone a television system a handheld computer device and or a personal computer. This enables the system to provide personalized services to the user across the multiple dataspaces and multiple devices. Thus user preferences expressed on one device can be used to personalize the user interactions on a different device.

Likewise the learning system can provide the learned user preferences captured in the various signatures to third party service providers. The information provided to third party service providers allows the service providers to personalize the services for the user outside of the learning system. In such an implementation the learning system determines what preference information to provide to the service providers based on the nature of the services provided. The learning system can provide this information on a per transaction basis or the system can periodically synchronize a set of signatures stored by the third party service provider. Furthermore the user can configure the learning system so as to control which third party service receives user preference information.

By providing a centralized system that learns and stores the user s preferences the learning system enables the user to avoid creating disconnected pockets of personalization associated with only one particular dataspace or device. Therefore a user may immediately leverage the preference information contained in the user s signatures when interacting with a new service rather than having to wait for the new service to learn the user preferences. Thus the learning system can provide personalization information to the third party service provider to improve the user s experience with the service.

This comprehensive personalization across diverse user activities and devices is especially helpful to the user when the user interacts with the same service provider using different interface devices. Not only does the learning system capture the user s preferences from these diverse interactions but the system also stores the details of the user s transaction for later retrieval by the user. For example a user can book a flight through a travel website using a personal computer. The learning system captures the detailed information associated with transaction e.g. the date of travel the time of the flight and the departure and destination city. At a later time the user wishes to modify the travel reservations and elects to do so using a mobile telephone. Because the system monitors the user s interactions with various service providers the system recognizes that the user has placed a telephone call to the travel service. In response the learning system automatically presents the user s upcoming travel itineraries on the user s mobile telephone or sends the information to the travel service s customer service agent with the user s consent.

In the alternative if the user is presented with an automated voice response system the learning system can send the relevant itineraries to the travel service e.g. via an SMS message dispatched to the telephone number called or DTMF tones at the beginning of the telephone call which would provide the travel service with a background context of the telephone call to improve the automated voice response system s response to the user voice commands. The power of a comprehensive personalization across diverse user activities and devices becomes very evident in voice based navigation applications. Comprehensive personalization can provide the necessary context that can vastly improve ambiguities in user input that plague these types of systems today.

Service provider can also serve as the source of information and relevance updates for user device . A network functions as the distribution framework and can be a combination of wired and wireless connections. The navigation devices can have a wide range of interface capabilities and include such devices as a personal or laptop computer a hand held device e.g. phone PDA or a music video playback device with limited display size and an overloaded or small QWERTY keypad and a television remote control system wherein the remote control has an overloaded or small QWERTY keypad. The navigation devices provide user activity data to the learning system via personal preference information service to create the various signatures. As mentioned above in alternate embodiments the user device can create the various signatures and the signatures can be kept on the device. This enables the device to locally filter and order content items received from service provider and or content items that reside on the device itself.

As described above the learning system captures the user s preferences from the user s interactions with various dataspaces. illustrates the local tracking and strengthening of the personal preference signatures based on user activity and the content on a mobile device. For example user interaction with a telephone book media applications email calendar and web browser are tracked as well as when and where the interaction takes place. In addition to the user s interaction with these applications the content that is coupled with these applications such as call logs A music files A email data calendar appointments A and browser cookies A are also tracked to capture the user s preferences. Aggregated actions and various signatures are captured by the learning system as described above.

The aggregated data and signatures are used by a wide variety of services ranging from a local data prefetching service in order to improve search performance to a commercial third party service provider in order target the user for a specific product offering. The sets of signatures generated by the learning system form an onion like layered structure the inner layers are specific and capture the exact details of the user s actions while the outer layers characterize the user s general preferences. For example the inner layers capture 1 the time and the location where the user performed an action 2 the nature of the action e.g. tuning to a channel or the purchase of a book DVD or airline ticket and 3 the details of the action e.g. the channel and or program the user tuned to the title of book the user ordered or the departure and destination airports of an airline ticket purchase . This layered structure coincides with the various signatures created by the learning system. The inner layers correspond to the microgenre and keyword signatures while the outer layers correspond to the genre signatures.

The service provider requesting the user s signature information can designate the degree of specificity of user preferences desired. For example a video content search engine wishing to use the user s signatures to order the results of a query may request specific information on which channels or program the user watched. A bookstore on the other hand may request broad user preferences of book tastes. The personal signature information sent in the later case would not be the individual instances of purchased books but rather the broad user preferences at a genre level.

In addition to the substance of the request the communication from user device to service provider contains information that describes the context of the request as explained below. Service provider communicates the substance of the request and the additional context information to personal preference service step . The context information includes the identifier of the user device currently being employed the location of the user device if available the time of the request and general description of the action the user is performing e.g. the fact the user is currently using a telephone versus playing media . The additional context information enables personal preference service to provide context sensitive personal preference information to service provider . Descriptive tags are assigned to the various actions the user can perform using the system. The system associates these descriptive tags with the signatures that are generated by the corresponding actions. In this way personal preference service sends relevant preference information based on the tags sent by user device to service provider step .

The relevant personal preference information is used by the service provider to send a targeted response to the user device step . Additionally service provider sends feedback to personal preference service about the targeted response that was sent step . This feedback is used by personal preference service to adjust the personal actions signature of the user.

By disaggregating personal preferences through a standalone entity i.e. personal preference service multiple service providers that provide different services can all benefit from the aggregated personal preference accrued across different service providers different user actions and different user devices. The end user gains immensely due to the key benefit of having targeted responses to many different types of requests. For example a user who purchases books from Amazon.com gets the benefit of a targeted response when he goes to the Barnes Nobles site using the techniques described above.

As described above personal preference service can also be a centralized aggregator of user actions across different devices. Thus user actions performed on different devices e.g. a mobile computing device a home television with set top box and a personal computer could all be aggregated to provide user preferences for identifying and ordering search results. For example a user could initiate a remote recording for a favorite program using a mobile device where the discovery of the desired program can be made easy by leveraging the user s viewing behavior on a television system. Thus the available episodes of Seinfeld could be automatically displayed in the mobile device for example based on the fact that the user has viewed Seinfeld many times in the past on the television system.

In another implementation of the learning system a user device can serve as the personal preference provider in a peer to peer fashion for other user devices. For example in a home entertainment network with more than one DVR Digital Video Recorder one DVR can serve as the personal preference provider for another DVR resident in the same home. When the user performs a search for content on a particular DVR the other DVR in the home provides a personalized preference service to enable the user to find the desired content more quickly by leveraging the prior user viewing habits across the different DVRs.

In addition a particular user can elect to share his or her signatures with another user. This can be accomplished in a peer to peer fashion as described above. In this case the preferences learned for one user are used to personalize content results for another user. For example the system will generate a set of signatures for a first user while that user selected various content from a book dataspace. These signatures encode the book reading preferences of the first user. A second user has a similar interest to the first user and the second user wishes to select books related to similar topics as the first user. In this case the first user can share his signature with the second user. The system then uses the first user s signatures to personalize the content results for the second user. In this way the system enables the second user to benefit from the learned preferences of the first user without the second user having to train the system.

Using the techniques described above a user for example can go to any travel site and the site without knowing the user and without requiring him to create an account or log in can still offer the user personalized services based on the history of prior travel actions the user took on other platforms or web sites. Additionally for services where comprehensive personalization is not in place these services can leverage the personal preference service discussed above.

Because the learning system and personal preference service operate across multiple dataspaces and multiple user devices the user device configuration can vary greatly. illustrates possible user device configurations for use with the learning system and the context sensitive personal preference service. In one configuration a user device can have multiple output capabilities for example a display and or a voice output . In addition user device can have a processor volatile memory a text input interface and or voice input . Furthermore user device can have remote connectivity to a server through a network and can have persistent storage .

In another user device configuration user device may not have local persistent storage . In such a scenario user device would have remote connectivity to submit the user s request to a server and retrieve responses from the server. In yet another configuration of user device the device may not have remote connectivity . In such case the learning system personalization database and signatures are locally resident on local persistent storage . Persistent storage can be a removable storage element such as SD SmartMedia or a CompactFlash card. In a configuration of user device with remote connectivity and persistent storage user device can use remote connectivity for a personalization data update or for the case where the personalization database is distributed between local persistent storage and a server.

It will be appreciated that the scope of the present invention is not limited to the above described embodiments but rather is defined by the appended claims and these claims will encompass modifications of and improvements to what has been described. For example embodiments have been described in terms of a television content system. However embodiments of the invention can be implemented on a mobile phone to assist the user in retrieving personal contact information for individuals.

