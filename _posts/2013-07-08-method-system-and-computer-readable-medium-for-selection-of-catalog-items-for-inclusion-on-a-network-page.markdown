---

title: Method, system, and computer readable medium for selection of catalog items for inclusion on a network page
abstract: Disclosed are various embodiments for selecting catalog items for display on a network page. The catalog items have corresponding catalog item identifiers and catalog item representations. In response to a network request, a response is received. The response includes catalog item object identifiers but excludes the corresponding catalog item object representations. At least one of the catalog item object representations is requested using the corresponding catalog object identifier. At least one of the catalog items is selected for inclusion on a network page. The selection is based on an attribute in the catalog item object representation. The network page is displayed to a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09443265&OS=09443265&RS=09443265
owner: Amazon Technologies, Inc.
number: 09443265
owner_city: Seattle
owner_country: US
publication_date: 20130708
---
This application claims the benefit of and is a continuation of U.S. patent application Ser. No. 13 076 482 entitled METHOD SYSTEM AND COMPUTER READABLE MEDIUM FOR SELECTION OF CATALOG ITEMS FOR INCLUSION ON A NETWORK PAGE filed Mar. 31 2011 which is hereby incorporated by reference herein in its entirety.

Online shoppers interact with product search engines to find products of interest and obtain information about those products. The product search engine returns summary information for products that most closely match a user s search query. The user then selects a link associated with one of the search results to get more information about a product. Some electronic commerce sites also include a product catalog or taxonomy. In addition to using the product search engine a user can navigate through this hierarchical catalog to obtain information about products.

The various embodiments described herein relate to selecting catalog items for display on a network page. The selection is performed by code executing in conjunction with a browser executing on a client device rather than being performed by a server. A user interacts with a browser to request a network page such as a catalog item detail page. A network page server responds to the request by providing information about a set of catalog items matching the request. In the case of a network detail page the catalog items include the requested item as well as related items.

The response to the network page request provided by the network page server includes a set of object identifiers corresponding to catalog items. However the response does not include the corresponding object representations. Item selection code executing in conjunction with the browser requests at least one of the catalog item object representations which tend to have a much larger data size than the identifiers. The item selection code chooses at least one of the catalog items for inclusion on the network page based on an attribute or combination of attributes in the catalog item object representation. The attributes used by the item selection code may be those which indicate that purchase of that catalog item would result in an error. The network page is rendered for display to a user. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes one or more computing devices in data communication with one or more client devices by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing device may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. A plurality of computing devices together may comprise for example a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience the computing device is referred to herein in the singular. Even though the computing device is referred to in the singular it is understood that a plurality of computing devices may be employed in various arrangements.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing device for example include a network page server and an item similarity engine . In some embodiments the computing device also includes a search engine and a behavior tracking engine . The components executed on the computing device may also include other applications services processes systems engines or functionality not discussed in detail herein. These components may communicate with each other using various mechanisms including but not limited to any type of middleware framework. Examples of such frameworks include remote procedure calls simple object access protocol SOAP representational state transfer REST Windows Communication Foundation and other frameworks. Though shown as logically separate components the functionality of these components can be combined and or distributed in various ways as can be appreciated.

The data stored in the data store includes data accessed by the network page server and the item similarity engine for example user behavior data network page data a catalog of items and potentially other data. As used herein the term item may refer to a product good service software download multimedia download social networking profile or other item that may be offered for sale purchase rental lease download and or any other form of consumption as may be appreciated. Item data such as titles descriptions keywords metadata weights customer reviews multimedia etc. are stored by the catalog as attributes packaged in a data structure referred to herein as a catalog item object representation . A catalog item object identifier references a catalog item object representation but does not include the object representation .

In some embodiments the items in the catalog are products offered for sale and in such embodiments the computing device may also include an electronic commerce application which is executed in order to facilitate the online viewing and or purchase of the products from an electronic commerce operator. The electronic commerce application may also perform various backend functions associated with the online presence of a merchant in order to facilitate the online purchase of items as should be appreciated. In embodiments which include the electronic commerce application the catalog of items comprises a product catalog of items offered for sale so that data associated with an item comprises product data.

The network page server is executed to fetch network pages in response to requests from a client device . In some embodiments the network page server is a web server which is executed to fetch web pages. The network page server may comprise a commercially available hypertext transfer protocol HTTP server such as for example Apache HTTP Server Apache Tomcat Microsoft Internet Information Services IIS and other servers.

The network pages fetched by the network page server include various items from the catalog and may be dynamically generated or may be static. To this end the network page server uses network page data which may include any type of data related to the generation of network pages. Such data may include for example templates executable code interpreted code hypertext markup language HTML extensible markup language XML images video text graphics and any other type of data that may be used in network pages. The network page server may be further configured to generate based on stored client code in the data store client side item selection code for inclusion within a specific network page and transmission to a client device . As will be further explained below the client side item selection code is executed to offload to the client device selection of catalog items for inclusion on a network page based on criteria such as item availability. The client side item selection code and the stored client code may include for example JavaScript dynamic HTML DHTML Ajax and any other type of code that may be executed in a client device from within a network page. The client side item selection code and the stored client code may also include code that facilitates asynchronous exchange of data with the network page server the search engine or other applications using Ajax simple object access protocol SOAP remote procedure call RPC and or other technologies.

The behavior tracking engine is executed to track user interaction with these network pages thus building a history of catalog items which a particular user has viewed selected for purchase and or purchased. The data derived by the behavior tracking engine from this user interaction is stored as user behavior data . The user behavior data may also include data gathered from user interaction with a shopping cart when purchasing items and item recommendation data relating to recommendations that are generated based on user behavior as well as any other data which is derived from tracking user interaction with the network pages generated by the network page server .

The item similarity engine is executed to return one or more items that are similar to an input item. The item similarity engine uses the user behavior data to determine similarity. For example item B may be deemed to be similar to item A under the following conditions users who buy item A also buy item B users who view item A also view item B users who view item A also buy item B. Similarity may also be determined based at least in part on relationships between items in the catalog such as whether items are members of a set or collection e.g. a series of books or videos or whether one item is marked as a variation of another item e.g. a media title on DVD and the same title on Blu Ray .

The search engine if present is executed to find items in the catalog using a search query. To provide content in response to user queries content associated with item s retrieved by a query may be retrieved from the catalog and included in a network page that is provided to a client device .

Having discussed the computing device the client device will now be considered. The client device is representative of a plurality of client devices that may be coupled to the network . The client device may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer a personal digital assistant a cellular telephone a set top box a music player a video player a media player a web pad a tablet computer system a game console an electronic book reader or other devices with like capability.

The client device may be configured to execute various applications such as a browser and other applications. The client device may be configured to execute applications beyond the browser such as for example email applications instant message applications and or other applications. The client side item selection code may execute in conjunction with browser to process data on a network page provided by the network page server . As described in further detail below the client side item selection code operates to select catalog items for inclusion on a network page based on attributes in catalog item object representations that are requested from the network page server .

Next a general description of the operation of the various components of the networked environment is provided. To begin a user interacts with the browser executing on a client device . The user interaction results in the browser requesting a network page from the network page server . As one example when a user viewing a list of items selects a particular item the browser requests a item detail page from the network page server . As another example when a user selects a checkout link the browser requests a shopping cart page from the network page server . As yet another example when a user enters search terms into a search query form the browser requests a search results page from the network page server . As still another example when a user navigates within the catalog taxonomy the browser requests a category or subcategory page from the network page server .

In response to the page request from the browser the network page server returns a partially built network page along with client side item selection code . The client side item selection code executes in conjunction with the browser to complete the partially built network page provided by the network page server . The network page references multiple items by including catalog item object identifiers but does not include catalog item object representations .

The catalog item object representations are obtained in a separate request by the client side item selection code sending one or more of the object identifiers to the network page server with a request for the corresponding catalog item object representation . For example a search results page contains object identifiers for items which match the search terms provided by the user and a subcategory page contains object identifiers for items in the requested subcategory. As another example an item detail page includes the object identifier for the requested item and also object identifiers for items which are related in some way to the requested item such as those belonging to the same category or subcategory or exhibiting similar viewing and or purchasing behavior.

Having obtained the catalog item object representation the client side item selection code continues building the network page by selecting one or more items for inclusion and or exclusion on the page based at least in part on various item attributes within the object representation . In some embodiments the attributes used to select items are configurable by a merchant. In some embodiments the client side item selection code includes items except those items which result in an error if purchased for example items that are not in stock items that are available only for in store rather than online purchase or other items. In some embodiments the client side item selection code includes items except those items which are a variation of another item on the page which are part of a collection having another item on the page or are a duplicate of another item on the page. The client side item selection code continues processing catalog item object representations until at least the visible portion of the network page is filled. In this manner the user experience is enhanced because the user viewing the network page is presented only with catalog items that can be purchased without error.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the client side item selection code executed in a browser according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the client side item selection code as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the client device according to one or more embodiments.

Beginning at box the browser executing on the client device sends a network page request to a network page server . At box the browser receives a response to the network page request. The response includes multiple catalog item object identifiers but does not include catalog item object representations . Next at box the client side item selection code included within the received network page browser sends to the network page server a request for catalog item object representations . The client side item selection code may obtain representations for specific catalog items by including corresponding object identifiers in the request.

At box the client side item selection code examines one or more attributes in the obtained catalog item object representations . The client side item selection code uses these attributes to determine which catalog items can be purchased without error. In one embodiment items purchasable without error include items with an attribute indicating in stock but exclude items with an attribute indicating in store purchase only. Such attributes may be encoded in various ways as can be appreciated. For example an out of stock attribute may be used instead of an in stock attribute or an online purchase attribute may be used rather than an in store purchase attribute. As described above a purchase error can also include an item that is a duplicate of another item on the page an item that is part of a collection and an item that is a variation of another item on the page.

Next at box the client side item selection code adds to the network page one of more of those items which can be purchased without error. At box the client side item selection code determines whether the visible portion of the network page has been filled with items. If the page is not yet filled the process moves to box where additional catalog item object representations are obtained from the network page server . When it is determined at box that at least the visible portion of the page is filled with items code for the network page e.g. HTML JavaScript etc. is generated at box . In some embodiments the code is generated by the client side item selection code . In other embodiments the client side item selection code provides the network page server with a list of the items selected for inclusion on the page and the network page server generates the code and sends it back to the browser . At box the browser renders the generated network page for display in the client device and the process of is complete.

Moving on to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the network page server the item similarity engine the search engine the electronic commerce application and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

Turning now to shown is a schematic block diagram of the client device according to an embodiment of the present disclosure. The client device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the client device may comprise for example at least one client computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the browser the client side item selection code and potentially other applications. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memories and are executable by the processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java Javascript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memories and are executable by the processors . In this respect the term executable means a program file that is in a form that can ultimately be run by the processors . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memories and run by the processors source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memories and executed by the processors or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memories to be executed by the processors etc. An executable program may be stored in any portion or component of the memories including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memories are defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memories may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processors may represent multiple processors and the memories may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processors and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processors may be of electrical or of some other available construction.

Although the network page server the item similarity engine the search engine the electronic commerce application and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowchart of shows the functionality and operation of an implementation of portions of the client side item selection code and the browser . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as processors in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowchart of shows a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in flowchart of may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the network page server the item similarity engine the search engine the electronic commerce application the browser and client side item selection code that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example processors in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

