---

title: Collaboration using multiple editors or versions of a feature
abstract: A system is provided in which access to documents and collaboration across varied platforms and feature versions is supported. A conversion and merge services is described that enables a client device to display documents irrespective of the original file format and re-integrate into the original document the modifications of the displayed document. The displayed document (as a whole or in parts) can be imported and converted to the file format of the original document before the changes are compared and merged into the original document. A set of application programming interfaces are also provided that perform certain tasks, such as highlight, comment, or format.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09471556&OS=09471556&RS=09471556
owner: Microsoft Technology Licensing, LLC
number: 09471556
owner_city: Redmond
owner_country: US
publication_date: 20130130
---
Collaboration and file sharing is becoming easier as collaboration software improves. However not every device can support co authoring and collaboration. Some devices are not collaboration ready or require all systems accessing and modifying the digital content to be running a same program. The ability of a person to access share and co author digital content can depend in part on whether the person has the appropriate software program that recognizes the format of the digital content and a device that can execute the program so that the digital content can be viewed modified and have those modifications propagated and reflected as being part of the digital content when accessed by another person or the same person on another platform .

With the proliferation of devices using different platforms it can be a challenge to share access and edit content of one format with a device running a program capable of only accessing and displaying a different format or capable of only editing the content with an earlier version of a feature. In addition as new features are added to new versions of certain applications the new versions must support backwards compatibility and or have extensibility built in to support future versions.

Conversion and merge services are described that facilitate collaboration using multiple editors or versions of a feature.

According to an embodiment a document served to a client by a system performing conversion and merge services is a set of experiences and the content inside of it. The document can be stored as a master document in a first file format at a location retrievable by the system and when requested by the client the document can be converted to an appropriate file format and served to the client. The served document can also take into consideration the version of features supported at the client.

The served document can be displayed at a client device. The services extend the reach of a document to devices across varied platforms and create an experience for that document that is suitable for the client device. The document does not need to look exactly the same on each client. Instead the document can be customized for the user s experience and to suit the device. Once displayed at the client device a user can locally modify the document. The modifications can include modifications to the content as well as to data associated with the document. For example annotations comments text editing image editing and other modifications may be made. The user can then save the modifications back onto the server. The server can merge the modifications even where the document that the user modified is of a different file format or contains different versions of a feature.

According to one aspect a conversion service is provided that can transform a document of a first file format to a document of a second file format different than the first file format. According to another aspect a conversion service is provided that can transform content of a document from one version to another version. According to a further aspect the conversion services can provide additional accommodations based on client constraints and capabilities. According to yet another aspect a merge service is provided that merges modifications made to documents of disparate file formats or versions.

The conversion services enable the content of the document to be customized for each client on which the document is viewed and the merge services enable modifications to the document to be re integrated with a master document. The master document may be an aggregation of content and modifications made to the document. In some cases the master document can appear to be a highest fidelity document. Thus when modifications made from within a lower fidelity editor or modifications using an earlier version of a feature are re integrated into the master document the merge service can perform fidelity rehydration.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Content access services are disclosed that enable accessibility and collaboration over a variety of platforms. Through the content access services content can be provided to consumers without them having to be aware that the content may actually be of a different file format than generally useable or viewable via their device. According to certain embodiments consumers can be insulated from file format changes and in some cases from restrictions to viewing accessing and modifying content across platforms. The techniques interfaces and methods described herein can be used to facilitate the moving of a user experience from files and formats to a scenario driven experience.

Electronic documents are generally understood to be a digital equivalent to a paper document where document editors facilitate the creation annotation modification and recently sharing and collaboration of content.

The modifications can include modifications to the content as well as to data associated with the document. For example comments text editing image editing and other modifications may be made. Modifications to files can include actions that are additive subtractive actions that provide additional content rich content actions adding comments and actions modifying an image within an image editor.

Certain embodiments of the invention add a new feature to documents the document as a service where a document provides a set of experiences and the content inside of it. The set of experiences correspond to a set of services including content access services of conversion and merge services. The conversion services enable the content of the document to be customized for each client on which the document is viewed and the merge services enable modifications to the document to be re integrated with a master document. The master document may be an aggregation of content metadata and modifications made to the document including modifications to content and modifications to metadata . In some cases the master document can appear to be a highest fidelity document.

Thus when modifications made from within a lower fidelity editor or modifications using an earlier version of a feature are re integrated into the master document the service can perform fidelity rehydration.

Fidelity rehydration refers to the taking of content modified by an earlier version of a feature or a file format having editors with less functionality and returning the content to a full functionality latest feature version. As an example given two versions of a graph feature a first version having rich charts such as 3D charts and a second version that is only able to interpret the charts as static images after content is edited in an editor supporting the second version the static images can be rehydrated back to being 3D charts for viewing editing in an editor supporting the first version. The first version may be a future or later version of the feature and the second version may be a previous or earlier version of that feature. In other cases both versions may be released at a same time but with intentional differences in available functionality.

Although the master document is referred to as a document the master document can be stored in any format suitable for tracking content and newest editing features.

Through these services consumer devices can access and modify content across various platforms without adding complexity to a client side software or consumption device.

A file format for a document or other content and related information refers to the manner in which information related to the content of a file and in some cases associated information is encoded and stored on a computer readable medium. A file type may be used interchangeably with file format but generally refers to the taxonomy of file formats. For example a file type may be a document file type which includes file formats of hypertext markup language HTML ADOBE Portable Document Format PDF MICROSOFT WORD document DOC Office Open Extensible Markup Language OOXML format DOCX and the like. MICROSOFT WORD is a registered trademark of Microsoft Corp. ADOBE PDF is a registered trademark of Adobe Systems Inc.

As used herein consumption format refers to a file format supported by a particular device or software program e.g. a supported file format . In addition to being a supported file format the consumption format can include features related to file size functionality and the like that relate to how a device or program may be able to support varied user experiences.

Returning to the document as a service paradigm the content access services including conversion and merge services can be provided as part of a cloud service experience. In this manner content may be created in one format and then be accessible and editable across any platform in a manner that may provide a seamless experience to a consumer of the content.

Referring to the operating environment can include one or more cloud or web services. The content access services described herein may be cloud services or web services.

A cloud service generally refers to hosted services providing scalable processing and storage capabilities. Cloud computing may often include virtualized resources. The resources presented by cloud computing are in themselves provided as a service where cloud computing customers rent usage of resources from a third party provider that owns the physical infrastructure.

Web services can be provided and or hosted by a cloud service e.g. as part of a large scale distributed computing environment . A web service is a software system that supports interoperable machine to machine interaction over a network and enables software to connect to other software applications.

A web service provides a collection of technological standards and protocols. For example a web service provides functions that may be implemented by a software or hardware agent that sends and receives messages e.g. the computing platforms requesting and providing a particular service . Applications can access web services via ubiquitous web protocols and data formats such as hypertext transfer protocol HTTP XML JavaScript Object Notation JSON and SOAP originally an acronym for simple object access protocol .

Representational state transfer REST protocols are useful when accessing named resources and may be used in certain embodiments of the invention. In other embodiments of the invention SOAP may be utilized. In some cases a File Synchronization Service via SOAP over HTTP FSSHTTP from Microsoft Corp. may be used.

Content access services may be implemented using one or more physical and or virtual servers communicating over a network. The network can include but is not limited to a cellular network e.g. wireless phone a point to point dial up connection a satellite network the Internet a local area network LAN a wide area network WAN a WiFi network an ad hoc network or a combination thereof. Such networks are widely used to connect various types of network elements such as hubs bridges routers switches servers and gateways. The network may include one or more connected networks e.g. a multi network environment including public networks such as the Internet and or private networks such as a secure enterprise private network. Access to the network may be provided via one or more wired or wireless access networks as will be understood by those skilled in the art.

The content access services can include an import convert portion and a render convert portion . Documents from various sources can be imported to the content access services . The import convert portion can facilitate self publishing by reducing or removing constraints to getting content into the particular formats required by readers. For example self publishing to a bookstore or other repository or store may be accomplished without requiring the creator to work within a specified file format. By making it easier for creators to publish their work reader users can have access to more content.

A reader refers to a software application and or electronic device designed primarily for the purpose of reading electronic books ebooks and or other electronic content. Readers often include at least some basic editing capabilities such as annotating highlighting bookmarking and scribing.

Example software ebook readers or e readers include GOOGLE READER application from Google Inc. APPLE IBOOKS application from Apple Inc. ADOBE ACROBAT EBOOK READER application from Adobe Systems Inc. and MICROSOFT READER application from Microsoft Corp. Example hardware ebook readers or e readers include the AMAZON KINDLE brand e reader from Amazon.com Inc. and BARNES AND NOBLE NOOK brand e reader tablet available from Barnes Noble Inc. An ebook is a text and or image based publication in digital form that can be read on an ebook reader. There are a variety of ebook and other digital content formats used to create and publish content such as electronic publication ePub HTML PDF printer command language PCL and extensible markup language XML .

In some cases imported documents e.g. through import convert portion may be stored or appear to be stored by having an address or Uniform Resource Identifier stored as part of the cloud . The content access services may resolve to operations on storage or delegate certain operations to another service that may directly or indirectly access storage .

Document files can be exported from the content access services . Before being exported a document file such as one of the imported documents can be converted to various formats for consumption e.g. rendering for display interaction modification or additional actions including printing and further conversions by endpoints such as reader printer third party sites and secondary conversion services .

An endpoint refers to the means by which a consumer accesses a service the entry point for the interaction. According to various embodiments endpoint customization is provided that extends the reach and changes the way the content is consumed based on device.

A consumer device refers to a computing device that is used to consume i.e. use for viewing reading editing or annotating data or documents retrieved or purchased from a service or source. The consumer device may be a primarily single purpose computing device used for reading electronic books often referred as a reader or a multi purpose computing device on which reader or viewer software for reading electronic books or other electronic digital content may be provided.

A viewer refers to a software or hardware application that can display or appear to display a document or data in a format or file type associated with a particular program. A viewer for a particular file format is able to understand the particular file format and present a visualization of the file. Typically a viewer of a file format is assumed to be able to visually present the file format with high fidelity maintaining the original intent of the author. A reader is a type of viewer that includes functionality primarily associated with a reading experience such as providing animated page turns remembering a last reading position providing a dictionary to look up words and the like.

The services extend the reach of a document to devices across varied platforms and create an experience for that document that is suited for the client device. The document does not need to look exactly the same on each client. Instead the document can be customized for the user s experience and to suit the device.

As an example scenario a NOOK reader or a KINDLE reader user may use that device to browse for available content to read. The service can determine what device is being used and appropriately tailor the presentation of content. For example ePub2 or ePub3 format may be sent to a NOOK reader and AZW format may be sent to a KINDLE reader.

Once the customized file is sent to the device the file can be saved back to the server via services . For example specific actions modifications such as annotating or editing within the NOOK reader KINDLE reader or a tablet running an editor application can be taken with respect to the file served to the client and these modifications merged to a master document for the file.

In further embodiments by also knowing the user for example by receiving an identifier from the user such as when the user logs in to their account from a device the system e.g. through services can further enable a user to access their own files over a network on many devices without the user having to be concerned with the version or file format their device can handle. In addition to enabling a user to access their own files by knowing the user the system can customize a file to present specific content in a document related to a task associated with the user. For example where a user is tasked with reviewing a paragraph the paragraph may be provided to the identified user instead of all users that may have access to the document.

Endpoints may have two general categories of communication with the service . One is a two way rich experience and the other is a more limited experience. In both cases by using embodiments of the invention endpoints are not required to handle file format conversion be able to render all formats or include a layer for co authoring of content.

Endpoints of varied richness can be supported by various embodiments of the invention. As used herein richness refers to the spectrum of available experiences with an application and its ability to present a user with particular content and functionality. For example a richest consumption experience can be available through devices supporting full featured applications in which editing and manipulation of content is available e.g. endpoint editors . A more limited experience includes bite sized authoring tools e.g. limited endpoint editors in which some functionality for editing and manipulation of content is maintained. A difference between the more limited experience or light weight editing and a full featured editor or heavy editing is that light weight editing may only support annotations and commenting.

Readers e.g. consumer devices in which the content may be viewed can have a range of supported richness. All editor types as well as versions of a feature can be supported.

The conversion and merge services provided by the access services may be requested directly by a client device or another server e.g. reader or consumption device endpoint editor or consumption and limited endpoint editors . In some embodiments a server such as described with respect to or third party site e.g. or secondary conversion service e.g. may access the services on behalf of a client device. A printer may also receive content from the conversion and merge services either directly or through another client device.

One framework by which the endpoint editors may communicate with the web service e.g. service is via a framework that allows client applications to efficiently synchronize changes to a document and file management and collaboration program running on a server such as the MICROSOFT SHAREPOINT web application platform using a FSSHTTP application programming interface API . The client side of the FSSHTTP protocol is a pass through. For example calls made by a higher layer protocol such as the application layer are passed directly to the transport layer and the results returned by the transport layer are passed directly back to the higher layer protocol or application.

An API is generally a set of programming instructions and standards for enabling two or more applications to communicate with each other and is commonly implemented as a set of HTTP request messages and a specified format or structure for response messages. The messages can contain an information resource. A resource is information that can be identified by a uniform resource identifier URI and may be a file a dynamically generated query result the output of a common gateway interface CGI script a document that is available in several languages and the like.

The conversion and merge service may be associated with broader cloud services as well as a web application component WAC . WACs are components that enable a user to view and edit documents in the browser. WACs can function both as an endpoint by consuming and editing content and a service by providing some merge and conversion service functionality. In such embodiments users have access to application software and databases on the cloud which manages infrastructures and platforms. End users access software applications hosted on the cloud through a browser or app an application designed for mobile devices such as smartphones and tablets . An example is described with respect to .

The network may be an internet an intranet or an extranet and can be any suitable communications network including but not limited to a cellular e.g. wireless phone network the Internet a local area network LAN a wide area network WAN a WiFi network an ad hoc network or a combination thereof.

As previously described such networks may involve connections of network elements such as hubs bridges routers switches servers and gateways. The network may include one or more connected networks e.g. a multi network environment including public networks such as the Internet and or private networks such as a secure enterprise private network. Access to the network may be provided via one or more wired or wireless access networks not shown as will be understood by those skilled in the art.

The client and the server can involve computing systems configured with one or more central processing units CPUs memory mass storage and I O devices e.g. network interface user input device . Elements of the computing system can communicate with each other via a bus. The hardware platform of computing systems can be embodied in many forms including but not limited to a personal computer a server computer a hand held or laptop device a multiprocessor system a microprocessor based system programmable consumer electronics and a distributed computing environment e.g. cloud based computing systems that includes any of the above systems or devices and where application functionality memory data storage and retrieval and various processing functions may be operated remotely from each other over a distributed computing network such as the Internet or an intranet .

In certain embodiments the client can be embodied as a computing device including but not limited to a personal computer a tablet a reader a mobile device a personal digital assistant PDA a smartphone a laptop or notebook or netbook computer a gaming device or console a desktop computer or a smart television.

In certain embodiments the server can be embodied as a computing device including but not limited to a server computer an enterprise computer a personal computer a multiprocessor system a microprocessor based system and a combination thereof. It should be understood that the listing of client computing devices and the server computing devices is not intended to be limiting and that the client and server may be embodied in the same or different form.

The client computing device is configured to execute an operating system and one or more application programs such as in the illustrated embodiment a word processing or editor application a web browser application and or one or more other applications.

The operating system is a computer program for controlling the operation of the client computing device . The application programs are executable programs configured to execute on top of the operating system to provide various functionality such as described herein. A word processing application is an application program generally configured to facilitate typing editing formatting saving printing and commenting. An editor application may be any application providing editing or annotating tools and may be a word processing application or other productivity applications such as MICROSOFT OFFICE available from Microsoft Corp. GOOGLE DOCS available from Google Inc. APACHE OPENOFFICE available from the Apache Software Foundation or ZOHO OFFICE available from Zoho Corporation.

Productivity applications include but are not limited to word processing programs collaboration programs presentation programs spreadsheet programs and storytelling note taking programs.

The web browser application is an application program for retrieving and traversing information resources on the World Wide Web the Web as well as resources provided by web servers in private networks via the network and presenting the information resources to a user e.g. rendering for display . Moreover the web browser application allows a user to access information and various functions provided by a server.

The illustrated server computer is configured to execute a server operating system one or more application programs such as a server word processing or editor application and or one or more other applications. The server may also be hosting a service and incorporating WACs such as described in .

The server operating system is a computer program for controlling the operation of the server computer and the application programs are executable programs configured to execute on top of the server operating system to provide various functionality described herein. The server word processing or editor application in some embodiments is a web based application program configured similarly to the word processing or editor application described above. The server word processing or editor application may provide functionality that is identical to the word processing or editor application .

In some embodiments the server computer is configured to execute the server word processing or editor application and the client computing device is configured to access the server computer to interact with the server word processing or editor application in a client server configuration.

Communication between computing devices in a client server relationship may be initiated by a client sending a request to the server asking for access to a particular resource or for particular work to be performed. The server may subsequently perform the actions requested and send a response back to the client.

In one embodiment the client web browser application is used to connect with a server for example server in order to access a web based word processing or editor application .

The client and server can access a conversion and merge services over the network . Applications running on client and server can access the services via ubiquitous web protocols and data formats such as HTTP XML JSON and SOAP or via the FSSHTTP protocol.

As described above with respect to network of the network may be an internet an intranet or an extranet and can be any suitable communications network including but not limited to a cellular e.g. wireless phone network the Internet a local area network LAN a wide area network WAN a WiFi network an ad hoc network or a combination thereof.

The client s and server can involve computing systems configured such as described with respect to client and server .

Each client can include a software application for viewing and editing and or annotating a document and its content provided by the server through the content access services.

A user may have multiple clients e.g. a desktop computer in the office a laptop at home and a mobile telephone smartphone and may use software ebook readers or document viewers or editors running on these clients to read ebooks and other digital content retrieved from the server as well as edit and or annotate the content.

The server is a hardware device and or software program configured to provide as part of content access services a conversion service and a merge service. The conversion service enables users to access content even the user s own content that may be of a file format not directly supported by a specific client that the user is using to access the content and the merge service re integrates changes made by the user to a master document stored in database .

One or more of the services or functions provided by the server can be executed in a cloud computing environment. In addition the server can include applications and or host a service exposed through an API.

According to certain embodiments a system involving server may be provided that can import a document from a client or database such as database . The imported document may be considered the master document or a master document can be created from the imported document and stored in a database associated for example with the server .

The server can convert the document into a format suitable for a consumer device e.g. desktop laptop smartphone tablet reader not shown game console not shown and the like .

A user can have access to a suitable version of the master document e.g. in the form of document across each device e.g. . For example document can appear across any device and platform. A user working on the document within one program for example on laptop can save the document with those changes. Saving the document can invoke the merge services. For example as shown in the entire document the change delta or a particular modification can be returned to the server for merging with the master document.

The actual physical file may or may not be stored in the cloud as part of cloud storage such as database . The file may be stored on a server or computer or any storage location that can be accessed by the service over a network. The master document or other imported file can be stored at the server as a collection of addressable files which may be imported and converted upon request.

Another user on a client device such as laptop or the first user on a second device such as tablet can open the document and their experience is that the document is a document workable within the device or the second device on which the first user is accessing the document . The second user with device or the first user on a second device can then save the document after editing and the service will merge the changes.

According to embodiments each client believes it has a file that was stored in the appropriate format for the client. There is no need to change the file at the client in order to open the file and access the data. For example applications can still open documents as expected the server takes care of whether the client receives a suitable file format. At the client the user opens changes and saves the document according to expected processes. The server understands the limitations of the endpoint and provides the appropriate format to the device.

The server and the consumer client device communicate such that the system knows what type of device or software is available on the client and tailors the user s experience accordingly.

The server can be configured to identify the user agent client characteristics at the endpoint. The identification may be based on an active or implicit notification sent from the endpoint e.g. client to the server . The server can further be configured to tailor the client experience as well as the persisted experience e.g. the stored copy of the master document .

According to certain embodiments the served document is not only reflowed to accommodate smaller or larger display sizes additional accommodations can be made.

Reflowing refers to the accommodation of viewing content for a limited display or window where text may remain at its original size for ease of reading while images reduce in size so that they can be viewed at a glance.

As an example of additional accommodations a high resolution device can be served high resolution content a higher form factor can receive more objects whereas a phone may receive a lower resolution image instead of for example a 12 megapixel version of a picture in a document . In addition a touch enabled device may have touch responsive features added to the document. Further customized endpoint services can also be provided e.g. exposed through the API including but not limited to those enabling commenting on a document and adding work flow elements such as to do items . Security settings and rights management may also be tailored to the client. For example when an older version or certain file formats are served to a client the document can be provided to function in read only to minimize destructiveness of saving in a lower fidelity version but allow the document to be saved as a different copy than the master.

Not only is the served document in a format suitable or even customized for rendering by a particular consumer device but modifications to the document can be re integrated with the master document . The server can re integrate the modifications by knowing what type of device and or software is available at the client. For example where client devices use different platforms and file formats the server can know the fidelity that may be lost in a conversion and reconstitute any changes back on the server.

Similarly where client devices use different versions of a feature the server can know the version used and adjust accordingly. Features include but are not limited to utilities for manipulating and editing text charts equations text effects and graphics including MICROSOFT SMARTART graphics digital content including videos bibliography styles threaded commenting spell check dictionary language and utilities for manipulating and editing graphics.

For example a document in a recent version of MICROSOFT WORD can be served to a client running an earlier version of MICROSOFT WORD without the client having to perform the conversion to the earlier version. Furthermore instead of serving a read only version to avoid issues with saving back the lower fidelity version the client running the earlier version may edit the document because the server knowing how the earlier version is destructive to the full fidelity version and what the images replacing high fidelity content represent can reconstitute the data back on the server i.e. perform fidelity rehydration .

Fidelity rehydration can be performed at the server because the server knows what form the content was provided as well as the specific constraints and actions that may be carried out with respect to the file while the file is in a particular file format.

By creating the master document certain embodiments can create a document as a service experience for users. In particular the master document includes the content making up the master document along with a set of actions the creator and others may take with respect to the document. A customized experience can be provided to a consumer and the ability to edit the content can be exposed as part of the service.

Returning to operation if the document is determined to not be a new document because for example a master document already exists on the system the server can determine whether the document is of a same or different file format as the master document . In response to a determination that the file formats are different the server can convert the file format of the document to the file format of the master document or some other format understood by the system and then automatically determine the differences between the document and the master document and merge the differences delta to update the master . Merging the delta into the master document enables a user at one device to do something with a document and have the change associated with the document so that the next person or the same person on a second device who accesses the document sees those changes reflected onto the document that second person or second device receives.

Returning to operation if the file formats are the same a determination can be made as to whether the feature version supported by the document is the same as the feature version supported by the master . In response to a determination that the feature versions are different the server can determine the non feature related differences delta between the document and the master and use the determined delta to update the master without losing fidelity.

By determining file format and or feature version the file as a whole and the content within the file can be analyzed in order to transform one document to another document or transform content from one version to another version. Where there is no difference between file format and feature version between the document and the master the differences may be automatically updated at the master or the master can be replaced by the document.

Embodiments provide a system in which documents are presented to a user as if they are in the format needed for a particular client even if the document does not actually exist in that format or version until the time that the user selects the document for viewing or editing . Instead of pre converting all files stored on the server to every type of file format a particular format for a document is delivered upon request by a user.

Embodiments can extend the reach where content can be consumed and create an experience for that content suitable for the device or client on which the content is provided. The service can interpret the device and capabilities to determine what is a desired or suitable way to view the content on the particular device. Features that the service can take into consideration include but are not limited to dimension of a display user input capabilities of the device speed and or bandwidth of a network connection as well as operating system and application constraints.

For example some documents may look great displayed on a laptop but not quite as useable on a smaller screen such as on a phone or tablet. By determining what the client is such as determining the consumption format appropriate for the client the service modifies the consumption experience based on the device or software .

At the client the document provided by the service may be edited. In the instant example an edited document see may be merged back to the master document to facilitate collaboration across different editors and feature versions. To provide the merge services a general API or a plurality of APIs for collaboration and merge services can be used. The APIs enable clients to merge changes to a document across multiple platforms. In addition the services can be extensible to a third party adapter in situations where an intermediary conversion to a recognizable file format may take place for example where a proprietary or new format is developed.

For example a client can call the highlighting API and pass through a paragraph identifier or the text and the service performs the highlighting. A client can call the comment API and provide the sentence paragraph or word where a comment is to be inserted along with the text to insert as the comment. The device does not need to understand the file format of the document. For example the document may be stored as a DOCX file but the client is viewing and editing the document as a PDF file or an ePUB file.

According to another embodiment a client can call a comment API which may provide commenting services. Commenting services via for example a comment API can enable limited endpoints to send comments on parts of a document into the service for merging into the full document. The commenting services can receive the comments and an indication as to what part of the document the comments are associated and then modify the full document to include the comments.

In the example shown in the edited document includes a highlighting of a first paragraph a correction to text in the third paragraph and a signature added to the metadata associated with the document. For the highlighting API the client can invoke a highlight API and pass the paragraph identifier to the highlight service . To correct the typographical error the client can pass a location identifier e.g. third paragraph first sentence and the replacement text to the text edit service . For adding a signature the client can pass the location identifier e.g. metadata and the signature to the signature service .

A location identifier can include but is not limited to a paragraph identifier that identifies a paragraph in a document a line identifier that identifies a line in the document a character identifier that identifies a character in the document and a part identifier that identifies a part of the document. The part identifier can provide a location identification that differentiates between parts of the document such as document content comment content style content and the like. The parts of the document identified by the part identifier may also be structurally delineated content within the document. In one embodiment the part identifier identifies a part of the document being modified through structural markup with associated metadata. An example of structurally delineated content is as follows 

In the above example which has an appearance of a content control the content that can be modified by a user is located in the paragraph between the identified fill in region markup. In some embodiments the part of the documents at which the modification is to take place can be identified through the structural mark up in the document for example as the fill in region .

In some embodiments content from a client supporting a plain text file format can add rich content to a file through the service by passing through text and calling an API that can take the text and add the specified formatting. Similarly content can be added to metadata by invoking a service adding the content to the metadata.

Referring to at operation the editor can request a document. The request may be to open a file located on a cloud database . Because the document may not be in the same file format as supported by the editor the request for the document can invoke an access service providing a conversion service. The access service can retrieve the document from the database and convert the document into a suitable file format for the editor. In operation the editor can receive the converted document from the access services and render the received document for display.

The document retrieved from the database may be a master document. During the course of using the editor a user may modify the received document. When a modification is made to the received document the modification may be merged into the master document by invoking a merge service .

Invoking the merge service calls a merge service of an access service . The invoking of the merge service may occur as a response to receiving a save command from the user. In another embodiment the invoking of the merge service may occur as part of a workflow. For example the invoking of the merge service may be triggered by certain events such as an automatic save from the system.

Optionally validation processes may be included to provide access to the document and or the access services based on a user s identification. For example an OATH token may be used to validate a signed in user against the access services . The token may be sent by the editor to the cloud database and or the access services so that the user can be authenticated and the document accessed.

Further embodiments may utilize an identity manager to facilitate the service knowing who the user is and what documents the user cares about. By knowing the identity of the user the service can retrieve the user s content e.g. documents across multiple devices e.g. the user s computer laptop tablet smartphone ebook reader and the like and services e.g. file hosting services such as the DROPBOX service from Dropbox Inc. and the MICROSOFT SKYDRIVE service from Microsoft Corp. on the user s behalf.

In addition by knowing the client on which the document is to be provided the system can take the document in one format and convert the document into a customized format for a client being used by the user. For example a user may be working on a document in MICROSOFT WORD and would like to access the document on her ebook reader. In one such case the service can present the document to the user when the user browses available files from her ebook reader e.g. so the user can read it on the ebook reader . This can remove the steps a user currently takes to send a document to an ebook reader in order to have the document converted to the appropriate format .

The file may be available upon opening of an app on the reader device. The app can have an associated hub of documents that can run on the reader. In another embodiment a service provided by the reader such as provided by Amazon.com for the Kindle reader can integrate the user s experience via an extensibility layer in order for their users to access documents from the access services of certain embodiments of the invention.

According to an embodiment the user can simply work on the document save the document or an address of the document and close the file. By the identity manager knowing who the user is and then what platform to which the document is to be made available the document will be there for the user in the appropriate format when accessed again by a same or different client.

The first editor can receive the ePub format document and display the document . A user of the first editor may modify the ePub document for example by including a comment. When a save command or other specified condition occurs the first editor can request a merge from the access service . The request may include the entire ePub document with modification e.g. the document and the comments or a location identifier for the modification and the modification e.g. the location for the comment and the text to be added as a comment .

The access service can receive the merge request and perform operations to merge the modifications to the master document . The master document can remain in its original format and version.

A second editor can request the document from the access service . In this example the second editor may be a computing device that supports DOCX file extensions but at a different feature version than that of the master document. As an illustrative example the master document may be at version 5 but the second editor may be at version 1. Moving to operation the access service can determine a suitable format for the second editor and provide the document to the second editor . The second editor can receive the DOCX feature version 1 format document and display the document . A user of the second editor may modify the document . When a save command or other specified condition occurs the first editor can request a merge from the access service .

The access service can receive the merge request and perform operations to merge the modifications to the master document . The modification may be to a portion of the content using a feature supported by both versions. Because the second editor supports the older version of DOCX but not the newer version fidelity rehydration to the newer version can be accomplished by using the service and the content using the newer features will note be destroyed by the merging.

If the modification is to a portion of the content using a feature not supported by both versions the conflict may be resolved by any suitable manner including changes made on behalf of the users and changes made in response to a decision by a user. For example in some cases decisions by the service may be made with respect to how where and whether to incorporate the modification. For cases where a decision is not able to or not set to make a decision the service may provide one or more devices the option to see all conflicts and possibilities. Users can then choose an option for resolving the conflict.

The access service enables multiple editors to view and edit a same file. Moreover the second editor and the first editor while both accessing the master document are accessing the document across different platforms.

The following example scenarios are presented to provide a greater understanding of certain embodiments of the present invention and of its many advantages. The following example scenarios are simply meant to be illustrative of some of the applications and variants for embodiments of the invention. They are of course not to be considered in any way limitative of the invention.

A user of a KINDLE reader or a NOOK reader is reading a document and would like to contribute to the document either by commenting correcting a typographical error highlighting or performing some other modification or annotation. These readers have some editing capabilities even though the readers are not primarily editors. Accordingly certain embodiments of the invention allow a user to take advantage of the reader s abilities for example the annotations and editing capabilities and then merge those modifications back into the document. Instead of each device or application having to contain co authoring capabilities the document as a service merge services can automatically merge the edits content back into the document even from disparate platforms.

In one embodiment the merging can be accomplished when the reader performs a synching operation such as used to enable a user to read digital content across multiple devices while picking up the digital content from the farthest location achieved . In one such case during the call to update location to a synchronizing service modifications to a document can be sent to a conversion and merge service of an embodiment of the invention.

In another embodiment the reader can call the conversion and merge services upon an active step by the user for example when the user elects to save the document. In yet another embodiment an auto save feature can be used to save the changes.

Because clients are not required to include a layer that can understand and perform co authoring devices can be dumber or focus device resources on other applications and functions.

A document may be created in a DOCX format for a recent version of the MICROSOFT WORD document and word processing software available from Microsoft Corp. but the author would like to view and perhaps comment or edit the document on a reader such as the NOOK reader which may use an ePub file format or the AMAZON KINDLE reader which may use a proprietary AZW and KF8 format. By using the service the person can access the document in the appropriate format for the NOOK reader or the KINDLE reader and then make changes to the document for example by adding some comments. The comments can be saved back into the master file which in this case is the DOCX file format.

Currently opening a MICROSOFT WORD document file in a different version than that used to create the document can result in the document not displaying all the features. For example certain fonts or formatting may change and rich or complex features may disappear for example footnote capabilities and some macros. In some cases the change in version is also a change in file format such as with the case of MICROSOFT WORD 97 which uses the DOC file format extension and MICROSOFT WORD 2010 which uses the DOCX file format extension . In other cases the change in version provides additional functionality and or features such as with the case of MICROSOFT WORD 2007 and MICROSOFT WORD 2010.

Fewer issues may arise when the document is created in an older version and then opened in a newer version but there may still be errors where a feature is phased out or not fully supported in a later version. In addition to issues with displaying a document created in a different version than that used to open the document when a document created in a later version is opened and saved in an earlier version the later version features may be lost even when the document is reopened in the later version. For example the MICROSOFT WORD 2010 word processing application includes features for creating and manipulating graphics. If a document was created in MICROSOFT WORD 2010 with fancy graphics but is opened in MICROSOFT WORD 97 to correct a typographical error in some text on a first page of the document and then saved the saved document reverts to the older version with file format extension DOC losing the fancy graphics. Just because one word is changed the entire document reverts to the older version of the graphic images.

According to certain embodiments the user s intentional change in the older version can be recognized and merged into a document supported by the new version in a manner that retains the newer features.

By using the content access services content can be tailored to older versions of existing products. For example a user may be able to delay upgrading to a newest version of a software application or require that a next version be backward compatible in order to read older newer file format extensions because the file the user running the newest program and vice versa will receive can be tailored based on the endpoint.

For example a client running MICROSOFT OFFICE 2013 may receive a full view with all features available but when the same document is opened from a client running MICROSOFT OFFICE 2007 the service may package the content for consumption view but optimized for MICROSOFT OFFICE 2007. The optimization can include replacing certain features with those of the appropriate fidelity. As an example an equation editor provided in one version may not be backwards compatible. Therefore the service may replace the equation in the document package with an image of the equation or with a form that is editable in an equation editor suitable for the version in which the document is provided.

A similar experience can be provided for other productivity applications including word processing applications. For example a client running MICROSOFT OFFICE 2013 may receive a full view with all features available but when the same document is opened from a client running another productivity application such as GOOGLE DOCS available from Google Inc. APACHE OPENOFFICE available from the Apache Software Foundation or ZOHO OFFICE available from Zoho Corporation the service may package the content for consumption view but optimized for GOOGLE DOCS OPENOFFICE or ZOHO OFFICE.

A master file may be stored in a highest fidelity format. For example a master document may be stored a most recent version of MICROSOFT WORD. A client running an earlier version of MICROSOFT WORD can be served a file in a DOC format instead of a DOCX format. When a user makes changes to the DOC document and saves the document either as part of an auto save or by an active step the changes to the DOC document are saved back into the master file in the DOCX format. In one embodiment the entire DOC document is rehydrated to the DOCX format at the server. In another embodiment only a portion that is modified by the user and not simply part of the differences made to the content when serving the DOC file to the client is returned to the server upon save. This portion can then be re associated by with the full fidelity document.

Embodiments can facilitate forward and backwards compatibility between different versions of a same product. Currently a file saved in a MICROSOFT WORD program is saved for multiple targets. For example when an updated feature version for an equation is used in a file and the file saved the native equation data is saved out so that it can be read back in with the appropriate fidelity for editing and a picture of the equation is saved out so that a previous version of the word processor display what the equation looks like even though the equation editor is not supported. The older version may contain information on how to let the newer version get its full fidelity back. For example an older version may be in a display mode and not allow for editing.

Each version of the word processor contains information on how to round trip certain feature so that a future version can get its full fidelity back. A round trip refers to a document going from one version to another version and then back to the original version. For example a feature A may be in version X but in version Y the feature A may be represented as feature A prime. When feature A prime is viewed or accessed from version X then the feature goes back to A. This arrangement puts a pressure on future versions to create down level compatibility based on how the earlier version can round trip the feature as well as potentially requiring additional data to be saved.

Embodiments of the invention remove or minimize the pressure on having a version know how to round trip various features as well as reduce the amount of data saved to support multiple versions. Embodiments enable older versions of a product to read and preserve content from new versions of the product.

Rich Text Format RTF is a file format that encodes various documents text and graphics formatting properties for use as a cross platform document interchange suitable for many word processing applications. Currently a RTF file saves multiple separate versions of a picture in a file in order to support potential clients consumers of the file. For example one file provides the current version of the picture a second or more file provides one or more previous versions of the picture another file provides a WORD 2.0 version and yet another file provides a WORDPAD version. By providing conversion and merge services a word processing application does not need to support the many file formats or have multiple files of the same content.

Merge services can be applied to automatically merge changes within a document that has been emailed. In such a case an email service or server can communicate with the merge services. The merge service can manage the merge as if the email service or email server was an editor.

For example a group of people may be collaborating on a document. One of the group may email the changes that person made offline to the others as an attachment to an email. The service and system knowing the identifier for the document can merge the changes to a master document on behalf of the user automatically by the act of emailing to a recipient whose email service or email service is configured to communicate with the merge services.

In another example one of the group of people may email the others using an email account associated with a first email service and attach the document. Some of the recipients may be using a second email service not connected to the first email service. For example the first email service may be the HOTMAIL email service from Microsoft Corp. and the second email service may be the GMAIL email service from Google Inc.

When one of the users of the second email service which is disconnected from the first email service edits the document and replies back with the edited document attached the first email service can merge the changes which were made offline back into the master document. When the first email service receives the attachment and identifies the document and lineage of the document the first email service can initiate communication with the merge service. The merge service can manage the merge as if the first email service was an editor.

A user may receive a document for review using a device such as a phone which may have limited computing power and limited bandwidth such as due to latency . Currently if the user would like to comment on the document in this environment even a single comment or change results in the entire document being transmitted back to a server. According to one embodiment the access service can provide an accommodation for the limitations of the user s device and incorporate a comment checkbox of yes or no that a change is approved. Then just the indication of the checkbox response can be returned to the server. In this manner the device got the data it needed from the service and can call the service back to update the comment to approved. The service can take that indication and perform the high fidelity modification and or insertion of the comment. The user on the limited device believes he she had whole co authoring experience but without the price of delivering an entire co authoring software technology to the device.

An example of an accommodation of content for a consumer device is a case where the consumer device is a touch enabled device but the document is not touch enabled ready. The service can augment the document to make the document more touch enabled ready by for example providing zooming or enlarged features. As an illustrative example a table in a document originally created on a large screen device but is being provided for rendering on a small screen device can have a touch aspect added that allows the table to get zoomed in for viewing .

Alternatively or in addition by taking the dimensions of a small device into consideration the service can determine that there is space for only one column out of a three column table and will present the table in the form suitable for the small screen. This may include adding zooming features or only displaying one column at a time.

System includes a processor that processes data according to instructions of one or more application programs and or operating system . The processor may be or is included in a system on chip SoC along with one or more other components such as sensors e.g. magnetometer an ambient light sensor a proximity sensor an accelerometer a gyroscope a Global Positioning System sensor temperature sensor shock sensor and network connectivity components e.g. including Radio network interface .

The one or more application programs may be loaded into memory and run on or in association with the operating system . Examples of application programs include phone dialer programs e mail programs PIM programs word processing programs spreadsheet programs Internet browser programs messaging programs game programs and the like. Other applications may be loaded into memory and run on the device including various client and server applications.

It can be understood that the memory may involve one or more memory components including integrated and removable memory components and that one or more of the memory components can store an operating system. According to various embodiments the operating system includes but is not limited to SYMBIAN OS from Symbian Ltd. WINDOWS MOBILE OS from Microsoft Corporation WINDOWS PHONE OS from Microsoft Corporation WINDOWS from Microsoft Corporation PALM WEBOS from Hewlett Packard Company BLACKBERRY OS from Research In Motion Limited APPLE IOS from Apple Inc. and GOOGLE ANDROID OS from Google Inc. Other operating systems are contemplated.

System also includes non volatile storage within memory . Non volatile storage may be used to store persistent information that should not be lost if system is powered down. Application programs may use and store information in non volatile storage such as a record of commands executed during the creation or modification of content in a productivity application and the like. A synchronization application may also be included and reside as part of the application programs for interacting with a corresponding synchronization application on a host computer system such as a server to keep the information stored in non volatile storage synchronized with corresponding information stored at the host computer system.

System has a power supply which may be implemented as one or more batteries and or an energy harvester ambient radiation photovoltaic piezoelectric thermoelectric electrostatic and the like . Power supply may further include an external power source such as an AC adapter or a powered docking cradle that supplements or recharges the batteries.

System may also include a radio network interface that performs the function of transmitting and receiving radio frequency communications. The radio network interface facilitates wireless connectivity between system and the outside world via a communications carrier or service provider. Transmissions to and from the radio network interface are conducted under control of the operating system which disseminates communications received by the radio network interface to application programs and vice versa.

The radio network interface allows system to communicate with other computing devices including server computing devices and other client devices over a network.

An audio interface can be used to provide audible signals to and receive audible signals from the user. For example the audio interface can be coupled to speaker to provide audible output and a microphone to receive audible input such as to facilitate a telephone conversation. A speaker may also be incorporated so that a user may interact with the computing device via voice commands.

System may further include video interface that enables an operation of an optional camera not shown to record still images video stream and the like. A camera may also be used to capture gestures used for interacting with the computing device.

Visual output can be provided via a touch screen display . In some cases the display may not be touch screen and user input elements such as buttons keys roller wheel and the like are used to select items displayed as part of a graphical user interface on the display .

A keypad can also be included for user input. The keypad may be a physical keypad or a soft keypad generated on the touch screen display . In some embodiments the display and the keypad are combined. In some embodiments two or more input output I O components including the audio interface and video interface may be combined. Discrete processors may be included with the I O components or processing functionality may be built in to the processor .

The display may present graphical user interface GUI elements a predictive contextual toolbar user interface text images video notifications virtual buttons virtual keyboards messaging data Internet content device status time date calendar data preferences map information location information and any other information that is capable of being presented in a visual form. In some embodiments the display is a liquid crystal display LCD utilizing any active or passive matrix technology and any backlighting technology if used . In some embodiments the display is an organic light emitting diode OLED display. Of course other display types are contemplated.

A touchscreen which may be associated with the display is an input device configured to detect the presence and location of a touch. The touchscreen may be a resistive touchscreen a capacitive touchscreen a surface acoustic wave touchscreen an infrared touchscreen an optical imaging touchscreen a dispersive signal touchscreen an acoustic pulse recognition touchscreen or may utilize any other touchscreen technology. In some embodiments the touchscreen is incorporated on top of a display as a transparent layer to enable a user to use one or more touches to interact with objects or other information presented on the display.

In other embodiments a touch pad may be incorporated on a surface of the computing device that does not include the display. For example the computing device may have a touchscreen incorporated on top of the display and a touch pad on a surface opposite the display.

In some embodiments the touchscreen is a single touch touchscreen. In other embodiments the touchscreen is a multi touch touchscreen. In some embodiments the touchscreen is configured to detect discrete touches single touch gestures and or multi touch gestures. These are collectively referred to herein as gestures for convenience. Several gestures will now be described. It should be understood that these gestures are illustrative and are not intended to limit the scope of the appended claims. Moreover the described gestures additional gestures and or alternative gestures may be implemented in software for use with the touchscreen. As such a developer may create gestures that are specific to a particular application program.

In some embodiments the touchscreen supports a tap gesture in which a user taps the touchscreen once on an item presented on the display. The tap gesture may be used for various reasons including but not limited to opening or launching whatever the user taps. In some embodiments the touchscreen supports a double tap gesture in which a user taps the touchscreen twice on an item presented on the display. The double tap gesture may be used for various reasons including but not limited to zooming in or zooming out in stages and selecting a word of text. In some embodiments the touchscreen supports a tap and hold gesture in which a user taps the touchscreen and maintains contact for at least a pre defined time. The tap and hold gesture may be used for various reasons including but not limited to opening a context specific menu.

In some embodiments the touchscreen supports a pan gesture in which a user places a finger on the touchscreen and maintains contact with the touchscreen while moving the finger on the touchscreen. The pan gesture may be used for various reasons including but not limited to moving through screens images or menus at a controlled rate. Multiple finger pan gestures are also contemplated. In some embodiments the touchscreen supports a flick gesture in which a user swipes a finger in the direction the user wants the screen to move. The flick gesture may be used for various reasons including but not limited to scrolling horizontally or vertically through menus or pages. In some embodiments the touchscreen supports a pinch and stretch gesture in which a user makes a pinching motion with two fingers e.g. thumb and forefinger on the touchscreen or moves the two fingers apart. The pinch and stretch gesture may be used for various reasons including but not limited to zooming gradually in or out of a website map or picture.

Although the above gestures have been described with reference to the use one or more fingers for performing the gestures other appendages such as toes a nose chin or objects such as styluses may be used to interact with the touchscreen. As such the above gestures should be understood as being illustrative and should not be construed as being limiting in any way.

It should be understood that any mobile or desktop computing device implementing system may have more or fewer features or functionality than described and is not limited to the configurations described herein.

For example in some embodiments user interfaces and information of various types may be displayed and interacted with on a wall surface onto which user interfaces and information of various types are projected.

In various implementations data information stored via the system may include data caches stored locally on the device or the data may be stored on any number of storage media that may be accessed by the device via the radio network interface or via a wired connection between the device and a separate computing device associated with the device for example a server computer in a distributed computing network such as the Internet. As should be appreciated such data information may be accessed through the device via the radio interface or a distributed computing network. Similarly such data information may be readily transferred between computing devices for storage and use according to well known data information transfer and storage means including electronic mail and collaborative data information sharing systems.

Certain techniques set forth herein may be described in the general context of computer executable instructions such as program modules executed by one or more computing devices. Generally program modules include routines programs objects components and data structures that perform particular tasks or implement particular abstract data types.

Embodiments may be implemented as a computer process a computing system or as an article of manufacture such as a computer program product or computer readable medium. Certain methods and processes described herein can be embodied as code and or data which may be stored on one or more computer readable media. Certain embodiments of the invention contemplate the use of a machine in the form of a computer system within which a set of instructions when executed can cause the system to perform any one or more of the methodologies discussed above. Certain computer program products may be one or more computer readable storage media readable by a computer system and encoding a computer program of instructions for executing a computer process.

Computer readable media can be any available computer readable storage media or communication media that can be accessed by the computer system.

Communication media include the media by which a communication signal containing for example computer readable instructions data structures program modules or other data is transmitted from one system to another system. The communication media can include guided transmission media such as cables and wires e.g. fiber optic coaxial and the like and wireless unguided transmission media such as acoustic electromagnetic RF microwave and infrared that can propagate energy waves. Computer readable instructions data structures program modules or other data can be embodied as a modulated data signal in for example a wireless medium such as a carrier wave or similar mechanism such as employed as part of a spread spectrum technique. The term modulated data signal refers to a signal that has one or more of its characteristics changed or set in a manner as to encode information in the signal. The modulation may be analog digital or a mixed modulation technique. Communication media particularly carrier waves and other propagating signals that may contain data usable by a computer system are not included as computer readable storage media.

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example a computer readable storage medium includes but is not limited to volatile memory such as random access memories RAM DRAM SRAM and non volatile memory such as flash memory various read only memories ROM PROM EPROM EEPROM magnetic and ferromagnetic ferroelectric memories MRAM FeRAM and magnetic and optical storage devices hard drives magnetic tape CDs DVDs or other media now known or later developed that is capable of storing computer readable information data for use by a computer system. Computer readable storage media do not consist of carrier waves or propagating signals.

In addition the methods and processes described herein can be implemented in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

Any reference in this specification to one embodiment an embodiment example embodiment etc. means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of such phrases in various places in the specification are not necessarily all referring to the same embodiment. In addition any elements or limitations of any invention or embodiment thereof disclosed herein can be combined with any and or all other elements or limitations individually or in any combination or any other invention or embodiment thereof disclosed herein and all such combinations are contemplated with the scope of the invention without limitation thereto.

It should be understood that the examples and embodiments described herein are for illustrative purposes only and that various modifications or changes in light thereof will be suggested to persons skilled in the art and are to be included within the spirit and purview of this application.

