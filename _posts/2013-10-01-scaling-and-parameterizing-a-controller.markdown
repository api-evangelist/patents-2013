---

title: Scaling and parameterizing a controller
abstract: Controller scaling and parameterization are described. Techniques that can be improved by employing the scaling and parameterization include, but are not limited to, controller design, tuning and optimization. The scaling and parameterization methods described here apply to transfer function based controllers, including PID controllers. The parameterization methods also applies to state feedback and state observer based controllers, as well as linear active disturbance rejection controllers. It is emphasized that this abstract is provided to comply with the rules requiring an abstract that will allow a searcher or other reader to quickly ascertain the subject matter of the application. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09052705&OS=09052705&RS=09052705
owner: Cleveland State University
number: 09052705
owner_city: Cleveland
owner_country: US
publication_date: 20131001
---
This application is a Continuation of application Ser. No. 13 554 054 filed Jul. 20 2012 which is a Division of application Ser. No. 13 212 274 filed Aug. 18 2011 which is a Division of application Ser. No. 10 351 664 filed Jan. 27 2003 which claims the benefit of U.S. Provisional Application 60 373 404 filed Apr. 8 2002 the entire contents of all of which are hereby incorporated herein by reference.

The systems methods application programming interfaces API graphical user interfaces GUI computer readable media and so on described herein relate generally to controllers and more particularly to scaling and parameterizing controllers which facilitates improving controller design tuning and optimizing.

A feedback closed loop control system as shown in Prior Art is widely used to modify the behavior of a physical process denoted as the plant so it behaves in a specific desirable way over time. For example it may be desirable to maintain the speed of a car on a highway as close as possible to 60 miles per hour in spite of possible hills or adverse wind or it may be desirable to have an aircraft follow a desired altitude heading and velocity profile independently of wind gusts or it may be desirable to have the temperature and pressure in a reactor vessel in a chemical process plant maintained at desired levels. All these are being accomplished today by using feedback control and the above are examples of what automatic control systems are designed to do without human intervention.

The key component in a feedback control system is the controller which determines the difference between the output of the plant e.g. the temperature and its desired value and produces a corresponding control signal u e.g. turning a heater on or off . The goal of controller design is usually to make this difference as small as possible as soon as possible. Today controllers are employed in a large number of industrial control applications and in areas like robotics aeronautics astronautics motors motion control thermal control and so on.

Classic Control Theory provides a number of techniques an engineer can use in controller design. Existing controllers for linear time invariant and single input single output plants can be categorized into three forms the proportional integral derivative PID controllers transfer function based TFB controllers and state feedback SF controllers. The HD controller is defined by the equation 1 where u is the control signal and e is the error between the setpoint and the process output being controlled. This type of controller has been employed in engineering and other applications since the early 1920s. It is an error based controller that does not require an explicit mathematical model of the plant. The TFB controller is given in the form of

The SF controller can be defined by 4 and is based on the state space model of the plant 5 When the state x is not accessible a state observer SO 6 is often used to find its estimate circumflex over x . Here r is the setpoint for the output to follow.

In addition to the above controllers a more practical controller is the recently developed Active Disturbance Rejection Controller ADRC . Its linear form LADRC for a second order plant is introduced below as an illustration. The unique distinction of ADRC is that it is largely independent of the mathematical model of the plant and is therefore better than most controllers in performance and robustness in practical applications.

Consider an example of controlling a second order plant 7 where y and u are output and input respectively and w is an input disturbance. Here both parameters a and b are unknown although there is some knowledge of b e.g. b b derived from the initial acceleration of y in step response . Rewrite 7 as 8 where f adot over y by w b b u. Here f is referred to as the generalized disturbance or disturbance because it represents both the unknown internal dynamics adot over y by b b u and the external disturbance w t .

which can be reconstructed in software for example and L is the observer gain vector which can be obtained using various methods known in the art like pole placement 12 where denotes transpose. With the given state observer the control law can be given as 

Over the years the advances in control theory provided a number of useful analysis and design tools. As a result controller design moved from empirical methods e.g. ad hoc tuning via Ziegler and Nichols tuning tables for PID to analytical methods e.g. pole placement . The frequency response method Bode and Nyquist plots also facilitated analytical control design.

Conventionally controllers are individually designed according to design criteria and then individually tuned until they exhibit an acceptable performance. Practicing engineers may design controllers e.g. PID using look up tables and then time the controllers using trial and error techniques. But each controller is typically individually designed tuned and tested.

Tuning controllers has perplexed engineers. Controllers that are developed based on a mathematical model of the plant usually need their parameters to be adjusted or tuned as they are implemented in hardware and tested. This is because the mathematical model often does not accurately reflect the dynamics of the plant. Determining appropriate control parameters under such circumstances is often problematic leading to control solutions that are functional but ill tuned yielding lost performance and wasted control energy. Additionally and or alternatively engineers design using analytical e.g. pole placement techniques but once again tune with trial and error techniques. Since many industrial machines and engineering applications are built to be inherently stable acceptable controllers can be designed and tuned using these conventional techniques however acceptable performance may not approach optimal performance.

One example conventional technique for designing a PID controller included obtaining an open loop response and determining what if anything needed to be improved. By way of illustration the designer would build a candidate system with a feedback loop guess the initial values of the three gains e.g. k k k in ND and observe the performance in terms of rise time steady state error and so on. Then the designer might modify the proportional gain to improve rise time. Similarly the designer might add or modify a derivative controller to improve overshoot and an integral controller to eliminate steady state error. Each component would have its own gain that would be individually tuned. Thus conventional designers often faced choosing three components in a ND controller and individually tuning each component. Furthermore there could be many more parameters that the design engineer must tune if a TFB or a state feedback state observer SFSOB controller is employed.

Another observation of control design is that it is not portable. That is each control problem is solved individually and its solution cannot be easily modified for another control problem. This means that the tedious design and tuning process must be repeated for each control problem.

Thus having reviewed controllers the application now describes example systems and methods related to controllers.

This section presents a simplified summary of methods systems computer readable media and so on for scaling and parameterizing controllers to facilitate providing a basic understanding of these items. This summary is not an extensive Overview and is not intended to identify key or critical elements of the methods systems computer readable media and so on or to delineate the scope of these items. This summary provides a conceptual introduction in a simplified form as a prelude to the more detailed description that is presented later.

The application describes scaling and parameterizing controllers. With these two techniques controller designing tuning and optimizing can be improved. In one example systems methods and so on described herein facilitate reusing a controller design by scaling a controller from one application to another. This scaling may be available for example for applications whose plant differences can be detailed through frequency scale and or gain scale. While PID controllers are used as examples it is to be appreciated that other controllers can benefit from scaling and parameterizing as described herein.

Those familiar with filter design understand that filters may be designed and then scaled for use in analogous applications. Filter designers are versed in the concept of the unit filter which facilitates scaling filters. In example controller scaling techniques a plant transfer function is first reduced to a unit gain and unit bandwidth UGUB form. Then a known controller for an appropriate UGUB plant is scaled for an analogous plant. Since certain plants share certain characteristics classes of UGUB plants can be designed for which corresponding classes of scaleable parameterizable controllers can be designed.

Since certain classes of plants have similar properties it is possible to frequency scale controllers within classes. For example an anti lock brake Plant for a passenger car that weighs 2000 pounds may share a number of characteristics with an anti lock brake plant for a passenger car that weighs 2500 pounds. Thus if a UGUB plant can be designed for this class of cars then a frequency scaleable controller can also be designed for the class of plants. Then once a controller has been selected and engineered for a member of the class e.g. the 2000 pound car it becomes a known controller from which other analogous controllers can be designed for other similar cars e.g. the 2500 pound car using frequency scaling.

This scaling method makes a controller portable . That is a single controller can be used as the seed to generate controllers for a large number of different plants that are similar in nature. The remaining question concerns how to account for differences in design requirements. Controller parameterization addresses this issue. The example parameterization techniques described herein make controller coefficients functions of a single design parameter namely the crossover frequency also known as the bandwidth . In doing so the controller can be tuned for different design requirements which is primarily reflected in the bandwidth requirement.

The combination of scaling and parameterization methods means that an existing controller including PD TFB and SFSOB can be scaled for different plants and then through the adjustment of one parameter changed to meet different performance requirements that are unique in different applications.

Certain illustrative example methods systems computer readable media and so on are described herein in connection with the following description and the annexed drawings. These examples are indicative however of but a few of the various ways in which the principles of the methods systems computer readable media and so on may be employed and thus are intended to be inclusive of equivalents. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.

As used in this application the term computer component refers to a computer related entity either hardware firmware software a combination thereof or software in execution. For example a computer component can be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and a computer. By way of illustration both an application running on a server and the server can be computer components. One or more computer components can reside within a process and or thread of execution and a computer component can be localized on one computer and or distributed between two or more computers.

 Computer communications as used herein refers to a communication between two or more computers and can be for example a network transfer a file transfer an applet transfer an email a hypertext transfer protocol HTTP message a datagram an object transfer a binary large object BLOB transfer and so on. A computer communication can occur across for example a wireless system e.g. IEEE 802.11 an Ethernet system e.g. IEEE 802.3 a token ring system e.g. IEEE 802.5 a local area network LAN a wide area network WAN a point to point system a circuit switching system a packet switching system and so on.

 Logic as used herein includes but is not limited to hardware firmware software and or combinations of each to perform a function s or an action s . For example based on a desired application or needs logic may include a software controlled microprocessor discrete logic such as an application specific integrated circuit ASIC or other programmed logic device. Logic may also be fully embodied as software.

An operable connection is one in which signals and or actual communication flow and or logical communication flow may be sent and or received. Usually an operable connection includes a physical interface an electrical interface and or a data interface but it is to be noted that an operable connection may consist of differing combinations of these or other types of connections sufficient to allow operable control.

 Signal as used herein includes but is not limited to one or more electrical or optical signals analog or digital one or more computer instructions a bit or bit stream or the like.

 Software as used herein includes but is not limited to one or more computer readable and or executable instructions that cause a computer or other electronic device to perform functions actions and or behave in a desired manner. The instructions may be embodied in various forms like routines algorithms modules methods threads and or programs. Software may also be implemented in a variety of executable and or loadable forms including but not limited to a stand alone program a function call local and or remote a servelet an applet instructions stored in a memory part of an operating system or browser and the like. It is to be appreciated that the computer readable and or executable instructions can be located in one computer component and or distributed between two or more communicating co operating and or parallel processing computer components and thus can be loaded and or executed in serial parallel massively parallel and other manners. It will be appreciated by one of ordinary skill in the art that the form of software may be dependent on for example requirements of a desired application the environment in which it runs and or the desires of a designer programmer or the like.

 Data store as used herein refers to a physical and or logical entity that can store data. A data store may be for example a database a table a file a list a queue a heap and so on. A data store may reside in one logical and or physical entity and or may be distributed between two or more logical and or physical entities.

To the extent that the term includes is employed in the detailed description or the claims it is intended to be inclusive in a manner similar to the term comprising as that term is interpreted when employed as a transitional word in a claim.

To the extent that the term or is employed in the claims e.g. A or B it is intended to mean A or B or both . When the author intends to indicate only A or B but not both then the author will employ the term A or B but not both . Thus use of the term or in the claims is the inclusive and not the exclusive use. See BA. G A DMLU624 2d Ed. 1995 .

Example methods systems computer media and so on are now described with reference to the drawings where like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to facilitate thoroughly understanding the methods systems computer readable media and so on. It may be evident however that the methods systems and so on can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to simplify description.

Controllers typically are not scalable and thus are not portable between applications. However controllers can be made portable via scaling as described in the example systems and methods provided herein. In general a plant mathematically represented by a transfer function G s where s is the Laplace Transform variable can be scaled according to 16 where is the plant frequency scale and k is the gain scale to represent a large number of plants that differ from the original plant by a frequency scale and a gain scale k.

Consider a unit feedback control system with the plant G s and controller G s as shown in . Assume that G s was designed with desired command following disturbance rejection noise rejection and stability robustness. Now consider a similar class of plants kG s . For given using example systems and methods described herein a suitable controller can be produced through frequency scaling. Thus define as the frequency scale and k as the gain scale of the plant G s with respect to . 18 Then 1 . 19 

Referring to an example system that employs frequency scaling is illustrated. The system includes a controller identifier that can identify a known controller associated with controlling a known plant. The controller may have one or more scaleable parameters e.g. frequency gains that facilitate scaling the controller. The controller identifier may access a controller information data store and or a plant information data store to facilitate characterizing one or more properties of the known controller. By way of illustration the controller identifier may identify the frequency scale of the controller and or the frequency scale and transfer function s of a plant controlled by the known controller.

The controller information data store may store for example controller class information and or information concerning scaleable controller parameters. Similarly the plant data store may store for example plant information like transfer function shape frequency scale and so on.

The system may also include a controller scaler that produces a scaled controller from the identified scaleable parameter. The scaler may make scaling decisions based for example on information in the controller information data store e.g. controller class scaleable parameters frequency scale information in the plant information data store e.g. plant class plant transfer function frequency scale and so on.

While illustrated as two separate entities it is to be appreciated that the identifier and scaler could be implemented in a single computer component and or as two or more distributed communicating co operating computer components. Thus the entities illustrated in may communicate through computer communications using signals carrier waves data packets and so on. Similarly while illustrated as two separate data stores the controller information data store and the plant information data store may be implemented as a single data store and or distributed between two or more communicating co operating data stores.

Aspects of controller scaling can be related to filter design. In filter design with the bandwidth the pass band and stop band requirements given filter design is straight forward. An example filter design method includes finding a unit bandwidth filter such as an nth order Chebeshev filter H s that meets the pass band and stop band specifications and then frequency scaling the filter as H s to achieve a bandwidth of .

Revisiting the system in to facilitate understanding frequency scaling and time scaling as related to controllers denote as the frequency scale of the plant G s with respect to G s and 1 the corresponding time scale. Then denote k as the gain scale of the plant kG s with respect to G s . With these definitions in hand differences in example industrial control problems can be described in terms of the frequency and gain scales. For example temperature processes with different time constants in first order transfer functions motion control problems with different inertias motor sizes frictions and the like can be described in terms of the defined frequency and gain scales.

These scales facilitate paying less attention to differences between controllers and applications and more attention to a generic solution for a class of problems because using the scales facilitates reducing linear time invariant plants proper and without a finite zero to one of the following example forms 

Equation 22 describes many example industrial control problems that can be approximated by a first order or a second order transfer function response. Additionally equation 22 can be appended by terms like 

Assume G s is a stabilizing controller for plant G s and the loop gain crossover frequency is then the controller 26 will stabilize the plant s kG s . The new controller new loop gain 27 will have a bandwidth of and substantially the same stability margins of since . Note that the new closed loop system has substantially the same frequency response shape as the original system except that it is shifted by . Thus feedback control properties like bandwidth disturbance and noise rejection are retained as is the stability robustness from the previous design except that frequency ranges are shifted by .

Now that controller scaling has been described PID scaling can be addressed. According to the frequency scale principle discussed above and assuming the original controller for G s is a PID e.g. 

To demonstrate the practical application and tangible results possible from the method described above in the following example consider a plant that has a transfer function of

In one example the controller is a PID controller. The PID controller may have a plant frequency scale as a scaleable parameter. In another example the method includes producing the scaled controller. For example a computer component may be programmed to perform the frequency scaled controlling. Additionally computer executable portions of the method may be stored on a computer readable medium and or be transmitted between computer components by for example carrier waves encoding computer executable instructions.

In view of the exemplary systems shown and described below example methodologies that are implemented will be better appreciated with reference to the flow diagrams of and . While for purposes of simplicity of explanation the illustrated methodologies are shown and described as a series of blocks it is to be appreciated that the methodologies are not limited by the order of the blocks as some blocks can occur in different orders and or concurrently with other blocks from that shown and described. Moreover less than all the illustrated blocks may be required to implement an example methodology. Furthermore additional and or alternative methodologies can employ additional not illustrated blocks. In one example methodologies are implemented as computer executable instructions and or operations stored on computer readable media including but not limited to an application specific integrated circuit ASIC a compact disc CD a digital versatile disk DVD a random access memory RAM a read only memory ROM a programmable read only memory PROM an electronically erasable programmable read only memory EEPROM a disk a carrier wave and a memory stick.

In the flow diagrams rectangular blocks denote processing blocks that may be implemented for example in software. Similarly the diamond shaped blocks denote decision blocks or flow control blocks that may also be implemented for example in software. Alternatively and or additionally the processing and decision blocks can be implemented in functionally equivalent circuits like a digital signal processor DSP an ASIC and the like.

A flow diagram does not depict syntax for any particular programming language methodology or style e.g. procedural object oriented . Rather a flow diagram illustrates functional information one skilled in the art may employ to program software design circuits and so on. It is to be appreciated that in some examples program elements like temporary variables initialization of loops and variables routine loops and so on are not shown.

Turning to a flowchart for an example method for producing a controller is illustrated. The method includes at identifying a controller G s that stabilizes a plant G s where the controller has a frequency and at producing a controller s by scaling the controller G s according to s G s k where the controller s will stabilize the plant s kG s where is the frequency scale of the plant G s and where k is the gain scale of the plant kG s . In one example the controller is a PID controller of the form

Applying a unit step function as the set point the responses of an original controller and a scaled controller are shown in demonstrating that the response of the scaled controller is substantially the same as the response of the original controller but scaled by 1 . The gain margins of both systems are substantially infinite and the phase margins are both approximately 82.372 degrees. The 0 dB crossover frequency for both systems are 2.3935 and 23.935 r s respectively. Thus the PID scaled by the example method is demonstrably appropriate for the application.

While the method described above concerned linear PIDs it is to be appreciated that the method can also be applied to scaling nonlinear PIDs. For example PID performance can be improved by using nonlinear gains in place of the linear ones. For example 31 where g e g e and g e are nonlinear functions. The non linear PIDs can be denoted NPID. Nonlinearities are selected so that the proportional control is more sensitive to small errors the integral control is limited to the small error region which leads to significant reduction in the associate phase lag and the differential control is limited to a large error region which reduces its sensitivity to the poor signal to noise ratio when the response reaches steady state and the error is small.

The NPID retains the simplicity of PID and the intuitive tuning. The same gain scaling formula 30 will also apply to the NPID controller when the plant changes from G s to kG s .

Scaling facilitates concentrating on normalized control problems like those defined in 22 . This facilitates selecting an appropriate controller for an individual problem by using the scaling formula in 26 and the related systems and methods that produce tangible results e.g. scaled controller . This further facilitates focusing on the fundamentals of control like basic assumptions requirements and limitations. Thus the example systems methods and so on described herein concerning scaling and parameterization can be employed to facilitate optimizing individual solutions given the physical constraints of a problem.

Working with controllers can be simplified if they can be described in terms of a smaller set of parameters than is conventionally possible. Typically a controller and possibly an observer may have many e.g. 15 parameters. The systems and methods described herein concerning parameterization facilitate describing a controller in terms of a single parameter. In one example controller parameterization concerns making controller parameters functions of a single variable the controller bandwidth .

Applying pole placement design to the first and second order plants in 22 a set of example parameterized controllers are obtained and shown in Table I. Information concerning the plants and the related controllers can be stored for example in a data store.

Loop shaping design can also be parameterized. Loop shaping refers to manipulating the loop gain frequency response L j G j G j as a control design tool. One example loop shaping method includes converting design specifications to loop gain constraints as shown in and finding a controller G j to meet the specifications.

As an example of loop shaping considering the plants of the form G s in Table I the desired loon gain can be characterized as

Once appropriate loop gain constraints are derived and the corresponding lowest order L s in 33 is selected the controller can be determined from

A compromise between and the phase margin can be made by adjusting upwards which will improve the low frequency properties at the cost of reducing phase margin. A similar compromise can be made between phase margin and .

Turning to an example method for scaling a controller is illustrated. The method includes at identifying a known controller in a controller class where the known controller controls a first plant. The method also includes at identifying a scaleable parameter for the known controller. At the method includes identifying a desired controller in the controller class where the desired controller controls a second frequency related plant and at establishing the frequency relation between the known controller and the desired controller. At the method scales the known controller to the desired controller by scaling the scaleable parameter based at least in part on the relation between the known controller and the desired controller.

Practical controller optimization concerns obtaining optimal performance out of existing hardware and software given physical constraints. Practical controller optimization is measured by performance measurements including but not limited to command following quickness a.k.a. settling time accuracy transient and steady state errors and disturbance rejection ability e.g. attenuation magnitude and frequency range . Example physical constraints include but are not limited to sampling and loop update rate sensor noise plant dynamic uncertainties saturation limit and actuation signal smoothness requirements.

Conventional tuning relies for example on minimizing a cost function like Hand H. However conventional cost functions may not comprehensively reflect the realities of control engineering and may therefore lead to suboptimal tuning. For example one common cost function is mathematically attractive but can lead to suboptimal controller tuning. Thus optimizing other criteria like are considered.

A typical industrial control application involves a stable single input single output SISO plant where the output represents a measurable process variable to be regulated and the input represents the control actuation that has a certain dynamic relationship to the output. This relationship is usually nonlinear and unknown although a linear approximation can be obtained at an operating point via the plant response to a particular input excitation like a step change.

Evaluating performance measurements in light of physical limitations yields the fact that they benefit from maximum controller bandwidth . If poles are placed in the same location then can become the single item to tune. Thus practical PID optimization can be achieved with single parameter tuning. For example in manufacturing a design objective for an assembly line may be to make it run as fast as possible while minimizing the down time for maintenance and trouble shooting. Similarly in servo design for a computer hard disk drive a design objective may be to make the read write head position follow the setpoint as fast as possible while maintaining extremely high accuracy. In automobile anti lock brake control design a design objective may be to have the wheel speed follow a desired speed as closely as possible to achieve minimum braking distance.

In the three examples the design goal can be translated to maximizing controller bandwidth . There are other industrial control examples that lead to the same conclusion. Thus maximization appears to be a useful criterion for practical optimality. Furthermore unlike purely mathematical optimization techniques optimization has real world applicability because it is limited by physical constraints. For example sending to infinity may be impractical because it may cause a resulting signal to vary unacceptably.

As an example of how physical limitations may affect optimization consider digital control apparatus that have a maximum sampling rate and a maximum loop update rate. The maximum sampling rate is a hardware limit associated with the Analog to Digital Converter ADC and the maximum loop update rate is software limit related to central processing unit CPU speed and the control algorithm complexity. Typically computation speeds outpace sampling rates and therefore only the sampling rate limitation is considered.

As another example measurement noise may also be considered when examining the physical limitations of optimization. For example the is limited to the frequency range where the accurate measurement of the process variable can be obtained. Outside of this range the noise can be filtered using either analog or digital filters.

Plant dynamic uncertainty may also be considered when examining the physical limitations of optimization. Conventional control design is based on a mathematical description of the plant which may only be reliable in a low frequency range. Some physical plants exhibit erratic phase distortions and nonlinear behaviors at a relative high frequency range. The controller bandwidth is therefore limited to the low frequency range where the plant is well behaved and predictable. To safeguard the system from instability the loop gain is reduced where the plant is uncertain. Thus maximizing the bandwidth safely amounts to expanding the effective high gain control to the edge of frequency range where the behavior of the plant is well known.

Similarly actuator saturation and smoothness may also affect design. Although using transient profile helps to decouple bandwidth design and the transient requirement limitations in the actuator like saturation nonlinearities like backlash and hysteresis limits on rate of change smoothness requirements based on wear and tear considerations and so on may affect the design. For example in a motion control application with a significant backlash problem in the gearbox excessively high bandwidth will result in a chattering gearbox and very likely premature breakdown. Thus optimization because it considers physical limitations like sampling rate loop update rate plant uncertainty actuator saturation and so on may produce improved performance.

In one controller optimization example assume that the plant is minimum phase e.g. its poles and zeros are in the left half plane that the plant transfer function is given that the parameterized controllers are known and available in form of Table I that a transient profile is defined according to the transient response specifications and that a simulator of closed loop control system as shown in is available. It is to be appreciated that the closed loop control system simulator can be for example hardware software or a combination of both. In one example the simulator incorporates limiting factors including but not limited to sensor and quantization noises sampling disturbances actuator limits and the like.

With these assumptions one example design method then includes determining frequency and gain scales and k from the given plant transfer function. The method also includes based on the design specification determining the type of controller required from for example Table I. The method also includes selecting the G s corresponding to the scaled plant in the form of Table I. The method also includes scaling the controller to

Consider an example motion control test bed for which the mathematical model of the motion system is 1.4123.2 23.2 38 where y is the output position u is the control voltage sent to the power amplifier that drives the motor and Tis the torque disturbance. An example design objective for the example system could be rotating the load one revolution in one second with no overshoot. Thus the physical characteristics of the example control problem are 

As described in the Background section the State Feedback SF controller 4 is based on the state space model of the plant 5 When the state x is not accessible a state observer SO 6 is often used to find its estimate circumflex over x . Here r is the setpoint for the output to follow. The state feedback gain K and the observer gain L are determined from the equations and where s and s are polynomials of s that are chosen by the designer. Usually the K and L have many parameters and are hard to tune.

The parameterization of state feedback and state observer gains are achieved by making and where and are bandwidth of the state feedback system and the state observer respectively and n is the order of the system. This simplifies tuning since parameters in K and L are now functions of and respectively. Parameterization of Linear Active Disturbance Rejection Controller LADRC for a Second Order Plant

Some controllers are associated with observers. Conventionally second order systems with controllers and observers may have a large number e.g. 15 tunable features in each of the controller and observer. Thus while a design method like the Hann method is conceptually viable its practical implementation is difficult because of tuning issues. As a consequence of the scaling and parameterization described herein observer based systems can be constructed and tuned using two parameters observer bandwidth and controller bandwidth 

State observers provide information on the internal states of plants. State observers also function as noise filters. A state observer design principle concerns how fast the observer should track the states e.g. what should its bandwidth be . The closed loop observer or the correction term L y in particular accommodates unknown initial states uncertainties in parameters and disturbances. Whether an observer can meet the control requirements is largely dependent on how fast the observer can track the states and in case of ESO the disturbance f t x x w . Generally speaking faster observers are preferred. Common limiting factors in observer design include but are not limited to dependency on the state space model of the plant sensor noise and fixed sampling rate.

Dependency on the state space model can limit an application to situations where a model is available. It also makes the observer sensitive to the inaccuracies of the model and the plant dynamic changes. The sensor noise level is hardware dependent but it is reasonable to assume it is a white noise with the peak value 0.1 to 1 of the output. The observer bandwidth can be selected so that there is no significant oscillation in its states due to noises. A state observer is a closed loop system by itself and the sampling rate has similar effects on the state observer performance as it does on feedback control. Thus an example model independent state observer system is described.

Observers are typically based on mathematical models. Example systems and methods described herein can employ a model independent observer as illustrated in . For example a plant may have a controller and an observer . The controller may be implemented as a computer component and thus may be programmatically tunable. Similarly the observer may be implemented as a computer component and thus may have scaleable parameters that can be scaled programmatically. Furthermore using analogous scaling and parameterizing as described herein the parameters of the observer can be reduced to . Therefore overall optimizing of the system reduces to tuning and .

Consider a simple example for controlling a second order plant 39 where y and u are output and input respectively and w is an input disturbance. Here both parameters a and b are unknown although there is some knowledge of b e.g. b b derived from the initial acceleration of y in step response . Rewrite 39 as 40 where f adot over y by w b b u. Here f is referred to as the generalized disturbance or disturbance because it represents both the unknown internal dynamics adot over y by b b u and the external disturbance w t .

which can be reconstructed in software for example and L is the observer gain vector which can be obtained using various methods known in the art like pole placement 44 where denotes transpose. With the given state observer the control law can be given as 

This example illustrates that disturbance observer based PD control achieves zero steady state error without using the integral part of a PID controller. The example also illustrates that the design is model independent in that the design relies on the approximate value of b in 39 . The example also illustrates that the combined effects of the unknown disturbance and the internal dynamics are treated as a generalized disturbance. By augmenting the observer to include an extra state it is actively estimated and canceled out thereby achieving active disturbance rejection. This LESO based control scheme is referred to as linear active disturbance rejection control LADRC because the disturbance both internal and external represented by f is actively estimated and eliminated.

The stability of controllers can also be examined. Let e x z i 1 2 3. Combine equation 43 and 44 and subtract the combination from 42 . Thus the error equation can be written 

The LADRC design from 43 to 46 yields a BIBO stable closed loop system if the observer in 43 and 44 and the feedback control law 46 for the double integrator are stable respectively. This is shown by combing equations 45 and 47 into a state feedback form of u 1 b k k 1 z Fz where F 1 b k k 1 . Thus the closed loop system can be represented by the state space equation of

Since r is the bounded reference signal a nontrivial condition on the plant is that h dot over f is bounded. In other words the disturbance f must be differentiable.

 parameterization refers to parameterizing the ESO on observer bandwidth . Consider a plant 42 that has three poles at the origin. The related observer will be less sensitive to noises if the observer gains in 44 are small for a given . But observer gains are proportional to the distance for the plant poles to those of the observer. Thus the three observer poles should be placed at or equivalently 53 That is 3 3 54 

It is to be appreciated by one of ordinary skill in the art that equations 53 and 54 are extendable to nth order ESO. Similarly the parameterization method can be extended to the Luenberger Observer for arbitrary A B and C matrices by obtaining as observable canonical form of A B C determining the observer gain so that the poles of the observer are at and using the inverse state transformation to obtain the observer gain L for A B C. The parameters in L are functions of . One example procedure for optimization based design is now described.

Given tolerable noise thresholds in the observer states increase until at least one of the thresholds is about to be reached or the observer states become oscillatory due to sampling delay. In general the faster the ESO the faster the disturbance is observed and cancelled by the control law.

Equation 55 applies to a state feedback control system where is determined based on transient response requirements like the settling time specification. Using a transient profile instead of a step command facilitates more aggressive control design. In this example there are two bandwidths to consider the actual control loop bandwidth and the equivalent bandwidth of the transient profile . Part of the design procedure concerns selecting which of the two to use in 55 . Since the observer is evaluated on how closely it tracks the states and is more indicative than on how fast the plant states move is the better choice although it is to be appreciated that either can be employed. Furthermore taking other design issues like the sampling delay into consideration a more appropriate minimum is found through simulation and experimentation as 5 10 56 

An example for optimizing LADRC is now presented. One example LADRC design and optimization method includes designing a parameterized LESO and feedback control law where and are the design parameters. The method also includes designing a transient profile with the equivalent bandwidth of and selecting an from 56 . The method then includes setting and simulating and or testing the LADRC in a simulator. The method also includes incrementally increasing and by the same amount until the noise levels and or oscillations in the control signal and output exceed the tolerance. The method also includes incrementally increasing or decreasing and individually if necessary to make trade offs between different design considerations like the maximum error during the transient period the disturbance attenuation and the magnitude and smoothness of the controller.

In one example the simulation and or testing may not yield satisfactory results if the transient design specification described by is untenable due to noise and or sampling limitations. In this case control goals can be lowered by reducing and therefore and . It will be appreciated by one skilled in the art that this approach can be extended to Luenberg state observer based state feedback design.

By way of illustration reconsider the control problem example associated with equations 32 but apply the LADRC in 43 to 48 . Note that b 23.2 for this problem but to make the design realistic assume the designer s estimate of b is b 40. Now rewrite the plant differential equation 38 as 1.4123.2 23.2 40 4040 The LESO is

It will be appreciated by one skilled in the art that observer based design and tuning techniques can be scaled to plants of arbitrary orders. For a general nth order plant with unknown dynamics and external disturbances 57 the observer can be similarly derived starting from the state space equation

The following example method can be employed to identify a plant order and b. Given a black box plant with input u and output y the order n and bcan be estimated by allowing the plant to discharge energy stored internally so that it has a zero initial condition e.g. y 0 dot over y 0 . . . y 0 0 and then assuming f 0 0. The method includes applying a set of input signals and determining the initial slope of the response dot over y 0 0 . . . . The method also includes determining the slope y 0 that is proportional to u 0 under various tests e.g. y 0 ku 0 . Then the method includes setting n i 1 and b k.

Auto tuning concerns a press button function in digital control equipment that automatically selects control parameters. Auto tuning is conventionally realized using an algorithm to calculate the PID parameters based on the step response characteristics like overshoot and settling time. Auto tuning has application in for example the start up procedure of closed loop control e.g. commissioning an assembly line in a factory . Auto tuning can benefit from scaling and parameterization.

In some applications dynamic changes in the plant during operations are so severe that controller parameters are varied from one operating point to another. Conventionally gain scheduling is employed to handle these situations. In gain scheduling the controller gains are predetermined for different operating points and switched during operations. Additionally and or alternatively self tuning that actively adjusts control parameters based on real time data identifying dynamic plant changes is employed.

Common goals of these techniques are to make the controller parameter determination automatic given the plant response to a certain input excitation say a step function and to maintain a consistent controller performance over a wide range of operations e.g. making the controller robust .

Example systems methods and so on described herein concerning scaling and parameterization facilitate auto scaling model based controllers. When a transfer function model of a plant is available the controller can be designed using either pole placement or loop shaping techniques. Thus example scaling techniques described herein facilitate automating controller design and tuning for problems including but not limited to motion control where plants are similar differing only in dc gain and the bandwidth and adjusting controller parameters to maintain high control performance as the bandwidth and the gain of the plant change during the operation.

In the examples the plant transfer functions can be represented as s kG s where G s is given and known as the mother plant and k and are obtained from the plant response or transfer function. Assuming the design criteria are similar in nature differing only in terms of the loop gain bandwidth the controller for similar plants can be automatically obtained by scaling the given controller G s for G s . This is achieved by combining the controller scaling defined in equation 26 and parameterization to obtain the controller for s kG s as 67 

There are three parameters in 67 that are subject to tuning. The first two parameters k and represent plant changes or variations that are determined. The third parameter is tuned to maximize performance of the control system subject to practical constraints.

An example method for auto tuning is now described. The auto tuning method includes examining a plant G s and the nominal controller G s . Given the plant G s and the nominal controller G s the method includes performing off line tests to determine k and for the plant. The method also includes using equation 67 to determine a new controller for the plant s kG s obtained in the previous act. The method also includes optimizing for the new plant.

An example method for adaptive self tuning is now described. The adaptive self tuning procedure includes examining a plant s kG s where k and are subject to change during plant operation. Given the plant s kG s the method includes performing real time parameter estimation to determine k and as they change. The method also includes determining when the performance of the control system is degraded beyond a pre determined configurable threshold and updating the controller using 67 . The method also includes selectively decreasing if the plant dynamics deviate significantly from the model kG s which causes performance and stability problems. The method also includes selectively increasing subject to optimization constraints if the plant model can be updated to reflect the changes of the plant beyond k and .

The LADRC technique does not require the mathematical model of the plant. Instead it employs a rough estimate of the single parameter b in the differential equation of the plant 57 . This estimation is denoted as band is the sole plant parameter in LADRC. As the dynamics of the plant changes so does b. Thus bcan be estimated by rewriting 57 as 69 and assuming the zero initial condition e.g. y 0 0 i 1 2 . . . n 1 and f 0 0 . Then b b can be estimated by using 0 0 70 where u 0 is the initial value of the input. It is to be appreciated that this method can be applied to both open loop and closed loop configurations. For the auto tuning purposes the test can be performed off line and a step input u t constant can be applied. The LADRC does not require bto be highly accurate because the difference b b is treated as one of the sources of the disturbance estimated by LESO and cancelled by control law.

The bobtained from the off line estimation of b described above can be adapted for auto tuning LADRC. An auto tuning method includes performing off line tests to determine the order of the plant and b selecting the order and the bparameter of the LADRC using the results of the off line tests and performing a computerized auto optimization.

Using the controller scaling parameterization and optimization techniques presented herein an example computer implemented method as shown in can be employed to facilitate automatically designing and optimizing the automatic controls ADOAC for various applications. The applications include but are not limited to motion control thermal control pH control aeronautics avionics astronautics servo control and so on.

The method at accepts inputs including but not limited to information concerning hardware and software limitations like the actuator saturation limit noise tolerance sampling rate limit noise levels from sensors quantization finite word length and the like. The method also accepts input design requirements like settling time overshoot accuracy disturbance attenuation and so on. Furthermore the method also accepts as input the preferred control law form like PID form model based controller in a transfer function form and model independent LADRC form. In one example the method can indicate if the control law should be provided in a difference equation form. At a determination is made concerning whether a model is available. If a model is available then at the model is accepted either in transfer function differential equations or state space form. If a model is not available then the method may accept step response data at . Information on significant dynamics that is not modeled such as the resonant modes can also be accepted.

Once the method has received information input the method can check design feasibility by evaluating the specification against the limitations. For example in order to see whether transient specifications are achievable given the limitations on the actuator various transient profiles can be used to determine maximum values of the derivatives of the output base on which the maximum control signal can be estimated. Thus at a determination is made concerning whether the design is feasible. In one example if the design is not feasible processing can conclude. Otherwise processing can proceed to .

If the input information passes the feasibility test then at the method can determine an parameterized solution in one or more formats. In one example the solution can then be simulated at to facilitate optimizing the solution.

In one example to assist an engineer or other user the ADOAC method provides parameterized solutions of different kind order and or forms as references. The references can then be ranked separately according to simplicity command following quality disturbance rejection and so on to facilitate comparison.

The bus can be a single internal bus interconnect architecture and or other bus architectures. The bus can be of a variety of types including but not limited to a memory bus or memory controller a peripheral bus or external bus and or a local bus. The local bus can be of varieties including but not limited to an industrial standard architecture ISA bus a microchannel architecture MSA bus an extended ISA EISA bus a peripheral component interconnect PCI bus a universal serial USB bus and a small computer systems interface SCSI bus.

The computer interacts with input output devices via input output ports . Input output devices can include but are not limited to a keyboard a microphone a pointing and selection device cameras video cards displays and the like. The input output ports can include but are not limited to serial ports parallel ports and USB ports.

The computer can operate in a network environment and thus is connected to a network by a network interface . Through the network the computer may be logically connected to a remote computer . The network can include but is not limited to local area networks LAN wide area networks WAN and other networks. The network interface can connect to local area network technologies including but not limited to fiber distributed data interface FDDI copper distributed data interface CDDI ethernet IEEE 802.3 token ring TREE 802.5 and the like. Similarly the network interface can connect to wide area network technologies including but not limited to point to point links and circuit switching networks like integrated services digital networks ISDN packet switching networks and digital subscriber lines DSL .

Referring now to information can be transmitted between various computer components associated with controller scaling and parameterization described herein via a data packet . An exemplary data packet is shown. The data packet includes a header field that includes information such as the length and type of packet. A source identifier follows the header field and includes for example an address of the computer component from which the packet originated. Following the source identifier the packet includes a destination identifier that holds for example an address of the computer component to which the packet is ultimately destined. Source and destination identifiers can be for example globally unique identifiers guids URLS uniform resource locators path names and the like. The data field in the packet includes various information intended for the receiving computer component. The data packet ends with an error detecting and or correcting field whereby a computer component can determine if it has properly received the packet . While six fields are illustrated in the data packet it is to be appreciated that a greater and or lesser number of fields can be present in data packets.

Referring now to an application programming interface API is illustrated providing access to a system for controller scaling and or parameterization. The API can be employed for example by programmers and or processes to gain access to processing performed by the system . For example a programmer can write a program to access the system e.g. to invoke its operation to monitor its operation to access its functionality where writing a program is facilitated by the presence of the API . Thus rather than the programmer having to understand the internals of the system the programmer s task is simplified by merely having to learn the interface to the system . This facilitates encapsulating the functionality of the system while exposing that functionality. Similarly the API can be employed to provide data values to the system and or retrieve data values from the system .

For example a process that retrieves plant information from a data store can provide the plant information to the system and or the programmers via the API by for example using a call provided in the API . Thus in one example of the API a set of application program interfaces can be stored on a computer readable medium. The interfaces can be executed by a computer component to gain access to a system for controller scaling and parameterization. Interfaces can include but are not limited to a first interface that facilitates communicating controller information associated with ND production a second interface that facilitates communicating plant information associated with PID production and a third interface that facilitates communicating frequency scaling information generated from the plant information and the controller information.

The systems methods and objects described herein may be stored for example on a computer readable media. Media can include but are not limited to an ASIC a CD a DVD a RAM a ROM a PROM a disk a carrier Wave a memory stick and the like. Thus an example computer readable medium can store computer executable instructions for one or more of the claimed methods.

What has been described above includes several examples. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems methods computer readable media and so on employed in scaling and parameterizing controllers. However one of ordinary skill in the art may recognize that further combinations and permutations are possible. Accordingly this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims. Furthermore the preceding description is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined only by the appended claims and their equivalents.

While the systems methods and so on herein have been illustrated by describing examples and while the examples have been described in considerable detail it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. Additional advantages and modifications will be readily apparent to those skilled in the art. Therefore the invention in its broader aspects is not limited to the specific details the representative apparatus and illustrative examples shown and described. Accordingly departures may be made from such details without departing from the spirit or scope of the applicant s general inventive concept.

