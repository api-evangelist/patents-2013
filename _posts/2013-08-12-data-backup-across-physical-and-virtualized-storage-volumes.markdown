---

title: Data backup across physical and virtualized storage volumes
abstract: Machines, systems and methods for backing up data, the method comprising retrieving identifying information about target data storage volumes from which target data is to be backed up; communicating the identifying information to a proxy application installed on a backup computing system utilized to backup the target data stored on the target data storage volumes, wherein the proxy application uses the identifying information to place the target data storage volumes in a first state in which write operations may not be performed to the target data storage volumes, wherein the proxy application causes snapshots to be taken of the target data storage volumes of a first type and a second type, in response to determining that the target data storage volumes are placed in the first state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09262448&OS=09262448&RS=09262448
owner: International Business Machines Corporation
number: 09262448
owner_city: Armonk
owner_country: US
publication_date: 20130812
---
A portion of the disclosure of this patent document may contain material which is subject to copyright protection. The owner has no objection to the facsimile reproduction by any one of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyrights whatsoever.

Certain marks referenced herein may be common law or registered trademarks of the applicant the assignee or third parties affiliated or unaffiliated with the applicant or the assignee. Use of these marks is for providing an enabling disclosure by way of example and shall not be construed to exclusively limit the scope of the disclosed subject matter to material associated with such marks.

The disclosed subject matter relates generally to data backup systems and more particularly to a system and method for enabling consistent data backup across virtualized and physical data storage volumes.

Most currently available data backup tools don t have the capability to backup data storage volumes that reside on virtual disks along with related or counterpart data storage volumes that reside on physical disks in a synchronized manner. That is most data backup tools use two different mechanisms one to backup data from the virtual volumes and another to backup data from the physical volumes respectively.

In other words the backup e.g. snapshot operations performed on the virtual volumes and the physical volumes are performed in two separate operations. This means that the backup copies will not be consistent i.e. not copied at the exact same point in time because the currently available backup mechanisms are unable to synchronously perform the snapshot operations on both the virtual volumes and the physical volumes at the same time.

For example consider a scenario where mapped drives C and D reside on virtual disks and drive E on a physical disk. If a SQL application is installed on drive C the SQL database on drive D and the related SQL logs on drive E then the backups performed on the volumes across the virtual and physical domains would not be synchronized.

For purposes of summarizing certain aspects advantages and novel features have been described herein. It is to be understood that not all such advantages may be achieved in accordance with any one particular embodiment. Thus the disclosed subject matter may be embodied or carried out in a manner that achieves or optimizes one advantage or group of advantages without achieving all advantages as may be taught or suggested herein.

In accordance with one embodiment machines systems and methods for backing up data are provided. The method comprises retrieving identifying information about target data storage volumes from which target data is to be backed up communicating the identifying information to a proxy application installed on a backup computing system utilized to backup the target data stored on the target data storage volumes wherein the proxy application uses the identifying information to place the target data storage volumes in a first state in which write operations may not be performed to the target data storage volumes wherein the proxy application causes snapshots to be taken of the target data storage volumes of a first type and a second type in response to determining that the target data storage volumes are placed in the first state.

In accordance with one or more embodiments a system comprising one or more logic units is provided. The one or more logic units are configured to perform the functions and operations associated with the above disclosed methods. In yet another embodiment a computer program product comprising a computer readable storage medium having a computer readable program is provided. The computer readable program when executed on a computer causes the computer to perform the functions and operations associated with the above disclosed methods.

One or more of the above disclosed embodiments in addition to certain alternatives are provided in further detail below with reference to the attached figures. The disclosed subject matter is not however limited to any particular embodiment disclosed.

Features elements and aspects that are referenced by the same numerals in different figures represent the same equivalent or similar features elements or aspects in accordance with one or more embodiments.

In the following numerous specific details are set forth to provide a thorough description of various embodiments. Certain embodiments may be practiced without these specific details or with some variations in detail. In some instances certain features are described in less detail so as not to obscure other aspects. The level of detail associated with each of the elements or features should not be construed to qualify the novelty or importance of one feature over the others.

In accordance with one embodiment it may be desirable to back up a software application that writes data to both virtual data storage volumes and physical data storage volumes. The virtual volumes may be supported by a hypervisor e.g. VMWare and the physical volumes may be supported by a controller e.g. via Raw Device Mapping or RDM . RDM is an option in the VMware server virtualization environment that enables a storage logical unit number LUN to be directly connected to a virtual machine VM from a storage area network SAN .

In the examples provided below a backup client may use a volume shadow copy service VSS to take a snapshot of the virtual volumes and use a flash copy manager FCM to perform a snapshot of the physical volumes. The VSS provides the backup infrastructure for an operating system as well as a mechanism for creating consistent point in time copies of data known as shadow copies. VSS may be used to produce consistent manual or automatic backup copies or snapshots of data.

In one implementation the backup system may comprise a proxy that communicates with the backup client as well as a VSS provider splitter VPS . The proxy is implemented to receive commands issued by the backup client e.g. commands to freeze and unfreeze the virtual machine environment so that write access to the virtual volumes and the physical volumes are controlled . The proxy interprets the commands received from the backup client and communicates with the VPS and the physical volume controller e.g. FCM .

VPS in turn communicates with the VSS framework to freeze writes to the virtual volumes and to perform a snapshot of the virtual volumes. The proxy communicates with the physical volume controller e.g. FCM to block writes to the physical volume and take a snapshot of the physical volume at the same state as the snapshot taken from the virtual volumes. In this manner the snapshots take from both the physical and the virtual volumes are in the same state.

In other words the command to freeze write operations to both the physical volume and the virtual volumes is issued by the backup client and serviced by the proxy at the same time. Therefore even if the actual snapshots of both the physical and the virtual volumes may not be taken at exactly the same time the data in the snapshots is from the same state. After the snapshots are taken then access to both the physical and the virtual volumes is released.

Referring to a more detailed implementation of one or more embodiments is provided below to explain the concepts features and options generally disclosed above in a higher level of detail. It is noteworthy however that the details disclosed below are for the purpose of providing a better understanding of the example embodiments and such details in no way should be construed as limiting the general scope of the claimed subject matter to specific details.

Referring to an example embodiment is illustrated in which VM disk information e.g. disk numbers and disk types is requested by the backup client from the virtual center server vCenter Server . Client may be running on top of a client machine . In one embodiment virtual center server may communicate with a virtualized computing system such as ESX which is an enterprise level computer virtualization product offered by VMware Inc.

Referring to an example embodiment is illustrated in which the backup client injects and installs a FCM on a workstation e.g. VMWare workstation wherein the FCM is configured to take snapshots of different hardware storage device e.g. Raw Devices . FCM hardware provider is a software component in the FCM and may be utilized to perform a snapshot of the physical i.e. hardware storage.

Referring to an example embodiment is illustrated in which the backup client injects and installs proxy and VPS files wherein the proxy is configured to communicate with the backup client and freeze a selected data volume by communicating with the VSS framework . The proxy desirably supports the VSS framework and FCM installer such that using VMware application programming interface API the backup client may install FCM . In one embodiment VM disk information e.g. disk numbers and disk types i.e. virtual or physical that were requested by the backup client from the virtual center server are provided to the proxy so that the proxy may match one or more target volumes on the VSS provider that may be used to perform the snapshot operation on the target volumes.

Referring to an example embodiment is illustrated in which the backup client issues a freeze writers command to the proxy to cause the VPS to stop the applications that are writing to the virtual disks e.g. VSS writers from writing to the virtual disks. The proxy may update the VSS framework with the VM disk information and submit a freeze command to place the data volume in a frozen state. The VPS is configured to allow the backup client to communicate with both the hardware device managers and the VSS framework so that both the virtual volumes and the hardware storage devices are locked preventing any further writes to either the virtual data volumes or physical data volumes.

Referring to the backup client submits a request to perform snapshots of both the virtual volumes and the physical volumes once the data volumes are in a frozen state. It is noteworthy that since both the physical volumes and the virtual volumes are frozen at the same time the taken snapshot of both types of volumes are consistent even if the actual snapshots are not taken exactly at the same time. In one embodiment using the VPS which may be implemented as a part of the proxy the snapshot of the physical disks e.g. pRDM are taken e.g. using FCM installed on workstation and the snapshot of the virtual disks are taken via VMware infrastructure e.g. using VSS provider .

Referring to once the snapshot operations on the physical and virtual volumes in the frozen state is completed then the backup client issues a thaw request for the proxy to ask the VSS framework to release the locks on the virtual and physical volumes so that the volumes are removed from the frozen state and data may be written to the volumes.

Referring to without limitation in an example embodiment implemented using VMWare vStorage API and pRDM type physical storage volumes the following process may be utilized to backup data stored on the virtual storage volumes and the physical e.g. pRDM volumes 

References in this specification to an embodiment one embodiment one or more embodiments or the like mean that the particular element feature structure or characteristic being described is included in at least one embodiment of the disclosed subject matter. Occurrences of such phrases in this specification should not be particularly construed as referring to the same embodiment nor should such phrases be interpreted as referring to embodiments that are mutually exclusive with respect to the discussed features or elements.

In different embodiments the claimed subject matter may be implemented as a combination of both hardware and software elements or alternatively either entirely in the form of hardware or entirely in the form of software. Further computing systems and program software disclosed herein may comprise a controlled computing environment that may be presented in terms of hardware components or logic code executed to perform methods and processes that achieve the results contemplated herein. Said methods and processes when performed by a general purpose computing system or machine convert the general purpose machine to a specific purpose machine.

Referring to a computing system environment in accordance with an exemplary embodiment may be composed of a hardware environment and a software environment . The hardware environment may comprise logic units circuits or other machinery and equipments that provide an execution environment for the components of software environment . In turn the software environment may provide the execution instructions including the underlying operational settings and configurations for the various components of hardware environment .

Referring to the application software and logic code disclosed herein may be implemented in the form of machine readable code executed over one or more computing systems represented by the exemplary hardware environment . As illustrated hardware environment may comprise a processor coupled to one or more storage elements by way of a system bus . The storage elements for example may comprise local memory storage media cache memory or other machine usable or computer readable media. Within the context of this disclosure a machine usable or computer readable storage medium may include any recordable article that may be utilized to contain store communicate propagate or transport program code.

A computer readable storage medium may be an electronic magnetic optical electromagnetic infrared or semiconductor medium system apparatus or device. The computer readable storage medium may also be implemented in a propagation medium without limitation to the extent that such implementation is deemed statutory subject matter. Examples of a computer readable storage medium may include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk an optical disk or a carrier wave where appropriate. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W digital video disk DVD high definition video disk HD DVD or Blue Ray disk.

In one embodiment processor loads executable code from storage media to local memory . Cache memory optimizes processing time by providing temporary storage that helps reduce the number of times code is loaded for execution. One or more user interface devices e.g. keyboard pointing device etc. and a display screen may be coupled to the other elements in the hardware environment either directly or through an intervening I O controller for example. A communication interface unit such as a network adapter may be provided to enable the hardware environment to communicate with local or remotely located computing systems printers and storage devices via intervening private or public networks e.g. the Internet . Wired or wireless modems and Ethernet cards are a few of the exemplary types of network adapters.

It is noteworthy that hardware environment in certain implementations may not include some or all the above components or may comprise additional components to provide supplemental functionality or utility. Depending on the contemplated use and configuration hardware environment may be a machine such as a desktop or a laptop computer or other computing device optionally embodied in an embedded system such as a set top box a personal digital assistant PDA a personal media player a mobile communication unit e.g. a wireless phone or other similar hardware platforms that have information processing or data storage capabilities.

In some embodiments communication interface acts as a data communication port to provide means of communication with one or more computing systems by sending and receiving digital electrical electromagnetic or optical signals that carry analog or digital data streams representing various types of information including program code. The communication may be established by way of a local or a remote network or alternatively by way of transmission over the air or other medium including without limitation propagation over a carrier wave.

As provided here the disclosed software elements that are executed on the illustrated hardware elements are defined according to logical or functional relationships that are exemplary in nature. It should be noted however that the respective methods that are implemented by way of said exemplary software elements may be also encoded in said hardware elements by way of configured and programmed processors application specific integrated circuits ASICs field programmable gate arrays FPGAs and digital signal processors DSPs for example.

Referring to software environment may be generally divided into two classes comprising system software and application software as executed on one or more hardware environments . In one embodiment the methods and processes disclosed here may be implemented as system software application software or a combination thereof. System software may comprise control programs such as an operating system OS or an information management system that instruct one or more processors e.g. microcontrollers in the hardware environment on how to function and process information. Application software may comprise but is not limited to program code data structures firmware resident software microcode or any other form of information or routine that may be read analyzed or executed by a processor .

In other words application software may be implemented as program code embedded in a computer program product in form of a machine usable or computer readable storage medium that provides program code for use by or in connection with a machine a computer or any instruction execution system. Moreover application software may comprise one or more computer programs that are executed on top of system software after being loaded from storage media into local memory . In a client server architecture application software may comprise client software and server software. For example in one embodiment client software may be executed on a client computing system that is distinct and separable from a server computing system on which server software is executed.

Software environment may also comprise browser software for accessing data available over local or remote computing networks. Further software environment may comprise a user interface e.g. a graphical user interface GUI for receiving user commands and data. It is worthy to repeat that the hardware and software architectures and environments described above are for purposes of example. As such one or more embodiments may be implemented over any type of system architecture functional or logical platform or processing environment.

It should also be understood that the logic code programs modules processes methods and the order in which the respective processes of each method are performed are purely exemplary. Depending on implementation the processes or any underlying sub processes and methods may be performed in any order or concurrently unless indicated otherwise in the present disclosure. Further unless stated otherwise with specificity the definition of logic code within the context of this disclosure is not related or limited to any particular programming language and may comprise one or more modules that may be executed on one or more processors in distributed non distributed single or multiprocessing environments.

As will be appreciated by one skilled in the art a software embodiment may include firmware resident software micro code etc. Certain components including software or hardware or combining software and hardware aspects may generally be referred to herein as a circuit module or system. Furthermore the subject matter disclosed may be implemented as a computer program product embodied in one or more computer readable storage medium s having computer readable program code embodied thereon. Any combination of one or more computer readable storage medium s may be utilized. The computer readable storage medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing.

In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device. A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable storage medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out the disclosed operations may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages.

The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Certain embodiments are disclosed with reference to flowchart illustrations or block diagrams of methods apparatus systems and computer program products according to embodiments. It will be understood that each block of the flowchart illustrations or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer a special purpose machinery or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions or acts specified in the flowchart or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable storage medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable storage medium produce an article of manufacture including instructions which implement the function or act specified in the flowchart or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer or machine implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions or acts specified in the flowchart or block diagram block or blocks.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical functions. It should also be noted that in some alternative implementations the functions noted in the block may occur in any order or out of the order noted in the figures.

For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams or flowchart illustration and combinations of blocks in the block diagrams or flowchart illustration may be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The claimed subject matter has been provided here with reference to one or more features or embodiments. Those skilled in the art will recognize and appreciate that despite of the detailed nature of the exemplary embodiments provided here changes and modifications may be applied to said embodiments without limiting or departing from the generally intended scope. These and various other adaptations and combinations of the embodiments provided here are within the scope of the disclosed subject matter as defined by the claims and their full set of equivalents.

