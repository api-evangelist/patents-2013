---

title: Cloud computing gateway, cloud computing hypervisor, and methods for implementing same
abstract: Embodiments of the present invention provide a cloud gateway system, a cloud hypervisor system, and methods for implementing same. The cloud gateway system extends the security, manageability, and quality of service membrane of a corporate enterprise network into cloud infrastructure provider networks, enabling cloud infrastructure to be interfaced as if it were on the enterprise network. The cloud hypervisor system provides an interface to cloud infrastructure provider management systems and infrastructure instances that enables existing enterprise systems management tools to manage cloud infrastructure substantially the same as they manage local virtual machines via common server hypervisor APIs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09658868&OS=09658868&RS=09658868
owner: CSC Agility Platform, Inc.
number: 09658868
owner_city: Falls Church
owner_country: US
publication_date: 20130722
---
This application is a continuation of U.S. patent application Ser. No. 12 488 424 filed Jun. 19 2009 claims the benefit of and incorporates by reference U.S. Provisional Application No. 61 074 027 filed on Jun. 19 2008 and entitled Cloud Computing Gateway and Cloud Computing Hypervisor. 

The present invention pertains generally to the field of cloud computing. More particularly the invention pertains to systems and methods for managing cloud infrastructure and communicating with cloud provisioning and management tools.

Companies have begun offering businesses a new cloud computing outsourcing option that promises reduced costs improved availability improved scalability and reduced time to deploy new applications. These companies act as managed service providers that rent virtual computer storage and Internet connectivity services for variable periods on a pay per use basis from large pools of repurposable multi tenant computing resources. Such cloud infrastructure providers include Amazon Web Services Joyent and Mosso.

Many businesses however are currently unable to use cloud infrastructure because of a lack of security control and manageability of the computing capacity rented from the cloud infrastructure providers. These problems prevent such businesses from maximizing their use of cloud infrastructure which includes virtual server instances storage and Internet bandwidth. In particular many enterprise IP networks deploy a protective control layer or enterprise network membrane to repel external threats detect intrusions authorize access govern and audit activity and ensure manageability. Unless the business has an administrator or other agent working with the cloud infrastructure provider the enterprise network membrane does not extend to the cloud infrastructure.

It thus should be appreciated from the foregoing description that there is a need for an improved system and method for managing cloud infrastructure and communicating with cloud provisioning and management tools that addresses the difficulties described above. The present invention satisfies this need and provides further related advantages.

In accordance with an embodiment the present invention provides a cloud gateway system a cloud hypervisor system and methods for implementing same. The cloud gateway system extends the security manageability and quality of service QoS membrane of a corporate enterprise network into cloud infrastructure provider networks enabling cloud infrastructure to be interfaced as if it were on the enterprise network. The cloud hypervisor system provides an interface to cloud infrastructure provider management systems and infrastructure instances that enables existing enterprise systems management tools to manage cloud infrastructure substantially the same as they manage local virtual machines via common server hypervisor APIs application programming interfaces .

Thus an embodiment of the invention provides a technology that enables cloud infrastructure to be addressable by users and administrators of on premises software systems and systems management systems as though the cloud infrastructure were resident in private enterprise datacenters on the business private enterprise networks. The technology allows businesses to take advantage of commercial cloud infrastructure without unduly sacrificing security control and manageability and without an administrator or other agent to work with the cloud infrastructure provider.

Other features and advantages of the present invention should become apparent from the following description of the preferred embodiments taken in conjunction with the accompanying drawings which illustrate by way of example the principles of the invention.

The following description is provided to enable any person skilled in the art to make and use the invention. Various modifications to the embodiments are possible and the generic principles defined herein may be applied to these and other embodiments and applications without departing from the spirit and scope of the invention. Thus the invention is not intended to be limited to the embodiments and applications shown but is to be accorded the widest scope consistent with the principles features and teachings disclosed herein.

Referring now to the drawings and particularly to there is shown a block diagram of a network system in accordance with an embodiment of the present invention. The network system comprises an enterprise network at least one cloud provider network and a wide area public network such as the Internet that connects the enterprise network to the cloud provider network . One or more mobile end user devices may optionally be connected via the public network to the cloud provider network . Although show only one cloud provider network it will be appreciated that the enterprise network may be connected to a plurality of cloud provider networks.

The enterprise network comprises a plurality of network end user devices an enterprise gateway appliance and a cloud hypervisor system which will be described in further detail below. The enterprise gateway appliance may be configured as a physical appliance as installable software or as a virtual appliance instance such as an application software stack packaged as a virtual machine VM . Multiple enterprise gateway appliances on the same enterprise network can work together to provide redundancy from single appliance failure and scalability to manage increased throughput. The cloud hypervisor system may be coupled to a cloud hypervisor database . The cloud hypervisor system may optionally be configured as a plug in to the enterprise gateway appliance or omitted altogether as shown in as the circumstances warrant.

The cloud provider network comprises a plurality of virtual machines . The virtual machines are software implementations of a computer that can be deployed by a hypervisor system and execute programs similar to a physical computer. One or more of the virtual machines are configured as remote gateway nodes . Multiple remote gateway nodes work together to provide redundancy from single node failure and scalability to support increased throughput. Enterprise gateway appliances in multiple enterprise networks and remote gateway nodes in multiple cloud provider networks can all work together in a mesh to create an overlay virtual private network with associated plug in network services that spans a plurality of enterprise networks and cloud networks in a secure and redundant manner.

In one embodiment the enterprise gateway appliance includes hardware software and or firmware generally operative to upload remote gateway software for the remote gateway nodes to the cloud provider network and to install the remote gateway software on one or more virtual machines . The enterprise gateway appliance also includes hardware software and or firmware generally operative to establish a secure virtual private network VPN over the public network connecting the enterprise gateway appliance to the remote gateway nodes and subsequently to the enterprise virtual machines . Once the virtual private network has been established the enterprise gateway appliance functions as the primary ingress and egress point for all network traffic traveling between the enterprise network and the cloud provider network . The enterprise gateway appliance may be coupled to an enterprise gateway database capable of storing the remote gateway software for the remote gateway nodes . A pluggable network services layer may be provided by the enterprise gateway appliance supporting plug ins such as virtual private network network address translation NAT routing firewall load balancing caching wide area network WAN acceleration intrusion detection and intrusion prevention services IPS denial of service detection and remediation network access control SSL acceleration logfile aggregation and policy based governance and auditing of user and administrative actions.

In one embodiment the remote gateway nodes include hardware software and or firmware generally operative to establish secure encrypted connections to open VPN agents on one or more virtual machines thus converting these virtual machines into enterprise virtual machines in the cloud provider network . The remote gateway nodes are deployed from the remote gateway software uploaded over the public network from the enterprise gateway appliance and are configured as virtual appliances that run on one or more virtual machines in the cloud provider network . Once installed the remote gateway nodes maintain the virtual private network with the enterprise gateway appliance and the enterprise virtual machines in the cloud provider network . The remote gateway nodes thus establish an extended enterprise network membrane around the enterprise virtual machines . The remote gateway nodes also host the remote components of plug in network services that must be local to the cloud infrastructure. Further the remote gateway nodes may comprise a remote gateway database see capable of storing the remote gateway software configuration and state as well as software configuration and state for the remote components of the plug in network services .

In one embodiment the mobile end user device includes hardware software and or firmware generally operative to establish a secure mobile virtual private network between the mobile end user device and the remote gateway nodes and to provide other pluggable network services for the mobile end user device . The mobile virtual private network may be established by a client access agent see residing on the mobile end user device . The client access agent enables individual users to access limited cloud services through direct communication with the remote gateway nodes over the public network without going through the enterprise gateway appliance . The mobile end user device may be a laptop computer a desktop computer a personal digital assistant PDA such as the BlackBerry Smartphone by Research in Motion a cellular phone or any other computing system or device configured to be connected to a public network. The mobile end user device may be coupled to a mobile end user database capable of storing software for the pluggable network services.

The enterprise gateway appliance and remote gateway nodes thus function to provide a virtual private network overlay connecting one or more private enterprise networks to one or more cloud provider networks. Because the remote gateway nodes extend the enterprise network membrane around the enterprise virtual machines in the cloud provider networks the enterprise virtual machines appear and behave as if they were part of the private enterprise networks without substantial reduction in the security or manageability of the enterprise network. The enterprise gateway appliance and remote gateway nodes provide the necessary services to help in ensuring that the privacy security availability quality of service and manageability of the enterprise network is extended to the enterprise virtual machines in the cloud provider network.

With reference to there is shown a block diagram of a computer system . Each of the mobile end user devices network end user devices enterprise gateway appliance cloud hypervisor system and remote gateway nodes may be an instance of the computer system . In other embodiments each of these elements along with the virtual machines and enterprise virtual machines may be configured as a software implementation running on one or more computer systems .

The computer system includes a processor such as an Intel Pentium . microprocessor or a Motorola Power PC microprocessor coupled to a communications channel . The computer system further includes an input device such as a keyboard or mouse an output device such as a liquid crystal display or a cathode ray tube display a communication interface a data storage device such as a magnetic or optical disk and memory such as random access memory RAM each coupled to the communications channel . The communication interface may be coupled to the enterprise network a cloud provider network and or the wide area public network . One skilled in the art will recognize that although the data storage device and memory are shown as different units the data storage device and memory may be parts of the same unit distributed units virtual memory etc. Further it will be appreciated that the term memory herein is intended to cover all data storage media whether permanent or temporary.

The data storage device and or the memory may also store an operating system not shown such as Microsoft Windows Vista Linux the IBM OS 2 operating system the MAC OS or the UNIX operating system. It will be appreciated that embodiments of the present invention may also be implemented on platforms and operating systems other than those mentioned. An embodiment of the present invention may be written using JAVA C C language and or other programming languages possibly using object oriented programming methodology. The present invention may be built on Ruby on Rails or using Ajax.

One skilled in the art will recognize that the computer system may also include additional components such as network connections additional memory additional processors local area networks LANs and input output lines for transferring information across a hardware channel the Internet or an intranet. One skilled in the art will also recognize that the programs and data may be received by and stored in the computer system in alternative ways. For example a computer readable storage medium CRSM reader such as a magnetic disk drive hard disk drive magneto optical reader or CPU may be coupled to the communications channel for reading a computer readable storage medium CRSM such as a magnetic disk a hard disk a magneto optical disk or RAM. Accordingly the central server may receive programs and or data via the CRSM reader.

With reference to there is shown a block diagram of an enterprise gateway system in accordance with an embodiment of the present invention. The enterprise gateway system may be implemented on the enterprise gateway appliance . The enterprise gateway system includes a remote software installer and an enterprise network services tool . The remote software installer includes hardware software and or firmware generally operative to upload the remote gateway software for the remote gateway nodes to the cloud provider network and to install the remote gateway software on one or more virtual machines . The enterprise network services tool includes hardware software and or firmware generally operative to establish the secure and redundant virtual private network with multiple remote gateway nodes multiple enterprise gateways appliances and multiple enterprise virtual machines over the public network and to provide other network services supported by the plug ins .

The enterprise gateway system may be coupled to an enterprise gateway database such as the enterprise gateway database shown in . The enterprise gateway database comprises a software database that stores the remote gateway software for the remote gateway nodes a plug ins database that stores software for the plug ins and a client database that stores enterprise virtual machine client data such as connection state routing tables credentials and consolidated log files required to manage the VPN and pluggable network services .

With reference to there is shown a block diagram of a remote gateway system in accordance with an embodiment of the present invention. The remote gateway system may be implemented on the remote gateway nodes . The remote gateway system includes a virtual machine connection tool and a remote network services tool . The virtual machine connection tool includes hardware software and or firmware generally operative to establish enterprise virtual machines in the cloud provider network and extending the enterprise network membrane around the enterprise virtual machines . The remote network services tool includes hardware software and or firmware generally operative to maintain the secure virtual private network from the enterprise gateway appliance over the public network to the enterprise virtual machines in the cloud network provider and to execute the remote components of the plug in network services that must be local to the cloud infrastructure.

The remote gateway system may be coupled to a remote gateway database such as the remote gateway database shown in . The remote gateway database may be implemented on the remote gateway nodes . The remote gateway database comprises a software database that stores the remote gateway software a plug ins database that stores software for the pluggable network services provided by the remote network services tool and a client database that stores enterprise virtual machine client data such as connection state routing tables credentials and consolidated log files required to manage the VPN and pluggable network services .

With reference to there is shown a block diagram of a client access agent in accordance with an embodiment of the present invention. The client access agent may be implemented on a mobile end user device . The client access agent includes a mobile network services tool . The mobile network services tool includes hardware software and or firmware generally operative to establish the secure mobile virtual private network over the public network and to provide other pluggable network services for the mobile end user device .

The client access agent may be coupled to a mobile end user database such as the mobile end user database shown in . The mobile end user database comprises a plug ins database that stores software for the pluggable network services provided by the mobile network services tool and a client database that stores virtual machine client data such as connection state routing tables credentials and consolidated log files required to manage the VPN and pluggable network services.

With reference to there is shown a block diagram of a first embodiment of a cloud hypervisor system in accordance with an embodiment of the present invention. The cloud hypervisor system includes a set of front end plug ins a service bus and a set of back end plug ins .

Each front end plug in includes hardware software and or firmware generally operative to establish one or more pseudo hypervisor instances to expose the pseudo hypervisor instances to the enterprise network to listen for and receive hypervisor API calls from enterprise systems management tools to translate received hypervisor API calls into intermediate representations and to place the intermediate representations on the service bus as a transaction. For each transaction issued to the service bus a response code will be returned to the pseudo hyper visor that will be passed back to the calling enterprise systems management tool . In general a server hypervisor is a low level computer operating system configured to emulate one or more physical systems to create one or more virtual machines each virtual machine capable of hosting a high level computer operating system like Microsoft Windows or Linux. A server hypervisor thus functions to enable multiple high level computer operating systems to share a single physical computer system without interfering with each other. Commercial examples of server hypervisors include VMWare ESX server Microsoft Hyper V and Citrix XenServer. Instances are referred to as pseudo hypervisor instances because the front end plug in is emulating the provisioning and management interfaces of a commercial server hypervisor effectively tricking the enterprise systems management tools into believing that they are communicating with a common commercial server hypervisor instead of the cloud hypervisor system .

In one embodiment each server hypervisor API supported on the enterprise network has a corresponding front end plug in . In general a hypervisor exposes a management API that is used by provisioning and management tools to monitor the virtual machines associated with the hypervisor and to instruct the hypervisor to create destroy or change the state of the virtual machines. Thus in one embodiment there is one front end plug in for each supported server hypervisor API. It will be appreciated that in other embodiments only some of the supported server hypervisor APIs will have a corresponding front end plug in .

Each front end plug in thus is configured to expose one or more unique pseudo hypervisor instances to the enterprise network to translate each received hypervisor API call into an intermediate representation and to place the intermediate representation on the service bus as a transaction. Once the transaction has been executed by the service bus the service bus will return a result code to the pseudo hypervisor indicating the state of the transaction for response to the calling enterprise systems management tool . In one embodiment each pseudo hypervisor instance is associated with a single account at a cloud provider. In other embodiments a pseudo hypervisor instance may be associated with a plurality of cloud provider accounts and a cloud provider account may be associated with a plurality of pseudo hypervisor instances .

The set of front end plug ins may also comprise a web console that graphically exposes cloud infrastructure management functions and a topology manager that includes infrastructure topology creation and deployment tools. The web console and topology manager plug into the service bus and either issue instructions directly using the intermediate representation or translate their API calls into intermediate representations so that they can interact with any supported cloud infrastructure through the service bus and back end plug ins .

The service bus includes hardware software and or firmware generally operative to route each intermediate representation from a front end plug in to an appropriate back end plug in . Each intermediate representation is a generic representation that can be understood by any of the back end plug ins . In one embodiment a destination parameter is passed with each intermediate representation indicating the cloud provider network account to which the intermediate representation should ultimately be routed. In other embodiments the destination parameter indicates the route to the back end plug in to which the intermediate representation should proximately be routed. Routing the intermediate representation is implemented by the service bus as a transaction through the backend plug in . The service bus is responsible for ensuring the success of the cloud API call and collecting remediating and reporting any events that occur during the execution of the cloud API call . Upon successful or failed completion of the cloud API call the service bus is responsible for generating and routing a response code back to the calling pseudo hypervisor in an intermediate representation.

Each back end plug in includes hardware software and or firmware generally operative to translate an intermediate representation into a cloud API call . In one embodiment each unique supported cloud provider network account such as the EC2 cloud provider network account the Rackspace cloud provider network account and the Sungard cloud provider network account has a unique API and a corresponding back end plug in . It will be appreciated that in other embodiments each unique supported cloud provider network account might have a plurality of corresponding back end plug ins or one back end plug in might support a plurality of cloud provider network accounts. It will also be appreciated that one or more back end plug ins could be configured to translate an intermediate representation into the API for a local cloud such as local cloud . The back end plug in is responsible for executing the transaction specified by the intermediate representation validating success of the transaction collecting events from the cloud API and reporting the final state of the transaction back to the service bus .

The cloud hypervisor system thus acts as a proxy between enterprise systems management tools that are instrumented to work with server hypervisor APIs and the APIs provided by cloud provisioning and management tools or cloud infrastructure providers. The cloud hypervisor system functions to generalize the interface to all cloud infrastructure provisioning and management systems and services by emulating the widely supported provisioning and management interfaces of popular server hypervisors such as Xen VMWare ESX and Microsoft Hyper V. In one embodiment the cloud hypervisor system enables enterprise systems management tools such as VMWare Virtual Center and Lab Manager Microsoft SCVMM Citrix XenCentcr BMC Bladelogic IBM Tivoli Provisioning Manager Novell Platespin VMLogix LabManager Surgient and Scalent to interact with cloud infrastructure management APIs such as those of Amazon Web Services Rackspace IBM Blue Cloud Google AppEngine 3tera AppLogic Sun VMWare vCloud Citrix C3 and Eucalyptus . The cloud hypervisor system does this by emulating server hypervisor APIs making the enterprise systems management tools believe they are communicating with a common server hypervisor but then translating the server hypervisor API calls into equivalent cloud API calls. The cloud hypervisor system emulates as much of each server hypervisor s API as is required to satisfy the requirements of known enterprise systems management tools. Emulated operations may include but are not limited to discover create delete start stop suspend resume get configuration set configuration and get state.

The cloud hypervisor system may be coupled to a cloud hypervisor database such as the cloud hypervisor database shown in . The cloud hypervisor database comprises a front end plug in database that stores software for set of front end plug ins and a back end plug in database that stores software for the set of back end plug ins as well as execution data such as execution logs credentials and execution state.

With reference to there is shown a block diagram showing the interaction between a cloud hypervisor system and a cloud gateway system . The elements of the cloud hypervisor system correspond to the elements of the cloud hypervisor system except that in the web console and topology manager are shown as tools that are distinct from the cloud hypervisor system .

In particular the cloud hypervisor system includes a set of front end plug ins a service bus and a set of back end plug ins . Each front end plug in includes hardware software and or firmware generally operative to establish a set of pseudo hypervisor instances to expose the pseudo hypervisor instances to the enterprise network to listen for and receive hypervisor API calls from enterprise systems management tools to translate received hypervisor API calls into intermediate representations and to place the intermediate representations on the service bus . Each back end plug in includes hardware software and or firmware generally operative to translate an intermediate representation into a cloud API call . In one embodiment each unique supported cloud provider network account such as the EC2 cloud provider network account the Rackspace cloud provider network account and the Sungard cloud provider network account has a unique API and a corresponding back end plug in . It will be appreciated that one or more back end plug ins could be configured to translate an intermediate representation into the API for a local cloud such as local cloud .

The cloud gateway system includes an enterprise gateway appliance such as enterprise gateway appliance and remote gateway nodes such as remote gateway nodes . Thus the cloud gateway system includes hardware software and or firmware generally operative to establish a secure virtual private network over a public network connecting the cloud hypervisor to each unique supported cloud provider network account. Once the virtual private network has been established the cloud gateway system functions as the primary ingress and egress point for all network traffic traveling between the cloud hypervisor and the cloud provider network accounts and associated enterprise virtual machines . The cloud gateway system extends the enterprise network membrane around the cloud provider network accounts and associated enterprise virtual machines providing a secure high quality well managed network connection between the cloud hypervisor system and commercial cloud infrastructure and making the remote infrastructure appear to be located on the enterprise network.

With reference to there is shown a block diagram of a second embodiment of a cloud hypervisor system in accordance with an embodiment of the present invention. The cloud hypervisor system includes a pseudo hypervisor creation tool an API call listening tool a hypervisor API call translation tool a routing tool and a cloud API call translation tool .

The pseudo hypervisor creation tool includes hardware software and or firmware generally operative to establish one or more pseudo hypervisor instances such as pseudo hypervisor instances and to expose the pseudo hypervisor instances to the enterprise network . The API call listening tool includes hardware software and or firmware generally operative to listen for and receive hypervisor API calls sent by enterprise systems management tools such as enterprise systems management tools to the pseudo hypervisor instances. The hypervisor API call translation tool includes hardware software and or firmware generally operative to translate received hypervisor API calls into intermediate representations such as intermediate representations and to transmit the intermediate representations to the routing tool . The routing tool includes hardware software and or firmware generally operative to route each intermediate representation from the hypervisor API call translation tool to the cloud API call translation tool . The cloud API call translation tool includes hardware software and or firmware generally operative to translate an intermediate representation into a cloud API call .

With reference to there is shown a flowchart of a method for managing cloud infrastructure in accordance with an embodiment of the present invention. The method starts in step with the establishment of an enterprise network such as enterprise network . In step network end user devices such as network end user devices are connected to the enterprise network. In step an enterprise gateway appliance such as enterprise gateway appliance is also connected to the enterprise network. In step network service plug ins such as plug ins are connected to the enterprise gateway appliance.

In step an account is established with a cloud provider. In step the enterprise gateway appliance uploads remote gateway software to one or more remote gateway nodes such as remote gateway nodes in the cloud provider network. In step the remote gateway nodes establish secure encrypted connections to open VPN agents on one or more virtual machines thus converting these virtual machines into enterprise virtual machines such as enterprise virtual machines in the cloud provider network. In step a secure virtual private network is established between the enterprise gateway appliance the remote gateway nodes and the enterprise virtual machines.

In step it is determined whether there is an end user device outside the enterprise network. If there are no outside end user devices then the method proceeds to step . If there is an outside end user device such as mobile end user device then a client access agent is enabled on the outside end user device in step . In step the outside end user device is connected to a public network. In step a secure virtual private network is established between the outside end user device and the remote gateway nodes.

In step plug in network services are started and service specific sessions between the plug ins connected to the enterprise gateway appliance and the remote gateway notes are established. This step can be repeated for each plug in. The method then ends.

With reference to there is shown a flowchart of a method for communicating with cloud accounts in accordance with an embodiment of the present invention. The method starts in step where a cloud hypervisor system such as a cloud hypervisor system or is connected to an enterprise network. In step a service bus such as a service bus or is established in the cloud hypervisor system. In step hypervisor API emulators such as front end plug ins or are connected to the service bus. In step additional front end plug ins such as web console and topology manager are connected to the service bus. In step back end plug ins such as back end plug ins or are connected to the service bus.

In step the hypervisor API emulators establish one or more pseudo hypervisor instances such as pseudo hypervisor instances or . In step the pseudo hypervisor instances are exposed to the enterprise network. In step a pseudo hypervisor instance receives a hypervisor API call such as a hypervisor API call or from an enterprise systems management tool. In step the pseudo hypervisor instance routs the received hypervisor API call to the appropriate hypervisor API emulator. In step the hypervisor API emulator translates the received hypervisor API call into an intermediate representation such as intermediate an representation or . In step the hypervisor API emulator places the intermediate representation on the service bus. In step the service bus routes the intermediate representation to the appropriate back end plug in. In step the back end plug in translates the intermediate representation into a cloud API call such as a cloud API call or . In step the cloud API call is routed to an appropriate cloud account. In step the back end plug in verifies success of the cloud API call. In step the back end plug in returns a result code to the service bus in an intermediate representation. In step the service bus returns the result code to the pseudo hypervisor. In step the pseudo hypervisor translates the intermediate representation result code into a hypervisor specific result code. In step the hypervisor specific result code is returned to the calling enterprise systems management tool. The method then ends.

The foregoing description of the preferred embodiments of the present invention is by way of example only and other variations and modifications of the above described embodiments and methods are possible in light of the foregoing teaching. The various embodiments set forth herein may be implemented utilizing hardware software or any desired combination thereof. For that matter any type of logic may be utilized which is capable of implementing the various functionality set forth herein. Components may be implemented using a programmed general purpose digital computer using application specific integrated circuits or using a network of interconnected conventional components and circuits. Connections may be wired wireless modem etc. The embodiments described herein are not intended to be exhaustive or limiting. The present invention is limited only by the following claims.

