---

title: Enhanced screen capture for form manipulation
abstract: Processing a form in an image is provided. A plurality of data fields is detected within the form in the image. One or more of the data fields that contain private data and a plurality of the data fields that do not contain private data are detected. Contents of the plurality of data fields that do not contain private data are stored as metadata for the image and contents of the one or more data fields that contain private data are not stored as metadata for the image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460072&OS=09460072&RS=09460072
owner: International Business Machines Corporation
number: 09460072
owner_city: Armonk
owner_country: US
publication_date: 20130716
---
This application is a continuation of and claims the benefit of priority to U.S. patent application Ser. No. 12 510 758 filed on Jul. 28 2009 entitled Enhanced Screen Capture for Form Manipulation the contents of which are hereby incorporated by reference.

The disclosure relates generally to capturing information from a computer screen and more specifically to storing information about the data that has been input by an end user in web based forms.

Screen capture technology and computer based forms are separate technologies that are well known in the art. Screen capture software programs create a static copy of computer screens or subsets of computer screens such as regions or specific windows and digitally store them as binary image data in common formats such as Joint Photographic Experts Group JPEG or Tag Image File Format TIFF files which can easily be shared between users. These file formats may also contain additional information about the image often called metadata which may describe the location of the image reference a specific location in the images and specify the time the image was created.

Computer based forms provide users a means to input information in response to prompts in the form itself. Information may be input using entry fields selection boxes and check boxes for example. Forms are used to gather information and transmit the information to the server or client based applications which process user input. Examples of forms may be an online order or reservation form and a local database or spreadsheet form.

According to one illustrative embodiment a method for processing a form in an image is provided. One or more processors detect a plurality of data fields within the form in the image. The one or more processors identify one or more of the data fields that contain private data and a plurality of the data fields that do not contain private data. Contents of the plurality of data fields that do not contain private data are stored as metadata for the image and contents of the one or more data fields that contain private data are not stored as metadata for the image. According to other illustrative embodiments a computer program product and a computer system for processing a form in an image also are provided.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product stored on one or more computer readable device having computer readable program code embodied thereon.

Any combination of one or more computer readable devices may be utilized. A computer readable storage device may be for example but not limited to an electronic magnetic optical or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage device would include the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a portable compact disc read only memory CDROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable device may be any tangible medium that can store a program for use by or in connection with an instruction execution system apparatus or device. The term computer readable storage device does not encompass a signal propagation media such as a copper wire optical fiber or wireless transmission media.

Program code embodied on a computer readable storage device may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable storage device that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable storage device produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

With reference now to the figures and in particular with reference to exemplary diagrams of data processing environments are provided in which illustrative embodiments may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.

In the depicted example server and server connect to network along with storage unit . In addition clients and connect to network . Clients and may be for example personal computers or network computers. In the depicted example server provides data such as boot files operating system images and applications such as electronic mail applications and calendar applications to clients and . Clients and are clients to server in this example. Network data processing system may include additional servers clients and other devices not shown.

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

With reference now to a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments. In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit display and meeting manager .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard and mouse. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system and applications or programs are located on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable storage device such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be in a tangible form such as for example an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . In a tangible form computer readable media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . The tangible form of computer readable media is also referred to as computer recordable storage media. In some instances computer recordable media may not be removable.

Alternatively program code may be transferred to data processing system from computer readable media through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples.

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown.

As one example a computer readable storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of computer readable storage devices in a tangible form.

In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

The illustrative embodiments recognize a need for automating form population by embedding metadata within an image that captures the form data that can later be extracted to populate a form for the same or another user. In an advantageous embodiment these methods permit people to automate form filling based on screen captures. In one illustrative embodiment it is common for people in support roles or lower level information technology roles to view documentation containing numerous screen shots walking a user through steps to solve a problem or configure a system. This is often done with the use of a web browser interface.

The illustrative embodiments recognize that although current methods create a field capture where field identifiers and values are extracted from a form that may be shared as scripts the scripts do not contain graphical elements. Current methods therefore do not allow for sending or storing a graphical element that a user may preview nor do current methods allow for the ability to recognize opportunities to use the metadata when the context is different but the form is the same or similar. For example current methods do not allow a user to take a screen capture of a database record entry screen and apply that screen capture to different database screens different databases or different platforms such as web forms. While current methods create a static copy of a screen or window the static copy does not include context or metadata about the contents of the captured image. If the copy of a screen or window includes a form current methods only capture a binary representation of the image being displayed in the instant it was captured but do not capture any information about the form or its contents.

Therefore the illustrative embodiments provide a method computer program product and computer system for processing a form in an image is provided. One or more processors detect a plurality of data fields within the form in the image. The one or more processors identify one or more of the data fields that contain private data and a plurality of the data fields that do not contain private data. Contents of the plurality of data fields that do not contain private data are stored as metadata for the image and contents of the one or more data fields that contain private data are not stored as metadata for the image. Furthermore methods are described to protect sensitive information where appropriate.

In another illustrative embodiment an access request for a form is detected. A determination is made as to whether the form corresponds to a stored image in a number of stored images. If the form corresponds to a stored image metadata associated with the stored image is retrieved. The metadata includes a number of field values and associated textual data corresponding to the form. The form is populated with the number of field values and the associated textual data from the metadata associated with the stored image.

With reference now to a block diagram of an enhanced screen capture program is depicted in which illustrative embodiments may be implemented. Enhanced screen capture program may be implemented in a data processing system such as data processing system in .

Enhanced screen capture program includes field extractor screen capture module and launch module detector . Field extractor detects textual data and other values within a number of fields of a computer based form and extracts the textual data and other values from those fields. Screen capture module captures the binary representation of a computer based form. Launch module detector detects the application containing the captured binary representation of the computer based form. In some illustrative embodiments launch module detector may detect the commands to set the application to the state corresponding to the form. In an illustrative example if a form is a web form the web browser application and URL of the form may be detected by launch module detector .

With reference now to a block diagram of an enhanced screen capture program is depicted in which illustrative embodiments may be implemented. Enhanced screen capture program may be implemented in a data processing system such as data processing system in .

Enhanced screen capture program includes screen capture data store form detector launch module and screen capture to form detector . Screen capture data store contains the stored screen captures such as from a local or remote enhanced screen capture program for example. Form detector detects the existence of a form such as within a web browser or application containing forms for example. Launch module launches the application corresponding with the captured binary representation of the computer based form. In some illustrative embodiments launch module includes commands to set the application to the state corresponding to the form. In an illustrative example if a form is a web form a web browser may be launched with a command line argument containing the universal record locator URL of the form. Screen capture to form detector detects if a form within an application matches a stored form in screen capture data store .

With reference now to a block diagram of a screen capture program is depicted in which illustrative embodiments may be implemented. Screen capture program may be implemented in a data processing system such as data processing system in .

User runs a computer program that provides computer based form requiring user input. In this illustrative example user is a human user however user may be any type of user including without limitation a human user a program or any other process executing on a device such as data processing system in for example. In an illustrative example where user is a process enhanced screen capture program may be invoked by a system event such as a scheduled task that launches a form for example.

In an illustrative embodiment computer based form may be for example part of a process such as problem resolution problem acknowledgement software configuration order entry feedback survey and the like. Computer based form may extend to any application with a form to process such as wizards open dialogue boxes and the like. After user enters data into computer based form user may invoke enhanced screen capture program . Enhanced screen capture program captures computer based form binary which is the binary representation of computer based form as well as textual data which includes the field values and any associated textual data within the field values of computer based form . Computer based form binary and textual data are stored as enhanced screen capture with form metadata . Associated textual data may include links to other screen captures if in a sequence field labels form text CRC of the computer based form and any other form data that may be used to identify the same or similar form when used.

In an illustrative embodiment enhanced screen capture with form metadata may be stored as an image file such as without limitation a JPEG file a TIFF file Graphics Interchange Format GIF file Portable Document Format PDF file and the like. Enhanced screen capture with form metadata may be stored in a number of ways including without limitation as a single file multiple files a single file with references or links to other files a database entity or other complex data type. Enhanced screen capture with form metadata may be stored in a number of locations such as without limitation a local file in a local datastore in a remote datastore a MIME attachment to an electronic message an image within a Lotus Notes Document and the like. If enhanced screen capture with form metadata is stored externally or remotely an extra step will be needed to catalogue the image metadata and index the image to the corresponding metadata. This cataloguing step may be executed using for example a cyclic redundancy check function. It is possible to have two cyclic redundancy check values that correspond to two different image files. Because of this using the cyclic redundancy check function may also be accompanied by assigning a unique identifier to the image file that corresponds to a data tag associated with the image metadata. As a result illustrative embodiments may identify private text data as private based on respective data field identifiers.

User may be the same as user or may be a different user. User runs the same computer program that provides computer based form requiring user input. User is able to retrieve enhanced screen capture with form metadata stored by enhanced screen capture program earlier. User can then populate the form with the same data user entered into computer based form using textual data . In another illustrative embodiment user may invoke an auto fill feature that triggers enhanced screen capture program to automatically populate computer based form with the same data user entered into computer based form . Enhanced screen capture program may also be used by leveraging known methods. For example in an illustrative embodiment enhanced screen capture with form metadata could be dragged onto a web browser with an empty form and a plugin within the web browser could extract textual data associated with enhanced screen capture with form metadata and complete the form. In another illustrative example user may invoke an interpretation program load enhanced screen capture with form metadata into the interpretation program and use the interpretation program to fill out the form on another program.

With reference now to a block diagram of an enhanced screen capture with form metadata is depicted in which illustrative embodiments may be implemented. Enhanced screen capture with form metadata is an example of enhanced screen capture with form metadata in .

Enhanced screen capture with form metadata contains a method to capture binary image data as well as entry field 1 data and entry field 2 data . Binary image data is the image of web page which may be for example the computer screen or window that contains a form. Entry field 1 data detects the field value for field while entry field 2 data detects the field value for field . Detection may be accomplished either through an understanding of specific forms or form software packages form languages optical character recognition or through advanced means of image detections. In one illustrative embodiment the user may select the form field values and or data that should be stored in the image metadata. In another illustrative embodiment all form field values are stored in the image metadata. The field values may be for example textual data private textual data a check box selection or a list box selection.

Enhanced screen capture program in can further detect which form field values are private. A form field value that is private contains private textual data such as without limitation a password or password object tag. The form field values that contain private textual data will be represented as secure fields and the original values or private textual data will not be stored in the image metadata.

With reference now to a block diagram of stored image retrieval for form population is depicted in which illustrative embodiments may be implemented. Form population is implemented by an enhanced screen capture program such as screen capture program in .

Computer based form is an example of one illustrative embodiment in which a computer based form is accessed over a web browser. Computer based form contains universal record locator field and field . When computer based form is accessed by a user or process such as user in for example screen capture to form detector in detects computer based form and identifies a matching stored form in screen capture data store . Screen capture data store may be an illustrative example of one implementation of screen capture data store in . The detection may be made by parsing the characteristics of computer based form and comparing with the characteristics of the one or more stored forms in screen capture data store such as images and . Various means for parsing include without limitation comparing the application and form title or other identifier such as a URL or window identifier accessible via an application programming interface API call. To reduce queries to screen capture data store upon application launch screen capture data store may be queried for any records from the application and if none exist the screen capture to form detector such as screen capture to form detector in may cease monitoring the application for forms.

Screen capture data store contains image image image and image . Images and are examples of stored images with associated image metadata created by an enhanced screen capture program such as screen capture program in . Image is an enhanced screen capture of computer based form . When computer based form is accessed by a user screen capture data store is also accessed to determine whether a stored image correlating to computer based form is stored in screen capture data store . In one illustrative embodiment when the web browser recognizes universal record locator as a previously accessed and stored computer based form the web browser may pull image with the identical universal record locator from screen capture data store and give the user an option to populate computer based form with the data from image . For example field in image contains textual data and field in image contains textual data . The one or more selected textual or other data may then be passed to the web browser using an application program interface API call such as sending the data to the document object model DOM of the web page to populate the fields corresponding to the selected textual or other data. In embodiments where there is no supplied API another technique that may be used is sending an operating system call to select the application and then sending key commands to the application. For example upon selecting the web browser two Tab keys may be sent followed by sending the keys corresponding to the selected textual data followed by sending an Enter key which would have the same effect as selecting the second field on the form typing the form data and then clicking the form submit button. Other similar techniques such as input device manipulation and button interaction may be used.

With reference now to a flowchart illustrating a process for capturing a form in an image is depicted in which illustrative embodiments may be implemented. The process may be implemented in enhanced screen capture program in .

The process begins by receiving a request to capture a form in an image step . This request may be invoked by a user program or process such as user invoking enhanced screen capture program in . The process captures the form in the image step and detects a number of field values within the form step . The field values may be for example textual data private textual data a check box selection or a list box selection. The process then stores the field values in the image metadata step with the process terminating thereafter.

With reference now to a flowchart illustrating a process for protecting secure data in a captured form is depicted in which illustrative embodiments may be implemented. The process may be implemented in enhanced screen capture program in .

The process begins by capturing a form in an image step . The process detects private textual data within the field values step . Private textual data may be for example a password or password object tag. The process then associates a secure field value with the field values that contain private textual data step . The process stores the field values without the private textual data in the image metadata step with the process terminating thereafter.

With reference now to a flowchart illustrating a process for populating form field values is depicted in which illustrative embodiments may be implemented. The process may be implemented in enhanced screen capture program in .

The process begins by receiving a request to access a form step . In an illustrative example the request may be made by a user process or program such as user in for example. The process determines whether the form corresponds to a stored image step such as computer based form binary in . If the form does not correspond to a stored image the process terminates. If the form does correspond to a stored image the process retrieves image metadata for the stored image step . The process then populates the form using the image metadata retrieved step with the process terminating thereafter.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

Therefore the illustrative embodiments provide a method and computer program product for processing forms based on an image. A form is captured in an image and a number of field values within the form in the image are detected. The number of field values is stored in the image metadata. Furthermore field values containing sensitive or private data are detected and identified as secure fields. The data within the secure fields identified is not stored in the image metadata. This provides security for sensitive information such as passwords in one illustrative example that may be found within one or more field values within a form.

The illustrative embodiments further provide a method and computer program product for detecting an access request for a form. A determination is made as to whether the form corresponds to a stored image in a number of stored images. If the form corresponds to a stored image metadata associated with the stored image is retrieved. The metadata includes a number of field values and associated textual data corresponding to the form. The form is populated with the number of field values and the associated textual data from the metadata associated with the stored image.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable storage device providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable storage device can be any tangible apparatus that can store the program for use by or in connection with the instruction execution system apparatus or device.

The computer readable storage device can be an electronic magnetic optical or semiconductor system or apparatus or device . Examples of a computer readable storage device include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

The description of the present invention has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

