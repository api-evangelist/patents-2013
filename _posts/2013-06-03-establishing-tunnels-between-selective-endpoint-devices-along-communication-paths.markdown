---

title: Establishing tunnels between selective endpoint devices along communication paths
abstract: In one embodiment, an intermediary device situated along a communication path between two endpoint devices may receive communication packets sent along the communication path. If the intermediary device receives a connection-initiating packet having a customization indicator and a connection-acknowledgement packet having a customization indicator, then the intermediary device may install a bypass rule.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949446&OS=08949446&RS=08949446
owner: Blue Coat Systems, Inc.
number: 08949446
owner_city: Sunnyvale
owner_country: US
publication_date: 20130603
---
This application is a continuation of U.S. application Ser. No. 13 101 661 filed May 5 2011 by Qing Li et al. and entitled Establishing Tunnels Between Selective Endpoint Devices Along Communication Paths which will issue on Jun. 4 2013 as U.S. Pat. No. 8 458 344.

In a network environment there may be various types of network enabled devices directly or indirectly connected to each other over the network. Different types of devices may implement different functions. For example there may be any number of application servers database servers proxy servers gateways routers switches and clients all connected to the same network. When one device communicates with another device by for example sending communication or data packets to the other device over the network often the packets may go through a number of other intermediary devices along the way before they reach their intended destination.

In particular embodiments a first computing device situated along a communication path between a second computing device and a third computing device may receive a first communication packet from the second computing device destined to the third computing device.

If the first communication packet is a connection initiating packet having no customization indicator then the first computing device may generate a second connection initiating packet having a customization indicator and addressed to the third system set a value of the customization indicator of the second connection initiating packet to 0 and send the second connection initiating packet to the third system.

If the first communication packet is a connection initiating packet having a customization indicator with a value of 0 then first computing device may generate a third connection initiating packet having a customization indicator and addressed to the third system set a value of the customization indicator of the third connection initiating packet to 1 and send the third connection initiating packet to the third system.

If the first communication packet is a connection initiating packet having a customization indicator with a value of 1 then first computing device may generate a first connection acknowledgement packet having a customization indicator and addressed to the second system set a value of the customization indicator of the first connection acknowledgement packet to 1 and send the first connection acknowledgement packet to the second system.

If the first communication packet is a connection acknowledgement packet having no customization indicator then first computing device may install an intercept rule generate a second connection acknowledgement packet having a customization indicator and addressed to the second system set a value of the customization indicator of the second connection acknowledgement packet to 1 and send the second connection acknowledgement packet to the second system.

If the first communication packet is a connection acknowledgement packet having a customization indicator with a value of 1 then first computing device may install a bypass rule.

These and other features aspects and advantages of the disclosure are described in more detail below in the detailed description and in conjunction with the following figures.

This disclosure is now described in detail with reference to a few embodiments thereof as illustrated in the accompanying drawings. In the following description numerous specific details are set forth in order to provide a thorough understanding of this disclosure. However this disclosure may be practiced without some or all of these specific details. In other instances well known process steps and or structures have not been described in detail in order not to unnecessarily obscure this disclosure. In addition while the disclosure is described in conjunction with the particular embodiments it should be understood that this description is not intended to limit the disclosure to the described embodiments. To the contrary the description is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the disclosure as defined by the appended claims.

In a network environment and more specifically in an Application Delivery Network there may be any number of intermediary network devices situated along a communication path in between two endpoint network devices e.g. a client and a server . In particular embodiments the intermediary devices may implement and support wide area network WAN optimization. Particular embodiments may dynamically discover the intermediary devices along a communication path between two endpoint devices and establish a transparent tunnel e.g. a tunnel linking a branch device and a concentrator device while bypassing some of these intermediary devices.

Various types of network enabled devices such as for example and without limitation servers clients routers switches gateways proxies etc. may be connected directly or indirectly to a computer network. These devices may communicate with each other over the network using various suitable communication or network protocols examples of which may include Transmission Control Protocol TCP and Internet Protocol IP . For example one device may send communication or data packets to another device over a TCP network connection.

One or more links may couple a server a client or an intermediary device to network . In particular embodiments one or more links each includes one or more wire line wireless or optical links . In particular embodiments one or more links each includes an intranet an extranet a VPN a LAN a WLAN a WAN a MAN a portion of the Internet or another link or a combination of two or more such links . This disclosure contemplates any suitable links coupling servers and clients to network .

In particular embodiments each server may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters. Servers may be of various types such as for example and without limitation web server news server mail server message server advertising server file server application server exchange server database server or proxy server. In particular embodiments each server may include hardware software or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically a web server may host HTML Hypertext Markup Language files or other file types or may dynamically create or constitute files upon a request and communicate them to clients in response to HTTP Hypertext Transfer Protocol or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores. An original content server OCS may be capable of providing various types of contents to various clients .

In particular embodiments one or more data storages may be communicatively linked to one or more severs via one or more links . In particular embodiments data storages may be used to store various types of information. In particular embodiments the information stored in data storages may be organized according to specific data structures. In particular embodiments each data storage may be a relational database. Particular embodiments may provide interfaces that enable servers or clients to manage e.g. retrieve modify add or delete the information stored in data storage .

In particular embodiments each intermediary device may be a computing or electronic device capable of implementing specific functionalities. Different intermediary devices may implement different functionalities. For example and without limitation intermediary device may be router switch proxy or gateway. Each intermediary device may include hardware software or embedded logic components or a combination of two or more such components capable of carrying out the appropriate functionalities implemented or supported by intermediary device .

In particular embodiments intermediary device may be a ProxySG appliance made by Blue Coat Systems Inc. based in Sunnyvale Calif. The Blue Coat ProxySG appliances support secure web gateway and WAN optimization features. The Blue Coat WAN optimization WAN op technologies are capable of accelerating the delivery of internal external and latency sensitive real time applications to distributed users across the extended enterprise resulting in faster decision making and enhanced competitiveness. More specifically the Blue Coat WAN optimization technologies are capable of accelerating critical applications by optimizing traffic conserving bandwidth and metering or blocking recreational applications. For example the Blue Coat WAN optimization technologies may include HTTP optimization and caching as well as SSL Secure Sockets Layer or TLS Transport Layer Security acceleration.

In particular embodiments each client may be an electronic device including hardware software or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functionalities implemented or supported by client . For example and without limitation a client may be a desktop computer system a notebook computer system a netbook computer system a handheld electronic device or a mobile telephone. This disclosure contemplates any suitable clients . A client may enable a network user at client to access network . A client may enable its user to communicate with other users at other clients .

A client may have a web browser such as MICROSOFT INTERNET EXPLORER GOOGLE CHROME MOZILLA FIREFOX or APPLE SAFARI and may have one or more add ons plug ins or other extensions such as TOOLBAR or YAHOO TOOLBAR. A user at client may enter a Uniform Resource Locator URL or other address directing the web browser to a server and the web browser may generate a Hyper Text Transfer Protocol HTTP request and communicate the HTTP request to server . Server may accept the HTTP request and communicate to client one or more Hyper Text Markup Language HTML files responsive to the HTTP request. Client may render a web page based on the HTML files from server for presentation to the user. This disclosure contemplates any suitable web page files. As an example and not by way of limitation web pages may render from HTML files Extensible Hyper Text Markup Language XHTML files or Extensible Markup Language XML files according to particular needs. Such pages may also execute scripts such as for example and without limitation those written in JAVASCRIPT JAVA MICROSOFT SILVERLIGHT combinations of markup language and scripts such as AJAX Asynchronous JAVASCRIPT and XML and the like. Herein reference to a web page encompasses one or more corresponding web page files which a browser may use to render the web page and vice versa where appropriate.

In particular embodiments network environment may be an Application Delivery Network ADN . In particular embodiments an ADN is a suite of technologies that when deployed together provide application availability security visibility and acceleration. It may be considered as a combination of WAN optimization and Application Delivery Controllers ADCs . In some cases at the data center end of an ADN is the Application Delivery Controller ADC which may be an advanced traffic management device that is often referred to as a web switch content switch or multilayer switch the purpose of which is to distribute traffic among a number of servers e.g. backend or application servers or geographically dislocated sites based on application specific criterion. In the branch office portion of an ADN is the WAN optimization controller which uses objectless caching techniques to reduce the number of bits that flow over the WAN and shapes TCP Transmission Control Protocol traffic using prioritization and other optimization techniques. In particular embodiments network environment may implement an ADN infrastructure developed by Blue Coat Systems Inc. which is capable of providing comprehensive application and user control required to reduce network bandwidth costs and enhance business productivity while providing the flexibility to align network investments with changing business requirements.

In particular embodiments the various types of devices e.g. servers clients intermediary devices connected to network may communicate using various types of network or communication protocols and this disclosure contemplates any suitable network or communication protocol. Examples of the protocols may include without limitation File Transfer Protocol FTP Common Internet File System CIPS Messaging Application Programming Interface MAPI Real Time Streaming Protocol SOCKS and Transmission Control Protocol TCP Internet Protocol IP .

In a network environment e.g. network environment the client server model is a distributed application structure that partitions tasks or workloads between the providers of a resource or service called servers e.g. servers and resource or service requesters called clients e.g. clients . The clients and servers may communicate with each other over the network. For example when a client needs a service it may send a service request to a server over the network. The server upon receiving the service request may send the result of the service e.g. information or data back to the client again over the network.

In practice however a client and a server often are not directly connected. Instead there may be other network devices along the communication path between the client and the server. Communication packets e.g. service requests or results sent between the client and the server may need to go through a number of other network devices which relay the packets. This may often be the case with other types of network devices as well. Thus when a first network device sends communication packets to a second network device over a network there may be any number of other network devices along the communication path between the first and second network devices which relay the packets.

In particular embodiments two devices or along communication path may be connected by a network connection . In particular embodiments connections between network devices and may be TCP connections. For example suppose that endpoint device e.g. a client wishes to establish a communication connection with endpoint device e.g. a server in order to request and receive services provided by endpoint device . To establish a TCP connection with endpoint device endpoint device may send a TCP SYN packet toward endpoint device along communication path . In response endpoint device may send a TCP SYN ACK packet back toward endpoint device as an acknowledgement to the TCP SYN packet received from endpoint device . In this case endpoint device is the device requesting services and endpoint device is the device providing services. For clarification purposes hereafter the direction from an endpoint device that requests services e.g. endpoint device to an endpoint device that provides services e.g. endpoint device is referred to as the upstream direction and the direction from the endpoint device that provides services e.g. endpoint device to the endpoint device that requests services e.g. endpoint device is referred to as the downstream direction. Note that along a communication path either direction may be considered the upstream or downstream direction depending on which endpoint device is requesting services and which endpoint device is providing services.

Communication packets sent between endpoint devices and need to pass through intermediary devices . For example in the case illustrated in when endpoint device sends a packet upstream to endpoint device the packet in turn passes through intermediary devices . . . n and finally arrives at endpoint . Conversely when endpoint device sends a packet downstream to endpoint device the packet in turn passes through intermediary devices n . . . and finally arrives at endpoint .

In particular embodiments communication path may be a part of an ADN and each intermediary device may support WAN optimization. In this case each intermediary device is capable of optimizing the traffic flow over communication path along which it situates. In the case illustrated in intermediary device is the first intermediary device to be reached by the communication traffic in the upstream direction from endpoint device e.g. client traffic and thus may be referred to as the branch device. Intermediary device n is the last intermediary device to be reached by the communication traffic in the upstream direction from endpoint device before reaching endpoint and thus may be referred to as the concentrator device. More specifically in a client server model along a communication path between a client and a server the branch device is the first intermediary device immediately after the client upstream along the communication path and the concentrator device is the last intermediary device upstream immediately before the server along the communication path. Note that a specific intermediary device may be a branch device along a first communication path a concentrator device along a second communication path or neither a branch nor a concentrator device along a third communication path.

In particular embodiments along a communication path an ADN tunnel may be established between two intermediary devices. For example in the case illustrated in an ADN tunnel may be established between the branch device i.e. intermediary device and the concentrator device i.e. intermediary device n . Communication traffic flows between endpoint devices and may be optimized inside ADN tunnel by branch device and concentrator device n.

When there are other intermediary devices e.g. intermediary devices situated in between branch device and concentrator device n along communication path once a traffic flow has been optimized inside ADN tunnel additional effort to further optimize the already optimized traffic flow brings no additional benefit while adding additional overhead. Therefore particular embodiments may dynamically discover the number of intermediary devices situated between two endpoint devices and and establish a transparent tunnel between the branch and concentrator devices i.e. between intermediary devices and n in order to bypass the other intermediary devices e.g. intermediary device in between them.

Suppose that client wishes to establish a communication connection with server in order to request and receive services from server . In particular embodiments client may send a connection initiating packet upstream along communication path . More specifically in particular embodiments client and server may communication over TCP connections. In this case client may initiate a TCP connection upstream along communication path and send a TCP SYN packet upstream over TCP connection .

Since SYN packet is sent by client it is a standard TCP SYN packet i.e. it does not include any customized options . In the case illustrated in intermediary device being the first intermediary device upstream along communication path immediately after client may intercept SYN packet as illustrated in STEP of . Intermediary device may examine SYN packet to determine that SYN packet does not include any customized options i.e. no customized option is present in packet as illustrated in STEP NO of . Thus intermediary device may know that itself is the branch device for client because there is no other intermediary device between itself and client to customize SYN packet i.e. no customized options used in packet .

In practice a branch device may reside in a branch office of an ADN. As a result each branch device is usually aware that itself is a branch device. However by examining whether a SYN packet received at an intermediary device includes any customized options the intermediary device may also dynamically determine whether itself is in fact a branch device.

In particular embodiments branch device may terminate connection i.e. its downstream connection with client as illustrated in STEP of . That is branch device may successfully complete connection with client so that further exchange of communication packets may take place on connection . Branch device may generate a new packet . Packet may be another TCP SYN packet but having a customized option as illustrated in STEP of . In particular embodiments the customized option in packet may be a single bit or multiple bits. Branch device may set the value of the option bit in packet to 0 as illustrated in STEP of .

In the TCP header there is an options field which may be a space near the end of the TCP header and may be a multiple of 8 bits in length. A specific bit e.g. identified by a specific offset value may be reserved to be used as the customized option bit. In addition there may be a maximum length defined for the options space in the TCP header. In particular embodiments the size of the customized option is limited to be less than or equal to the maximum length of the options space in the TCP header.

In particular embodiments branch device may initiate a TCP connection upstream along communication path as illustrated in STEP of and send packet upstream over TCP connection as illustrated in STEP of .

In the case illustrated in intermediary device is the next device upstream along communication path after branch device . Thus intermediary device may intercept packet as illustrated in STEP of . Again intermediary device may examine packet to determine that this time packet does include a customized option bit as illustrated in STEP YES of . Intermediary device may know that itself is not a branch device along communication path because there is at least one other intermediary device downstream between itself and client to customize packet i.e. packet includes a customized option bit . Note that however at this point intermediary device does not yet know whether itself is a concentrator device along communication path .

In particular embodiments intermediary device may suspend TCP connection i.e. its downstream connection with branch device and temporarily hold packet received from branch device as illustrated in STEP of . Suspending a TCP connection is known as Delayed Intercept and is described in more detail in U.S. Pat. No. 7 743 160 to Li et al. entitled system and method of delaying connection acceptance to support connection request processing at layer 7 which is hereby incorporated by reference in its entirety and for all purposes.

Intermediary device may examine packet to determine that the value of the customized option bit in packet is set to 0 as illustrated in STEP YES of . In particular embodiments intermediary device may generate a new packet . Again packet may be another TCP SYN packet having a customized option e.g. a bit in the options space in the TCP header as illustrated in STEP of and set the value of the option bit in packet to 1 as illustrated in STEP of . Note that in particular embodiments for packet generated by branch device the value of the option bit in packet is set to 0. In contrast for packet generated by intermediary device i.e. not the branch device the value of the option bit in packet is set to 1.

In particular embodiments intermediary device may initiate a TCP connection upstream along communication path as illustrated in STEP of and send packet upstream over TCP connection as illustrated in STEP of .

In the case illustrated in intermediary device is the next device upstream along communication path after intermediary device . Thus intermediary device may intercept packet as illustrated in STEP of . Intermediary device may examine packet to determine that packet includes a customized option bit as illustrated in STEP YES of . Similarly intermediary device may know that itself is not a branch device along communication path because there is at least one other intermediary device downstream between itself and client to customize packet i.e. packet includes a customized option bit . Note that however at this point intermediary device does not yet know whether itself is a concentrator device along communication path .

In particular embodiments intermediary device may examine packet to determine that the value of the option bit in packet is set to 1 as illustrated in STEP NO of . Since the value of the option bit in packet is set to 1 intermediary device may determine that intermediary device which is the device that has generated and sent packet is not a branch device for communication path . Recall that for packet generated and sent by branch device the value of the option bit in packet is set to 0. Furthermore since intermediary device itself is situated upstream between intermediary device and sever intermediary device may also determine that intermediary device is also not a concentrator device for communication path . In other words along communication path intermediary device is situated in between the branch and concentrator devices and therefore may be bypassed.

In particular embodiments in response to packet intermediary device may generate a new connection acknowledgement packet . More specifically in particular embodiments packet may be a TCP SYN ACK packet having a customized option e.g. a reserved bit in the options space in the TCP header as illustrated in STEP of . and set the value of the option bit in packet to 1 as illustrated in STEP of . In particular embodiments intermediary device may send packet downstream over TCP connection as illustrated in STEP of .

In the case illustrated in intermediary device is the next device downstream along communication path after intermediary device . Thus intermediary device may receive packet which includes a SYN ACK and a customized option bit set to 1 as illustrated in STEP of . Intermediary device may examine packet to determine that packet includes a customized option bit i.e. customized option is present in packet as illustrated in STEP YES of . Intermediary device may know that itself is not a concentrator device along communication path because there is at least one other intermediary device upstream between itself and server to customize packet i.e. packet includes a customized option bit . Recall that previously intermediary device has already determined that itself is not a branch device along communication path . At this point intermediary device is aware that itself is situated in between the branch and concentrator device along communication path and may be bypassed.

In particular embodiments intermediary device may close TCP connection i.e. its upstream connection with intermediary device as illustrated in STEP of . For example TCP connection may be closed by performing a connection close or by resetting the connection. In particular embodiments intermediary device may install a connection bypass rule illustrated in STEP of so that any communication packets sent along communication path in either upstream or downstream direction between device and device are merely forwarded onward without any processing being performed by intermediary device . The bypass rule is described in more detail below.

Recall that when first receiving packet from branch device intermediary device temporarily holds packet . At this point intermediary device may forward the original packet upstream along communication path as illustrated in STEP of .

In the case illustrated in intermediary device is the next device upstream after intermediary device and may receive packet originally generated by branch device . In particular embodiments the steps described above with respect to intermediary device and illustrated in may be repeated with respect to intermediary device . Since intermediary device is neither the branch nor the concentrator device along communication path similar to intermediary device intermediary device may also install the bypass rule and then forward the packet originally generated by branch device upstream along communication path .

In the case illustrated in intermediary device is the next device upstream along communication path after intermediary device and may receive packet originally generated by branch device as illustrated in STEP of . In particular embodiments by examining packet intermediary device may determine that there is a customized option bit included in packet as illustrated in STEP YES of and the value of the option bit is set to 0 as illustrated in STEP YES of . Intermediary device may similarly determine that itself is not the branch device along communication path because packet includes both a SYN and a customized option bit. In particular embodiments intermediary device may similarly perform STEPS and of as described above. In particular embodiments after intermediary device has generated and sent a new packet e.g. a TCP SYN packet having a customization option bit with its value set to 1 upstream packet is received by server since server is the next device upstream along communication path after intermediary device .

Server is not aware of the purpose of the customized option bit in packet and thus may ignore it. Instead server may examine packet to determine that there is a SYN included in packet . In response server may generate a TCP SYN ACK packet and send it downstream back to intermediary device . Since SYN ACK packet is generated by server it does not include any customized options e.g. it does not include a customized option bit .

In particular embodiments upon receiving SYN ACK packet from server as illustrated in STEP of intermediary device may examine SYN ACK packet to determine that SYN ACK packet does not include any customized options as illustrated in STEP NO of . Consequently intermediary device may know that itself is the concentrator device for server because there is no other intermediary device between itself and server to customize SYN ACK packet i.e. no customized options used in packet .

In particular embodiments concentrator device may generate a new packet that includes a SYN ACK and a customized option bit as illustrated in STEP of and set the value of the option bit in packet to 1 as illustrated in STEP of . Concentrator device may send packet downstream along communication path .

At this point intermediary devices and along communication path which are neither the branch nor the concentrator device have already installed the connection bypass rule. Thus packet is relayed by intermediary devices and to branch device . Upon receiving packet by branch device which includes a SYN ACK an ADN tunnel is established between branch device and concentrator device bypassing intermediary devices and . Normal ADN processing may then begin for the communication flows along communication path .

To briefly summarize the process described above along a specific communication path when an intermediary device receives a SYN packet that does not include any customized options the intermediary device is considered the branch device for the communication path. When an intermediary device receives a SYN ACK packet that does not include any customized options the intermediary device is considered the concentrator device for the communication path. When an intermediary device receives a packet that includes a SYN and a customized option e.g. an option bit with the option bit set to 1 and a packet that includes a SYN ACK and a customized option e.g. an option bit with the option bit set to 1 the intermediary device is considered to be situated in between the branch and the concentrator device and may be bypassed. In particular embodiments such an intermediary device may install a bypass rule e.g. a connection bypass rule .

In the process described above in connection with FIGS. and A B the customized option included in a packet is implemented as a single bit. Alternatively in particular embodiments the customized option included in a packet may be a counter also referred to as a hop counter. In this case a number of bits in the options space in the TCP header may be reserved for the counter.

Suppose that client wishes to establish a communication connection with server . In particular embodiments client may initiate a TCP connection upstream and send a TCP SYN packet upstream over TCP connection .

In the case illustrated in intermediary device is the first intermediary device upstream along communication path immediately after client . Thus SYN packet first reaches intermediary device . Since SYN packet is sent by client it is a standard SYN packet e.g. only including a TCP SYN and not including any customized options . In particular embodiments intermediary device upon receiving SYN packet may determine that itself is the first intermediary device upstream after client along communication path because there is no customized option included in packet . This means that intermediary device is in fact the branch device for client . Branch device may terminate downstream TCP connection with client and initiate a TCP connection upstream along communication path . In other words branch device may successfully complete connection with client so that further exchange of communication packets may take place on connection . In particular embodiments branch device may generate a new packet which may be a SYN packet having a customization counter e.g. a hop counter and a device identifier that is unique to branch device . In particular embodiments a number of bits in the options space in the TCP header may be reserved for this customization counter. Branch device may set the value of the counter in packet to 0 as it is the first intermediary device after client upstream along communication path . In particular embodiments branch device may send packet upstream over TCP connection .

In the case illustrated in packet first reaches intermediary device after being sent by intermediary device . In particular embodiments intermediary device upon receiving packet may determine that there is a counter in packet . This means that intermediary device is not the branch device for client because there is at least one other intermediary device downstream between itself and client that has sent packet including a customized counter. Furthermore the value of the counter in packet is 0 which means that packet is generated and sent by the branch device i.e. branch device along communication path . Intermediary device may temporarily hold packet .

Intermediary device may suspend downstream TCP connection with intermediary device and initiate a TCP connection upstream along communication path . Intermediary device may generate a new packet . In particular embodiments packet may be a TCP SYN packet having a counter and an identifier ID . In particular embodiments a number of bits may be reserved in the option space of the TCP header for the counter and the ID. Intermediary device may set the value of the counter in packet to 1 by incrementing the value of the counter in packet i.e. 0 . Each intermediary device may have a unique peer ID e.g. the birth certificate or Media Access Control MAC address and the ID in packet may be the unique peer ID of branch device . In particular embodiments intermediary device may send packet upstream over TCP connection .

In the case illustrated in packet first reaches intermediary device after being sent by intermediary device . In particular embodiments intermediary device upon receiving packet may determine that there is a counter in packet . Intermediary device may suspend downstream TCP connection with intermediary device and initiate a TCP connection upstream along communication path . Intermediary device may generate a new packet . In particular embodiments packet may be a TCP SYN packet having a counter and an ID. Intermediary device may set the value of the counter in packet to 2 by incrementing the value of the counter in packet i.e. 1 . The ID in packet may be the peer ID of branch device . In particular embodiments intermediary device may send packet upstream over TCP connection .

In the case illustrated in packet first reaches intermediary device after being sent by intermediary device . In particular embodiments intermediary device upon receiving packet may determine that there is a counter in packet . Intermediary device may suspend downstream TCP connection with intermediary device and initiate a TCP connection upstream along communication path . Intermediary device may generate a new packet . In particular embodiments packet may be a TCP SYN packet having a counter and an ID. Intermediary device may set the value of the counter in packet to 3 by incrementing the value of the counter in packet i.e. 2 . The ID in packet may be the peer ID of branch device . In particular embodiments intermediary device may send packet upstream over TCP connection .

In the case illustrated in intermediary device is the last intermediary device upstream immediately before server . Thus packet reaches server . In particular embodiments packet i.e. the packet generated by branch device and having counter value 0 contains the peer ID of branch device while packets and i.e. the packets having counter values greater than 0 each propagate the peer ID of branch device .

Using the counter contained in each packet and particular embodiments may dynamically discover the total number of intermediary devices situated in between two endpoint devices and . In the case illustrated in there are a total of four intermediary devices in between endpoint devices and e.g. determined by adding 1 to the counter value contained in the last packet . In some cases this information may be used to diagnose or manage communication path .

When server receives packet that includes a SYN it may respond with a TCP SYN ACK packet . Although packet includes a customized counter server may ignore the counter in packet . In particular embodiments server may send SYN ACK packet downstream over TCP connection .

In the case illustrated in intermediary device is the first intermediary device downstream along communication path immediately after server . Thus SYN ACK packet first reaches intermediary device . Since SYN ACK packet is sent by server it is a standard SYN ACK packet e.g. only including a TCP SYN ACK and not including any customized options . In particular embodiments intermediary device upon receiving the standard SYN ACK packet may determine that itself is the first intermediary device that receives SYN ACK packet sent by server . This means that intermediary device is in fact the last intermediary device upstream immediately before server and thus is the concentrator device for server .

In particular embodiments concentrator device may close TCP connection with server which causes this local connection to be closed. In particular embodiments because intermediary device is the contractor device for server it may install an intercept rule which is described in more detail below. In particular embodiments the intercept rule may cause an intermediary device to intercept communication packets sent between two endpoint devices e.g. endpoint devices and .

In particular embodiments concentrator device may generate a packet which may be a TCP SYN ACK packet having a customization counter e.g. a hop counter in the options space of the TCP header. The value of the counter may be set to 2 corresponding to the value of the counter included in packet sent by intermediary device as illustrated in which is the intermediary device downstream along communication path immediately after intermediary device . Intermediary device may send packet downstream over TCP connection .

In the case illustrated in packet first reaches intermediary device . Because packet includes a counter having a value of 2 intermediary device may determine that itself is not the last intermediary device upstream immediately before server and there is at least one other intermediary device upstream between itself and server along communication path . Thus intermediary device is not the concentrator device along communication path . Furthermore it has been determined that intermediary device is not the branch device along communication path .

In particular embodiments intermediary device may close TCP connection with intermediary device and install a bypass rule which is described in more detail below. In particular embodiments the bypass rule may cause an intermediary device to relay communication packets sent between two endpoint devices e.g. endpoint devices and without performing any type of processing or optimization in connection with the communication packets.

In particular embodiments intermediary device may generate a packet which may be another TCP SYN ACK packet having a counter. The value of the counter may be set to 1 corresponding to the value of the counter included in packet sent by intermediary device as illustrated in . Intermediary device may then send packet downstream over TCP connection .

In the case illustrated in packet first reaches intermediary device . Because packet includes a counter intermediary device may determine that itself is not the last intermediary device upstream immediately before server and there is at least one other intermediary device upstream between itself and server along the communication path. In particular embodiments intermediary device may close TCP connection with intermediary device and install a similar bypass rule. In particular embodiments if intermediary device were to generate a packet which may be another TCP SYN ACK having a counter then the value of the counter would be set to 0 corresponding to the value of the counter included in packet sent by branch device as illustrated in . However at this point intermediary device has already determined that it is one hop away from the branch device for client i.e. branch device . Therefore in particular alternative embodiments intermediary device will not generate a packet .

As described above in connection with branch device generates packet that includes a SYN and a counter with the value set to 0. Intermediary device upon receiving packet may temporarily hold packet . At this point in particular embodiments intermediary device may forward packet upstream to concentrator device . Because intermediary device has already installed the bypass rule intermediary device may relay packet upstream without processing it.

In particular embodiments when the communication packets that include the TCP SYN are initiated upstream each intermediary device initiates a TCP connection with the device upstream. When the communication packets that include the TCP SYN ACK are responded downstream each intermediary device except the branch device closes the TCP connection with the device upstream. In particular embodiments these TCP connections may trigger state information which may be retained at each in path intermediary device . In particular embodiments when the packet generated by the branch device e.g. branch device is forwarded upstream the intermediate state information that may be used to identify this communication flow includes the peer ID of the branch device the Internet Protocol IP address of the destination device and the port of the destination device.

In particular embodiments an intercept or bypass rule may include a 3 tuple rule which may include the peer ID of the branch device the IP address of the destination device and the port of the destination device. In particular embodiments the 3 tuple rule may be installed into the firewall rule set of each intermediary device e.g. intermediary device . For clarification purposes this 3 tuple rule may be referred to as the level 1 rule.

In addition in particular embodiments an intercept or bypass rule may further include a 4 tuple rule which may include the IP address of the source device the port of the source device the IP address of the destination device and the port of the destination device. In particular embodiments the 4 tuple may be installed into the connection table of each intermediary device . For clarification purposes this may be referred to as the level 2 rule. In particular embodiments the level 2 4 tuple rule may be dynamically generated based on the level 1 3 tuple rule at each intermediary device.

A specific intermediary device may be situated along multiple communication paths. The intermediary device may be the branch device along a first path the concentrator device along a second path and neither the branch nor the concentrator device along a third path. Thus for some of these communication paths the intermediary device may have corresponding intercept rules and for others the intermediary device may have corresponding bypass rules. In particular embodiments each intermediary device may maintain a connection table where each entry in the table corresponds to a bypass or intercept rule for a specific communication path. In particular embodiments the 4 tuple intercept or bypass rules may be installed in the connection table.

When a specific traffic flow comes from the branch device to an intermediary device the existing connection table maintained by the intermediary device is searched first for the incoming flow. If the flow is present in the connection table e.g. the source and destination IP addresses and port numbers of the flow match a 4 tuple entry in the connection table then the associated action e.g. intercept or bypass is executed. Otherwise a second search in the firewall rule set is performed. If a match is found against a 3 tuple entry e.g. the peer ID of the branch device and the destination IP address and port number of the flow match a 3 tuple entry then a corresponding new flow is added to the connection table. To do so in particular embodiments a new 4 tuple rule is dynamically generated based on the matching 3 tuple entry and the new 4 tuple entry is added to the connection table. The associated action e.g. intercept or bypass is then executed. On the other hand if no match to any 3 tuple entry is found in the firewall rule then the normal e.g. standard firewall rule processing may be performed on the incoming flow. This process is illustrated in .

Classifying packet flows is described in more detail in U.S. Publication 2008 0077705 to Li et al. entitled system and method of traffic inspection and classification for purposes of implementing session ND content control which is hereby incorporated by reference in its entirety and for all purposes.

Sometimes an intermediary device e.g. intermediary device may be offline due to various reasons e.g. hardware failure or communication path change . If the intermediary device is not a concentrator device e.g. not the last intermediary device upstream immediately before a server then its role is simply to bypass any communication traffic received from the branch device. In this case when such an intermediary device goes offline the effect is similar to that segment of the path being a wire. Thus there is no side effect for such an intermediary going offline.

On the other hand the intermediary device may be a concentrator device. When a concentrator device goes offline particular embodiments may rediscover and recover the communication for subsequent traffic flows. Normally each firewall rule has a lifetime associated with it. When traffic flows through the intermediary devices and if flow state information is present in an intermediary device the lifetime of the associated firewall rule is refreshed. However existing firewall design does not distinguish the directionality of the communication traffic flow and updates the lifetime regardless of the flow direction.

To address this problem particular embodiments use multiple hop ADN related firewall rules to track the last seen time for each direction of the traffic flow. When traffic has not been seen for a specified amount of time for the downstream direction e.g. from a server to a branch device the intermediary devices e.g. intermediary devices and may generate a TCP Keep Alive packet towards the server e.g. endpoint device . If the concentrator device e.g. intermediary device is no longer present in that communication path and since it is the concentrator device that intercepts the traffic the Keep Alive packets from any intermediary device would trigger the server to generate RESET packets as a response. When an intermediary device receives these RESET packets it clears its current state information associated with that specific traffic flow e.g. including both level 1 and level 2 rules and forward the RESET packets downstream toward the branch device e.g. intermediary device . This allows the state information generated at the completion of establishing the ADN tunnel to be automatically removed from each in path intermediary device thus allowing the ADN multi hop discovery process to take place again dynamically when traffic destined to the server is seen for the very next time.

When an in path intermediary device receives a standard TCP SYN ACK response e.g. without any additional customized option information it is an indication that there are just two intermediary devices in the communication path and this intermediary device is the concentrator device for that path.

In particular embodiments each intermediary device has distinct firewall rules installed therein for per branch device and per concentrator device. As explained above a specific device may be situated along multiple communication paths and perform different functions for different communication paths. For example consider the deployment case illustrated in where there are multiple communication paths between multiple clients e.g. endpoint devices and and a server endpoint device multiple branch devices e.g. intermediary devices and and multiple concentrator devices e.g. intermediary devices and . In this example concentrator device is the concentrator for branch device . At the same time concentrator device is also an intermediary device between branch device and concentrator device . Therefore concentrator device may intercept communication traffics from branch device but bypass communication traffics from branch device despite the fact that the ultimate destination for both traffics is server .

Particular embodiments may be implemented on one or more computer systems. illustrates an example computer system . In particular embodiments one or more computer systems perform one or more steps of one or more methods described or illustrated herein. In particular embodiments one or more computer systems provide functionality described or illustrated herein. In particular embodiments software running on one or more computer systems performs one or more steps of one or more methods described or illustrated herein or provides functionality described or illustrated herein. Particular embodiments include one or more portions of one or more computer systems .

This disclosure contemplates any suitable number of computer systems . This disclosure contemplates computer system taking any suitable physical form. As example and not by way of limitation computer system may be an embedded computer system a system on chip SOC a single board computer system SBC such as for example a computer on module COM or system on module SOM a desktop computer system a laptop or notebook computer system an interactive kiosk a mainframe a mesh of computer systems a mobile telephone a personal digital assistant PDA a server or a combination of two or more of these. Where appropriate computer system may include one or more computer systems be unitary or distributed span multiple locations span multiple machines or reside in a cloud which may include one or more cloud components in one or more networks. Where appropriate one or more computer systems may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation one or more computer systems may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein where appropriate.

In particular embodiments computer system includes a processor memory storage an input output I O interface a communication interface and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.

In particular embodiments processor includes hardware for executing instructions such as those making up a computer program. As an example and not by way of limitation to execute instructions processor may retrieve or fetch the instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage . In particular embodiments processor may include one or more internal caches for data instructions or addresses. This disclosure contemplates processor including any suitable number of any suitable internal caches where appropriate. As an example and not by way of limitation processor may include one or more instruction caches one or more data caches and one or more translation lookaside buffers TLBs . Instructions in the instruction caches may be copies of instructions in memory or storage and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory or storage for instructions executing at processor to operate on the results of previous instructions executed at processor for access by subsequent instructions executing at processor or for writing to memory or storage or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual address translation for processor . In particular embodiments processor may include one or more internal registers for data instructions or addresses. This disclosure contemplates processor including any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor or include one or more processors . Although this disclosure describes and illustrates a particular processor this disclosure contemplates any suitable processor.

In particular embodiments memory includes main memory for storing instructions for processor to execute or data for processor to operate on. As an example and not by way of limitation computer system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. To execute the instructions processor may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . In particular embodiments processor executes only instructions in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere and operates only on data in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere . One or more memory buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses as described below. In particular embodiments one or more memory management units MMUs reside between processor and memory and facilitate accesses to memory requested by processor . In particular embodiments memory includes random access memory RAM . This RAM may be volatile memory where appropriate. Where appropriate this RAM may be dynamic RAM DRAM or static RAM SRAM . Moreover where appropriate this RAM may be single ported or multi ported RAM. This disclosure contemplates any suitable RAM. Memory may include one or more memories where appropriate. Although this disclosure describes and illustrates particular memory this disclosure contemplates any suitable memory.

In particular embodiments storage includes mass storage for data or instructions. As an example and not by way of limitation storage may include an HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a Universal Serial Bus USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. Storage may be internal or external to computer system where appropriate. In particular embodiments storage is non volatile solid state memory. In particular embodiments storage includes read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these. This disclosure contemplates mass storage taking any suitable physical form. Storage may include one or more storage control units facilitating communication between processor and storage where appropriate. Where appropriate storage may include one or more storages . Although this disclosure describes and illustrates particular storage this disclosure contemplates any suitable storage.

In particular embodiments I O interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more I O devices. Computer system may include one or more of these I O devices where appropriate. One or more of these I O devices may enable communication between a person and computer system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touch screen trackball video camera another suitable I O device or a combination of two or more of these. An I O device may include one or more sensors. This disclosure contemplates any suitable I O devices and any suitable I O interfaces for them. Where appropriate I O interface may include one or more device or software drivers enabling processor to drive one or more of these I O devices. I O interface may include one or more I O interfaces where appropriate. Although this disclosure describes and illustrates a particular I O interface this disclosure contemplates any suitable I O interface.

In particular embodiments communication interface includes hardware software or both providing one or more interfaces for communication such as for example packet based communication between computer system and one or more other computer systems or one or more networks. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network or a wireless NIC WNIC or wireless adapter for communicating with a wireless network such as a WI FI network. This disclosure contemplates any suitable network and any suitable communication interface for it. As an example and not by way of limitation computer system may communicate with an ad hoc network a personal area network PAN a local area network LAN a wide area network WAN a metropolitan area network MAN or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example computer system may communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network or other suitable wireless network or a combination of two or more of these. Computer system may include any suitable communication interface for any of these networks where appropriate. Communication interface may include one or more communication interfaces where appropriate. Although this disclosure describes and illustrates a particular communication interface this disclosure contemplates any suitable communication interface.

In particular embodiments bus includes hardware software or both coupling components of computer system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics

Standards Association local VLB bus or another suitable bus or a combination of two or more of these. Bus may include one or more buses where appropriate. Although this disclosure describes and illustrates a particular bus this disclosure contemplates any suitable bus or interconnect.

Herein reference to a computer readable storage medium encompasses one or more non transitory tangible computer readable storage media possessing structure. As an example and not by way of limitation a computer readable storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk an HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a SECURE DIGITAL card a SECURE DIGITAL drive or another suitable computer readable storage medium or a combination of two or more of these where appropriate. Herein reference to a computer readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. 101. Herein reference to a computer readable storage medium excludes transitory forms of signal transmission such as a propagating electrical or electromagnetic signal per se to the extent that they are not eligible for patent protection under 35 U.S.C. 101. A computer readable non transitory storage medium may be volatile non volatile or a combination of volatile and non volatile where appropriate.

This disclosure contemplates one or more computer readable storage media implementing any suitable storage. In particular embodiments a computer readable storage medium implements one or more portions of processor such as for example one or more internal registers or caches one or more portions of memory one or more portions of storage or a combination of these where appropriate. In particular embodiments a computer readable storage medium implements RAM or ROM. In particular embodiments a computer readable storage medium implements volatile or persistent memory. In particular embodiments one or more computer readable storage media embody software. Herein reference to software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate. In particular embodiments software includes one or more application programming interfaces APIs . This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments software is expressed as source code or object code. In particular embodiments software is expressed in a higher level programming language such as for example C Perl or a suitable extension thereof. In particular embodiments software is expressed in a lower level programming language such as assembly language or machine code . In particular embodiments software is expressed in JAVA C or C . In particular embodiments software is expressed in Hyper Text Markup Language HTML Extensible Markup Language XML or other suitable markup language.

Herein or is inclusive and not exclusive unless expressly indicated otherwise or indicated otherwise by context. Therefore herein A or B means A B or both unless expressly indicated otherwise or indicated otherwise by context. Moreover and is both joint and several unless expressly indicated otherwise or indicated otherwise by context. Therefore herein A and B means A and B jointly or severally unless expressly indicated otherwise or indicated otherwise by context.

This disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly where appropriate the appended claims encompass all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Moreover reference in the appended claims to an apparatus or system or a component of an apparatus or system being adapted to arranged to capable of configured to enabled to operable to or operative to perform a particular function encompasses that apparatus system component whether or not it or that particular function is activated turned on or unlocked as long as that apparatus system or component is so adapted arranged capable configured enabled operable or operative.

