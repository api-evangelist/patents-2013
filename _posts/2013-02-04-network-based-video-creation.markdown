---

title: Network based video creation
abstract: A computing device is configured to provide over a network an ability to create a 2.5D full motion custom multi-media file. In one example, a computing device makes available to a user a plurality of stored video templates into which a user may insert custom video, photos, and/or text. The computing device provides a low resolution preview of the custom video to the user over the network connection. The user then has the ability to edit the custom video prior to finalization. The computing device receives signals indicating purchase or licensing credentials and in response to receiving such credentials, finalizes and delivers a 2.5D video for the user. So configured, a user can relatively cheaply and quickly create video content such as an advertisement having modern visual features such as 2.5D video in a cost efficient and timely manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09110572&OS=09110572&RS=09110572
owner: Visible Spectrum, Inc.
number: 09110572
owner_city: Chicago
owner_country: US
publication_date: 20130204
---
Computer program listings written in ActionScript JavaScript and PHP co filed with EFS Web and identified as follows are incorporated by reference as if fully re written herein VideoComponent.txt 16 kilobytes TemplateProcessor.txt 23 kilobytes MetaDisplay.txt 25 kilobytes BezierInterpolator.txt 5 kilobytes and contentCreator.txt 108 kilobytes .

The computer program listings portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The invention relates generally to network available video editing technology and more specifically to network based video creation.

It is generally known that advertising products and services can result in increased sales for the company or products featured in the advertising. Advertising can come in a variety of forms including print ads static or near static on line advertising or video based advertising. Because video based advertising can convey more information and many situations video advertising can be therefor preferred.

Producing a video advertisement however can be quite pricey. Equipment for producing the video must be purchased or rented and software for combining together the various aspects of a video can also be expensive. In particular where modern advertising generally includes various graphics and video effects to catch the intended audience s attention. Such effects can be difficult to integrate into a video form.

Various methods are known for creating print advertisement using a computer based editing approach. Such systems for creating print advertising however cannot handle the complexities involved with combining various video elements desired for modern advertising.

Generally speaking and pursuant to these various embodiments a computing device is configured to provide over a network an ability to create a 2.5D full motion custom multi media file. The term 2.5D refers to two and a half dimensional video or two dimensional video that shows a series of images that gives the impression of watching a three dimensional video. In one example a computing device makes available to a user a plurality of stored video templates into which a user may insert custom video photos and or text. The computing device provides a low resolution preview of the custom video to the user over the network connection. The user then has the ability to edit the low resolution custom video by manipulating the template prior to finalization. The computing device receives signals indicating purchase or licensing credentials and in response to receiving such credentials finalizes and delivers a 2.5D video for the user. So configured a user can relatively cheaply and quickly create video content such as an advertisement having modern visual features such as 2.5D video in a cost efficient and timely manner. These and other benefits may become clear upon making further review and study of the following detailed description.

Skilled artisans will appreciate that elements in the figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale. For example the dimensions and or relative positioning of some of the elements in the figures may be exaggerated relative to other elements to help to improve understanding of various embodiments of the present invention. Also common but well understood elements that are useful or necessary in a commercially feasible embodiment are often not depicted in order to facilitate a less obstructed view of these various embodiments. It will further be appreciated that certain actions and or steps may be described or depicted in a particular order of occurrence while those skilled in the art will understand that such specificity with respect to sequence is not actually required. It will also be understood that the terms and expressions used herein have the ordinary technical meaning as is accorded to such terms and expressions by persons skilled in the technical field as set forth above except where different specific meanings have otherwise been set forth herein.

Referring now to the drawings and in particular to an illustrative process that is compatible with many of these teachings will now be presented. The method of includes receiving by a computing device over a network a request from a requesting computing device to create a 2.5D full motion custom multi media file. The computing device makes a library of stored video templates available to the requesting computing device. In one example the computing device provides signals to the requesting computing device to effect presentation of media available for purchase from third parties over an internet based transaction. In other words a user interface is provided for example through a web browser or through another computer based application such that a user desiring to create a multi media file can access a library of video templates to use in creating the user s custom file. The templates themselves are videos that can be manipulated using a user interface in a variety of ways to create a custom multi media file.

For example a library of stored videos can be accessed for a user to include within a given template. The video library may include videos aggregated from a variety of sources including cloud based storage libraries videos created by the entity providing the capability to make a custom file videos available by license and other videos collected and processed to work within the system as described in further detail below.

One example for making the library of stored video templates available includes receiving a media packet from a media providing computing device. In this approach a media packet from a third party is downloaded from the separate media providing computing device controlled by a third party that owns or created the media. Once integrated into the current system the media can then be made available to a user to serve as the basis of or be incorporated into a user s given custom multi media file. After receiving the media packet from the media providing computing device the media packet is processed with the computing device to determine errors in the media contained in the media packet. Additionally the media packet can be processed by the computing device to extract metadata associated with the media packet and to extract assets other than the media from the media packet. Such assets can include any additional information related to the media its use or its content. The media metadata and assets are then stored in a storage device configured to make the media available to the requesting computing device in accord with the metadata. For instance a particular media packet may come with certain use restrictions as may be defined in metadata associated with the media packet. The storage device can then store the metadata in association with the media such that use restrictions can be respected when making the media packet available to other users.

With respect to processing the media packet to determine errors within the media packet the computing device may verify the media s file type and integrity. If there are problems with the media the computing device can perform quality corrections to the media to create a corrected media file. The corrected media file can be transcoded to create a transcoded media file. Transcoding the media file standardizes the video for easier processing when creating to the full motion custom multi media file for the user. In one approach all video data is transcoded or converted to flash video and all still images are converted to JPEG or PNG type files. The computing device then returns the transcoded media file and data regarding the media s quality for storage. So configured media from virtually any source can be incorporated into the system and made available to users in preparing custom video for their personal or business uses.

With reference again to in response to receiving an indication of selection of a video template from the library of stored video templates the computing device provides a user interface for the requesting computing device to manipulate the template. The computing device also provides elements of a low resolution preview of the 2.5D full motion custom multi media file over the network for playback at the requesting computing device. The template is configured to allow the requesting computing device of a user to edit or manipulate the elements of the low resolution preview of the 2.5D full motion custom multi media file. Accordingly the requesting computing device may periodically send during the editing process and the computing device receives signals to effect updating the low resolution preview. When the editing process is complete the requesting computer sends and the computing device receives signals to effect creation of the full resolution 2.5D full motion custom multi media file.

So configured because the editing is done locally on the user s computing device network bandwidth resources and the providing computing device s processing resources are conserved. The user also experiences reduced network transmissions related processing delays during the editing process. In one example there is no network load during a user s editing text placing elements or changing filters during editing. In still another example although adding new video images and or audio to a file can increase network load such files are generally the low resolution files that minimize this impact. Because the working version of the video is low resolution and optionally watermarked it is unlikely that a user will capture or otherwise use the low resolution version of the multi media file thereby largely ensuring that the user will proceed with payment to the service provider when an acceptable final product is produced.

The editing of the templates will vary depending upon what the user wants in the final video and what the capabilities and design of the given template are. For example one given template may include a variety of video that includes animations and movement which have embedded therein blank spaces into which a user may enter text images or additional video. The template itself is built from a markup language for describing the composition and movement of video elements in a 2.5D space. The video elements may include external audio image and video elements or internal text and simple shape elements. External elements are fetched as separate files and may be provided by the computing device executing the method or from third party devices. Internal elements are directly rendered from data in the given template using method to search preview add via user upload and license external content.

As the working video or template advances in time and with reference to the time indicator overlaps with an element labeled clip 1 which illustrates where a video clip can be inserted into the template played in the window . The illustrated example template at this point in time includes the video template imagery illustrated in the background of the window and a portion of the video that displays the clip as selected by the user. Further element is labeled text 1 to illustrate a portion of the template that is user editable at this portion of the video template. The text is displayed in the window at the illustrated portion of the video.

The computing device can make available to the user the option to choose pre stored media for incorporation into the user s video instead of or in addition to having the user upload media to incorporate into the video. For example the computing device can make available to the requesting computing device a library of stored audio files or templates. In response to receiving an indication of selection of the template from the library of stored templates that includes audio the computing device can provide for the user interface to allow the requesting computing device to send signals effecting editing of the video template to add or modify audio as part of creating the 2.5D full motion custom multi media file. Similarly the computing device can receive from the requesting computing device a text based message to be added as audio to the 2.5D full motion custom multi media file. In response to receiving the text based message the computing device can send an order to effect receipt of an audio track based on the text based message and make the audio track based on the text based message available to the requesting computing device for incorporation as part of creating the 2.5D full motion custom multi media file per instructions received through the user interface. In this approach the computing device can automatically place an order with a third party vendor whose business it is to provide audio voiceovers based on submitted text. The computing device will then receive from a vendor computing device an audio file corresponding to the voiceover of the text based message which audio file can then be provided to the user via the user interface device for incorporation into the custom multi media file. In another approach text can be automatically converted to an audio track using known methods.

Returning again to the computing device provides elements of a low resolution preview of the 2.5D full motion custom multi media file over the network for playback at the requesting computing device. The low resolution preview may be the initial template to be edited by the user or intermediate versions updated during the editing process. To be able to provide to low resolution preview according to one approach the computing device processes the media packets from a media providing computing device when making the library of stored video templates to create a low resolution media version for use in providing a low resolution preview. Accordingly the low resolution media version can be provided in the preview window of the user interface device. In another example when a modified 2.5D full motion custom multi media file is prepared and a preview is requested the computing device analyzes the 2.5D full motion custom multi media file to build a list of required preview elements. The computing device also determines capture methods for the elements of the 2.5D full motion custom multi media file and transcodes elements of the 2.5D full motion custom multi media file to create transcoded elements to use in the low resolution preview. The computing device then builds the low resolution preview of the 2.5D full motion custom multi media file using the transcoded elements. When editing is complete the requesting computing device will so notify the computing device which receives 130 information relating to purchase credentials relating to the 2.5D full motion custom multi media file. The purchase credentials can be any of a variety of forms that allow the user to pay the operator of the computing device for the service of providing the ability to create a custom 2.5D multi media file and optionally to account for licensing fees incurred in connection with any of the elements used as part of the custom 2.5D multi media file. For example a user may pay a one time fee for creating the single 2.5D multi media file or the user can buy one or more subscriptions that allow defined access to the computing device to make an unlimited or pre defined number of 2.5D custom multi media files. Moreover various subscriptions can be defined that provide access to difference libraries of content that can be used in creating a given 2.5D multi media file. In response to receiving the information relating to purchase credentials the computing device makes available the 2.5D full motion custom multi media file to the requesting computer device. The final 2.5D multi media file can be provided to the user in any of a variety of fashions known to those skilled in the art.

By one approach to finalize the file prior to provision to the user the computing device gathers elements of the 2.5D full motion custom multi media file and renders individual frames of the 2.5D full motion custom multi media file. The elements gathered include the audio video picture text and or other media incorporated into the final video. The individual frames are built up of the various individual aspects of a given video as will correspond to a given frame of the video. Thus text video still pictures portions belonging to an original template and the like that are all part of a particular image of the 2.5D full motion custom multi media file will be compiled together into a single individual frame saved using a particular format such as a PNG format. The computing device saves the individual frames as an image sequence and encodes the image sequence together into the 2.5D full motion custom multi media file.

Where the 2.5D full motion custom multi media file is compiled from a data feed the computing device processes the data feed identifying elements to compile into the 2.5D full motion custom multi media file by compiling a data compilation identifying elements available for use. The computing device gathers elements identified in the data compilation that are needed to compile the 2.5D full motion custom multi media file and builds a rendering packet that identifies the elements for rendering when compiling the 2.5D full motion custom multi media file. So configured the computing device has a list of all components that are needed to create the individual frames that are then later rendered into a video image.

In one approach the functionality or logic described above may be embodied in a form of code that may be executed in a separate processor circuit of the computing device. If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by suitable execution systems such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement this specified logical function. In one such example a non transitory computer readable medium can store instructions that cause a computing device in response to reading the instructions to perform the operations described above.

Those skilled in the art will appreciate that the above described processes are readily enabled using a wide variety of available and or readily configured platforms including partially or wholly programmable platforms as are known in the art or dedicated purpose platforms as may be desired for some applications. Referring now to an illustrative approach to such a platform will now be provided. illustrates the system overview whereby a computing system is configured to execute the functions described above and is configured to have interaction over a network such as the internet with a variety of other devices controlled by other entities such as a media provider device a customer device a media player server network device a media player device a customer administrator device and a system administrator device .

In each illustrated process may be performed by separate computing devices operating under the control of a single entity or by a single computing device. It will be understood that the processes described above could be executed by a single computing device or that a computing device may include multiple computing devices. The symbols of illustrate specific aspects of the illustrated example. For instance each box with rounded corners represents a process executed by the computing device. Databases are illustrated as boxes adjacent a separate rectangle and marked with the moniker D with a number. These databases may be physically separate databases or simply different logical storage areas in a single database. Cloud symbols indicate interconnection processes whereby the computing system communicates with other systems to effect the processes described above. A box with sharp corners represents a separate system or computing device in communication with the system . Data flow among the various elements is indicated by the arrows with an indication of the type of data being exchanged being provided by text associated within individual arrows.

The system of includes a media ingest process 1 that accepts media files from customers and providers and processes the files for use within the system . Turning to an example of a media ingest process 1 is illustrated. In this example a media packet is received from a media provider or customer computing device by the process media element 1.0. The media packet may include a media file entitlement information licensing information and arbitrary metadata supplied by the provider of the media packet. The media file and information is provided to an ingest processing element 1.1 which returns the processed media and metadata to the process media element 1.0. The media ingest process 1 further includes a received metadata process 1.2 that receives the metadata from the process media process 1.0 and prepares the metadata for storage in the database D1. A received media process 1.3 receives the processed media from the process media process 1.0 and configures it for storage in the database D1. By one approach the received media processed 1.3 can include a routine to provide only preview media for the database for use in the process of creating a 2.5D full motion custom multi media file.

A receive non media assets process 1.6 is configured to receive assets from the process media process 1.0 including full resolution media from the process media process 1.0. The various processes illustrated in may also determine status messages and error messages during their normal routines. These messages are sent to the process media process 1.0 which in turn provides this information to a separate status error reporting process 1.4. The status error reporting process 1.4 processes the status and errors whereby such information regarding errors or status information may be provided and stored in the database D1.

Turning to the example ingest process 1.1 of will be further described. The ingest processing process 1.1 functions to pull apart the provided media files to extract information and create low resolution versions of the media for reference within the video editor. A manage process 1.1.0 receives the initial media file and target information or data from a database D1 or through the media ingest process 1. Its process manager 1.1.0 coordinates the processing of the data. The media file and target data are first sent to a quality check and corrections process 1.1.1. The quality check and correction process 1.1.1 checks for file integrity and usability including compatibility with a processing format for the system and final form of the 2.5D custom multi media file. If corrections to the data can be made the quality check and corrections process 1.1.1 makes those corrections including transcoding the content as appropriate.

Turning again to the media ingest process 1.1 receives media for processing from a variety of sources including media from a media provider or artist computing device via a contributor user interface 9 and a bulk ingest process 6 configured to receive media packets from the contributor user interface 9 and a client user interface 7. Through these user interfaces the bulk ingest processor process 6 can receive media from a customer computing device or a media provider computing device . The bulk ingest process 6 is configured to process large amounts of media as provided by these entities in such a way to allow the media ingest process 1 to handle the information. The media ingest process 1 can instead receive the media packet directly from the client user interface 7 if the media packet provided is not so large as to need to be processed by the bulk ingest process 6.

The transcode content process 2 is illustrated as receiving media from the database D1 and providing media packets to the media ingest process 1. The database in this example is used as a go between various users of the overall system and processes executed by the system in order to create a custom multi media file. For example the database D1 can receive data from the client user interface 7 the administrator user interface 12 or from a system administrator user interface to effect communications or receive information from the consumer computing device the customer administrator computing device or a system administrator computing device . Depending on how the data is needed in the other processes the database D1 can then be accessed by a variety of processes within the system . Another example of such a process is the content renderer process 4.

In a situation where bulk amounts of content need to be rendered a bulk content generator process 8 as illustrated in can pull data for rendering from the database D1 and prepare rendered packets individually to the content renderer process 4. An example bulk content generator process as illustrated in processes the data feed by pulling out data to be injected into the user s composition or custom multi media file. The composition is then copied and edited for each version of the file and handed off the rendering for final production. This process is managed by a bulk processor 7.0 designed to handle files such as spreadsheet files or feeds such as RSS feeds. A feed trigger such as a file or RSS feed is received from the bulk processor 7.0 from a separate feed trigger device . The RSS feed or file can then be incorporated into a template or video. A gather required elements process 7.1 receives information regarding the media to process from the bulk processor 7.0 and from an elements provider device which in this example is a responsive server for this process. The gathered elements are provided to a manage import process 7.3 that is designed to work with the media ingest process 1 to collect together the elements on a one by one basis until the file is fully compiled. This information is provided to a build render packet process 7.4 which information is provided to the content render 4 to facilitate the final rendering of the content as described above.

Turning back again to media to be used in creating a custom multi media file can be received not only through specific media contributors and customers but also through other external sources. In the example of a client through the client user interface 7 can interact with an external media purchase process 13 that facilitates the client s purchase of media through external asset libraries 11. When purchased these external media assets are then provided to the media ingest process 1 as described above.

An example external media purchaser process is illustrated in . Generally speaking the example process accepts purchase requests from users through a client interface. The process routes and manages the transactions with external or third party media provider partners and through internal accounting systems to facilitate purchase of the media and delivery of the media to the media ingest process in accord with target requirements. The client through the client user interface 7 browses media purchase options and sends information regarding a final composition and purchase agreement that is received by the process purchase requirements process 13.0. The process purchase requirements process 13.0 forwards the purchase request and credentials information to a verify authenticity permission process 13.1 that acts as a screen for such purchasing requests. If the purchase requests are approved they are provided to a route to provider process 13.2 that accesses an internal media database D3 to collect information with respect to which third party asset provider is providing the content being purchased and the rules for engagement with such third party. The route to provider process 13.2 then initiates and completes the transaction with the media asset provider or other third party media provider or artist. The database D3 may include a listing of third party media providers the type of media that they provide pricing structures for such media and content information for such third party asset providers. Such information may be kept within the system or as an external media asset library 11. When the transaction with the third party media asset provider is complete the media is provided back to the system via the route to provider process 13.2. The media is then as illustrated in provided to the media ingest process 1 to be processed as described above.

With all of the various media available to a user to build up a 2.5D custom multi media file various information processing and organization systems can be used to facilitate ease of use. For example in a search aggregator process 10 is available to a user through the client user interface 7 and uses indices provided by system databases such as database D3 to facilitate searching for and use of various stored media. illustrates an example search aggregator process that accepts the user s media search parameter and gathers search results from the system s media library and from media provider partners having media libraries having third party libraries available for use. The search aggregator process normalizes the third party media library information for search and information provision. In response to a final selection by a user the search aggregator process accepts a purchase identification and can handle a transaction with an external media provider. In the illustrated example a process search parameters process 10.0 receives search parameters from the customer and returns the results to the customer device. The search parameters are provided to a select provider process 10.2 that determines which provider will be searched in response to the search request. The search provider process 10.2 can access an internal database D4 that includes search indices for both internal databases of information and information from third party media asset providers. To facilitate creation of such a database D4 a build search indices process 10.1 receives asset inventory information from third party media asset providers and processes the information to match the search indices format for the search database D4. The build search indices process 10.1 can also occasionally browse one or more media asset provider libraries to update the search database D4 as needed. Alternatively the select provider process 10.2 can directly access the media asset provider information in response to receiving information from the search database D4 with respect to available information at a third party media asset provider.

The final 2.5D full resolution custom multi media file can be made available to a user from the system database D1 in a variety of ways. As illustrated in a distribution process 5 can receive the media and provide the media to various devices over a network interaction. For example the media can be provided in response to receiving API application programming interface Config Subscribe information from media player server networks device s . In another example the media can be provided in response to receiving MRSS multimedia rich site summary subscription information from media players . In other words the media file can be provided directly to video services such as YouTube or the like as requested by the user. The media can also be provided through a client user interface to the customer for example in response to HTTP FTP requests.

So configured a user can access a system to choose a template to edit using stock or original video text audio or still images to readily create a custom 2.5D multi media file as a fraction of the cost of producing such a video from scratch. The video can be previewed using a low resolution to facilitate fast review of the work and a variety of pricing and licensing structures are made available to facilitate incorporation of plethora aspects into the file. The final file is then ready for download to a user for use in website advertising or the like.

Those skilled in the art will recognize that a wide variety of modifications alterations and combinations can be made with respect to the above described embodiments without departing from the scope of the invention and that such modifications alterations and combinations are to be viewed as being within the ambit of the inventive concept.

