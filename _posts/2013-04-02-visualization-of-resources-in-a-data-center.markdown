---

title: Visualization of resources in a data center
abstract: A system and method are disclosed for monitoring usage of resources (e.g., hosts, instances, applications, etc.) in a datacenter. Customers, developers and system administrators can collect and track metrics, gain insight, and react to keep applications and businesses running smoothly by providing system-wide visibility into resource utilization, application performance, and operational health. Users can programmatically retrieve monitoring data and view heat maps to assist in troubleshooting, spotting trends, and taking automated action based on the state of a cloud environment. Users can further monitor resources in real-time, so that metrics such as CPU utilization, latency, memory usage, transaction volumes, error rates, etc. can be visualized.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09438495&OS=09438495&RS=09438495
owner: Amazon Technologies, Inc.
number: 09438495
owner_city: Reno
owner_country: US
publication_date: 20130402
---
Network based services exist that allow customers to purchase and utilize instances of computing resources such as virtual machine instances on a permanent or as needed basis. In addition to virtual machine instances these services typically allow customers to purchase and utilize instances of other types of computing resources for use with the virtual machine instances. For example customers might be permitted to purchase and utilize instances of data storage resources instances of networking resources and instances of other types of resources.

Managing network based services such as those described above can be extremely complex. At least some of this complexity is attributable to the large number of instances of computing resources and other types of resources that typically exist in such a service at any given time. For example some network based services might utilize dozens of data centers around the world hundreds of thousands or even millions of server computers along with large numbers of networking components software programs and other types of resources. When a large number of resources are utilized by a network service in this way it can be very difficult to visualize hosts or other network components and correlate the same with large scale events that occur.

A system and method are disclosed for monitoring usage of resources e.g. hosts instances applications etc. in a datacenter. Customers developers and system administrators can collect and track metrics gain insight and react to keep applications and businesses running smoothly by providing system wide visibility into resource utilization application performance and operational health. Users can programmatically retrieve monitoring data and view heat maps to assist in troubleshooting spotting trends and taking automated action based on the state of a cloud environment. Users can further monitor resources in real time so that metrics such as CPU utilization latency memory usage transaction volumes error rates etc. can be visualized and correlated to hosts having a common characteristic similar location recently updated etc. . Information can be viewed describing an operational state of a resource such as the current load being serviced by a particular data center room of server computers rack of server computers individual server computer virtual machine instance or applications.

In some implementations a resource monitoring component executes within or in conjunction with the distributed environment and collects data regarding the state of the resources . For example the resource monitoring component can collect data that describes the usage characteristics of resources . The usage characteristics can include error rates CPU load memory usage packet dropping percentage of impaired instances on hosts temperature etc.

In some embodiments once the data is obtained the resource monitoring component can store the data in a quantitative metrics data store . The data store or the resource monitoring component can allow the collected data to be made available for consumption and use by other components. For example in some embodiments the resource monitoring component is configured to expose an application programming interface API or another mechanism through which interested parties can request and receive the data collected for a particular resource . It should be appreciated that while the data is discussed herein primarily in the context of data describing the operational state of a resource the quantitative metrics stored in the data store can include other information about a resource such as information describing the configuration of the resource and other aspects of a resource. In this way the resource monitoring component can be utilized to obtain virtually any type of information about a resource in the distributed environment .

A resource viewing tool can be used to collect data from the quantitative metrics data store or the resource monitoring component for presentation to a user. Other data bases can also be accessed such as a resource metadata store . The resource viewing tool can be a web based viewing tool accessible by a client device through a light weight application or through a browser. Alternatively the resource viewing tool can be an application located on a client device that receives data and displays the data to a user upon request. The resource viewing tool can include a rendering engine for displaying a heat map in a display or viewing pane . Alternatively the resource viewing tool can generate a representation of the heat map for display on a client device. The resource metadata store can provide information related to the resources but generally other than real time usage characteristics. Some examples of data stored in the resource metadata store includes resource location e.g. physical location in the network amount of time since a last software upgrade uptime occupancy etc. The resource metadata store can thus provide a different set of metrics than the quantitative metrics available in data store . Input parameters including one or more grouping metrics and quantitative metrics can supplied to the resource viewing tool in order to display data to the user. The input parameters can be user supplied such as via a user interface. In some embodiments the display is a heat map that correlates the input metrics so that a user can easily visualize relationships between the data. To generate the heat map the resource viewing tool can use a locality preserving space filling transformation such as using a Hilbert curve. For example the transformation can be from one dimensional to two dimensional such as by mapping indices of the resources to two dimensional coordinates along a Hilbert curve. In a simple examples the heat map can be a plot of a group of host servers that are within a predefined region against a quantitative metric such as a number of errors on a host server computer CPU load on a host server computer memory usage on a host server computer network input output transmission rates percentage of malfunctioning instances executing on a host server computer or a physical characteristic of a host server computer. In this way one or more hot spots can be visualized so that a user or administrator can easily view a problem area at the data center and take corrective action.

The design of can be easily modified so that the resource monitoring tool supplies quantitative metrics directly to the resource viewing tool rather than or in addition to the data store . Other alternative embodiments have a single data base for storing resource metadata and quantitative metrics. Still further one or more of the data stores and the resource viewing tool can be located within the distributed environment . Still further the quantitative metrics data store can be spread across multiple data stores. The resource metadata store can likewise be spread across multiple data stores. Such implementation details can vary widely and are not of importance to the present application.

After the list of resources have passed through the above transformation the quantitative metrics can be applied to the list of resources by changing a look and feel of the resources that satisfy the metrics. For example the resources that satisfy the metrics can have their color changed or depiction changed. In the illustrated example as shown at hot spot the resources satisfying the quantitative metrics are shown as an X and resources that do not satisfy the metrics are shown as an 0 . The particular representation can be easily modified based on a desired look and feel. As shown a user can select the hot spot through user touch for touch displays or through other user input devices as is well understood in the art. In response to the user selection a hot spot resource list can be generated which is a subset of the resources but within the particular geometric area on the viewing pane . The geometric area can be predefined or user selectable such as through a user gesture input command. In any event the hot spot resource list can allow a user to inquire into further information about the resources in the hot spot.

The instances of resources provided by the distributed environment are enabled in one implementation by one or more data centers A N which may be referred to herein singularly as a data center or collectively as the data centers . The data centers are facilities utilized to house and operate computer systems and associated components. The data centers typically include redundant and backup power communications cooling and security systems. The data centers might also be located in geographically disparate locations. One illustrative configuration for a data center that implements the concepts and technologies disclosed herein is described below with regard to .

Users of the distributed environment can access the resources provided by the data centers over a suitable data communications network such as a Wide Area Network WAN and through a client device such as a computer. Although a WAN is illustrated it should be appreciated that a local area network LAN the Internet or any other networking topology known in the art that connects the data centers to the client device can be utilized. It should also be appreciated that combinations of such networks might also be utilized.

Positioned intermediate the WAN and the distributed environment can be a resource monitoring component and or a resource viewing tool . Either one or both can be coupled to one or more databases including a resource metadata store and a quantitative metrics data store. In this embodiment the resource monitoring component is positioned outside of the data centers so as to collect data in parallel from the data centers. Additionally the resource viewing tool is shown as a web based application that can provide data to a client device for display such as data needed for displaying a heat map. As previously described in alternative embodiments the resource viewing tool can be positioned on the client device such as in the form of an application. Additionally the resource monitoring component can be positioned in one or more of the data centers .

In one embodiment the instances are virtual machine instances. As known in the art a virtual machine instance is an instance of a software implementation of a machine i.e. a computer that executes programs like a physical machine. Each of the servers can be configured to execute an instance manager capable of instantiating and managing instances of computing resources. In the case of virtual machine instances for example the instance manager might be a hypervisor or another type of program configured to enable the execution of multiple virtual machine instances on a single server.

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances other types of instances of computing resources can be utilized with the concepts and technologies disclosed herein. For instance the technologies disclosed herein might be utilized with instances of hardware resources instances of data storage resources instances of data communications resources instances of networking resources instances of database resources and with other types of instances of computing resources.

The data center also includes one or more server computers F reserved for executing software components for managing the operation of the data center the server computers the instances and other resources within the distributed environment . In particular the server computer F can execute the resource monitoring component and or the resource viewing tool . Details regarding the operation of each of these components have been provided above. In this regard it should be appreciated that while these components are illustrated as executing within the distributed environment computing systems that are external to the distributed environment can also be utilized to execute some or all of these components. Coupled to the server computer F can be the quantitative metric data store and the resource metadata store as already described above. These storage devices are readable by the resource viewing tool and writable by the resource monitoring component . Also shown in the data center are a deployment service that stores information about when software updates were pushed out to servers and a topology management service that knows the physical location of the servers. In other embodiments such services can be external to the data center . In any event the deployment service and topology management service can be used to supply and store metrics in the resource metadata store . Additionally not shown is a component located on the server computers for capturing quantitative metrics and passing the same to the resource monitoring component. The component can capture such metrics as the number of errors on a host server computer CPU load on a host server computer memory usage on a host server computer percentage of malfunctioning instances executing on a host server computer or a physical characteristic of a host server computer such as temperature readings from a thermocouple fan speed power usage etc. Such a component can be incorporated into the instance manager .

In the example data center an appropriate local area network LAN is utilized to interconnect the server computers A E and the server computer F. The LAN can also be connected to the WAN illustrated in . It should be appreciated that the configuration and network topology illustrated in have been greatly simplified and that many more computing systems networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. In one implementation the resource monitoring component in the data center can collect the quantitative data from other data centers so as to aggregate the data. In this way each data center can have a local resource monitoring component that communicates with a master resource monitoring component located in one of the data centers for aggregating the data.

With reference to the computing environment includes one or more processing units and memory . In this basic configuration is included within a dashed line. The processing units execute computer executable instructions. A processing unit can be a general purpose central processing unit CPU processor in an application specific integrated circuit ASIC or any other type of processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. For example shows a central processing unit as well as a graphics processing unit or co processing unit . The tangible memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two accessible by the processing unit s . The memory stores software implementing one or more innovations described herein in the form of computer executable instructions suitable for execution by the processing unit s . For example the software can implement the resource monitoring component or the resource viewing tool.

A computing system may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The tangible storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information in a non transitory way and which can be accessed within the computing environment . The storage stores instructions for the software implementing one or more innovations described herein.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media can use an electrical optical RF or other carrier.

Although the operations of some of the disclosed methods are described in a particular sequential order for convenient presentation it should be understood that this manner of description encompasses rearrangement unless a particular ordering is required by specific language set forth below. For example operations described sequentially may in some cases be rearranged or performed concurrently. Moreover for the sake of simplicity the attached figures may not show the various ways in which the disclosed methods can be used in conjunction with other methods.

Any of the disclosed methods can be implemented as computer executable instructions stored on one or more computer readable storage media e.g. non transitory computer readable media such as one or more optical media discs volatile memory components such as DRAM or SRAM or nonvolatile memory components such as flash memory or hard drives and executed on a computer e.g. any commercially available computer including smart phones or other mobile devices that include computing hardware . As should be readily understood the term computer readable storage media does not include communication connections such as modulated data signals. Any of the computer executable instructions for implementing the disclosed techniques as well as any data created and used during implementation of the disclosed embodiments can be stored on one or more computer readable media e.g. non transitory computer readable media which excludes propagated signals . The computer executable instructions can be part of for example a dedicated software application or a software application that is accessed or downloaded via a web browser or other software application such as a remote computing application . Such software can be executed for example on a single local computer e.g. any suitable commercially available computer or in a network environment e.g. via the Internet a wide area network a local area network a client server network such as a cloud computing network or other such network using one or more network computers.

For clarity only certain selected aspects of the software based implementations are described. Other details that are well known in the art are omitted. For example it should be understood that the disclosed technology is not limited to any specific computer language or program. For instance the disclosed technology can be implemented by software written in C Java Perl JavaScript Adobe Flash or any other suitable programming language. Likewise the disclosed technology is not limited to any particular computer or type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.

It should also be well understood that any functionality described herein can be performed at least in part by one or more hardware logic components instead of software. For example and without limitation illustrative types of hardware logic components that can be used include Field programmable Gate Arrays FPGAs Program specific Integrated Circuits ASICs Program specific Standard Products AS SPs System on a chip systems SOCs Complex Programmable Logic Devices CPLDs etc.

Furthermore any of the software based embodiments comprising for example computer executable instructions for causing a computer to perform any of the disclosed methods can be uploaded downloaded or remotely accessed through a suitable communication means. Such suitable communication means include for example the Internet the World Wide Web an intranet software applications cable including fiber optic cable magnetic communications electromagnetic communications including RF microwave and infrared communications electronic communications or other such communication means.

The disclosed methods apparatus and systems should not be construed as limiting in any way. Instead the present disclosure is directed toward all novel and nonobvious features and aspects of the various disclosed embodiments alone and in various combinations and subcombinations with one another. The disclosed methods apparatus and systems are not limited to any specific aspect or feature or combination thereof nor do the disclosed embodiments require that any one or more specific advantages be present or problems be solved.

In view of the many possible embodiments to which the principles of the disclosed invention may be applied it should be recognized that the illustrated embodiments are only preferred examples of the invention and should not be taken as limiting the scope of the invention. Rather the scope of the invention is defined by the following claims. We therefore claim as our invention all that comes within the scope of these claims.

