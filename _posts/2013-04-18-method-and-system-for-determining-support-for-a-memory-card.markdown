---

title: Method and system for determining support for a memory card
abstract: Embodiments related to methods and systems for determining support for a memory card, where the memory card is accessible to a card reader and the card reader is in communication with an accessing device. One embodiment comprises transmitting a first test command to the memory card, receiving a response to the first test command, and determining that the response to the first test command indicates that a card type is not supported by a plurality of card drivers. In response to said determining, at least one additional test command specific to a card type supported by a selected card driver is automatically transmitted, and if the response is successful, the selected card driver, which was previously determined not to support the card type of the memory card, is indicated to support the card type of the memory card.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08746562&OS=08746562&RS=08746562
owner: BlackBerry Limited
number: 08746562
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20130418
---
This application is a continuation of U.S. patent application Ser. No. 13 412 784 filed on Mar. 6 2012 which is a continuation of U.S. patent application Ser. No. 11 465 232 filed on Aug. 17 2006 which issued to patent as U.S. Pat. No. 8 152 066. The entire contents of U.S. patent application Ser. No. 13 412 784 and U.S. patent application Ser. No. 11 465 232 are hereby incorporated by reference.

Embodiments relate to methods and systems for determining support for a memory card where the memory card is accessible to a card reader and the card reader is in communication with an accessing device.

Some companies or agencies create specifications for middleware applications that are loaded onto smart cards. Many different smart card vendors can create smart cards which have the middleware applications on them. For example for common access cards CAC there are about seven different smart card vendors.

A separate client application needs to be written for each accessing device to communicate with the middleware application on the smart card. The accessing device needs to have a different smart card driver for each smart card type or middleware it needs to support. When a smart card becomes accessible to a card reader in communication with an accessing device the accessing device determines which of the card drivers it stores should be used to communicate with that smart card. This may be done by asking the smart card for its Answer To Reset ATR and then asking each card driver if it recognizes the ATR. If no drivers recognize and support the ATR then the accessing device is unable to communicate with the smart card.

The ATR is an array of bytes that contains protocol information. Part of the ATR contains historical bytes that are vendor specific. A vendor that creates its own middleware for its card may encode the same historical bytes in all of its smart cards that will need to be supported by its client software. This way if the vendor creates a new smart card for example with more memory the new card will be supported by the old client software.

A problem occurs when different card vendors create cards which support common middleware and need to be understood by different client software on the accessing device. In this case each card has different historical bytes so the client software needs to hard code support for each card via the ATR . When a new card vendor is introduced it may require a software update for the accessing device client software to add support for the new card by encoding the new card s ATR into the client software. Creating new client software is time consuming and costly to deploy.

Embodiments relate to methods and systems for determining support for a memory card where the memory card is accessible to a card reader and the card reader is in communication with an accessing device.

Certain embodiments relate to a method of testing support for a memory card that is not recognized by an accessing device comprising a for a selected one of a plurality of card drivers in the accessing device transmitting a test command to the memory card the test command being specific to a selected card type b receiving at the selected card driver a response to the test command and c determining from the response whether the selected card type corresponds to a memory card type of the memory card and is supported by the selected card driver.

Other embodiments relate to a method for determining support for a memory card wherein the memory card is accessible to a card reader and the card reader is in communication with an accessing device. The method comprises a transmitting a session request from the accessing device to the memory card via the card reader b receiving a first response to the session request from the memory card the first response comprising first data related to a type of the memory card c determining at the accessing device that the memory card type is not recognized by any of a plurality of card drivers on the accessing device based on the first data d for a selected one of the plurality of card drivers transmitting a test command to the memory card the test command being specific to a selected card type e receiving at the selected card driver a second response to the test command and f determining from the second response whether the selected card type corresponds to the memory card type and is supported by the selected card driver.

The test command may be selected from a plurality of different test commands. The test command may be selected from the group consisting of a file selection command to select a file at a specific location on the memory card a file read command to read a unique identifier of the memory card and a command specific to the selected card type. The file selection command may select one or more certificate files normally located at the specific location for the selected card type.

Steps d e and f may be repeated for each of the plurality of different test commands until it is determined that the selected card type corresponds to the memory card type or that the selected card driver does not support the selected card type. Steps d e and f may be repeated for each of the plurality of card drivers until it is determined that the selected card type for one or more of the plurality of card drivers corresponds to the memory card type or that none of the plurality of card drivers supports the memory card type.

Step d may comprise opening a session between the selected card driver and the memory card to transmit the test command and receive the second response.

The memory card may be a smart card. The smart card may be a common access card CAC . The first response may be an Answer to Reset ATR response. The accessing device may be a mobile electronic device or a personal computer.

Further embodiments relate to a system for determining support for a memory card accessible to a card reader. The system comprises a processor within an accessing device in communication with the card reader and a memory accessible to the processor. The memory stores program code executable by the processor. The program code comprises a plurality of card driver modules and a card interface module. The card interface module is configured to facilitate communication with the memory card and the card drivers to determine that a memory card type of the memory card is not recognized by any of the card drivers. In response to determining that the memory card type is not recognized the card interface module causes at least one of the card driver modules to transmit a test command to the memory card the test command being specific to a selected card type. The at least one card driver module is configured to determine from a response to the test command whether the selected card type corresponds to the memory card type and is supported by the at least one card driver module.

The card interface module may determine that the memory card type is not recognized when each card driver module indicates that it does not recognize data received from the memory card that relates to the memory card type.

The test command may be selected from a plurality of different test commands specific to the card type. The test command may be selected from a group consisting of a file selection command to select a file at a specific location on the memory card a file read command to read a unique identifier of the memory card and a command specific to the selected card type. The file selection command may select one or more certificate files normally located at the specific location for the selected card type.

The at least one card driver module may open a session with the memory card via the card reader in order to transmit the test command and receive the response.

The memory card may be a smart card. The smart card may be a common access card CAC . The accessing device may be a mobile electronic device or a personal computer.

The mobile device may be any suitable wirelessly enabled handheld mobile device. The mobile device may be a dual mode data and voice communication device and personal digital assistant device such as is described in further detail below in relation to . Alternatively the mobile device may be a single mode data communication device. The mobile device may be capable of e mail communication. The user of mobile device may be required to authenticate itself for use of the mobile device by providing a password or a personal identification number PIN code for example to unlock a user interface of mobile device to digitally sign a message or to decrypt an encrypted message.

Personal computer may be any kind of computer such as a normal desktop computer laptop or other portable or fixed computer system which may require access to memory card . While computing device is described as being a PC it should be understood that it need not be of a particular type of computer nor must it run a particular operating system. While not specifically shown in PC is enabled for wireless and or wired communication with card reader in a manner compatible with the communication capabilities of card reader described below in relation to .

Memory card may be a smart card. Smart cards are personalized security devices defined by the ISO 7816 standard and its derivatives as published by the International Organization for Standardization. A smart card may have a form factor of a credit card and may include a semiconductor device. The semiconductor device may include a memory that can be programmed with security information for example such as a private decryption key a private signing key biometrics information or an authentication certificate. The semiconductor device may include a decryption engine such as a processor and or dedicated logic circuitry for performing decryption and or authentication functions. The smart card may include a connector for powering the semiconductor device and performing serial communication with an external device such as card reader .

Smart cards generally have exposed contacts on one surface of the card for establishing electrical contact with corresponding contacts on the card reader thereby facilitating communication between the smart card and the card reader. In one embodiment memory card and card reader use electrical contact to establish communication therebetween. Although memory card may be physically received in card reader it is not essential that card reader physically receive or contact memory card in order to establish communication therebetween. For example in an alternative embodiment memory card may interface with card reader using radio frequency identification RFID technology. In such an alternative embodiment the memory card need only be sufficiently proximate to card reader to enable radio frequency communication therebetween.

Mobile device may be enabled to communicate with a wireless network not shown . The wireless network may be implemented as a packet based cellular network that includes a number of base stations each providing wireless Radio Frequency RF coverage to a corresponding area or cell. For example the wireless network could conform to one or more of the following among other network standards Mobitex Radio Network DataTAC Global System for Mobile Communication GSM General Packet Radio System GPRS Time Division Multiple Access TDMA Code Division Multiple Access CDMA Cellular Digital Packet Data CDPD integrated Digital Enhanced Network iDEN or various other third generation networks such as Enhanced Data rates for GSM Evolution EDGE or Universal Mobile Telecommunications Systems UMTS .

In some embodiments instead of or in addition to a wireless wide area network the wireless network may include a wireless local area network such as for example a wireless local area network that conforms to one or more IEEE 802.11 standards such as 802.11b 802.11g and 802.11n. In at least some example embodiments the wireless network is connected through intermediate communications links not shown including for example links through the Internet to one or more enterprise networks not shown . Typically such enterprise networks are each associated with a set of respective mobile devices such that the mobile devices are each enabled to exchange electronic messages and other information with the enterprise networks with which the mobile devices are associated.

The mobile device includes peripheral devices or subsystems such as a flash memory a random access memory RAM an auxiliary input output I O subsystem e.g. a scroll wheel a serial port e.g. a Universal Serial Bus or USB port an input device e.g. a keyboard or keypad a speaker a microphone a mobile device short range communications subsystem e.g. an infrared transceiver wireless bus protocol system such as a Bluetooth or other means of local wireless communications and an other device subsystem designated generally by reference .

The mobile device microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the flash memory includes stored programs e.g. firmware including an operating system program or code module and other programs or software applications indicated generally by reference . The software applications can for example include a World Wide Web WWW browsing application and an e mail client application .

According to example embodiments the software applications of the mobile device further include a memory card driver that may be used in conjunction with the card reader . Notably the memory card driver may be provided not by the manufacturer of the mobile device but instead by a third party i.e. the manufacturer of the memory card . Furthermore an Application Programming Interface API may be built in to the memory card driver to allow the mobile device to communicate with the memory card through the card reader .

The software applications of the mobile device may further include a smart card reader SCR pairing and security module for coordinating a pairing process between the mobile device and the card reader . The roles of the memory card driver and the smart card reader pairing and security module will be described in greater detail below.

The operating system code code for specific device applications code for the WWW browsing application code for the e mail client application code for the memory card driver or code for the smart card reader pairing and security module may be temporarily loaded into a volatile storage medium such as the RAM during operation of the mobile device . Received communication signals and other data with information may also be stored in the RAM . In some embodiments the mobile device may include in addition to the internal flash memory persistent memory carried on a SIM Subscriber Identity Module card or other removable device and at least some of the flash memory may be allocated to the SIM card flash memory.

The stored program control i.e. the software applications for the mobile device microprocessor also includes a predetermined set of applications code components or software modules that control basic device operations for example data and voice communication applications which are normally installed on the mobile device as the software applications during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the mobile device through the operation of networks described above the auxiliary I O subsystem the serial port or the mobile device short range communications subsystem . The downloaded code modules or components are then installed by the user or automatically in the RAM or the non volatile program memory e.g. the flash memory .

The serial port comprises a USB type interface port for interfacing or synchronizing with another device such as a desktop or notebook computer PC . The serial port is used to set preferences through an external device or software application. The serial port is also used to extend the capabilities of the mobile device by providing for information or software downloads including user interface information to the mobile device other than through a wireless communication network. In one embodiment the serial port may be used to communicate with card reader .

The mobile device short range communications subsystem provides an interface for communication between the mobile device and other devices including the card reader . For example the mobile device short range communications subsystem may employ an infrared communication link or channel or may operate according to a wireless bus protocol such as Bluetooth or any other localized wireless means of communication.

The smart card reader microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the stored programs e.g. firmware include an operating system program or code module and other programs or software applications indicated generally by reference . The operating system of the card reader further includes a memory card reader driver component .

The memory card reader driver component is responsible for coordinating communications between the card reader and a memory card and or the memory card driver of the mobile device via wired or wireless communication link .

The operating system code code for specific device applications code for the memory card reader driver component or code components thereof may be temporarily loaded into a volatile storage medium such as the RAM . Received communication signals and other data may also be stored in the RAM . Additionally the storage component interface receives the removable memory card providing additional storage space for the card reader .

In one embodiment the memory card has a card driver and controller responsible for coordinating communications between the memory card and the memory card reader driver component of the smart card reader . While operation of the card reader is described in a context wherein the memory card is a smart card it will be understood by those skilled in the art that the card reader may be designed to operate with any suitable form of memory device.

The stored program control i.e. software applications for the smart card reader microprocessor may include a predetermined set of applications code components or software modules that control basic device operations for example management and security related control of the data of the card reader and may be installed on the card reader as a component of the software applications during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the card reader through the operation of the serial port the smart card reader short range communications subsystem or from the memory card . The downloaded code module or components are then installed by the user or automatically in the RAM or non volatile program memory e.g. the flash memory .

While the memory card reader driver component is shown to be an integrated portion of the operating system for security purposes e.g. individuals must not be permitted to tamper with the memory card reader driver component the memory card reader driver component could be installed as one of the software applications so long as suitable security related precautions are taken to ensure that the memory card reader driver component cannot be modified or tampered with by unauthorized users.

The serial port may be a USB type interface port for interfacing or synchronizing with another device such as personal computer or mobile device . The serial port is used to set preferences through an external device or software application or exchange data with a device such as the mobile device . Such data may be stored on the memory card that is plugged into the storage component interface of the card reader . The serial port is also used to extend the capabilities of the card reader by providing for downloads to the card reader of information or software including user interface information.

The short range communications subsystem provides an interface for communication between the mobile device or personal computer and the card reader . In one embodiment the short range communications subsystem employs an infrared communication link or channel. In another embodiment the short range communications subsystem operates according to a wireless RF bus protocol such as Bluetooth . However the short range communications subsystem may operate according to any suitable local wired or wireless communication protocol so long as the short range communications subsystem of the mobile device operates using the same protocol thereby facilitating wireless communication between the mobile device and the card reader . Any communications mechanism and or protocol may be implemented for the short range communications subsystems so long as the mobile device and the card reader can communicate with each other when within physical proximity.

Although not shown in in relation to PC PC comprises a suitable short range communication subsystem for facilitating wireless communication between PC and card reader . For example the short range communication subsystem of the PC may operate in a similar manner to the short range communication subsystem of the mobile device for example using an infrared communication link or a wireless RF bus protocol such as Bluetooth . Alternatively the PC may employ a suitable serial interface for communication with card reader for example using a USB cable.

Referring now to a block diagram of an accessing device such as PC or mobile device is shown in further detail with reference to functions concerning recognition of memory card and ascertaining whether the accessing device supports the memory card .

The accessing device has a memory that corresponds to flash memory of mobile device or a similarly configured non volatile memory of PC . Memory stores program code executable by a processor such as microprocessor for performing the functions described below in relation to to determine whether accessing device recognizes and or supports memory card . Memory comprises program code in addition to the modules shown and described in relation to but the description of such additional program code is omitted to avoid obscuring the described embodiments.

Memory comprises an active application such as e mail message viewer a memory card application program interface API reader drivers and card drivers . The memory card API communicates with reader drivers and card drivers to govern communication between accessing device and memory card via card reader .

Memory stores a plurality of reader drivers for interfacing with a respective plurality of types of card reader . For purposes of the present description it is assumed that at least a first reader driver supports the type of card reader . Accordingly the first reader driver facilitates communication between card drivers memory card API and memory card .

Memory also stores a plurality of card drivers including a first card driver a second card driver and a third card driver . The number of card driver modules stored in memory may be greater or fewer than the first second and third card drivers and but only three such card driver modules are described for illustrative purposes as part of an exemplary embodiment.

Interaction of program code modules within memory with each other and with card reader and memory card is described below with reference to the methods illustrated in .

In response to the open session command cold or warm reset the memory card may transmit an Answer to Reset ATR response according to the ISO 7816 standard for smart cards. If memory card is not a smart card and or does not follow the ISO 7816 standard a suitable alternative form of response may be provided by memory card to accessing device that identifies or that contains data that would indicate the card type of memory card in a manner that would enable a card driver to determine whether it supports the card type or not.

Upon receipt of the ATR or other form of response at step memory card API stores the ATR within memory .

At step memory card API provides the ATR or other form of response to card drivers and commands each of the first second and third card drivers and to provide a Boolean true or false response indicating whether it recognizes the historical bytes of the ATR. Card drivers may also check the whole ATR or bytes other than the historical bytes. For alternative forms of response each of the card drivers checks a part of the response that would indicate the card type of memory card . Each of the card drivers may be thus interrogated by memory card API in sequence or simultaneously.

If at step one or more of the card drivers recognizes the ATR or other form of response as indicating a particular card type supported by the respective card driver such an indication is transmitted to memory card API as a positive true response. At step if only one card driver indicates that it supports the card type of memory card that card driver is used for conducting the session between the accessing device and memory card . If more than one card driver indicates that it supports the card type one of the card drivers may be arbitrarily chosen or the user of the accessing device may be invited to select the driver to be used for the session.

Memory card API maintains a table of card types supported by the various card drivers . For example the ATR received from memory card XYZ may be recorded in the table as being recognized by the first card driver while the ATR received from memory card ABC may be recorded in the table as being recognized by second and third card drivers and .

In one embodiment as a precursor to step and following receipt of the ATR at step memory card API may check the ATR against the table to determine whether it has previously been recognized or otherwise determined to be supported. If the ATR received at step is included in the table the corresponding card driver that supports it will be used for the session with the memory card . In this way accessing device can effectively use the results of previous efforts to determine support for a particular card type to increase efficiency in subsequent attempts to identify a suitable card driver. Thus maintaining a table of card types supported by card drivers can avoid testing the same card twice. Alternatively or in addition each card driver may store a corresponding table of the card types and or ATRs or other responses that it recognizes or supports. This is described in further detail below with reference to step .

If at step none of the card drivers recognizes the ATR or other form of response as indicating a respective supported card type the memory card API receives the corresponding negative false responses from the card drivers and initiates further testing of the card drivers for support of memory card at step . Step is described in further detail below with reference to . If the memory card is determined at step to be supported by one or more card drivers this is recorded in the table maintained by the memory card API .

The process of testing for support of memory card is described with reference to the steps illustrated in . This process is only performed if none of the card drivers recognized the response at step .

Beginning at step memory card API selects one of the card drivers to determine whether that card driver might support the card type of memory card despite not recognizing the ATR or other form of response at step .

At step the selected card driver is instructed by memory card API to initiate a test procedure described below in relation to steps to . Step includes opening a session between the selected card driver and memory card so that the selected card driver can transmit test commands to the memory card .

At step the selected card driver selects a test command to transmit at step to the memory card so that from a response received at step the card driver can determine at step whether the card type of memory card appears to be supported. The test command selected at step may be one of a list of possible test commands appropriate to the card type supported by the selected card driver. Alternatively only one such test command may be available for selection at step for the selected card driver.

If the response received from memory card at step is not recognized at step by the selected card driver then at step the selected card driver determines whether any further test commands remain in the list that can be transmitted to the memory card at step . If such further test commands can be transmitted then steps to are repeated for each further test command in the list of possible test commands for the selected card driver.

If at step a response received from memory card indicates that the memory card is supported by the selected card driver for example by indicating that the test command was successful the selected card driver may record in a table specific to that card driver that the card type of memory card is supported by that card driver. The selected card driver transmits a true response to memory card API at step indicating that the selected card driver supports the card type of memory card . Each of the card drivers may maintain a table stored in memory to indicate one or more card types supported by the respective card driver.

At step the selected card driver that supports the selected card type may be used for communicating with the memory card . Once the selected card driver determines that it supports the card type of memory card it can maintain the session that it opened with the memory card and let the application through memory card API use the opened session. Alternatively the selected card driver may close the session with memory card and wait for an accessing application such as application to request a new session via memory card API using the selected card driver.

If at step no further test command is available for example because all test commands in the list have been tried then the selected card driver returns a negative false response to memory card API at step . The memory card API then determines as part of step whether there is a further card driver that can be selected for testing support. If at step the memory card API determines that there is another card driver among card drivers that has not been tested for support of the card type of memory card then steps to are repeated for the newly selected card driver. On the other hand if memory card API determines that all card drivers have been tested for support without any positive true responses memory card API determines at step that the card type of memory card is not supported by any of the card drivers and an indication to that effect may be provided to the user of the accessing device .

Process may be performed so as to select the first card driver that is determined to support the card type of memory card . Alternatively process may iterate through the possible test commands for each selected card driver and or through all of the card drivers in an exhaustive manner to determine all card drivers that might support the card type of memory card in which case the user would be invited to select among multiple such supporting card drivers. Further where multiple card drivers are determined to support the memory card the user may be invited to select which driver to use for each different application that seeks to initiate a session with memory card .

Examples of test commands that may be available for selection by a selected card driver include one or more of the following 

For a CAC card an example of test command above may be a command to select the three certificate files commonly on such cards and then read the first part of the certificate to determine whether it is of an expected format or content. An example of test command for a CAC card may be a read command to read the unique identifier from the card. If the unique identifier is of a particular format or content consistent with the card type supported by a card driver the test command may be considered to be successful. Other types of test command may be used that are specific to a particular card type and that would tend to indicate if successful that the card driver transmitting the test command supports that particular card type.

It should be understood that variations and modifications can be made to the embodiments described and illustrated herein without departing from the spirit of the described embodiments the general scope of which is defined in the appended claims.

