---

title: Monitoring hashtags in micro-blog posts to provide one or more crowd-based features
abstract: Systems and methods are disclosed for monitoring hashtags in micro-blog posts, or status updates, from users to provide one or more crowd-based features. In one embodiment, a micro-blog post of a user in a crowd of users is obtained. The crowd of users is a group of users within a predefined spatial proximity to one another. A hashtag in the micro-blog post is then obtained, and a crowd-based feature is provided based on the hashtag.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407590&OS=09407590&RS=09407590
owner: WALDECK TECHNOLOGY, LLC
number: 09407590
owner_city: Wilmington
owner_country: US
publication_date: 20130917
---
The present application is a continuation of co pending U.S. patent application Ser. No. 13 039 356 filed on Mar. 3 2011 now U.S. Pat. No. 8 566 309 entitled Monitoring Hashtags In Micro Blog Posts To Provide One Or More Crowd Based Features which claims the benefit of provisional patent application Ser. No. 61 309 903 filed Mar. 3 2010 the disclosures of which are hereby incorporated herein by reference in its entirety.

Micro blogging services such as the Twitter micro blogging and social networking service have become increasingly popular. The Twitter micro blogging and social networking service allows a user to post messages i.e. tweets that are then viewable by other users that subscribe to messages from the user i.e. are followers of the user . The Twitter micro blogging and social networking service also allows users to insert hashtags in the form of keyword e.g. musicmonday into their tweets to identify relevant keywords or topics. The hashtags may then be used to search for tweets of interest. For example a user may search for the hashtag musicmonday in order to view all tweets including the hashtag musicmonday. While at this point only the Twitter micro blogging and social networking service utilizes hashtags hashtags could and are expected to be used in other existing or future microblogging services.

In addition crowd based services are also emerging. One exemplary crowd based service is described in commonly owned and assigned U.S. Patent Application Publication No. 2010 0198828 entitled Forming Crowds And Providing Access To Crowd Data In A Mobile Environment which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0197318 entitled Anonymous Crowd Tracking which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198826 entitled Maintaining A Historical Record Of Anonymized User Profile Data By Location For Users In A Mobile Environment which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198917 entitled Crowd Formation For Mobile Device Users which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198870 entitled Serving A Request For Data From A Historical Record Of Anonymized User Profile Data In A Mobile Environment which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198862 entitled Handling Crowd Requests For Large Geographic Areas which published on Aug. 5 2010 and U.S. Patent Application Publication No. 2010 0197319 entitled Modifying A User s Contribution To An Aggregate Profile Based On Time Between Location Updates And External Events which published on Aug. 5 2010 all of which are hereby incorporated herein by reference in their entireties.

Systems and methods are disclosed for monitoring hashtags in microblog posts or status updates from users to provide one or more crowd based features. In one embodiment a micro blog post of a user in a crowd of users is obtained. The crowd of users is a group of users within a predefined spatial proximity to one another. A hashtag in the micro blog post is then obtained and a crowd based feature is provided based on the hashtag. More specifically in one embodiment the hashtag is determined to be representative of an interest of the users in the crowd and as such the hashtag is recorded and utilized as an interest of the crowd. For instance the hashtag may be added to a profile of the crowd. In another embodiment the hashtag is determined to be indicative of a rating of the crowd and as such a rating of the crowd is updated based on the hashtag.

In yet another embodiment a micro blog post of a user is obtained. In this embodiment the user may or may not be in a crowd of users. A hashtag in the micro blog post is then obtained. If the hashtag is determined to be one of a number of predefined action words a corresponding crowd based action is performed. The predefined action word may enable the user to for example explicitly tag the crowd with one or more keywords explicitly remove one or more tags previously assigned to the crowd explicitly rate the crowd or initiate creation of a desired crowd.

Those skilled in the art will appreciate the scope of the present disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

As discussed below in detail the MAP server operates to obtain current locations including location updates and user profiles of the users of the mobile devices . The current locations of the users can be expressed as positional geographic coordinates such as latitude longitude pairs and a height vector if applicable or any other similar information capable of identifying a given physical point in space in a two dimensional or three dimensional coordinate system. Using the current locations and user profiles of the users the MAP server is enabled to provide a number of features such as but not limited to forming crowds of users using current locations and or user profiles of the users generating aggregate profiles for crowds of users and tracking crowds. Note that while the MAP server is illustrated as a single server for simplicity and ease of discussion it should be appreciated that the MAP server may be implemented as a single physical server or multiple physical servers operating in a collaborative manner for purposes of redundancy and or load sharing.

In general the one or more profile servers operate to store user profiles for a number of persons including the users of the mobile devices . For example the one or more profile servers may be servers providing social network services such as the Facebook social networking service the MySpace social networking service the LinkediN social networking service or the like. As discussed below using the one or more profile servers the MAP server is enabled to directly or indirectly obtain the user profiles of the users of the mobile devices . The location server generally operates to receive location updates from the mobile devices and make the location updates available to entities such as for instance the MAP server . In one exemplary embodiment the location server is a server operating to provide Yahoo s Fire Eagle service.

The mobile devices may be mobile smart phones portable media player devices mobile gaming devices or the like. Some exemplary mobile devices that may be programmed or otherwise configured to operate as the mobile devices are the Apple iPhone the Palm Pre the Samsung Rogue the Blackberry Storm the Motorola Droid or similar phone running Google s Android Operating System an Apple iPad and the Apple iPod Touch device. However this list of exemplary mobile devices is not exhaustive and is not intended to limit the scope of the present disclosure.

The mobile devices through N include MAP clients through N generally referred to herein collectively as MAP clients or individually as MAP client MAP applications through N generally referred to herein collectively as MAP applications or individually as MAP application third party applications through N generally referred to herein collectively as third party applications or individually as third party application and location functions through N generally referred to herein collectively as location functions or individually as location function respectively. The MAP client is preferably implemented in software. In general in the preferred embodiment the MAP client is a middleware layer operating to interface an application layer i.e. the MAP application and the third party applications to the MAP server . More specifically the MAP client enables the MAP application and the third party applications to request and receive data from the MAP server . In addition the MAP client enables applications such as the MAP application and the third party applications to access data from the MAP server .

The MAP application is also preferably implemented in software. The MAP application generally provides a user interface component between the user and the MAP server . More specifically among other things the MAP application enables the user to initiate requests for crowd data from the MAP server and present corresponding crowd data returned by the MAP server to the user . The MAP application also enables the user to configure various settings. For example the MAP application may enable the user to select a desired social networking service e.g. Facebook MySpace LinkediN etc. from which to obtain the user profile of the user and provide any necessary credentials e.g. username and password needed to access the user profile from the social networking service.

The third party applications are preferably implemented in software. The third party applications operate to access the MAP server via the MAP client . The third party applications may utilize data obtained from the MAP server in any desired manner. As an example one of the third party applications may be a gaming application that utilizes crowd data to notify the user of Points of Interest POIs or Areas of Interest AOis where crowds of interest are currently located. It should be noted that while the MAP client is illustrated as being separate from the MAP application and the third party applications the present disclosure is not limited thereto. The functionality of the MAP client may alternatively be incorporated into the MAP application and the third party applications .

The location function may be implemented in hardware software or a combination thereof. In general the location function operates to determine or otherwise obtain the location of the mobile device . For example the location function may be or include a Global Positioning System GPS receiver. In addition or alternatively the location function may include hardware and or software that enables improved location tracking in indoor environments such as for example shopping malls. For example the location function may be part of or compatible with the InvisiTrack Location System provided by InvisiTrack and described in U.S. Pat. No. 7 423 580 entitled Method and System of Three Dimensional Positional Finding which issued on Sep. 9 2008 U.S. Pat. No. 7 787 886 entitled System and Method for Locating a Target using RFID which issued on Aug. 31 2010 and U.S. Patent Application Publication No. 2007 0075898 entitled Method and System for Positional Finding Using RF Continuous and or Combined Movement which published on Apr. 5 2007 all of which are hereby incorporated herein by reference for their teachings regarding location tracking.

The subscriber device is a physical device such as a personal computer a mobile computer e.g. a notebook computer a netbook computer a tablet computer etc. a mobile smart phone or the like. The subscriber associated with the subscriber device is a person or entity. In general the subscriber device enables the subscriber to access the MAP server via a web browser to obtain various types of data preferably for a fee. For example the subscriber may pay a fee to have access to crowd data such as aggregate profiles for crowds located at one or more POIs and or located in one or more AOis pay a fee to track crowds or the like. Note that the web browser is exemplary. In another embodiment the subscriber device is enabled to access the MAP server via a custom application.

Lastly the micro blogging service is a service that enables the users to send and receive micro blog posts. As used herein a micro blog post is a message posted by a user for publication via the micro blogging service . As used herein a micro blog post includes text. In addition the micro blog post may optionally include audio video an image or any combination thereof. As an example a micro blog post may be a tweet posted by a user of the Twitter micro blogging and social networking service. Lastly as used herein the micro blogging service is a micro blogging service such as but not limited to the Twitter micro blogging and social networking service that enables the use of hashtags. Preferably the hashtags are included in the text of the microblog post and take the form of keyword. However other formats may be used e.g. keyword .

Before proceeding it should be noted that while the system of illustrates an embodiment where the one or more profile servers the location server and the micro blogging service are separate from the MAP server the present disclosure is not limited thereto. In an alternative embodiment the functionality of the one or more profile servers the location server and or the micro blogging service may be implemented within the MAP server . Further while the profile servers the location server and the micro blogging service are separate in the embodiment of in another embodiment the functionality of the profile servers the location server and or the micro blogging service may be implemented in a single service.

The business logic layer includes a profile manager a location manager a crowd analyzer an aggregation engine and a micro blog processing function each of which is preferably implemented in software. The profile manager generally operates to obtain the user profiles of the users directly or indirectly from the one or more profile servers and store the user profiles in the persistence layer . The location manager operates to obtain the current locations of the users including location updates. As discussed below the current locations of the users may be obtained directly from the mobile devices and or obtained from the location server .

The crowd analyzer operates to form crowds of users. In one embodiment the crowd analyzer utilizes a spatial crowd formation algorithm. However the present disclosure is not limited thereto. In addition the crowd analyzer may further characterize crowds to reflect degree of fragmentation best case and worst case degree of separation DOS and or degree of bidirectionality. Still further the crowd analyzer may also operate to track crowds. The aggregation engine generally operates to provide aggregate profile data. The aggregate profile data may be aggregate profile data for crowd s of users. As discussed below in detail the micro blog processing function processes micro blog posts made by the users to provide crowd based features. For additional information regarding the operation of the profile manager the location manager the crowd analyzer and the aggregation engine the interested reader is directed to U.S. Patent Application Publication No. 2010 0198828 entitled Forming Crowds And Providing Access To Crowd Data In A Mobile Environment which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0197318 entitled Anonymous Crowd Tracking which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198826 entitled Maintaining A Historical Record Of Anonymized User Profile Data By Location For Users In A Mobile Environment which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198917 entitled Crowd Formation For Mobile Device Users which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198870 entitled Serving A Request For Data From A Historical Record Of Anonymized User Profile Data In A Mobile Environment which published on Aug. 5 2010 U.S. Patent Application Publication No. 2010 0198862 entitled Handling Crowd Requests For Large Geographic Areas which published on Aug. 5 2010 and U.S. Patent Application Publication No. 2010 0197319 entitled Modifying A User s Contribution To An Aggregate Profile Based On Time Between Location Updates And External Events which published on Aug. 5 2010 all of which have been incorporated herein by reference in their entireties.

The persistence layer includes an object mapping layer and a datastore . The object mapping layer is preferably implemented in software. The datastore is preferably a relational database which is implemented in a combination of hardware i.e. physical data storage hardware and software i.e. relational database software . In this embodiment the business logic layer is implemented in an object oriented programming language such as for example Java. As such the object mapping layer operates to map objects used in the business logic layer to relational database entities stored in the datastore . Note that in one embodiment data is stored in the datastore in a Resource Description Framework RDF compatible format.

In an alternative embodiment rather than being a relational database the datastore may be implemented as an RDF datastore. More specifically the RDF datastore may be compatible with RDF technology adopted by Semantic Web activities. Namely the RDF datastore may use the Friend Of A Friend FOAF vocabulary for describing people their social networks and their interests. In this embodiment the MAP server may be designed to accept raw FOAF files describing persons their friends and their interests. These FOAF files are currently output by some social networking services such as LiveJournal and Facebook . The MAP server may then persist RDF descriptions of the users as a proprietary extension of the FOAF vocabulary that includes additional properties desired for the system .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the MAP client of the mobile device sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the mobile device step B . The MAP client of the mobile device then sends the user profile of the user to the MAP server step C . Note that while in this embodiment the MAP client sends the complete user profile of the user to the MAP server in an alternative embodiment the MAP client may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user from the MAP client of the mobile device the profile manager of the MAP server processes the user profile step D . More specifically in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server that operate to map the user profiles of the users obtained from the social network services to a common format utilized by the MAP server . This common format includes a number of user profile categories or user profile slices such as for example a demographic profile category a social interaction profile category a general interests category a music interests profile category and a movie interests profile category. For example if the MAP server supports user profiles from Facebook MySpace and LinkedIn the profile manager may include a Facebook handler a MySpace handler and a LinkedIn handler. The social network handlers process user profiles from the corresponding social network services to generate user profiles for the users in the common format used by the MAP server . For this example assume that the user profile of the user is from Facebook . The profile manager uses a Facebook handler to process the user profile of the user to map the user profile of the user from Facebook to a user profile for the user for the MAP server that includes lists of keywords for a number of predefined profile categories or profile slices such as for example a demographic profile category a social interaction profile category a general interests profile category a music interests profile category and a movie interests profile category. As such the user profile of the user from Facebook may be processed by the Facebook handler of the profile manager to create a list of keywords such as for example liberal High School Graduate 35 44 College Graduate etc. for the demographic profile category a list of keywords such as Seeking Friendship for the social interaction profile category a list of keywords such as politics technology photography books etc. for the general interests profile category a list of keywords including music genres artist names album names or the like for the music interests profile category and a list of keywords including movie titles actor or actress names director names movie genres or the like for the movie interests profile category. In one embodiment the profile manager may use natural language processing or semantic analysis. For example if the Facebook user profile of the user states that the user is 20 years old semantic analysis may result in the keyword of 18 24 years old being stored in the user profile of the user for the MAP server .

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step E . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the mobile device to the MAP client and the MAP client then provides the current location of the mobile device to the MAP server step A . Note that step A may be repeated periodically or in response to a change in the current location of the mobile device in order for the MAP application to provide location updates for the user to the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step B . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user .

In addition to storing the current location of the user the location manager sends the current location of the user to the location server step C . In this embodiment by providing location updates to the location server the MAP server in return receives location updates for the user from the location server . This is particularly beneficial when the mobile device does not permit background processes. If the mobile device does not permit background processes the MAP application will not be able to provide location updates for the user to the MAP server unless the MAP application is active. Therefore when the MAP application is not active other applications running on the mobile device or some other device of the user may directly or indirectly provide location updates to the location server for the user . This is illustrated in step where the location server receives a location update for the user directly or indirectly from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the profile manager of the MAP server sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the profile manager of the MAP server step B . Note that while in this embodiment the profile server returns the complete user profile of the user to the MAP server in an alternative embodiment the profile server may return a filtered version of the user profile of the user to the MAP server . The profile server may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user the profile manager of the MAP server processes the user profile step C . More specifically as discussed above in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server . The social network handlers process user profiles to generate user profiles for the MAP server that include lists of keywords for each of a number of profile categories or profile slices.

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step D . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the user of the mobile device to the location server step A . Note that step A may be repeated periodically or in response to changes in the location of the mobile device in order to provide location updates for the user to the MAP server . The location server then provides the current location of the user to the MAP server step B . The location server may provide the current location of the user to the MAP server automatically in response to receiving the current location of the user from the mobile device or in response to a request from the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step C . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user .

As discussed above the use of the location server is particularly beneficial when the mobile device does not permit background processes. As such if the mobile device does not permit background processes the MAP application will not provide location updates for the user to the location server unless the MAP application is active. However other applications running on the mobile device or some other device of the user may provide location updates to the location server for the user when the MAP application is not active. This is illustrated in step where the location server receives a location update for the user from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

Next the crowd analyzer determines whether the new and old bounding boxes overlap step . If so the crowd analyzer creates a bounding box encompassing the new and old bounding boxes step . For example if the new and old bounding boxes are 40 40 meter regions and a 1 1 meter square at the northeast corner of the new bounding box overlaps a 1 1 meter square at the southwest corner of the old bounding box the crowd analyzer may create a 79 79 meter square bounding box encompassing both the new and old bounding boxes.

The crowd analyzer then determines the individual users and crowds relevant to the bounding box created in step step . The crowds relevant to the bounding box are crowds that are within or overlap the bounding box e.g. have at least one user located within the bounding box . The individual users relevant to the bounding box are users that are currently located within the bounding box and not already part of a crowd. Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density within the bounding box step . More specifically in one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is set according to the following equation 

where a is a number between 0 and 1 Ais an area of the bounding box and number of users is the total number of users in the bounding box. The total number of users in the bounding box includes both individual users that are not already in a crowd and users that are already in a crowd. In one embodiment a is .

The crowd analyzer then creates a crowd for each individual user within the bounding box that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . At this point the process proceeds to where the crowd analyzer analyzes the crowds relevant to the bounding box to determine whether any of the crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd step . The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds for the bounding box step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is not less than the optimal inclusion distance then the process proceeds to step . Otherwise the two closest crowds are combined or merged step and a new crowd center for the resulting crowd is computed step . A center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the resulting crowd is computed step . In one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . The maximum number of iterations is a predefined number that ensures that the crowd formation process does not indefinitely loop over steps through or loop over steps through more than a desired maximum number of times. If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer discards crowds with less than three users or members step and the process ends.

Returning to step in if the new and old bounding boxes do not overlap the process proceeds to and the bounding box to be processed is set to the old bounding box step . In general the crowd analyzer then processes the old bounding box in much the same manner as described above with respect to steps through . More specifically the crowd analyzer determines the individual users and crowds relevant to the bounding box step . The crowds relevant to the bounding box are crowds that are within or overlap the bounding box e.g. have at least one user located within the bounding box . The individual users relevant to the bounding box are users that are currently located within the bounding box and not already part of a crowd. Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density within the bounding box step . More specifically in one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is set according to the following equation 

The crowd analyzer then creates a crowd of one user for each individual user within the bounding box that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . At this point the crowd analyzer analyzes the crowds for the bounding box to determine whether any crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd step . The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds in the bounding box step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is not less than the optimal inclusion distance the process proceeds to step . Otherwise the two closest crowds are combined or merged step and a new crowd center for the resulting crowd is computed step . Again a center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the resulting crowd is computed step . As discussed above in one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer discards crowds with less than three users or members step . The crowd analyzer then determines whether the crowd formation process for the new and old bounding boxes is done step . In other words the crowd analyzer determines whether both the new and old bounding boxes have been processed. If not the bounding box is set to the new bounding box step and the process returns to step and is repeated for the new bounding box. Once both the new and old bounding boxes have been processed the crowd formation process ends.

The crowd analyzer then identifies the two closest crowds and in the new bounding box and determines a distance between the two closest crowds and . In this example the distance between the two closest crowds and is less than the optimal inclusion distance. As such the two closest crowds and are merged and a new crowd center and new optimal inclusion distance are computed as illustrated in . The crowd analyzer then repeats the process such that the two closest crowds and in the new bounding box are again merged as illustrated in . At this point the distance between the two closest crowds and is greater than the appropriate optimal inclusion distance. As such the crowd formation process is complete.

Since the old bounding box and the new bounding box overlap the crowd analyzer creates a bounding box that encompasses both the old bounding box and the new bounding box as illustrated in . In addition the crowd analyzer creates crowds through for individual users currently located within the bounding box . The optimal inclusion distances of the crowds through are set to the initial optimal inclusion distance computed by the crowd analyzer based on the density of users in the bounding box .

Next the crowd analyzer analyzes the crowds and through to determine whether any members of the crowds and through violate the optimal inclusion distances of the crowds and through . In this example as a result of the user leaving the crowd and moving to his new location both of the remaining members of the crowd violate the optimal inclusion distance of the crowd . As such the crowd analyzer removes the remaining users from the crowd and creates crowds and of one user each for those users as illustrated in .

The crowd analyzer then identifies the two closest crowds in the bounding box which in this example are the crowds and . Next the crowd analyzer computes a distance between the two crowds and . In this example the distance between the two crowds and is less than the initial optimal inclusion distance and as such the two crowds and are combined. In this example crowds are combined by merging the smaller crowd into the larger crowd. Since the two crowds and are of the same size the crowd analyzer merges the crowd into the crowd as illustrated in . A new crowd center and new optimal inclusion distance are then computed for the crowd .

At this point the crowd analyzer repeats the process and determines that the crowds and are now the two closest crowds. In this example the distance between the two crowds and is less than the optimal inclusion distance of the larger of the two crowds and which is the crowd . As such the crowd is merged into the crowd and a new crowd center and optimal inclusion distance are computed for the crowd as illustrated in . At this point there are no two crowds closer than the optimal inclusion distance of the larger of the two crowds. As such the crowd analyzer discards any crowds having less than three members as illustrated in . In this example the crowds and have less than three members and are therefore removed. The crowd has three or more members and as such is not removed. At this point the crowd formation process is complete.

More specifically as illustrated in as a result of the movement of the user from the old location to the new location the remaining users in the crowd no longer satisfy the optimal inclusion distance for the crowd . As such the remaining users in the crowd are removed from the crowd and crowds and of one user each are created for the removed users as shown in . In this example no two crowds in the old bounding box are close enough to be combined. As such crowds having less than three users are removed as shown in and processing of the old bounding box is complete and the crowd analyzer proceeds to process the new bounding box .

As illustrated in processing of the new bounding box begins by the crowd analyzer creating a crowd of one user for the user. The crowd analyzer then identifies the crowds and as the two closest crowds in the new bounding box and determines a distance between the two crowds and . In this example the distance between the two crowds and is less than the optimal inclusion distance of the larger crowd which is the crowd . As such the crowd analyzer combines the crowds and by merging the crowd into the crowd as illustrated in . A new crowd center and new optimal inclusion distance are then computed for the crowd . At this point the crowd formation process is complete. Note that the crowd formation processes described above with respect to are exemplary. The present disclosure is not limited thereto. Any type of crowd formation process may be used.

Up until this point the disclosure has focused primarily on crowd formation. The following discussion describes various processes by which the MAP server utilizes micro blog posts made by the users to provide crowd based features. More specifically illustrates the operation of the system wherein the MAP server monitors micro blog posts made by the users according to one embodiment of the present disclosure. As illustrated in this embodiment the micro blog processing function of the MAP server registers the MAP server as a follower of the users of the MAP server step . Notably while the MAP server is preferably registered as a follower of all of the users the present disclosure is not limited thereto. The MAP server may only be registered as a follower of some of the users . For example not all of the users may be users of the micro blogging service in which case the MAP server may only be registered as followers of those users that are also users of the micro blogging service . As another example even those users that are also users of the micro blogging service may be enabled to either opt in or opt out of the feature of the MAP server that enables the MAP server to register as a follower of those users .

Next the mobile device sends a micro blog post made by the user to the micro blogging service step . More specifically in one embodiment the user may create and send the micro blog post via a client application of the micro blogging service executed by the mobile device . In another embodiment the MAP application of the mobile device may include a micro blog feature that enables the user to create and send a micro blog post to the micro blogging service via the MAP application . In response to receiving the micro blog post the micro blogging service publishes the micro blog post to followers of the user . As part of this publication process the micro blog post is sent to the MAP server which is registered as a follower of the user step .

In response to receiving the micro blog post the micro blog processing function of the MAP server processes the micro blog post to provide a crowd based feature step . More specifically as discussed below in detail the micro blog processing function may identify any hashtags included in the micro blog post. Then if the micro blog post includes one or more hashtags the micro blog processing function provides a crowd based feature based on the hashtag s . For example a hashtag may be determined to be representative of an interest of the crowd in which the user is located and therefore recorded as an interest of the crowd. As another example a hashtag may be determined to be indicative of a rating of the crowd in which the user is located and therefore utilized to update the rating of the crowd. As yet another example the hashtag may be determined to be one of a number of predefined action words e.g. crowdtag untagcrowd ratecrowd createcrowd or the like and a corresponding action may be taken by the micro blog processing function .

In a similar manner the micro blog processing function processes micro blog posts from the other users . More specifically using the user N as an example the mobile device N sends a micro blog post made by the user N to the micro blogging service step . In response to receiving the micro blog post the micro blogging service publishes the micro blog post to followers of the user N. As part of this publication process the micro blog post is sent to the MAP server which is registered as a follower of the user N step . In response to receiving the micro blog post the micro blog processing function of the MAP server processes the micro blog post to provide a crowd based feature as described above step . The process of may be repeated to continually monitor micro blog posts of the users and to provide crowd based features based thereon.

In a similar manner the micro blog processing function processes micro blog posts from the other users . More specifically using the user N as an example the mobile device N sends a micro blog post made by the user N to the MAP server step . In response to receiving the microblog post the micro blog processing function of the MAP server sends the micro blog post to the micro blogging service step . In addition the micro blog processing function of the MAP server processes the micro blog post to provide a crowd based feature step . In response to receiving the micro blog post from the MAP server the micro blogging service publishes the micro blog post to followers of the user N step . The process of may be repeated to continually monitor micro blog posts of the users and to provide crowd based features based thereon.

If the micro blog post includes one or more hashtags the micro blog processing function gets the first hashtag of the one or more hashtags in the micro blog post step . The micro blog processing function then determines whether the hashtag is representative of an interest of the crowd step . More specifically the micro blog processing function determines whether the hashtag is representative of an interest of the crowd based on one or more predefined rules that define an extent to which a hashtag must be used by the users in a crowd before the hashtag is determined to be representative of an interest of the crowd. For example the hashtag may be determined to be representative of an interest of the crowd if usage of the hashtag by the users in the crowd exceeds a predefined threshold amount of usage. As a more specific example the hashtag may be determined to be representative of an interest of the crowd if the hashtag has been used by the users in the crowd at least a predefined threshold number of times e.g. 5 times over a predefined amount of time e.g. over the last 4 hours . Notably the hashtag a timestamp of the micro blog post and or a user ID of the user that sent the micro blog post may be stored for future use. If the micro blog processing function determines that the hashtag is not representative of an interest of the crowd the process proceeds to step .

If the micro blog processing function determines that the hashtag is representative of an interest of the crowd the micro blog processing function assigns a weight to the hashtag step . Notably step is optional. The weight assigned to the hashtag may be a system defined weight assigned to all hashtags identified as being representative of interests of corresponding crowds in order to distinguish interests inferred from hashtags appearing in micro blog posts made by the users in the crowds from interests explicitly defined by the users . Alternatively the weight assigned to the hashtag may be a function of criteria such as for example an extent to which the hashtag has been used by the users in the crowd e.g. ratio of the number of users in the crowd that have included the hashtag in one or more of their micro blog posts over a total number of users in the crowd .

The hash tag along with the weight assigned to the hash tag are recorded as an interest of the crowd step . In one embodiment the hashtag along with the weight assigned to the hashtag if any are stored in a profile of the crowd. In one embodiment the profile of the crowd is an aggregate profile of the crowd generated based on the user profiles of the users in the crowd. More specifically the aggregate profile includes a list of interests appearing in the user profiles of the users in the crowd. In addition the aggregate profile may include for each interest a number of occurrences of the interest in the user profiles of the users in the crowd a total number of users in the crowd and or a ratio of the number of occurrences of the interest in the user profiles of the users in the crowd over the total number of users in the crowd. In this case the hashtag and optionally the weight assigned to the hashtag may be added to the list of keywords included in the aggregate profile of the crowd. In an alternative embodiment the aggregate profile may be generated for the crowd and the hashtag may be added to a supplemental profile of the crowd that is separate from the aggregate profile of the crowd and that includes a list of hashtags that have been identified as interests of the crowd and optionally the weights assigned to the hashtags. This supplemental profile may be referred to as a conversation profile that dynamically reflects topics being discussed by the crowd.

Next the micro blog processing function determines whether the last hashtag in the micro blog post has been processed step . If not the micro blog processing function gets the next hashtag in the micro blog post step and the process returns to step . Once the last hashtag in the micro blog post has been processed the micro blog processing function removes any hashtags that have aged out from the profile of the crowd step . More specifically in one embodiment the micro blog processing function re evaluates each hashtag recorded as an interest of the crowd other than possibly the hashtag s just added using the same rule s used for step and removes any hashtags that no longer satisfy those rules. In this manner the hashtags listed as interests of the crowd are dynamic in that they do not remain recorded as interests of the crowd in perpetuity once they have been recorded as an interest of the crowd. Rather as the hashtags used by the crowd change so do the hashtags recorded as interests of the crowd. At this point the process then returns to step and is repeated for subsequently received micro blog posts.

If the micro blog post includes one or more hashtags the micro blog processing function gets the first hashtag of the one or more hashtags in the micro blog post step . The micro blog processing function then determines whether the hashtag is indicative of a rating of the crowd in which the user is located by the user step . More specifically in this embodiment the micro blog processing function determines whether the hashtag reflects that the user likes or dislikes the crowd in which the user is located and optionally a degree to which the user likes or dislikes the crowd in which the user is located. For example if the hashtag includes a word such as good best or greatest along with the word crowd the micro blog processing function may determine that the user likes the crowd in which the user is located and optionally a degree to which the user likes the crowd in which the user is located. Similarly if the hashtag includes a word such as bad or worst along with the word crowd the micro blog processing function may determine that the user dislikes the crowd in which the user is located and optionally a degree to which the user dislikes the crowd in which the user is located. For example the hashtag of bestcrowdever may be determined to be indicative of the user liking the crowd to a highest degree. If the hashtag is not indicative of a rating of the crowd by the user the process proceeds to step .

If the hashtag is indicative of a rating of the crowd by the user the micro blog processing function updates a crowd rating of the crowd in which the user is located step . If the hashtag is indicative of the user liking the crowd then the crowd rating of the crowd is increased accordingly. Similarly if the hashtag is indicative of the user disliking the crowd then the crowd rating of the crowd is decreased accordingly. As an example the microblog processing function may sort such hashtags by positive versus negative connotation and then provide a corresponding thumbs up or thumbs down rating. Alternatively the micro blog processing function may sort such hashtags along a more granular spectrum of connotation e.g. worst bad neutral good best . As yet another alternative the micro blog processing function may store such hashtags or the corresponding microblog posts including the hashtags and subsequently enable users to view the hashtags micro blog posts as a means to determine a suitability of the crowd.

Next the micro blog processing function determines whether the last hashtag in the micro blog post has been processed step . If not the micro blog processing function gets the next hashtag in the micro blog post step and the process returns to step . Once the last hashtag in the micro blog post has been processed the process returns to step and is repeated for subsequently received micro blog posts.

If the micro blog post includes one or more hashtags the micro blog processing function gets the first hashtag of the one or more hashtags in the micro blog post step . The micro blog processing function then determines whether the hashtag is one of a number of predefined action words step . More specifically in one embodiment the micro blog processing function stores a list of one or more predefined action words. For each predefined action word the micro blog processing function is enabled to perform a corresponding action upon detecting the action word in a hashtag of a micro blog post. In other words an action word is a reserved hashtag that indicates to the micro blog processing function that a corresponding action is to be performed. Some exemplary action words are crowdtag ratecrowd untagcrowd and createcrowd each of which is described in detail below. If the hashtag is not one of the predefined action words then the process proceeds to step .

If the hashtag is one of the predefined action words the micro blog processing function performs a corresponding crowd based action step . One of ordinary skill in the art will appreciate that the number of possible action words and corresponding crowd based actions are numerous. While not to be limited to any specific action words or corresponding crowd based actions as discussed above some exemplary action words are crowdtag ratecrowd untagcrowd and createcrowd. For the action word crowdtag the corresponding crowd based action is to tag the crowd of the user with one or more keywords or interests included in the micro blog post. In one embodiment the one or more keywords or interests immediately follow the action word crowdtag in the micro blog post and may be expressed as text or as additional hashtags. In another embodiment the one or more keywords or interests with which to tag the crowd of the user are other hashtags that are not action words and that can be found anywhere in the micro blog post. The crowd may be tagged with the one or more keywords or interests by adding the one or more keywords or interests to a profile of the crowd e.g. the aggregate profile of the crowd or a supplemental profile of the crowd .

As an example if the micro blog post is This crowd is great crowdtag politics obama healthcare the micro blog processing function identifies the hashtag crowdtag as an action word and tags the crowd of the user with the keywords or interests politics obama and healthcare. As another example the micro blog post may be This crowd is great crowdtag politics obama healthcare and the micro blog processing function may then identify the hashtag crowdtag as an action word and tag the crowd of the user with the keywords or interests politics obama and healthcare as specified by the corresponding hashtags. As yet another example the microblog post may be Have a great time watching some NCState football crowdtag and the micro blog processing function may then identify the hashtag crowdtag as an action word and tag the crowd of the user with the keywords or interests NCState and football. In this manner the user is enabled to explicitly define interests of the crowd. In a similar manner the user may untag a crowd e.g. explicitly remove a keyword or interest from a profile of the crowd using an untagcrowd action word.

For the action word ratecrowd the corresponding action is to apply a rating specified by the user in the micro blog post. The rating may be for example a numerical rating e.g. 3 out of a possible 5 a positive or negative rating e.g. a thumbs up or thumbs down or the like. More specifically the rating to be applied to the crowd is explicitly defined by the user and included in the micro blog post and preferably immediately follows the action word ratecrowd in the micro blog post. For example the micro blog post may be This crowd is great ratecrowd 5 or This crowd is great ratecrowd like. For the former the micro blog processing function applies a rating of 5 to the crowd. For the latter the micro blog processing function applies a like rating e.g. a thumbs up rating to the crowd. Similarly the rating may be expressed as additional hashtags that immediately follow the ratecrowd action word e.g. This crowd is great ratecrowd like .

Lastly for the action word createcrowd the corresponding action is to encourage the formation of a crowd of users at a desired location having one or more desired interests. The desired location may be the location of the user at the time of sending the micro blog post a location specified in the micro blog post or a POI near the location of the user that matches the desired interests of the new crowd e.g. interest is sports and a sports bar is selected as the desired location for the new crowd . The one or more desired interests are explicitly specified in the micro blog post and preferably immediately follow the action word createcrowd in the micro blog post. For example the micro blog post may be Wanting to watch the NC State football game with fellow die hard fans createcrowd NCSU football. In response the micro blog processing function identifies the hashtag createcrowd as an action word and then performs an action to encourage the formation of a crowd having the interests of NCSU and football at the location from which the user sent the micro blog post. In general the micro blog processing function may encourage the formation of the desired crowd by selecting users that have user profiles that match the desired interests for the new crowd and then encouraging the selected users move to the desired location. While not essential for additional details regarding the creation of a new crowd the interested reader is directed to U.S. patent application Ser. No. 12 859 837 entitled Crowd Creation System For An Aggregate Profiling Service which was filed Aug. 20 2010 and was published as U.S. Patent Application Publication No. 2012 0064919 on Mar. 15 2012 and is with the disclosure thereof being hereby incorporated herein by reference in its entirety for its teaching on crowd creation.

Once the corresponding action has been performed or at least initiated the micro blog processing function determines whether the last hashtag has been processed step . Notably in some embodiments hashtags that immediately follow a hashtag identified as an action word may be processed as part of performing the corresponding action e.g. performing the action for crowdtag consumes immediately following hashtags that define hashtag s to be applied to the crowd in some embodiments . Such hashtags are considered to have been processed when making the determination in step . If the last hashtag has not been processed the micro blog processing function gets the next hashtag in the micro blog post step and the process returns to step . Once the last hashtag has been processed the process returns to step and is repeated for subsequently received microblog posts.

The systems and methods described herein have substantial opportunity for variation without departing from the spirit and scope of the present disclosure. For example describe several exemplary embodiments for obtaining hashtags in micro blog posts made by the users and utilizing those hashtags to provide crowd based features. However one of ordinary skill in the art will appreciate that the crowd based features described above with respect to are exemplary. Other crowd based features may be provided based on the hashtags obtained from the micro blog posts of the users . For example the interests of the users in a crowd may be inferred from the hashtags in the micro blog posts of the users in the crowd and used to determine a degree to which the topics of the micro blog posts of the users in the crowd match.

As another example while the discussion above focuses on micro blog posts from the users that are registered with the MAP server the present disclosure is not limited thereto. For example the predefined action words described above with respect to may be known and used by users that are not registered with the MAP server . For example the micro blog processing function may query the micro blogging service for micro blog posts including the one or more predefined action words and then process the micro blog posts returned in response to the query regardless of whether the micro blog posts come from the users or non registered users. With respect to non registered users the MAP server may invite the non registered users to register with the MAP server in response to detecting that the non registered users have used one or more of the predefined action words in their micro blog posts.

The following use case illustrates some but not necessarily all of the aspects discussed above with respect to using hashtags in micro blog posts to provide crowd based features. Note that this use case is exemplary and is not intended to limit the scope of the concepts described herein.

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

