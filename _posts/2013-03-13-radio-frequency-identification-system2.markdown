---

title: Radio frequency identification system
abstract: A multi-tenant, RFID system that may be Cloud based or run on a local area network (LAN) for distributed RFID devices and RFID applications. The RFID system a central abstraction and translation layer between RFID devices installed in geographically diverse locations and applications. RFID devices initiate communication to a Cloud or LAN network over to send events and receive commands. RFID applications can receive RFID tag data, device health, and requested and derived events from the RFID system to automatically run processes based on the provided data. Applications manage RFID devices and settings in the RFID system using command and configuration interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09563795&OS=09563795&RS=09563795
owner: 
number: 09563795
owner_city: 
owner_country: 
publication_date: 20130313
---
Radio frequency identification RFID device implementation projects for the enterprise level may be highly complex and require relatively major shifts in processes and procedures enterprise wide. Typically RFID devices are installed throughout an enterprise for tracking a variety of items products and people. Further RFID devices may be used by an enterprise throughout the distribution system and potentially into the point of use consumption. Examples of RFID devices include fixed readers label printers handheld readers and cell phones among others that have an antenna designed to emit a radio frequency that allows for reading information on RFID tags. These RFID devices may also include other optional accessories such as for example barcode readers or keypads that may capture additional data when a reads of an RFID tag occurs.

The enterprise such as for example the information technology department of the enterprise is often tasked with figuring out how to get hundreds to thousands of RFID devices to communicate regionally if not globally to a central location such as for example the headquarters of the enterprise. However this process may be one of the more expensive aspects of deploying an RFID solution. In some uses the RFID hardware may use a Low Level Reader Protocol LLRP to communicate RFID tag information. However not all RFID devices may support LLRP. Thus RFID systems may require the use of middleware software that assists in allowing the RFID device to communicate with the software of the RFID system. However the need for such middleware software which may be purchased or built for the RFID system may increase the cost maintenance and or complexity of the RFID system.

Additionally RFID systems typically require a hardware and networking infrastructure that allows the RFID devices to be able to communicate with business application servers. For example RFID systems that receive information or data from RFID devices that may need to be accessible so that the data contained therein may be acted upon by the business applications such as for example in an enterprise resource planning ERP system. Thus developers of RFID systems may be tasked with not only figuring out how to handle the desired RFID data but also other events and processes involving the RFID data. Additionally developers of such RFID systems may need to account for a variety of other issues such as for example management of remote firmware RFID device health and the health of any peripherals connected to the RFID device. Further business processes throughout an organization that utilize the RFID system may need to be concurrently updated for the new tracking ability that new updated or modified software may provide. The infrastructure for an RFID system may also need to be built in conjunction with the associated business software that utilizes data obtained by or communicated through the use of the RFID system which may introduce another cost and or delay point. In view of the foregoing projects to implement RFID systems often never get off the ground due to the time and monetary investment in pure infrastructure costs.

RFID devices currently typically have an application programming interface API that is only useful for local area network LAN segments. Thus a local server connects to the RFID device via the API and then manages the functions of the RFID device such as for example RFID scans reboots of the RFID device the health of the RFID device and potentially firmware upgrades. However the API cannot be accessed over the Internet. Some RFID devices may have their own API that is either based on a proprietary protocol or an open source standard such as LLRP. Such protocols however are typically designed for LAN communications only.

A typical setup of an RFID system has a server on the same LAN network as the RFID device s . The server may connect to the RFID device s and then control their functionality. Control of the RFID device by the server is typically done over a specific transmission control protocol TCP port such as for example TCP port number 5084 for LLRP. However if a server needs to connect to an RFID device s that is on a different LAN network then either a virtual private network VPN is required to bridge the different networks or a route over the internet with a firewall forwarding rule needs to be in place to make the connection between the different servers.

Other RFID devices are dependent on being connected to a computer to operate or are built into a computer such as for example a handheld barcode scanner. In these instances the server may connect to the computer or the computer may be pushing data to the server. However if the server needs to connect to the computer the same problems exist for communications across different networks.

Certain embodiments of the present technology provide a radio frequency identification system that includes one or more radio frequency identification devices one or more endpoint applications and a network. The network includes a runtime system a plurality of web servers and a Cloud application. The runtime system further includes an application protocol interface that is configured to facilitate communications between the one or more endpoint applications and the network. The network also includes a device application protocol interface that is configured to facilitate communications over the internet between the plurality of web servers and the one or more radio frequency identification devices. Further the application is configured to create a tenancy on the runtime system for the one or more endpoint applications.

Additionally certain embodiments of the present technology provide a method for operating a radio frequency identification system that includes delivering a command from an endpoint application to a runtime system through an application protocol interface of the runtime system. The method also includes identifying a radio frequency identification device associated with the command and delivering the command from the runtime system to a server that communicates with an agent of the radio identification frequency device. Further the method includes queuing in a queue the command delivered to the server and polling by the agent of the radio frequency identification device the queue for the command. The method also includes delivering the command from the queue to the agent of the radio frequency identification device.

The foregoing summary as well as the following detailed description of certain embodiments will be better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention there is shown in the drawings certain embodiments. It should be understood however that the present invention is not limited to the arrangements and instrumentalities shown in the attached drawings.

The present invention will now be described more fully with reference to the accompanying drawings. This invention may however be embodied in many different forms and should not be construed as limited to the embodiments set forth here. Rather these certain embodiments are examples of the invention which has the full scope indicated by the language of the claims. Like numbers refer to like elements throughout.

Messages between the RFID device and the Cloud network the endpoint application and the Cloud network and or within the Cloud network may be done in context of a Cloud application . A runtime system of the Cloud network may receive a message from a device web server DWS and then determines which Cloud application the RFID device and moreover the information in the communication from the RFID device is associated. Communications may then be published to all of the users of the Cloud application and or placed in the queue provided by the queuing service . Similarly commands received via the Cloud application API for an RFID device are routed through the correct interface to the appropriate DWS such as in the illustrated embodiment the regional DWS that is communicating with the RFID device .

Data received from the RFID device may be published such as for example via a message routing and publishing application of a runtime system provides data for the Cloud application . The particular Cloud application that receives the data may depend on the content of the data and or the RFID device from which the data originated. More specifically the Cloud application may be associated with different endpoint applications that subscribe to or seek particular types of data or data from particular RFID devices . Further as illustrated by the data delivered to the Cloud application may be further filtered so that particular information may be delivered to some but not all endpoint applications associated with the particular Cloud application . As discussed below the data received by the Cloud application may be either directly delivered to an associated endpoint application or into a queue of a queuing service that the endpoint application can use to either access or consume the returned data when needed.

The local agent for the RFID device may manage a number of functions of the RFID device including for example RFID reading health reporting and firmware management among other tasks. Further the agent is configured to push data from the RFID device to the Cloud network . Thus while according to certain embodiments the agent may also be configured to provide data in response to requests received from a server of the Cloud network such as for example DWS the agent provides the ability for data on the RFID device to be pushed onto the Cloud network without a request for the data from the Cloud network or endpoint application or other segment of the RFID system . Thus the need for infrastructure such as a VPN connection typically used to establish a connection with a remote server at a satellite location and an RFID device is not required. The RFID system offers features to withstand intermittent component outages. When an endpoint application seeks to obtain information regarding an RFID device at a satellite location such as for example a supplier seeking information regarding a product stored on consignment at a end user s facility the current information that is provided by the RFID device may already be available on the network. Therefore in response to the endpoint application of the supplier seeking information provided by the RFID device the supplier s server is not required to establish a connection with the RFID device through the end user s network or send an information request to the RFID device through that connection. Instead information available from the RFID device may already have been pushed by the agent onto the Cloud network . Additionally the use of the agent to push information onto the Cloud allows the system to not need a remote server such as for example the supplier s server to control the RFID device as the local agent for the RFID device handles such work.

The agent may be a piece of software that runs directly on the RFID device . Alternatively in the event the RFID device does not include a microcontroller an external processor device having a microprocessor with logic where the agent can run is needed such as for example a controlling computer or networked appliance. Further the agent is the interfacing software that acts as the exchange between the API of the RFID device and the open Cloud device API that may reside at the DWS . Tasks for which the agent may be responsible for include but are not limited to responding to device firmware and or software updates and controls generating a regularly scheduled message indicating the health of the RFID device controlling configuration settings of the RFID device and RFID reads responding to configuration changes such as for example RFID scan durations RF power level and RFID tag reading sensitivity among others controlling when RFID scans occur what settings are used and the duration of RFID scans providing feedback when RFID reads are occurring or if the RFID device is experiencing a hardware problem generating messages when error conditions occur queuing messages if an internet connection is not available security authentication with the Cloud network managing device time and handling custom RFID device specific commands and data.

According to certain embodiments the agent may communicate through an internet connection with a DWS of the Cloud network . The RFID device and or agent may be configured to initiate the connection outbound from the network that the RFID device is connected to a particular DWS . For example illustrates three different DWSs that an RFID device may communicate with such as for example a United States US Region DWS European Union EU DWS and an Asia Region DWS . As indicated by their names according to certain embodiments the particular DWS that the RFID device communicates with may be based on the location of the RFID device and the DWS . However different criteria may be used to determine which DWS the RFID communicates with such as for example the type of product or end user of the product associated with the RFID device among other types of criteria.

Communication from or between the RFID device and the DWS may occur over a Secure Sockets Layer SSL connection using a ReST command s . According to certain embodiments this communication is an HTTPS POST from the RFID device to the DWS . Additionally according to certain embodiments to further augment the supply of data from the RFID device to the DWS a SOAP message or another proprietary messaging structure could be used to encapsulate the data. Further according to certain embodiments messages between the RFID device and the DWS may be in XML format.

According to certain embodiments to enhance security each agent is configured with an access key registered in the RFID system such as for example by the DWS . If the access key the agent is reporting does not match the access key for that RFID device and or an access key registered by the RFID system the communication from the agent will be flagged as an error which may result in the DWS rejecting or ignoring the communication from the agent . Further according to certain embodiments a return communication may be sent to the RFID device such as for example as an HTTP Error with a message indicating that the access key provided by the agent is invalid. This combination of an access key and the return message such as the HTTP error message provides security for messages being sent to the Cloud network across the internet as well as security for the Cloud and endpoint application that prevents spoofing or other malicious intent. Additionally the receipt of the error by the agent of the RFID device may afford the agent the opportunity to react to the message such as by resending the access key or analyzing the access key being used.

The DWS may be configured to be a relatively fast responding endpoint for communications including communications providing data to from RFID devices . Therefore according to certain embodiments each DWS may be multiple servers load balanced for optimal performance. Such load balancing may allow for maintenance on one or more DWSs while other DWSs handle the work load. Additionally the system may be configured to provide multiple DWS availability zones that allows for failover if interruptions in network connectively or other issues prevent one or more zones from being available. Thus if an RFID device is unable to connect with a DWS in a particular territory such as for example the US Region DWS communications to from the RFID device may be routed to another DWS such as for example the EU Region DWS . Further the system may also include a DNS load balancer for these multiple DWS availability zones such as the US Region DWS EU DWS and the Asia Region DWS that provides one end point that agents may connect to without the worry of managing failover and redundancy. Further as previously discussed the multiple DWS zones may be set up regionally across the globe to allow RFID devices to communicate with a DWS that are is the same region as the RFID device which may improve latency in network communications. Additionally multiple RFID devices may communicate with the DWS at the same time thereby allowing multiple messages to be sent to and or received by the DWS so as to improve the speed and efficiency of the system .

According to certain embodiments when an RFID device sends a communication to a DWS and if available security is validated the Cloud network may return an acknowledgement to the RFID device of successful receipt. For example acknowledgement of a successful receipt of a communication may be sent to the RFID device by issuing a HTTP with an optional message such as for example an acknowledgment message an indication that the RFID device is not recognized or to validate communications between the DWS and the RFID device among other messages. Once the RFID device and more specifically the agent of the RFID device receives the acknowledgement the agent may proceed to remove the communication that was sent by the agent of the RFID device to the DWS from the memory or queue of the RFID device and proceed to send the next message if there is one. According to certain embodiments the above process may be repeated for each message. Alternatively once the initial acknowledgment during a session of communication between the RFID device and moreover its agent and the Cloud network is received the agent may communicate all remaining information or data that is ready to be communicated such as for example by the SSL connection remaining open. As acknowledgements are received the agent of the RFID device may then remove the sent messages from the RFID device . Once the agent has finished sending messages and or receiving acknowledgments the SSL connection may be terminated or torn down.

The DWS may also include a queue of commands that are to be delivered to the RFID device . When a RFID device connects to a DWS to communicate information to the DWS the DWS may inform the RFID device that there are commands that the RFID device needs to process. The DWS may then send via the internet the commands to the RFID device for the RFID device to act upon.

Communications received by the DWS from the RFID devices may be held in the DWS for sending to a runtime system of the Cloud network . In the event the runtime system is unavailable each DWS may include a queue that holds the communications. The runtime system may include software that is configured to control elements of the runtime system such as for example application configuration and management which may be used to determine which Cloud application and or endpoint applications that are to receive particular types of data received from the RFID devices and or which RFID devices are to receive particular types of messages among other tasks. Moreover communications from RFID devices that are registered with the RFID system may be delivered to all users endpoint applications who that under the Cloud application are to receive or have subscribed to communications from the RFID device . Data cannot transverse across Cloud applications.

Additionally elements controlled by the runtime system may include for example RFID device configuration and management such as for example device definitions and logical devices. Further elements controlled by the runtime system may also include for example Runtime management which may include policies and overall management of the RFID system .

For example as different RFID devices may have different configurations such as different settings supported functions and reporting abilities among others the application configuration and management software of the runtime system may include device definitions that are created to represent a physical device such as a particular RFID device . Moreover a new device definition is expected to be created for each RFID device that the RFID system may support. Thus the runtime system uses device definitions to validate a command s or request s that is are being issued to the RFID device so as to for example validate that the command s is are compatible with the configuration of the RFID device . Such validation also allows for feedback to the user and or the endpoint application relatively quickly in the event a command originating from the endpoint application or runtime system is invalid or non compatible with the RFID device that is the intended recipient of the command. Commands that may be validated by the runtime system based on device definitions include but is not limited to RFID functions such as for example kill tags lock tags unlock tags write tag data and read tag data system functions such as for example reboot update firmware software configuration parameters including for example name of supported parameters that can be get set remotely as well as their type such as bool int and double among others device specific commands such as extension methods needed for specific functions to be controlled remotely outside of the standard RFID system offering and sensor controls including for example a list of sensors each RFID device may have along with the associated unit of measure for each sensor.

Additionally each RFID device may be required to be registered with the RFID system . According to certain embodiments such registration may require a digital serial number that the RFID device will send in communications with the RFID system . This digital serial number may be sent with the access key for the RFID device and the XML message payload. The RFID system may then map the digital serial number to a logical device in the runtime system . According to certain embodiments the digital serial number assigned to the RFID device may be permanent in that the RFID device does not receive a different digital serial number thereby allowing the digital serial number to provide a unique identifier across the RFID system . Additionally when the RFID device is registered it may be tied in the runtime system to a specific device definition which may allow the RFID system to validate communications before communications are sent to the RFID device . Endpoint applications may also query device configurations so that proper settings and options for communication with the RFID device are displayed to the end user.

Once a RFID device is configured in the runtime system the settings of the RFID device may be managed with a policy such as through the Cloud application configuration and management software used by the runtime system . Multiple RFID devices may share a policy so as to allow for consistent settings across those RFID devices while other RFID devices may have different policies. Each policy may be tied to configuration parameters associated with the device definition for the RFID device thereby restricting which parameters may be configured with default values of the appropriate type for the RFID device associated with the policy. However according to certain embodiments at least some users and or endpoint applications may have the ability to override policy settings at the time the policy is applied to the RFID device .

The runtime system may also run a high level security object application in which RFID devices may only belong to one Cloud application . For example a Cloud application may be the main containing security object in the Cloud network in that RFID devices endpoint applications and their users and policies among other settings are all tied to a specific Cloud application . According to certain embodiments information inside a Cloud application may not be read by another application and changes to an application may be contained only to that application 

Each user or their endpoint application may have their own access key that is used to issue commands to the Cloud application API . Unlike serial numbers for RFID devices security audits may require that access keys of the end user endpoint application and or of the agent of the RFID device to be cycled. Security is then abstracted away from the digital serial number identifier in that the access key is used for security while the digital serial number is used for system identification purposes. When agent learns that its access key is no longer valid it can establish a connection to the runtime via the DWS to acquire a new key. Security mechanisms would be put in place to only allow formerly valid agents to request a new key. Potentially for example a time period of 24 hours could be put in place where the agent would automatically qualify for a new access key without manual intervention.

The Cloud application may include a publishing service referred to as topic that end users may subscribe to using a subscription service and which the RFID system utilizes to deliver messages from to the endpoint application from the runtime system . According to certain embodiments the subscription service may utilize Amazon Simple Notification Service SNS . However the subscription service may take other forms such as for example be an HTTP Post back or a SOAP message among others. Additionally a queuing service or mechanism such as for example Amazon Simple Queue Service SQS Amazon Simple DB SDB an RSS service or Microsoft Message Queue MS MQ may be configured to receive messages from the subscription service . This configuration allows the endpoint application to have messages pushed directly into the endpoint application as shown for example by the endpoint application identified as Support Application in or query the queue provided by the queuing service for messages as shown by the other endpoint applications in .

The runtime system is a multi tenant platform setup to support a multitude of users and their associated endpoint applications . According to certain embodiments commands issued by an endpoint applications are achieved by using a ReST based web service over HTTPS. The endpoint application may be required to supply its access key when making a call to the Cloud application API . Calls from the endpoint application that have an invalid access key may be returned as an Error indicating the access key is invalid.

The Cloud application API provides a standard interface for issuing commands to RFID devices regardless of RFID devices manufacturer. Examples of RFID device commands include but are not limited to DeviceSpecificCommand which issues a command that is unique to a particular RFID devices ResetCommand which issues a command requesting the RFID device to reboot itself UpdateFirmwareCommand which issues a command requesting the RFID device apply a specific firmware version GetConfigValuesCommand which issues a command requesting the RFID device to send back the configuration parameters of the RFID device SetConfigValuesCommand which issues a command requesting the RFID device to update one or more of its configuration parameters with the Cloud device API validating that each of the parameters exist and are of the correct type via the device definition before accepting the request GetEPCListCommand which issues a command requesting the RFID device perform an RFID scan and return the results of the scan to the Cloud network ReadTagDataCommand which issues a command requesting the RFID device perform an RFID scan and return all data stored on an RFID tag such as for example TID EPC and data stored in the user memory area of the RFID tag WriteTagDataCommand which issues a command requesting the RFID device perform a write to one or more RFID tags such as for example writing data relating to an Electronic Product Code EPC or custom data to be stored in the user memory area of the RFID tag LockCommand which issues a command requesting the RFID device to issue a Lock command to one or more RFID tags with the Lock so that data can no longer be written to the RFID tag s UnlockCommand which issues a command requesting the RFID device to issue an Unlock command to one or more RFID tags with the Unlock command unlocking an RFID tag to allow for data to once again be written to the RFID tag and KillCommand which issues a command requesting the RFID device to issue a Kill command that makes an RFID tag no longer respond to RFID commands.

The Cloud application API provides a standard interface for issuing commands to configure a Cloud application or . Configuration commands the Cloud application API may provide includes but is not limited to AddLogicalDevice which represents a physical RFID device that the runtime system uses to route commands with a logical device being tied to a specific device definition to further instruct the runtime system how to treat the RFID device RemoveLogicalDevice which removes the setup and routes for a RFID device in the runtime system GetConfiguration which returns the runtime system settings for the Cloud application as well as a list of all configured logical devices GetDeviceDefinitions which returns a list of all available device configurations the RFID system supports and in which a logical device would be added with a reference to its correct device definition AddPolicy which creates a policy in the runtime system that is designed to manage the settings for a specific RFID device RemovePolicy which removes a specific policy from the runtime system GetPolicies which returns a list of all policies for the endpoint application AddDeviceToPolicy which informs the runtime system that an RFID device should be using the parameter values defined in the policy in conjunction with any overrides for its settings and RemoveDeviceFromPolicy which informs the runtime system that the settings of an RFID device that are defined in the policy need to be monitored for compliance.

The RFID system also publishes event data from RFID devices or derived events to all endpoint applications . As previously mentioned events are published and either delivered directly to the endpoints application through the subscription service or pushed to a queue that the endpoint application can then query from when needed. Communications sent to the queue of the queuing service may have a variety of different formats such as for example being sent in JavaScript Object Notation JSON or XML format or being formatted text among others.

Events may be generated by either the RFID device or the Cloud application API . Such events may include but are not limited to AggregateEvent which provides a list of RFID tags that have either been moved since the last RFID read or are no longer present and which may provide context to the present not present movement and directionality ObjectEvent which provides a list of RFID tags the RFID device scanned HeartbeatEvent which is a message generated by the RFID device indicating it is actively communicating with the Cloud network SensorReadingEvent which is a message generated by the RFID device that indicates non RFID data such as for example temperature or humidity among other data LogEntryEvent which is a message generated by the RFID device for health and diagnostic purposes and which may include a severity level to better prioritize the message CommandQueuedEvent which is generated by Cloud application API to indicate a command has been issued for an RFID device CommandCompletionEvent which is generated by the RFID device indicating the requested CommandQueuedEvent has been completed either successfully or unsuccessfully LogicalDeviceAddedEvent which is generated by the Cloud application API indicating a new LogicalDevice was added to the Cloud application LogicalDeviceRemovedEvent which is generated by the Cloud application API indicating a LogicalDevice was removed from the Cloud application DeviceFailureEvent which is generated by the Cloud application API indicating a LogicalDevice has been placed into a failure state in Jetstream and DeviceRestoreEvent which is generated by the Cloud application API indicating a LogicalDevice has been removed from a failure state in the Cloud application API .

Additionally depending on the need endpoint applications may be built to interface with an event a command or configuration interfaces. Moreover different endpoint applications may consume the same data. For example an enterprise resource planning ERP system such as Systemanalyse and Programmentwicklung System Analysis and Program Development SAP can automatically be configured to add RFID devices as inventory locations. When AggregateEvents are received SAP can then collect that data and either move the inventory automatically to a new warehouse stocking location or even bill a customer. Further for example another endpoint application may be a web based device health and management application. Other applications may include for example a vendor managed inventory application point of sale application field inventory tracking application or an asset management application among others.

According to certain embodiments in which the Cloud application API is ReST based the endpoint application may call the Cloud network using cURL or an equivalent to retrieve data for the endpoint application . However according to other embodiments an open source SDK may be created that allows the Cloud network to be worked with as though the Cloud network were an object. Calls to the Cloud network could then be built and validated before a ReST call from the Cloud application API is made to the endpoint application . Similarly the XML responses can be returned as objects and acted upon more easily.

According to certain embodiments messages in a queue of the queuing service of a Cloud application may be stored as a JavaScript Object Notation JSON . However the JSON standard may not be handy for applications outside of JavaScript. Thus according to certain embodiments a software development kit SDK takes a JSON message and converts the message into an object for use in the endpoint application . The SDK can be created for any language that supports calling a HTTP S endpoint such as for example C Java PHP Ruby or other similar language.

According to certain embodiments the RFID system handles routing of data from RFID devices to the correct endpoint application without analyzing the data with the possible exception of the endpoint applications . However according to other embodiments the RFID system may include an event analysis engine that is part of the runtime system . The event analysis engine may take information such as for example events product quantity time of event and or changes in data or a combination thereof to create new LogEntryEvents. Similarly a ComandQueuedEvent could automatically be scheduled if desired. These rules would apply either application wide or based on a device definition of an RFID device .

For example a rule may be set up application wide that monitors the last time a communication was received from an RFID device and have an error condition of four hours. Thus if an RFID device ceases communication with a DWS after four hours elapse a LogEntryEvent may be generated indicating the RFID device has not communicated in the last four hours. The LogEntryEvent may then be the basis for dispatching a support person to investigate the reason s for a lack of communications from the RFID device such as for example the RFID device having lost power. Additionally for example a rule may be set up in the device definition for RFID devices for an application that monitors temperature changes over a period of time. Therefore an RFID device may report its temperature on a regular basis via a SensorReadingEvent. Additionally the rule may be associated with various indication parameters such as a rise or drop in temperature in a prescribed time period. Hence if for example a door to a freezer containing the RFID device has been left open causing the temperature of the RFID device to rise such as 10 degrees in 5 minutes a LogEntryEvent may be generated indicating the warming trend. A support person could then be dispatched to close the door or remove the items if warranted. According to another example a rule may be created application wide that monitors for an error condition such as for example a software error. Thus when an RFID device is communicating but is sending in LogEntryEvents indicating a software problem a ResetCommand may be triggered for the RFID device to reboot to try and correct the software problem.

According to certain embodiments communication between the RFID device and the Cloud network may be intermittent such as for example occurring only at the specific times that the RFID device seeks to communicate with the Cloud network . Thus under such an example the RFID device may not receive a CommandQueuedEvent that has been generated by Cloud network until the RFID device communicates with the Cloud Network . In such situations a relatively significant amount of time may elapse before the command is issued to the RFID device . However to avoid such situations according to certain embodiments a communication channel that allows for bi directional communications may be continuously open between the RFID device and the Cloud Network . For example when an RFID device connects to a DWS the DWS would respond with options including the option of establishing a bi directional communication channel between the RFID device and the DWS . The RFID device and the DWS may then negotiate to see if such a connection could be established. Such negotiations may include latency and throughput to verify a stable connection could be established.

Once the bi directional communication channel is established events from the RFID device may be sent to the Cloud network . Likewise when the DWS receives a command the command would be sent directly to the RFID device through the bi directional channel for execution by the RFID device . The response from the RFID device may then be returned to the DWS on the acknowledgement of the command or in instances in which the command will take a relatively long duration the command would be returned to the DWS when completed without having to establish outgoing communications. Further in the event a bi directional communication channel is established and the connection fails or drops each side namely the RFID device and the DWS would continue to operate in the RFID device initiated connections mode with response back of queued commands.

According to certain embodiments the bi directional communication channel relies on technology similar to web sockets technology. For instance the initial communication between the RFID device and the DWS may be negotiated over TCP ports and eventually moved to a long lived TCP port which may be firewall friendly. According to such embodiments since the upgraded socket has to be negotiated the firewall is checked for compatibility as the socket is being set up.

With respect to RFID tag validation generally the identification information of an RFID tag is typically only useful in conjunction with a database that ties the RFID tag to the associated item. In some instances this identification data may also be written to the user memory of the RFID tag . However there are cases where the item associate with the RFID device needs to be validated for its authenticity. According to certain embodiments of the present invention such authenticity may be validated by using an interface to look up RFID tag data from various external sources or via a built in tag registration service.

According to embodiments which utilize the built in tag registration service the Cloud device API would add functions to add RFID tag and item information to a database on the Cloud network that would be managed through the Cloud device API. According to certain embodiments the database would be set up to have EPC and or TID as indexes with a reference to the manufacturer of the product associated with the RFID tag . The database may also contain a variety of information or fields such as for example expiration date lot and or batch number. Additionally according to certain embodiments such fields may be set up in a database that is separately based on the manufacturer. However rather than being stored in a database on the Cloud network according to certain embodiments the database may be outside of the Cloud network and accessible by a gateway service.

According to certain embodiments a separate non management API with read only access is available to any endpoint application . Alternatively for example the API may also be accessed by anonymous users for those not registered in the runtime system . The request for this read only data from the RFID device may originate from the endpoint application or the associated user of the endpoint application . According to certain embodiments the request may accept an EPC and or a TID as the required bits of information for which data is to be returned. Data stored on the runtime system relevant to the request may then be returned to the endpoint application such as for example via a ReST based Cloud application API . The data can be displayed back to the endpoint application as supplemental data. Similarly for RFID tags that have the same data written to the RFID tag the RFID tag may then be authenticated as valid such as for example by validation through a comparison of certain information on the RFID tag with information stored in the runtime system such as for example a digital signature expiration date batch number and or lot number among other information.

According to certain embodiments to augment the built in tag registration service a serialization option for the RFID system may be provided. For example RFID tags may or may not initially be provided by a manufacturer with an EPC programmed on the RFID tag . However this EPC may be inaccurate and or not unique. Therefore a request may be generated into a sterilization service offered by the runtime system for a new identifier for the RFID tag . The identifier returned from the serialization service may be unique so as to provide uniqueness for that identifier over all Cloud applications utilizing the service offered by the application . This may allow for RFID tags to have context across multiple Cloud applications without compromising application security.

Although embodiments of the invention have been described as communicating information across the internet the RFID system may also be configured to run on a local LAN. Such configurations may prevent data in the communications during operation of the of the RFID system from passing outside an end user s organization. For such configurations the DWS and runtime system may be packaged into pieces of software to be run on servers on premise of the end user. Although the RFID system would not be operating across the internet the Cloud device API which would be a local network API would continue to be in communication with RFID devices using the local area network. RFID devices may therefore be configured to point to the local instance of the DWS which may require the RFID device have a configuration that indicates the network location of the DWS . Similarly the endpoint application would also use a local application API similar to the Cloud application API that is on premise instead of through the Cloud which may also require that the endpoint application have a configuration that indicates where the network location of the appropriate API endpoint and queue.

Further certain embodiments have been described as using a queuing service through commands to the Cloud application API such as ReST commands with the results being returned via a publishing service which may allow for a disconnected request response view. Alternatively a bidirectional communications channel may be established between the runtime system and the endpoint application that may prevent drops in communications when the endpoint application connects to the runtime system via the Cloud network API. Such a bi directional communications channel may be more in line with client server communication structures.

For example when an endpoint application connects to the Cloud application API an option would be returned to the endpoint application to upgrade to a bidirectional communications channel. The runtime system and the endpoint application then would negotiate to see whether such a bi directional connection could be established. This negotiation may consider a variety of different factors such as for example latency and throughput to verify a stable connection could be established.

Once the bi directional communication channel is established commands are sent to the runtime system as previously discussed. Events from RFID devices are pushed relatively directly into the endpoint application . If the RFID device is using a bi directional communications channel to communication with the runtime system as previously discussed events may be sent to the endpoint application in near real time typically with the delay being associated with network latency and the runtime routing. Similarly commands issued by the endpoint application to the RFID device are received by the RFID device in near real time with delay again typically being attributed to network latency and the runtime routing. In the event a bi directional communications channel is established and the connection fails or drops the endpoint application would return to receiving events from the message routing and publishing service via the subscription service or the queuing service . The endpoint application would then be able to start the process over to reestablish the bidirectional communication channel.

Further in the event a bi directional communication channel is established with some endpoint applications as the each network application is multi tenant the runtime system may need to maintain a list of currently connected endpoint applications . Those endpoint applications that are not actively connected to the Cloud network may still have messages passed into the subscription service or queuing service via the publishing service of the runtime system . For those endpoint applications that are actively connected the message would be pushed down the open bi directional communication channel and not sent out for publishing for that user. To further the client server relationship when application to device is running in bi directional mode commands being executed against the RFID device would have the results returned in the acknowledgement to the endpoint application .

