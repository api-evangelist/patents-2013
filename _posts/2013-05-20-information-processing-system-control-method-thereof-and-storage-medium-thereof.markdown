---

title: Information processing system, control method thereof, and storage medium thereof
abstract: A method for realizing Single Sign-On (SSO) includes verifying, using prior information, whether authorization information issued by a first information processing system in response to successfully authenticating a user satisfies security requirements, providing, in a case where the authorization information is verified as satisfying the security requirements, a service without performing the user authentication, and performing, if an instruction to register a first information processing system that performs user authentication is received from the user, the registration by a method different from a method according to a management method of the prior information in the first information processing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09027107&OS=09027107&RS=09027107
owner: Canon Kabushiki Kaisha
number: 09027107
owner_city: Tokyo
owner_country: JP
publication_date: 20130520
---
Aspects of the present invention generally relate to an information processing system for realizing Single Sign On SSO between different domains a control method thereof and a storage medium thereof.

Conventionally SSO using Security Assertion Markup Language SAML is known as a technique for causing authentication to be federated between a plurality of servers existing under different domains.

The SAML based SSO is realized by an information processing system i.e. an identity ID provider including a server that requests a user to input authentication information and performs authentication based on the input authentication information and an information processing system i.e. a service provider including a server that trusts an authentication result of the ID provider and thus provides services without performing authentication based on the authentication information. If the user is to receive a service from the service provider the user is required to access the ID provider and be authenticated. For example the user is authenticated by the ID provider based on user authentication information such as a user ID and a password managed by the ID provider.

The ID provider then issues to the service provider an assertion which is a certificate of authentication. The service provider authenticates the user by verifying whether the assertion has been issued by a reliable ID provider. The user can thus be authenticated by the service provider based on the verification result without inputting the authentication information managed by the service provider and receive the service from the service provider.

As described above the SAML based SSO depends on a trust relationship between the ID provider and the service provider. Therefore it is necessary for a trust relationship to be previously established between the ID provider and the service provider before realizing SSO. Such a trust relationship is established by exchanging metadata describing the function for performing the SSO among a plurality of functions in the SAML and an electronic certificate certifying that the assertion has been issued from the ID provider. The specific content of the metadata and the technique for establishing the trust relationship are defined in SAML V2.0 i.e. a standard technology. The metadata and the information necessary for verifying the assertion such as the electronic certificate will be referred to as prior information. The service provider uses the prior information to verify whether the assertion satisfies the requirements. The prior information is data generally issued by the ID provider.

In SAML whether such ID provider is a reliable ID provider as viewed from the service provider is verified in addition to verifying whether the user has been authenticated by the ID provider so that the secure SSO can be realized. Reliability of the ID provider is actually determined by the service provider verifying using an electronic certificate in which a signature in the assertion issued by the ID provider is preset.

The SSO is advantageous in reducing the number of user authentication to be performed. However there are issues in realizing SSO as follows. For example if there is an error in associating a user of the ID provider with a user of the service provider in setting the SAML the user authenticated by the ID provider is authenticated by the service provider as a different user instead of the actual user. The user is thus authenticated as a different user of the service provider and receives the functional service of the service provider. Since the authenticated user does not receive the service as the actual user managed by the service provider it is disadvantageous for both the service provider and the user. In other words it is necessary to correctly and securely establish the trust relationship to safely use the SAML mechanism.

Conventionally Japanese Patent Application Laid Open No. 2009 118110 discusses a method for setting a trust relationship between an ID provider and a service provider. More specifically Japanese Patent Application Laid Open No. 2009 118110 discusses a technique related to SSO for securely establishing the trust relationship between a dynamically arranged device and a service providing server. When establishing the trust relationship the service providing server causes a certificate authority to verify the signature in the metadata so that secure SSO is realized while dynamically registering the metadata.

The trust relationship for realizing the SSO can be dynamically established using the technique discussed in Japanese Patent Application Laid Open No. 2009 118110. However since the technique discussed in Japanese Patent Application Laid Open No. 2009 118110 is only for establishing the trust relationship with respect to the service providing server i.e. the ID provider and does not consider establishing the trust relationship with respect to the service provider. In particular since it is assumed that a plurality of ID providers each of which manages the prior information differently and the service provider are to realize the SSO federation in the future it is desirable to establish an appropriate service provider.

Aspects of the present invention generally related to establishing a service provider assuming that a plurality of ID providers each of which manages prior information differently and the service provider are to realize SSO federation.

According to an aspect of the present invention a second information processing system that communicates with a first information processing system that performs user authentication using user authentication information input by a user includes a verification unit configured to using prior information verify whether authorization information issued by the first information processing system in response to successfully authenticating a user satisfies security requirements a providing unit configured to in a case where the authorization information satisfies the security requirements provide a service without performing the user authentication and a registration unit configured to if an instruction to register a first information processing system that performs user authentication is received from the user perform the registration by a method different from a method according to a management method of the prior information in the first information processing system.

Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.

Various exemplary embodiments features and aspects of the invention will be described in detail below with reference to the drawings.

According to the present exemplary embodiment the service provider supports multi tenants and manages data for each tenant. The service provider thus also manages prior information for each tenant. The tenant indicates a specific group such as a company or an organization which has received services using a conventional dedicated server. A multi tenant based information processing system includes a partition function that logically divides data pieces for managing the information pieces of a plurality of tenants in one hard disk drive HDD . Thus the data pieces of the plurality of tenants coexists in the same HDD.

A relation between an ID provider and a service provider according to the present exemplary embodiment will be described below.

From a view point of the service provider the ID provider is identified based on an ID referred to as an Entity ID. The Entity ID is written in the above described metadata which has been previously exchanged and the ID provider can be identified by referring to the Entity ID written in the metadata. According to the present exemplary embodiment the ID providers are different from each other in configurations of servers which provide the authentication function within the ID provider. The first server providing the authentication function has only a single Entity ID and the second server is capable of having a plurality of Entity IDs. Whether the server has a single Entity ID or a plurality of Entity IDs depends on the ID provider. If the server has a plurality of Entity IDs there is a plurality of ID providers corresponding to one server instead of a one to one relation. The term ID provider which identifies the server thus does not indicate one server. The difference in the assignment of the Entity ID between each of the ID providers will be described below.

For example since SAML is realized by hypertext transfer protocol HTTP the ID provider that becomes an endpoint is defined by a uniform resource locator URL . In addition a different electronic certificate is required for each Entity ID to sign the assertion. However the electronic certificate is issued associated with a host name. As a result if the ID provider is to have a plurality of Entity IDs it is necessary for each Entity ID to have a different host name and to be capable to solve internet protocol IP addresses of the respective host names. If the ID provider is to dynamically add an Entity ID in response to a request from the user it is necessary for the ID provider to include a domain name system DNS server and to register in the DNS server the new host name and IP address in response to addition of the Entity ID. Therefore it is difficult for the ID provider to have a plurality of Entity IDs unless the ID provider is comparatively large scale. However since the Entity ID can be changed for each tenant a more secure SSO can be realized.

On the other hand in a case where the service is provided to a third party such as an application service provider ASP user friendliness and security can be improved by restricting access from the third party to a specific URL. In such a case there is only one URL and one Entity ID.

One specific issue according to the present exemplary embodiment will be described in detail below. Conventionally it is not assumed that a server which is a service provider has a multi tenant configuration to be used by a plurality of organizations. Thus the following issue needs to be considered. If the service provider has the multi tenant configuration it is necessary to establish a trust relationship between the ID provider for each tenant. However in the case where the server providing an authentication function as the ID provider has only a single Entity ID the plurality of tenants shares one Entity ID. Therefore if the setting of the trust relationship between the service provider and the ID provider is dynamically changed the trust relationship set with the other tenants become invalid.

Further there are other issues. If the server providing the authentication function as the ID provider is capable of having a plurality of Entity IDs it is necessary to dynamically establish a trust relationship between the ID provider for each tenant to satisfy security requirements. In such a case if a specific tenant has previously established the trust relationship with the ID provider and the ID provider then newly establishes a trust relationship with another tenant an indirect trust relationship may be established between a plurality of unrelated tenants. There is thus a risk of unintended SSO becoming realized.

As described above there are issues to be solved in the case where the service provider which has the multi tenant configuration for managing data for each tenant is to realize the SSO federation with a plurality of ID providers whose management methods of the prior information are different.

The definitions of terms to be used according to the present exemplary embodiment will be described below.

User authentication indicates authentication using user authentication information input by a user. The information processing system which performs the user authentication provides an authentication screen in response to an access from a user who has not yet been authenticated. The information processing system then receives the user authentication information input via the authentication screen and verifies whether the user is a normal user based on the received user authentication information. According to the present exemplary embodiment the information processing system corresponding to the ID provider and the information system corresponding to the service provider both include a function of performing the user authentication. However since the service provider trusts the result of the authentication performed by the ID provider the service provider provides the services without performing the user authentication. This is the advantage of the SSO in particular SAML with respect to the user.

The information processing system refers to a system that includes at least one login control server that performs user authentication and a server that provides services according to a successful user authentication performed by the login control server. However these servers may be integrated as one server so that when referring to the information processing system it is not necessarily configured of a plurality of servers. Further the information processing system may be configured of only the login control server.

Authorization information is data issued according to a successful user authentication performed by the ID provider and corresponds to an assertion in the SAML. According to the present exemplary embodiment the authorization information is synonymous to assertion. However a form of the authorization information is not necessarily limited to an assertion format defined by the SAML. The authorization information thus refers to data that is used by the service provider to trust the authentication result of the ID provider and is data that is more broadly defined as compared to an assertion.

As described above metadata and an electronic certificate to be used in verification of whether the authorization information satisfies the requirements are referred to as prior information. However the prior information for implementing the present exemplary embodiment is not limited to the metadata and the electronic certificate and may include other information to be used in verification of the authorization information. Further according to the present exemplary embodiment the prior information may indicate either one of the metadata or the electronic certificate. In other words the prior information is thus the information required to be previously registered for verifying whether the authorization information satisfies the requirements.

According to the present exemplary embodiment the metadata at least includes the Entity ID for identifying the ID provider. The service provider verifies when verifying the authorization information whether the authorization information is issued from a reliable ID provider by comparing the Entity ID written in the metadata and the Entity ID of the authorization information. Further the metadata may include a description defining whether the ID provider or the service provider is to perform mapping of the user of the ID provider and the user of the service provider.

According to the present exemplary embodiment the electronic certificate or the certificate includes a public key corresponding to the ID provider and a hash. The signature included in the authorization information or the signature transmitted as different data along with the authorization information includes a hash which has been encrypted by a symmetric key corresponding to the public key. The service provider verifies when verifying the authorization information whether the authorization information is issued by a normal ID provider using the electronic certificate and the signature. The verification uses a general electronic certificate technique.

The service provider performs at least one of the above described methods for verifying the authorization information. If the service provider verifies that the authorization information has been issued from the normal ID provider it is referred that the authorization information satisfies the requirements. As described above the prior information is the data used for verifying whether the authorization information satisfies the requirements.

Referring to a wide area network WAN configures a world wide web WWW system according to the present exemplary embodiment. A local area network LAN connects each of components.

A client is at least one or more client computers that issue via the WAN a web access request to a web application server and an ID provider to be described below. More specifically the client is a client computer that includes a web browser for using the WWW system and is operated by a user. The client is blocked communication other than issuing of a request to the WAN by a firewall device not illustrated . Each device is communicable with each other using the above described network resources.

The web application server performs processing according to a web access request from the client and responds to the client via the WAN and the LAN . The web application server communicates with a server i.e. the ID provider to be described below via the web browser in the client . There may be one or more ID providers . The ID provider is thus referred to as an information processing system.

A login control server receives the authentication and an authentication setting request from the web application server via the LAN and communicates with a database server described below to perform user authentication.

The database server receives a data access request from the login control server via the LAN . The database server includes a general database management system DBMS . The information processing system including the web application server the login control server and the database server corresponds to a second information processing system.

The ID providers A and B are one or more ID providers that receive a login request from the client via the WAN and perform user authentication. Further the ID providers A and B receive an SSO request from the login control server via the web browser in the client and the web application server according to a SSO flow to be described below. According to the present exemplary embodiment the ID provider includes an SAML ID provider function. Further one of the information processing systems i.e. the ID provider A or B corresponds to a first information processing system. According to the present exemplary embodiment description is made based on the premise that there are two ID providers. In another exemplary embodiment two or more ID providers can be federated.

When the above described hardware is activated the CPU executes the BIOS and the OS is loaded to be executable from the HDD to the RAM . The CPU loads various software modules to be described below from the HDD to the RAM according to an operation of the OS. The various software modules are executed by the CPU and activates by cooperation of each of the above described devices. Further the I F is connected to the LAN controlled by the CPU according to the operation of the OS and transmits and receives requests between the software modules stored in each server. Furthermore the I F is connected to the WAN via the LAN controlled by the CPU according to the operation of the OS and realizes communication in the WWW system.

The web application server the login control server the database server and the ID providers A and B illustrated in are configured by one or a plurality of servers including the hardware configuration illustrated in . If the servers are configured by a plurality of servers a load distribution configuration or a redundancy configuration can be employed using a load balancer device not illustrated or a software module not illustrated .

Referring to a web server application includes a web interface that receives a web access request from the client . A login application is configured on the web server application as a filtering application and filters the web access request issued to an authentication setting application and a web application . The login application then communicates with a login control application programming interface API included in the login control server and verifies the user authentication. If the web access request received by the authentication setting application and the web application are unauthenticated a login destination i.e. an ID provider which performs the authentication verification is determined according to the predetermined authentication setting. The authentication setting includes the setting of the ID provider specified according to an ID provider registration instruction from the user which is a feature of the present exemplary embodiment.

The authentication setting application is configured on the web server application as an application and generates an authentication setting screen with respect to the web access request received by the web server application .

The web application is configured on the web server application as an application and returns a web access response with respect to the web access request received by the web server application .

Hereinbelow a series of processes as the web application which is performed by cooperation of the above described software modules will be regarded as a process performed by the application server . The web application process performed by the web application server will be described in detail below.

Referring to the login control API receives an API call from the login application and the authentication setting application included in the web application server and returns a response on the API execution result.

A login control unit is an application module that receives a login control request from the login control API . The login control unit obtains and updates data in the database server . Further the login control unit obtains and updates data in a metadata certificate storing unit . The login control unit thus performs the above described series of control.

Hereinbelow a series of login control processes performed by cooperation of the above described software modules will be regarded as a process performed by the login control server . The login control process performed by the login control server will be described in detail below.

Referring to a user table stores information about a user who uses the web application server . The user table includes the user information for verifying the user authentication information input from the user. More specifically the user table includes a user ID for uniquely identifying the user a password that is secret information of the user and a tenant ID for identifying the tenant the user belongs to. Further the user ID in the user table is associated with a user ID in a user map table . Furthermore the password may be stored using a predetermined encryption algorithm or as lossy information using a hash algorithm according to the security requirements.

A tenant table stores information about a tenant to which the user using the web application server belongs. The tenant table includes a tenant ID for uniquely identifying the tenant as a main key. Further the tenant table includes a selected ID provider type indicating a type of the ID provider selected by the tenant and a selected ID provider Entity ID which is the Entity ID of the ID provider selected by the tenant. The tenant ID in the tenant table is associated with the tenant ID in the user table and a tenant ID in an ID provider management table . If authentication verification is to be performed by the login application instead of an external ID provider login application is stored in the selected ID provider type .

An ID provider master table stores information about the ID provider with which a user using the web application server can federate. The ID provider master table includes an ID provider type for identifying the type of the ID provider. Further each ID provider type includes data on whether uploading of metadata certificate is necessary i.e. metadata certificate upload necessity data on whether the Entity ID is sharable i.e. Entity ID sharable and a shared Entity ID in the case where the Entity ID is sharable. The ID provider type in the ID provider master table is associated with the selected ID provider type in the tenant table and an ID provider type in the ID provider management table . If the ID provider type of the ID provider is login application it indicates that the authentication verification is performed by the login application instead of the external ID provider. The data is added to the ID provider master table by an administrator of the service provider performing registration according to the management method of the prior information of the ID provider.

The Entity ID sharable is related to the management method of the prior information in the ID provider. More specifically if the Entity ID is sharable the ID provider is an information processing system that manages the prior information by being shared with the plurality of tenants. If the Entity ID is not sharable the ID provider is an information management system that manages the prior information for each tenant. In the former case the Entity ID is sharable the prior information becomes common prior information among all of the tenants so that the prior information is the prior information of the information processing system. According to the present exemplary embodiment if the multi tenant service provider is to configure the SSO federation with such an ID provider the service provider exceptionally shares the prior information between the tenants. It is thus desirable for the administrator of the service provider to previously register the prior information. When registering the ID provider as will be described below the service provider registers the ID provider so that the assertion is verified using the previously stored prior information. The load on the user is thus reduced and incorrect registration can be prevented. In the latter case the Entity ID is not sharable since the prior information is different for each tenant it is necessary for the service provider to store the prior information of each tenant. Therefore according to the present exemplary embodiment the service provider stores the prior information so that the prior information is sharable among the plurality of groups i.e. the plurality of tenants even when it is of the multi tenant configuration.

The ID provider management table stores the information about the ID provider registered for each tenant to which the user using the web application belongs. The ID provider management table includes the tenant ID the Entity ID of the provider the ID provider type and an ID provider registration status . The Entity ID in the ID provider management table is associated with an Entity ID in a user map table . The data is added to the ID provider management table according to registration of the ID provider to be described below and is used to determine which tenant registers which ID provider.

The user map table stores information associating a user identifier with respect to the ID provider with an identifier of a user using the web application server when SSO is performed with the ID provider . The user map table includes the Entity ID for identifying the ID provider. Further the user map table includes the user ID for identifying the user using the web application server with respect to each Entity ID and a mapping ID which is the user identifier with respect to the ID provider . The method for using the information in each table will be described below.

The SAML trust relationship is established by obtaining the file in which the metadata is written and the file of the certificate used for signing from the ID provider and setting the files in the service provider. AS a method for obtaining the metadata and the certificate from the ID provider the ID provider may generates a screen not illustrated for downloading these files and the client can obtain them by accessing the screen.

The process performed in each server according to the present exemplary embodiment will be described below with reference to a sequence diagram and flowcharts.

In sequence S. the client issues a web access request to the web application server . An access destination of the web access request indicates the web application and a cookie indicating that the authentication to be described below has been completed is not included in the request.

In sequence S. the login application filters the request and requests the login control API in the login control server to perform authentication confirmation.

The login control unit in the login control server processes the authentication confirmation request received by the login control API . In sequence S. since the authentication confirmation request does not include the information indicating that the authentication has been performed as will be described below the login control server redirects the client to the login application .

In sequence S. the login application in the web application server receives an access from the client and responds by displaying a tenant ID input screen not illustrated . In sequence S. the client notifies the login application of the tenant ID input to the tenant ID input screen.

In sequence S. the web application server obtains from the login control API login destination information using the tenant ID received by the login application . The login control unit in the login control server then processes the login destination information obtaining request received by the login control API . In sequence S. the login control server uses the received tenant ID and obtains the selected ID provider information from the tenant table managed by the database server .

In sequence S. the database server extracts from the received tenant ID the selected ID provider type and the Entity ID of the selected ID provider and responds to the login control server . In such a case that the selected ID provider is login application the login control server responds to the web application server to instruct the login application to perform authentication verification. The login application receiving the authentication verification request displays to the client a user authentication screen not illustrated . The login application then receives the user ID and the password input from the client and issues to the login control server an authentication verification request using the input information. Upon receiving the authentication verification request the login control server verifies via the database server whether the user ID and the password in the user table match the user ID and the password i.e. the obtained user authentication information. If the user IDs and the passwords match the login control server may perform the process in sequence S..

Returning to the main flow in sequence S. the login control unit in the login control server processes the received Entity ID. The login control server obtains an endpoint of the ID provider for performing SSO from the metadata certificate storing unit using the Entity ID. In sequence S. the login control server issues via the client a SAML assertion request with respect to the endpoint of the ID provider . The SAML assertion request is issued via the web application server . The assertion request may be signed using the certificate which has been previously set. According to the present exemplary embodiment there is no signature on the assertion request.

In sequence S. upon receiving the assertion request the ID provider requests the client to perform user authentication. As for the user authentication method the user may be authenticated using the user identifier and the secret information managed by the ID provider . More specifically form authentication in which a screen is displayed on the web browser of the client for receiving input of the user identifier and the secret information or basic authentication may be performed.

If the user authentication is successful the ID provider generates the assertion. In sequence S. the ID provider returns an assertion response. The assertion generated by the ID provider includes the Entity ID the signature by the certificate and the mapping ID of the ID provider .

The login control unit in the login control server then processes the received assertion. In sequence S. the login control server obtains the certificate from the metadata certificate storing unit using the Entity ID. The login control server then verifies using the obtained certificate the signature of the assertion included in the assertion response received from the ID provider . In such a case the login control server may verify the validity of the Entity ID included in the assertion response using the metadata. However the assertion verification generally refers to verification using only the signature.

If the signature of the assertion is correct the process proceeds to sequence S.. In sequence S. the login control server obtains from the user map table in the database server the user ID using the Entity ID and the mapping ID. In sequence S. the database server returns the user ID identified by the Entity ID and the mapping ID. In such a case the method for referring to the mapping ID may be determined based on the metadata. Whether the ID provider or the service provider is to identify the user ID from the mapping ID is written in the metadata. According to the present exemplary embodiment the service provider identifies the user ID.

The login control unit in the login control server then processes the received user ID. In sequence S. the login control server generates authentication information. The authentication information to be generated here is information for example indicating that the user is authenticated including a session ID for uniquely identifying the authentication session. The authentication information is stored in association with the session ID and the user ID in the RAM of the login control server . In sequence S. the login control server redirects the client via the web application server to the web access request destination received in sequence S.. In such a case the generated session ID of the authentication information is set to the cookie in the HTTP protocol in the redirect request.

In sequence S. the login application in the web application server filters the request and requests the login control API in the login control server to perform the authentication confirmation. In such a case the web application server transmits to the login control API the session ID of the authentication information set to the cookie transmitted from the web browser in the client .

The login control unit in the login control server then processes the authentication confirmation request received by the login control API . More specifically the login control unit verifies whether the session ID of the received authentication information is stored as the authentication information in the RAM in the login control server and determines whether the user has been authenticated. In sequence S. the login control server notifies the login application of the verification result and the authentication information in the case where the user has been authenticated. The login application then notifies the web application of the web access request. In such a case the login application obtains via the login control server and notifies of the user ID and the tenant ID in the user table in the database server using the user ID stored in the authentication information.

The web application in the web application server then processes the web access request. In sequence S. the web application server issues the web access response to the client . As a result the client can receive the service provided by the service provider by only inputting the user authentication information to the ID provider without inputting the user authentication information to the information processing system of the service provider. Accordingly the SAML based SSO can be realized by the above described sequence.

A method for registering the ID provider will be described below with reference to the drawings. More specifically the method for registering the metadata and the certificate in the metadata certificate storing unit used in sequence S. and sequence S. illustrated in will be described below. Further the method for registering the Entity ID information of the selected ID provider in the tenant table used in sequence S. and sequence S. illustrated in will be described below. It is assumed that the user table the tenant ID in the tenant table and the information of the user map table are previously prepared.

Referring to an ID provider list is used for selecting the ID provider to be registered. The authentication setting application obtains the information from the ID provider master table in the database server via the login control server and generates the ID provider list . In such a case the authentication setting application omits the information in which the ID provider type is login application .

A file selection control box is used for designating a metadata file to be registered. A file selection control box is used for designating a certificate file to be registered. The file selection control boxes and are controlled as described below each time the selected state of the ID provider changes in the ID provider list . If the metadata certificate upload necessity in the ID provider master table of the ID provider selected in the ID provider list is YES the file selection control boxes and are displayed in valid states as illustrated in the screen A. The user can thus designate the prior information to be stored in the service provider. If the metadata certificate upload necessity in the ID provider master table of the ID provider selected in the ID provider list is NO the file selection control boxes and are displayed in invalid states as illustrated in the screen B. The user thus cannot designate the prior information to be stored in the service provider. The screen is configured to disallow uploading of prior information as described above so that the issue occurring when the trust relationship with the ID provider is dynamically changed can be solved.

A cancel button is used for ending the operation without registering the ID provider. A registration button is used for registering the ID provider. If the user presses the registration button the authentication setting application performs the following processes. The authentication setting application obtains the ID provider type selected in the ID provider list using the information obtained from the ID provider master table in the database server when the ID provider list is generated. If the file selection boxes and are valid the authentication setting application obtains the metadata file and the certificate file respectively. The authentication setting application then performs the following processes with respect to each of the metadata and certificate files.

The authentication setting application verifies the signature written in the metadata using the certificate. If the verification result is invalid the authentication setting application displays an error screen not illustrated to the client in response and ends the process. If the verification result is valid the authentication setting application extracts the Entity ID from the metadata. The authentication setting application then issues to the login control server an ID provider registration request using the user information the ID provider type the metadata the certificate and the extracted Entity ID. The login control unit in the login control server processes the ID provider registration request received via the login control API . The process flow will be described below.

As described above the authentication setting application verifies the signature in the metadata. However the signature may be verified when the login control server registers the metadata and the certificate as will be described below. Further when the authentication setting application issues the ID provider registration request to the login control server the authentication setting application may transmit each of the actual metadata and certificate files as the data. Furthermore the authentication setting application may store the files in a file storage area not illustrated and transmit IDs for identifying the files to the login control server . The IDs for identifying the files may be assigned to file names.

The ID provider registration process flow performed by the login control unit will be described below. In step the login control unit receives from the authentication setting application the ID provider registration request. The login control unit receives as the ID provider registration request the user information and the ID provider type and the metadata the certificate and the Entity ID of the metadata as necessary.

In step the login control unit uses the received ID provider type and obtains the information about the ID provider from the ID provider master table in the database server .

In step the login control unit refers to the Entity ID sharable in the obtained ID provider information. If the Entity ID is sharable YES in step the process proceeds to step . If the Entity ID is not sharable NO in step the process proceeds to step . In other words the login control unit determines whether the information processing system i.e. the ID provider designated by the user to be registered manages the prior information for each group or manages the prior information by being shared with a plurality of groups.

In step the login control unit refers to the metadata certificate upload necessity in the obtained ID provider information. If upload is necessary YES in step the process proceeds to step and if upload is unnecessary NO in step the process proceeds to step .

In step the login control unit returns a registration error response with respect to the received ID provider registration request and the process ends. In the case of an information processing system which requires receiving the prior information even though the ID provider manages the prior information by causing the plurality of groups to share the prior information there is a high risk of the ID provider incorrectly realizing the SSO. It is thus unlikely for such an ID provider to actually perform the operation. Therefore according to the present exemplary embodiment such a case is determined as a setting error in the ID provider master table and is set in the service provider as an error in exceptional processing. In other words if the ID provider manages the prior information by causing a plurality of groups to share the prior information it is necessary for the prior information to be previously stored.

In step the login control unit uses the ID provider type received in step and performs the master registration determination process to be described below. If the master registration determination process is normally performed the process proceeds to step .

In step the login control unit registers the ID provider. More specifically the login control unit registers in the ID provider management table in the database server the tenant ID included in the user information the shared Entity ID in the ID provider master table the ID provider type and an ID provider status. In such a case the ID provider status is stored as registered . If the ID provider status becomes registered the user becomes capable of registering the ID provider via an ID provider registration screen illustrated in to be described below.

In step the login control unit refers to the metadata certificate upload necessity in the obtained ID provider information. If upload is necessary YES in step the process proceeds to step and if upload is unnecessary NO in step the process proceeds to step .

In step the login control unit performs using the Entity ID received in step the double registration determination process to be described below. If the double registration determination process is normally performed the process proceeds to step .

In step the login control unit performs ID provider registration reservation. More specifically the login control unit registers in the ID provider management table in the database server the tenant ID the Entity ID the ID provider type and the ID provider status included in the user information. In such a case the ID provider status is stored as registration reservation . If the metadata and certificate files are to be directly received the files are stored in a memory area not illustrated and information pieces for identifying the metadata and the certificate are added to the ID provider status and stored.

In step the login control unit determines whether the ID provider registration reservation is successful. If the reservation has failed FAILED in step the process proceeds to step . If the reservation is successful SUCCESSFUL in step the process proceeds to step . As for a reason for failure in the registration reservation for example when a plurality of users performs at the same time the ID provider registration reservation with respect to the Entity ID the results of the double registration determination in step may mutually become normal. This because verification of the prior information takes time and the prior information is not yet stored as the prior information corresponding to the other groups of the registered user. In such a case unique constraints may be set to a combination of the items in the ID provider management table in the database server or a different item not illustrated . By specifying such a setting the failure response can be issued from the side which subsequently executes a commitment in a database transaction.

In step the login control unit returns a registration error response with respect to the received ID provider registration request and the process ends.

In step the login control unit registers the ID provider on which the registration reservation has been performed. The registration of the ID provider in the registration reservation status performed by the login control unit will be described below.

It is necessary for the login control unit to determine whether the login application and the login control unit are capable of interpreting and executing the various protocol settings of SAML written in the metadata. Further it is necessary for the login control unit to determine whether the description in the metadata satisfies the requirements of the SAML and whether the certificate is secure. Such determination processes are referred to as verification of the metadata certificate. It is highly likely that the verification of the metadata certificate requires a certain period of time. According to the present exemplary embodiment the login control unit thus regularly performs registration of the ID provider in the registration reservation status separately from performing the ID provider registration process flow . However according to the present exemplary embodiment the configuration is for a case where time is required for registering the metadata certificate and registration time may be shortened according to a support range of the description content of the metadata and the method for verifying the content and may also be performed as step . The registration process performed as a separate process or as step will be described below.

In step or in a separate process the login control unit registers the ID provider in the registration reservation status. More specifically if the verification result of the metadata and certificate files is valid the login control unit performs the following process. The login control unit stores the metadata and the certificate in the metadata certificate storing unit using the Entity ID. The login control unit then changes the ID provider status to registered in the ID provider management table in the database server and ends the process. If the verification result of the metadata and certificate files is invalid the login control unit ends the process as a registration error.

In step the login control unit uses the ID provider type received in step and performs the master registration determination process to be described below. If the master registration determination is normally performed the process proceeds to step . If the ID provider is an information processing system which manages the prior information for each group and the prior information has been previously stored the process in step and thereafter are performed. Since the system is used in a business application the system applies to the case where the prior information is previously obtained from an administrator of the tenants. A system administrator of the service provider thus stores the prior information before the administrator of the tenants performs registration. Therefore the load on the tenant administrator in registering the ID providers can be reduced.

In step the login control unit uses the Entity ID obtained in step and performs the double registration determination process to be described below. If the double registration determination process is normally performed the process proceeds to step .

In step the login control unit registers the ID provider. More specifically the login control unit registers in the ID provider management table in the database server the tenant ID included in the user information the shared Entity ID in the ID provider master table the ID provider type and the ID provider status. In such a case the ID provider status is stored as registered .

The master registration determination flow performed by the login control unit will be described below. In step the login control unit receives the ID provider type to be determined.

In step the login control unit determines using the ID provider type whether the Entity ID is registered in the shared Entity ID in the ID provider master table . If the Entity ID is not registered NO in step the process proceeds to step and if the Entity ID is registered YES in step the process proceeds to step . In step the login control unit issues an error response and end the process. In step the login control unit issues a normal response.

The double registration determination flow performed by the login control unit will be described below. In step the login control unit receives the Entity ID to be determined.

In step the login control unit determines using the Entity ID whether there is an ID provider having the same Entity ID in the ID provider management table . In such a case the login control unit regards the ID provider of which ID provider status is registered or registration reservation as a determination target. If there is an ID provider having the same Entity ID YES in step the process proceeds to step and if there is no ID provider having the same Entity ID NO in step the process proceeds to step . In step the login control unit issues an error response and ends the process. In step the login control unit issues a normal response.

By performing the above described processes the service provider of a multi tenant configuration can establish the trust relationship with the ID provider for each tenant. In other words if the service provider is to establish the trust relationship with the ID provider and the ID provider has only a single Entity ID the plurality of tenants in the service provider can share the single ID provider. Further if the ID provider can have a plurality of Entity IDs the trust relationship can be dynamically established without sharing the ID provider of the same Entity ID with the plurality of tenants in the service provider. Furthermore the load on the user in registering the ID provider can be reduced and incorrect setting of the ID provider can be prevented.

If an access from the client has not been authenticated the log in application performs the user authentication by performing filtering as described with reference to . The authentication setting application then receives the user authentication information from the login application . The user authentication information is the user ID and the tenant ID in the user table . Upon receiving the user authentication information the authentication setting application displays the ID provider selection screen in response and the client displays the ID provider selection screen .

Referring to an ID provider list is used for selecting from the list of registered ID providers the ID provider to perform SAML based user authentication. The ID provider list displays items including information indicating the selected state the ID provider name and the corresponding Entity ID. The authentication setting application obtains the information from the ID provider management table in the database server via the login control server and generates the ID provider list . In such a case the authentication setting application narrows down the information about the ID provider to be obtained using the tenant ID of the obtained user information. Further the authentication setting application displays the login application to be selectable as the ID provider with respect to all tenants. The authentication setting application then obtains the selected ID provider type using the tenant ID from the tenant table in the database server and displays the corresponding ID provider in the ID provider list as in the selected state. A cancel button is used for ending the process without selecting the ID provider. A select button is used for implementing the selection of the ID provider.

If the user presses the select button the authentication setting application performs the following processes. First the authentication setting application obtains the Entity ID of the ID provider selected in the ID provider list using the information obtained from the ID provider management table in the database server when the ID provider list is generated. The authentication setting application then issues an ID provider selection request to the login control server using the user information the Entity ID and the ID provider type. The login control unit in the login control server processes the ID provider selection request received via the login control API .

If a result of the ID provider selection request is an error the authentication setting application responds by displaying an error screen not illustrated . If a result of the ID provider selection request is successful the authentication setting application responds by displaying the ID provider selection screen in which the selected state of the ID provider list is updated.

Upon receiving the ID provider selection request the login control unit confirms using the tenant ID and the Entity ID whether the Entity ID is registered in the ID provider management table in the database server . If the Entity ID is not registered the login control unit issues an error response. If the Entity ID is registered the login control unit updates the information about the selected ID provider type and the selected ID provider Entity ID of the information of the matching tenant ID in the tenant table in the database server and responds that the result is successful. Then the ID provider with respect to the specific tenant thus becomes the ID provider selected by the user belonging to the specific tenant and if an unauthenticated access is received from the client the client is caused to access the ID provider.

By performing the above described process the ID provider registered by performing the processes in the flow illustrated in can be set to be used in the SSO sequence described with reference to . It is assumed that the registration and the selection of the ID provider are performed by the administrator who represents each tenant. Therefore the user belonging to the tenant in the ID provider that has been registered and selected by the administrator inputs the tenant ID in sequence S. so that the ID provider to perform user authentication is automatically determined. The authorization information issued in response to successfully authenticating the user belonging to the tenant is also verified using the prior information set by the administrator belonging to the tenant.

As described above with reference to the ID provider registration flow illustrated in it is highly likely that the verification of the metadata and the certificate requires time. Therefore if the ID provider is registered on the ID provider registration screen A or B using the incorrect metadata and certificate files the ID provider status becomes registration reservation in step illustrated in . Accordingly it is determined in the double registration determination flow that the Entity ID is being used and re registration cannot be performed even if the user urgently attempts to re register the correct metadata and certificate. In other words the correct metadata and certificate files can only be set by waiting for the verification of the previous metadata and certificate to be completed and the process result to become an error.

According to a second exemplary embodiment such a problem is solved as will be described below with reference to the drawings. Since the second exemplary embodiment is different from the first exemplary embodiment only in the double registration determination flow description will be omitted. is a flowchart illustrating the process performed when the login control unit in the login control server receives a double registration determination request according to the second exemplary embodiment. According to the first exemplary embodiment whether the prior information uploaded from the user is previously registered as the prior information corresponding to other groups is determined based on the Entity ID. According to the second exemplary embodiment another determination process is added as illustrated in .

A double registration determination flow performed by the login control unit will be described below with reference to . In step the login control unit receives the Entity ID to be determined and the tenant ID included in the user information.

In step the login control unit determines using the Entity ID whether the ID provider having the same Entity ID exists in the ID provider management table . In such a case the login control unit regards the ID provider of which ID provider status is registered or registration reservation as a determination target. If the ID provider having the same Entity ID exists the login control unit determines that the Entity ID is being used YES in step and the process proceeds to step . If the ID provider having the same Entity ID does not exist the login control unit determines that the Entity ID is not used NO in step the process proceeds to step .

In step the login control unit determines whether the tenant ID of the same Entity ID determined in step is the same as the obtained tenant ID. If the tenant ID is the same the login control unit determines whether the ID provider status is registration reservation . If the ID provider status is not registration reservation NO in step the process proceeds to step . If the ID provider status is registration reservation YES in step the process proceeds to step .

In step the login control unit issues an error response and ends the process. In step the login control unit issues a normal response and ends the process.

According to the second exemplary embodiment if the ID provider is registered using the incorrect metadata and certificate files re registration can be performed within the same tenant even when the registration reservation has been set in step . In other words the correct metadata and certificate files can be reset without waiting for completion of the verification of the metadata and the certificate so that usability can be improved.

Additional embodiments can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions recorded on a storage medium e.g. computer readable storage medium to perform the functions of one or more of the above described embodiment s of the present invention and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more of a central processing unit CPU micro processing unit MPU or other circuitry and may include a network of separate computers or separate computer processors. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2012 116625 filed May 22 2012 hereby incorporated by reference herein in its entirety.

