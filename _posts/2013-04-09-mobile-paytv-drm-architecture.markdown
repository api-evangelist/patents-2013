---

title: Mobile payTV DRM architecture
abstract: A secure element operating in conjunction with a secure partition of a system-on-a-chip (SoC) having set top box (STB) functionality allows for digital rights management (DRM) key handling in a mobile platform. The secure element can include a secure processing system (SPS) to be implemented as a hard macro, thereby isolating the SPS from a peripheral processing system (PPS). The secure element and the secure partition of the SoC may be operatively connected by a secure cryptographic channel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09344747&OS=09344747&RS=09344747
owner: Broadcom Corporation
number: 09344747
owner_city: Irvine
owner_country: US
publication_date: 20130409
---
The technical field of the present disclosure relates to mobile TV and digital rights management DRM and in particular to utilizing embedded secure elements eSEs in a mobile device platform for key handling.

Set top boxes STBs may be used to receive and decode digital television or cable broadcasts. More recent STBs may also have the ability to interface with data networks thereby allowing a user to interact with e.g. the Internet via a television instead of through a computer. A variety of different types of STBs can exist including those that merely receive and unscramble encoded television or cable signals to those that can act as a multimedia gateway for receiving multimedia content to those that can function for all intents and purposes as a multimedia desktop computer that can execute various advanced services e.g. videoconferencing home networking IP telephony video on demand etc.

Digital rights management DRM can refer to various access control technologies that can be implemented in STBs or other devices that render digital content. In particular DRM technology can be used to allow service and or content providers to provide digital content securely where DRM protected content may be encrypted and packaged with a license to enforce authorized consumption of the DRM protected content. Examples of such DRM technology can include but are not limited to the following Apple s iTunes technology Windows Media DRM Open Mobile Alliance OMA DRM Digital Transmission Licensing Authority Digital Transmission Content Protection DTCP and Digital Video Broadcasting Content Protection and Copy Management DVB CPCM .

Mobile TV can refer to providing TV services to mobile devices such as cell phones handheld mobile computers e.g. personal digital assistants PDAs smartphones tablet computers music players e.g. MP3 players over mobile telecommunications networks. Mobile TV enables users to access TV related content on their mobile devices. Video audio and interactive content may be provided by mobile TV broadcasts. Many broadcasters already provide mobile TV broadcasts and the numbers of such broadcasts in the marketplace are steadily increasing where mobile TV signals from broadcasters can be broadcast according to numerous mobile TV standards. Example mobile TV standards include but are not limited to digital video broadcasting handheld DVB H digital multimedia broadcasting DMB TDtv 1seg DAB and MediaFLO. Mobile TV can include pay TV services and or content which can refer to subscription based or paid for TV services and or content which can be provided by e.g. analog cable digital cable satellite technologies via digital terrestrial and Internet TV. Such pay TV services and or content may be protected utilizing DRM technology

Attempts to accommodate relatively untrusted software applications or frameworks in certain types of devices may complicate applicable certification processes that are performed in accordance with one or more industry defined certification standards or testing procedures. For example vendor certification of many STBs used by cable operators is conducted via rigid certification processes that test interoperability and security compliance for devices that implement specifications such as DOCSIS PacketCable CableHome and OpenCable Successful certification of such devices typically requires full end to end security. Likewise DRM and other technologies implemented in a particular device or component such as an SoC may require distinct certification processes which do not allow certain interactions with an unsecured operating system OS environment or software framework. When implemented in a cable STB cable modem media terminal adapter or like cable service device certain specifications may require that a digital certificate be embedded in the device at the time of manufacture. Such certificates underpin a number of security features including device authentication and content integrity. By way of example a digital certificate embedded in such devices helps prevent pirating of services by allowing a content provider or service operator to authenticate a device requesting services.

In general any unsecured portions of a media pathway in an STB or like device if not isolated will cause the certification of such pathway to fail. Most conventional STBs are designed to provide a single secure and certified pathway through the various elements or components of the device. In some recent multi processor STBs a conventional certified pathway is separated from untrusted components by creating a hardware boundary between the two. In particular a first processing module is utilized to provide secure functionality e.g. decoding operations while a separate processing module with a lower security level is used to support an untrusted framework.

A software framework may provide application programming interface API functionality and services that are not offered by an underlying operating system and may thereby offer a level of platform independence in certain implementations. Frameworks are often designed to be a reusable and adaptable software system or subsystem.

The processing unit of some devices may have multiple processors or processing cores in order to provide higher performance and or multi tasking capabilities. In some of these multi processor systems when multiple applications or programs are running access control is typically needed to separate the functionality of the applications running on multiple processors. Separation or segregation of different applications and or tasks running on different processors helps to ensure that one application does not interfere with the execution of another. Likewise data assigned to one processor should not be accessed by another processor unless that data is shared between the two processors. Such separation may involve controlling the bus accesses each application may make to the rest of the system. Even in a multi processor system in which one processor environment provides trusted or secure operations while another operates in an unsecure or restricted environment there can be a substantial possibility of an incursion from the unsecure zone into the secure zone when the operating system is managing the separation.

For example in an STB that allows a user to receive television signals and also allows the user to access the Internet the secure environment may run applications including a secure STB application pertaining to the reception decryption and display of certain channels or content provided by a cable or satellite provider or other service operator. The unsecure environment in the STB may execute applications that allow a user to access the Internet for web browsing gaming etc. In this example a content provider would generally not want the user or anyone else to access the applications pertaining to television channels. However if there is commonality in software that controls the accesses to both environments such as running the same operating system to manage accesses in both environments then there may be a heightened risk of access violations. Such violations whether intentional or non intentional could result in an unsecure breach into the secure applications of the STB such as a web originated intrusion into protected television channels.

Further certain of the illustrations herein describe a processing module a processor or a CPU for a device that provides a processing function in the described embodiments. However it is appreciated that a variety of other devices and or nomenclature may be used in other embodiments to provide for the processing function in practicing the invention. Various embodiments may be readily adapted to other usages where multiple processing environments zones domains etc. exist in which separation and or segregation between two or more zones may be desired. Likewise while certain embodiments are described as implemented by an STB mobile device or some similar media processing device performing trusted media processing operations the architectures and methodologies described herein may be applicable in whole or in part to other devices including media consumption devices such as PVR s DVD players access points televisions computing devices etc. In the context of pay TV services conditional access CA can refer to a service that allows certain content e.g. broadcasts programming products etc. to be restricted through encryption. In order to view such content the content may be decrypted prior to being decoded for viewing.

Additionally the secure partition of the SoC may include a record audio video interface engine RAVE module which may be utilized to read compressed audio and video from memory e.g. dynamic random access memory DRAM . The RAVE module may e.g. descramble the compressed audio and video using memory to memory M2M security and implemented via DRAM scrambling module M2M key table and M2M scrambling descrambling module for decompression and display of the compressed audio and video. M2M may refer to performing cryptographic functions for e.g. the input data or other data transmitted within the secure partition of the SoC by reading from memory e.g. DRAM and writing to memory e.g. DRAM after performing the cryptograph functions e.g. scrambling and descrambling keys as will be discussed in greater detail below associated with one or more DRM schemes. Such keys may be received via a key router .

Media e.g. video processing may also occur on the secure partition of the SoC. That is a signal such as the aforementioned broadcast signal may flow as e.g. compressed digital data or digitized baseband analog video for example and decodable streams based on the signal may be generated by the RAVE module . The decodable streams may be stored in memory such as the DRAM by the RAVE module . The decodable streams may be retrieved from DRAM decoded and restored in DRAM by a video decoder. A display module may then operate on the decoded streams and e.g. scaling and frame composition may be effectuated additional graphics and or video may be combined with the signal video and the resulting stream may be sent to one or more video encoders for display through suitable output interfaces such as e.g. a High Definition Multimedia Interface HDMI interface .

It should be noted that the secure partition of the SoC semiconductor chip may include more or less elements and or modules that can include suitable logic circuitry interfaces and or code that may be operable to process one or more types of data and or control and or manage operations tasks and or applications of the secure partition of the SoC.

At run time host software can execute the DRM stack which may request a cryptographic operation using the DRM secrets private keys stored in over encrypted fashion in flash memory. illustrates an example DRM stack implemented at the DRM implementation level . A common DRM framework illustrated in may be used to provide an API through which the DRM stack makes the cryptographic operation request. The common DRM framework can have the SoC security hardware the secure partition of the SoC first decrypt a DRM package using the SoC unique key K and subsequently use the SoC global unique secret Kto decrypt the DRM package. Both decryption operations may be performed by the security hardware such that the SoC global and unique secret keys are not known and cannot be accessed by the host processor. As a result a clear and unencrypted DRM certificate e.g. Netflix certificate of can appear in memory and the common DRM framework software running on the host processor will then either pass the secret private key to the security hardware via a common cryptographic library implemented in the generic cryptographic implementation level nexus and low level drivers implemented in the hardware and software interface and low level implementation levels and respectively.

It should be noted that if necessary hardware is not present e.g. cryptographic accelerator the common DRM framework may pass the secret private key to a software cryptographic library such as openSSL implemented at the hardware and software interfaces level via cryptographic software library implemented in the generic cryptographic implementation level . The aforementioned common DRM framework can provide all the required cryptography and a common API and robust key management while allowing the underlying hardware to differ.

It should also be noted that the DRM stack and common DRM framework may all run on the host processor and rely on software isolation and security to ensure correct robust operation as will be described in greater detail below . The decrypted DRM secrets private keys can be available to the host processor while the SoC global and unique secret keys are not.

As described above many broadcasters already provide mobile TV broadcasts and the numbers of such broadcasts in the marketplace are steadily increasing. Accordingly the amount and popularity of mobile pay TV broadcast content is also steadily increasing. While conventional methods of providing mobile pay TV services may seek to secure a trusted execution engine aspect of a mobile device i.e. by combining the key handling and media e.g. video processing to be handled by the same processor reaching the same level of security typically found on an STB would be cost prohibitive. Moreover and following the example architecture of conventional methods would rely on the integration of a secure processor into a mobile processor of the mobile device again adding additional cost to e.g. the manufacturing of the mobile processor.

Still other conventional methods may rely on the utilization of subscriber identity module SIM cards. However SIM cards are generally controlled by mobile network operators or wireless carriers each of which may rely on complex and differing business models and fragmentation making SIM card based implementations of an SE for mobile pay TV as well as the issuing and execution of mobile payment applications for mobile pay TV services content difficult to realize.

In accordance with various embodiments an SE such as an eSE may be utilized in a mobile environment such as a mobile device e.g. a smartphone tablet computer or other host device. The eSE may perform the aforementioned security functions that on an STB as described above may be performed by a security processor such as the secure processor of .

As illustrated in such an eSE e.g. eSE may perform the key handling for DRM schemes. Video processing may be performed in the secure partition of an SoC for implementing mobile STB functionality and which may also be considered a trusted execution engine of the mobile device. further illustrates ACPU which as described above may transmit secure commands to the eSE . The SoC of like that of may receive input data such as a broadcast signal. The eSE may be perform screen data transfers as well as restrict access to the secure partition of the SoC and may support one or more multimedia applications that provide security for programming information. Again and similar to those applications described above with reference to such applications can include CA applications implemented by a CA module CP applications implemented by CP D CP S modules and CA CP key table and respectively and or other DRM mechanisms. Further still eSE may include security components that are required in satellite and cable STBs and various CA and CP standards such as CP for CableCard and SVP and can also support implementations of a variety of open and or proprietary security algorithms.

The secure partition of the SoC may include a RAVE module which may be utilized to read compressed audio and video from DRAM . The RAVE module may e.g. descramble the compressed audio and video using M2M security and implemented via DRAM scrambling module M2M key table and M2M scrambling descrambling module for decompression and display of the compressed audio and video. Keys utilized in the performance of cryptograph functions e.g. scrambling and descrambling keys associated with one or more DRM schemes may be received via a key router .

Media e.g. video processing may occur on the secure partition of the SoC where e.g. a broadcast signal may flow as compressed digital data or digitized baseband analog video for example and decodable streams based on the signal may be generated by the RAVE module . The decodable streams may be stored in memory such as the DRAM by the RAVE module retrieved from DRAM decoded and restored in DRAM by a video decoder. A display module may then operate on the decoded streams and e.g. scaling and frame composition may be effectuated additional graphics and or video may be combined with the signal video and the resulting stream may be sent to one or more video encoders for display through suitable output interfaces such as e.g. a High Definition Multimedia Interface HDMI interface .

Also illustrated in is a secure cryptographic channel that operatively connects the eSE and the cryptographic core of the secure partition by way of the key router . While in an on chip direct hardware connection may be provided that cannot be seen by the video processing aspect of the secure partition of the SoC the cryptographic channel is similarly hidden by encoding a unique identifier in the secure partition cryptographic core that may be bound to the eSE . This may be accomplished during e.g. manufacturing of the mobile device via for example symmetric or certificate based binding.

It should be noted that the secure partition of the SoC semiconductor chip may include more or less elements and or modules that can include suitable logic circuitry interfaces and or code that may be operable to process one or more types of data and or control and or manage operations tasks and or applications of the secure partition of the SoC.

In accordance with various embodiments utilization of an eSE such as the eSE has the advantage of being an integral part of any mobile device and because it is controlled by mobile device original equipment manufacturers OEMs various applications implementations may be provided that can be carrier agnostic. According to one aspect the eSE may utilize a secure processing system hard macro. As utilized herein the term hard macro may refer to the design of a logic function on an integrated circuit IC chip that may specify how required logic elements are interconnected as well as the physical pathways and or wiring patterns between components. In particular an secure processing system SPS in accordance with various embodiments may be a die isolated hard macro that can be instantiated in e.g. an application specific IC ASIC . This may be contrasted with a soft macro where the physical pathways and or wiring patterns are not specified. The SPS in accordance with various embodiments may through an isolation bridge protected by the SPS utilize generic interfaces to access and or otherwise interact with such unsecure peripheral logic and or circuitry which may make up or embody a peripheral processing system PPS . That is an eSE configured in accordance with various embodiments may be partitioned into a first portion that may include a hard macro SPS and a second portion that may include a PPS where the hard macro SPS may be self sufficient within the boundary of the hard macro and isolated from the PPS. In accordance with various embodiments the PPS may refer to a processing system utilized to relay communication on physical transport interfaces as will be described in greater detail below to the isolation bridge. Accordingly as well the hard macro SPS in accordance with various embodiments may be transport agnostic. 

In accordance with various embodiments and as a result of utilizing a hard macro SPS the hard macro SPS may be certified and or meet security requirements for e.g. DRM and used re used in one or more devices without the need to re certify those one or more devices in their entirety. That is and for example a common security requirement may be that only certified or trusted code be executed in the security domain of a system e.g. an SPS . In certain approaches to meeting this security requirement systems may implement an architecture where a hardware mechanism is used to allow a single processor to operate logically as two processors. However from a security perspective this architecture may require preventing the SPS from operating simultaneously with an application processor.

Furthermore and in the context of multi application environments secure certified applications such as a certified financial application may co exist with customer written applets. Thus certification of a device in which such multi application environments exist may become invalid once the customer written untrusted applet is added to the multi application environment. Therefore utilization of a hard macro SPS in accordance with various embodiments may avoid the need to e.g. re certify an entire device upon an untrusted applet being added to the multi application environment.

Additionally any updates to interface drivers and or system interfaces for example need not affect the certification of the hard macro SPS nor would they pose any type of security risk. For example certification of a device utilizing a conventional SPS may entail certification of the entire device including any interfaces such as one or more peripheral interfaces when the device may be a small IC chip. Because any differences in such small IC chip devices may simply involve differences in flash memory electrically erasable programmable read only memory EEPROM and or software running on a platform of the devices including these aspects of the devices as part of a TOE for certification may be thought of as being straightforward. Although re certifying each of the devices may be both a costly and lengthy process where any new security threats may also require evaluation in the context of e.g. generational changes to smart card devices re certification of entire devices may not pose issues. However and in the context of combination multi mode devices such as communication devices that enable some combination of wireless local area network WLAN Bluetooth Global Navigation Satellite System GNSS e.g. Global Positioning System GPS and cellular communications utilizing e.g. Generation Partnership Project 3GPP Long Term Evolution LTE communications standard a fourth generation 4G mobile communications standard or a third generation 3G mobile communications standard for example re certification may be unfeasible or at least difficult to achieve.

Various embodiments described herein are presented in the context of an eSE designed for use in a host device such as a mobile device in combination one or more connectivity controller s . The connectivity controller s may be included in implemented as a connectivity device chip. Such connectivity devices chips may provide e.g. NFC capabilities Bluetooth communication Wi Fi communication etc. or any combination thereof. Various embodiments may also provide security applications that may be specific to a host device that may not necessarily utilize e.g. NFC.

The eSE design may utilize external flash memory to provide near unlimited secure application storage within a mobile device. Non volatile data may be stored in either host processor flash memory or local serial peripheral interface SPI flash memory where the local SPI flash memory may be used for applications that are to be available when a host e.g. the mobile handset is not powered on. One example of such an application may be a field power application. Additionally the local SPI flash memory may be utilized for the storage of static information outside of the target of evaluation TOE in external non volatile memory.

The external flash memory may always be protected by unique keys stored in the eSE to ensure that the security of the applications and data is maintained at the same level as on chip information. The external flash memory may be managed by the eSE firmware and host device software to ensure a seamless integration with host device based applications. By providing flash memory externally the eSE provides flexible options that can accommodate secure application storage as well as the potential for future integration in other host devices.

Designing the SPS of an eSE in accordance with various embodiments may entail completely designing the SPS in a secure facility as a hard macro. For example once a final chip level design for an SPS as a hard macro is achieved that final chip level design may be imported into a secure facility. The hard macro SPS may be merged with other components of the eSE e.g. the PPS. Design Rule Checking DRC may be performed on the eSE and upon DRC validation with requisite Design Rules the eSE may be taped out from the secure facility onto a certified chip e.g. IC fabrication line facility for manufacture.

The eSE may utilize a variety of system interfaces to provide external connectivity. A first interface may be that which connects the eSE to an NFC or connectivity controller which provides an interface for secure applications to communicate using a radio interface. For example the host device utilizing an eSE in accordance with various embodiments and an NFC enabled device may interact via a secure application s using NFC. A second interface may connect the eSE with the host device processor. The eSE may connect either physically or logically to the host device processor for management such as e.g. loading and unloading applications as well as for interacting with host specific security applications. A third interface may be relied upon to allow the eSE to access flash storage where again the eSE may connect either physically or logically to external flash memory to effectuate application code and data storage. It should be noted that other system interfaces may be utilized by the eSE for external connectivity purposes.

As previously described the eSE may utilize external flash memory e.g. Universal Integrated Circuit Card UICC to store secure applications and or secure information and local flash memory e.g. local flash memory for storing non volatile data. The eSE may connect to the local flash memory via an SPI interface and may connect to the UICC via a single wire protocol SWP or dual wire protocol DWP interface to an NFC controller and from the NFC controller to the UICC using an SWP interface . The UICC may be connected to the host device via an ISO 7816 interface .

Communications on an SWP interface such as the SWP interface may be asynchronous to an SPS clock which will be described in greater detail below may not leak clock data and may operate up to 1.7 Mbps. A DWP interface may be considered to be the same as a SWP interface at the protocol layer where digital receive and transmit lines are used to bypass the SWP PHY providing a lower power yet higher performance interface. A DWP interface may operates at speeds of up to 6.8 Mbps where an unused pin for the DWP interface can be used as a general purpose input output GPIO pin when an SWP interface is used.

Again the eSE may utilize external non volatile flash memory for storing secure applications and information data. The eSE can be configured to use either host flash memory local flash memory or both. The local flash memory may be utilized for situations where the host device is not available such as the aforementioned field power mode . In one example local flash memory may be used for storing field or low power mode applications and data e.g. mainly for NFC applications. A host processor device connection may be used to provide an option to download secure applications and data paged into the eSE from a host device processor. It should be noted that the various flash memory may be protected using keys that are unique to each individual eSE such as eSE where a secure state is encrypted authenticated and replay protected by the eSE.

The connectivity device chip may include the aforementioned NFC controller to which the eSE connects via the SWP DWP interface . In turn the NFC controller may be connected to a radio and an antenna to effectuate NFC or other radio communication connectivity . Additional elements in the connectivity device chip may include other connectivity controllers such as connectivity controller which may provide Bluetooth connectivity WLAN e.g. Wi Fi connectivity etc. The NFC controller the connectivity controller and the radio may communicate via one or more communications interfaces that may be e.g. wired or wireless and the interconnections therebetween may form e.g. parallel or serial interfaces to carry such communications. It should be noted that for ease of reference other elements of the connectivity device chip have been omitted and that more or less elements in the connectivity device chip may be implemented without departing from the spirit or the scope of the present disclosure.

Specifically with regard to the SWP DWP interface between the eSE and the NFC controller all communications may occur thereon and EEPROM emulation may be supported in this SWP DWP mode where the eSE may provide EEPROM emulation for the NFC controller via the SWP DWP interface . The EEPROM emulation may provide up to 8 Kbytes of data read from the local flash memory . In an SWP DWP Host mode all host communications may occur on a host device interface while all radio communication may occur on the SWP DWP interface. It should be noted that a DWP interface works in the same manner as an SWP interface using digital signaling at the PHY layer to reduce power and increase performance as previously described.

Also connected to the connectivity device chip may be a smart card controller such as a SmartMX contact interface controller an SLE 97 Solid Flash smart card microcontroller etc. via a digital contact less bridge DCLB interface NFC wired interface NFC WI . A DCLB interface may refer to an interface for providing a connection between an eSE and an NFC modem and an NFC WI interface may refer to a NFC wired interface having 2 signal wires signal in and signal out for providing a connection between an eSE and an RF interface of an NFC interface. The smart card controller may be utilized to control the UICC .

The eSE may provide a plurality of possible physical host device connection options for interfacing with the host device . While a physical host device connection may not be required since the eSE can communicate with the host device through the NFC controller or the connectivity controller it may be preferable in cases where non NFC security applications are supported to utilize a physical host connection. The possible host device interfaces that are supported to effectuate such a physical host device connection may include but are not limited to the following a universal asynchronous receiver transmitter UART interface in particular a four wire flow controlled UART capable of speeds up to 6 mbps an SPI interface in particular an SPI slave mode with up to 33 mbps throughput and an inter IC I2C interface in particular a two wire I2C slave connection dedicated for communication with the host device with a throughput of up to 3.4 Mbps. It should be noted that other physical host device connections may be utilized e.g. a universal serial bus USB connection.

A UART interface may utilize the following I O signals RX TX RTS and CTS. The UART interface may have adjustable baud rates from 9600 bps to 4.0 Mbps and may have an automatic baud rate detection capability that returns a baud rate selection. Alternatively the baud rate may be selected through a vendor specific UART HCI command. The vendor specific UART HCI command may be issued during normal UART HCI operation. A default baud rate may be 115.2 kbps and the eSE side UART interface not shown may operate correctly with the host device side UART interface as long as the combined baud rate error of the eSE and the host device is within 2 . The UART interface may run on a fixed reference clock typically 24 MHz but other reference clock frequencies may be possible.

It should be noted that the UART interface may support various Bluetooth HCI protocols as does the eSE since baseband hosts that communicate with both Bluetooth and SE devices over UART may wish to use common drivers. Additionally the UART interface can perform XON XOFF flow control and includes hardware support for the Serial line Input Protocol SLIP and can also perform wake on activity.

The UART interface when chosen from the possible host device interfaces can be configured to mimic an ISO 7816 interface for the purposes of re using existing test equipment where the three signals utilized by an ISO 7816 interface e.g. CLK RST IO may be configured as inputs to a UART device in this case the eSE and or the host device . The CLK input signal may be used to over ride a baud clock in the recovery circuit of the eSE the RST line may be routed as a interrupt to a processor e.g. Cortex MO utilized in the PPS and the I O line may be configured to use a transmit signal as a driver of a data line. It should be noted that because the UART interface is mimicking an ISO 7816 interface it is not required to be a compliant ISO 7816 interface and a default baud rate may be used on both sides of the UART interface to avoid CLK modifications. An external resistor may be used to pull up the signal on the IO line for ISO 7816 communications and the eSE programmable drive strength may be controlled from the processor of the PPS.

It should be noted that the possible host device interfaces e.g. UART SPI and I2C interfaces may use shared pins that are multiplexed to the host device allowing one of the possible interfaces device to be used at a time. If the host processor device connection is effectuated via an I2C interface then the remaining interface pins can be used as GPIO. Selection of one of the possible host device interfaces may be determined based on interface sensing in the eSE when a one time programmable OTP memory to be discussed in greater detail below has not yet been programmed. Alternatively the OTP memory may be programmed during manufacturing to select a specific host interface of the possible host device interfaces disabling all others.

It should also be noted that while a direct connection may be implemented between the eSE and the NFC controller and or connectivity controller both the host device interface e.g. one of the possible host device interfaces and the SPI interface can be emulated logically through the NFC controller to the host device . The eSE may be designed with the assumption that there may always be at least e.g. 512 Kbytes of local flash memory e.g. local flash memory storage.

Additionally the eSE may be connected to secure partition of an SoC for implementing mobile STB functionality via a secure cryptographic channel as previously described within the host device . The secure partition of the SoC may be further connected to a display of the host device for rendering mobile TV content such as mobile pay TV content subsequent to processing at the secure partition of the SoC as also previously described. Further still DRM preparation and data flow in such a mobile context may be implemented in a similar manner as that illustrated in .

As previously indicated the eSE may be divided into two portions or sub systems i.e. a hard macro SPS and a PPS. illustrates an eSE that can represent an example embodiment of the eSE of where eSE may include a hard macro SPS and a PPS where the hard macro SPS is hardware isolated from the PPS which may include non secure or non security related elements e.g. memory and peripherals such as drivers for the aforementioned host device peripheral interfaces . That is the PPS operates independently from the hard macro SPS thereby allowing the hard macro SPS to maintain its security certification without a need to include any drivers and or hardware interfaces in the PPS as security critical. As will be described in greater detail below an isolation bridge may be the only interface for TOE communication between the OOS and the hard macro SPS . Additionally the PPS may mimic an NFC controller e.g. the NFC controller of for the hard macro SPS and the hard macro SPS power modes are slaved to the PPS as well as the NFC controller .

The PPS may utilize a processor e.g. a Cortex MO processor for execution of interface driver code in a hardware isolated environment such as the eSE . The processor may request secure services from the hard macro SPS and may be responsible for moving data to from peripheral interfaces from to an IO shared memory space in static random access memory SRAM of the hard macro SPS . The processor may have read write access to an SPI flash memory interface of the hard macro SPS e.g. SPI master interface via an SPI master interface until it signals the hard macro SPS to exit reset. Once the hard macro SPS is activated the PPS may lose access to the SPI flash memory interface of the hard macro SPS . Furthermore firmware operating on the processor may ensure that none of the firmware in the hard macro SPS is required to change based on changing external drivers. Accordingly a separate and isolated patch mechanism for the processor is provided.

A local read only memory ROM module may be configured to hold driver code for the processor where the allocated size of this code block may be e.g. 64 Kbytes. The PPS may contain its own dedicated patch capability for up to e.g. 16 patches where patch code may be verified and loaded by the PPS from local flash memory e.g. the local flash memory of . The PPS may send a request for the hard macro SPS to update the patch locations in the local flash memory . The patch code for the PPS may be stored in a section of flash memory dedicated for the PPS where the signature of the patch file is verified by PPS ROM code when the patch is downloaded into the dedicated flash memory for the PPS thereby providing roll back protection with a major and minor revision embedded in the patch file.

The PPS may contain an OTP block not shown capable of storing 1 kbits of information. This OTP block may be used for authentication keys and test debug information for Reliability Maintainability and Availability RMA analyses.

The PPS may further contain a dedicated 16 Kbyte scratch memory e.g. SRAM module for the processor . The processor may be allowed to execute instructions from this memory and an isolated I O buffer not shown between the hard macro SPS and the PPS may be used for exchanging commands and data.

In order to communicate between the hard macro SPS and the PPS the hard macro SPS and the PPS may utilize a negotiated portion of I O memory to create a mailbox between the two systems implemented within the aforementioned isolation bridge . The hardware may provide e.g. 8 signals that can be controlled by the hard macro SPS firmware to indicate status as well as to interrupt the PPS where the processor non volatile IC can mask these sources based on the protocol utilized between the two systems.

For example a busy signal can be set by the hard macro SPS while processing a smart card application protocol data unit APDU that may be status only masked . Once a command completes the hard macro SPS can set a done flag that may cause an interrupt un masked to be taken by the processor . The definition of the use of these signals can be determined by the hard macro SPS secure firmware and the processor firmware. Similarly the hardware can provide e.g. 8 signals that can be controlled by the PPS firmware to indicate status as well as to interrupt the hard macro SPS where interrupts are controlled by the hard macro SPS secure firmware .

In addition to the interrupt and I O memory communication between the two systems status information may be maintained by the hard macro SPS that can be read by the PPS from the local flash memory e.g. the local flash memory . The PPS provides interface status information to the hard macro SPS as part of the isolated memory buffer. Moreover the hard macro SPS system status information such as power state host port NFC port etc may be retained through power cycles by using the local flash memory as an extension of the buffer provided for NFC EEPROM emulation as described above . It should be noted however that such state information provided here is system related and may not contain any security sensitive information.

Further still the PPS may contain its own dedicated timer referenced from a program scan clock PSCLK signal with a resolution of 1 MHz which may be constant regardless of the PSCLK frequency. Moreover the PPS and the hard macro SPS may have an 8 Kbyte shared memory buffer for mailbox transactions which may be byte writeable.

As described previously an eSE e.g. eSE may utilize a variety of system interfaces to provide external connectivity. Accordingly and as described above the PPS may include a slave SPI controller interface intended for communications with a host device such as the host device . The physical interface between an SPI master within the host device and the eSE may consist of four SPI signals SPI CSB SPI CLK SPI SI and SPI S and one interrupt signal SPI INT . The eSE may be configured to accept active low or active high polarity on the SPI CSB chip select signal and also can be configured to drive an active low or active high SPI INT interrupt signal. The SPI INT signal can facilitate packet level flow control. Additionally the bit ordering on the data lines SPI SI and SPI SO can be configured to be either little endian or big endian. Proprietary sleep mode half duplex handshaking may be implemented between the SPI master and the eSE .

The SPI slave interface may include the following support for SPI Mode CPOL 0 CPHA 0 where another mode may be set as a default support for normal SPI bit ordering MSB first operation with a range of reference clocks e.g. up to 24 MHz and support for interrupt generation when the host device needs to service the SPI slave interface .

SPI hardware may share a first in first out FIFO which may refer to a set of read write pointers storage e.g. SRAM and control logic with UART where access to the FIFO may be conducted through an advanced high performance bus AHB interface through either direct memory access DMA or a central processing unit CPU . Various SPI modes may be supported and the host device may decide which SPI mode to use. Upon deciding which SPI mode to use the host device may notify the eSE of the selection with a negotiation request message at startup. It should be noted that the size of the FIFO may be adjusted in accordance with desired throughput requirements but as an example nine bit addressing may be supported such that any FIFO size up to e.g. 512 B may be chosen.

Another SPI master interface may be implemented locally within the hard macro SPS and may be dedicated to accessing the local flash memory . The SPI master interface can support dual data I O for compatibility with various flash memory vendors. The output may be bi directional to support dual input and support for OnSemi Atmel and Macronix dual data IO may also be included. Multiplexing for the local flash memory may be controlled by hardware in the PPS that selects the PPS by default at reset and then switches without glitching to the SPS when the SPS is activated as described above.

As alluded to above the possible host device interfaces e.g. UART SPI and I2C can be configured as GPIO. The signal pins can be controlled as input output I O open drain. They can support both level and edge sensitive interrupts. Accordingly these possible host device interfaces may be effectuated via an 12C interface the SPI slave interface and the UART interface configurable and represented by GPIO MUX within the PPS . Furthermore the aforementioned DWP SWP connections may be effectuated via DWP SWP interface .

With regard to the clocking structure of the eSE an internal secure clock domain which will be described in greater detail below may be completely isolated and asynchronous from all other external clocks including clock which may be used for the isolated elements within the PPS . Clock of the PPS may be generated based on an optional external clock input or an internal low power oscillator LPO dedicated to the PPS where the input clock frequency may be automatically sensed by the eSE . A host device interface clock not shown can be one of the following frequencies 26 MHz 13 MHz 9.6 MHz 19.2 MHz 38.4 MHz 52 MHz or 16 MHz and can be either a clock input or a crystal circuited local to the eSE .

A power management unit PMU may provide power for both the PPS and the hard macro SPS . In one example the PMU may be a 1.8 volt supply powered by the NFC controller and used for field power applications when the host device is not available. The supply voltage voltage drain VDD VDDBAT input can range between 5.5 volts down to 2.4 volts and may be used for all other modes of operation to power the eSE . The PMU may provide step up down conversion for managing external capacitor where the external capacitor may be used to ensure the completion of writes to external flash memory e.g. UICC for anti tearing purposes in all modes of operation of the hard macro SPS . It should be noted that anti tearing capabilities may not be provided in hardware for the PPS .

A DMA controller may be utilized by the hard macro SPS to accelerate data transfers and act as a hardware partitioned bus master for the encrypted bus where the encrypted bus may provide enhanced protection for the hard macro SPS by having all accesses within the hard macro SPS occur over the encrypted bus . It should be noted that the encrypted bus may support encryption of both address and data busses.

Memory of the hard macro SPS may include integrated SRAM ROM as well as a hardware memory protection unit HMPU and a secure patch mechanism. Data in the SRAM may be stored in an encrypted format and the HMPU may provide hardware partitioning between masters within memory segments. The ROM may hold IC dedicated support and test software boot firmware and any static portions of the aforementioned security IC embedded software. Like the SRAM data in the ROM may be encrypted. Additionally the secure patch mechanism may be utilized for the ROM where all patches can be encrypted and authenticated by secure boot firmware. Upon initialization the IC dedicated support software FW.SPS Boot and FW.SPS Flash may support loading of a patch image.

Configuration and device unique information may be handled by NVM OTP . True random number generation TRNG and pseudo RNG PRNG may be supported by the hard macro SPS . A TRNG generator which may be considered a part of the TOE i.e. the hard macro SPS may fulfill requirements of the RNG functionality class PTG.2 of the AIS . AIS may refer to one method for evaluating physical RNG generators that detect a total entropy source failure and non tolerable statistical defects of the internal random numbers along with a stochastic model of the entropy source and statistical tests of the random raw numbers as opposed to the internal random numbers .

As previously described an internal secure clock domain within the hard macro SPS may be completely isolated and asynchronous from all other external clocks. A low speed peripheral LSP may contain times security sensors and clock generation controls for the hard macro SPS .

Cryptographic processing engine s can allow the hard macro SPS hardware to support accelerators for encryption cryptographic operations as described above for example according to the Advanced Encryption Standard AES hash based message authentication code HMAC cyclical redundancy checks CRC and triple data encryption algorithm TDES . Secure boot firmware may support a cryptographic library which will be discussed in greater detail below and may provide support for additional symmetric cryptographic operations such as e.g. secure hash algorithm SHA 384.

Additionally the hard macro SPS may implement key generation and asymmetric cryptographic acceleration using a dedicated public key accelerator PKA module. Again the secure boot firmware may support a cryptographic library which in turn provides support for other operations e.g. elliptic curve EC cryptography and encryption based on the Rivest Shamir Adleman RSA algorithm.

To achieve separation between the hard macro SPS and a PPS e.g. PPS of in accordance with various embodiments an isolation bridge which may be an embodiment of the isolation bridge of may be utilized. That is and as indicated above the isolation bridge may isolate components of the hard macro SPS i.e. TOE from external non secure components such as the PPS . This can ensure the confidentiality and integrity of the TOE i.e. the hard macro SPS as well as any associated user data by utilizing the isolation bridge as the sole interface for TOE communication. The isolation bridge can prevent secure data from leaking into the PPS and may further ensure that the PPS does not impact the hard macro SPS . For example by isolating the PPS from clocking information in the hard macro SPS an asynchronous TOE boundary may be maintained between the hard macro SPS and the PPS which in turn can prevent non secure elements outside of the hard macro SPS from detecting information traveling on buses therein e.g. the encrypted bus .

The isolation bridge may include dedicated memory buffers and mailboxes as well as a discrete set of GPIO pins controlled by the hard macro SPS to achieve e.g. complete decoupling from the hard macro SPS . For example the isolation bridge may toggle data pathways to become open and closed thereby coupling and decoupling elements components of the hard macro SPS and the PPS e.g. when loading non secure and or uncertified data onto a memory unit transferring data therebetween etc. Through the isolation bridge the hard macro SPS can accept and respond to ISO 7816 APDU commands.

Local flash memory interface may be utilized along with the isolation bridge by the hard macro SPS to access non volatile storage as discussed above where use of the local flash memory interface and the isolation bridge may be either exclusive or inclusive. The local flash memory interface may be dedicated to enhance performance and availability of non volatile storage and may be configured as a hardware access port only and protected from unauthorized use by the hard macro SPS . Furthermore storage of any data outside of the hard macro SPS may be cryptographically protected to ensure confidentiality and integrity where the hard macro SPS can detect any modification to data stored in external flash such as the local flash memory .

Hard macro SPS firmware in the ROM may support security IC embedded software. Such low level firmware may include three primary modules the secure boot loader i.e. FW.SPS Boot for initializing the security IC embedded software and transferring control thereto after completion of the boot process the cryptographic library i.e. FW.SPS Crypto for providing control and access to hard macro SPS cryptographic accelerator hardware blocks and additional cryptographic functionality as described above and a secure flash memory driver FW.SPS Flash for providing secure read write erase capabilities for either the local flash memory e.g. local flash memory or host device flash memory e.g. UICC interfaced through the isolation bridge . It should be noted that the scope of certification of the hard macro SPS may include RSA signature generation and verification RSA key generation elliptic curve Diffie Hellman ECDH key exchange EC digital signature algorithm ECDSA signature generation and verification EC key pair generation AES and DES secure has computation and CRC computation. The ROM may further include static portions of the security IC embedded software which can include the middle layer operating system OS and although such static portions may reside in the ROM such static portions need not be considered to be a part of the TOE.

As described above DRM mechanisms may be utilized to provide mobile pay TV content services. Accordingly porting CA functions for key handling to an eSE on a mobile device can provide a platform capable of meeting security requirements for DRM without adding additional cost s . Additionally the high security level of an eSE can provide an ideal location to execute the key handling for DRM applications where the addition of a unique identifier into the datapath decryptor can provide a low cost method of transferring DRM secrets private keys without compromising the security from the eSE to the security core in the application processor.

It should be noted that various embodiments may be adapted for implementation in other contexts where e.g. even though as indicated previously use of a SIM may not necessarily be ideal key handling and partitioning as described herein may be implemented in a SIM card that acts as an SE. Additionally partitioning of the content encryption functionality into an SE may be accomplished with a high speed path between memory and the SE.

The various diagrams illustrating various embodiments may depict an example architectural or other configuration for the various embodiments which is done to aid in understanding the features and functionality that can be included in those embodiments. The present disclosure is not restricted to the illustrated example architectures or configurations but the desired features can be implemented using a variety of alternative architectures and configurations. Indeed it will be apparent to one of skill in the art how alternative functional logical or physical partitioning and configurations can be implemented to implement various embodiments. Also a multitude of different constituent module names other than those depicted herein can be applied to the various partitions. Additionally with regard to flow diagrams operational descriptions and method claims the order in which the steps are presented herein shall not mandate that various embodiments be implemented to perform the recited functionality in the same order unless the context dictates otherwise.

It should be understood that the various features aspects and or functionality described in one or more of the individual embodiments are not limited in their applicability to the particular embodiment with which they are described but instead can be applied alone or in various combinations to one or more of the other embodiments whether or not such embodiments are described and whether or not such features aspects and or functionality is presented as being a part of a described embodiment. Thus the breadth and scope of the present disclosure should not be limited by any of the above described exemplary embodiments.

Terms and phrases used in this document and variations thereof unless otherwise expressly stated should be construed as open ended as opposed to limiting. As examples of the foregoing the term including should be read as meaning including without limitation or the like the term example is used to provide exemplary instances of the item in discussion not an exhaustive or limiting list thereof the terms a or an should be read as meaning at least one one or more or the like and adjectives such as conventional traditional normal standard known and terms of similar meaning should not be construed as limiting the item described to a given time period or to an item available as of a given time but instead should be read to encompass conventional traditional normal or standard technologies that may be available or known now or at any time in the future. Likewise where this document refers to technologies that would be apparent or known to one of ordinary skill in the art such technologies encompass those apparent or known to the skilled artisan now or at any time in the future.

Additionally the various embodiments set forth herein are described in terms of exemplary block diagrams flow charts and other illustrations. As will become apparent to one of ordinary skill in the art after reading this document the illustrated embodiments and their various alternatives can be implemented without confinement to the illustrated examples. For example block diagrams and their accompanying description should not be construed as mandating a particular architecture or configuration.

Moreover various embodiments described herein are described in the general context of method steps or processes which may be implemented in one embodiment by a computer program product embodied in e.g. a non transitory computer readable memory including computer executable instructions such as program code executed by computers in networked environments. A computer readable memory may include removable and non removable storage devices including but not limited to Read Only Memory ROM Random Access Memory RAM compact discs CDs digital versatile discs DVD etc. Generally program modules may include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of program code for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps or processes.

As used herein the term module can describe a given unit of functionality that can be performed in accordance with one or more embodiments. As used herein a module might be implemented utilizing any form of hardware software or a combination thereof. For example one or more processors controllers ASICs PLAs PALs CPLDs FPGAs logical components software routines or other mechanisms might be implemented to make up a module. In implementation the various modules described herein might be implemented as discrete modules or the functions and features described can be shared in part or in total among one or more modules. In other words as would be apparent to one of ordinary skill in the art after reading this description the various features and functionality described herein may be implemented in any given application and can be implemented in one or more separate or shared modules in various combinations and permutations. Even though various features or elements of functionality may be individually described or claimed as separate modules one of ordinary skill in the art will understand that these features and functionality can be shared among one or more common software and hardware elements and such description shall not require or imply that separate hardware or software components are used to implement such features or functionality. Where components or modules of the invention are implemented in whole or in part using software in one embodiment these software elements can be implemented to operate with a computing or processing module capable of carrying out the functionality described with respect thereto. The presence of broadening words and phrases such as one or more at least but not limited to or other like phrases in some instances shall not be read to mean that the narrower case is intended or required in instances where such broadening phrases may be absent.

