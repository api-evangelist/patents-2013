---

title: Ordering content items
abstract: A creation order of content items can generally be determined by a metadata creation time associated with the content items. In some instances, multiple content items can be associated with the same metadata creation time. To determine the order of content items associated with the same metadata creation time, a files system modification time for the content items can be accessed. The file system modification time may indicate time in a smaller time increment than the metadata creation time. If the creation order of the content items cannot be determined from the file system modification time, the names of the content items can be analyzed to determine if they indicate a creation order. Alternatively the order the content items are placed in memory can be used to determine the creation order. Metadata identifying the determined creation order of the content items can be appended to the content items.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09152646&OS=09152646&RS=09152646
owner: Dropbox, Inc.
number: 09152646
owner_city: San Francisco
owner_country: US
publication_date: 20130405
---
The present technology pertains to content items and more specifically pertains to determining a creation order of the content items.

Cloud storage accounts allow users to store their content items in an online storage account that can be accessed from any computing device with a network connection. Users can thus upload content items such as pictures songs documents etc. from a computing device to their online storage account and later access the content items from different computing devices.

Cloud storage accounts can be especially useful for storing and viewing photographs taken from multiple computing devices. In addition to traditional cameras a wide variety of computing devices now include capabilities to capture photographs. For example a user can take pictures using a smart phone MP3 music player laptop computer etc. Storing photographs from the multiple computing devices to an online storage account can thus allow a user to easily organize and manage their photographs.

One important aspect of presenting photographs is to present them in their proper grouping and order. Photographs often tell a story and thus intermixing photographs taken from multiple devices and or presenting them in the wrong order can ruin the story or make it hard to follow. Presenting photographs in the correct grouping and order can be difficult when receiving photographs from a plurality of computing device. Distinguishing the proper order of photographs becomes even more difficult when the photographs are taken within a small time frame. Accordingly an improved method of presenting photographs is needed.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for determining a creation order for content items. The creation order of content items can generally be determined from a metadata creation time associated with each of the content items. The metadata creation time can indicate the time the content item was created or modified. In some instances multiple content items can be associated with the same metadata creation time if they were created within the minimum time increment in which the metadata creation time is recorded. For example if the metadata creation time is recorded in seconds two content items created in the same second would have the same metadata creation time.

To determine the creation order of content items associated with the same metadata creation time the file system modification time of the content items can be accessed. The file system modification time can indicate the time when the file system recorded that the content items were created or modified. In some instances the file system modification time can be recorded in a finer time increment than the metadata creation time. For example the file system modification time can be recorded in milliseconds.

If the file system modification time is not recorded in a finer time increment than the metadata creation time the creation order of the content items with the same metadata creation time can be determined from the file name associated with the content items. For example the file name may include a number that represents the order in which the content item was created.

Alternatively the creation order of the content items can be determined based on the order in which the content items are placed in memory. For example the content items can be stored in an indexed list in which newly created or modified content items are added to the end of the indexed list.

In some embodiments the creation order of the content items can be determined based on an analysis of the content of the content items. For example the content of photographs can be analyzed to identify motion of the images captured by the photographs. The creation order of the content items can be determined based on the identified motion.

Upon determining the creation order of the content items associated with the same metadata creation time metadata identifying the determined creation order can be added to the content items. For example the metadata can indicate that a content item was created second out of three content items associated with the same metadata creation time.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for determining a creation order of content items. The creation order of content items can generally be determined by a metadata creation time associated with the content items. The metadata creation time can be a time recorded when the content item was created or modified and attached to the content item as metadata.

In some instances multiple content items can be associated with the same metadata creation time. To determine the order of content items associated with the same metadata creation time a files system modification time for the content items can be accessed. The file system modification time may be recorded in a smaller time increment than the metadata creation time. For example the file system modification time may be recorded in milliseconds whereas the metadata creation time may be recorded in only seconds.

If the creation order of the content items cannot be determined from the file system modification time the names of the content items can be analyzed to determine if they indicate a creation order. Alternatively the order the content items are placed in memory can be used to determine the creation order. Metadata identifying the determined creation order of the content items can be appended to the content items.

An exemplary system configuration is shown in wherein electronic devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that shown in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can be configured to maintain a content directory identifying the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system and user devices are presented with specific components it should be understood by one skilled in the art that the architectural configuration of content management system and user devices are simply one possible configuration and that other configurations with more or less components are also possible. For example in some embodiments client devices and content management system can be configured to determine a creation order for content item.

In some embodiments ordering module can determine the creation order of content items stored on client device prior to uploading the content items to content management system . Alternatively in some embodiments ordering module can be configured to determine the creation order of content items periodically or as the content items are created stored or modified on client device .

In some embodiments ordering module can be configured to determine the creation order of content items as they are created. For example ordering module can be configured to receive a signal or message indicating that a new content item has been created. Ordering module can then set a timer for a predetermined amount of time to determine if further content items are created. If a new content item is created in some embodiments ordering module can reset the time for the predetermined time. After the timer has expired without a new content item being created ordering module can determine the creation order of the newly created content items.

As an alternative to resetting the timer each time a new content item is created in some embodiments ordering module can be configured to only reset the timer a predetermined number of times. For example ordering module can be configured to reset the time up to 10 times when a new content item is created but after the 10time the timer will no longer be reset and ordering module will determine the creation order when the time expires. Alternatively ordering module can be configured to determine the creation order of content items no later than a maximum amount of time has elapsed from receiving an input that a new content item was created. For example ordering module can reset each time a new content item is created but after 60 seconds from receiving the first input that a content item was created ordering module will begin determining an order of the created content items even if the timer has not expired.

In most instances the creation order of content items can be determined based on metadata associated with each content item that indicates the time the content was created or last modified. For example a content item such as an image file created in the exchangeable image file format EXIF can include a metadata tag that identifies the date and time the image file was created or modified. A metadata creation time such as the EXIF creation time gathered from a group of content items can be compared to each other to easily determine the creation order of the content items.

Although the creation order of content items can often be determined using the metadata creation time associated with the content items this may not always be the case. In some instances content items created in rapid succession might be associated with the same metadata creation time. For example a metadata creation time such as an EXIF creation time may measure time in seconds. Thus if multiple content items are created or modified within the same second the metadata creation time associated with each of the content items created or modified within the same second would indicate that the content items were created at the exact same time.

This is often the case when multiple photographs are taken in rapid succession. Furthermore the order of photos taken in rapid succession can be extremely important because photographs taken in rapid succession often portray movement of an object. Thus if the photographs are not presented in the sequence in which they were taken the captured movement is portrayed incorrectly.

To resolve the order of multiple content items associated with the same metadata creation time ordering module can be configured to communicate with the file system of client device to gather a file system modification time recorded by the file system for the content items. The file system modification time can indicate the time a content item was created or modified on the file system. In some instances the file system creation time can measure time in smaller increments than the metadata creation time. For example the file system creation time may measure time in milliseconds whereas the metadata creation time may measure time in seconds. Thus in many instances the order of content items with the same metadata creation time can be determined by the file system modification time that measures time in a smaller increment.

Although the file system modification time can be used to determine the creation order of content items with the same metadata creation time the metadata creation time can be given priority in determining the creation order of content item. For example in some instances the file system modification time may be inconsistent with the metadata creation time because the file system clock may not be in perfect sync with the clock used to create the metadata creation time. This can result in the file system clock being slightly ahead or behind the clock used to create the metadata creation time. Due to this possible inconsistency the file system modification time can be used only to resolve the creation order of content items with the same metadata creation time. That is the file system modification time of two content items associated with the same metadata creation time can be used only to determine the creation order of the two content items rather than determine their actual creation time with respect to other content items.

The creation order of content item B and content item C cannot be determined from the metadata creation time because both content item B and content item C have the same metadata creation time. This can be the result of both content item B and content item C having been created during the same second. Accordingly the file system modification time of content item B and content item C can be accessed to determine the creation order for content item B and content item C.

Further the fact that the file system modification time of content item B and content item C indicate that they were created prior to the metadata creation time of content item A does not affect the creation order of content items A B and C. The file system modification time can be used to resolve only the creation order of multiple content items that according to the metadata creation time were created at the same time e.g. within the same second. Accordingly a determination can be made that content item A was created first based on the metadata creation time. Further a determination can be made that content item C was created second and content item B was created third based on the file system modification time.

Returning to the discussion of in some instances the creation order of content items with the same metadata creation time cannot be determined based on the file system modification time. For example in some embodiments the file system may record time using the same time increment as the metadata creation time. For example both the file system and the EXIF time can be measured in seconds rather than the file system time being measured in milliseconds. In this type of scenario ordering module can be configured to determine the order of the content items by analyzing the file name associated with each content item. For example content items such as photos taken by a camera may be assigned a name that indicates the order in which the photos were taken. Ordering module can be configured to analyze the file name associated with the content items to determine if the creation order of the content items can be determined.

As an example the file name assigned to a content item can include a number that is incremented per each content item created. Thus the file name assigned to two sequentially created content items can be file1 and file2 . Ordering module can be configured to extract the numeric portion of the file name of each content item to determine the order in which the content items were created. For example ordering module can determine that the content item with the lower number in the file name was created prior to the content item with the higher number in the file name.

In some embodiments the creation order of content items with the same metadata creation time can be determined based on the order of the content item in memory. For example client device can include content storage configured to store content items in an indexed list such that new content items are added to the end of the indexed list. Ordering module can thus determine the order of content items based on the position of the content item in the indexed list.

In some embodiments the creation order of content items can be determined based on an analysis of the content of the content items. For example the content of photographs can be analyzed to identify the movement of objects in the photographs. The order of the content items can then be determined based on the identified movement of the objects.

To accomplish this ordering module can be configured to compare multiple content items with the same metadata creation time and identify differences in the content items that indicate motion of an object. For example an analysis of photographs can indicate that a portion of the photograph changes from photograph to photograph while the rest of the photograph remains closely the same. Alternatively the analysis can indicate that a similar shaped and sized object changes positions across the multiple photographs. As another example the analysis can indicate that a similarly colored object changes position across the photographs. This can indicate that the photographs depict the motion of an object across a background.

Once motion of an object is detected ordering module can determine the creation order of the content items based on the determined path of the object. For example if the analysis of the content items indicates that the photographs depicts an object is moving from left to right ordering module can identify the location of the object in each photograph and order the photographs to correctly depict the motion of the content item from left to right. Thus the location of the object and the determined motion of the object can be used to correctly order the photographs and thus determine the creation order.

In some embodiments content items known to have been created just prior to and just after content items with the same metadata creation time can be analyzed to determine the creation order of the content items based on the content of the content items. For example if only two photographs are associated with the same metadata creation time the direction of the motion of an object in the photographs may be difficult to determine. For example it may be difficult to determine if the object is travelling from right to left or left to right. Ordering module can thus analyze content items created just prior or just after to determine the direction of the motion of the object. For example if a photograph known to have been created just after the photographs associated with the same metadata creation time depicts the identified object at a position farther to the left than the object is depicted in the other photographs a determination can be made that the object is moving to the left. Alternatively if a photograph known to have been created just prior to the photographs associated with the same metadata creation time depicts the identified object at a position farther to the right than the object is depicted in the other photographs a determination can be made that the object is moving to the left.

An analysis of content items and indicates that black circle is at a different position in each content item and . As shown black circle is positioned near the right edge in content item and near the middle in content item . Based on the analysis of the content of content items and it can be determined that content items and depict motion of black circle however the direction of the motion cannot be positively determined. For example black circle can be travelling from right to left or from left to right.

To determine the direction of motion of black circle the content of content item can be analyzed. As shown black circle is positioned near the left edge in content item . It can be determined that content items and depict black circle traveling from left to right because content item is known to have been created prior to content items and .

Based on the determination that black circle is travelling from left to right it can be determined that content item was created prior to content item because content item depicts black circle at a position to the left of where black circle is depicted in content item . Accordingly it can be determined that content item was created first followed by content item and then content item . This creation order correctly depicts motion of black circle moving from left to right.

Upon determining the order of the content items associated with the same metadata creation time ordering module can be configured to add metadata to the content items indicating their determined order. For example to indicate the determined order of two content items associated with the same metadata creation time ordering module can add metadata to the content item created first indicating that the content item is one of two content items with the metadata creation time. Likewise ordering module can add metadata to the content item determined to be created second indicating that the content item is two of two content items with the metadata creation time.

In some embodiments ordering module can be configured to group content items based on the creation source of the content item. A user may create content items with multiple client devices. Ordering module can be configured to group the content items based on the client device that created the content item when determining the creation order. Thus content items created by different sources can be ordered separately.

To determine the creation order of content items in some embodiments ordering module can be configured to process all the content items to create content item groups based on creation source and metadata creation time of the content items. Each resulting content item group can include content items with the same creation source and the same metadata creation time.

Ordering module can then identify any content item group including multiple content items which indicates that the content items in the group were created by the same source and have the same metadata creation time. Ordering module can then determine the creation order of the content items in the content item group and add metadata to the content items indicating their determined order.

In some embodiments ordering module can be configured to first scan all the content items to create the content item groups and after the content item groups have been created determine the order of any content items in the same content item group i.e. with the same creation source and metadata creation time.

Alternatively in some embodiments ordering module can be configured to determine the order of the content items as the content item groups are created. For example client device can be configured to store the content items in an indexed list such that new content items are added to the end of the list. Ordering module can be configured to traverse the indexed list in reverse order to create a content item group and determine the creation order for the content items in a content item group that includes more than one content item.

As shown the method begins at block where the latest content item in the indexed list is added to a stack. In some embodiments the indexed list can be traversed in reverse order. Although a stack is used as an example any similar data structure can be used. For example in some embodiments the content item can be added to a queue rather than a stack.

At block the method determines if the next content item in the indexed list has the same creation source and metadata creation time as the content item pushed to the stack. If it is determined that the next content item does have the same creation source and metadata creation time as the content item pushed on the stack the method returns to block where the content item is pushed on the stack. The method then returns to block . Thus as the indexed list is traversed in reverse order content items with the same creation source and metadata creation time will be pushed onto the stack together.

If at block it is determined that the next content item does not have the same creation source and metadata creation time as a content item in the stack the method continues to block where the method determines if there are multiple content items on the stack. If there are multiple content items in the stack the method continues to block where the creation order of the content item is determined. In some embodiments the creation order of the content items in the stack can be determined using the method shown in below .

Upon determining the creation order of the content items in the stack the method continues to block where metadata identifying the determined creation order of the content items is added to the content items.

At block the the content items in the stack are removed. The method then continues to block where the method determines if there are any unprocessed content items remaining in the indexed list. If there are no remaining content items the method ends. Alternatively if there are remaining content items the method returns to block .

If at block it is determined that there is only one content item in the stack the method continues to block where the content item is removed from the stack. The method then continues to block where the method determines if there are any unprocessed content items remaining in the indexed list. If there are no remaining content items the method ends. Alternatively if there are remaining content items the method returns to block .

As shown the method begins at block where the file system modification time of each of the content items is accessed. The method then continues to block where it is determined if the file system modification time measures time in a smaller increment than the metadata creation time measures time. If at block it is determined that the files system modification time measures time in smaller increments than the metadata creation time the method continues to block where the creation order of the content items is determined based on the file system modification time associated with the content items. The method then ends.

If however at block it is determined that the file system modification time is measured in the same or larger time increments than the metadata creation time is created in the method continues to block where it is determined if the file name associated with the content items includes data identifying the creation order. For example the file names can include a number that is incremented for each content item created. If at block it is determined that the file name associated with the content items does include data identifying the creation order the method continues to block where the creation order is determined based on the file name associated with the content items. The method then ends.

Alternatively if at block it is determined that the file name associated with the content items does not include data identifying the creation order the method continues to block where the creation order of the content items is determined based on the order of the content items in memory. For example the content items can be stored in an indexed list. The creation order of the content items can be determined based on the order in which the content items are placed in the indexed list. The method then ends.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

