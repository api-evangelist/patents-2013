---

title: Pluggable interactive television
abstract: Techniques are disclosed herein that provide a TV receiver that supports a set of existing iTV standards and proprietary iTV implementations. Further, the TV receiver can be extended to support additional iTV standards and proprietary iTV implementations. A digital television data stream is received and processed by a client. The digital television data stream is analyzed to determine which interactive television format is present. A registry of interactive television virtual machines is searched to determine whether a virtual machine is registered for the interactive television format. Each of the interactive television virtual machines is adapted for one of the interactive television formats. If a virtual machine that matches the interactive television format is found, it is loaded and hosted. Hosting the virtual includes providing services to the virtual machine through common application programming interfaces (APIs) machine includes. The common APIs may be used by any virtual machine that is loaded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197928&OS=09197928&RS=09197928
owner: Rovi Technologies Corporation
number: 09197928
owner_city: Santa Clara
owner_country: US
publication_date: 20131018
---
This application is a divisional application of U.S. Patent application Ser. No. 12 202 562 entitled Pluggable Interactive Television by Goziker et al. filed on Sep. 2 2008 which is incorporated herein by reference in its entirety.

In addition to video and audio data broadcast media streams may contain data for interactive television iTV . One example of iTV is delivering movies or other programming to a specific user on demand in which case the user does not affect the content. In this example there is no return path to the broadcaster. For example once the movie is downloaded all control over the movie presentation may be on a user s set top box STB . As another example the users affect the iTV programming such as by real time voting. In this example audience members cast votes to create decisions that are reflected in how the show continues. Note that in this latter example there is a return path from the users to the program provider. Still another example of iTV is using part of the broadcast media stream to deliver games to a user. For example one part of the broadcast media stream contains more conventional non interactive content whereas another part contains an interactive game. There is virtually no limit to the possibilities of interactive TV therefore the foregoing should be understood to be non limiting examples.

More and more broadcasters are choosing to adopt iTV. Some countries even require that broadcasters provide iTV support. However there exists a wide variety of iTV standards such as Multimedia and Hypermedia Experts Group MHEG Broadcast Markup Language BML Multimedia Home Platform MHP and OpenCable Application Platform OCAP . Furthermore a broadcaster may use a proprietary iTV implementation rather than an established standard.

Many iTV standards define the interface for a virtual machine VM . In general a VM is software that can be thought of as an implementation of a machine e.g. computer that executes software applications like a real machine. A goal of a VM is to allow applications to interact with the VM independent of the actual hardware and operating system. A given iTV standard may define how an iTV VM for that iTV standard should behave what inputs to accept how to react to the input and what APIs to provide to applications that interface with the iTV VM. As one example with respect to MHEG 5 the International Organization for Standardization ISO provides the document Coding of Multimedia and Hypermedia Information Part 5 Support for Base level Interactive Applications ISO IEC 13522 5 . As another example BML is governed by ARIB Association of Radio Industries and Businesses standard body which provides the Data Coding and Transmission Specification for Digital Broadcasting Standard ARIB STD B24 .

As suggested by the foregoing the user s receiver may have one or more applications that provide programming services such as electronic program guides EPG that need to interface with the iTV VM. Because the interface for an iTV VM for a given type of iTV is standardized the same software application can interface a given type of iTV VM. For example an EPG application should be able to interface with an iTV VM that complies with MHEG regardless of what computing platform and operating system is in use. However typically the same application cannot interface with iTV VMs that comply with different standards. For example the interface to an MHP iTV VM may be substantially different from the interface to an MHEG iTV VM thus the same EPG application may be unable to interface with both.

Thus a problem is designing a TV receiver that will support a set of existing iTV standards and can be extended to support additional iTV standards.

Techniques are disclosed herein that provide a TV receiver that supports a set of existing iTV standards and proprietary iTV implementations. Further the TV receiver can easily be extended to support additional iTV standards and proprietary iTV implementations. In some implementations a plug in architecture allows extension of the iTV standards that the TV receiver supports. One type of plug in detects whether a data stream contains a signal that is compliant with a particular iTV standard. Another plug in extracts metadata for the particular iTV standard from the data stream.

In one aspect a digital television data stream is received and processed by a client. The digital television data stream is capable of transporting different interactive television formats. The digital television data stream is analyzed to determine which of the interactive television formats is present. A registry of interactive television virtual machines is searched to determine whether a virtual machine is registered for the interactive television format. Each of the interactive television virtual machines is adapted for one of the interactive television formats. If a virtual machine that matches the interactive television format is found it is loaded and hosted.

In one implementation hosting the virtual machine includes providing services to the virtual machine through common application programming interfaces APIs . The common APIs may be used by any virtual machine that is loaded. By providing a set of common APIs that may be used by iTV virtual machines for different iTV standards the TV receiver can easily be extended to support additional iTV standards.

Another implementation is a computer readable medium having stored thereon a set of instructions and data structures for implementing a television receiver. The instructions which when executed on a processor implement a platform that provides services for iTV virtual machines. The virtual machines correspond to different formats e.g. standards of interactive television. A registry lists the virtual machines that are available to the platform. Examples of services provided by the platform are an EPG data delivery graphics etc. The computer readable medium has application program interfaces APIs that are provided to the virtual machines to access to services. The platform receives a digital television data stream and analyzes the data stream to determine what format of interactive television data is present in the data stream. The platform searches the registry for a virtual machine that matches the interactive television format. The platform loads the virtual machine that matches the interactive television format. The platform makes the APIs available to the virtual machine that matches the interactive television format.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Client devices can be implemented in a number of ways. For example client device is connected to an antenna to receive interactive program content from a local television station. In this example client device is a television set which can receive content from other clients . Client may have a direct connection to clients and to receive the program content however those connections have not been depicted in so as to not obscure the diagram.

Client device is connected to a cable network to receive program content from a cable system . Client device is also referred to as a set top box. Client device is coupled to a satellite dish to receive program content from the satellite . Client device may also be referred to as a set top box or a satellite receiving device. Client device is connected to a network e.g. the Internet to receive program content from the content server . For example the client may receive Internet Protocol Television IPTV . Numerous vendors provide software programs for receiving Internet Television. An example of such a software product is the Microsoft Mediaroom Internet Protocol Television IPTV software platform which is commercially available from Microsoft Corporation of Redmond Wash. The client device can also receive program content from a network source that is not on the Internet. Client device may also be referred to as a personal computer.

Note that the personal computer can also be connected to other client devices to allow the personal computer to receive program content from the tuners in the other devices . For example the personal computer can be connected to either of the set top boxes to receive an output signal therefrom. The personal computer executes software to process the signals output from clients or to play television programs etc. on the personal computer . An example of such software is the Media Center entertainment center which is commercially available from Microsoft Corporation of Redmond Wash. Such software can also be used to play television content based on the output of the computer s tuner card. Thus the personal computer can receive and play program content from any of the sources through a tuner whether the tuner is hardware software or some combination of hardware and software.

In some implementations a back channel is used to transmit information from the client back to the program source or another location as a part of the interactive television experience. For example a user might make a purchase in response to seeing a product of interest in an interactive shopping program. In one aspect the network is used to implement the back channel. As one example the personal computer uses the Internet to send information to the content server which is providing the interactive content. However a back channel can also be used when receiving iTV from other content providers. For example if the satellite is providing the content to set top box the set top box can interface with the personal computer to access a back channel through the network. Note that in this case a server other than content server is likely to be accessed via the backchannel.

One or more client devices in the system have logic embedded therein for implementing interactive television on one or more of the clients . In one embodiment to implement interactive television one or more of the client devices execute computer readable instructions that are stored on computer readable media. The client device has a processor on which the instructions are executed. Computer readable media can be any available media that can be accessed by the client devices . By way of example and not limitation computer readable media may comprise computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the computer readable instructions and which can accessed by the client device .

The technology herein may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures and so forth that perform particular tasks or implement particular abstract data types. The technology herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

It is to be appreciated and understood that the exemplary system constitutes but one exemplary operating environment. Accordingly this description is not intended to limit application of the claimed subject matter to just this one type of operating environment. Rather the principles described herein can be implemented in other similar or different environments without departing from the spirit and scope of the claimed subject matter.

Each virtual machine is adapted to one particular type e.g. format or standard of interactive TV. The interface for the iTV VM may be defined in a particular standard. By type of interactive TV it meant one particular standard or proprietary protocol. Examples of iTV standards include but are not limited to Multimedia and Hypermedia Experts Group MHEG Broadcast Markup Language BML Multimedia Home Platform MHP and OpenCable Application Platform OCAP . However the type of interactive TV is not limited to these standards. Moreover the type of interactive TV is not limited to a published standard. Rather the type of interactive TV can include a proprietary implementation. For example a cable operator or Internet TV provider could develop its own implementation for providing interactive TV.

The iTV VM registry contains a list of iTV VMs that are available to the client . The available iTV VMs may be stored on the client but this is not a requirement. In one implementation an iTV VM that is listed in the iTV VM registry as available is accessed remotely. For example the client may obtain the iTV VM over an Internet connection. In one implementation the platform has a registration method that an iTV VM may invoke to register itself. The iTV VM may provide one or more plug ins during the registration process. Thus the platform has access to the plug ins.

In this example two types of plug ins are depicted. One is an iTV detection plug in . The other is a metadata mapping plug in . Each iTV detection plug in is able to determine whether a data stream contains a certain type of iTV. Each metadata mapping plug in assists in extracting metadata for a particular iTV type from the data stream and providing it to the appropriate ITV VM .

The use of the plug ins is not a requirement. In one embodiment the system is a closed system such that only sanctioned VMs are registered and loaded. In this example the iTV detection and meta data mapping could be done using a non pluggable techniques e.g. only a fixed set of VMs could be detected and their data mapped whilst the VMs themselves could still use the generic API.

In addition to providing plug ins during registration information is exchanged between an iTV VM and the iTV platform that assists the iTV VM in obtaining access to the APIs . In general the APIs can be provided to the iTV VMs by either a push or a pull technique. In one implementation an iTV VM provides to the iTV platform one or more entry points for API consumption . In one implementation an entry point defines managed assembly e.g. dynamic linked libraries DLL of an iTV VM that supports the interfaces needed for the Interactive TV platform to load this iTV VM and provide the iTV VM with the Interactive TV Platform s root interface. In one implementation the entry points are entry points used in Microsoft Windows Media Center Software Development Kit SDK . The SDK enables developers to customize certain features that are included with Windows Media Center software. The SDK provides documentation and sample code that developers can use to create software that extends Windows Media Center in various ways. In some implementations the entry point is an entrypoint in extensibility SDK. However it is not required that the entry point be an extensibility SDK. In one implementation the iTV platform provides the iTV VM with information during the registration process that the iTV VM later uses to access the APIs .

The interactive TV platform provides a set of functionality to the iTV VMs . In one implementation the functionality is grouped into a number of different services to the iTV VMs . The following are some examples of services that the interactive TV platform may provide. However note that it is not required that the functionality be grouped into the following services. The activation service is responsible for determining which iTV VM to initialize. The activation service may make this determination based on the iTV type that is present in the digital broadcast stream. In one implementation the iTV detection plug ins are used by the activation service.

The data delivery service is responsible for providing the particular iTV VM with the iTV application data from the broadcast data stream for that iTV format. In one implementation the metadata mapping plug ins are used by the data delivery service to extract the correct data from the broadcast data stream.

The user interaction service provides the iTV VM with means to interact with the user. For example this service allows an iTV VM with the ability to receive remote control commands keyboard input text input etc.

The tuning service allows the iTV VM to tune to a specific channel and to obtain low level tuning channel information. Further details of an example interface for a tuning service are discussed below.

The guide service allows the iTV VM to work with an electronic program guide EPG . That is this service allows the iTV VM to display an EPG and receive input based on the displayed EPG.

The presentation service provides functionality related to various displays. For example this service allows control over video display audio presentation closed captioning etc. The presentation service may also have more advanced capabilities such as allowing the iTV VM to render objects on the display screen. For example the iTV VM can create and display computer generated images.

The foregoing list of services is presented as an example. It is not required that these particular services be provided. Furthermore many other types of services might be provided.

In one implementation process is invoked at step when the client detects a change to a digital broadcast stream. In step the client detects a change to the digital broadcast stream. The change might be that the data stream is first being received or that a channel was changed. However the change to the stream could occur without a channel change. For example a broadcaster that was not transmitting an iTV signal could start transmission. In one embodiment such a change is detected by monitoring for changes in certain tables that are broadcast in the stream. Further details of program map tables PMT and the like that can be monitored to detect such changes are discussed below.

Referring to an iTV detection plug in on the client receives the digital broadcast stream. The digital broadcast stream contains interactive TV and may also contain separate conventional TV audio visual information. The digital broadcast stream may be an MPEG 2 stream as an example. MPEG 2 is a standard for the generic coding of moving pictures and associated audio data. MPEG 2 defines a transport stream that is designed to carry digital video and audio over possibly lossy media such as broadcasting. Typically when using MPEG 2 the digital broadcast stream in is the MPEG 2 transport stream as the typical source of the digital broadcast stream is a broadcaster e.g. . However in one implementation the client receives a digital data stream from a stored media such as a DVD. MPEG 2 defines a program stream which is a container format designed for reasonably reliable media such as optical disks and DVDs. In one implementation the client receives an MPEG 2 program stream. The digital data stream received by the client is not limited to MPEG 2.

In step the client attempts to determine the format of iTV that is present in the digital broadcast stream. In one implementation the client invokes each of the iTV detection plug ins until one of the iTV detection plug ins detects the presence of an iTV signal. In one implementation it is expected that there will only be one iTV signal in the digital broadcast stream. Thus there is no need to invoke all of the iTV detection plug ins once an iTV signal is detected. However in another implementation there may be more than one type of iTV in the digital broadcast stream. In this case each iTV detection plug in can be invoked regardless of whether an iTV signal has already been detected.

As previously mentioned each iTV detection plug in is adapted to detect a particular type of iTV signal. Thus the detection mechanism may be different for each iTV type although there may be similarities for some iTV types. For example for MHEG and BML the iTV signal can be determined based on the presence of particular descriptors within a program map table PMT in the digital broadcast stream. As one example in MPEG 2 the transport stream has a concept of programs. A single program is described by a PMT which contains a list of streams in the digital broadcast stream. PMTs also provide metadata about the streams in their constituent program identifiers PIDs . The iTV detection plug in provides the exact offsets in the PMT table and what descriptors to look for. As a particular example a iTV detection plug in for an MHEG type of iTV may look for a data broadcast id descriptor in the PMT with appropriate details within a service s PMT. Note that something other than the PMT table might be used to determine the presence of other types of iTV.

If none of the iTV detection plug ins detects an iTV signal then control passes to step . It may be that there is no iTV signal in the digital broadcast stream or that there is an iTV signal that is not currently supported by the client .

If the iTV format is determined then control passes to step to determine whether there is an iTV VM that corresponds to the iTV type. In one implementation the iTV detection plug in passes an identifier of the iTV type to the iTV platform . The iTV platform searches the iTV VM registry in step to determine if an iTV VM is registered. If an iTV VM is found in the registry the iTV VM is initialized loaded in step . If an iTV VM is not found in the registry then control passes to step . That is if no iTV VM is found in the registry then only normal TV is provided i.e. iTV is not provided .

After initializing the iTV VM the iTV VM consumes the APIs in order to make use of the services provided by the iTV platform . For example the iTV VM begins to access iTV metadata from the digital broadcast stream. However note that the mere fact that an iTV type was detected in the digital broadcast stream does not mean that there is data at this time. For example even if it is determined that the MHEG type of iTV is present in the digital broadcast stream as indicated by the data broadcast id descriptor the digital broadcast stream pointed to by the descriptor may not actually be carrying MHEG data at that moment.

The iTV VM runs until the current TV session ends due to for example user action. In step the iTV VM is uninitialized. Note that multiple iTV VMs can run concurrently if the data stream contains data for more than one type of iTV.

In step the iTV platform receives an iTV detection plug in from the iTV VM . The iTV detection plug in is adapted to be able to determine whether the type of interactive TV that corresponds to the iTV VM is within a broadcast data stream.

In step the iTV platform receives a metadata mapping plug in from the iTV VM . The metadata mapping plug in is responsible to identify which data streams in the broadcast digital stream are relevant to the particular iTV standard and need to be forwarded to the iTV VM . Similar to detecting the type of iTV that exists in the digital broadcast stream identification of the type of streams needed for a specific iTV standard depends on the standard. Therefore the iTV VM should provide a specific mechanism e.g. metadata mapping plug in to map the data within the broadcast digital stream to the iTV VM .

In step the iTV platform receives from the iTV VM entry points for the APIs. As previously discussed the entry points may define managed assembly DLL of an iTV VM that support the interfaces needed for the Interactive TV platform to load this iTV VM and give the iTV VM the Interactive TV Platform s root interface.

In the digital broadcast stream is depicted as being received by demultiplxer which is a component e.g. software that analyzes the digital broadcast stream and separates it into various components. illustrates the demultiplxer separating the digital broadcast stream into a conventional TV stream and an interactive TV stream which is provided to the iTV platform . In one implementation the demultiplxer has mapping logic that is used to separate the digital broadcast stream into constituent parts and provide the constituent parts to the appropriate component. The iTV platform provides and or updates the mapping logic in one implementation.

In step the iTV platform extracts metadata from the digital broadcast stream based on the iTV VM that is currently running In one embodiment the iTV platform uses the metadata mapping plug in that corresponds to the iTV VM that is currently running In step the iTV platform delivers the metadata to the iTV VM .

In step the iTV platform monitors the digital broadcast stream using the metadata mapping plug in to determine whether there is any change to the digital broadcast stream. As an example the iTV platform monitors for a change in a program mapping table PMT within the stream. The metadata mapping plug in examines the PMT and provides the iTV Platform a list of stream IDs of streams that should be delivered to an iTV VM . The iTV Platform keeps track of the list and when the list changes the iTV Platform updates the mapping logic within the demultiplexer which filters in out individual streams out of overall broadcast steam based on a stream ID. Step is not a required step. In one embodiment the VM performs some or all of the monitoring of the digital broadcast stream.

In step the iTV platform notifies the iTV VM of any status changes in the metadata. For example when a specific metadata steam is removed from the input digital broadcast stream the iTV Platform updates the mapping logic in demultiplexer . As another example when a metadata stream is added the iTV platform request the demultiplexer to add to its mapping logic and filter the new metadata stream to the iTV platform . The changes in the metadata streams are done by broadcaster and may happen in the middle of a broadcast or due to channel change etc. After the demultiplexer logic is updated the iTV platform starts to receive this stream and forwards it to the iTV VM . Step is not a required step. As previously noted the VM may perform some or all of the monitoring of the digital data stream.

For purposes of illustration the following is an example of an API for implementing a generic tuning interface. This API can be used by multiple types of iTV VMs such as MHEG and BMI. This API can also be used by a proprietary iTV VM. This generic tuning interface allows an iTV VM to issue the following types of requests to the interactive TV platform 

The following describes the various methods available in the generic tuning interface. Note that the interface is suitable for consumption by an iTV VM for both MHEG and BML. The interface is also suitable for consumption by an iTV VM for proprietary iTV solutions. Further the generic tuner interface can easily be extended for other types of iTV e.g. MHP OCAP etc. Similarly interfaces can be defined for services other than tuning

The IiTvTuning CurrentService method returns a tuning object low level tuning information for a currently tuned channel. This method can be used by both MHEG VMs and BML VMs .

The IiTvTuning.DoTuneRequest method allows a VM to tune to a channel defined by a tuning object. This method can be used by both MHEG and BML VMs .

The IiTvTuning DoPassThruTuneRequest method allows tuning to different channels using a string having a format understood by both VM and tuner but not necessarily understood by the intermediate software layers. This method allows an iTV VM to issue any kind of tuning request. In one implementation this method is used by a proprietary iTV VM that works on satellite networks. It may be possible for an iTV VM for MHEG and BML to use this method. However some methods may not be used by a particular type of iTV VM .

The IiTvTuning FindServiceFromld method searches for a tuning information e.g. a tuning object which can be used in tuning operations according to low level MPEG Digital TV stream parameters such as SID TSID NID ONID etc. This method may be used by an MHEG VM . However BML VMs do not necessarily need to use this method.

The IiTvTuning.FindServiceFromLCN method searches for tuning information e.g. tuning object which can be used in tuning operations according to Logical Channel Number LCN . This involves looking up into the downloaded program guide which is transparent to the iTV VM. This method may be used by MHEG VMs . However BML VMs do not necessarily need to use this method.

The IiTvTuning.GetTunerProperty method requests a specific name value pair a property from tuner device. A BML VM may use this to obtain a BCAS ID a unique tuner user identifier that is allocated by broadcaster and used by the iTV application running in iTV VM for applications where unique user identification is required interactive votes quizzes etc . However an MHEG VM does not necessarily need to use this method.

The technology described herein is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the technology herein include but are not limited to personal computers server computers hand held or laptop devices mobile phones or devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

At least some of the embodiments disclosed herein may be implemented on client . shows an example configuration of a broadcast enabled electronic media device that may serve to implement at least a portion of the client . Device includes a central processing unit having a processor volatile memory e.g. RAM and program memory e.g. ROM Flash disk drive floppy disk drive CD ROM etc. . The device has one or more input devices e.g. keyboard mouse etc. a video display e.g. VGA SVGA and a stereo I O for interfacing with a stereo system.

The device has one or more tuners that tune to appropriate addresses on network or frequencies not on the network . The tuner can be a tuner card coupled to the cable antenna or satellite dish . Alternatively the tuner is a virtual tuner implemented in software that allows access to content server through modem . The tuner card may be configured to receive either analog or digital data. For example the tuner card can receive MPEG encoded digital video and audio data as well as data in many different forms including software programs and programming information in the form of data files. The device also has a modem which provides dial up access to the data network to provide a back channel or direct link to the servers . In other implementations of a back channel the modem might be replaced by a network card or an RF receiver or other type of port receiver that provides access to the back channel.

The device runs an operating system that supports multiple applications. The operating system may be a multitasking operating system that allows simultaneous execution of multiple applications. The operating system may employ a graphical user interface windowing environment that presents the applications or documents in specially delineated areas of the display screen called windows. 

The device is illustrated with a key listener to receive authorization and session keys transmitted from the servers if necessary. The keys received by listener are used by cryptographic security services implemented to enable decryption of the session keys and data. Cryptographic services are implemented through a combination of hardware and software. A secure tamper resistant hardware unit is provided external to the CPU and two software layers executing on the processor are used to facilitate access to the resources on the cryptographic hardware .

The software layers include a cryptographic application program interface CAPI that provides functionality to any application seeking cryptographic services e.g. encryption decryption signing or verification . One or more cryptographic service providers CSPs implement the functionality presented by the CAPI to the application. The CAPI layer selects the appropriate CSP for performing the requested cryptographic function. The CSPs perform various cryptographic functions such as encryption key management encryption decryption services hashing routines digital signing and authentication tasks in conjunction with the cryptographic unit . A different CSP might be configured to handle specific functions such as encryption decryption signing etc. although a single CSP can be implemented to handle them all. The CSPs can be implemented as dynamic linked libraries DLLs that are loaded on demand by the CAPI and which can then be called by an application through the CAPI .

Computing environment of is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the technology herein. Neither should the computing environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment .

With reference to an exemplary system for implementing the technology herein includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

