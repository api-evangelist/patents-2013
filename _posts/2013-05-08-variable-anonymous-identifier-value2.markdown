---

title: Variable anonymous identifier value
abstract: Systems and method for allowing an identifier value associated with a computing device, and that is delivered to content providers when requesting content, to be altered from that of the unique identifier value associated with the computing device. A computing device will include user interface elements that allow a user to request a new identifier on-demand. In some cases, the user can also configure the computing device to obtain a new identifier value in response to other actions at the computing device or automatically when some type of usage criteria is met. The identifier value is configured to be substantially unique and to be different than a unique identifier associated with the computing device to provide anonymity for the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600689&OS=09600689&RS=09600689
owner: Apple Inc.
number: 09600689
owner_city: Cupertino
owner_country: US
publication_date: 20130508
---
The application claims the benefit of U.S. Provisional Patent Application No. 61 756 665 entitled VARIABLE ANONYMOUS IDENTIFIER VALUE filed on Jan. 25 2013 and which is hereby expressly incorporated herein by reference in its entirety.

The present technology relates generally to user privacy in a network based ecosystem and more specifically systems and methods for using and varying an identifier value of a computing device associated with the user with respect to one or more entities in the network based ecosystem.

Online commerce is quickly becoming a ubiquitous part of the modern economy and there are many options for finding and buying goods and services online. Along the lines of this growth have been increased concerns for privacy and online anonymity. Like the more traditional markets the online retail market benefits greatly from invitational content. Moreover a much greater benefit is derived in an invitational media campaign when invitational content can be targeted to certain users who are more likely to be interested in the invitational content. Therefore it is beneficial to pass some information about users to an invitational content provider in order allow the invitational content provider to target users. However the practice of providing personal data that can serve to identify particular users apart from their simple demographic attributes is oftentimes socially politically and possibly legally unacceptable.

Some types of content requests are associated with an identifier value associated with a client device. In some cases these identifier values are provided along with other information to invitational content providers. Further this type of identifier value may also be used by third party developers to track the users of their software. Therefore in a robust distribution system having many partners and having users who are very active in the ecosystem the users data may be widely spread out through the whole system. However even though the data may be widely spread as the amount of transactions grow the amount of personal data that is associated with the identifier value can also grow to a point where it is conceivable that a third party could piece together the small amounts of personal data using the identifier value and compile a relatively complete picture of who the user might be.

Accordingly the present technology addresses the need for allowing user to remain relatively anonymous by allowing users to manipulate an identifier value associated with the user s device.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by practice of the principles set forth herein.

The present technology is directed to systems methods that to allow a user to change on demand or on a scheduled basis the identifier values associated with a computing device and shared with various content providers. In some embodiments the computing device will be configured to include a user interface allows a user to request a new identifier whenever they wish to do so. In some cases the user interface can include elements to confirm the user s decision. Alternatively the user can also configure the computing device to automatically obtain a new identifier in response to performing other privacy actions at the computing device or in response to a usage of the identifier value meeting some criteria.

In the present technology each time a new identifier value is needed the client device can obtain a new identifier value and store such an identifier value for future use. In the various embodiments this identifier value is configured to be substantially unique and to be different than a unique identifier associated with the computing device. Thereafter whenever a content request is made to a content provider the content request can utilize the new identifier value to uniquely identify the device. Additionally the user on demand can cause the process to be repeated to cause the computing device to be associated with a new different identifier than the one selected before.

Various embodiments of the present technology are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the present technology described by the disclosure.

The present technology addresses the need for allowing users in interact with at least some types of content providers in a more anonymous fashion by allowing a user to control a client device such that it is not necessary for the client device to be perpetually associated with a single identifier value. As a result a user via one client device can interact with such content providers on a more anonymous basis by periodically changing the identifier value associated with the client device. In the various embodiments this can be performed on demand on a scheduled basis automatically or according to any other scheme. As a result of this process content providers are prevented from accumulating large amounts of information regarding a user associated with a client device since the user at the client device will have the opportunity to communicate with the content provider with more than one identifier values. As a result the content provider is likely to interpret requests from a single client device as requests being received from multiple users further increasing the anonymity of the user.

Although the various embodiments will be described with respect to the general concept of withholding actual identifier values from applications and the like the present disclosure contemplates that such withholding is not necessarily absolute. For example an actual identifier value of a client device may be withheld for certain application or certain functions of an application but may still be utilized for other functions. In particular for purposes of tracking or identification the anonymous identifier value may be used while for debugging or other functions the actual identifier value may be used. The use of identifier values in accordance with the various embodiments of the present technology can be specified a priori or by the user at the client device.

Various embodiments of the present technology are carried out using one or more computing devices. With reference to an exemplary system includes a general purpose computing device including a processing unit CPU or processor and a system bus that couples various system components including the system memory such as read only memory ROM and random access memory RAM to the processor . The system can include a cache of high speed memory connected directly with in close proximity to or integrated as part of the processor . The system copies data from the memory and or the storage device to the cache for quick access by the processor . In this way the cache provides a performance boost that avoids processor delays while waiting for data. These and other modules can control or be configured to control the processor to perform various actions. Other system memory may be available for use as well. The memory can include multiple different types of memory with different performance characteristics. It can be appreciated that the disclosure may operate on a computing device with more than one processor or on a group or cluster of computing devices networked together to provide greater processing capability. The processor can include any general purpose processor and a hardware module or software module such as module module and module stored in storage device configured to control the processor as well as a special purpose processor where software instructions are incorporated into the actual processor design. The processor may essentially be a completely self contained computing system containing multiple cores or processors a bus memory controller cache etc. A multi core processor may be symmetric or asymmetric.

The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. A basic input output BIOS stored in ROM or the like may provide the basic routine that helps to transfer information between elements within the computing device such as during start up. The computing device further includes storage devices such as a hard disk drive a magnetic disk drive an optical disk drive tape drive or the like. The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device is connected to the system bus by a drive interface. The drives and the associated computer readable storage media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing device . In one aspect a hardware module that performs a particular function includes the software component stored in a non transitory computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function. The basic components are known to those of skill in the art and appropriate variations are contemplated depending on the type of device such as whether the device is a small handheld computing device a desktop computer or a computer server.

Although the exemplary embodiment described herein employs the hard disk it should be appreciated by those skilled in the art that other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards digital versatile disks cartridges random access memories RAMs read only memory ROM a cable or wireless signal containing a bit stream and the like may also be used in the exemplary operating environment. Non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

To enable user interaction with the computing device an input device represents any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems enable a user to provide multiple types of input to communicate with the computing device . The communications interface generally governs and manages the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

For clarity of explanation the illustrative system embodiment is presented as including individual functional blocks including functional blocks labeled as a processor or processor . The functions these blocks represent may be provided through the use of either shared or dedicated hardware including but not limited to hardware capable of executing software and hardware such as a processor that is purpose built to operate as an equivalent to software executing on a general purpose processor. For example the functions of the one or more processors presented in may be provided by a single shared processor or multiple processors. Use of the term processor should not be construed to refer exclusively to hardware capable of executing software. Illustrative embodiments may include microprocessor and or digital signal processor DSP hardware read only memory ROM for storing software performing the operations discussed below and random access memory RAM for storing results. Very large scale integration VLSI hardware embodiments as well as custom VLSI circuitry in combination with a general purpose DSP circuit may also be provided.

The logical operations of the various embodiments are implemented as 1 a sequence of computer implemented steps operations or procedures running on a programmable circuit within a general use computer 2 a sequence of computer implemented steps operations or procedures running on a specific use programmable circuit and or 3 interconnected machine modules or program engines within the programmable circuits. The system shown in can practice all or part of the recited methods can be a part of the recited systems and or can operate according to instructions in the recited non transitory computer readable storage media. Such logical operations can be implemented as modules configured to control the processor to perform particular functions according to the programming of the module. For example illustrates three modules Mod Mod and Mod which are modules configured to control the processor . These modules may be stored on the storage device and loaded into RAM or memory at runtime or may be stored as would be known in the art in other computer readable memory locations.

The present technology is carried out in a network based ecosystem in which pluralities of computing devices communicate with each other via one or more networks. Such computing devices include but are not limited to personal computers smartphone devices tablet devices server computers network storage devices network routing devices or any other type of network connectable computing device. illustrates an exemplary network infrastructure according to some embodiments of the present technology.

According to the network infrastructure comprises a plurality of client devices C C . . . Cn operatively coupled with a media distribution system an application distribution system or both via one or more networks . The client devices C C Cn can include personal computer devices smartphone devices tablet devices set top box devices smart television devices netbook devices or any other types of computing devices associated with users and requesting content from other computing devices.

In some embodiments of the present technology the media distribution system and the application distribution system allow users to create accounts for storing profile information contact information billing information media items taste data etc. In some embodiments of the present technology the media distribution system comprises an online store for selling or otherwise providing media items such as iTunes available from Apple Inc. of Cupertino Calif. In some embodiments of the present technology the application distribution system comprises an online store for selling or otherwise providing software applications items such as the AppStore available from Apple Inc. of Cupertino Calif.

The media distribution system and the application distribution system are also operatively coupled with third party partners T T . . . Tn. The third party partners T T . . . Tn provide media and software applications and services in addition to or in connection with the services provided by the media distribution system and the application distribution system .

Additionally the plurality of client devices C C . . . Cn are operatively coupled with an invitational content server . The invitational content server is configured to target package and deliver invitational content to users. The invitational content server can target invitational content to users based on several types of information. These include but are not limited to behavioral information geographic information and demographic information relating to the users associated with the client devices C C . . . Cn.

As described herein one aspect of the present technology is to address improper gathering and use of data available from various sources. The present disclosure contemplates that in some instances this gathered data might include personal information data that uniquely identifies or can be used to contact or locate a specific person. Such personal information data can include demographic data location based data telephone numbers email addresses twitter ID s home addresses or any other identifying information. In some cases such information may be used to improve the delivery of invitational content including promotions advertisements or any other content that may be of interest to users. However the present disclosure contemplates that in some circumstances such information may be used for more nefarious purposes such as theft of identity or illicit tracking of particular individual s activities location or the like.

Of particular concern are non trusted content providers such as some of third party partners T T . . . Tn or invitational content server with which the user may not have a trusted relationship. In the case of trusted providers such as media distribution system and the application distribution system gathering of such information may be less of a concern as such providers typically have established procedures for preventing the abusive use of such personal information as discussed below. Further the sharing of such information with such providers may be necessary for the proper operation of the client devices C C . . . Cn.

The present disclosure recognizes that the use of such personal information data in the present technology can be used to the benefit of users. For example the personal information data can be used to better understand user behavior facilitate and measure the effectiveness of advertisements applications and delivered content. Accordingly use of such personal information data enables calculated control of the delivered content. For example the system can reduce the number of times a user receives a given ad or other content and can thereby select and deliver content that is more meaningful to users. Such changes in system behavior improve the user experience. Further other uses for personal information data that benefit the user are also contemplated by the present disclosure.

The present disclosure further contemplates that the entities responsible for the collection analysis disclosure transfer storage or other use of such personal information data should implement and consistently use privacy policies and practices that are generally recognized as meeting or exceeding industry or governmental requirements for maintaining personal information data private and secure. For example personal information from users should be collected for legitimate and reasonable uses of the entity and not shared or sold outside of those legitimate uses. Further such collection should occur only after the informed consent of the users. Additionally such entities would take any needed steps for safeguarding and securing access to such personal information data and ensuring that others with access to the personal information data adhere to their privacy and security policies and procedures. Further such entities can subject themselves to evaluation by third parties to certify their adherence to widely accepted privacy policies and practices.

Despite the foregoing the present disclosure also contemplates embodiments in which users selectively block the use of or access to personal information data. That is the present disclosure contemplates that hardware and or software elements can be provided to prevent or block access to such personal information data. For example in the case of advertisement delivery services the present technology can be configured to allow users to select to opt in or opt out of participation in the collection of personal information data during registration for services. In another example users can select not to provide location information for advertisement delivery services. In yet another example users can configure their devices or user terminals to prevent storage or use of cookies and other mechanisms from which personal information data can be discerned. The present disclosure also contemplates that other methods or technologies may exist for blocking access to their personal information data.

Therefore although the present disclosure broadly covers use of personal information data to implement one or more various disclosed embodiments the present disclosure also contemplates that the various embodiments can also be implemented without the need for accessing such personal information data. That is the various embodiments of the present technology are not rendered inoperable due to the lack of all or a portion of such personal information data. For example content can be selected and delivered to users by inferring preferences based on non personal information data or a bare minimum amount of personal information such as the content being requested by the device associated with a user other non personal information available to the content delivery services or publically available information.

As explained above in some online ecosystems a system operator could conceivably piece together the small amounts of personal data dispersed throughout a system to compile a relatively complete picture of who the user might be. Accordingly some embodiments of the present technology involve managing the information shared with system partners by managing the use of unique identifier values to prevent system partners from collecting and piecing information to identify the user of a device or even to make an educated guess about the identity of the user.

As shown in the client device includes at least one client device application an identifier value creation and management module and a request assembly module . The identifier value creation and management module is configured for generating unique identifier values for the client device and managing interactions with the system partners and . Additionally the identifier value creation and management module can be configured for monitoring requests for obtaining such unique identifier values. The request assembly module is configured upon a request for content from client device application for content from one of system partners to retrieve an appropriate identifier value from the identifier value creation and management module and cause the request for content to be delivered to the appropriate system partner using the retrieved identifier value.

As noted above a client device may interact with system partners that are trusted or non trusted . Thus the request assembly module of client device can be configured to define a trusted zone indicating which identifier values to utilize with each of system partners and . The determination of which a specific partner falls within trusted zone system partners or outside trusted zone system partners can be made by a user at the client device on demand or can be defined a priori at the client device . In such arrangements a variable on demand anonymous identifier value may be used for system partners and the pre defined identifier value associated with the client device may be used for system partners . Alternatively anonymous identifier values can be provided for at least some of the trusted system partners. In such cases different controls can be provided at the client device to separately adjust these anonymous identifier values. In configurations where the user at the client device specifies that identifier values be adjusted periodically as further described below the frequency of adjustments can be based on whether or not a system partner falls within the trusted zone. Additionally the client device can be configured for categorizing a system partner as trusted or non trusted on demand. In such a configuration the request assembly module can be configured to keep track of such a categorization and enforce the use of appropriate identifier values when requests for content are being forwarded to system partners.

In some embodiments the request assembly module or at least similar request assembly logic can be incorporated into a client device application . However in various types of applications the time at which identifier values and other information regarding the client device can vary. For example some applications may have request assembly logic that is configured to retrieve any necessary identifier values any time a request for content is being assembled. In this case the application will always have access to the newest identifier value available. Other applications may have request assembly logic that is configured to retrieve any necessary identifier values on a periodic or scheduled basis. In this case the identifier value may be stale for a short while. Still other applications may have request assembly logic that is configured to retrieve any necessary identifier values upon startup of the application and this identifier value persists until the application is shut down and restarted. Thus the stale identifier value would remain in use until the application is restarted. One method of handling stale identifier values is for the user to manually shut down applications either before or after the identifier value is altered. Thus when the application is restarted the current identifier value is utilized. However the present disclosure also contemplates that the identifier value creation and management module could include logic to automate this process. For example upon obtaining a new identifier value the identifier value creation and management module could be configured to shut down and restart any currently running applications.

Although describes that an actual identifier value of client device may be withheld from system partners outside the trusted zone the various embodiments are not limited in this regard. As noted above it may not be necessary to withhold the identifier value for certain types of operations. Thus even system partners outside the trusted zone can receive an actual identifier value of the client device under particular circumstances. In particular certain types of operations or tasks may require an actual identifier value in order for such an operation to be performed such as debugging identity verification sales of protected content and other operations that require authentication of the client device or a consistent management of actions at the client device.

Method begins at step with the monitoring for a user request at the client device to alter a current identifier value being used for at least one of the system partners in the ecosystem. Such monitoring can be performed for example by identifier value creation and management module of client device . In the present technology the request can be expressly provided or can be provided as a result of other user actions at a computing device. These methods for creating requests are described below with respect to .

At step once a request is detected the method continues to step . At step a new identifier value for the computing device is obtained. In some embodiments the new identifier value is obtained via a generation or computation process at the client device. That is after the identifier value creation and management module detects the request the identifier value creation and management module can proceed to cause a computation of a new identifier value to occur. This computation can occur inside or outside of identifier value creation and management module . For example in some embodiments a subroutine can be called to compute the new identifier value via an application programming interface API or other interface at the client device.

As noted above the new identifier value is intended to be unique. Thus any methods for creating substantially or practically unique identifier values can be used in the various embodiments. In one specific example the new identifier value can be a random 128 bit number selected via a method that provides a universally unique identifier value. However the various embodiments are not limited in this regard and any other computation methods or sizes can be utilized with the present technology. However as the size of the identifier value is reduced there is an increased likelihood that the identifier value will not be unique.

In some embodiments the identifier values can be pre defined. That is a client device can be configured to store a pre defined list of identifier values. Thus when a request for a new identifier value is received a value can be selected from this list. The list can be generated a priori using the same types of computation methods described above.

Additionally although the description above contemplates that new identifier values will be obtained from locations within a client device the various embodiments are not limited in this regard. That is the values can be generated and stored at another computing device in communication with client device . Thus the client device can retrieve new identifier values from remote locations as needed. In some cases this new identifier value can be utilized as a shared secret. That is in some embodiments the new identifier value can be obtained from a trusted entity. In this configuration the user will be able alter the identifier value on demand but since the identifier is known to the trusted entity the identifier provides identifying information to the trusted entity while providing an anonymous identifier to other entities.

Once the new identifier value is obtained at step the new identifier value can be stored as the current identifier value at step . In some embodiments the current identifier value is overwritten with the new identifier value. In other embodiments the current identifier value is saved and concurrently stored with the new identifier value. In such embodiments the old identifier value can be stored in case the user needs to revert to the old identifier value for any reason. For example the user may simply wish to use a new value temporarily and revert back to the old value after a period of time has passed or some event has occurred. A specific example would be the enabling of a private mode during which the user simply wishes to interact temporarily using a different identifier value. However the various embodiments are not limited in this regard and the present technology can be used with other type of scenarios in which a temporary new identifier value is needed.

As noted above a different identifier value may be desirable for system partners in a trusted zone than those outside the zone partners . Thus in some embodiments step can include querying the user as to which zone the new identifier value should be applied to. In other embodiments the initial identifier value may be identical for all system partners and . Thereafter when a request is received the new identifier value is applied solely to requests to system partners outside zone . In such cases preserving of the current identifier value is useful to allow it to be saved and used for system partners in trusted zone .

Once the new identifier value is stored as the current identifier value at step or a request for content is received prior to a request to alter an identifier value is received at steps and requests can be managed at steps . At step the request assembly module can intercept a request for content from one of the system partners and a determination of whether the system partner is in a trusted zone can be made. At step if the system partner is not in the trusted zone the method proceeds to step else the method proceeds to step . At step where the system partner is not in the trusted zone i.e. one of system partners outside zone the request assembly module can assemble the request for the one of system partners using the current identifier value. If steps and have been performed this current identifier value is the new identifier value. If the system partner is in the trusted zone i.e. one of system partners in zone the method proceeds to step where the request assembly module can assemble the request for the one of system partners using a pre defined identifier value associated with the client device or the identifier value otherwise associated with the trusted zone . Thereafter the method can resume previous processing including the repeating of steps .

Although method is described with respect to two zones trusted and non trusted the various embodiments are not limited in this regard. In some embodiments the identifier value can be the same for all system partners. Thus steps and are optional and the method can simply proceed from step to step . In other words a determination of whether or not the system partner is in a trusted zone is optional in some embodiments. Further the present disclosure contemplates that the present technology can be utilized with any number of zones. Thus method can be modified as needed to account for such additional zones.

As noted above method begins the process of altering an identifier value based on the detection of a user request for such an alteration. This process is described in greater detail with respect to .

Turning first to there is shown a flow chart of steps in an exemplary method for detecting a user request for an alteration of an identifier value. The method begins at step by monitoring for an activation of a reset element in the user interface of the client device. An exemplary user interface for providing such a reset element is show in .

As shown in a user interface can include or more control elements . In particular illustrates the user interface including a Limit Ad Tracking element and a Reset Ad ID element . The term Ad ID as used herein refers to an identifier value utilized by content provider to record interactions while a client device is requesting content from a content provider such as a system partner. The elements and are each configured as descriptor and a soft switch that can be toggled. However the various embodiments are not limited in this regard and any type of selection element can be used in place of the soft switch including a regular button a drop down list a check box a radio button and a cycle button to name a few. Additionally the layout of the user interface and any elements illustrated therein is not limited to that shown in and can vary according to the client device configuration. For example in one embodiment a button in combination with the description Reset Advertising Identifier can be used in place of the descriptor and switch shown in .

If the monitoring at step detects that a request has been generated at step such as by a user activation of element the method can proceed to optional steps and . Otherwise the method proceeds to step as described below. First at step additional elements can be generated in a user interface to confirm the intent of the user to obtain a new identifier value. This is illustrated with respect to .

After the additional elements are generated at step the method can wait for the intent to be confirmed or denied at step . If the intent is confirmed at step i.e. approval element is activated the method can proceed to step in and the remainder of method can be performed. In contrast if the intent is denied i.e. cancellation element is activated the method can proceed to step . In either case the configuration of element in user interface can revert to the configuration of element shown in . That is the soft switch in element reverts from the on position to an off position so that it can reactivated at a later time.

As noted above in the event activation is not detected at step or the intent is not confirmed at step the method can proceed to step . At step a monitoring of other interface elements that include a task or step of altering the identifier value can be performed. For example upon the initializing of one or more types of reset tasks on a client device the computing device can also be configured to alter the identifier value for the client device. Further the activating or deactivating of certain features can also cause the client device to alter the identifier value for the computing device. For example referring back to the activation of the soft switch in element can also be configured to cause the identifier value to be altered as part of its overall processes. Therefore the client device can be configured such that the activation of a feature causes the alteration the deactivation of the feature causes the alteration or both. For example activation deactivation or both of component Limit Ad Tracking in can cause the identifier value to be altered.

Referring back to if an activation or deactivation of an interface element associated with a altering of the identifier value is detected the method can proceed to step and to step in . Otherwise the method can proceed to step and repeat method . It should be noted that the present disclosure contemplates that the steps of method can be performed concurrently or serially. For example steps can be performed concurrently with steps .

As previously noted in some embodiments the alteration of the identifier value can be performed on a scheduled basis or automatically based on some criteria. Accordingly rather than monitoring for a user action to provide the activation the client device can monitor for the client device itself to provide the activation based on the schedule or some other criteria such as usage of the identifier value. In such embodiments a user interface similar to that of can be provided to allow the user to establish the schedule or conditions and thereafter confirm using such a schedule or conditions to alter the identifier value.

As noted above the present disclosure contemplates that the identifier value can be adjusted on a partner by partner basis. This is illustrated with respect to . shows an exemplary user interface . The user interface can include a control element for altering the identifier value for all system partners or at least those partners outside a trusted zone. The operation of this control element can be substantially similar to that illustrated with respect to .

In addition to control element the user interface can also include one or more application specific control elements . Each of control elements can be associated with an application on the client device that utilizes the identifier value in some aspect. Thus each of control elements can include a descriptor and a selection element . As noted above with respect to the selection element can be configured in a variety of ways. In operation the user accesses user interface and activates the selection element for a particular application of interest. This process can be carried out in substantially a similar manner as described with respect to .

In the various embodiments the identifier value obtained for a specific application can be obtained in a variety of ways. In some embodiments a unique identifier value can be selected for each application. For example a single identifier value can be initially applied to all applications. Thereafter as each of selection element is activated a new unique identifier value is obtained for the associated application. Accordingly if all of selection elements are activated each application listed could be a different identifier value. In other embodiments the new identifier value can be staged. That is a single identifier value can be initially applied to all applications. When the first of selection elements is activated a new unique identifier value is obtained for the associated application. When another of selection element is selected the same identifier value is applied. Accordingly as all of selection elements are activated each application listed progressively transitions to the new different identifier value. If a same selection element is reselected another new identifier value can be obtained. In some cases the applications can progress to this value. In other case the application can progress through all the identifier values in order.

In some embodiments the user interface can be configured to provide additional notifications to the user regarding use of an identifier value by an application. For example a usage indicia can be provided for applications. In particular the presentation of the usage indicia can be configured so that when usage of an identifier value meets a certain criteria the user is notified that the usage of an identifier has met the certain criteria. For example such criteria can include an age of the identifier value the number of times the identifier has been used on an overall or per application basis the frequency at which the identifier value has been used on an overall or per application basis or some combination thereof on an overall or per application basis . In some embodiments different versions or forms of the usage indicia can be provided for different levels of usage. It should be noted that although the usage level can be a simple measure of usage in some embodiments in other embodiments the usage level can be based on a formula that translates counts times frequency other measures of usage or any combinations thereof into a usage level.

However it should be noted that in embodiments described above changes to other components of a client device might be needed. For example in the case of client device it is necessary to configure the identifier value and creation module and the request assembly module to keep track of and manage the use of potentially a different identifier value for each application on the client device. Further such elements can be configured to track usage of identifier values in order to generate the usage indicia

In some embodiments the notifications can be more explicit. That is upon the meeting of some criteria alternatively or in combination with the generation of indicia as shown in a message or other type of notification can be provided to the user. For example an email text or voice message can be provided to the user to notify the user regarding the excessive usage of the identifier value.

The present disclosure contemplate that there may be circumstances in which a single application at client device may need to engage in a transaction that involves system partners of an ecosystem in which some partners are within the trusted zone and other partner fall outside of the trusted zone. In such cases a client device will need to be configured to manage multiple identifier values for the single application. This is illustrated below with respect to .

In some embodiments of the present technology an application at client device may wish to access media distribution systems and application distribution systems for the purposes of obtaining content for the application such as purchased content. However in some cases the content itself is obtained from third parties outside the trusted zone . Thus the transaction occurs in three steps. First the application may need to send the user s account identifier value and the pre defined device identifier value along with the login or purchase request. Second using that information the media distribution system or the application distribution system would find and return to the application at the client device content provider data including a network location of the appropriate system partner providing the content requested and any authorization information needed for enabling access to such content. Finally the application generates a request for the appropriate system partner using the content provider data.

As shown in the client device can then be used to enforce a policy that avoids providing device identifier values to system partners outside the trusted zone including invitational content partners or other third party partners P P . . . Pn. To enforce this policy some embodiments of the present technology provide logic within a request assembly module in the client device and that is configured for enforcing the identifier value policies for a particular application for different zones. More specifically the logic is configured to recognize the difference between requests to entities within the trusted zone and outside the trusted zone. Further the logic is configured to recognize if an application has been associated with an anonymous identifier value.

Accordingly in operation when the request to the media distribution systems or application distribution systems is generated by the application the request assembly module can intercept the request. The request assembly module can first determine whether the entity associated with the request is within the trusted zone. If so then the request is allowed to proceed either with the pre defined identifier value for the client device or whatever identifier value has been selected for the trusted zone . Once the content provided data is returned to the client device the application can generate a second request based on the content data. Again the request assembly module can intercept the request. In this case seeing that the request is associated with an entity outside the zone the request is adjusted to utilize the anonymous identifier value. This identifier value can be manually selected as described above. Alternatively the identifier value associated with the application with entities outside the trusted zone is used in the request and forwarded on.

The results of this process are the following. First the third party partners P P . . . Pn the invitational content server do not gain access to the pre define device identifier value for the client device. Second the user can change the identifier value for entities outside the trusted zone over time the client device effectively blocks the ability of system partners in the system to effectively collect information about a particular user. As a result the user despite needing to share an identifier value of the client device at times remains anonymous with respect to certain entities.

The various embodiments described above have been primarily directed at configurations in which the client device awaits for some type of user input to cause a change in the identifier value. However in some embodiments no user input may be needed to trigger a change in the identifier value. Rather in these embodiments the identifier value may be changed when usage of the identifier value meets certain criteria. For example as noted above usage of the identifier value can be used to create notifications for the user such as the indicia described above with respect to . As noted therein different indicia can be utilized to indicate different levels of usage of an identifier with respect to all application or individual applications.

In conjunction with the use of such notifications or in alternative to such notifications a process for automatically altering or changing the identifier value can be provided. In such configurations criteria can be specified at the client device to trigger such changes. For example such criteria can include an age of the identifier value the number of times the identifier has been used on an overall or per application basis the frequency at which the identifier value has been used on an overall or per application basis or some combination thereof on an overall or per application basis . As noted above although the usage level can be a simple measure of usage in some embodiments in other embodiments the usage level can be based on a formula that translates counts times frequency other measures of usage or any combinations thereof into a usage level. However the various embodiments are not limited in this regard and other criteria and combinations thereof can be used as well. Further such criteria can be pre defined in the client device in the software therein or specified by the user.

In operation the use of such automatic changes can occur in a manner similar to that described with respect to . That is at step rather than just monitoring for a user request generated based on user input the meeting of a criteria is used to generate the user request. Thereafter the method proceeds in a substantially similar manner.

In some embodiments this process can be semi automated. That is after the criteria are met the request can be generated to change the identifier value automatically as described above. However the user can also be notified regarding the impending change and can be afforded an opportunity to block the change temporarily or permanently. In the case of a temporary change the user can be re prompted at a later time. In the case of a permanent change the client device can include settings to reset the process.

As noted above the automatic changes in identifier values can be used in conjunction with manual controls and notifications as shown in . In such configurations at least two levels of usage can be specified. A first lower level can be used to specify a usage level at which initial notifications are generated such as those illustrated in . However achieving such usage levels can be configured to cause no other actions on the client device. A second higher level can then be used to specify the usage level which action is taken automatically. Thus the user can still utilize the client device to manually and automatically change the identifier value.

Although the invention has been described in detail with reference to particular preferred embodiments persons possessing ordinary skill in the art to which this invention pertains will appreciate that various modifications and enhancements may be made without departing from the spirit and scope of the claims that follow.

