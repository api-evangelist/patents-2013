---

title: Method and system for presenting and managing storage shares
abstract: Methods and systems for managing storage shares in a virtual environment having a plurality of virtual machines are provided. The system includes a storage system for managing storage space for the storage shares and generating a quota report. The quota report shows an assigned quota for each storage share and actual storage used by each storage share. The assigned quota indicates an amount of designated storage space for each storage share. The system also includes a storage provider for obtaining the quota report from the storage system and filtering the quota report based on storage shares that are managed by the storage provider. The storage provider modifies a quota for a storage share based on a client request and notifies the storage system of the modification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09507614&OS=09507614&RS=09507614
owner: NETAPP, INC.
number: 09507614
owner_city: Sunnyvale
owner_country: US
publication_date: 20131205
---
This patent application claims priority under 35 USC 119 e to U.S. Provisional Patent Application Ser. No. 61 857 793 filed on Jul. 24 2013 the disclosure of which is incorporated herein in its entirety.

Various forms of storage systems are used today. These forms include direct attached storage DAS network attached storage NAS systems storage area networks SANs and others. Network storage systems are commonly used for a variety of purposes such as providing multiple users with access to shared data backing up data and others.

A storage system typically includes at least one computing system executing a storage operating system for storing and retrieving data on behalf of one or more client computing systems clients . The storage operating system stores and manages shared data containers in a set of mass storage devices.

Storage systems are being used extensively in virtual environments where a physical resource is time shared among a plurality of independently operating processor executable virtual machines. Typically storage space is presented to a virtual machine as a virtual hard disk VHD file. A storage drive for example C is then presented to a user via a user interface within a virtual machine context. The user can use the storage drive to access storage space to read and write information. Continuous efforts are being made for efficiently presenting and managing storage space in a virtual environment.

As a preliminary note the terms component module system and the like as used herein are intended to refer to a computer related entity either software executing general purpose processor hardware firmware and a combination thereof. For example a component may be but is not limited to being a process running on a hardware processor a hardware processor an object an executable a thread of execution a program and or a computer.

By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also these components can execute from various computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal .

Computer executable components can be stored for example at non transitory computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory memory stick or any other storage device in accordance with the claimed subject matter.

In one aspect methods and systems for presenting storage shares in a virtual environment having a plurality of virtual machines are provided. A hierarchical data structure is maintained by a storage provider interfacing with a storage system that manages storage space for the storage shares. The data structure stores information for a storage pool based on the storage space and information for a storage volume sub unit that is based on the storage pool. The storage provider assigns a storage share to a management console either based on the storage pool or the storage volume sub unit. The management console then presents the storage share to a virtual machine from among the plurality of virtual machines.

In another aspect methods and systems for managing storage shares in a virtual environment having a plurality of virtual machines are provided. The system includes the storage system for managing storage space for the storage shares and generating a quota report. The quota report shows an assigned quota for each storage share and actual storage used by each storage share. The assigned quota indicates an amount of designated storage space for each storage share. The system also includes the storage provider for obtaining the quota report from the storage system and filtering the quota report based on storage shares that are managed by the storage provider. The storage provider modifies a quota for a storage share based on a client request and notifies the storage system of the modification.

The guest software expects to operate as if it were running on a dedicated computer rather than in a VM. That is the guest software expects to control various events and have access to hardware resources on a physical computing system may also be referred to as a host platform which maybe referred to herein as host hardware resources . The host hardware resource may include one or more processors resources resident on the processors e.g. control registers caches and others memory instructions residing in memory e.g. descriptor tables and other resources e.g. input output devices host attached storage network attached storage or other like storage that reside in a physical machine or are coupled to the host platform.

In one aspect system may include a plurality of computing systems A N may also be referred to individually as a host platform system or server communicably coupled to a storage system executing a storage operating system via a connection system such as a local area network LAN wide area network WAN the Internet and others. As described herein the term communicably coupled may refer to a direct connection a network connection or other connections to enable communication between devices.

Host platform includes a processor executable virtual execution environment executing a plurality of VMs A N. VMs A N execute a plurality of guest OS A N may also be referred to as guest OS that share hardware resources . As described above hardware resources may include CPU memory I O devices storage or any other hardware resource.

In one aspect host platform interfaces with a virtual machine monitor VMM for example a processor executed Hyper V layer provided by Microsoft Corporation of Redmond Wash. a hypervisor layer provided by VMWare Inc. or any other type. VMM presents and manages the plurality of guest OS A N executed by the host platform . The VMM may include or interface with a virtualization layer VIL that provides one or more virtualized hardware resource to each OS A N.

In one aspect VMM is executed by host platform with VMs A N. In another aspect VMM may be executed by an independent stand alone computing system often referred to as a hypervisor server or VMM server and VMs A N are presented at one or more computing systems.

It is noteworthy that different vendors provide different virtualization environments for example VMware Corporation Microsoft Corporation and others. The generic virtualization environment described above with respect to may be customized depending on the virtual environment provider to implement the aspects of the present disclosure. Furthermore VMM may execute other modules for example a storage driver network interface and others the details of which are not germane to the various aspects described herein and hence have not been described in detail.

System may also include a management console that executes a processor executable management application for managing and configuring various elements of system . In a Microsoft Corporation virtual environment the management console may be referred to as virtual machine management module. Application may be used to manage and configure VMs as well as configure resources that are used by VMs according to one aspect. Application interfaces with a storage management provider may also be referred to as storage provider VMM and other modules. Storage provider maintains one or more data structures A for presenting and managing storage space for various VMs according to one aspect. Details regarding the storage provider and data structure A are provided below.

In one aspect the storage system has access to a set of mass storage devices A N may be referred to as storage devices within at least one storage subsystem . The mass storage devices may include writable storage device media such as magnetic disks video tape optical DVD magnetic tape non volatile memory devices for example self encrypting drives flash memory devices and any other similar media adapted to store information. The storage devices may be organized as one or more groups of Redundant Array of Independent or Inexpensive Disks RAID . The aspects disclosed are not limited to any particular storage device type or storage device configuration.

In one aspect the storage system provides a set of logical storage volumes also interchangeably referred to as storage pools to the storage provider and other clients for example VMM and clients A N. Each volume may be configured to store data files or data containers or data objects scripts word processing documents executable programs and any other type of structured or unstructured data. From the perspective of one of the client systems each volume can appear to be a single drive. However each volume can represent storage space in at one storage device an aggregate of some or all of the storage space in multiple storage devices a RAID group or any other suitable set of storage space.

The storage operating system organizes storage space at storage devices as one or more aggregate where each aggregate is identified by a unique identifier and a location. Within each aggregate one or more flexible storage volumes are created whose size can be varied. A qtree sub volume unit may also be created within the storage volumes. As a special case a qtree may be an entire storage volume.

A qtree enables a user to apply attributes for example security settings oplocks opportunistic locks and others to a subset of data containers and directories rather than to an entire volume. A qtree typically does not have restrictions on the number of files or storage space. However a quota can be applied to a qtree to limit its storage space size.

The storage system may be used to store and manage information at storage devices based on a client request. The request may be based on file based access protocols for example the Common Internet File System CIFS protocol or Network File System NFS protocol over the Transmission Control Protocol Internet Protocol TCP IP . Alternatively the request may use block based access protocols for example the Small Computer Systems Interface SCSI protocol encapsulated over TCP iSCSI and SCSI encapsulated over Fibre Channel FCP .

In a typical mode of operation a client for example a VM transmits one or more input output I O commands such as a CFS or NFS request over connection system to the storage system . Storage system receives the request issues one or more I O commands to storage devices to read or write the data on behalf of the client system and issues a CIFS or NFS response containing the requested data over the network to the respective client system.

Although storage system is shown as a stand alone system i.e. a non cluster based system in another aspect storage system may have a distributed architecture for example a cluster based system that is described below in detail with respect to .

When the CIFS protocol is used for accessing storage space then storage space at storage devices is exposed as a CIFS share . CIFS is a protocol that defines a standard for remote data container access by a plurality of computing devices. With CIFS users with different platforms and computers can share files without having to install new software. CIFS runs over TCP IP but uses the SMB Server Message Block protocol available in Microsoft Windows operating environments for data container access.

A CIFS share is typically defined by a share name that can be accessed by a SMB client to access storage. A CIFS share also includes a storage path that is maintained by storage system . In one aspect a CIFS share may be exposed as a qtree sub volume unit by the storage provider as described below in detail. Permissions associated with the qtree may be defined in an access control list ACL . A quota for the CIFS share may also be assigned by the storage provider and may be used to define the size for the share.

In one aspect the CIFS share may be based on a qtree or a flexible storage volume storage pool where the storage pool size can be increased or decreased based on storage usage as described below in detail. In another aspect as described below a CIFS share may be thin provisioned. This means that more storage space may be presented to a client than what may be available for a storage pool. For example if a storage pool is configured with storage space of 100 Gb the storage provider may expose six different shares of 20 Gb which exceeds the total storage space of 100 Gb. The actual storage for the shares may be allocated on an as need basis. The size of the shares may be increased or decreased as described below in detail.

A processing module B maintains the data structure A according to one aspect. The data structure A is used to expose CIFS shares and manage storage space. The data structure A may be stored at any location accessible to the processing module B. Details of data structure A are provided below with respect to .

Management console or VMM populates one or more virtual hard drive VHD files for each share. The user is presented with a storage drive within a virtual machine. For example the VHD file VM1.VHD A is created on share 1 A and then presented as drive K to VM1 A. A user using VM1 A uses K to access storage space for reading and writing information. Similarly VM2.VHD B is created on share 2 B and appears as M drive for VM B. A user using VM2 B uses M drive to store information.

Storage environment may include a plurality of client systems . .N or virtual machines A N a clustered storage system similar to storage system storage provider management console and at least a network communicably connecting the client systems . .N and the clustered storage system . As shown in the clustered storage system includes a plurality of nodes . . a cluster switching fabric and a plurality of mass storage devices . . may be referred to as and similar to storage device .

Each of the plurality of nodes . . is configured to include an N module a D module and an M Module each of which can be implemented as a processor executable module. Specifically node . includes an N module . a D module . and an M Module . node . includes an N module . a D module . and an M Module . and node . includes an N module . a D module . and an M Module ..

The N modules . . include functionality that enable the respective nodes . . to connect to one or more of the client systems . .N or the storage provider over the computer network while the D modules . . connect to one or more of the storage devices . .. Accordingly each of the plurality of nodes . . in the clustered storage server arrangement provides the functionality of a storage server.

The M Modules . . provide management functions for the clustered storage system . The M Modules . . collect storage information regarding storage devices and makes it available to storage provider according to one aspect.

A switched virtualization layer including a plurality of virtual interfaces VIFs is provided to interface between the respective N modules . . and the client systems . .N allowing storage . . associated with the nodes . . to be presented to the client systems . .N as a single shared storage pool.

Each of the nodes . . is defined as a computing system to provide application services to one or more of the client systems . .N. The nodes . . are interconnected by the switching fabric which for example may be embodied as a Gigabit Ethernet switch or any other type of switching connecting device.

Although depicts an equal number i.e. of the N modules . . the D modules . . and the M Modules . . any other suitable number of N modules D modules and M Modules may be provided. There may also be different numbers of N modules D modules and or M Modules within the clustered storage system . For example in alternative aspects the clustered storage system may include a plurality of N modules and a plurality of D modules interconnected in a configuration that does not reflect a one to one correspondence between the N modules and D modules.

Each client system . .N or VM A N may request the services of one of the respective nodes . . . and that node may return the results of the services requested by the client system by exchanging packets over the computer network which may be wire based optical fiber wireless or any other suitable combination thereof.

Data structure A includes information regarding a storage pool . The storage pool information includes a unique name identifier for identifying a flexible volume a size and an indicator as to how space is allocated shown as space reservation . The indicator indicates if storage space can be configured as a regular storage volume with fixed storage space size or as a thin provisioned storage volume whose size can vary. Data structure A also indicates other features for the storage pool for example if data de duplication is enabled parity features if data mirroring is enabled or any other feature.

Data structure A also indicates the amount of space that is used for the storage pool the amount of available space at any given time and the total storage space. The storage space usage information is obtained from storage operating system that manages the underlying physical storage space for the storage pool at storage devices or . . .

Data structure A also stores information for a qtree shown as file system . File system stores the name of the qtree the path size file system type for example CIFS NFS or others and any other information.

Data structure A also stores information regarding a file share that may be based on storage pool or file system . The file share includes the file share name a CIFS name a storage path ACL information protocol type used to access the share and a network domain name to which the share is exposed.

The various elements of data structure A may be stored as separate storage objects or as an integrated storage object. The aspects disclosed herein are not limited to any particular format for data structure A.

In one aspect the hierarchical elements of may be categorized into different service levels for example Gold Silver and Bronze. The service levels are used to enable certain amount of storage with certain features. For example one service level may include de duplication mirroring backup and other features while another service level may have fewer features. The various aspects disclosed herein are not limited to any particular feature set or service level. The use of data structure A is described below in detail with respect to .

In block B a flexible storage volume for example storage pool is created to present storage as CIFS shares. The storage pool is presented by the storage operating system to storage provider . Information regarding the storage pool that includes an identifier for the storage volume a size associated permissions and other attributes for example de duplication abilities and others is stored at the data structure A described above. The storage pool is configured to operate as a flexible storage volume when presented to clients i.e. the storage space presented to clients may be increased or decreased.

In block B the storage provider creates a flexible qtree or file system as referred to by the SMI S specification . The qtree information is also stored at data structure A described above. In one aspect the qtree may be thin provisioned as described above.

In block B based on the client request shares are generated either based on the storage pool or the qtree generated in block B. The option of creating shares based on qtrees provides flexibility to clients as to what they may want to do with the storage space. This allows the client to allocate logical storage containers based on a service level that defines how much storage and what storage attributes a client is permitted to use. This also allows a client to easily clone VMs because one simply has to create multiple qtrees for cloning VMs within the same file system i.e. flexible volume.

In block B permissions associated with the shares are set. The permissions may be stored as part of ACLs that are maintained by the storage operating system and provided to the storage provider . The ACLs used by the storage provider may be used across various network domains. Thereafter the shares are exposed to the management console .

In block B the management console or VMM may present the shares to multiple VMs as storage containers A N . The management console with this technique has the option of exposing shares based on the needs of the overall network and virtual machine environment.

In block B the storage provider uses data structure A to create the share either from a storage pool or a qtree . Thereafter the shares are presented to the client. The client in this context may be the management console or application .

In block B the storage provider receives a request for a thin or thick i.e. fixed size share. In block B the storage provider evaluates data structure A to determine if the various storage pools and their attributes meet the requirements listed in the client request.

In block B depending on the client request a share is generated based on the storage pool or the file system . Thereafter in block B the shares are presented to the client for example management console . It is noteworthy that the storage provider performs the underlying calculations to ascertain which storage pool has enough storage to meet the requirements of the request. The storage provider performs these calculations based on information received from the storage operating system .

In block B the storage provider presents a plurality of thin provisioned storage containers or shares to management console . In block B the management console presents the storage containers to VMM and or various clients including VMs.

In block B a qtree or file system is generated for a storage pool if the share is to be based at the file system level and not at the storage pool level.

In block B a quota for the requested share is created. The quota limits the size of the storage space for the share. Thereafter in block B share permissions are created and the management console places a VHD for the share. In another aspect the VHD is placed by VMM . The copy of the share is created by the storage operating system in block B. This allows the storage operating system to manage the physical storage space based on the assigned quota for the share.

The storage operating system may assign shares to various clients that interface directly instead of through the storage provider . Thus in block B the storage provider filters the quota report to determine the actual storage space usage for the quotas that were assigned on shares managed by the storage provider .

If a client requests a modification for a quota i.e. increase or decrease a quota then in block B the quota may be modified based on the filtered results in block B. The quota may also be modified based on a service level. For example if a gold storage client that has access to more storage than a silver client may have their quota increased or decreased based on the overall usage of storage space. A lower level storage user may also have their storage space increased or decreased depending on the filtered quota results.

In block B the storage provider maintains a data structure for example A for monitoring overall storage pool usage. This information is obtained periodically from the storage operating system . If there is any change in the quotas and storage pool usage based on the service level of a client then the clients are notified in block B. As mentioned above storage provider may notify the management console which in turn notifies the VMs and or VMM .

Processors A B may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such hardware devices. The local storage comprises one or more storage devices utilized by the node to locally store configuration information for example in a configuration data structure . The configuration information may include the information that is stored in data structure A described above in detail.

The cluster access adapter comprises a plurality of ports adapted to couple node . to other nodes of cluster . In the illustrative aspect Ethernet may be used as the clustering protocol and interconnect media although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate aspects where the N modules and D modules are implemented on separate storage systems or computers the cluster access adapter is utilized by the N D module for communicating with other N D modules in the cluster .

Each node . is illustratively embodied as a dual processor storage system executing a storage operating system similar to that preferably implements a high level module such as a file system to logically organize the information as a hierarchical structure of named directories and files on storage .. However it will be apparent to those of ordinary skill in the art that the node . may alternatively comprise a single or more than two processor systems. Illustratively one processor A executes the functions of the N module on the node while the other processor B executes the functions of the D module .

The memory illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may in turn comprise processing elements and or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the disclosure described herein.

The storage operating system portions of which is typically resident in memory and executed by the processing elements functionally organizes the node . by inter alia invoking storage operation in support of the storage service implemented by the node.

The network adapter comprises a plurality of ports adapted to couple the node . to one or more clients . .N over point to point links wide area networks virtual private networks implemented over a public network Internet or a shared local area network. The network adapter thus may comprise the mechanical electrical and signaling circuitry needed to connect the node to the network. Illustratively the computer network may be embodied as an Ethernet network or a Fibre Channel network. Each client . .N may communicate with the node over network by exchanging discrete frames or packets of data according to pre defined protocols such as TCP IP.

The storage adapter cooperates with the storage operating system executing on the node . to access information requested by the clients. The information may be stored on any type of attached array of writable storage device media such as video tape optical DVD magnetic tape bubble memory electronic random access memory micro electro mechanical and any other similar media adapted to store information including data and parity information. However as illustratively described herein the information is preferably stored on storage device .. The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the storage devices over an I O interconnect arrangement such as a conventional high performance FC link topology.

In one example storage operating system may include several modules or layers executed by one or both of N Module and D Module . These layers include a file system manager that keeps track of a directory structure hierarchy of the data stored in storage devices and manages read write operation i.e. executes read write operation on storage in response to client . .N requests.

Storage operating system may also include a protocol layer and an associated network access layer to allow node . to communicate over a network with other systems such as clients . .N. Protocol layer may implement one or more of various higher level network protocols such as NFS CIFS Hypertext Transfer Protocol HTTP TCP IP and others as described below.

Network access layer may include one or more drivers which implement one or more lower level protocols to communicate over the network such as Ethernet. Interactions between clients and mass storage devices . . or are illustrated schematically as a path which illustrates the flow of data through storage operating system .

The storage operating system may also include a storage access layer and an associated storage driver layer to allow D module to communicate with a storage device. The storage access layer may implement a higher level storage protocol such as RAID redundant array of inexpensive disks while the storage driver layer may implement a lower level storage device access protocol such as FC or SCSI. The storage driver layer may maintain various data structures not shown for storing information regarding storage volume aggregate and various storage devices.

As used herein the term storage operating system generally refers to the computer executable code operable on a computer to perform a storage function that manages data access and may in the case of a node . implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel an application program operating over a general purpose operating system such as UNIX or Windows XP or as a general purpose operating system with configurable functionality which is configured for storage applications as described herein.

In addition it will be understood to those skilled in the art that the disclosure described herein may apply to any type of special purpose e.g. file server filer or storage serving appliance or general purpose computer including a standalone computer or portion thereof embodied as or including a storage system. Moreover the teachings of this disclosure can be adapted to a variety of storage system architectures including but not limited to a network attached storage environment a storage area network and a storage device directly attached to a client or host computer. The term storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems. It should be noted that while this description is written in terms of a write any where file system the teachings of the present disclosure may be utilized with any suitable file system including a write in place file system.

The processing system includes one or more processor s and memory coupled to a bus system . The bus system shown in is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor s are the central processing units CPUs of the processing system and thus control its overall operation. In certain aspects the processors accomplish this by executing software stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory includes the main memory of the processing system . Instructions implement the process steps described above may reside in and execute by processors from memory .

Also connected to the processors through the bus system are one or more internal mass storage devices and a network adapter . Internal mass storage devices may be or may include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The network adapter provides the processing system with the ability to communicate with remote devices e.g. storage servers over a network and may be for example an Ethernet adapter a Fibre Channel adapter or the like.

The processing system also includes one or more input output I O devices coupled to the bus system . The I O devices may include for example a display device a keyboard a mouse etc.

The system and techniques described above are applicable and useful in the upcoming cloud computing environment. Cloud computing means computing capability that provides an abstraction between the computing resource and its underlying technical architecture e.g. servers storage networks enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. The term cloud is intended to refer to the Internet and cloud computing allows shared resources for example software and information to be available on demand like a public utility.

Typical cloud computing providers deliver common business applications online which are accessed from another web service or software like a web browser while the software and data are stored remotely on servers. The cloud computing architecture uses a layered approach for providing application services. A first layer is an application layer that is executed at client computers. In this example the application allows a client to access storage via a cloud. After the application layer is a cloud platform and cloud infrastructure followed by a server layer that includes hardware and computer software designed for cloud specific services. Details regarding these layers are not germane to the aspects disclosed herein.

Thus a method and apparatus for presenting and managing storage have been described. Note that references throughout this specification to one aspect or an aspect mean that a particular feature structure or characteristic described in connection with the aspect is included in at least one aspect of the present disclosure. Therefore it is emphasized and should be appreciated that two or more references to an aspect or one aspect or an alternative aspect in various portions of this specification are not necessarily all referring to the same aspect. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more aspects of the disclosure as will be recognized by those of ordinary skill in the art.

While the present disclosure is described above with respect to what is currently considered its preferred aspects it is to be understood that the disclosure is not limited to that described above. To the contrary the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims.

