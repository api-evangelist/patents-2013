---

title: Cached and server views with automatic caching and smooth scrolling
abstract: On a client computer, customer relationship management software is integrated into a messaging application that includes a user interface. Customer relationship management (CRM) information is received from a server computer. An automatic determination is made as to whether the received CRM information is to be cached on the client computer. When it is determined that the CRM information is to be cached on the client computer, the CRM information is cached in a cache on the client computer. When at least some of the CRM information is cached on the client computer, the cached CRM information is displayed as a view on the client computer. The display of the CRM information is integrated into the user interface of the messaging application program.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09444911&OS=09444911&RS=09444911
owner: Microsoft Technology Licensing, LLC
number: 09444911
owner_city: Redmond
owner_country: US
publication_date: 20130308
---
This patent application is a continuation of co pending U.S. patent application Ser. No. 13 465 509 now issued as U.S. Pat. No. 8 396 921 filed May 7 2012 and entitled Cached and Server Views with Automatic Caching and Smooth Scrolling which is a continuation of U.S. patent application Ser. No. 12 789 606 now issued as U.S. Pat. No. 8 195 741 filed May 28 2010 and entitled Cached and Server Views with Automatic Caching and Smooth Scrolling the disclosure of which is incorporated herein in its entirety by reference.

Customer relationship management CRM provides a means for managing a company s interactions with clients and sales prospects and providing customer information regarding products services and customer accounts. Server based customer relationship management software provides a business applications platform for customer relationship management typically using a client server model. Using a server based CRM system a user at a client computer is able to access CRM information from a server computer and display CRM information at the client computer.

Client based CRM software can be integrated into application software on a client computer providing a user a commonly used platform from which to access CRM information. However depending on the connectivity and bandwidth between a CRM server and a CRM client performance issues can result. In addition obtaining server based CRM information via a client based program may sometimes result in authentication issues web browser errors and an unsatisfying user experience at the client computer.

Embodiments of the disclosure are directed to a method implemented on a client computer for displaying customer relationship information on a messaging application. On the client computer customer relationship management software is integrated into the messaging application. The messaging application includes a user interface. Customer relationship management CRM information is received from a server computer. An automatic determination is made as to whether the received CRM information is to be cached on the client computer. When it is determined that the CRM information is to be cached on the client computer the CRM information is cached in a cache on the client computer. When at least some of the CRM information is cached on the client computer the cached CRM information is displayed as a view on the client computer. The display of the CRM information is integrated into the user interface of the messaging application program.

The details of one or more techniques are set forth in the accompanying drawings and the description below. Other features objects and advantages of these techniques will be apparent from the description drawings and claims.

The present application is directed to systems and methods for integrating CRM information into a client based messaging application. A cache is used on the client computer to store certain CRM information retrieved from a server computer before the retrieved CRM information is displayed on the client computer. The cache is a memory area on the client computer that temporarily stores the retrieved CRM information before the CRM information is rendered on the client computer. A caching algorithm at the client computer determines which CRM information is cached and when. The CRM information is seamlessly integrated into a user interface of the client based messaging application providing smooth scrolling of CRM display screens. In addition the caching of CRM information at the client computer improves response time for the display of CRM information at the client computer particularly when the client computer is located remotely from a server computer that provides the CRM information.

CRM information typically includes information regarding customers customer accounts products sales prospects service issues and other related items. CRM information is commonly stored on a server computer and displayed as a web page in the form of lists. For example a user running CRM software on a client computer may access a CRM web page from the server computer via a web browser on the client computer. The CRM web page may display a list of customers a list of products a list of service issues etc. When CRM software is installed on the client computer and integrated into the client based email application the CRM information is rendered within the messaging application on the client computer instead of being rendered as a web page on the client computer.

The CRM software included on server computer for example Microsoft Dynamics CRM 5.0 customer relationship management software includes a three tiered architecture. A first tier represented by the example user interface module provides a user interface that includes a server side script engine such as active server pages ASP or ASP.net both from Microsoft Corporation of Redmond Wash. The first tier is sometimes referred to as the presentation tier. The user interface also includes forms that permit a user to formulate search queries. A second tier represented by application platform module includes business logic and rules used to process requests for CRM information. Requests for CRM information are typically received over network via web services. The second tier is sometimes referred to as the application tier. A third tier represented by database module includes a database in which CRM information is stored. An example database is the Microsoft SQL Server 2008 database server from Microsoft Corporation of Redmond Wash.

Using the client computer and server computer shown in the example email application communicates requests for CRM information directly to application platform module bypassing the user interface module . CRM information is obtained from the applications module via web services. Web services are application programming interfaces APIs that are used to obtain information from a remote server over a network such as network . The applications platform module includes a web services interface that provides an application program interface API for third parties such as email application .

The email application uses web services to communicate requests to the example applications module for CRM information. The email application uses a messaging application programming interface to render the CRM information. An example application programming interface used with Microsoft Office Outlook 2007 messaging and collaboration software is the Microsoft messaging application programming interface MAPI . With MAPI instead of displaying CRM information as web page on client computer the CRM information obtained from server computer via applications platform module is integrated into the user interface of the email application for example the Microsoft Office Outlook 2007 messaging and collaboration software user interface. The integration of CRM information into a scrollable window of the email application is described in more detail later in this disclosure.

The example caching logic module implements a caching algorithm that automatically determines whether CRM information obtained from server computer is to be cached on client computer before the CRM information is displayed on client computer . CRM information that is not cached on client computer is displayed on client computer as a server view. In a server view CRM information obtained from client computer is displayed on client computer directly without being cached. The caching algorithm is a set of rules implemented on client computer and informed by settings or properties on server computer . The automatic determination as to whether CRM information is to be cached is based on the rules implemented in the caching algorithm.

The example view update module processes changes that a user can make to a view. Some example changes that a user can make to a view include removing a column from a view adding a column to a view filtering and sorting on a visible column and filtering and sorting on an invisible column.

The example notifications module processes notifications from the server computer regarding server and cached views. A notification is an indication from the server computer that new CRM information is available at the server computer . Typically for server views a page update is requested when a page of CRM information is processed at client computer . For cached views a notification polling technique is used. With notification polling the cache on the client computer is periodically updated with CRM information. A typically polling interval is five minutes although other polling intervals may be used. The notifications module also notifies the email application when CRM information is added to the cache when CRM information is deleted from the cache and when CRM information stored in the cache is updated.

The example user interface module provides a user interface for the email application . The user interface includes one or more grids in which email related information including CRM information may be displayed. A grid is an area of the user interface typically a series of columns and rows in which email messages lists etc. are displayed. Examples grids are described in below.

The example Dynamics CRM folder includes a marketing subfolder and other subfolders not shown. For example additional subfolders may include a sales subfolder a products subfolder a services subfolder etc. The example marketing subfolder includes an accounts subfolder a campaigns subfolder a contacts subfolder a leads subfolder a marketing lists subfolder and other subfolders not shown. Other folders and subfolders are possible.

When a user selects the accounts subfolder an accounts summary screen is displayed. The example accounts summary screen displays a list of accounts information including example fields of account name main phone city and primary contact . The information in the accounts summary screen is obtained from the CRM software application for example Microsoft Dynamics CRM 5.0 running on server computer . However instead of displaying the information in the accounts summary screen in a web browser the accounts summary screen is displayed in a grid of the email application .

There can be advantages for displaying the information in the grid . For example instead of having to manually select multiple pages of account summary screen information on a web browser for example by clicking a next page button on the web browser a user can simply scroll through the accounts summary screen using example scroll bar . In addition the native filtering aspects of the email application can be used to re sort or filter data shown in the different columns of the grid . In this manner CRM information from server computer is seamlessly integrated into the email application providing smooth scrolling and displaying the CRM information in a user interface with which the user of the email application is familiar.

When a user selects the campaigns subfolder a similar list of marketing campaign information is displayed on the user interface of the email application . The marketing campaign information is displayed in the same grid on the email application as the accounts summary screen . In a similar manner when a user selects the contacts subfolder the leads subfolder or the marketing lists subfolder CRM information corresponding to those folders is displayed in the same grid space on the email application . A scroll bar permits a user to smooth scroll through the displays of CRM information.

Caching a view can improve performance on client computer because CRM information is stored on client computer and is available for rendering on the email application without waiting for the CRM information to be retrieved from server computer . When a view is not cached the view is retrieved from the server computer each time the view is rendered. In this disclosure non cached views are also known as server views. Views that are not cached are rendered as server views.

For views that include a long list of CRM information for example a list of customer contacts or a list of products caching the view makes it possible to render the list in a scrollable window that is smoothly scrollable for a user. Using web services the email application obtains the size of the list from the server computer. The email application uses the size of the list to determine how many items are to be displayed. For example if the list contains 8 000 items and only 150 items can be displayed in one view the email application renders a scroll bar such that any of the 8 000 items may be displayed. For a cached view the email application obtains the CRM list information from the cache. When a user scrolls to a point in the list that is not currently stored in the cache the email application makes a request to server computer via web services to obtain the CRM list information that is needed for display.

When CRM information is stored in the cache on client computer if a cached view is selected for example by selecting the accounts subfolder the view is rendered from the cache rather than from the server computer . For example if there are connectivity or bandwidth issues between server computer and client computer because CRM information is obtained and rendered from the cache the user sees a faster response time than for a server view.

Server views are also rendered in a scrollable window in the email application . When a user scrolls to a portion of the view that is not currently displayed the client computer requests the CRM information for the portion of the view from the server computer . When the client computer receives the CRM information for the portion of the view that is not currently displayed the CRM information is displayed in the scrollable window. CRM information may be obtained from the server computer out of sequence if for example the user scrolls past more than one page of CRM information for example by scrolling to the bottom of the scrollable window.

In this manner the user views CRM information in a scrollable window whether the CRM information is cached or not. Furthermore the user is not required to manually click on a button to obtain a page of CRM information. The scroll bar acts as a paging control. The user simply scrolls to a portion of a view and CRM information is automatically and smoothly rendered for the view. The paging mechanism is transparent to the user.

Pinning a view refers to a user selecting a frequently accessed view or a view that is important to the user and placing a pin device into the view. A pinned view is a favorite view of the user. The pin device is a graphical representation of a pin or a thumb tack that secures the view in place on the display screen of the email application . Pinning a view designates the view for caching on the client computer.

For example a user may be a salesperson who has contacts in the states of Washington and Oregon. When the user presses the example contacts button on example user interface in examples tabs are displayed for several states including Washington and Oregon. The user may place pins on the tabs for Washington and Oregon to designate that these tabs are favorites. When a user selects the tab for Washington or the tab for Oregon a list of contacts is displayed. When the tab is pinned the list of contacts is obtained from the cache rather than from server computer . The cache receives periodic updates from the server computer . Also at periodic intervals the pinned view is updated from the cache.

Sometimes a user may pin a view that is a non cacheable view. A view can be non cacheable for various reasons. For a first example an administrator may set up one or more views to be uncacheable for security reasons. As a second example a server may have a particular size limitation in which caching is not permitted for a file above or below a particular size. A third example is when a view requires a server computer function before the view can be rendered.

For example a view may display a list of customers that have not placed an order within the last six months. Because the server computer for example server computer executes a server based function to determine which customers have not placed an order within the last six months a request is sent to the server computer to display this information and the list information cannot be cached at the client computer . When the user pins a view that is non cacheable a notification typically a message is displayed on the user interface of the email application . In some examples a message is not displayed. However pinning a non cacheable view is non blocking. This means that the view is still displayed even though the view is not cached. User actions are not blocked as a result of attempting to pin a view that is non cacheable.

In addition to pinned views frequently accessed views are also cached. A user may not be aware of pinned views or may not have the skill to use pinned views. The caching of frequently accessed views improves system performance for users who do not use pinned views. In examples a frequently accessed view is a view that is accessed a certain number of times e.g. three times within a configurable time period e.g. 72 hours . When the view is opened for the third time with the configured time period the view is cached. The view needs to remain open for at least seven seconds each time the view is accessed in order that accidental clicks are not counted. When a frequently accessed view is cached CRM information for the view from server computer is stored in a cache and the view is rendered from the cache. Other methods for determining frequency can also be used.

Executing a cached only action on a non cached view also causes a view to be cached. There are certain actions that can be performed at the email application for example on Microsoft Office Outlook 2007 messaging and collaboration software that cannot be performed via the CRM software running on server computer . For example when a view rendered at the email application includes multiple value fields the multiple value fields are typically sortable at the email application . For example the example accounts screen summary may be sortable by account name main phone city or primary contact etc. As other example the email application may provide the capability for grouping items. For example email messages may be grouped by messages received yesterday last week or last month. Whenever a user attempts to sort a multiple value field or attempts to group items in a view for a view which is non cached the action of sorting or grouping causes the view to be cached.

When an attempt is made to cache a view and the view cannot be cached the user is notified of the failed attempt at caching. The notification is typically an alert message on the user interface of the email application . When a view cannot be cached CRM information is obtained from server computer and a server view is rendered.

A resource intensive query is a query that is costly in terms of server resources. Whether a query is costly is determined by the amount of time a query takes to execute. A query which takes more than 45 seconds to obtain the first 5 000 bytes of CRM information from server computer is considered a costly query. When it takes more than 45 seconds to obtain the first 5 000 bytes of CRM information from server computer the CRM information is not cached at the client computer . However when it takes 45 seconds or less to obtain the first 5 000 or less bytes of CRM information from server computer the CRM information obtained from server computer is cached at client computer unless the CRM information is a technically difficult view or is specified as non cacheable by an administrator. In examples different values may be used for the time and size parameters used to determine whether CRM information can be cached.

When a determination is made not to cache CRM information because the time to obtain the first 5 000 bytes of CRM information is greater than 45 seconds a random number between one and eight selected and an another attempt at caching is made N hours after the first attempt at caching where N is the selected random number. When five attempts at caching fail meaning that the time to obtain the first 5 000 bytes of CRM information is greater than 45 seconds for each attempt the CRM information is displayed as a server view for one month. At the end of one month another attempt is made to cache the CRM information from the query.

An example of a technically difficult view is a view that requires information from server computer each time the view is rendered. Logic on server computer may be used to obtain the CRM information in the view before the view is rendered on the email application . Because the CRM information for the view is obtained from the server computer before the CRM information is rendered there is no advantage to storing the CRM information in the cache.

In addition administrators can configure the email application to disable caching. Caching may be disabled completely on the email application or caching may be disabled on a view by view basis. Administrators may configure the email application to disable caching due to privacy concerns for example to prevent the display of social security numbers or to comply with federal privacy regulations in HIPAA the Health Insurance Portability and Accountability Act of 1996 or in SOX the Sarbanes Oxley Act of 2002 . Administrators may also configure the email application to disable caching due to performance concerns. Other reasons for an administrator configuring the email application to disable caching are possible.

For a non cached view when a column is added to a view CRM information for the added column is obtained from server computer for the current rendered page. When a user scrolls to a new page CRM information is obtained from the server computer for the new page. Because CRM information is not cached it generally takes longer to display CRM information for the non cached view. In addition for the non cached view CRM information for the added column is not obtained in advance. CRM information for the added column is obtained for the current view. The user can continue to work while CRM information is obtained.

However the view currently displayed may include many pages of CRM information. Typically the client computer retrieves one page of data for the added column for each request for CRM information from the server computer . Typically each page of added column data is retrieved in sequence. However a user may scroll to a page of CRM information for which the added column has not yet been obtained. For example a user may scroll to the end of the accounts summary screen before all pages an added column for the accounts summary screen is retrieved from the server computer .

The performance characteristics of the client and server computers and the network conditions connecting the client computer and the server computer determine how long it takes to retrieve a page of data from the server computer. Depending on the performance characteristics and network conditions a user may scroll to the bottom of a view of CRM information before the corresponding page of CRM information is retrieved from the server computer.

When the user scrolls to a page of column data that has not been retrieved the page of column data takes priority over other pages of column data. For example if the accounts summary screen is constructed from eight pages of CRM information and added column data for only three pages has been retrieved when a user scrolls to the end of the accounts summary screen page 8 of CRM information for the accounts summary screen is requested from server computer . When page 8 of CRM information is retrieved from server computer the added column data from page 8 is smoothly integrated into the accounts summary screen .

The basic distinction between filtering and sorting in a cached view in contrast to a non cached view is that for the cached view the filtering and sorting is performed on the email application using CRM information stored in the cache. Thus for example when a user decides to filter the accounts name column to only display accounts that have been opened in the last 30 days the user selects the filtering criteria on the user interface of the email application and the accounts name column is filtered based on CRM information stored in the cache. When filtering or sorting occurs the user s focus is maintained meaning that the current page for example the account summary screen remains in the user s view while the filtering or sorting is occurring. Any CRM information removed from the view for example accounts 30 days and older remains in the cache.

For the non cached view the email application informs the server computer that a visible column is to be filtered and sorted and the server computer performs the filtering and sorting. The user selects filtering and sorting criteria just as for the cached view but for the non cached view the filtering or sorting criteria are sent to the server computer typically via a web services message. When the server computer processes the filtering or sorting criteria the server computer sends the email application an updated page of CRM information. The updated page of CRM information is rendered to incorporate the filtering and sorting criteria. When the updated page of CRM information is rendered on the email application the rendered view for example the accounts summary screen and the user s focus on the rendered view may be temporarily lost due to the time that it takes the server computer to process the updated page of CRM information and send the updated page of CRM information to the email application .

When an invisible column is sorted filtered or grouped for a cached view CRM information for the invisible column is obtained from the server computer and stored in the cache on client computer . The CRM information is obtained from the server computer because the cache only stores information needed to render visible portions of the view. Therefore information for the invisible column is not in the cache and needs to be obtained from the server computer . User focus on the current view for example on the accounts summary screen is maintained while the invisible column data is obtained from the server computer . The user can continue to work while the invisible column data is obtained. When the invisible column data is obtained and cached the current view is sorted filtered or grouped based the way in which the user customizes the current view.

When an invisible column is sorted filtered or grouped for a non cached view instructions are sent to the server computer regarding how an invisible column is to be sorted filtered or grouped. The instructions are typically sent to the server computer via a web services message sent from the client computer . When the server computer receives the instructions the server computer performs sorting filtering or grouping based on the instructions. The server computer then sends a page of sorted grouped or filtered CRM information to client computer for rendering on the email application . The focus of the rendered page of CRM information is typically on the first item of the list rendered on the email application .

Because email searches are performed on server computer for both cached views and non cached views search behavior is the same for both cached and non cached views. When a search is executed on the server computer grouping and arranging are disabled for the duration of the search. For a cached view grouping and arranging make use of the cache. Because the cache is updated during the search grouping and arranging are disabled until the search is completed. For a non cached view searching grouping and arranging are performed on the server computer . Because it is desirable that any grouping or rearranging be performed on the search results grouping and rearranging are disabled for the non cached view until the search is completed.

An irreconcilable view change is any view change that causes an update at the server computer for the entire view. For example if a complex change has occurred in a view for example adding many columns or rows and a determination is made at the email application that CRM information for the entire view is to be obtained from the server computer the view becomes a server view and CRM information for the view is removed from the cache. Once the view is updated a determination is made as to whether the view is to be cached again. For example when it is determined that the view is pinned the updated CRM information for the view is cached.

An example size limitation on the disk drive of the client computer is 1 gigabyte. An example size limitation for the example database module is 4 gigabytes. In addition an administrator may configure a size limitation for the disk drive or for the database module that is lower than the actual size limitations of the disk drive and the database module . When the available disk space on the disk drive is within 100 megabytes of the actual size limitation or the lower size limitation configured by the administrator the cache is aged and the oldest cached view is deleted from the cache on client computer . In examples the cache may be aged when the available disk drive space is more or less than 100 megabytes of the actual size limitation or the lower size limitation configured by the administrator.

The cache is also updated when a filtering operation is reset. A filtering operation is reset when a filter is no longer used. When a filter is no longer used a non filtered view is rendered and information relating to the filtered view is no longer cached. In examples the email application periodically performs a query typically every 15 minutes to determine whether a filter is still active. The 15 minute query interval is configurable.

The cache is also updated during a polling operation or during a manual refresh of the current view. Typically the email application uses a polled notification methodology. With polled notifications cache updates are obtained periodically from the server computer typically every 5 minutes. The polling interval is configurable. Manual updates occur when the user clicks a button having refresh functionality on the user interface of the email application .

When the CRM software is integrated into the email application at operation the CRM functionality is made available to a user of the email application. As shown in example CRM functionality includes a CRM menu item an example Dynamics CRM folder example Dynamics CRM subfolders including an accounts subfolder and example accounts summary screen . In examples the accounts summary screen is rendered when a user selects the accounts subfolder .

At operation CRM information is received from a server computer for example from server computer . The CRM information is received when a user at the email application performs an action related to the display of CRM information. For example when the user selects the example accounts subfolder the email application requests CRM information from the server computer related to the accounts subfolder . The requested information is received at the client computer at operation .

At operation a determination is made as to whether the received CRM information is to be cached at the client computer. The example caching logic module automatically determines whether the received CRM information is to be cached based on a caching algorithm. Actions or conditions included as rules in the caching algorithm that determine whether received CRM information is to be cached include whether a user pins a view whether a view is a frequently accessed view and whether a multiple value field in the view is grouped or sorted.

At operation when a determination is made that the view is not to be cached at operation the view is displayed as a server view. When a view is displayed at a server view all updates to the view are obtained from the server computer for example from server computer instead of being obtained from the cache.

At operation when a determination is made that the view is to be cached at operation an attempt is made to cache the received CRM information for the view. An attempt is made to cache the received CRM information because errors sometimes occur when storing information in a cache. The errors are typically related to the cache being at a predetermined size limit although other errors for example hardware errors can also occur.

At operation a determination is made as to whether the cache operation succeeded. At operation when a determination is made that the cache operation succeeded meaning that the CRM information is stored in the cache at operation the CRM information is displayed as a cached view. The cache is periodically updated from the server computer and the view is updated with CRM information obtained from the cache.

At operation a determination is made as to whether a view has been pinned. A view is pinned when a user attaches a graphical representation of a pin thumbtack or similar pinning object to view. When it is determined at operation that a view has been pinned at operation an attempt is made to cache the view.

At operation a determination is made as to whether a view is a frequently accessed view. In examples a frequently accessed view is a view that has been accessed at least three times in a 72 hour period and in which the view is accessed for at least seven seconds each time. Accessing a view for at least seven seconds minimizing the possibility of false clicks and thereby false determinations that a view is to be cached. The time period for which a view is accessed three times is configurable. When it is determined at operation that a view is a frequently accessed view at operation at attempt is made to cache the view.

At operation a determination is made as to whether a cache only action has been performed on a view. Examples of cache only actions are grouping or sorting on a multiple value field in a view filtering or sorting on a column in the view and adding a column to an already cached view. Other cache only actions are possible. When it is determined at operation that a cache only action has been performed on a view at operation an attempt is made to cache the view.

In examples when it is determined that a view has not been pinned per operation a view is not a frequently accessed view per operation and a view is not a cache only view per operation at operation the view is displayed as a server view. When the view is obtained as server view all updates for the view are obtained from the server computer for example from server computer rather than from the cache. Additional actions or conditions that cause a view to be cached are possible.

With reference to example components of client computer are shown. In example embodiments the client computer is a computing device. The client computer can include input output devices a central processing unit CPU a data storage device and a network device. The other client computer and the server computers can be configured in a similar manner.

In a basic configuration the client computer typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device the system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system suitable for controlling the operation of a networked personal computer such as the Windows operating systems from Microsoft Corporation of Redmond Wash. or a server such as Microsoft Exchange Server 2007 also from Microsoft Corporation of Redmond Wash. The system memory may also include one or more software applications and may include program data.

The client computer may have additional features or functionality. For example the client computer may also include computer readable media. Computer readable media can include both computer readable storage media and communication media.

Computer readable storage media is physical media such as data storage devices removable and or non removable including magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer readable storage media can include but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by client computer . Any such computer readable storage media may be part of the client computer . Client computer may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included.

The client computer may also contain communication connections that allow the device to communicate with other computing devices such as over a network in a distributed computing environment for example an intranet or the Internet. Communication connection is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

The various embodiments described above are provided by way of illustration only and should not be construed to limiting. Various modifications and changes that may be made to the embodiments described above without departing from the true spirit and scope of the disclosure.

