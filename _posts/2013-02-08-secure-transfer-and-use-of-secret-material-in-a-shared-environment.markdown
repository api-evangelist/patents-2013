---

title: Secure transfer and use of secret material in a shared environment
abstract: Aspects related to the secure transfer and use of secret material are described. In one embodiment, public vendor and provider keys are provided to a customer and encrypted secret material is received in return. The encrypted secret material may include a customer secret material encrypted by the public vendor and provider keys. The encrypted secret material is imported into a trusted execution environment and decrypted with private provider and vendor keys. In this manner, a provider of cryptographic processes is not exposed to the secret material of the customer, as the customer secret material is decrypted and stored within the trusted execution environment but is not accessed by the provider in an unencrypted form. In turn, the provider may receive various instructions to perform cryptographic operations on behalf of the customer, and those instructions may be performed by the trusted execution environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141769&OS=09141769&RS=09141769
owner: Amazon Technologies, Inc.
number: 09141769
owner_city: Seattle
owner_country: US
publication_date: 20130208
---
Generally a trusted execution environment or hardware security module is a device for processing and securely maintaining digital keys securely generating keys securely performing cryptographic processes and or accelerating cryptographic processes. A hardware security module when configured to adhere to certain access permission requirements requires strong authentication before permitting access to the secure services and operations provided by the module. Hardware security modules devices may be embodied in various forms including computer plug in cards and network devices coupled to servers via secure networks and in certain aspects provide both digital and physical protection for digital key materials from unauthorized use and access.

A hardware security module HSM comprises a trusted execution environment for processing and securely maintaining digital keys securely generating keys securely performing cryptographic processes and or accelerating cryptographic processes. An HSM when configured by certain access permission requirements requires strong authentication before permitting access to the secure services and operations of the module. It is noted that however the use and maintenance of an HSM is costly requires specialized knowledge and adds a significant amount of complexity to a processing system.

Thus in many circumstances entities that rely upon cryptographic processes may wish to rely upon a cryptographic processing vendor or provider to outsource the overhead associated with such processing. However a customer entity may be reluctant to share secret key materials with a vendor or provider of cryptographic services with the reservation that such secret materials may be maliciously or inadvertently shared with others leading to a security breach. Depending upon the scope of use of secret key materials a security breach may result in costly efforts to implement a new security system with new security keys.

To address the security limitations in connection with sharing secret key materials with a cryptographic services provider aspects of the embodiments described herein rely upon certain logic functions and processes that permit the secure transfer of secret key material to a cryptographic services processing vendor and secure use of the secret key material by the vendor. Additionally the techniques result in secure transfer and use of the secret key material without the vendor having any actual access to it. In this sense a cryptographic services processing vendor has reduced exposure to the secret key material of its customers and thus lower exposure to liability. Thus a secret services provider such as a cloud service provider or intra organizational shared services group is able to perform operations with secret keys on behalf of customers potentially many customers simultaneously at high volumes and performance without the liability associated with custodianship of customer secret key materials.

According to aspects described herein the secure transfer and use of secret key material is described. In one embodiment vendor and provider keys are provided to a customer and an encrypted key is received in return. The encrypted key may include a customer key encrypted by the vendor and provider keys. The encrypted key is decrypted with the provider key and while still encrypted by the vendor key imported into a security module for the secret decryption and storage of the customer key. In this manner a provider of cryptographic processes is not exposed to the customer key as it is stored within the security module and cannot be accessed in an unencrypted form. In turn the provider may receive various instructions to perform cryptographic operations on behalf of the customer and those instructions may be performed secretly via the security module.

In the following discussion a general description of a system for the secure transfer and use of secret key material and its components is provided followed by a discussion of the operation of the same.

The provider computing environment may be embodied as a computer computing device or computing system. In certain embodiments the provider computing environment may comprise one or more computing devices arranged for example in one or more server or computer banks. The computing device or devices may be located at a single installation site or distributed among different geographical locations. For example the provider computing environment may include a plurality of computing devices that together comprise a cloud computing resource a grid computing resource and or other distributed computing arrangement. In some cases the provider computing environment may comprise an elastic computing resource where an allotted capacity of processing network storage or other computing related resources varies over time.

The network may comprise the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks other suitable networks or combinations thereof. It is noted that the provider computing environment may communicate with the customer client device over various protocols such as hypertext transfer protocol HTTP simple object access protocol SOAP representational state transfer REST real time transport protocol RTP real time streaming protocol RTSP real time messaging protocol RTMP user datagram protocol UDP transmission control protocol TCP and or other protocols for communicating data over the network without limitation. It is further noted that in certain circumstances the provider computing environment may communicate with the customer client device using a secure channel over the network . Additionally the client device may communicate with the TEE vendor using a secure channel over the network . A secure channel over the network may be established using a cryptographic protocol such as transport layer security TLS secure sockets layer SSL or other similar cryptographic protocols.

The provider computing environment comprises various functional and or logic i.e. device or circuit elements that may be executed or directed by the provider computing environment according to various embodiments described in further detail below. As illustrated in the example embodiment of the provider computing environment comprises a provider data store a trusted execution environment TEE a secret services engine and a provider validator . According to features described herein the provider computing environment is configured to securely receive and use secret materials provided by customers. In this context the provider computing environment comprises a cryptographic services processing vendor or provider.

In various environments the TEE comprises one or a plurality of trusted execution environments. In one embodiment each trusted execution environment may comprise a hardware security module. Generally the TEE provides secure storage for secret materials such as secret cryptographic key materials used for encrypting and decrypting data in various cryptographic operations. Thus the TEE may comprise a group or world of secret and secure processing modules spanning more than one TEE device. The TEE group may rely upon one or more global or individual access permission models for one or more customers. Generally the TEE may operate on symmetric keys asymmetric key pairs and certificates used in key cryptography. The TEE is designed such that it does not allow for the exportation of secret key materials or similar secret data in plaintext form even when migrating between TEEs or performing backup operations. In some embodiments the TEE provides a type of trusted environment hardware cryptographic accelerator. The hardware acceleration provided by the TEE is especially useful for example when operating with 1024 bit or 2048 bit key operations.

In various embodiments the validator may comprise a third party or a service or component of either the provider computing environment or the TEE vendor . Generally given a key identifier for example the validator verifies that a certain key is valid and not revoked. Further aspects and functions of the validator are described below.

The TEE vendor comprises a manufacturer of hardware security modules. In one embodiment the TEE vendor is a manufacturer of the TEE . As a manufacturer and vendor of TEE devices the TEE vendor may maintain a provider table of providers or customers and a list of vendor public keys of TEE devices. That is the provider table includes a list of customers that purchased TEE devices manufactured by the TEE vendor and the list of vendor public keys may include a list of public key components of asymmetric key pairs securely stored and used by TEE devices manufactured by the TEE vendor . Alternatively the vendor public keys may further include data to verify that the vendor public keys were validly issued and active according to records of the TEE vendor .

For the provider computing environment to securely receive and use secret materials of a customer for cryptographic processes the customer client device is provided with vendor and provider keys by the provider computing environment and or the TEE vendor . In certain embodiments the vendor and provider keys may comprise public key components of asymmetric key pairs. In turn the client device encrypts secret customer material such as symmetric or asymmetric key materials using the public vendor and provider keys to provide double encrypted secret material. The client device then forwards the double encrypted secret material to the provider computing environment . The client device may also forward metadata to the provider computing environment along with the double encrypted key. In various embodiments the metadata includes data that indicates that certain validations have occurred at the client device and an indicator or identifier of the provider and vendor keys used to encrypt the customer s secret materials.

At the provider computing environment in one embodiment the secret services engine decrypts the double encrypted secret material with a private provider key. The private provider key comprises the private component of the public provider key relied upon by the client device . After decrypting the double encrypted secret material with the private provider key the result comprises the customer secret material encrypted by the public vendor key i.e. vendor encrypted secret material . The secret services engine then imports the vendor encrypted secret material into the TEE for further processing. Afterwards within the secure processing area of the hardware security module the secret services engine directs the TEE to decrypt the customer secret material by decrypting the vendor encrypted secret material with the private vendor key of the TEE . The private vendor key comprises the private component of the public vendor key relied upon by the client device . It is noted that by design the provider computing environment is not provided access to the secret material of the customer in an unencrypted or plaintext form.

In another embodiment at the provider computing environment the secret services engine receives the double encrypted secret material from the client device and imports the double encrypted secret material into the TEE for processing. Afterwards within the secure processing area of the hardware security module the secret services engine directs the TEE to decrypt the customer secret material by decrypting the double encrypted secret material with the private provider and vendor keys stored within the TEE . Again the provider computing environment is not provided access to the secret material of the customer in an unencrypted or plaintext form.

The provider data store may be representative of a plurality of data stores arranged in various configurations at one or multiple geographic locations among embodiments. Among other data data structures and or programs in various embodiments the provider data store stores one or more provider public keys and one or more vendor public keys . In additional aspects the data stored in the provider data store is associated with the operation of the various functional or application logic elements of the provider computing environment as described in further detail below.

The customer client device is representative of one or a plurality of client devices of customers. The client device may comprise any processor or computer based device or system including those embodied in the form of a desktop or server computer among other example computing devices and systems. The client device may execute applications including client application which is representative of one or a plurality of applications executing on the customer client device .

The client application may include one or more applications executing concurrently. In certain aspects one or more of the applications rely upon the generation and communication of data in a secure manner. For example the application may comprise an application for payment processing application that operates with personal information e.g. health care information or financial information or application related to the distribution of data protected by intellectual property rights. The client application may refer to and access data stored in the customer data store . The data store may include customer data that must be securely communicated and protected by the client application . Other features and functions of the customer client device are described in further detail below.

Next a further description of the operation of the various components of the networked environment is provided with reference to A B A B and C.

As noted above the networked environment is designed such that the customer client device may rely upon the provider computing environment to perform certain cryptographic processes on behalf of the customer client device using secret material provided by the customer client device . The cryptographic processes may include for example one or a combination of encrypting decrypting translating hashing signing or validating a signature. It is noted however that other cryptographic processes are within the scope and spirit of the embodiments described herein. In one embodiment the secret material of the customer comprises a public key of an asymmetric key pair for example. However other secret material of the customer is within the scope and spirit of the embodiments described herein.

Before the provider computing environment can operate using the secret material of the customer client device the secret material must be securely transferred from the customer client device to the provider computing environment . To achieve this secure transfer the provider computing environment and or the TEE vendor provide the customer client device with public vendor and provider keys. The public vendor key K is associated with the TEE . In one embodiment Kis the public key of an asymmetric key pair of the TEE . Similarly in one embodiment the public provider key K is the public key of an asymmetric key pair of the provider computing environment .

The secret services engine may retrieve the public vendor and provider keys from the provider data store i.e. from storage locations and and forward them to the customer client device via the network . In another embodiment the TEE vendor may forward the public vendor key to the client device via the network . In turn the client application of the customer client device encrypts secret materials of the customer using the received public vendor and provider keys. In the exemplary embodiment described above the vendor and provider keys each comprise a public key of an asymmetric key pair. However in other embodiments the vendor and provider keys may comprise symmetric keys for example or other types of keys or certificates.

After the customer client device receives the public vendor and provider keys but before the customer client device encrypts any secret customer material in certain embodiments the customer client device validates the public vendor and provider keys. For example the customer client device may contact the validator and the validator may verify that the keys are currently valid for use. Alternatively or additionally the provider validator of the TEE may verify that the public provider key is currently valid for use. Similarly the vendor validator of the TEE vendor may verify that the public vendor key is currently valid for use.

In one embodiment the customer client device contacts the TEE vendor to verify that the received vendor key was actually and validly issued for use. The TEE vendor may refer to the provider table and or the vendor public keys to verify that the public vendor key received by the client device was validly issued to a trusted execution environment owned in connection with the provider computing environment . Thus the customer client device is able to validate that the public vendor and provider keys are valid and authorized for use before encrypting any sensitive customer material and forwarding that material to the provider computing environment .

For validation of the public vendor and provider keys the validation mechanism is selected for resistance to DNS spoofing man in the middle MITM attacks and similar security attacks such that the customer has a degree of assurance that the validations are legitimate. For example end to end validation TLS SSL server authentication and similar mechanisms may be used in certain embodiments to verify an identity of a validation endpoint. Proof of possession ceremonies over such a channel e.g. signing encryption based on private key possession by the TEE vendor etc. may also be used to provide even stronger validation.

The customer client device then forwards the double encrypted key KKKto the provider computing environment via the network . It is noted that in certain embodiments the encryption of KKby the public provider key Kmay be replaced by the communication of KKvia a secure channel of the network . Use of the secure channel in that case may take the place of the encryption of KKby the public provider key K. For example before communicating KKvia the network the provider computing environment and the customer client device may establish a secure channel between each other using TLS SSL or other similar cryptographic network communications protocols.

In the embodiment illustrated in after extracting the vendor encrypted key KK the secret services engine imports the vendor encrypted key KKinto the TEE . It is noted that in embodiments where KKis communicated by a secure channel via the network without being encrypted by the provider key K the secret services engine may directly import the vendor encrypted key KKinto the TEE .

After importing the secret services engine directs the TEE to extract the customer key K from the vendor encrypted key KKby decrypting the vendor encrypted key KKwith the private vendor key K. Thus the TEE extracts the customer key K by the decryption operation as illustrated in . The decryption operation may comprise any well known decryption operation such as an XOR or other operation.

The secret services engine further directs the TEE to store the customer key K within the customer partition A of the TEE for example. Referring back to the TEE comprises various customer partitions including partitions A to N . Each of the customer partitions may be reserved for a respective customer to maintain separation among customers. Each of the customer partitions may be used to store secret key materials of respective customers of the provider computing environment .

Thus a trusted execution environment or group of trusted execution environments may be relied upon by the provider computing environment to service more than one customer. In various embodiments the customer partition A may be designated or assigned to a certain customer or client device and the customer or client device may specify use of that partition for the storage of its secret materials. Similarly the customer or client device may specify the use of a certain TEE when the TEE comprises several TEEs.

Once the customer key K is stored in the TEE the provider computing environment is able to execute cryptographic processes using the customer key K on behalf of the customer. As discussed below before performing any cryptographic processes on secret key material received from a customer the provider computing environment may confirm that the material has been stored in the TEE . This confirmation may be by way of a confirmation message to the client device .

It is noted that the provider computing environment has no access to the customer key K in a compromised e.g. plaintext form. Instead the provider computing environment passes the customer key K to the TEE in an encrypted form. Thus the provider computing environment is not exposed to the customer key K and the customer need not expose the customer key K to the provider computing environment . In this secret decryption and storage of the customer key K is illustrated by the dashed box surrounding the decryption operation as this operation is performed by and completely within the TEE . Further the trusted environment design of the TEE ensures that neither the customer key K nor the private key compliment Kto the public component of the vendor key Kis accessible to the provider computing environment at any time.

Thus by design the provider computing environment cannot extract the customer key K from the TEE to distribute or exploit it. As such the customer of the provider computing environment need to worry about exposing the customer key K to the provider computing environment . In certain circumstances the provider computing environment may backup customer key materials among TEEs to protect against catastrophic loss. In certain embodiments where the TEE includes several TEE modules for example the modules may be operated at different geographic locations as a fault safe security measure.

Once a customer s secret materials are stored within the TEE the customer can forward one or more cryptographic operation instructions from the client device to the provider computing environment . In one embodiment an instruction to perform a cryptographic operation includes an operation identifier of the cryptographic operation to be performed and a key identifier that identifies the customer secret key to be used. As noted above example cryptographic operations to be performed by the provider computing environment on behalf of the customer client device include encrypting decrypting translating hashing signing or validating a signature. The provider computing environment may interact or communicate with the TEE using a standard TEE application programming interface API such as the PKCS 11 or another similar public key cryptography standard PKCS interface to communicate instructions for performance of the operation.

In other aspects the customer client device may forward revocation data to the provider computing environment for example to define instructions conditions or a timeframe related to determining whether a customer s secret key material should be revoked or are valid for use. For example the revocation data may specify a period of time of validity or a network address at which the continued validity of key materials may be checked along with a token for access to an interface at the address.

In this context illustrates example states for encryption of revocation data and secret material by the customer client device of the networked environment of and illustrates example states for decryption of encrypted revocation data and the secret material by the provider computing environment of the networked environment of .

In the customer key K is similar to the customer key K of the public vendor key Kis similar to the public vendor key of and the public provider key Kis similar to the public provider key of . Further the encryption operations and are similar to the encryption operations and of and the decryption operations and are similar to the decryption operations to and of . However as illustrated in it is noted that revocation data R is encrypted along with the customer key K using both the public vendor and provider keys to arrive at R KKK. As with the encrypted key KKKof the encrypted revocation data and key R KKKis forwarded from the customer client device to the provider computing environment .

In one embodiment as illustrated in the secret services engine decrypts the encrypted revocation data and key R KKKwith the private provider key K to arrive at R KK. The secret services engine then imports R KKinto the TEE . After importing the secret services engine directs the TEE to extract the revocation data R and customer key K by decrypting R KKwith the private vendor key K as illustrated in . The secret services engine further directs the TEE to store the revocation data R and the customer key K within the customer partition A of the TEE .

It is noted again that the provider computing environment has no actual access to either the revocation data R or the customer key K. Instead the provider computing environment passes the revocation data R and the customer key K to the TEE in an encrypted form. Thus the provider computing environment is not exposed and has no access to the revocation data R. This prevents malicious manipulation of the revocation data R by the service provider. As such the customer can be assured that it maintains control of the revocation of its customer key K.

It is noted that revocation and requests for revocation of customer keys are coordinated by the revocator of the TEE . In certain aspects and embodiments the revocation data R specifies a revocation endpoint along with the customer key K. For keys associated with certificates the structure of the certificate e.g. x.509 or similar profile may provide a nominal manner of specifying revocation data similar to R and this approach to revocation may be leveraged for convenience in some embodiments. In this case the certificate may be used in place of the revocation data R.

In other aspects and embodiments a TEE enforced access block deactivates the customer key K if a TEE revocation check to an R specified network address succeeds and a response to the revocation check is key revoked i.e. permanent failure . The TEE revocation check interval may be configurable by the customer or the revocator of the TEE in various embodiments but the lower and upper bounds may be constrained by the TEE to prevent a cryptographic service provider from failing to honor revocation calls indefinitely. For example the TEE may require that a revocation check be performed by the revocator at an interval between seconds and days. To address the chance that a malicious cryptographic service provider redirects TEE revocation check traffic to a fraudulent revocation service the revocation data R may further include server validation data for a server of a revocation service.

As an alternative to the decryption technique illustrated in illustrates example states for decryption of double encrypted secret material by the TEE of the provider computing environment in according to various embodiments of the present disclosure. As compared to after receiving the double encrypted key KKKfrom the client device the secret services engine imports it into the TEE without decrypting it by the private provider key K. The secret services engine then directs the TEE to decrypt the encrypted key KKKwith the private provider key Kat decryption operation to provide KKas a result.

The secret services engine also directs the TEE to generate the customer key K by decrypting KKwith the private vendor key Kat decryption operation as illustrated in . The secret services engine also directs the TEE to store the customer key K within the customer partition A of the TEE or another partition. The provider computing environment still has no actual access to the customer key K. Instead the provider computing environment passes the customer key K to the TEE in an encrypted form.

Further as an alternative to the decryption technique illustrated in illustrates example states for decryption of double encrypted secret material by the TEE of the provider computing environment in according to various embodiments of the present disclosure. As compared to the embodiment described above in connection with after receiving the encrypted revocation data and key R KKKfrom the client device the secret services engine imports it into the TEE without decrypting it by the private provider key K. The secret services engine then directs the TEE to decrypt the encrypted revocation data and key R KKKwith the private provider key Kat decryption operation to provide R KKas a result.

The secret services engine also directs the TEE to generate the revocation data R and customer key K by decrypting R KKwith the private vendor key Kat decryption operation as illustrated in . The secret services engine also directs the TEE to store the revocation data R and the customer key K within the customer partition A of the TEE or another partition. The provider computing environment still has no actual access to either the revocation data R or the customer key K. Instead the provider computing environment passes the revocation data R and the customer key K to the TEE in an encrypted form.

In other aspects of the embodiments described herein certain officers such as domain officers security officers or partition officers may be configured for the TEE using provider defined K of N quorums. In other words as a further security assurance mechanism the TEE may be configured to permit particular administrative or access rights to certain officer classes or individuals. Each individual maintains a security card in their possession. The number of security cards associated with an officer or class type is defined by N and the number of security cards required to gain access to the rights of the officer is defined by K. Thus K of N security cards are required to gain access to the administrative or access rights of a certain officer class. For example access to the rights of partition officers may require a provider defined 2 of 3 quorum among the partition officers.

In one embodiment partition officers may be granted administrative rights to define the customer partitions A to N . However the partition officers have no administrative or access abilities to export or otherwise obtain or infer plaintext customer keys. In exemplary embodiments of the provider computing environment no officer quorum i.e. domain officers security officers or partition officers have permissions to modify access control lists of the customer partitions A to N .

Referring next to flowcharts illustrating example processes performed by the client device and the provider computing environment are provided. It is understood that the flowcharts of provide merely one example of various functional arrangements that may be employed to implement the operations of the client device and the provider computing environment as described herein. In certain aspects the flowcharts of may be viewed as depicting an example of steps performed by the client device and the provider computing environment according to one or more embodiments.

At reference the customer client device receives public vendor and provider keys. The keys may be received from one or more entities including the provider computing environment and or the TEE vendor in various embodiments. As one example the public vendor key may be received by the client device from the TEE vendor and the public provider key may be received by the provider computing environment .

At reference the customer client device contacts one or more of the validator the TEE vendor and the provider computing environment to validate the public keys as being valid. At reference the customer client device encrypts secret materials such as a secret customer key for example with the public vendor key received at reference to provide vendor encrypted secret material as a result. For example the generation of a vendor encrypted key may be performed based on the encryption of the customer key K with the public vendor key Kaccording to the example described in connection with . Additionally in certain embodiments vendor encrypted revocation data may be created at reference based on the encryption of revocation data R with the public vendor key Kaccording to the example described in connection with .

Continuing to reference the customer client device encrypts the result from reference the vendor encrypted secret material with the public provider key to provide double encrypted secret material. For example according to the example described in connection with the generation of a double encrypted key KKKmay be performed based on the encryption of the vendor encrypted key KKwith the public provider key K. Additionally double encrypted revocation data may be generated at reference according to the example described in connection with .

Once the double encrypted secret material is generated at reference the customer client device transmits the double encrypted secret material to the provider computing environment at reference . Based on the multiple encrypted nature of the secret material transmitted to the provider computing environment the customer client device is able to securely transfers secret materials and or revocation data to the provider computing environment at reference .

At reference the customer client device also prepares and transmits metadata associated with the double encrypted secret material to the provider computing environment . The metadata may include an identifier that certain validations have occurred at the customer client device an identifier of the public vendor key used to encrypt the double encrypted key an identifier of the public provider key used to encrypt the double encrypted key a TEE or TEE partition identifier or other associated information that identifies the customer or the client device for example. This metadata may be relied upon by the provider computing environment in certain aspects as described in further detail below. In various embodiments the client device may generate a signature of the metadata or sign the metadata using a key so that the provider computing environment can verify that the metadata was provided by the client device .

After the customer client device transmits the double encrypted secret material and or metadata to the provider computing environment at reference the provider computing environment extracts and stores the secret material. The provider computing environment then transmits a confirmation that the secret material has been extracted and stored as further described below with reference to . This confirmation is received by the customer client device at reference .

Once the client device is certain that the secret material have been transferred to the provider computing environment the customer client device is ready to transmit cryptographic operation instructions to the provider computing environment . Thus at some time after reference the client device transmits one or more cryptographic operation instructions to the provider computing environment at reference . That is after the customer s secret material has been securely transferred to and stored by the provider computing environment the customer client device is free to transmit instructions for the performance of various cryptographic operations on its behalf. In turn the provider computing environment processes the cryptographic operations with secret material provided by the customer client device using the TEE without ever being exposed to the secret material it operates with.

Starting at reference the provider computing environment receives double encrypted secret material from the customer client device . For example the double encrypted secret material may comprise the customer key K encrypted by both the public vendor key Kand the public provider key K according to the example of . In another embodiment the provider computing environment receives encrypted revocation data and secret material from the customer client device . For example the encrypted revocation data and secret material may comprise the revocation data R and the customer key K encrypted by both the public vendor key Kand the public provider key K according to the example of .

At reference the provider computing environment may also receive metadata associated with the received double encrypted key. The metadata may include an identifier that certain validations have occurred at the customer client device an identifier of the public vendor key used to encrypt the double encrypted key an identifier of the public provider key used to encrypt the double encrypted key a TEE or TEE partition identifier to be used to decrypt and store secret material or other associated information that identifies the customer or the client device for example. This metadata is relied upon by the provider computing environment in certain aspects discussed below. To verify that the metadata was provided from a certain customer the metadata may be signed by the customer client device and the provider computing environment may verify the signature of the client device before operating with the metadata.

In one embodiment at reference the secret services engine decrypts the double encrypted secret material with the private provider key to provide a vendor encrypted key as a result. In other words at reference the secret services engine extracts vendor encrypted secret material from the double encrypted secret material by decrypting the double encrypted secret material with the private provider key. The decryption at reference may be accomplished according to the examples described in connection with .

When extracting the vendor encrypted secret material at reference the secret services engine may also import the vendor encrypted secret material into the TEE . Particularly the secret services engine may import the vendor encrypted secret material into the TEE using a standard API protocol of the TEE . It is further noted that according to the examples described in connection with the secret services engine may additionally decrypt or extract any encrypted revocation data using the private provider key at reference to provide vendor encrypted revocation data as a result. The vendor encrypted revocation data may also be imported into the TEE by the secret services engine .

In another embodiment at reference the secret services engine imports the double encrypted secret material into the TEE and directs the TEE to decrypt the double encrypted secret material with the private provider key to provide the vendor encrypted secret material as a result. For example the decryption or extraction at reference may be accomplished according to the examples described in connection with . It is further noted that the secret services engine may additionally direct the TEE to decrypt or extract any received encrypted revocation data at reference .

At reference the secret services engine directs the TEE to decrypt the vendor encrypted secret material with the private vendor key to provide the customer secret material as a result. Further at reference the secret services engine directs the TEE to store the customer secret material. The secret services provider may also direct the TEE to decrypt any vendor encrypted revocation data with the private vendor key and store the revocation data. As one example the generation and storage of the customer secret material and or the revocation data may be accomplished according to the examples of B and C as described above.

The extraction at references and may be based upon in certain aspects metadata received at reference . For example the metadata received at reference may include an identifier of the provider and vendor keys to be used for decryption at references and . The metadata may also specify a certain TEE to be used for decryption and a partition of a TEE to store a customer s extracted secret material and or revocation data.

Here it is noted that the extraction and storage of the customer secret material and or the revocation data at reference is accomplished without the provider computing environment being exposed or having access to the customer secret material and or the revocation data.

At reference the provider computing environment confirms the extraction and storage of the secret material received at reference . This confirmation may be by way of transmission of a confirmation to the customer client device specifying that the secret material received at reference has been securely stored.

With the secret data securely transferred and stored within the TEE of the provider computing environment the provider computing environment is ready to receive a cryptographic operation instruction from the customer client device at reference . For example the provider computing environment may receive a cryptographic operation instruction to decrypt translate hash sign or validate a signature. It is noted that the cryptographic operation instruction received at reference may be received along with an operation identifier of the cryptographic operation to be performed a key identifier of a key to be used during the cryptographic operation and or TEE and TEE partition identifiers. At reference the secret services engine directs the TEE to perform the cryptographic operation as specified by the instruction received at reference .

At some point during or after the performance of the cryptographic operation at reference the provider computing environment may forward a result of the operation to the customer client device or any other specified network location. In this manner the customer client device may rely upon the provider computing environment to process cryptographic instructions on its behalf. Further it is noted that a customer that relies upon the provider computing environment to process cryptographic instructions does not need to expose any secret key information or material to the provider computing environment . It is also noted that in some embodiments one or more revocation checks are performed based on any received revocation data to determine whether a customer key is still active and valid for use. For example before processing a cryptographic operation at reference the revocator of the trusted execution environment may perform a revocation check call to determine whether a specified customer key is still active and valid for use as discussed above. If the revocation check call identifies that a specified customer key has been revoked the revocator revokes the secret customer key for use by the trusted execution environment .

In various embodiments the memory stores data and software or executable code components executable by the processor . For example the memory may store executable code components associated with the TEE the secret services engine and the logical elements thereof for execution by the processor . The memory may also store data such as that stored in the private data store among other data.

It should be understood and appreciated that the memory may store other executable code components for execution by the processor . For example an operating system may be stored in the memory for execution by the processor . Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

As discussed above in various embodiments the memory stores software for execution by the processor . In this respect the terms executable or for execution refer to software forms that can ultimately be run or executed by the processor whether in source object machine or other form. Examples of executable programs include for example a compiled program that can be translated into a machine code format and loaded into a random access portion of the memory and executed by the processor source code that can be expressed in an object code format and loaded into a random access portion of the memory and executed by the processor or source code that can be interpreted by another executable program to generate instructions in a random access portion of the memory and executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example a random access memory RAM read only memory ROM magnetic or other hard disk drive solid state semiconductor or similar drive USB flash drive memory card optical disc e.g. compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory component.

In various embodiments the memory may include both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example a random access memory RAM read only memory ROM magnetic or other hard disk drive solid state semiconductor or similar drive USB flash drive memory card accessed via a memory card reader floppy disk accessed via an associated floppy disk drive optical disc accessed via an optical disc drive magnetic tape accessed via an appropriate tape drive and or other memory component or any combination thereof. In addition the RAM may comprise for example a static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and or other similar memory device. The ROM may comprise for example a programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM or other similar memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel respectively or in combination. Thus the local interface may be an appropriate network or bus that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example a load balancer that performs load balancing. The processor may be of electrical or of some other available construction.

As discussed above the TEE the secret services engine and the logical elements thereof may be embodied in part by software or executable code components for execution by general purpose hardware. Alternatively the same may be embodied in dedicated hardware or a combination of software general specific and or dedicated purpose hardware. If embodied in such hardware each can be implemented as a circuit or state machine for example that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts or process diagrams of are representative of certain processes functionality and operations of embodiments discussed herein. Each block may represent one or a combination of steps or executions in a process. Alternatively or additionally each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as the processor . The machine code may be converted from the source code etc. Further each block may represent or be connected with a circuit or a number of interconnected circuits to implement a certain logical function or process step.

Although the flowcharts or process diagrams of illustrate a specific order it is understood that the order may differ from that which is depicted. For example an order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the TEE the secret services engine and the logical elements thereof that comprise software or executable code components can be embodied or stored in any tangible or non transitory computer readable medium or device for execution by an instruction execution system such as a general purpose processor. In this sense the logic may comprise for example software or executable code components that can be fetched from the computer readable medium and executed by the instruction execution system. Thus the instruction execution system may be directed by execution of the instructions to perform certain processes such as those illustrated in . In the context of the present disclosure a computer readable medium can be any tangible medium that can contain store or maintain any logic application software or executable code component described herein for use by or in connection with an instruction execution system.

The computer readable medium can comprise any physical media such as for example magnetic optical or semiconductor media. More specific examples of suitable computer readable media include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may comprise a random access memory RAM including for example a static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may comprise a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other similar memory device.

Although embodiments have been described herein in detail the descriptions are by way of example. The features of the embodiments described herein are representative and in alternative embodiments certain features and elements may be added or omitted. Additionally modifications to aspects of the embodiments described herein may be made by those skilled in the art without departing from the spirit and scope of the present invention defined in the following claims the scope of which are to be accorded the broadest interpretation so as to encompass modifications and equivalent structures.

