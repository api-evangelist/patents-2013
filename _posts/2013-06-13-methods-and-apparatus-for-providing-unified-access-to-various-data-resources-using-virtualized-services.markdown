---

title: Methods and apparatus for providing unified access to various data resources using virtualized services
abstract: A non-transitory processor-readable medium stores code representing instructions to be executed by a processor. The code causes the processor to receive, from a client device, a request for a service associated with a set of compute devices. The processor is caused to define a normalized request, based on a metadata associated with service requirements. The processor is caused to define a translated request for a compute device from the set of compute devices based on the normalized request. The processor is caused to send the translated request to the compute device in accordance with an endpoint interface associated with a format of the translated request. The processor is caused to receive data associated with the service from the compute device, in response to the translated request. The processor is caused to send, to the client device, a response having a format associated with the client device based on the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09047308&OS=09047308&RS=09047308
owner: Kinvey, Inc.
number: 09047308
owner_city: Boston
owner_country: US
publication_date: 20130613
---
This application claims priority to U.S. Provisional Patent Application No. 61 673 490 filed on Jul. 19 2012 entitled Federated Data Access from Various Mobile and Web Client Platforms using a Virtualized Web Service which is incorporated herein by reference in its entirety.

Some embodiments described herein relate generally to methods and apparatus for resource management by providing abstraction layers to services that expose a unified application programming interface API and can be configured dynamically.

The use and popularity of mobile devices continues to increase. In mobile communication environments value of access to information has increased as users have become more dependent on accessing information on the go from both mobile devices and other network connected devices. Mobile and network development is complicated by the mixing of public data and private data with the plethora of popular public media content services and proprietary security sensitive data. Another challenge is making the data available to an application and avoiding proprietary and fragmented Application Programming Interfaces APIs that complicate the application code running on the devices. Another side effect of depending directly on a proprietary API is keeping up with breaking API version changes. In addition to the proprietary API challenge considerations exist because many of the API providers charge per API call and freely change their pricing structure.

Therefore a need exists for an approach to provide resource management by abstraction of multiple competing services to allow users to switch between various services without the need to change related applications or for new versions of the services to be released.

In some embodiments a non transitory processor readable medium stores code representing instructions to be executed by a processor the code comprising code to cause the processor to receive from a client device having a data library a request for a service associated with a set of compute devices. Each compute device has an endpoint interface for the service. The processor is also caused to define a normalized request in response to the request based on a metadata associated with one or more service requirements for the service. The processor is further caused to define a translated request for a compute device from the set of compute devices based on the normalized request. The translated request has a format associated with the endpoint interface for that compute device. The processor is also caused to send the translated request to the compute device in accordance with the endpoint interface associated with the format of the translated request. The processor is also caused to receive data associated with the service from the compute device via the endpoint interface in response to the translated request. The processor is also caused to send to the client device a response having a format associated with the client device based on the data.

Methods and apparatus are described herein for example to provide resource management via abstraction of services to allow users to switch between various services without the need to change related applications or for new versions of the service to be released. In some embodiments a non transitory processor readable medium stores code representing instructions to be executed by a processor the code comprising code to cause the processor to receive from a client device having a data library a request for a service associated with a set of compute devices. Each compute device has an endpoint interface for the service. The processor is also caused to define a normalized request in response to the request based on a metadata associated with one or more service requirements for the service. The processor is further caused to define a translated request for a compute device from the set of compute devices based on the normalized request. The translated request has a format associated with the endpoint interface for that compute device. The processor is also caused to send the translated request to the compute device in accordance with the endpoint interface associated with the format of the translated request. The processor is also caused to receive data associated with the service from the compute device via the endpoint interface in response to the translated request. The processor is also caused to send to the client device a response having a format associated with the client device based on the data.

In some embodiments a normalization module is configured to receive a request for a service from a client device having a set of data libraries. The service is associated with a compute device having an endpoint interface for the service. The normalization module is configured to receive at least one metadata associated with one or more service requirements for the service. The normalization module is configured to define a normalized request in response to the request based on the metadata. A virtualization module is configured to define a translated request for the compute device based on the normalized request. The translated request has a format associated with the endpoint interface for the compute device. The virtualization module is configured to send the translated request to the compute device in accordance with the endpoint interface associated with the format of the translated request. A data integration module is configured to receive data associated with the service from the compute device via the endpoint interface. The data integration module configured to define a response having a format associated with the client device based on the data. The data integration module configured to send the response to the client device.

In some embodiments a non transitory processor readable medium stores code representing instructions to be executed by a processor the code comprising code to cause the processor to receive from a client device having a data library a request for a service associated with a set of compute devices. Each compute device has an endpoint interface for the service. The processor is also caused to receive from a customization device a request customization code associated with the request based on one or more service requirements for the service and the request. The processor is also caused to define a normalized request in response to the request based on the request customization code. The processor is also caused to define a translated request for a compute device from the set of compute devices based on the normalized request. The translated request has a format associated with the endpoint interface for that compute device. The processor is also caused to send the translated request to the compute device in accordance with the endpoint interface associated with the format of the translated request. The processor is also caused to receive data associated with the service from the compute device via the endpoint interface in response to the translated request. The processor is also caused to define a response having a format associated with the request customization code based on the data. The processor is also caused to send to the client device the response having a format associated with the request customization code based on the data.

As used herein the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a resource is intended to mean a single resource or a combination of resources e.g. data sets data bases files data warehouses etc. provided by different service provider compute devices of .

As used herein a platform can include for example a hardware architecture and a software framework including application frameworks where the combination allows software to be executed. A platform can include multiple components or modules. As used herein a module can be for example any assembly and or set of operatively coupled electrical components and can include for example a memory a processor electrical traces optical connectors software executing or to be executed in hardware and or the like.

Communication network can be any communication network such as the Internet configurable to allow the client device the resource management platform and the service provider compute device to communicate with communication network and or to each other and to access the resource . Communication network can be any network or combination of networks capable of transmitting information e.g. data and or signals and can include for example a telephone network an Ethernet network a fiber optic network a wireless network and or a cellular network.

In some instances communication network can include multiple networks operatively coupled to one another by for example network bridges routers switches and or gateways. For example the client device and or the resource can be operatively coupled to a cellular network the service provider compute device and or the resource management platform can be operatively coupled to a fiber optic network. The cellular network and fiber optic network can each be operatively coupled to one another via one or more network bridges routers switches and or gateways such that the cellular network the Ethernet network and the fiber optic network are operatively coupled to form a communication network. Alternatively the cellular network and fiber optic network can each be operatively coupled to one another via one or more additional networks. For example the cellular network and the fiber optic network can each be operatively coupled to the Internet such that the cellular network the fiber optic network and the Internet are operatively coupled to form a communication network.

As illustrated in the client device is operatively coupled to communication network via network connection s service provider compute device is operatively coupled to communication network via network connection s and the resource management platform is operatively coupled to communication network via network connection s . Furthermore resource s can be operatively coupled to or accessed via the communication network via network connection s . Network connections and can be any appropriate network connection for operatively coupling client device service provider compute device and the resource management platform respectively. In addition a resource can be directly coupled to e.g. not via communication network a client device or to a service provider compute device direct connection s not shown in .

A network connection can be a wireless network connection such as for example a wireless fidelity Wi Fi or Wireless Local Area Network WLAN connection a Wireless Wide Area Network WWAN connection and or a cellular connection. A network connection can be a wired connection such as for example an Ethernet connection a Digital Subscription Line DSL connection a broadband coaxial connection and or a fiber optic connection.

As mentioned above in some instances a computer system can include more than one client device more than one resource management platform more than one service provider compute device and more than one resource . A client device a resource management platform a service provider compute device and or a resource can be operatively coupled to the communication network by heterogeneous network connections. For example a first client device can be operatively coupled to the communication network by a WWAN network connection another client device can be operatively coupled to the communication network by a DSL network connection and a resource management platform can be operatively coupled to the communication network by a fiber optic network connection. The service provider compute device can be for example a web server configured to provide various applications to electronic devices such as client device 

The client device can be any of a variety of electronic devices that can be operatively coupled to communication network . A client device can be a personal computer a tablet computer a personal digital assistant PDA a cellular telephone a portable mobile internet device and or some other electronic communication device. The client device can include a web browser configured to access a service e.g. a webpage or website hosted on or accessible via the service provider compute device over communication network . The client device can be configured to support for example HTML using JavaScript. For example the client device can include a web browser such as Internet Explorer Firefox Safari Dolphin Opera and Chrome etc. An Internet page or website can be accessed by a user of a web browser at a client device by providing the web browser with a reference such as a uniform resource locator URL for example of a webpage.

A resource can be an application data associated with the application etc. stored in a memory location and a service provider compute device can be a web server storing configuring and providing resource s to client devices . For example the resource s can be texts photos videos music etc. In some instances a user of a client device can access a resource provided by a service provider compute device via a URL designated for the service provider compute device . The client device can access a resource provided by the service provider compute device via the URL. In some instances a client device can include specialized software for accessing a service provided by a service provider compute device using a web server other than a browser such as for example a specialized network enabled application or program. In some instances portions of a resource accessible via a resource management platform can be located in a local or remote memory space data store accessible to the resource management platform . Such data store can be at least one of a database a data warehouse or a file. A client device can also include a display monitor or user interface UI a keyboard various ports e.g. a Universal Serial Bus USB port and other user interface components such as for example digital pens mice touch screen controls audio components and or video components each not shown . A client device can be operatively coupled to communication network via the UI and network connection .

In some instances the resource management platform provides synchronizing managing tracking transforming and filtering of resource s to be provided to a user of a client device by service provider compute devices . The resource s can be provided by a service provider compute device to multiple client devices by way of a unified interface over a web service protocol backed by sources such as a database web cache online content provider etc.

In some instances a client device can includes a set of client data libraries not shown in for various services provided by service provider compute devices . The resource management platform can receive requests from a client device and map the request to a service provider compute device by way of a virtual service dispatcher or hosted services based on a nature of the request and service mapping.

In some instances the resource management platform can define virtual services as a collection of endpoint interfaces or Application Programming Interfaces APIs based on services provided by one or more service provider compute device s . Each service provider compute device can be associated with an API for a service provided by the service provider compute device . In some instances APIs can be provided through a service mediation device not shown in . The resource management platform can provision a service provider compute device and dynamically configure services that can be available to the client device 

In some instances the resource management platform can provide access to a service provider compute device as a backend as a service platform. This enables a user of client device to setup and operate access to services provided by service provider compute devices for mobile tablet and or web applications. The user can use the client data libraries to get access to one or more resource s including for example at least one of a REST based application service a file storage service a push notification service a geo location service a mobile analytic service a user management service a data level privacy service a security access control service etc.

In some instances the computer system can be implemented in a cloud based architecture. For example the resource management platform the service provider compute device and or the resource s can be associated with a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines services etc. that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. Moreover service models that can be leveraged in whole or in part include for example Software as a Service SaaS where applications associated the service provider compute device run on cloud infrastructure Platform as a Service PaaS where the client device can deploy applications that may be defined by the service provider compute device onto the cloud infrastructure Infrastructure as a Service IaaS where the client device can provision its own processing storage networks and other computing resources and can deploy and run operating systems and applications.

The computer system can include co located hardware and software resource s or resources that are physically logically virtually and or geographically distinct. Furthermore the communication network can be packet based non packet based secure non secure or combinations thereof.

In various instances the resource management platform and its components may be located anywhere within a computer system such as that shown in including but not limited to within the client device within the service provider compute device or in separate locations within the computer system of . In some instances the normalization module can receive a request for a service from a client device of via an input signal . The request for service can be a request for a service provided by one or more service provider compute devices of . The normalization module can normalize the request by for example removing redundant and or platform specific data e.g. data specific to the client device that the request is originated from data specific to a specific service provider compute device etc. . The normalization module can store the normalized request in data store .

In some instances the virtualization module can define a translated request from the normalized request. The virtualization module can have one or more translator s to translate the normalized request provided by the normalization module for a service provider compute device such that the translated request has a format suitable for an API of the service provider compute device .

In some instances each translator can be uniquely associated with a service provided by a service provider compute device . In such instances the control module can activate a translator based on the requested service. For example a translator T can be associated with a service S and a translator T different from translator T can be associated with a service S different from service S. In this example if the client device requests a service S the control module activates translator T. Similarly translator T is activated if the requested service is service S. The translated request can be sent by the resource management platform to a service provider compute device via an output signal . In some instances the control module can switch between translators from the set of translators without a need for reconfiguration or changing of the client data libraries associated with the client device . For example a user of a client device will not have to update the client data libraries or download new client data libraries to be able to access new services provided by service provider compute devices .

In some instances the control module can switch automatically between translators from the set of translators using metadata associated with the data in client data libraries. Metadata refers to data about data. For example a request received from a client device can be associated with metadata such as for example request date request time location of the client device at the time of request etc. The metadata can also include service requirements with regards to a service provider compute device such as for example a network host a port Hypertext Transfer Protocol HTTP properties socket based properties etc. as well as authentication metadata used for transmission of request to the service provider compute device .

In some instances the control module can select a translator for example based on a time of the request an availability of the requested service based on preference data of a user of the client device etc. For example a client device can have an associated priority of service during certain hours during the day. In such cases the control module can switch between translators to direct the request to a service provider compute device that is available during those hours.

In some instances the resource management platform can provide an administrative interface configured to receive configuration data associated with a new translator . The virtualization module can use the configuration data to define the new translator. For example the new translator can be associated with a new service provider compute device . The resource management platform can include a component such as for example a code generator not shown to define the new translator.

In some instances the resource management platform receives a response to the translated request from the service provider compute device via an input signal . In such instances the quality of service module can evaluate a quality of service QoS value for the response based on a client data library associated with the client device that initiated the request based on metadata associated with the client device based on a user account associated with the client device etc.

In some instances the control module can define whether the response is being sent to the client device based on the calculated value of the QoS. For example if the value of QoS is lower than a predefined threshold the control module can prevent the response from being sent to the client device . The control module can send a message to the client device indicating that the response is not satisfactory. The control module can send a signal to the virtualization module to translate the normalized query using a different translator associated with a different service provider compute device for example based on an instruction from a user of the client device 

In some instances if the QoS value is higher than the predefined threshold the data integration module can transform the response to a transformed response using a transformer to a format associated with the client device . The resource management platform can send the transformed response to the client device via an output signal .

In some instances a user priority is defined for each user account from multiple user accounts associated with a client device . The user priority can be defined based on the QoS value for each client device . In such instances the virtualization module can send the translated request to a service provider compute device based on the user priority for the user account associated with the client device . For example service requests from users with higher priorities can be sent to the service provider compute device before service requests from users with lower priorities.

In some instances the resource management platform can provide access to the client device to service provider compute devices providing various services such as for example a REST based application service a file storage service a push notification service a geo location service a mobile analytic service a user management service a data level privacy service a security access control service etc.

In some instances each client device can be associated with at least one client data library that enables the client device to define a request for the service. For example the at least one client data library can be used for defining an Input Output I O request to the resource management platform . The resource management platform can examine availability of the service provider compute devices for example based on a dynamically configurable set of metrics to select a service provider compute device to which to forward the request. The set of metrics can be from different categories such as for example cost client device sensor data service provider compute device availability service provider compute device performance etc.

In some instances the resource management platform can monitor and manage request routes e.g. the service provider compute devices to which a request can be sent based on resource availability load of each service provider compute device responsiveness of each service provider compute device rate limits of each service provider compute device etc. The resource management platform can manage resources and route requests for example based on cloud scaling and partitioning algorithm to scale different parts based on pre defined rules peak traffic triggers time based analysis dynamic cluster re configuration storing and routing of data associated with requests and responses to specific data stores e.g. data stores based on pre defined rules etc.

In some instances each service provider compute device can have an endpoint interface that provides an API for the service. For example the resource management platform can enable integration among service provider compute devices . Service provider compute device can include public APIs for public services such as for example Google Places Yahoo Local etc. Additionally alternatively a service provider compute device can provide private services hosted on a customer s own services. The resource management platform simplifies accessing these services using a standard API for each class type of service. Each service provider API can be exposed through a service provider endpoint interface not shown such that the APIs can be accessible for example through a Representational State Transfer REST based application data store and or the client data libraries of the client device 

At a normalized request is defined in response to the request for example by a normalization module e.g. shown in . The normalized request can be defined based on a metadata associated with one or more service requirements for the service. The metadata as previously discussed can include service requirements with regards to a service provider compute device such as for example a network host a port Hypertext Transfer Protocol HTTP properties socket based properties etc. as well as authentication metadata used for transmission of request to the service provider compute device .

At a translated request is defined based on the normalized request for a service provider compute device from the one or more service provider compute devices e.g. shown in . The translated request can have a format associated with the endpoint interface for that service provider compute device . The translated request can be defined for example by a translator from the virtualization module . In some instances the translator can define the translated request through a service mediation layer not shown . The service mediation layer can be for example a device mediating between the resource management platform and the service provider compute device . In some instances the translated request can be defined based on preference data associated with the client device e.g. shown in . For example a user of the client device can define preferences associated with the service or the service provider compute devices . The preferences can be stored on a local memory on the client device not shown on data store s or in a separate location throughout the communication network .

At the translated request can be sent to the service provider compute device e.g. shown in via an output signal e.g. shown in from the resource management platform . The translated request can be sent to the service provider compute device in accordance with the endpoint interface of the service provider compute device that is associated with the format of the translated request.

At data associated with the service is received from the service provider compute device via the endpoint interface and an input signal at the resource management platform in response to the translated request. In some instances the data integration module e.g. shown in transforms the received data for example using a transformer to a format compatible with the client device .

At a response provided by a data integration module based on the data received from the service provider compute device is sent from the resource management platform to the client device . The response has a format associated or compatible with the client device based on the data. In some instances the data integration module provides the response based on a client data library of the client device associated with the service. Note that the client device can have multiple client data libraries associated with various services. In such instances the data integration module can define the response based on the received data and the client data library of the client device that is associated with the service without reconfiguring or changing other client data libraries of the client device 

In some instances the client device can be associated with a network external from the network with which the service provider compute device is associated. In such instances the resource management platform can translate the request based on configurations and characteristics associated with the service provider compute device network before sending the translated request to the service provider compute device . The resource management platform can also transform the data associated with the service received from the service provider compute device based on configurations and characteristics associated with the client device network before sending the response to the client device 

In some instances the client data can include various data associated with a client device such as for example geo location data indicating location of the client device battery life of the client device a Unique Device Identifier UDID of the client device a priority indicator associated with the client device etc.

In some instances the metadata can include for example an endpoint availability indicator showing availability of an endpoint interface associated with the service provider compute device . The metadata can also include response time for the service provider compute device desired response time for a client device etc.

For example the quality of service module can collect data associated with the service such as endpoint availability response time etc. from the service provider compute device not shown in and add the data to metadata . The quality of service module can also receive the client data and or the metadata to calculate a QoS value. For example if a response time of a service provider compute device is higher than the desired response time of the client device the response provided by the service provider compute device to a request from the client device can have a low QoS value while a response time higher than the desired response time can cause the QoS value to have a higher value.

In some instances the quality of service module can send the QoS value to the data integration module . The data integration module can integrate the data received from the service provider compute device in response to a request into a response to the request from the client device based on the QoS value as previously discussed with regards to .

In some instances the resource management platform can provide pre integrated public services to the client devices . The pre integrated public services can for example include public services such as for example Google Places Yahoo Local Twitter Facebook etc. In such instances the resource management platform can enable the client device to request the pre integrated public service associated with APIs via API .

In some instances the resource management platform can provide Representational State Transfer REST based services to the client devices . In such instances the resource management platform can provide a link and REST rules to the client device . The key and REST rules enable the client device to access REST APIs for various REST services from the resource management platform .

In some instances the resource management platform can provide private services to the client devices . The private services can be for example services provided by a service provider compute device of through a private cloud or services that are behind a firewall. In such instances the resource management platform can provide a link to the client device . The link enables the client device to request services or via data links and respectively. The resource management platform can for example provide a connector code and apply the connector code to a private service to enable the client device to access the private service. The service shows a complex use case including various services provided to a client device such as for example firewall protected services private services private data e.g. databases etc.

A service provider compute device can be operatively coupled to one or more client devices one or more resource s one or more customization devices and or other service provider compute devices via a communication network similar to the communication network of . Note that the resource management platform or some of its components can be embedded within the client device embedded within a service provider compute device and or be external to the client device and the service provider compute device . In addition the resource management platform can be operatively coupled to one or more client devices one or more service provider compute devices one or more resource or one or more customization devices via a communication network . Any of the devices or platforms of the computer system can be equipped with local memory storage spaces and or processors not shown in . Furthermore the devices and platforms of the computer system can have access to centralized or distributed memory storage spaces and or processors not shown in through the communication network . Thus is merely an example illustrating the types of devices and platforms that can be included within a computer system .

As illustrated in the client device is operatively coupled to communication network via network connection s service provider compute device is operatively coupled to communication network via network connection s and the resource management platform is operatively coupled to communication network via network connection s . Furthermore resource s can be operatively coupled to or accessed via the communication network via network connection s and the customization device can be operatively coupled to or accessed via the communication network via network connection s . Network connections and can be any appropriate network connection for operatively coupling client device service provider compute device the resource management platform and the customization device respectively. In addition a resource can be directly coupled to e.g. not via communication network a client device or to a service provider compute device direct connection s not shown in .

As mentioned above in some instances a computer system can include more than one client device more than one resource management platform more than one service provider compute device and more than one resource . A client device a resource management platform a service provider compute device a resource and or a customization device can be operatively coupled to the communication network by heterogeneous network connections. For example a first client device can be operatively coupled to the communication network by a WWAN network connection another client device can be operatively coupled to the communication network by a DSL network connection and a resource management platform can be operatively coupled to the communication network by a fiber optic network connection. The service provider compute device can be for example a web server configured to provide various applications to electronic devices such as client device 

The customization device can be any of a variety of electronic devices that can be operatively coupled to communication network . A customization device can be for example a personal computer a tablet computer a personal digital assistant PDA a cellular telephone a portable mobile internet device and or some other electronic communication device. The customization device can include a web browser configured to access a service e.g. a webpage or website hosted on or accessible via the service provider compute device over communication network . The customization device can be configured to support for example HTML using JavaScript. For example the customization device can include a web browser such as Internet Explorer Firefox Safari Dolphin Opera and Chrome etc. An Internet page or website can be accessed by a user of a web browser at a customization device by providing the web browser with a reference such as a uniform resource locator URL for example of a webpage.

In some instances a user of a customization device can access a resource provided by a service provider compute device via a URL designated for the service provider compute device . The customization device can access an application provided by the service provider compute device via the URL. A resource can be an application data associated with the application etc. stored in a memory location and a service provider compute device can be a web server storing configuring and providing resource s to client devices . For example the resource s can be texts photos videos music etc. In some instances a customization device can include specialized software for accessing a service provided by a service provider compute device using a web server other than a browser such as for example a specialized network enabled application or program. In some instances portions of a resource accessible via a resource management platform can be located in a local or remote memory space data store accessible to the resource management platform . Such data store can be at least one of a database a data warehouse or a file. A customization device can also include a display monitor or user interface not shown a keyboard various ports e.g. a USB port and other user interface components such as for example digital pens mice touch screen controls audio components and or video components each not shown .

In some instances a customization device can includes a set of client data libraries not shown in for various services provided by service provider compute devices . The resource management platform can receive requests from a client device and map the request to a service provider compute device by way of a virtual service dispatcher or hosted services based on a nature of the request and service mapping.

In some instances the customization device can be a service mediation device to access and customize a response to a request before the response is sent to the client device . The customization device can customize the response based on a format associated with the client device 

In various instances the resource management platform can provide resource management services similar to the services provided by the resource management platform . Additionally the resource management platform enables a customization device to access and customize a request from a client device before providing the requested service to the client device 

In various instances the resource management platform and its components may be located anywhere within a computer system such as that shown in including but not limited to within the client device within the service provider compute device or in separate locations within the computer system of .

In various instances the resource management platform can provide resource management services similar to the services provided by the resource management platform . Additionally resource management platform enables a customization device to access and customize a request from a client device before sending the request to the normalization module . The customization device can also customize a response to a request before the response is sent to the client device 

In some instances the customization device can receive a request from the client device update the request based on one or more pre defined customization rules not shown and send the customized request to the resource management platform . In some other instances the customization device can send the customization rules to the resource management platform . In such instances the customization rules can be stored in the data store s . Upon receiving a request from a client device at the resource management platform the customization module can apply the customization rules provided by the customization device to the request before the request is normalized by the normalization module .

In some instances the customization module receives from a customization device a request customization code associated with a request from a client device . The customization code can be based on one or more service requirements for the service and or the request.

In some other instances the customization module can receive a request for a service from a client device of and the customization code from a customization device via an input signal . The request for service can be a request for a service provided by one or more service provider compute devices of . The customization module can update the request based on the customization code and send the updated request to the normalization module .

The process of providing a response to the request was previously discussed with regards to . In some instances the resource management platform receives a response to the request from the service provider compute device via an input signal . In such instances the quality of service module can evaluate a quality of service QoS value for the response based on a client data library associated with the client device that initiated the request based on metadata associated with the client device based on a user account associated with the client device based on a client data library and or account associated with the customization device etc.

In some instances the control module can define whether the response is being sent to the client device based on the calculated value of the QoS. For example if the value of QoS is lower than a predefined threshold the control module can prevent the response from being sent to the client device . The control module can send a message to the client device indicating that the response is not satisfactory. The control module can send a signal to the virtualization module to translate the normalized query using a different translator associated with a different service provider compute device for example based on an instruction from a user of the client device 

In some instances the customization device can customize the response before the response is sent to the client device . In such instances the customization module can update the response based on a format associated with the request customization code received from the customization device .

At a request customization code associated with the request is received at a customization module e.g. shown in from a customization device e.g. shown in . The customization code can be based on one or more service requirements for the service and the request. The customization module can update the request based on the customization code. The customization module can store the updated request in a data store .

At a normalized request is defined in response to the request for example by the normalization module e.g. shown in . The normalized request can be defined based on a metadata associated with one or more service requirements for the service as discussed with regards to and the request customization code. At a translated request is defined based on the normalized request for a service provider compute device from the one or more service provider compute devices e.g. shown in . The translated request can have a format associated with an endpoint interface for that service provider compute device . The translated request can be defined for example by a translator from the virtualization module . In some instances the translator can define the translated request through a service mediation layer not shown . The service mediation layer can be for example a device mediating between the resource management platform and the service provider compute device . In some instances the translated request can be defined based on preference data associated with the client device e.g. shown in . For example a user of the client device can define preferences associated with the service or the service provider compute devices . The preferences can be stored on a local memory on the client device not shown on data store s or in a separate location throughout the communication network .

At the translated request can be sent to the service provider compute device e.g. shown in via an output signal e.g. shown in from the resource management platform . The translated request can be sent to the service provider compute device in accordance with the endpoint interface of the service provider compute device that is associated with the format of the translated request.

At data associated with the service is received from the service provider compute device via the endpoint interface and an input signal at the resource management platform in response to the translated request.

In some instances the data integration module e.g. shown in transforms the received data for example using a transformer to a format compatible with the client device . At a response to the request is defined by the data integration module based on the data and based on a format associated with the request customization data provided by the customization module .

The response provided by the data integration module can be sent to the client device by the resource management platform . The response can have a format associated with the client device based on the data and or based on the request customization code provided by the customization module . In some instances the data integration module can provide the response based on a client data library of the client device associated with the service.

It is intended that the methods and apparatus described herein can be performed by software executed on hardware hardware or a combination thereof. Hardware modules may include for example a general purpose processor a field programmable gate array FPGA and or an application specific integrated circuit ASIC . Software modules executed on hardware can be expressed in a variety of software languages e.g. computer code including C C Java Ruby Visual Basic and other object oriented procedural or other programming language and development tools. Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

Some embodiments described herein relate to a computer storage product with a non transitory computer readable medium also can be referred to as a non transitory processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The computer readable medium or processor readable medium is non transitory in the sense that it does not include transitory propagating signals per se e.g. a propagating electromagnetic wave carrying information on a transmission medium such as space or a cable . The media and computer code also can be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of non transitory computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks carrier wave signal processing modules and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs Read Only Memory ROM and Random Access Memory RAM devices.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Where methods and steps described above indicate certain events occurring in certain order the ordering of certain steps may be modified. Additionally certain of the steps may be performed concurrently in a parallel process when possible as well as performed sequentially as described above. Although various embodiments have been described as having particular features and or combinations of components other embodiments are possible having any combination or sub combination of any features and or components from any of the embodiments described herein.

