---

title: Systems and methods for determining an authentication attempt threshold
abstract: Systems and methods are provided for determining an authentication attempt threshold. Authentication systems often have predetermined authentication attempt thresholds that may not be sufficient for some users and do not necessarily provide any increased security. Systems and methods provided for determining an authentication thresholds described herein may determine the authentication threshold based on certain factors in a user's authentication attempt history that may provide information about a user's probability of a successful authentication to provide additional security for users more likely to successfully authenticate while providing additional assistance to users who may be less likely to successfully authenticate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407614&OS=09407614&RS=09407614
owner: PAYPAL, INC.
number: 09407614
owner_city: San Jose
owner_country: US
publication_date: 20130313
---
Embodiments disclosed herein are related to systems and methods for determining an authentication attempt threshold. In particular systems and methods disclosed herein may determine an authentication attempt threshold based on a probability of successful authentication determined by a recentness of a successful authentication a number of successful authentication attempts over a predetermined sequence and a number of overall successful authentication attempts.

Internet users typically have multiple accounts with multiple websites each having specific credentials that are required for a user to authenticate to the website and access services and features provided by the website. The user is required to remember specific credentials for specific websites and in some cases multiple credentials for a single website. This means that a user may not always remember the credential required for a website particularly if it is a website that they have not visited recently. However to protect users from brute force attacks many websites and other secure networked servers typically set limits on a site specific authentication attempts within a particular time period before a security action is taken. For example a user trying to authenticate to a website to access their account will have a set number of authentication attempts before the website freezes the account the user has to do a password reset and or the user may have to contact the website provider to unfreeze their account. In many conventional examples the threshold is three 3 attempts. However the threshold is arbitrary and does not maximize usability and security. For some users that frequent a website three attempts are probably unnecessary. For users that may visit the website very sporadically three attempts may not be enough. Moreover the users that frequent the website may have more invested in their account with the website and thus may have more to lose from an attacker gaining access to their account that may cost the user and even the website provider more than it would for a sporadic or infrequent user.

Accordingly there is a need for systems and methods that determine an authentication attempt threshold based on a probability of successful authentication. In particular there is a need for systems and methods that determine the authentication threshold by analyzing a recentness of a successful authentication a number of successful authentication attempts over a predetermined sequence and a number of overall successful authentication attempts.

In the following description specific details are set forth describing certain embodiments. It will be apparent however to one skilled in the art that the disclosed embodiments may be practiced without some or all of these specific details. The specific embodiments presented are meant to be illustrative but not limiting. One skilled in the art may realize other material that although not specifically described herein is within the scope and spirit of this disclosure.

Consistent with some embodiments there is provided a system for determining an authentication attempt threshold. The system includes a network interface component configured to receive a request for authentication and a memory configured to store an authentication attempt history. The system also includes one or more processors configured to determine an estimate of probability of successful authentication based on at least one sequence of authentication attempts in the authentication attempt history determine the authentication attempt threshold based on the probability and determine whether the request for authentication is successful.

Consistent with some embodiments there is also provided a non transitory computer readable medium having instructions for execution by one or more processors that when executed cause the one or more processors to perform a method for determining an authentication attempt threshold. The method includes steps of receiving an authentication request accessing an authentication attempt history determining an estimate of a probability of successful authentication the estimate based on at least one sequence of authentication attempts in the authentication attempt history and determining the authentication attempt threshold based on the estimate of probability.

Consistent with some embodiments there is further provided a non transitory computer readable medium having instructions for execution by one or more processors that when executed cause the one or more processors to perform a method for determining an authentication attempt threshold. The method includes steps of receiving an authentication request accessing a user authentication attempt history and determining an authentication attempt threshold based on at least one of a recentness of at least one successful authentication and a number of successes in at least sequence of authentication attempts in the user authentication attempt history.

These and other embodiments will be described in further detail below with respect to the following figures.

Network in one embodiment may be implemented as a single network or a combination of multiple networks. For example in various embodiments network may include the Internet and or one or more intranets landline networks wireless networks and or other appropriate types of communication networks. In another example the network may comprise a wireless telecommunications network e.g. cellular phone network adapted to communicate with other communication networks such as the Internet.

Client computing device in one embodiment may be implemented using any appropriate combination of hardware and or software configured for wired and or wireless communication over network . For example client computing device may be implemented as a wireless telephone e.g. smart phone tablet personal digital assistant PDA notebook computer personal computer a connected set top box STB such as provided by cable or satellite content providers or a video game system console a head mounted display HMD or other wearable computing device including a wearable computing device having an eyeglass projection screen and or various other generally known types of computing devices. Consistent with some embodiments client computing device may include any appropriate combination of hardware and or software having one or more processors and capable of reading instructions stored on a tangible non transitory machine readable medium for execution by the one or more processors. Consistent with some embodiments client computing device includes a machine readable medium such as a memory not shown that includes instructions for execution by one or more processors not shown for causing client computing device to perform specific tasks. For example such instructions may include authentication app for authenticating client computing device to remote server . Consistent with some embodiments authentication app may be a mobile authentication app which may be used to authenticate user to remote server over network . Authentication app may include a software program such as a graphical user interface GUI executable by one or more processors that is configured to interface and communicate with the remote server or other servers managed by content providers or merchants via network .

Client computing device may include a browser app . Browser app may be a mobile browser app which may be used to provide a user interface to permit a user to browse information available over network . For example browser application may be implemented as a web browser to view information available over network . Browser application may include a software program such as a graphical user interface GUI executable by one or more processors that is configured to interface and communicate with remote server or other servers managed by content providers or merchants via network . For example user is able to access websites to find and purchase items as well as access user account information or web content. Client computing device may also include other applications as may be desired in one or more embodiments to provide additional features available to user including accessing a user account with remote server . For example applications may include interfaces and communication protocols that allow the user to receive and transmit information through network and to remote server and other online sites. Applications may also include security applications for implementing client side security features programmatic client applications for interfacing with appropriate application programming interfaces APIs over network or various other types of generally known programs and or applications. Applications may include mobile apps downloaded and resident on client computing device that enables user to access content through the apps.

Remote server according to some embodiments may be maintained by an online payment provider which may provide processing for online financial and information transactions on behalf of user . Remote server may include at least authentication application which may be adapted to interact with authentication app of client computing device over network to authenticate client computing device to remote server . According to some embodiments authentication app send information over network to client computing device for use by authentication app for authenticating user to remote server . Such information may include an authentication attempt threshold corresponding to a maximum number of authentication attempts that user is permitted before a security action is performed. Consistent with some embodiments authentication app may determine an authentication attempt threshold based in part on an authentication attempt history of user .

Remote server may also include an application database for storing various applications for interacting with client computing device over network for purposes other than authentication. Such applications may include applications for authentication conducting financial transactions and shopping and purchasing items. Remote server may also include an authentication database that may store information for authentication application to use during authentication. Authentication database may also store information about user such as account information personal information and an authentication attempt history of user .

Consistent with some embodiments computing system includes a system bus for interconnecting various components within computing system and communication information between the various components. Such components include a processing component which may be one or more processors micro controllers or digital signal processors DSP graphics processing unit GPU a system memory component which may correspond to random access memory RAM an internal memory component which may correspond to read only memory ROM and an external or static memory which may correspond to optical magnetic or solid state memories. Consistent with some embodiments computing system further includes a display component for displaying information to a user of computing system . Display component may be a liquid crystal display LCD screen an organic light emitting diode OLED screen including active matrix AMOLED screens an LED screen a plasma display or a cathode ray tube CRT display. Computing system may also include an input component allowing for a user of computing system to input information to computing system . Such information could include payment information such as an amount required to complete a transaction account information authentication information or identification information. An input component may include for example a keyboard or key pad whether physical or virtual. Computing system may further include a navigation control component configured to allow a user to navigate along display component . Consistent with some embodiments navigation control component may be a mouse a trackball or other such device. Moreover if device includes a touch screen display component input component and navigation control may be a single integrated component such as a capacitive sensor based touch screen.

Computing system may perform specific operations by processing component executing one or more sequences of instructions contained in system memory component internal memory component and or external or static memory . In other embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the present disclosure. Logic may be encoded in a computer readable medium which may refer to any medium that participates in providing instructions to processing component for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. The medium may correspond to any of system memory internal memory and or external or static memory . Consistent with some embodiments the computer readable medium is tangible and non transitory. In various implementations non volatile media include optical or magnetic disks volatile media includes dynamic memory and transmission media includes coaxial cables copper wire and fiber optics including wires that comprise system bus . According to some embodiments transmission media may take the form of acoustic or light waves such as those generated during radio wave and infrared data communications. Some common forms of computer readable media include for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer is adapted to read.

In various embodiments of the present disclosure execution of instruction sequences to practice the present disclosure may be performed by computing system . In various other embodiments of the present disclosure a plurality of computing systems coupled by a communication link to network e.g. such as a LAN WLAN PTSN and or various other wired or wireless networks including telecommunications mobile and cellular phone networks may perform instruction sequences to practice the present disclosure in coordination with one another. Computing system may transmit and receive messages data and one or more data packets information and instructions including one or more programs i.e. application code through communication link and network interface component . Communication link may be wireless through a wireless data protocol such as Wi Fi 3G 4G HDSPA LTE RF NFC or through a wired connection. Network interface component may include an antenna either separate or integrated to enable transmission and reception via communication link . Received program code may be executed by processing component as received and or stored in memory or .

Computing system may also include sensor components . Sensor components may include any sensory device that captures information related to the surroundings of client computing device . Sensor components may include camera and imaging components accelerometers GPS devices motion capture devices and other devices that are capable of providing information about client computing device user or their surroundings.

Authentication UI may require additional information consistent with some embodiments. Authentication UI may be an authentication UI provided by remote server through authentication app . Authentication UI may also be provided by authentication app separately or in combination with authentication app when client computing device attempts to access remote server .

Authentication UI may further include a submit button which when selected posts username and password to remote server through network . According to some embodiments submit button may be selected by touching a displayed submit button on a touch screen device. In other embodiments submit button may be activated by navigating to button with navigation control such as a trackball mouse sliding mouse on a soft keyboard or cursor moving device and then pressing a physical button associated with navigation control .

Consistent with some embodiments additional information may be posted to remote server over network by selecting submit button . For example the additional information may a cookie a local object such as a FlashObject an internet protocol IP address of device a device identification ID of device a media access control MAC address of device or a location of device . The posted username password and additional information may collectively be considered as at least one data packet that is posted to remote server through network . Consistent with some embodiments the at least one data packet may be posted using secure sockets layer SSL transmission. According to some embodiments at least one data packet may be encrypted. In some embodiments at least one data packet may be posted to remote server over network to authenticate to remote server in order to make a payment receive a payment or otherwise authorize a transaction or other action to be made in accordance with user s account with remote server . Further at least one data packet may be a single data packet or multiple data packets. Although demonstrates one type of authentication UI other authentication UIs may be used consistent with the disclosed embodiments.

A user entering credentials such as username and password may be permitted an authentication attempt threshold in which to correctly enter username and password until authentication app on client computing device or authentication app on remote server performs a security action such as locking user out of their account for a predetermined amount of time requiring user to recover their credentials by answering security questions or otherwise requiring additional information or credentials to complete the authentication. The security action may be any authentication escalation technique used to increase the assurance that user is who they claim to be after reaching the authentication attempt threshold. As shown in user has entered an incorrect password and has two remaining attempts until user s account is locked. Accordingly the example shown in allows user at least three attempts to successfully authenticate until a security action such as an account lock is performed.

Three authentication attempts may be more than is needed for some users who routinely authenticate successfully on the first or second attempt. For users who routinely authenticate on the first or second attempt subsequent attempts may be an indication of action being taken by an attacker. However three authentication attempts may not be enough for some users who have a history of regularly failing attempts prior to a successful attempt.

The failed authentications may further be classified as unknown failures and known failures. A known failure may be a failure that is followed up by a success a very short period of time later. As shown in a known failure occurs at time Tas it is followed by a success at time T. In a known failure occurs at time Tfollowed by a success at time T. These failures are referred to as known failures as they may be indicative of a user who made a typographical error in entering their credentials in authentication UI or the user mistakenly entered the wrong credentials understood the mistake and then entered the correct credentials.

The failures that are not followed by a success within a short period of time or even within the same session are more difficult to classify and thus referred to as an unknown failure. Referring to the failure at time Tis difficult to classify as it may be due to an attempted attack or a user giving up after a single failure. The successive failures at times Tand Tmay be indicative of an attempted attack or a user giving up after two successive failures.

Based on the total number of successes C stored in authentication database a number of successes within a predetermined sequence Csuch as shown in and a recentness R of at least one successful authentication attempt it may be possible to determine a value or score that may be an estimate of a probability that a user will likely be successful in an authentication attempt. In general the more recent that user has successfully authenticated to remote server the more likely that user will perform a successful authentication and the more unlikely that user will fail in an authentication attempt. Moreover the more often that user has successfully authenticated to remote server the more likely that user will perform a successful authentication at T. For example the user shown in has a lower probability of success than the user shown in who is almost always successful or the users in who have always been successful. Based on the probability of success the user in may need less access attempts than the user shown in . Consequently a number of authentication attempts before an action is taken may be determined based on the probability of success.

For example the user shown in may have an estimated probability of success that is roughly about 25 within the sequence shown in and thus may require at least four or five authentication attempts before remote server performs a security action since it is more likely that the user will fail authentication on the first attempt and possibly at least a second attempt as well. The user shown in on the other hand may have an estimated probability of success that is roughly about 86 of based on the sequence shown in and thus may only require a maximum of two authentication attempts before a security action is performed since it is likely that the user will successfully authenticate on the first attempt. Consequently remote server may be able to determine a maximum number of authentication attempts for a user based on the user s authentication history including their authentication successes over time and recent successes so that users more likely to succeed are given fewer attempts and users less likely to succeed are given more attempts.

According to some embodiments a maximum number of attempts may be determined as a function of C C and R. For example an estimate of the probability of a successful authentication may be determined as 

Based at least on the authorization attempt history of user processing component of remote server may determine an estimate of a probability of successful authentication based on at least one sequence of authentication attempts by user . Consistent with some embodiments a sequence of authentication attempts may be one or more authentication attempts made by user to authenticate with remote server over a period of time. In some embodiments a sequence of authentication attempts may cover a time interval that is relevant to the probability of successful authentication such as a time interval relevant to whether user will remember their authentication credentials. For example show sequences of authentication attempts by users from a period of time Tthrough T. Processing component of remote server may determine an estimate of the probability of successful authentication based on a user s successful authentications during the at least one sequence C such as shown in a user s successful authentications over their entire authentication history C and a recentness of at least one success R. According to some embodiments the estimate of the probability of success may be determined as a function of overall authentication successes C authentication successes over at least one sequence C and a recentness R of at least one success.

Processing component of remote server may then determine an attempt threshold based on the determined estimate of probability . The attempt threshold may be determined to be less attempts for users having a higher estimate of a probability of successful authentication and more attempts for users having a lower estimate of a probability of successful authentication. In some embodiments the attempt threshold may be between one 1 attempt and ten 10 attempts with users having a very high estimate of a probability of successful authentication having an attempt threshold of 1 attempt and users having a very low estimate of a probability of successful authentication having an attempt threshold of 10 attempts. In some embodiments the attempt threshold may be between two 2 attempts and five 5 attempts with users having a very high estimate of a probability of successful authentication having an attempt threshold of 2 attempt and users having a very low estimate of a probability of successful authentication having an attempt threshold of 5 attempts. Consistent with some embodiments the attempt threshold may be determined by a rule based on overall authentication successes C authentication sessions within at least one sequence C and a recentness of a success R.

After the threshold has been determined processing component of remote server may determine if the authentication is successful . If the authentication is successful user may be authenticated to remote server . However if the authentication is not successful processing component may increase a count of the number of authentication attempts for the session . A session may correspond to a period of time in which user is attempting to authenticate with remote server or an access by client computing device of remote server over network denoted by an internet protocol IP or media access control MAC address of client computing device. According to some embodiments the period of time may be ten minutes. The number of authentication attempts by user to authenticate to remote server in the session may then be compared to the determined threshold . If the threshold is reached a security action is performed . According to some embodiments performing a security action may include such as locking user out of their account for a predetermined amount of time requiring user to recover their credentials by answering security questions or otherwise requiring additional information or credentials to complete the authentication. Consequently method may provide additional security for users having a higher probability of successful authentication as a possible attacker will have fewer attempts before a security action is performed. Moreover method will provide assistance to users who do not authenticate frequently and or have difficulties in remembering their credentials and thus have a lower probability of successfully authenticating to remote server .

Software in accordance with the present disclosure such as program code and or data may be stored on one or more machine readable mediums including non transitory machine readable medium. It is also contemplated that software identified herein may be implemented using one or more general purpose or specific purpose computers and or computer systems networked and or otherwise. Where applicable the ordering of various steps described herein may be changed combined into composite steps and or separated into sub steps to provide features described herein.

Consequently embodiments as described herein may provide systems and methods for determining an authentication attempt threshold based on a probability of successful authentication. In particular embodiments described herein may determine an authentication attempt threshold by analyzing a recentness of a successful authentication a number of successful authentication attempts over a predetermined sequence and a number of overall successful authentication attempts. Consequently embodiments provided herein may provide additional security to users who frequently authenticate while giving a few more attempts to user who do not frequently authenticate without significantly decreasing security. The examples provided above are exemplary only and are not intended to be limiting. One skilled in the art may readily devise other systems consistent with the disclosed embodiments which are intended to be within the scope of this disclosure. As such the application is limited only by the following claims.

