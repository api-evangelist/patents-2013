---

title: System and method for a facet security framework
abstract: An example method is provided and includes intercepting an action request from an entity for an action to be performed with respect to a resource in a cloud environment, where the action request comprises a resource facet that controls access to the resource. The method also includes determining whether the resource facet is valid for the action by evaluating a policy associated with the resource; and allowing the action.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09225682&OS=09225682&RS=09225682
owner: CISCO TECHNOLOGY, INC.
number: 09225682
owner_city: San Jose
owner_country: US
publication_date: 20131003
---
This disclosure relates in general to the field of security and more particularly to managing a facet security framework in a network environment.

Software applications are moving towards a cloud model. The existing business models in cloud include two party systems where there are a provider and a consumer of resources. One trend is evolving towards a multiple party scenario with application mash ups and compositions of resources. This is referred to as a federated scenario. In a federated scenario multiple domains can participate with multiple roles in the cloud. Existing policy based authorization systems do not work in a multi domain federated authorization environment as they have been designed to work in an enterprise authorization setting. The users are on boarded from participating domains in the domain where the resources exist. This can result in replication of subscriber databases and access controls.

An example method is provided and includes intercepting e.g. receiving proxying obtaining accepting collecting etc. an action request from an entity for an action to be performed with respect to a resource in a cloud environment. The term entity is meant to include any type of endpoint node server provider etc. that exists in the network or that can initiate a communication in the network as discussed herein. Additionally the broad term facet inclusive of all of its permutations encompasses any type of key token identifier password symbol keyword pin code or object potentially encrypted token handshake mechanism or any other suitable element that can control or at least affect access to management of and or control for a given resource.

The action request can include a resource facet that controls access to e.g. use of consumption of utilization of entry to the ability to publish to write to or read the resource. The resource can include a service a computing resource a memory a processor processing time data throughput bandwidth power device usage media content of any kind a virtual machine a security tool or any other suitable resource sought to be used. The method can also include determining whether the resource facet is valid e.g. acceptable verified coincident with other data etc. for the action by evaluating a policy associated with the resource. The policy can include any set of rules procedures constructs a framework a model a plan a set of provider instructions regulations a plan etc. that may be employed in such a scenario. The method also includes allowing the action e.g. accessing the resource publishing any object using the resource in some manner etc. .

In more detailed embodiments the method may include intercepting a facet request from the entity for an initial facet where the facet request has an authentication token determining whether the authentication token is valid and issuing e.g. sending transmitting providing etc. the initial facet to the entity. In yet other embodiments the method may include intercepting a resource facet request from the entity for the resource facet associated with the resource where the resource facet request is associated with an initial facet determining whether the initial facet is valid by evaluating policies associated with the initial facet and issuing the resource facet to the entity. The policy may include a plurality of addresses and attributes e.g. characteristics qualities etc. .

In the example of the cloud environment can include a resource provider a resource consumer a resource a trust authority module and an identity provider . In an embodiment resource provider may be a provider of resource to be offered to consumer . For example resource provider may be a domain website company enterprise system or any other entity that may provide resource . In a specific example resource consumer may be any entity that obtains or uses resource . Resource may be for example services memory processing time data throughput power device usage media or any other type of content. In an example embodiment trust authority module may be a set of policies to govern the access to resource . It can act on behalf of the resource owner. Identity provider may be able to authenticate resource provider and resource consumer . Various types of routers and switches may be used to facilitate communications amongst any of the elements of . Also depicted in are a number of pathways e.g. shown as solid lines between the elements for propagating any suitable data traffic.

In a specific embodiment identity provider may be configured to authenticate the identity of resource consumer and or resource provider . As there may be a multitude of identity providers following different standards for example SAML v v Liberty or Shibboleth an identity provider module may be put in place to communicate with the different systems. The identity provider module may use a data dictionary to resolve the differences of the attributes in these systems.

In certain embodiments the modules and elements discussed herein for offering or facilitating the facet security may be implemented in a federated architecture. A federated architecture FA is a pattern that describes an approach to enterprise architecture that allows interoperability and information sharing between semi autonomous de centrally organized lines of business LOBs information technology systems and applications.

In an embodiment TE may be configured to restrict and allow access to resource using facets. TE may include access interceptor and facet cache . Access interceptor may be a module configured to intercept a request to access or publish a resource in a cloud. Facet cache may be storage for all the facets pertaining to TE . Facets in the store may be received from facet server module and held until they expire or invalidated providing for reduced remote calls to facet server module . TE may also include client interceptor . Client interceptor may be configured to attach facets to access a resource when for example an entity within security framework is acting as a resource consumer as part of resource consumption.

In an embodiment TA may be a trustee of a set of resources placed under its control. TA may have access policies configured for each resource. TA may include policies database . Policies database may have the different policies rules and regulation related to different facets and access to different resources and services.

In an embodiment facet server module may be responsible for creating expiring and revoking facets . Facets may be created at the request of TA and distributed to TE . A facet within facets is an object that contains information to provide access to a resource. It can be like a bearer key that allows access to the entity that is holding the key or the facet could be endorsed to a particular subject. The subject is verified to be the requester at the point of access. A subject is an entity requesting access to a resource. It can be a combination of one or more of an identity and identity attributes role groups etc. . The facet may be created for a target that is identified by an address and a combination of attributes. It has a validity information which could be for a duration a periodic timeframe like business hours on workdays or valid for a number use. If the facet has come through the delegation of authorization the delegator information is present. The authorizations are defined using a capability object.

The broad term facet inclusive of all of its permutations encompasses any type of key token identifier password symbol keyword pin code or object potentially encrypted token handshake mechanism or any other suitable element that can control or at least affect access to management of and or control for a given resource. In different embodiments different kinds of facets may be issued. For example this can include but is not limited to initial facets initial publishing facets resource facets initial publishing resource facets and other types of facets for different uses. Additionally for example some differently named facets may be a similar facet but with different properties. For example an initial facet may be similar to a resource facet where the resource facet provides access to one or more specific resources.

In a specific embodiment resource registration user interface may be available to utilize resource registration local remote API in the form of a graphical user interface. Resource registration local remote API may be the API available for resource providers to register their resource. The functionality involves all such functions required to get a resource hosted including classifying publishing in a catalog and or configuring policies for issuance of facets that may govern access to a resource. Resource access policies database may be where the policies governing the access of a resource may be stored. In an embodiment key certificate management module may be a module that may store or access storage for any private and or public key certificates. Persistence database may be a database that is configured to store the persistence for TA including any configuration and runtime data.

In an example embodiment policy template registration local remote API may be available to utilize policy template registration local remote API in the form of a graphical user interface. Policy template registration local remote API may be the API available for policy templates. Model driven security access policy template database may be provisioned where parametric policy templates are stored.

In an embodiment data dictionary client may be configured to resolve names in different taxonomies by communicating with data dictionary as shown in . Mediator to external policy server may be a module configured to communicate with external policy servers for resources that are configured to have their access policies on a remote server. For example when a resource provider prefers the policies to reside at the resource provider. In another example the policies may be remote when there is a proprietary policy server.

In an embodiment facet server client may be a module within TE that invokes the functionality of facet server module as show in . Facet server client may not be limited to a startup process and may communicate for example with facet server module for requesting a facet for a facet URL. Facet server update service may be an interface that is configured to communicate with facet server module about issued and revoked facets. In a specific embodiment persistence database may be a database that is configured to store the persistence for TE including any configuration and runtime data.

In an embodiment identity provider client may be configured to handle all communication to identity provider IDP as shown in . Key certificate management module may be a module that may store or access storage for any private and or public key certificates. Attribute cache may be a temporary storage for attributes for identities to reduce network traffic and latencies. However in other different embodiments the source of validity may remain with the identity providers. Circle of trust management may be a module configured to manage any identity providers and resource providers that form a circle of trust.

At block an administrator introduces a resource provider RP to a cloud. The cloud may be a security framework. At block the RP initiates publishing of a resource to the cloud. In an embodiment during block and a determination may be made to publish a resource to the cloud. The determination may be made by the RP. At block the apparatus determines whether the RP has an authentication token. If the RP does not have an authentication token then at block the RP may obtain an authentication token from an identity service provider. If the RP has the authentication token then at block the apparatus determines whether the RP has an initial facet. If the RP does not have an initial facet then at block the RP may obtain the initial facet from a trust authority module.

If the RP has the initial facet then at block the apparatus determines whether the RP has a publishing resource facet. If the RP does not have a resource facet then at block the RP may obtain the resource facet from the trust authority module. If the RP has the publishing resource facet then at block the RP may publish the resource. A publishing resource facet may allow permit for publishing a resource on a hosting service.

In operation and in a particular embodiment TE may be responsible for protecting and allowing access to the resources as permitted by the facet in the request. If no facet or authentication token is present it redirects the entity RC or RP to its Identity Provider. The entity may log into its provider by presenting its credentials. The entity receives an authentication token if the credentials are valid. The entity then presents it to the trust enforcer module. The trust enforcer module validates the authentication token with the Identity Provider and queries the subject attributes defined for the identity.

As there can be a multitude of identity providers following different standards like SAML v v Liberty or Shibboleth a client identity provider module can be put in place to communicate with such disparate systems. The identity provider module may use the data dictionary to resolve the taxonomy difference of the attributes in these systems.

Once the identity is verified in the scenario where the initial facet is absent the trust enforcer module may redirect the request to the trust authority module for the resource. The trust authority module may issue the initial facet based on configured policies which can be used to gain access. In operation and in a particular embodiment a facet server may be responsible for creating expiring and revoking facets. The facets are created at the request of trust authority module and distributed to the appropriate trust enforcer modules. The facet server can sign the facets using its digital signature. A facet verification service is made available for other entities to verify any facet and query its issue history.

In operation and in a particular embodiment TA may be the trustee of a set of resources placed under its control. TA may have access policies configured for each resource. When facets are requested for access authorizations the trust authority module evaluates the relevant policies. If the result permits it collects all the policies that need to be evaluated at the time of access and presents them to the facet server to create a facet. The facet server creates the facet and signs it. The facet server may update the TE protecting the resource with this facet and then hands it over to the TA. The TA hands the facet to the entity. The actual handoff is a key or facet URL that the entity has to present to gain access. Access can mean the ability to use or modify a data or execute a service as permitted in the facet.

The trust authority module for some resources might have to communicate with an external policy server. The remote policy server may be using a different taxonomy and even a different protocol language. It can be configured with a plug in that will handle the communication and return the end result. The plug in will use the services of the data dictionary to translate to from the different taxonomy used in the other system. The trust authority module may act upon the result of this evaluation.

At block an RP may request an authentication token from an identity provider IDP . The IDP may be selected by the RP and may not need to be selected by the trust authority module TA of the system hosting a resource. At block IDP may query credentials of the RP. At block the RP may present credentials to the RP. At block the IDP may issue the authentication token to the RP. Block may only occur if the credentials are proper and valid. However if they are not then the IDP may refuse the RP.

At block an RP may present an authentication token to a trust authority module TA and request an initial facet. At block a trust enforcer module TE may intercept the request and may validate the authentication token. At block the TA checks onboard information and authorization. The TA may review policies regarding the RP. At block the TA may issue the initial facet to the RP. The initial facet may include policy information regarding the RP.

At block an RP may present an initial facet and publishing resource information to a trust authority module TA . The publishing resource information may be information about the resource that RP would like to publish within the domain of the TA. At block a trust enforcer module TE may intercept the request and may validate the initial facet. The TE may validate the initial facet by checking policies and or rules related to the initial facet. For example there may be time requirements or policies regarding the RP s access rights to security framework . At block the TA evaluates polities to validate the request. The TA may validate the request by checking policies and or rules related to the resource that the RP is requesting to publish. For example there may be time limitations access rights and other types of policies related to the resource. At block the TA may determine whether there is a validation. If there is not a validation then the flow may end. If there is a validation then at block a facet server module may issue a resource facet to the TA. At block the TA may issue the resource facet to the RP.

At block an RP may present a resource facet and request a hosting service from a trust authority module TA . At block a trust enforcer module TE may intercept the request and validate the resource facet. The TE may validate the resource facet by checking policies and or rules related to the resource facet. For example there may be time requirements or policies regarding the RP s access rights to the resource.

At block the RP may upload the resource. At block the RP may configure the resource access policy and or authorization service. The RP may set policies and authorizations related to which resource consumers RC may access the resource. The RP may also set policies that are not related directly to the RC but may be related to timing policies. At block the RP may initialize the resource. Here the RP may set the resource to be usable by a RC. For example in an embodiment the resource may only be available when the RP desires. At block the hosting service sends a success response to the RP. The hosting service may be a service in the security framework that will host the resource.

At block an administrator introduces a resource consumer RC to a cloud. In an example the cloud may be a security framework. At block the RP initiates an activity. The activity may be the process of obtaining a resource or utilizing a resource. At block the apparatus determines whether the RC has an authentication token. If the RC does not have an authentication token then at block the RC may obtain an authentication token from an identity provider.

If the RC has the authentication token then at block the apparatus determines whether the RC has an initial facet. If the RP does not have an initial facet then at block the RC may obtain the initial facet from a trust authority module. If the RC has the initial facet then at block the apparatus determines whether the RC has a resource facet. If the RC does not have a resource facet then at block the RC may obtain the resource facet from the trust authority module. If the RC has the resource facet then at block the RC may access the resource.

At block an RC may request an authentication token from an identity provider IDP . The IDP may be selected by the RC and may not need to be selected by the trust authority module TA of the system hosting a resource. At block IDP may query credentials of the RC. At block the RC may present credentials to the RC. At block the IDP may issue the authentication token to the RC. Block may only occur if the credentials are proper and valid. However if they are not then the IDP may refuse the RC.

At block an RC may present an authentication token to a trust authority module TA and request an initial facet. At block a trust enforcer module TE may intercept the request and may validate the authentication token. At block the TA checks onboard information and authorization. The TA may review policies regarding the RP. At block the TA may issue the initial facet to the RC. The initial facet may include policy information regarding the RC.

At block a RC may present an initial facet and a catalog request to a trust authority module TA . The catalog request may be a request to view a catalog of resources within security framework .

At block a trust enforcer module TE may intercept the request and may validate the request. The TE may validate the request by checking policies and or rules related to the request. For example there may be time requirements or policies regarding the RC s access rights to different resources and the resources catalog. At block the TA may provide a catalog view to the RC. The RC may be able to view the different resources available to the RC in the catalog view. At block the RC may select a resource from the catalog.

At block an RC may present an initial facet and resource information to a trust authority module TA . The resource information may be information about the resource that the RC would like to access within the domain of the TA. At block a trust enforcer module TE may intercept the request and may validate the initial facet. The TE may validate the initial facet by checking policies and or rules related to the initial facet. For example there may be time requirements or policies regarding the RC s access rights to security framework . At block the TA evaluates polities to validate the request. The TA may validate the request by checking policies and or rules related to the resource that the RC is requesting to access. For example there may be time limitations access rights and other types of policies related to the resource. At block the TA may determine whether there is a validation. If there is not a validation then the flow may end. If there is a validation then at block a facet server module may issue a resource facet to the TA. At block the TA may issue the resource facet to the RC.

At block an RC may present a resource facet and request a resource from a trust authority module TA . At block a trust enforcer module TE may intercept the access request and validate the resource facet. The TE may validate the resource facet by checking policies and or rules related to the resource facet. For example there may be time requirements or policies regarding the RC s access rights to the resource. At block the hosting service may send a success response to the RC. The hosting service may be a service in the security framework that will host the resource.

In at least one example embodiment TE TA facet server module and or security framework more generally may include software to achieve or to support the operations as outlined herein in this document. In other embodiments this feature may be provided externally to any of the aforementioned elements or included in some other network element to achieve this functionality. Alternatively several elements may include software or reciprocating software that may coordinate in order to achieve the operations as outlined herein. In still other embodiments any of the devices of the FIGURES may include any suitable algorithms hardware software components modules interfaces or objects that facilitate in managing a conversation.

It is imperative to note that the FIGURES are indicative of just some of the multitude of example implementations of TE TA facet server module and security framework . For example any of the modules or elements within security framework may readily be replaced substituted or eliminated based on particular needs. Furthermore although described with reference to particular scenarios where a given module e.g. TE TA facet server module is provided any one or more of these elements may be provided externally or consolidated and or combined in any suitable fashion. In certain instances certain elements may be provided in a single proprietary module device unit etc. in order to achieve the teachings of the present disclosure.

Referring briefly back to certain internal structure that could be used to accomplish the teachings of present disclosure instances of RC can be associated with devices customers or end users wishing to receive data or content in the cloud system via some network. The terms RC endpoint client device subscriber and node are interchangeable and are inclusive of any devices used to initiate a communication such as any type of receiver a computer a set top box an Internet radio device IRD a cell phone a smartphone a laptop a tablet a personal digital assistant PDA a Google Android an iPhone an iPad a Microsoft Surface or any other device component element endpoint or object capable of initiating voice audio video media or data exchanges within a communication architecture. RC may also be inclusive of a suitable interface to the human user such as a display a keyboard a touchpad a remote control or any other terminal equipment. RC may also be any device that seeks to initiate a communication on behalf of another entity or element such as a program a database or any other component device element or object capable of initiating an exchange within a communication system. Data as used herein in this document refers to any type of numeric voice video media audio or script data or any type of source or object code or any other suitable information in any appropriate format that may be communicated from one point to another.

In more general terms TE TA facet server module and security framework are network elements that can facilitate coordinate and or manage the security facet activities discussed herein. As used herein in this Specification the term network element is meant to encompass any of the aforementioned elements as well as routers switches cable boxes gateways bridges data center elements loadbalancers firewalls inline service nodes proxies servers processors modules or any other suitable device component element proprietary appliance or object operable to exchange information in a network environment. These network elements may include any suitable hardware software components modules interfaces or objects that facilitate the operations thereof. This may be inclusive of appropriate algorithms and communication protocols that allow for the effective exchange of data or information.

In one implementation TE TA facet server module security framework and or RC include software to achieve foster facilitate coordinate and or manage the security facet activities discussed herein. This could for example include the implementation of instances of specific modules engines and or any other suitable element that would foster the activities discussed herein. Additionally each of these elements can have an internal structure e.g. a processor a memory element etc. to facilitate some of the operations described herein. In other embodiments these security facet activities may be executed externally to these elements or included in some other network element to achieve the intended functionality. Alternatively TE TA facet server module security framework and or RC may include software or reciprocating software that can coordinate with other network elements in order to achieve the activities described herein. In still other embodiments one or several devices may include any suitable algorithms hardware software components modules interfaces or objects that facilitate the operations thereof.

In certain example implementations the security facet functions outlined herein may be implemented by logic encoded in one or more non transitory tangible media e.g. embedded logic provided in an application specific integrated circuit ASIC digital signal processor DSP instructions software potentially inclusive of object code and source code to be executed by a processor processors shown in or other similar machine etc. . In some of these instances a memory element memories shown in can store data used for the operations described herein. This includes the memory element being able to store instructions e.g. software code etc. that are executed to carry out the activities described in this Specification. The processor can execute any type of instructions associated with the data to achieve the operations detailed herein in this Specification. In one example the processor could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by the processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. a field programmable gate array FPGA an erasable programmable read only memory EPROM an electrically erasable programmable ROM EEPROM or an ASIC that includes digital logic software code electronic instructions or any suitable combination thereof.

Any of these elements e.g. the network elements etc. can include memory elements for storing information to be used in achieving the security facet activities as outlined herein. Additionally each of these devices may include a processor that can execute software or an algorithm to perform the security facet activities as discussed in this Specification. These devices may further keep information in any suitable memory element random access memory RAM ROM EPROM EEPROM ASIC etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. Any of the memory items discussed herein should be construed as being encompassed within the broad term memory element. Similarly any of the potential processing elements modules and machines described in this Specification should be construed as being encompassed within the broad term processor. Each of the network elements can also include suitable interfaces for receiving transmitting and or otherwise communicating data or information in a network environment.

Additionally it should be noted that with the examples provided above interaction may be described in terms of two three or four network elements. However this has been done for purposes of clarity and example only. In certain cases it may be easier to describe one or more of the functionalities of a given set of flows by only referencing a limited number of network elements. It should be appreciated that the communication system discussed herein and its techniques are readily scalable and further can accommodate a large number of components as well as more complicated sophisticated arrangements and configurations. Accordingly the examples provided should not limit the scope or inhibit the broad techniques of the communication system discussed herein as potentially applied to a myriad of other architectures.

It is also important to note that the steps in the preceding FIGURES illustrate only some of the possible scenarios that may be executed by or within the communication system discussed herein. Some of these steps may be deleted or removed where appropriate or these steps may be modified or changed considerably without departing from the scope of the present disclosure. In addition a number of these operations have been described as being executed concurrently with or in parallel to one or more additional operations. However the timing of these operations may be altered considerably. The preceding operational flows have been offered for purposes of example and discussion. Substantial flexibility is provided by the communication system discussed herein in that any suitable arrangements chronologies configurations and timing mechanisms may be provided without departing from the teachings of the present disclosure.

It should also be noted that many of the previous discussions may imply a single client server relationship. In reality there is a multitude of servers in the delivery tier in certain implementations of the present disclosure. Moreover the present disclosure can readily be extended to apply to intervening servers further upstream in the architecture though this is not necessarily correlated to the m clients that are passing through the n servers. Any such permutations scaling and configurations are clearly within the broad scope of the present disclosure.

Numerous other changes substitutions variations alterations and modifications may be ascertained to one skilled in the art and it is intended that the present disclosure encompass all such changes substitutions variations alterations and modifications as falling within the scope of the appended claims. In order to assist the United States Patent and Trademark Office USPTO and additionally any readers of any patent issued on this application in interpreting the claims appended hereto Applicant wishes to note that the Applicant a does not intend any of the appended claims to invoke paragraph six 6 of 35 U.S.C. section 112 as it exists on the date of the filing hereof unless the words means for or step for are specifically used in the particular claims and b does not intend by any statement in the specification to limit this disclosure in any way that is not otherwise reflected in the appended claims.

