---

title: Retention based defecting in a hybrid memory system
abstract: A first page in a memory unit is programmed with one or more pages of the secondary memory. A first time corresponding to the start of the programming of the first page is recorded. A second time corresponding to the completion of the programming of the one or more pages is recorded. A time difference between the first time and the second time is determined. It is determined if the time difference is greater than a threshold. In response to the time difference being greater than the threshold, a retention based defecting process is for the memory unit is disabled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069474&OS=09069474&RS=09069474
owner: SEAGATE TECHNOLOGY LLC
number: 09069474
owner_city: Cupertino
owner_country: US
publication_date: 20130820
---
Some embodiments involve a method of operating a hybrid memory system that includes a primary memory and a secondary memory. A first page in a memory unit is programmed with one or more pages of the secondary memory. A first time corresponding to the start of the programming of the first page is recorded. A second time corresponding to the completion of the programming of the one or more pages is recorded. A time difference between the first time and the second time is determined. It is determined if the time difference is greater than a threshold. In response to the time difference being greater than the threshold a retention based defecting process is for the memory unit is disabled.

According to some embodiments a memory device includes a hybrid controller configured to manage data transfers between a host processor and a secondary memory. The secondary memory is configured to serve as a cache for a primary memory. The hybrid controller is configured to program a first page in a memory unit with one or more pages of the secondary memory record a first time corresponding to the start of the programming of the first page in the GCU record a second time corresponding to the completion of the programming of the one or more pages determine a time difference between the first time and the second time determine if the time difference is greater than a threshold and in response to the time difference being greater than the threshold disable a retention based defecting process.

Some embodiments involve a controller system for a hybrid memory system. The controller comprises a hybrid controller configured data transfers between the host processor and a flash memory. The flash memory is configured to serve as a cache for a magnetic disk. The hybrid controller is configured to program a first page in a memory unit with one or more pages of the secondary memory record a first time corresponding to the start of the programming of the first page in the GCU record a second time corresponding to the completion of the programming of the one or more pages determine a time difference between the first time and the second time determine if the time difference is greater than a threshold and in response to the time difference being greater than the threshold disable a retention based defecting process.

These and other features and aspects of the various embodiments disclosed herein can be understood in view of the following detailed discussion and the accompanying drawings.

Some memory devices use at least two types of memory in a hybrid or tiered memory system where at least one type of memory is used as a primary memory and at least one other type of memory is used as a secondary memory that operates as a cache. The primary memory may have greater storage capacity but slower access times than the secondary memory for example. In this arrangement the secondary memory can serve as a read cache and or a write cache for the primary memory. One example of such a tiered memory device is a hybrid drive in which the primary memory may comprise nonvolatile memory such as magnetic disk magnetic tape and or optical disk and the secondary memory may comprise solid state flash memory and or the secondary memory may be a nonvolatile or volatile memory with or without battery backup. Note that the terms primary memory and secondary memory are used herein for identification of components used in a hybrid memory system and to denote differences in memory e.g. usage capacity performance memory class or type etc. and not necessarily order or preference. Furthermore although examples provided herein refer to the primary memory as magnetic disk and to secondary memory as flash memory the disclosed approaches are applicable to any types of primary and secondary memory.

Embodiments described herein relate to systems and methods for managing a retention based defecting process for a hybrid memory system. A hybrid system may continue to use a memory unit if a read fails. There may be less concern for losing the data in the cache because a second copy of the data is stored on the primary memory i.e. the magnetic disk. It may be beneficial to be able to disable a defecting process to preserve capacity in a hybrid memory system.

The host sends memory access requests to the hybrid drive to read or write data. The memory access requests may specify a host LBA range used for the operation of the memory access request. For example a memory access request from the host may request that a host LBA range be written to the hybrid drive and or a memory access request may request that a host LBA range be read from the hybrid drive . The memory access requests received from the host are managed by the hybrid controller to cause data to be written to and or read from the hybrid drive with optimal efficiency. The second cache in this example may optionally be a type of read cache referred to as read only in that only data marked for read operations by the host are placed in the second cache . In such a configuration data marked for writing to the main memory are sent to the main storage either directly or via the first cache .

The controller controls data flow between the host interface and the various memories of the hybrid drive . The controller also includes modules for maintaining memory functionality including a garbage collection unit for coordinating garbage collection processes.

According to some embodiments the hybrid memory device also denoted hybrid drive may be implemented using a controller configured as a hierarchy of abstraction layers. Pairs of the abstraction layers are communicatively coupled through application programming interfaces APIs . The organization of the hybrid controller into abstraction layers to some extent allows each layer to work relatively independently and or can reduce potential conflicts that arise from processing multiple threads of execution. For purposes of discussion some examples provided below are based on the use of a magnetic disk as the main memory dynamic random access memory as the first or primary cache and solid state flash memory as the second or secondary cache. It will be apparent to those skilled in the art that the various memory components are not restricted to these types of memory and may be implemented using a wide variety of memory types.

In some configurations the cache may be configured as a secondary cache and may be faster and smaller than the main storage . The cache is a primary cache and may be faster and smaller than the secondary cache . For example current read write requests from the host may be processed first via the primary cache e.g. identified by the data s logical block address . This enables host commands to complete quickly should the requested data be stored in the primary cache . For host read requests if there is a miss in the primary cache i.e. the requested data is not present in the primary cache the requested data may be searched for in the secondary cache . If not found in either requested data may be accessed via the main storage .

Some of the data stored in the primary cache may either be copied or moved to the secondary cache as new requests come in. The copying movement from primary cache to secondary cache may also occur in response to other events e.g. a background scan. Both copying and moving involve placing a copy of data associated with an LBA range in the secondary cache and moving may further involve freeing up some the LBA range in the primary cache for other uses e.g. storing newly cached data.

The host sends memory access requests to the hybrid memory device for example the host may request that data be written to and or read from the hybrid memory device. The host interface is configured to transfer memory access requests from the host to other components of the hybrid memory device and to transfer data between the host and the hybrid memory device.

The hybrid controller illustrated in includes number of layers wherein each layer communicates to its nearest neighboring layer s e.g. through a set of requests. For example each layer may only communicate to its nearest neighboring layer s without communicating to other layers. As an example the layer may only communicate directly to layer and the host interface without communicating directly with the layer or to the flash . As an operation such as a memory access request from the host is being carried out each layer is configured to pass control to the next lower layer as the operation is implemented.

The example illustrated in includes three layers which are described in terms applicable to the use of flash memory as a cache. It will be appreciated that these terms are not restrictive and if other types of memory were used as the secondary memory if desired different terminology could be used to reflect the type of secondary memory. Nevertheless the basic functions of the layers can be similar regardless of the type of memory used for primary and or secondary memory and or the terminology used to describe the layers.

The layers illustrated in include the flash cache interface FCI layer the flash cache control and transfer management FCTM layer and the programmable state machine PSM layer . Requests and or data may be passed between the layers as indicated by arrows from a higher layer to the next lower layer starting with the FCI layer and proceeding to the PSM layer which interacts directly with the flash memory . The layered architecture of the hybrid controller described herein allows for handling host memory access requests which can be serviced from either the magnetic memory or one of the caches The layered structure used in conjunction with the flash cache can be configured to achieve specified rates and response times for servicing memory access requests.

The FCI layer decides whether a host read request should be serviced from the primary magnetic memory or from one of the caches . The FCI layer implements processes to determine which data should be promoted to the flash secondary cache and or the primary cache based on various criteria to achieve optimal workload for the hybrid memory device. The flash content and transfer management FCTM layer maintains a mapping e.g. a fully associative mapping as discussed below of the host LBAs to a memory space corresponding to the flash memory space arranged in clusters. The FCTM layer interacts with programmable state machine PSM layer and performs tasks such as optimal scheduling of promotion requests among dies of the flash referred to as die scheduling wear leveling garbage collection and so forth. . The PSM layer programs hardware controllers to generate the required signals to read from and write to the flash for example.

In some cases one or more of the layers of the hybrid controller may be implemented by circuitry and or by one or more processors e.g. such as reduced instruction set computer RISC processors available from ARM. In some cases each layer may be implemented by a separate processor. The processes discussed herein are implementable in hardware interconnected electronic components that carry out logic operations and or by a processor implementing software instructions e.g. stored in a computer readable medium and or by any combination of hardware and software.

In some implementations the hybrid drive includes a flash cache e.g. as a secondary cache that undergoes garbage collection to make room for incoming data. The hybrid controller is configured to carry out garbage collection operations for the flash cache. The hybrid controller is configured to carry out garbage collection operations for the flash cache. is a flow diagram that illustrates a method for garbage collection in a hybrid system according to some embodiments. In this example the GCUs are made up of several data clusters. Consider the scenario where a first plurality of clusters of a first GCU are being garbage collected to a second plurality of clusters of a second GCU. Data is read from a cluster of the first plurality of clusters of the first GCU. Responsive to a determination that the read operation failed the cluster is unmapped without writing the data of the cluster to a cluster of the second GCU. The cluster that experienced the read operation failure continues to be used for subsequent data storage. In a system that does not have a cache the cluster that experienced the read operation failure may be defected placed on a list of clusters that are not used because of defects if a read operation fails. This is because in a system without a cache there is no redundant copy of the data thus clusters that have experienced one or a small number of read failures are defected so that the storage is robust. According to various aspects of the present disclosure the hybrid system continues to use a cluster even if a read fails. In the hybrid configurations disclosed herein there may be less concern for losing the data in the cache because a second redundant copy of the data is stored on the primary memory i.e. the magnetic disk. Responsive to a determination that the read operation did not fail data from the cluster is written to cluster of the second GCU.

As described above a read error may not result in defecting of a block because a redundant copy of data is stored in the primary memory. In some cases a read error may be remedied in response to a block being programmed and used again. The chance of the read error being remedied depends on a number of factors such as the relaxation time the number of program erase cycles experienced by the memory unit temperature among others. Defecting a memory unit due to a read error may result in unnecessary loss of capacity particularly when the read error results from a transitory condition that can be remedied. It may be beneficial to be able to disable a defecting process to preserve capacity particularly when redundant data is available.

In some implementations the threshold may be a function of more than one factor. For example the threshold may be a function of one or more of the retention time the number of program erase cycles experienced by the memory unit the temperature of the memory unit and or the history of the temperature of the memory unit.

In response to the time difference being greater than the threshold a retention based defecting process is disabled for the memory unit. A larger time difference may indicate that the memory unit has a large relaxation time. A relaxation time is the time duration between two sequential program or erase events of the same memory unit. A larger relaxation time may indicate that the memory unit has less damage than other memory units and or had more chance to recover accumulated damages generated at previous program erase events. According to various aspects the time difference being greater than the threshold indicates that the chance for the memory unit to have a read failure is low.

In some implementations the threshold may be a function of more than one factor. For example the threshold may be a function of one or more of the retention time the number of program erase cycles experienced by the memory unit and or the temperature of the memory unit. If the threshold is a function of more than one factor a similar process may be used to the process shown in for each of the factors. Alternatively weighting coefficients can be applied to the factors the weighted factors can be combined and compared to a composite threshold.

In some cases the process of determining whether to disable a defecting process if the time difference is greater than a threshold see blocks and may be checked periodically. Alternatively or additionally disabling the defecting process may be performed in response to a read error in the memory unit for example. In some cases the process of is carried out in conjunction with a garbage collection operation.

In the event that the time difference is less than the threshold the memory unit may be defected because the chance of a read error occurring is high for example. In some cases if the time difference is less than the threshold and a read error occurs a counter is incremented. If the value in the counter rises above a threshold e.g. 2 or 4 the memory unit may be defected during the next garbage collection process for example.

In response to the retention time being less than the threshold a counter for the memory unit is incremented . It is determined whether the counter is above a counter threshold. In response to the counter being above the counter threshold a retention based defecting process is enabled . The retention based defecting process is disabled while the counter is below a threshold.

It is to be understood that this detailed description is illustrative only and various additions and or modifications may be made to these embodiments especially in matters of structure and arrangements of parts and or processes. Accordingly the scope of the present disclosure should not be limited by the particular embodiments described above but should be defined by the claims set forth below and equivalents thereof.

