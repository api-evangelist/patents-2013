---

title: Propagating state information to network nodes
abstract: Method and apparatus for propagating state information updates are disclosed. In the method and apparatus, a node establishes connections with one or more nodes of a plurality of nodes based at least in part on the number of connections retained by each node of the plurality of nodes. The node may then propagate state information updates to the one or more nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09609031&OS=09609031&RS=09609031
owner: Amazon Technologies, Inc.
number: 09609031
owner_city: Seattle
owner_country: US
publication_date: 20131217
---
The use of network computing and storage has proliferated in recent years. The resources for network computing and storage are often provided by computing resource providers who leverage large scale networks of computers servers and storage drives to enable clients including content providers online merchants and the like to host and execute a variety of applications and web services. Content providers and online merchants who traditionally used on site servers and storage equipment to host their websites and store and stream content to their customers often forego on site hosting and storage and turn to using the resources of the computing resource providers. The usage of network computing allows content providers and online merchants among others to efficiently and adaptively satisfy their computing needs whereby the computing and storage resources used by the content providers and online merchants are added or removed from a large pool of networked resources provided by a computing resource provider whereby the networked resources may include thousands or millions of computing devices.

The networked resources of a computing resource provide may often be required to be updated with information in order to serve the needs of customers. Centralized approaches for information propagation across networked resource are prone to malfunction due at least in part to the single point of failure associated with these approaches. Further it is also challenging to propagate information updates across large scale network in a de centralized manner while minimizing the occurrence of redundant updates.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein include propagating state information or updates thereof to network nodes. As described herein the state information may include any type of data that may be retained by a network node whereby examples of the state information include user information network or Internet protocol IP address information. Further the state information may include any type of software update intended for the node. Additionally as described herein a node may be any type of computing device including but not limited to a computer system a server a host machine or a storage drive. The node may retain any type of the state information to facilitate providing computing functionality to users and customers. For example the node may store the state information in local storage or database and may utilize the state information to provide computing functionality to customers. Further the node may be configured to update retained state information by for example adding newly received state information to retained state information or modifying retained state information in accordance with received state information. Further the node may be configured to reconcile retained state information with state information associated with another node identifying both elements that are common and elements that are different among the state information being reconciled and updating the retained state information to be up to date or in sync with the state information of the other node.

A node may be connected with another node in a network whereby the connection may be utilized to facilitate communication between the nodes. Further the connection facilitates the direct exchange of state information between the two nodes. The connection also alleviates the need for two nodes to exchange state information indirectly for example using an intermediary node to forward state information to or from the two nodes. Accordingly the existence of a connection between two nodes results in expedient propagation of information state updates.

In accordance with a de centralized approach for state information propagation a node for example a node that is joining an existing network of nodes may discover neighboring nodes. A neighboring node may be part of a sub network of nodes within a larger network or may be within a specified round trip time RTT of the node. Further the node may utilize a broadcast or multicast message to discover the neighboring nodes and the neighboring nodes may respond accordingly. The node may request that each of the neighboring nodes indicate to the node the number of nodes to which each neighboring node is connected. The node may receive the number of neighboring node connections associated with each neighboring node and based on the received number the node may determine the neighboring nodes with which to establish a connection. Determining the neighboring nodes may be done stochastically or probabilistically. A limit may be imposed on the number of neighboring node connections the node may make.

The probability of establishing a connection with a neighboring node may be positively biased to nodes with greater connectivity whereby the likelihood of establishing a connection with a neighboring node may be proportional for example linearly or non linearly to the number of connections associated with the neighboring node. Upon determining the neighboring nodes with which to establish a connection the node may receive state information updates from any one of its neighboring nodes. The node may further incorporate the state information updates into its retained state information. The node may also propagate the state information updates to its other connected neighboring. For example the node may randomly select a neighboring node to propagate the received state information. To prevent propagating redundant updates the node may exclude from the selection process the neighboring node from which the node received the state information. The process may be repeated whereby the node may select a subsequent node and forward the state information to that node.

The user device may be any device that is configured to communicate with the computing resource service provider or its associated entities. The user device may also be equipped with local or remote for example network based computational and storage capabilities. The user device may also be equipped with communications and networking hardware and may be configured to communicate using any communications protocol. Further the user device may be equipped with input output I O devices that may include a display a touch screen based or keyboard based input device or speakers. Additionally the user device may include any type of memory such as static or dynamic memory and a power source or a power adapter. The user device may be associated with a customer which may be an organization that may utilize one or more of the services provided by the computing resource service provider for example to maintain and deliver information to its employees which may be located in various geographical locations. Additionally the customer may be an individual that utilizes the services of the computing resource service provider to deliver content to a working group located remotely.

The network may be a collection of routers switches or various other types devices that enable data for example protocol compliant packets to be exchanged between the user device and the computing resource service provider . The network may be public or private whereby examples of the network include the Internet an intranet or an Internet service provider ISP network.

The computing resource service provider may provide various computing resource services to its customers. The services provided by the computing resource service provider in this example include a virtual computer system service and a data storage service . It is noted that not all embodiments described herein include the services described with reference to and additional services may be provided in addition to or as an alternative to services explicitly described herein. As described herein each of the services may include one or more web service interfaces that enable the customer to submit appropriately configured application programming interface API calls to the various services through web service requests. In addition each of the services may include one or more service interfaces that enable the services to access each other e.g. to enable a virtual computer system of the virtual computer system service to store data in or retrieve data from the data storage service .

The virtual computer system service may be a collection of computing resources configured to instantiate virtual computer systems on behalf of a customer. The customer may interact with the virtual computer system service via appropriately configured and authenticated API calls to provision and operate virtual computer systems that are instantiated on physical computing devices hosted and operated by the computing resource service provider . The virtual computer systems may be used for various purposes such as to operate as servers supporting a website to operate business applications or generally to serve as computing power for the customer. Other applications for the virtual computer systems may be to support database applications electronic commerce applications business applications and or other applications. Although the virtual computer system service is shown in any other computer system or computer system service may be utilized in the computing resource service provider such as a computer system or computer system service that does not employ virtualization instantiation or abstraction and instead provisions computing resources on dedicated or shared computers servers and or other physical devices.

The data storage service may comprise one or more computing resources that collectively operate to store data for a customer using any type of storage such as block level storage or object level storage. Storage devices utilized by the data storage service may for instance be operationally attached to virtual computer systems provided by the virtual computer system service to serve as logical units e.g. virtual drives for the computer systems. A storage device may enable the persistent storage of data used generated by a corresponding virtual computer system where the virtual computer system service may only provide ephemeral data storage.

The computing resource service provider may additionally maintain one or more other services based at least in part on the needs of customers. For instance the computing resource service provider may maintain a database service. The database service may be a collection of computing resources that collectively operate to run one or more databases and a customer may operate and manage a database from the database service by utilizing appropriately configured API calls. This in turn may allow for maintaining and potentially scaling the operations in the database. Other services include but are not limited to object level archival data storage services services that manage and or monitor other services and or other services.

As described herein a node may be a host computer a server a storage device or any other type of device that is configured to provide a computing functionality. For example the node may be a server that provides computing functionality as part of a virtual computer system service or a hard drive in a data storage service as described herein. The node may be equipped with I O capability that enables the node to communicate with various parties such as other nodes users network administrators and the like. Further the node may be equipped with local or remote for example network based computational and storage capabilities. The computational capabilities of the node may be provided at least in part by a processor such as a central processing unit CPU graphics processing unit GPU and digital signal processor DSP among others. Examples of CPUs include CPUs that employ an x86 architecture or a reduced instruction set computing RISC architecture. The node may also be equipped with communications and networking hardware and may communicate using any communications protocol. The node may include any type of memory such as static or dynamic memory and a power source or a power adapter. Aside from its hardware capability the node may be configured to run or execute an operating system and or other programs and the node s associated memory may store executable instructions that when executed by one or more processor cause one or more functions to be performed or cause the operating system and or other programs to run. The node may be utilized a customer which may be an organization to maintain and deliver information to its employees which may be located in various geographical locations. Additionally the customer may be an individual that utilizes the node to deliver content to a working group located remotely.

Each node of the plurality of nodes may retain state information. For example a node may store a record of the state information in local or remote storage. Further each node may also be capable of receiving state information updates from others nodes in the network or a network device for example a router . Upon receiving a state information update a node may incorporate the received update in the record of state information.

To establish a connection between two nodes a node may transmit a multicast message or a presence message to one or more neighboring nodes. The one or more neighboring nodes may be within a radius of the node. Further the one or more neighboring nodes may be part of a group of nodes such as a subnet or a net block. The multicast message or the presence message may be received by the one or more neighboring nodes and the one or more neighboring node may respond to the multicast message or the presence message and a connection may be established between the two nodes. Nodes that are configured to establish a connection or nodes that are configured to receive or respond to multicast or presence message are referred to herein as neighboring nodes.

Referring to few or no limits may be imposed on the number of neighboring nodes connections that a node may establish. In the network node N is connected to a plurality of neighboring nodes which include node N and node N among others. The existence of neighbor connections facilitates propagating state information or updates thereof among the nodes of the network. To propagate state information a node that receives state information may share the state information with neighboring nodes using their neighbor connections. Two neighboring nodes may negotiate state information updates whereby a node receiving state information may determine whether the received state information is in fact new or whether the node already has the state information. The receiving node may then update its associated record or database accordingly for example by causing the new state information to be incorporated or by ignoring the state information if the node already retains the received state information.

As shown in node N receives state information that is sought to be propagated to the remaining nodes in the network . The state information may be new to node N or the network or may be an update to existing state information held by node N . Node N may then cause the state information to be propagated to neighboring nodes N and N among others. Further upon receiving the state information node N may in turn cause the state information to be propagated to its neighboring nodes. Accordingly node N may also receive the state information from node N .

Node N may have updated its record in accordance with the received state information from node N and the receipt of the state information from node N may be deemed a redundant update. In the node connectivity approach described with reference to few or no limits may be imposed on a node s ability to establish connections with neighboring nodes and utilize the connections to propagate state information . Further the approach is also de centralized as individual nodes are permitted to propagate information without a need for a centralized authority to manage or oversee the forwarding of state information .

To alleviate some of the drawbacks associated with the graph described with reference to such as the prevalence of redundant updates a node s ability to establish neighbor connections may be limited. However limiting the node s ability to establish neighbor connections while reducing redundant updates may not fully optimize the propagation of state information across a network. As described herein establishing neighbor connections may be positively biased to nodes that retain a relatively larger number of neighbor connections. Accordingly the resulting network connectivity may be comprised of a number of nodes that may be deemed as information centers or information brokers. The information brokers may be highly connected and may propagate state information updates to many nodes. Further lower degree nodes may facilitate propagating state information updates between the information brokers.

The node then receives from each neighboring node a number connections of the neighboring node. The number connections may be the number nodes with which the neighboring node is connected. The number of connections may indicate the level of connectivity for each neighboring node whereby for example neighboring nodes that are associated with a large number of connections may be deemed to be information brokers that are capable of propagating information to a larger number of nodes than neighboring nodes associated with a relatively smaller number of connections. The number of connections associated with a node may be proportional to the node s ability to propagate state information updates. Further the number connections may be received over a dedicated channel and in response to a request for the number of connections.

The node selects a set of the neighboring nodes based at least in part on the number of connections associated with the neighboring node. The likelihood of selecting a neighboring node may be a function of the number of connections associated with the neighboring node whereby neighboring node selection may be performed probabilistically or stochastically. The selection may be biased towards neighboring nodes having relatively larger numbers of connected neighbors. In some embodiments the probability of selecting a neighboring node may be weighed by or proportional to the number of connections of the neighboring node. For example if a node has three neighboring nodes where a first neighboring node has one connection a second neighboring node has two connections and a third neighboring node has four connections the third neighboring node may be two times as likely to be selected as the second neighboring node and four times as likely to be selected as the first neighboring node. It is noted that various approaches for biased neighboring node selection are within the scope of the embodiments described herein. For example any type of modified selection criteria that favors connected neighbors may be utilized. In an embodiment when ndenotes the number of connections of a neighboring node having an index i the probability of selecting the neighboring node denoted as P is represented as 

A limit may be imposed on the number of selected neighboring nodes. The limit may be a pre specified number or may be based at least in part on the number of discovered neighboring nodes. For example the limit may be a percentage of discovered neighboring nodes whereby given that the limit is set to 10 and a node discovers neighboring nodes the node may establish ten neighbor connections. Following neighboring node selection the node establishes a connection with some or all of the members of the set of selected neighboring nodes. Establishing the connection based at least in part on biased neighboring node selection causes the node to gravitate towards making connections with more heavily connected neighbors as described herein. Further not precluding the node from establishing a connection with relatively less connected neighboring nodes results in injecting an element of randomness in connection establishment.

Each solid line between two nodes represents a connection between the two nodes. As a result of the connection establishment described herein nodes N and N are highly connected relative to the remaining nodes and nodes N and N may be utilized for propagating state updates to other nodes. For example state information received by node N may be propagated to node N via node N . In addition the lack of connectivity between node N and node N spares node N from receiving a redundant update from node N . It is noted that the lack of connection between N and N may be the result of biased selection as described herein whereby node N is more likely to establish a connection with node N than node N due to the fact that node N has a larger number of neighboring node connections than node N . Similarly node N is more likely to establish a connection with node N than node N due to the larger number of neighboring node connections associated with node N .

Node connectivity of the network described with reference to is advantageous over highly connected networks e.g. networks in which nodes are permitted to establish as many connections as possible in that in the network it is less likely to propagate redundant updates. For example in a highly connected network a node is more likely to receive redundant updates and utilize computational resources in propagating the redundant updates. Conversely in the network highly connected nodes such as nodes N and N serve as information brokers that propagate state updates to other nodes in the network such as nodes N N . Nodes that are not highly connected such as nodes N and N may in turn propagate state updates between the highly connected nodes. For example nodes N and N are more likely to establish a connection with highly connected nodes than less connected nodes and accordingly nodes N and N may facilitate propagating state updates between the highly connected nodes.

The node may receive the state information update from the first neighboring node by polling for example periodically or according to a specified schedule the first neighboring node and requesting state information updates from the first neighboring node. The polling may be performed in a unidirectional manner by either node. Alternatively a bidirectional exchange of state information may be performed by for example combining the state information retained by the two nodes and populating the state information in the two nodes.

The node then selects a second neighboring node from its set of connected neighboring nodes. The selection may be performed randomly whereby each neighboring node may have an equal probability of being selected. The first neighboring node may be excluded from the selection so as to guard against redundant state updates. For example if the node has m neighboring nodes that may be selected for propagating state information updates the probability of selecting the second neighboring node from the set of m nodes may be denoted as P and may be represented as 

Further in some embodiments the selection may not be random whereby the probability of selection may be based at least in part on or influenced by the number of connections associated with a neighboring node. The node sends the state information update to the second neighboring node. After the sending the state information update the second neighboring node may determine whether to incorporate the state information.

In some embodiments more than one neighboring nodes may be selected for propagating state information updates whereby increasing the number of selected neighboring nodes may increase the frequency of the propagation of state information updates. As described herein the node from which the state information update is received may be excluded from the selection in order to mitigate redundant updates.

A node may retain a data structure for storing neighboring node identities. The data structure which may be a ring buffer or a circular buffer may have a size having an enforceable limit. The data structure may store the identities of neighboring nodes with which the node established a connection or to which state information updates were propagated. Because the ring buffer is size limited and the oldest data in the ring buffer is the first to be overwritten for example due to recording node identities in a circular fashion the ring buffer may only store the identities of neighboring nodes with which the node recently established a connection or to which the node recently propagated state information. The likelihood of selecting a node may be biased based at least in part on the data retained in the ring buffer. For example the probability of selecting a neighboring node may decrease as the number of times the neighboring node identity appears in the data structure. Accordingly the likelihood of selecting a neighboring node that is not up to date with the node is increased at the expense of a neighboring node that is in sync with the node.

Further neighboring node identities stored in the data structure may be associated with a constraint such as a time based constraint indicating a time of selection of the neighboring node. The neighboring node identities and the constraint may be used in selecting a neighboring node. For example if a system parameter specifies that only neighboring nodes that have not been selected within a specified time period may be selected the data structure may be used to exclude one or more neighboring nodes from selection. In other embodiments the data structure may be used to retain identities of neighboring nodes that were selected within a specified time period such as the last 15 minutes. Further the neighboring nodes whose identities are stored in the data structure may be excluded from selection in order to avoid repeated or frequent selection of one or more nodes for state information propagation.

It may be desirable for the network to be churned or re randomized to avoid being defined by a set pattern of neighbor connections. Network churning is advantageous in that it results in repairing any disconnections that may occur in the network . A disconnection may occur when a portion of the network becomes isolated from a remainder of the network and no longer receives state information updates from the remainder of the network. Further network churning may alleviate propagation delay experienced by a node in the network by potentially reconnecting the node with another node. Network churning may occur naturally and may be stimulated by procedures employed in the network. For example as new nodes come into service and establish connections with neighboring nodes network churning will occur due to the newly established connections. Further nodes may also malfunction and exit the network. The malfunctioning may for example be due to hardware failures such as hard drive or processor failure. When a node exits the network and severs connections to its neighboring nodes the neighboring node may replace the severed connection and re connect with a different node. Dissolving an existing connection or establishing a new connection causes a network to be churned.

Churning may be stimulated by configuring one or more nodes of a network to re new or replace connections. For example a node may be configured to add one or more new connection if it is determined that the number of existing connections is below a threshold. Similarly the node may be configured to terminate one or more connections if the number of existing connections of the node is above a threshold. Further a node may be configured for example randomly every specified period of time or according to schedule to terminate a portion of or all of its existing connections or re establish node connections as described herein.

State information that is trafficked between nodes may include updates to existing state information whereby an originating node may send to a neighboring node state information that the originating node deems as new. Because state information that is not deemed as new may not be propagated by a node any two nodes whether connected directly or indirectly may be synchronized with respect to recently updated state information but out of sync with respect to older state information. Each element of state information may be associated with a timestamp that may represent the time on which the state information was incorporated into the network. For example the timestamp may represent the time on which the state information was first incorporated into a node of the network. A monitoring entity may sample the state information retained by two or more nodes and determine whether the state information associated with either one of the two nodes requires to be updated based at least in part on the timestamps associated with the state information.

In an embodiment state information retained by one or more nodes may be partitioned and the portioned state information may be used to synchronize out of sync nodes. The state information retained by a node may be partitioned based at least in part on an identity associated with the state information for example a name associated with the state information or a timestamp of the state information for example time of receipt by a node or a network . When partitioned the state information may be categorized in two or more categories. One or more hash functions may be applied to the partitioned state information of a first node to produce one or more hash values. The one or more hash values may be shared with a second node that has similarly partitioned state information. The second node may also apply the one or more hash functions to its partitioned state information to produce one or more hash values which may be compared to the received hash values. Based at least in part on the comparison if the one or more hash values produced by the first and second nodes are determined to be different the first and second nodes may be determined to be out of sync with respect to the partitioned hash values. Conversely if the one or more hash values produced by the first and second nodes are determined to be the same the first and second nodes may be determined to be synchronous with respect to the partitioned hash values. It is noted that the comparison may be performed by the first node second node or the monitoring entity. Is it also noted that state information partitioning is advantageous in detecting asynchronous nodes and resolving state information differences between nodes for state information updates that occur over a particular time period or for certain types of state information as opposed to all historical state information updates.

Causing the nodes to become synchronized may include instructing the nodes to establish a connection with one another and resolve the differences in their state information. Once connected the nodes may update their respective state information to include state information retained by the counterpart node. Further one or more of the nodes may be requested to grow their respective connections to neighboring nodes to increase the likelihood of receiving state information updates.

The timestamps associated with state information may be used to identify a disconnection or a split in a network. For example if the monitoring entity determines that two nodes retained common state information up to a certain point in time and subsequent to the point in time they retained different state information the monitoring entity may determine that a disconnect in the network occurred at the identified point. Accordingly the monitoring entity may trigger repairs in the network to fix the disconnection by for example requesting some nodes to increase their associated number of node connections.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. Servers as used herein may be implemented in various ways such as hardware devices or virtual computer systems. In some contexts servers may refer to a programming module being executed on a computer system. As used herein unless otherwise stated or clear from context the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed virtual or clustered environment. The application server can include any appropriate hardware software and firmware for integrating with the data store as needed to execute aspects of one or more applications for the client device handling some or all of the data access and business logic for an application. The application server may provide access control services in cooperation with the data store and is able to generate content including but not limited to text graphics audio video and or other content usable to be provided to the user which may be served to the user by the web server in the form of HyperText Markup Language HTML Extensible Markup Language XML JavaScript Cascading Style Sheets CSS or another appropriate client side structured language. Content transferred to a client device may be processed by the client device to provide the content in one or more forms including but not limited to forms that are perceptible to the user audibly visually and or through other senses including touch taste and or smell. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the web server using PHP Hypertext Preprocessor PHP Python Ruby Perl Java HTML XML or another appropriate server side structured language in this example. It should be understood that the web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein. Further operations described herein as being performed by a single device may unless otherwise clear from context be performed collectively by multiple devices which may form a distributed and or virtual system.

The data store can include several separate data tables databases data documents dynamic data storage schemes and or other data storage mechanisms and media for storing data relating to a particular aspect of the present disclosure. For example the data store illustrated may include mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as page image information and access rights information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. The application server may provide static dynamic or a combination of static and dynamic data in response to the received instructions. Dynamic data such as data used in web logs blogs shopping applications news services and other such applications may be generated by server side structured languages as described herein or may be provided by a content management system CMS operating on or under the control of the application server. In one example a user through a device operated by the user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser. It should be noted however that embodiments of the present disclosure are not necessarily limited to the context of web pages but may be more generally applicable to processing requests in general where the requests are not necessarily requests for content.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed and or virtual computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop laptop or tablet computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network. These devices also can include virtual devices such as virtual machines hypervisors and other virtual devices capable of communicating via a network.

Various embodiments of the present disclosure utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as Transmission Control Protocol Internet Protocol TCP IP User Datagram Protocol UDP protocols operating in various layers of the Open System Interconnection OSI model File Transfer Protocol FTP Universal Plug and Play UpnP Network File System NFS Common Internet File System CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network a satellite network and any combination thereof.

In embodiments utilizing a web server the web server can run any of a variety of server or mid tier applications including Hypertext Transfer Protocol HTTP servers FTP servers Common Gateway Interface CGI servers data servers Java servers Apache servers and business application servers. The server s also may be capable of executing programs or scripts in response to requests from user devices such as by executing one or more web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Ruby PHP Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM as well as open source servers such as MySQL Postgres SQLite MongoDB and any other server capable of storing retrieving and accessing structured or unstructured data. Database servers may include table based servers document based servers unstructured servers relational servers non relational servers or combinations of these and or other database servers.

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU or processor at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disc Read Only Memory CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected when unmodified and referring to physical connections is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. The use of the term set e.g. a set of items or subset unless otherwise noted or contradicted by context is to be construed as a nonempty collection comprising one or more members. Further unless otherwise noted or contradicted by context the term subset of a corresponding set does not necessarily denote a proper subset of the corresponding set but the subset and the corresponding set may be equal.

Conjunctive language such as phrases of the form at least one of A B and C or at least one of A B and C unless specifically stated otherwise or otherwise clearly contradicted by context is otherwise understood with the context as used in general to present that an item term etc. may be either A or B or C or any nonempty subset of the set of A and B and C. For instance in the illustrative example of a set having three members the conjunctive phrases at least one of A B and C and at least one of A B and C refer to any of the following sets A B C A B A C B C A B C. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of A at least one of B and at least one of C each to be present.

Operations of processes described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. Processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments of the present disclosure to be practiced otherwise than as specifically described herein. Accordingly the scope of the present disclosure includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the scope of the present disclosure unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

