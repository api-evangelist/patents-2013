---

title: System and method for creating and sharing photo stories
abstract: A system and method are described for creating, managing and sharing photo stories. For example, one embodiment of a computer implemented method for selecting among a plurality of different photo story templates comprises: receiving a plurality of new photos from a user the photos having metadata associated; analyzing the photos and the metadata associated with the photos; responsively grouping the photos into a plurality of different photo stories based on the analysis of the photos and the metadata associated with the photos; and selecting a set of photo story design templates for each of the different photo stories based on the analysis of the photos and the metadata associated with the photos grouped into the different photo stories.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09014489&OS=09014489&RS=09014489
owner: Shutterfly, Inc.
number: 09014489
owner_city: Redwood City
owner_country: US
publication_date: 20131218
---
The present patent application is a continuation application of and claims priority to commonly assigned pending U.S. patent application Ser. No. 12 779 673 entitled System and method for creating and sharing photo stories filed May 13 2010 by the same inventors the disclosure of which is incorporated herein by reference.

This invention relates generally to the field of network data processing systems. More particularly the invention relates to an improved architecture and method for generating photo stories.

Current Web based photo sharing systems allow end users to upload share and print digital photographs over the Internet. These systems also allow the end user to combine groups of related photos into printable Photo Books with various cover options designs and templates. Users may select among different Photo Book design themes including for example Wedding New Baby and Holidays. Within each Photo Book theme the user may further select among different style templates including different fonts photo edges page layouts and colored backgrounds.

One limitation of current Photo Book systems however is that the user must manually select an appropriate Photo Book theme template and then manually select the photos and styles to be used for the selected template. This results in a significant amount of time wasted selecting options which depending on the requirements of the end user may ultimately be inappropriate. By way of example the end user may manually choose a template which is suitable for displaying 1 5 photos whereas the user may ultimately need a template capable of displaying for example 10 or more photos. Similarly the user may wish to use photos with different sizes and orientations thereby rendering certain templates unusable. Additionally current systems do not automatically select templates based on various types of metadata associated with the uploaded photos including for example the dates on which the uploaded photos were captured.

Consequently what is needed is an improved system and method for creating and sharing groups of photos on the Internet and on printed products.

A system and method are described for creating managing and sharing photo stories. For example one embodiment of a computer implemented method for selecting among a plurality of different photo story templates comprises receiving a plurality of new photos from a user the photos having metadata associated analyzing the photos and the metadata associated with the photos responsively grouping the photos into a plurality of different photo stories based on the analysis of the photos and the metadata associated with the photos and selecting a set of photo story design templates for each of the different photo stories based on the analysis of the photos and the metadata associated with the photos grouped into the different photo stories.

Described below is a system and method for creating and sharing photo stories over the Internet. Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances well known structures and devices are shown in block diagram form to avoid obscuring the underlying principles of the present invention.

The assignee of the present application has developed an online stationery and greeting card system as described in the following co pending patent applications which are incorporated herein by reference 

SYSTEM AND METHOD FOR MANAGING CONTACTS AND CALENDARS WITHIN AN ONLINE CARD SYSTEM Ser. No. 12 702 932 filed Feb. 9 2010 

SYSTEM METHOD AND GRAPHICAL USER INTERFACE FOR MANAGING CONTACTS AND CALENDARS WITHIN AN ONLINE CARD SYSTEM Ser. No. 12 703 051 Feb. 9 2010 and

SYSTEM METHOD AND GRAPHICAL USER INTERFACE FOR MANAGING CONTACTS AND CALENDARS WITHIN AN ONLINE CARD SYSTEM Ser. No. 12 703 130 Feb. 9 2010.

Certain aspects of the systems described in these applications may be used for implementing an online photo service for creating sharing and printing groups of photos as described in detail below. As such the system architecture described in the co pending applications will first be described following by a detailed description of a system and method for creating and sharing photo stories.

At a contacts import module manages the importation of contacts from various local and or online contact databases identified by the end user. In the illustrated embodiment the contacts import module comprises a format conversion module and a conflict detection and resolution module . As shown in the format conversion module reads contacts data from online contacts databases local contacts databases i.e. local to the user s client computer and or existing contacts already stored on the online stationery service e.g. the end user may have already established an account on the online stationery service to send stationery and may have entered information for a set of contacts . If the online local contact formats are supported determined at then at the format conversion module converts the contacts to a format optimized for use on an online stationery service . To perform the format conversion the format conversion module parses the contact data in source data structure e.g. the CSV file vCard file etc extracts the data and assigns the data to appropriate data fields in the new data structure. Various well known techniques for converting data from one format to another may be employed by the format conversion module . Once converted and following conflict detection described below the contacts data is stored in its new format within a contacts database on the stationery service. Various features associated with this new data format are described in detail below.

At a conflict detection and resolution module merges the local and or online contacts with existing contacts already stored on the online stationery service and detects any conflicts which may result from the merge operation. A conflict may result if one or more contacts being imported are already stored within the existing contacts database . In such a case the conflict detection and resolution module resolves the conflicts at using a set of conflict resolution rules described below . Once all conflicts have been resolved the data is persisted within the contacts database and made accessible to end users via the stationery service contacts manager . In one embodiment the contacts database is implemented using mySQL. However various different database formats may be employed while still complying with the underlying principles of the invention e.g. Microsoft SQL IBM SQL etc .

At the user identifies one or more households within the stationery service contacts database . As described below households are specialized groups of contacts who live at the same address. The concept of a household is a particularly useful abstraction for an online stationery service which mails stationery on behalf of a user.

As illustrated in in one embodiment all operations to the stationery service contacts database occur through the stationery service contacts manager . That is the stationery service contacts database is used for persistent storage of contacts data containing the features described herein and the stationery service contacts manager is the application layer program code used to perform operations on the stationery service contacts database as described below. The presentation and session management logic comprises the program code for maintaining user sessions and for dynamically generating Web pages containing among other things the graphical user interface GUI features for manipulating contacts data as illustrated herein.

Returning to the method of at the user selects and personalizes a stationery design. In one embodiment this is accomplished with a stationery personalization engine such as that described in co pending application entitled SAMFDAGOS Ser. No. 12 188 721 filed Aug. 8 2008 which is assigned to the assignee of the present application and which is incorporated herein by reference. In one embodiment the stationery personalization engine performs all of the functions described in the co pending application as well as the additional functions described herein e.g. selecting contacts households for a stationery mailing via the stationery service contacts manager selecting between a default message or a personal message for the contacts households etc .

At the end user creates a default message to be used for a stationery mailing and at the contacts and or households for the mailing are identified by the end user. If the user wishes to include a personalized message in lieu of the default message for one or more contacts households determined at then the user selects a contact household at and enters the personalized message for the contact household at . If any additional personalized messages are to be included determined at then steps and are repeated until all personalized messages have been entered.

At all of the information related to the stationery order including the selected stationery design default messages personalized messages and associated contacts and households are formatted for printing by a print module which generates a print job . The formatting may include converting the stationery data mentioned above into a format usable by a particular printer. By way of example a letter press printer may require different formatting than a digital press printer. In one embodiment the specifications for the print job are encapsulated as metadata in an Extensible Markup Language XML document and transmitted to an external print service . In one embodiment the XML document includes a hyperlink e.g. a URL to the formatted print job on the online stationery service . The print service then accesses the print job by selecting the hyperlink. Regardless of how the print job is accessed at the formatted print job is transmitted to either an internal printer or an external print service e.g. over the Internet . Once printing is complete the online stationery service or the print service mails the stationery to the contacts and or households identified by the end user.

Having provided an overview of the method set forth in and the architecture illustrated in various specific details associated with managing contacts generating print jobs and mailing stationery from an online stationery service will now be provided. It should be noted however that the underlying principles of the invention are not limited to the particular architecture shown in or the particular method set forth in .

In one embodiment the calendar database stores calendar data for each user of the online stationery greeting card service and the calendar service comprises executable program code for managing the calendar data e.g. reading adding deleting and modifying calendar entries . In one embodiment the calendar service also acts as an interface to the calendar data to other system modules and e.g. by exposing a calendar data API .

The reminder service generates graphical or audible reminders of upcoming calendar events and may prioritize the events based on a set of prioritization rules. In one embodiment the calendar events are prioritized chronologically but some events are given relatively higher priority than other events based on the relationship between the user and the card stationery recipients e.g. the user s parents may be given a higher priority than the user s friends notwithstanding the event dates . For example an entry corresponding to Mother s Day may be prioritized at the top of the list even though other events e.g. Labor Day are nearer in time. In one embodiment the highest prioritized event is either the next event created by the user birthday anniversary other etc OR the next significant Holiday where significant holidays are identified in the online stationery card system and may change over time. In one embodiment the significant holidays are Mother s Day Father s Day and Christmas.

The recommendation engine with filtering logic generates stationery card recommendations to the end user based on the user s preferences and allows the user to filter the results according to user specified filtering criteria. In one embodiment the recommendations are categorized based on certain stationery card characteristics and visually displayed to the end user in different categories e.g. new designs with pictures etc . Moreover in one embodiment the recommendation engine recommends stationery designs based on the preferences of the user and or the preferences of the recipient if known .

In one embodiment the scheduling service implements a scheduling algorithm to ensure that stationery card orders are delivered within a specified delivery window and or on a specific date. For example the user may specify that a stationery card order is to arrive 3 4 days prior to a recipient s birthday. In such a case the user does not want the card to arrive to soon e.g. 2 weeks prior to the birthday or too late after the birthday . To precisely schedule stationery card orders one embodiment of the scheduling service evaluates the time required by the print services required to fulfill the order e.g. thermography digital press etc. the delivery type e.g. regular mail FedEx etc and the end user preferences.

In one embodiment three data points are used to determine the delivery date processing time fulfillment time and shipping transit time. The processing time may be based on the type of order. For example processing time can be 0 days for greeting cards and several days for some stationery cards e.g. those which require additional review by the online card stationery service prior to fulfillment . The processing time is based on business days so it must factor in non business days such as Holidays and Weekends to determine the number of calendar days required for processing. Fulfillment time is the number of days required to print finish and ship mail the order and is typically between 1 3 days e.g. depending on the printing requirements . This time is based on business days for the fulfillment site which in one embodiment may be different than business days for the processing site. Shipping transit time is estimated based on the fulfillment site physical location and the shipping address of the recipient. The shipping transit time is based on business days for the shipping carrier and may be different than business days for the processing site and fulfillment site. In one embodiment after computing the sum of the three data points the system has the number of calendar days required for the order and determines the date that the order must be sent to the processing site in order to be delivered on the specified delivery date.

Presentation and session management logic generates the Web based graphical user interface GUI features described below allowing the end user to view and edit the calendar data contacts data filtered card recommendations and scheduling data. As illustrated in the presentation and session management logic communicates with each of the other functional modules and or communicates directly with the stationery service databases to retrieve the data needed for display within the GUI. Embodiments of the Web based GUI features generated by the presentation and session management logic are set forth below.

In one embodiment each of the functional modules illustrated in exposes an application programming interface API to provide access to data managed by that module. For example the contacts manager exposes an API allowing the calendar service and other modules to access contacts data and vice versa. Alternatively each of the functional modules may access the database s directly.

In one embodiment the calendar service automatically generates calendar events based on the contacts data stored within the contacts database . By way of example the calendar events may include birthdays anniversaries and other significant milestones associated with each of the contacts in the contacts database . In addition the contacts manager stores relationship data identifying the relationship between the user and each of the contacts in the user s contacts database e.g. identifying the user s spouse siblings parents children etc. . The calendar service uses the relationship data to generate calendar events. For example if the relationship data identifies the user s mother and father then the calendar data may associate Mother s Day and Father s Day respectively with those contacts. Similarly if the user is married with children the calendar service may associate his her spouse with Mother s Day or Father s Day and or the user s wedding anniversary.

Once calendar events are scheduled in one embodiment the reminder service automatically generates reminders for upcoming events. For example if a friend s birthday is approaching then the reminder service will notify the user a specified number of days weeks ahead of time so that the user has time to send a card. The specific timing of the reminder notifications may be specified by the end user and stored along with other user preferences within the user database .

In one embodiment the reminders are generated and displayed within a Web based GUI when the user logs in to the online stationery card service and or may be sent to the user in the form of an email message or mobile text message. If sent in an email links to the online stationery card service website may be embedded within the message to encourage the user to design a new card.

In one embodiment the recommendation engine generates greeting card stationery recommendations based on the occasion the identity of the contact associated with the occasion and the end user s preferences. For example if a particular contact s birthday is approaching the recommendation engine may recommend certain greeting card styles e.g. modern classical etc. based on the contact s preferences and or the user s preferences. The filtering logic allows the recommendations to be filtered based on specified variables e.g. theme color card format card size number of photos etc. .

The illustrated embodiment includes a photo story template engine for separating uploaded photos into a plurality of photo stories based on user input and metadata associated with each of the photos and automatically selecting an appropriate photo story template for each photo story. The embodiment shown in also illustrates a photo story layout engine for determining an appropriate layout for each of the photos within each photo story template.

A face recognition engine is included in one embodiment for analyzing pictures of people and generating facial signatures to uniquely identify the faces of those people. For example in one embodiment the face recognition engine is executed on all of the photos in the user s contacts database thereby generating facial signatures for all of the user s contacts and storing the results in the stationery service database . The facial signatures may then be used to identify the contacts in subsequent pictures uploaded by the user as described below. Alternatively the user may simply train the facial recognition engine by uploading photos and identifying the individuals shown in each of the photos.

In operation a user browses to a photo story creation Web page provided by the online photo service and selects a group of photos to be used to create one or more photo stories. Various well known techniques may be used for selecting the photos. For example the web page may include a browse button which generates a window for browsing to a particular folder on the user s computer where the desired photos are stored. The user may then highlight multiple photos e.g. by holding down the SHIFT or CTRL keys while clicking the computer mouse to select the photos. Alternatively the user may click and drag one or more photos from a local folder on the user s computer to a designated region on the Web page to cause the photos to be uploaded. In one embodiment a software application e.g. designed by the online photo service may be installed on the user s computer which automatically detects when new photos are imported from a photo source such as a digital camera and automatically uploads the photos to the online photo story service . In another embodiment photos are imported from an online photo service such as Flickr Picasa Web or SmugMug which have public application programming interfaces APIs that allow other web sites to import photos from their servers. In another embodiment software running directly on the photo capture device such as a digital camera or mobile phone automatically uploads new photos to the photo story service after they are taken.

As the photos are uploaded they are stored within the stationery service database illustrated as Uploaded Photos With Metadata in . Virtually all digital photos include some types of metadata which is used by the various embodiments of the invention described herein. For example a photo captured with a digital camera typically includes the date and the time of day that the photo was taken. In addition some digital camera devices may also stamp the photo with a Geotag indicating the location where the photo was taken. The location may be determined for example using Global Positioning System GPS technology and stored with each photo. Moreover some digital camera devices may be equipped with face recognition hardware software for identifying individuals in the pictures e.g. using the same techniques as those used by the facial recognition engine on the photo service . Various other additional metadata may be associated with each photo including for example the orientation of the photo e.g. portrait landscape the photo size and the photo resolution to name a few.

In addition to the metadata which is generated by the source of each photo e.g. the digital camera one embodiment of the invention generates additional metadata for each photo either automatically by analyzing the photo or manually by requesting information from the user . For example as mentioned above if the user has previously executed the facial recognition engine and identified people in photos e.g. from the pictures in the user s contacts database then the face recognition engine may automatically identify the people in each of the uploaded photos. Alternatively the photo stories service could provide a user interface to select the names of the people that are in the photos from the stationery contacts database. In addition the user may be prompted to enter information for each photo such as a set of keywords identifying the individuals or describing the scene and or location presented in each photo.

Regardless of how the metadata is generated it is stored for each photo within the set of uploaded photos on the stationery service database . In one embodiment the photo story template engine uses the metadata to automatically separate the uploaded photos into different photo stories and to select appropriate templates for each photo story. Metadata variables which may be evaluated to separate the photos into different stories may include but are not limited to the date and time on which the photos were captured the people identified in the photos and or the location at which the photos were taken. For example one technique for separating photos into different photo stories is to generate a separate photo story for each date or date range. Alternatively or in addition if people are identified in each photo either automatically by the face recognition engine or manually by the user the photo story template engine may create separate photo stories for each identified person or group of people. For example if the user s children are identified then a photo story may be created using only photos of those children. Moreover a story may be created for the location at which the photos were taken e.g. at home at work or using any combination of date time identity of subject and or the location of the set of photos.

In one embodiment the default operation of the photo story template engine is to generate a different photo story for each date or time range. However the user may specify that photo stories should be grouped using different criteria such as the identity of specific individuals e.g. particular members of the user s immediate family specific friends etc or that date time and identity may be used to create the photo stories.

Regardless of how the photos are divided between photo stories the photo story template engine then suggests photo story template designs for each photo story based on the attributes of the photo story. The goal is to suggest a design that best suits the story and automatically arrange the pictures in the design template to reduce the work required by the end user. One embodiment of the template selection algorithm initially filters out templates that are not well suited for the story and then calculates a specific weighting score on each attribute for each photo story template to create a ranking score for each template. The templates are then sorted by rank and the top ranked template is used to display the photo story as shown in . The remaining ranked templates are made available to the end user in a graphical user interface GUI see e.g. to allow the user to browse through the recommended designs. In particular in one embodiment the photo story template engine selects appropriate templates for each story according to one or more of the following metadata variables 

Date Taken The date of the story is used to determine the season or time of year that it occurred. Each photo story template can include a season attribute defined as a period starting from a specific day and month to an ending day and month. For example a template could be designed for winter which starts December 1 and continues until March 1. If the photo story date is between those days of the year the template will be assigned the season score. As another example a template could be designed for a holiday such as Christmas on December 25. If the story date is December 25 season score will be applied to the template.

Number of Photos The template has an attribute for number of photos defined as a range from 1 to 100. If the number of photos in the story is not within the range specified in the template the template is filtered out as not applicable for the story. In addition a preferred range of photos may be specified e.g. 2 5 for each photo story template. If the number of photos in the story falls within the preferred range then a relatively higher weight may be applied to the prospective template.

Orientation of the Photo If a photo is used as the story canvas background the orientation of the photo could impact the design. A template can include an orientation attribute with one of the values of Landscape Portrait or Square. This attribute is used to filter out templates that do not apply. For example if the photo is landscape orientation all templates that have the orientation attribute set to Portrait or Square and have the photo as background will be filtered out.

Title and Description The title and description are optional information that the user can enter for a photo story. If the story includes either of these two attributes any template that does not include them will be filtered out. The template can also display the date taken and the age of people in the photo story. If the story includes these attributes and the template includes the attribute the template is assigned the score for date taken or age respectively.

Occasion The design template can include an occasion attribute such as Birthday or Anniversary. If a person in the story has a birthday on the story date and the template has the birthday occasion attribute set the template is assigned the Birthday score. Similarly if a person in the story has their wedding anniversary on the story date the template is assigned the Anniversary score.

Template Tags A template can include keyword tags that describe the design. If the story title or description entered by the end user contains any of the tags in the template the template is assigned the title tag or description tag score. In one embodiment the title is weighted higher than the description because the title entered by the user is more important in describing the story.

People Tags A person defined in a user profile and possibly stored within the contacts database can include keyword tags that describe their personality or interests. If the person tags match any of the tags in the template the template is assigned the people tag score. For example if a person loves dolls the user can add a dolls tag and a template with dolls will be suggested by the recommendation system.

People s Favorite Colors A favorite color may be specified for a person defined in a user profile and or contacts database. If the person identified in a story has a favorite color that matches a color in the template the template is assigned the favorite color score.

Location A template can have a location region and or point of interest attribute that defines the geographic area and or the specific location for which the design is best suited. In one embodiment a region is defined as a city state or group of states. If the location of the photo story is known either as part of the photo meta data or manually entered by the user and the template has the same location or region the template is assigned the location or region score weight. For example a template could be designed for the Monterey Bay Aquarium with sea creatures and logos from the aquarium. If a story has the location set to the Monterey Bay Aquarium the template is assigned the location score. As another example if a photo was taken in New York City and a template is set with New York City as the region then the template is assigned the region score.

Design Style A template can include a design style attribute such as Artistic Classic Vintage Whimsy or Contemporary. A user profile or contact entry within the user s contacts database can include a design style attribute either selected by the user or based on past photo story usage and orders. If the design style attribute for the user matches the design style attribute of the template the template is assigned the style score.

Mood The mood of the photo story can also reflect on the design template. By way of example mood options may include Angry Happy Relaxed and Sad. As with other variables the preferences of the user and or people identified in the photos may be determined to select a mood.

Relationships A template can include relationships that define the personal relationships for which the design is best suited. The user profile can include a contacts database with people and their relationship to the user e.g. son daughter wife mother father etc . Consequently when people are identified in photos the photo stories will include attributes associated with the people in the story which then associates the story to relationships. If the story includes people with relationships that match the relationships set on the photo story template then the template is assigned the relationship score. The template can also include a relationship group such as My Family or Couple . If a relationship group is set on the template it will be filtered out if the story does not include the exact relationships. For example for the My Family relationship group the story must include the relationship defined in the user profile as my family. The Couple relationship group may be defined as husband and wife.

In one embodiment the following weights are applied to attributes by the photo story template engine . The attributes are weighted by importance when determining the best matches for the photo story with higher values meaning higher importance 

It should be noted however that the underlying principles of the invention are not limited to any particular set of attribute weights.

In one embodiment the photo story template engine scans through all of a user s photos or an identified subset of the user s photos to create new stories based on requirements specified by the user. For example the user may specify that a story is to be created using photos of the user s children. In response the photo story template engine will identify all photos of the user s children e.g. using the metadata discussed above and generate photo stories using these photos. Similarly the user may specify that the photo story template engine should generate a photo story for the holiday season for a particular year for example by specifying a date range such as Dec. 24 2009 to Jan. 1 2010. The photo story template engine then generates stories using pictures from within the specified date ranges. One embodiment of the service will provide the user with pre configured options for certain holidays e.g. Thanksgiving 09 Photo Story . Because each photo has metadata associated with it virtually any user query directed to the metadata may be applied to identify a subset of photos and generate a photo story based on the query results. Of course the underlying principles of the invention are not limited to any particular type of metadata or query.

In one embodiment after a set of prospective photo story templates are selected and ranked by the photo story template engine the photo story layout engine automatically generates an exemplary photo story layout using the selected photo story templates photos and text associated with each photo story. In one embodiment each photo story template includes photo areas and text boxes based on relative dimensions and coordinates within the canvas of the photo story design template. The photos in the story are arranged within the photo areas and the size and coordinates of each photo area are dynamically adjusted by the photo story layout engine based on the number and size of the photos.

In one embodiment each photo area within a photo story design template includes an attribute for a minimum and maximum number of photos and the size and position of the photo area is determined based on the number and size of the photos in the story. One embodiment of the photo story layout engine uses the following attributes to arrange the photos within a photo template 

zIndex The design elements e.g. photo areas text boxes graphics are layered on the canvas based on the zIndex with larger values representing higher layer in the z plane.

Layout Order For normal layout flow the design elements are positioned based on the layout order starting from top left and going to bottom right.

Position Coordinates The design elements may have values for left top right and bottom defined as percentages of the width or height of the canvas.

Sort Order The photo areas have a sort order attribute that defines the order that photos are arranged in the photo areas.

Maximum Photos This attribute defines the maximum number of photos that a particular photo area can contain.

Dimensions The design element has a size defined as width and height as a percentage of the width and height of the canvas.

Effects A photo area can include effects including rotate feather and color conversion black and white sepia . The specified effects are applied to any photos within the designated photo area e.g. every photo is feathered by a specified percentage .

Border A photo area can include a border attribute to add a border with width padding and color to each of the photos within that photo area.

Photo Sizing This attribute defines how the photos in the photo area will be cropped to fit within the photo area with options including best fit uniform width and uniform height.

Photo Alignment This attribute defines how the photos are aligned and distributed within the photo area. Values are align left align center align right align top align middle align bottom distribute horizontally and distribute vertically.

Text Attributes Text boxes have attributes for font color size leading alignment and no wrap. If the no wrap attribute is set the text size is reduced to make the text fit within the text box without wrapping to the next line.

Text Variables Text boxes can include text variables that will be assigned values from the photo story information. These variables include Title Date Taken Location Description Family Name Member Name Member Home Address People Names People Ages Birthday Age and Anniversary Years.

The photos within a photo area are arranged based on an algorithm using the photo area attributes described above. The dimensions of the photo area are first determined based on the size of the template and dimensions attributes set on the photo area and the number and size of the photos in the photo area. For example if the minWidth and maxWidth are both 100 minHeight is 10 and maxHeight is 30 and there are three photos in the photo area the photo area width is set to the width of the template canvas and the height is determined by the height of the photos.

At user input is received to filter and or arrange the photos based on specified criteria. For example the user may specify that a particular photo story is to be focused on a particular subject e.g. the user s children during a particular day e.g. Halloween . The user may also adjust the time range to group more or less photos together. At the photo story template engine automatically separates the photos into photo stories based on the collected metadata and or user input. At the user may adjust the photo stories by for example removing photos adding photos and or filtering out certain photos e.g. using metadata as the filtering criteria . At when the photo stories have been completed the user shares and or prints the photo stories .

In one embodiment the user is provided with the option of specifying one or more social networking sites through which the photo stories may be automatically shared e.g. Facebook Twitter etc . Once the user s authentication data for these social networking sites has been entered and stored on the photo service e.g. the user s ID code and password a social networking interface can automatically connect to one or more external social networking sites on behalf of the end user to upload the new photo stories. Thus in one embodiment at the end of the photo story creation process a Share Photo Stories hyperlink is provided on the photo stories Web page to provide this functionality. In response to the user selecting the Share Photo Stories link the social networking interface will then automatically connect to the external social networking sites with the user s authentication data and upload the new photo stories to the social networking sites . As is known in the art social networking sites such as Facebook expose a Web services API to allow these types of transactions.

In addition to the Share Photo Stories link in one embodiment a Print Photo Stories link is provided. In response to selecting the Print Photo Stories link the completed photo story is sent as a new print job and printed by an internal printer or using an external print service. In one embodiment the user may specify a group of individuals to always receive printouts of new photo stories e.g. the user s parents grandparents siblings etc . The online photos service maintains the identity of these individuals e.g. within the contacts database so that they can be readily identified in response to the user selecting Print Photo Stories. 

At photo story design templates are filtered based on the photo story metadata and or user preferences. As mentioned above any of the variables associated with the photo story such as the number of photos the orientation of the photos the existence of a title description etc may be used to filter out unsuitable photo story design templates from consideration. For example if the number of photos in the photo story is not within the range specified in the template the template is filtered out as not applicable for the photo story.

At the existing photo story design templates are ranked based on the metadata and or user input preferences. As mentioned above each photo story design template is assigned a weight based on certain variables. If those variables are detected in the group of photo story photos then the weight is applied to the design template. For example if a particular set of photos fall within a specified date range then the season score of 10 may be applied to all photo design templates associated with that season. Similarly if the photos are associated with a particular location then the location score of 50 may be applied to all photo story design templates associated with that location. When all applicable weights have been applied the weights are added to arrive at a score for each prospective photo story design template. Finally at the photo story design templates are provided to the end user based on the calculated rankings. In one embodiment the photo story design template having the highest ranking is selected and populated with photos by the photo story layout engine . The user may then have the option to peruse the other photo story design templates. Upon selection of each design template the photo story layout engine will automatically populate the design template with photos e.g. using the layout techniques described herein .

In addition in one embodiment the photo story layout engine extracts the main colors from the story photos which are used to automatically color certain design elements within the photo story design template. This results in a layout and design that complements the photos without overpowering the photos. One embodiment of the design coloring algorithm uses the colors from the photos in the story and replaces the colors in certain specified design elements with these colors. The colors are extracted by using image processing functions to reduce the number of colors to the 16 most dominant colors in the image known as color quantization. This results in colors that the human eye perceives across the image as a whole instead of the extreme peaks in the colors. The photo colors are stored as RGB red green blue values with a usage value that is set equal to the number of pixels within the quantized image that are that color. The 16 colors for a photo story are determined by performing a union of the colors from all of the photos in the story and then sorting by the usage values to arrive at the 16 most used colors. The design elements such as overlay frames and design accents embellishments are then colored by replacing specific colors with one or more of the most used colors from the photographs. The colors to be replaced are determined by extracting the colors from the overlay image such as a PNG image or PDF vector graphics file . The template designer selects which colors should be replaced with colors from the photographs. This is shown in the overlay form in . For example the colors shown in are the colors defined as RGB hex values that the designer has selected to be replaced.

One embodiment of a graphical user interface GUI for viewing and manipulating photo stories created by the photo story template engine and photo story layout engine is illustrated in and . Each photo story is provided with its own region in which the user can modify the photo story in various ways and ultimately share the photo story with other users. As mentioned above in one embodiment the photos are separated into the different photo stories by the photo story template engine e.g. based on metadata such as date time photo subject location etc . A preview image for each photo story is initially displayed with photos integrated within the highest ranked design template selected by the photo story template engine . In this includes photo story preview images and and in photo story preview image . The photos selected for use in each photo story are also displayed within their respective photo story regions. For example a single photo is displayed within photo story region four photos are displayed within photo story region and four photos are displayed within photo story region .

New stories may be added via an add a story link and photos may be added via an add photos link . In one embodiment photos may be moved between photo story regions by clicking and dragging the photos with a mouse or other cursor control device. Moreover new photos may be added to the photo story regions by selecting them from a folder on the user s computer system and copying pasting or clicking and dragging them to the photo region. When a new photo is moved to the photo region the same analysis as described above may be employed e.g. to identify the individuals within the photos .

In addition in one embodiment photos may be rearranged within the photo story previews by modifying the order of the photos within a photo story region. For example to change the large photo at the bottom of the photo story preview shown in region the user may click and drag the leftmost photo within the group towards the right thereby causing the order of the photos to be rearranged within the photo story preview . Said another way the order of the photos within the photo story corresponds to the order of the photos within the photo region .

Within each photo story region a data entry field is provided for entering a photo story title a date time field is provided for the date time during which the photos were taken a location field is provided to indicate the location at which the photos were taken and a description field is provided allowing the user to enter a description for the photo story. In one embodiment some of the fields such as the date time field are automatically entered by the photo story template engine while other fields are entered manually by the user. In one embodiment before the user has entered any data to these fields the title field reads untitled the location field reads add a location and the description field reads add a description. 

When a user changes the number of photos within a photo story e.g. by adding or deleting from one of the photo regions the photo story template engine may re rank the photo story design templates based on the change and or the photo story layout engine may adjust the layout of the photos within the current photo story design template. In a photo has been removed from photo story region thereby changing the number of photos from 4 to 3. In response the photo story layout engine automatically rearranges the photos within the photo story design template as shown.

In one embodiment a link is provided within each photo region to allow the user to toggle through each of the ranked photo story design templates. In response the photo story layout engine will automatically layout the photos and text within each selected photo story design template.

In one embodiment selecting the Next Preview link shown in generates a finalized preview of the photo story such as that shown in and may also provide options for viewing other photo story templates. As illustrated in the preview Web page may include links and to share the photo story on a social networking site or via email respectively. An edit link allows the user to edit any of the photo or text boxes within the photo story template e.g. providing features such as resizing moving cropping etc within the size coordinate constraints set by the photo story design template. A try again link toggles between different photo story design templates. Finally a share link provides a plurality of different options for sharing the photo story design template e.g. different social networking sites different email addresses different print options etc. such as those shown in described below . In one embodiment if the current photo story is not the last to be reviewed in succession then the share link is simply a next link allowing the user to move to the next photo story preview.

In one embodiment the text used within text regions of the photo story templates may include variables which are adjusted based on the subject in the photo. For example if the subject has been identified and the birthdate of the subject is known e.g. from the contacts database then the age of the subject may be generated as text on the front of the photo story template. For example in the subject has been identified Megan and the age of the subject has been calculated as of the date that the photos within the photo story design template were taken 9 months in the example . The use of variables within text boxes is described in detail in the co pending applications such as SAMFDAGOS Ser. No. 12 188 721 filed Aug. 8 2008 referenced above.

As shown in in one embodiment a listing of people may be generated within a photo story region to show who is pictured in the photo story. The listing may be generated for example in response to the user selecting the people link in . A graphic is provided next to the name of each person in the list which when selected removes that person from the list and removes any photos including that person from the photo story region .

In one embodiment the initial browsing window provides a timeline having a relatively low level of precision. For example in the timeline includes a plurality of entries corresponding to a plurality of years 2000 2010 . In one embodiment selecting a particular year from the timeline filters the photo stories displayed within the display region i.e. showing only photo stories having photos captured during that year . As shown in in response to user selection of a particular year a new timeline may be generated having a relatively higher level of precision i.e. months in the illustrated embodiment. Moving the scroll graphic across the various months in the timeline causes pictures from each month to be displayed. In one embodiment selecting a particular month from the timeline displays photos from that month as shown in and generates a new timeline having an even higher level of precision i.e. days of the month in the illustrated embodiment. Selecting one of the days of the month causes photo stories having photos from that day to be displayed within the display region . In one embodiment days months and or years for which no photos exist are greyed out within the GUIs shown in . In addition in one embodiment links are provided at the top of the GUI to allow the user to jump to the timelines at different levels of precision.

A separate set of filtering options is provided to the left including options for filtering photo stories based on the time options for showing photo stories involving specific people specific places and recently added photo stories . As filtering options are selected at the left an indication of the filtering appears within the heading of the GUI e.g. All 128 is shown in the example in . In one embodiment filtering options may be combined. For example the user may select two different individuals under people. In response the photo story GUI will only display photo stories having both of the selected people as subjects i.e. the people are ANDed together . In addition in one embodiment once a particular person is selected a list of selectable tags are generated allowing the user to browse through all of the stories that the selected person is in by selecting the different tags e.g. birthday hat cars park etc .

In one embodiment each user is required to establish an account on the online photo service . illustrates one embodiment of a graphical user interface GUI for editing a user profile with data fields for the users first and last name and respectively the user s nickname the user s family name the users preferred design style e.g. classic modern etc the user s interests a photo of the user including a browse button to locate the photo on a client computer the user s phone number email address and address information . Other members of the user s friends and family may enter similar profile information and may share this information with the end user. Alternatively or in addition as mentioned above and in the co pending applications the user may store similar information for each of the contacts within the user s contacts database.

An orientation menu provides options for selecting the photo story size and shape. Examples may include square e.g. 12 12 18 18 etc rectangular e.g. 12 18 18 24 etc and any other sizes shapes including both industry standard sizes shapes and non standard sizes shapes. Drop down menu provides for the selection of a particular theme e.g. humorous sentimental religious etc drop down menu provides for the selection of a particular style e.g. modern classical whimsy etc drop down menu provides for the selection of a particular type of occasion e.g. birthday anniversary wedding Thanksgiving etc and selection list provides options for specifying relationships to be associated with the photo story template e.g. family couple parents daughter etc . Drop down menu provides options for selecting a particular region e.g. California San Francisco New York Grand Canyon etc and month day drop down menus provide for the selection of a particular date range and or season. Selection boxes indicate whether text specified in the photo story regions described above will be utilized in the photo story design template. The illustrated options include title date description and age of the subjects . Finally the tags data entry field is used to enter one or more tags to categorize the photo story template e.g. so that the photo story template may be identified by matching a user s description of the photos in a photo story with the tags .

In one embodiment selecting the overlays link brings a user to the overlays GUI shown in which allows the user to configure an overlay for the photo story template. In one embodiment an overlay can be used to provide various different graphical features surrounding the pictures of the photo story. Each overlay is comprised of one or more overlay elements. In a data field is provided for the overlay element name a zIndex a value which specifies the order in which the overlay element will be placed on the photo story design canvas. As is known in the art a zIndex value is a Cascading Style Sheets CSS property often used in Web page design that sets the stack order of a specific set of elements. An element with larger zIndex is always placed in front of an element with lower stack order. Data entry elements allow the end user to select a color overlay and or an image file to be used as an overlay. A browse button is provided to allow the user to search through folders for the image color file. The position of the overlay within the photo story template is specified in data entry fields . In one embodiment the position is specified in units such as inches or pixels and defines the boundaries of the overlay left top right bottom . Data entry fields are used to specify and absolute or relative width and height of the overlay within the photo story template e.g. as a percentage of the size of the photo story template canvas . In one embodiment setting only one of these two vales ensures that the aspect ratio will be maintained i.e. the other will be set automatically while keeping the aspect ratio consistent . In data entry field the transparency value is set using a value of 0 not transparent to 100 completely transparent . A set of color values are specified in fields . In one embodiment one or more of the color values are selected based on the main colors used in the photographs of the photo story as described above . As previously described the colors in are in RGB hex format. In one embodiment the colors are replaced by colors in the photos. The default values when the user uploads the overlay image are the main colors from the overlay image but they can be removed or replaced with values entered by the user. Drop down menus for selecting a theme a style and a region are provided and month day drop down menus provide for the selection of a particular date range and or season.

As illustrated in a photo area template includes a data field for a template name and a zIndex value . As described above the zIndex value specifies the order in which the photo area is laid out on the photo story canvas in relation to other design elements e.g. other photo areas text boxes overlays etc . A layout order drop down menu specifies the order in which the different photo areas will be laid out on the photo story canvas e.g. using an integer value . A set of position drop down menus and data fields allow the user to specify the position of the photo area. The user may specify position using prearranged selections within the drop down menus e.g. float left float right and by specifying left top right bottom values as percentages of the width or height of the photo story canvas. The leftmost drop down menu shown in provides options for normal flow absolute and relative. In one embodiment Normal Flow is the layout flow that starts at top left and goes to bottom right Absolute means absolute coordinates are used and Relative means offset from the position that the element would be positioned by Normal Flow. In one embodiment these properties are used in cascading style sheet CSS positioning so that one of ordinary skill in the art familiar with CSS would understand how to configure the design. A sort order value selected via a drop down menu specifies the order in which the photos will be placed into the photo areas. For example when there are multiple photos in the photo story they are sorted with photo number 1 on the left and increasing to the right. The sort order in the photo area specifies in which order the photos will be laid out when there are multiple photo areas in the template. For example with one photo area with maximum photos set to 1 and sort order 1 and another with maximum photos set to 4 and sort order 2 the first photo in the story will go in the first photo area and the 2 through remaining photos will go in the second photo area. A maximum photos drop down menu allows the user to specify the maximum number of photos for the photo area and a set of data fields allow the designer to specify minimum and maximum width and height for the photo region. Data fields are provided for specifying different photo effects such as rotating and feathering e.g. using a percentage or absolute value and for setting a border around the photo region specifying width padding amount and color . A photo sizing drop down defines how the photos in the photo area will be cropped to fit within the photo area with options including best fit uniform width and uniform height and a photo alignment drop down defines how the photos are aligned and distributed within the photo area. Values include align left align center align right align top align middle align bottom distribute horizontally and distribute vertically. In one embodiment the foregoing variables are interpreted by the photo story layout engine when determining how to arrange the photos on each photo story.

As illustrated in a text box template includes data fields for a text box name a zindex value a layout order a position and text box dimensions specified either as a percentage of the photo story template or using absolute values . Drop down menus provide options for font type color size and leading and drop down menus allow the user to specify alignment values for the text box. Finally a data entry field allows a designer to specify default text to be used in the text box. In one embodiment variables may be used as described above. For example an AGE variable may be included to specify the age of a particular subject. These variables are automatically populated using information from the user s contacts database once the subjects in the photos are identified .

The embodiments of the invention described herein may be implemented within the context of any personalized card or stationery products. For example in one embodiment an order flow for personalized stationery such as birth announcements or holiday cards is used in which the user will select the photo or photos they would like to use first. The online stationery card service will then use the same techniques described above to determine the dominant colors in the photos and then suggest card designs that have colors that look great with the colors in the photos. In some cases the same design is available in many different colors and the service will choose the design color that works best for the colors in the photos. In another case the some of the design elements in the card could be colored based on the colors in photos the borders around photos background of the card embellishments .

In one embodiment the different graphical user interface GUI features described herein are generated by presentation and session management logic executed on the online stationery service. In one embodiment various well known functional modules associated within the presentation and session management logic are executed to receive input process the input interact with one or more other modules shown in the figures and dynamically generate Web pages containing the results. The Web pages are then transmitted to the user s client computer and rendered on a browser . The Web pages may be formatted according to the HyperText Markup Language HTML or Extensible HTML XHTML formats and may provide navigation to other Web pages via hypertext links. One embodiment utilizes Dynamic HTML DHTML a collection of technologies used together to create interactive Web sites by using a combination of a static markup language e.g. HTML a client side scripting language e.g. JavaScript a presentation definition language e.g. CSS and the Document Object Model DOM .

Throughout the discussion above various details have been omitted to avoid obscuring the pertinent aspects of the invention. For example in an embodiment of the invention in which the user connects to the online photo service via a Web browser various well known functional modules associated within the presentation and session management logic shown in the figures are executed to receive input process the input and dynamically generate Web pages containing the results. The Web pages described herein may be formatted according to the well known HyperText Markup Language HTML or Extensible HTML XHTML formats and may provide navigation to other Web pages via hypertext links. One embodiment utilizes Dynamic HTML DHTML a collection of technologies used together to create interactive Web sites by using a combination of a static markup language e.g. HTML a client side scripting language e.g. JavaScript a presentation definition language e.g. CSS and the Document Object Model DOM . Of course the underlying principles of the invention are not limited to any particular set of protocols or standards.

In one embodiment the Web server used to implement the embodiments of the invention is an Apache web server running on Linux with software programmed in PHP using a MySQL database.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Elements of the present invention may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards propagation media or other type of media machine readable medium suitable for storing electronic instructions. For example the present invention may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example it will be readily apparent to those of skill in the art that the functional modules such as wizards and other logic may be implemented as software hardware or any combination thereof. Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

