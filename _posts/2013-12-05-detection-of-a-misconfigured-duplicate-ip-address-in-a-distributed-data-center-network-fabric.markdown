---

title: Detection of a misconfigured duplicate IP address in a distributed data center network fabric
abstract: Presented herein are techniques to detect a misconfigured duplicate Internet Protocol (IP) address in a distributed data center network fabric. A network topology is provided that includes a plurality of network elements. A network element receives a configuration message comprising an IP address from a first host associated with the first network element. The IP address is detected to already be in use by a second host associated with a second network element. A request message is provided to the second network element, the request message configured to cause the second network element to attempt to contact the second host. A reply message is received from the second network element. If the reply message indicates that the second host exists at the second network element, an indication of a misconfiguration event is generated. Otherwise, the IP address is associated with the first host.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09413713&OS=09413713&RS=09413713
owner: Cisco Technology, Inc.
number: 09413713
owner_city: San Jose
owner_country: US
publication_date: 20131205
---
In data center environments rack units may house many server devices. Each server device may be configured to host one or more virtual host virtual machine devices. The servers in the rack units are connected to top of rack ToR leaf switch devices. The leaf switches in turn are connected to other leaf switches via one or more spine switches to form a layer 3 distributed fabric. Network switches form a physical underlay network which may be used by multiple tenant overlay networks that exchange data communications between host devices physical and or virtual in different rack units. For example packets of data communications may be sent from a virtual machine in one rack unit to a virtual machine in another rack unit. These packets may be routed between corresponding leaf switch devices and the intermediary spine switch. The leaf switches are configured to store address information associated with the host devices in the data center environment. An important aspect of network orchestration is to ensure that multiple physical or virtual hosts do not share the same Internet Protocol IP address in a given IP routing domain.

Presented herein are techniques to detect a misconfigured duplicate Internet Protocol IP address in a distributed data center network fabric. A network topology is provided that includes a plurality of network elements. A network element receives a configuration message comprising an IP address from a first host associated with the first network element. The IP address is detected to already be in use by a second host associated with a second network element. A request message is provided to the second network element the request message configured to cause the second network element to attempt to contact the second host. A reply message is received from the second network element. If the reply message indicates that the second host exists at the second network element an indication of a misconfiguration event is generated. If the reply message indicates that the second host does not exist at the second network element the IP address is associated with the first host.

Reference is first made to . shows a system in which an orchestrator may coordinate with a fabric controller to create modify provision and or delete one or more tenant overlay networks in a physical leaf spine underlay distributed fabric via network . While a physical leaf spine topology with tenant overlay networks is used as an example any network architecture with a physical underlay network and logical overlay networks would be consistent with techniques presented herein. Each leaf in the topology may be a leaf switch e.g. top of rack ToR switches or located in a rack unit that houses one or more network elements such as physical servers. Each leaf switch is configured to route communications between physical servers in the rack unit and other network elements via spine switches . Each leaf may act as a gateway from a layer 2 network e.g. Ethernet onto the distributed fabric which operates at layer 3. Each physical server e.g. server associated with leaf switch or server associated with leaf switch may host one or more virtual switches and virtual hosts virtual machines and . Virtual switches and virtual machines may be created and run on each physical server on top of a hypervisor . It is appreciated that any number of leaf switches and spine switches may be present in the fabric .

Each virtual switch may be configured to manage communications of one or more virtual machines in particular virtual networks and or subnetworks subnets . Each virtual switch may be embodied by software stored and executed on the physical server . Thus the virtual switch performs functions of a physical switch device. Similarly each virtual machine may be software stored and executed on the physical server . The virtual machine is configured to exchange communications with other virtual machines via the fabric . It is appreciated that any number of physical servers hosting any number of virtual switches and virtual machines may be present in the system . For simplicity shows one physical server associated with leaf switch and one physical server associated with leaf switch . also shows physical server hosting hypervisor which may run one or more virtual switches such as virtual switch Vswich each being associated with one or more virtual machines such as virtual machines and . Similarly physical server may host hypervisor which may create and run one or more virtual switches such as virtual switch each being associated with one or more virtual machines such as virtual machines and .

Though not shown in the physical server associated with leaf switch may be housed in a rack unit or rack. Other physical servers may also be housed in the rack. Leaf switches and are responsible for managing communications e.g. routing and forwarding originating from and destined for physical servers and virtual machines and virtual switches hosted by the physical servers in the rack. Hence the term top of rack ToR ascribed to switches and and any other leaf switch in . Leaf switches and may be used to provide redundancy and fault tolerance for communications associated with physical servers virtual machines and virtual switches in the rack. Thus leaf switch is a peer to leaf and vice versa. These leaf switches may be configured to communicate by a network controller unit controller e.g. fabric controller which may be configured to manage communications between leaf switches in different racks.

As stated above physical server hosts the virtual switch and virtual machine . Each virtual machine is a member of an overlay tenant network. A tenant network is a unique layer 3 subnet which may contain one or more VLANs. A subnet is a logical subdivision of an IP network. For example a tenant Company A has 2 tiers tenant networks namely 1.1.1.0 24 and 2.2.2.0 24. As the tenant network of which virtual machine is a member joins the network it may be provisioned with certain network attributes in order to exchange communications. Upon instantiation a tenant network and a virtual machine therein may be provisioned with virtual network segmentation resources. For example the virtual machine and tenant network may be associated with one or more virtual Local Area Network VLAN identifiers and a subnet identifier. In one example virtual network segmentation resources may be provisioned on a per switch or per port basis e.g. up to four thousand VLANs per switch or four thousand per port of a switch . Thus when a tenant network and virtual machine therein are created a leaf switch may select an unused VLAN for a given segmentation assignment. The virtual segmentation resources may also include a Switch Virtual Interface SVI assignment an Access Control List ACL assignment a Quality of Service QoS assignment a Virtual Routing and Forwarding VRF assignment etc. It should be appreciated that other network information now known or hereinafter developed may also be assigned to the virtual machine. Each tenant network is also associated with a segment identifier segment ID which is used to uniquely identify the tenant network in the leaf spine fabric . A segment ID is a 24 bit identifier that allows more than 16 million unique tenant networks to be addressed. Virtual Extensible LAN VXLAN is a specific type of Media Access Control MAC over IP User Datagram Protocol UDP encapsulation scheme that has a VNI virtual network identifier which also happens to be 24 bits. However the term segment as used herein is more generic than a VNI in that it is an identifier but it does not dictate that the overlay encapsulation should be VXLAN or any other encapsulation scheme.

Upon instantiation the virtual machine may be provisioned with identifier information that may include an IP address a MAC address a port number associated with the VLAN to which it is assigned etc. Tenant network and tenant network element instantiation modification and deletion may be performed by the orchestrator while segmentation resources may be stored on a network database on the controller . The orchestrator may perform such functions either automatically or via user interaction with a graphical user interface GUI as creating virtual machines associating virtual machines with a storage deleting virtual machines attaching networks moving virtual machines from one physical server to another a motion mobility event ensuring that virtual machines are associated with storage after a mobility event etc. The orchestrator may make changes to the fabric by issuing software instructions to the controller and or hypervisor.

The orchestrator and controller may operate outside of the leaf spine fabric . The VMware suite is an example orchestrator solution. Orchestrator software may include software such as vCloud Director vCenter Server OpenStack and vShield Manager though other software solutions may be able to perform the functions of the orchestrator according to techniques presented herein. The orchestrator may additionally coordinate with a Dynamic Host Configuration Protocol DHCP server on the controller to provide unique IP address information to allow virtual machines to communicate over an IP network. Once the virtual machine VM is instantiated with resources which may also include assigning one or more network identifiers such as a subnet or VLAN to the VM s virtual network interface card vNIC the VM becomes capable of exchanging communications with other VMs that have also been properly instantiated in the network.

The controller may interact with the leaf spine fabric on behalf of the orchestrator . The controller may monitor all events occurring at the orchestrator via application programming interfaces APIs store these events in a cache and provide data to and perform actions on network elements in the leaf spine fabric as needed and or in response to orchestrator events. The controller allows the user to manage all the devices in the fabric from a central console. Common configuration information and processes can be applied to devices grouped by type or by role thus simplifying large scale policy updates without the need to touch individual systems. Controller functions may include VM auto deployment integrated fabric access topology views and monitoring and network health checks.

Leaf switches may also query the orchestration system for e.g. controller via APIs for information to retrieve data about the orchestrator or retrieve information about events such as orchestrator generated events. For example the controller may maintain a cache of all VM mobility events such as if VM were to be moved from physical server to physical server . The leaf switches may poll the controller to learn of a VM mobility event.

As discussed above VMs may be assigned an IP address upon creation. IP misconfigurations may result in two virtual or physical devices having the same IP address. Duplicate IP addresses may cause network traffic to be split and or directed to unintended recipients. These misconfigurations may occur as a result of VM mobility events VM creation events and IP address modifications. In traditional networks when a duplicate IP address is advertised such as via gratuitous or standard Address Resolution Protocol GARP ARP etc. address request messages other network elements may detect the misconfiguration and respond before the Transmission Control Protocol TCP IP stack of the new network element is enabled thus avoiding traffic disruptions. However in a distributed gateway leaf spine architecture subnets can span leaf switches. This means that a subnet may be partly located for example on a physical server under a first leaf switch and partly located on another physical server under a second leaf switch and thus two portions of a layer 2 network are split by a layer 3 network. GARP messages are not necessarily forwarded by leaf switches onto the distributed fabric . The leaf spine architecture may be a very large fabric resulting in a large number of ARP GARP messages sent across the fabric to each host so this method may be avoided. Rather control protocols between leaf switches may be sent across the fabric in part to reduce traffic. As a result misconfigurations may not be detected in a distributed fabric topology . Since a subnet and VLAN can span multiple leaf switches this means that a VM may move from a physical server under one leaf switch to a physical server on a second leaf switch yet remain in the same subnet. A mechanism is needed to detect a misconfiguration in a distributed fabric architecture and yet allow valid VM mobility events.

An example flow chart depicting operations to create and move a virtual machine from under one leaf switch to another is shown in . Reference is also made to for purposes of this description of . At step a virtual machine for e.g. VM may be created on a physical server associated with a leaf switch . After the VM is provisioned at step the VM s TCP IP stack may become active and the VM may send GARP messages advertising reachability information such as the VM s IP address and MAC address to other network elements switches routers hosts etc. on the local network. If a network element with a conflicting IP address receives the GARP message it may respond with a message indicating that there is a duplicate IP address. GARP messages however are possibly not forwarded from the leaf switch on to the layer 3 leaf spine fabric. Thus not all network elements in the subnet may be informed of the new VM. Leaf switches however may maintain a table of IP addresses and MAC addresses for the tenant network for e.g. ARP table ARP cache . If at step the leaf switch receives the GARP message and determines that the IP address is not conflicting with another by checking its IP address table not being used by another VM or physical host in the network the leaf switch may then admit frames from the new VM and advertise reachability information to other network elements in the layer 3 leaf spine architecture using for example a control protocol such as a Border Gateway Protocol BGP MP BGP etc. . Other leaf switches may store the reachability information which may comprise IP and MAC addresses etc. such that all leaf switches in the distributed fabric will be able to forward packets to the new VM in the future.

At step a VM mobility event occurs. For example the VM may be moved from server under one switch to server under leaf switch . This event may be initiated at the orchestrator and executed at the controller. The relevant leaf switches and may not be immediately notified of this move. At step the newly relocated VM may send GARP or Reverse Address Resolution Protocol RARP messages advertising its reachability. Upon receiving a GARP message on a local port at step the leaf switch may access an internal IP address table and determine that the IP address is already being used by a VM under leaf . Alternatively if a RARP message is received at step the leaf switch may access an internal MAC address table to access the IP information of the host and determine that the IP address is already being used by a VM under leaf . A duplicate IP address has thus been detected and a host verification procedure is required at step to determine whether or not it is a misconfiguration. Other methods of duplicate IP address detection would be within the scope of techniques presented herein.

There are multiple reasons a duplicate IP address may be detected some valid and some not. The first is that there is a valid VM mobility event as discussed above. Another valid scenario would be if a VM is deleted and another VM is shortly thereafter created provisioned with the same IP address as the deleted VM but under a different leaf switch. A physical or virtual host may also have a backup network interface controller NIC which connects a computer to a network. If the primary NIC fails the backup NIC may take over. This may be detected by the leaf switch as a duplicate IP address although this is a valid scenario. Another possibility is that a duplicate static IP address has been assigned perhaps by a user to a VM to produce the IP conflict which is a misconfiguration. A further possibility is that a spurious misbehaving host is attempting to take over a host s identity. The host verification procedure may take steps to distinguish these valid scenarios from misconfigurations. Other valid and invalid duplicate IP address detection scenarios are within the scope of techniques presented herein.

If VM using the IP address still exists there is a misconfiguration event. At step the event may be logged. Logging misconfiguration events allows users to monitor network health and track if a given VM is repeatedly behaving undesirably. If the number of misconfiguration events associated with a VM rises above a predetermined threshold the associated leaf switch may disable the local port used by the VM. In one technique a user may set the predetermined threshold of spurious misconfiguration events to disable a local port. This action may be performed selectively as disabling a given port may deny distributed fabric access to more than one VM. At step VM may be notified of the duplicate IP address. For example the VM may be informed of the conflict by some proxy such as the new leaf responding with an ARP on behalf of the host connected to the old leaf. In and example protocols were discussed although other protocols would be within the scope of techniques presented herein.

As a result of these techniques even in a distributed fabric leaf spine architecture such as that shown in duplicate host IP addresses may be detected and managed. By verifying the validity of the host before advertising its reachability to other leaf switch nodes traffic splitting and other problems caused by duplicate IP addresses may be avoided. A new VM with a duplicate IP address would only have one route available the route to the leaf switch while the original VM with the same IP address may otherwise be able to communicate normally on the network. Further for a valid VM mobility event a leaf switch may query the controller immediately and thus a host verification procedure is not necessarily performed. This may minimize the convergence penalty for a genuine VM mobility event. This also allows the leaf switches to control when IP address updates occur across the distributed fabric rather than individual and possibly misconfigured hosts.

The switch ASIC is coupled to the processor . The processor is for example a microprocessor or microcontroller that is configured to execute program logic instructions i.e. software for carrying out various operations and tasks of the leaf switch device as described herein. The memory unit is configured to store information associated with subnet routes host routes and default routes of received packets. The functions of the processor may be implemented by logic encoded in one or more tangible computer readable storage media or devices e.g. storage devices compact discs digital video discs flash memory drives etc. and embedded logic such as an ASIC digital signal processor instructions software that is executed by a processor etc. .

The memory may comprise read only memory ROM random access memory RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible non transitory memory storage devices. The memory stores software instructions for address conflict detection and management logic and for host verification procedure logic both of which contain instructions for executing techniques presented herein and described above in connection with . Thus in general memory may comprise one or more computer readable storage media e.g. a memory storage device encoded with software comprising computer executable instructions and when the software is executed e.g. by the processor it is operable to perform the techniques described herein for address conflict detection and management logic and host verification procedure logic .

The address conflict detection and management logic and host verification procedure logic may take any of a variety of forms so as to be encoded in one or more tangible computer readable memory media or storage devices for execution such as fixed logic or programmable logic e.g. software computer instructions executed by a processor . The processor may be an ASIC that comprises fixed digital logic or a combination thereof.

It should be appreciated that the techniques described above in connection with all embodiments may be performed by one or more computer readable storage media that is encoded with software comprising computer executable instructions to perform the methods and steps described herein. For example the operations performed by one or more of the leaf switches may be performed by one or more computer or machine readable storage media non transitory or device executed by a processor and comprising software hardware or a combination of software and hardware to perform the techniques described herein.

In summary a method is provided comprising at a network element in a network including a plurality of network elements receiving from a first host associated with the network element a configuration message comprising an Internet Protocol IP address. The method further comprises detecting that the IP address is already in use by a second host associated with a second network element and providing a request message to the second network element the request message configured to cause the second network element to attempt to contact the second host receiving a reply message from the second network element. If the reply message indicates that the second host exists at the second network element the method comprises generating an indication of a misconfiguration event and if the reply message indicates that the second host does not exist at the second network element associating the IP address with the first host.

An apparatus is also provided comprising a plurality of network ports a switch unit coupled to the plurality of network ports and a processor coupled to the switch unit configured receive at a first leaf network element in a network including a plurality of leaf network elements connected to each of a plurality of spine network elements from a first host a configuration message comprising an Internet Protocol IP address. The processor is further configured to detect that the IP address is already in use by a second host associated with a second leaf network element and provide a request message to the second leaf network element the request message configured to cause the second leaf network element to attempt to contact the second host. The processor is configured to receive a reply message from the second leaf network element. If the reply message indicates that the second host exists at the second leaf network element the processor is configured to generate an indication of a misconfiguration event and if the reply message indicates that the second host does not exist at the second leaf network element associate the IP address with the first host.

A computer readable storage media is also provided which is encoded with software comprising computer executable instructions and when the software is executed operable to receive from a first host associated with the computer readable storage media a configuration message comprising an Internet Protocol IP address wherein the computer readable storage media is associated with a network including a plurality of leaf network elements connected to each of a plurality of spine network elements. The instructions encoded on the computer readable storage media are operable to detect that the IP address is already in use by a second host associated with a second leaf network element and provide a request message to the second leaf network element the request message configured to cause the second leaf network element to attempt to contact the second host. The instructions are further operable to receive a reply message from the second leaf network element. If the reply message indicates that the second host exists at the second leaf network element the instructions are operable to generate an indication of a misconfiguration event and if the reply message indicates that the second host does not exist at the second leaf network element associate the IP address with the first host.

While the techniques illustrated and described herein are embodied in one or more specific examples it is nevertheless not intended to be limited to the details shown since various modifications and structural changes may be made therein without departing from the scope and range of equivalents of the claims.

