---

title: Multivariate digital camera device and method for generating 2D and 3D pictures of datasets comprised of points in hyperspace
abstract: A multivariate digital camera device and method for generating pictures of datasets comprised of points in hyperspace is provided. The invention may be embodied in an input device, a computer processor, and an output device. The input device may be a keyboard, a laboratory instrument such as a mass spectrometer, a reader of computer readable medium, or a network interface device. The output device may be a monitor used in conjunction with either a 2D or 3D printer or both. The computer processor receives data from the input device and performs a series of steps to create a 2D or 3D image of the hyperspace object. The resulting image is then produced in a non-transitory medium by at least one of the output devices. The processor steps include the use of a maximum distance method in which distances and angles information from the points in the hyperspace dataset are preserved to produce a more picture-like quality.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08982131&OS=08982131&RS=08982131
owner: The United States of America as Represented by the Secretary of the Army
number: 08982131
owner_city: Washington
owner_country: US
publication_date: 20130314
---
The present invention may be manufactured used and or licensed by or for the United States Government without the payment of royalties thereon.

The present invention relates generally to a multivariate digital camera device and method for generating pictures of datasets comprised of points in hyperspace using an input device a computer processor and an output device to produce 2D and 3D representations of the datasets.

Research studies and experiments in various scientific disciplines require the analysis of datasets comprised of points in hyperspace. The term hyperspace is defined herein as the mathematical construct of four or more dimensional space in contrast to a two and three dimensional space referred to herein as 2D and 3D respectively. Such datasets to be analyzed consist of points defined by four or more variables also referred to herein as multivariate data which can be denoted as x y z . . . n where x represents the first variable y represents the second variable z represents the third variable and so forth up to a variable denoted here as n. The challenge in analyzing such datasets is that humans can only visualize 2D and 3D objects. With the exception of using time as the fourth dimension humans cannot visualize multivariate datasets without some form of dimensional reduction projection mapping or illustration tool that reduces the multivariate data to either 2D or 3D form.

Scientists and mathematicians have developed methods to help visualize an object or collection of points in hyperspace by reducing the dataset to a 2D or 3D rendering. Such methods can be referred to generally as multivariate data analysis MVA . Conventional MVA also referred to herein as principal component analysis PCA finds a first principal component or factor vector in the hyperspace dispersion of points. This procedure uses all the points in the dataset and a line is drawn through hyperspace. All points are projected onto that line by perpendicular lines that cut or intersect with the introduced vector. The vector is rotated such that the intersections of the projected points onto a principal component vector create the widest dispersion of their projections onto the principal component vector. That vector is named the first principal component or first factor. The next or second factor or principal component by definition is perpendicular to the first. As with the first vector points are projected onto this second line until the orientation of the line or vector is such that the intersection of the projected points onto the vector creates the widest dispersion of projections on the principal component vector. That vector is named the second principal component or second factor. This continues for the third factor and higher factors until all factors are obtained for the multivariate data. That is if the multivariate data are in or representative of ten dimensions n 10 then the process is continued until ten factors are obtained.

The prior art PCA method described above relies on obtaining and using a depth parameter for visualization of a hyperspace object in 2D or 3D. Unlike a multivariate camera the relative distances and angles of each point in a hyperspace object are not measured and retained. Therefore all points of the hyperspace object are not individually imaged into or onto a 2D or 3D format for human visualization. The term format and surface may be used interchangeably in this context.

Another type of related prior art method involves use of a dendrogram. A dendrogram is a tree diagram that can be used to illustrate the arrangement of hierarchical clustering. While providing useful information about the hyperspace data this prior art method uses the Euclidean distances between points in hyperspace in order to derive the hierarchical clustering to be illustrated. The angles formed by the lines connecting points in hyperspace are not used to guide and orient distance projections so any information or insight to be gained by such data are not present in the resulting dendrogram.

Accordingly there is a need for a multivariate digital camera device and method that utilizes both the distances data as well as the angles data from each point in the dataset to generate 2D and 3D pictures of hyperspace objects.

In view of the foregoing an exemplary embodiment of a multivariate digital camera device and method for generating pictures of datasets comprised of points in hyperspace is provided. The invention may be embodied in an input device a computer processor and an output device. The input device may be a keyboard a laboratory instrument such as a mass spectrometer a reader of computer readable medium or a network interface device. The output device may be a monitor used in conjunction with a either to 2D or 3D printer or both. The computer processor receives data from the input device and performs a series of steps to create a 2D or 3D image of the hyperspace object. The resulting image is then produced in a non transitory medium by at least one of the output devices. The processor steps include the use of a maximum distance method in which distances and angles information from the points in the hyperspace dataset are preserved to produce a more picture like quality.

These and other aspects of the embodiment herein will be better appreciated and understood when considered in conjunction with the following description and the accompanying drawings. It should be understood however that the following descriptions while indicating exemplary embodiments and numerous specific details thereof are given by way of illustration and not of limitation. Many changes and modifications may be made within the scope of the embodiments herein without departing from the spirit thereof and the present invention includes all such modifications.

The embodiments herein and the various features and advantageous details thereof are explained more fully with reference to the non limiting embodiments that are illustrated in the accompanying drawings and detailed in the following description. Descriptions of well known components and processing techniques are omitted so as to not unnecessarily obscure the embodiments herein. The examples used herein are intended merely to facilitate an understanding of ways in which the embodiments herein may be practiced and to further enable those of skill in the art to practice the present invention. Accordingly the examples should not be construed as limiting the scope of the present invention.

Turning to an exemplary embodiment of a multivariate digital camera device and method for generating pictures of datasets comprised of points in hyperspace is illustrated in schematic form. As used herein the term multivariate may be used interchangeably with the term hyperspace. The present invention may be embodied as illustrated here as an input device a computer processor which performs process steps and one or more output devices . Computer processor and its process steps may communicate data directly to output devices or through an output controller for data manipulating and formatting. The output controller may be a software product running on computer processor or a combined software hardware device either of which are commercially available and well known in the art to which the invention applies.

Input device in the present invention functions similarly to an aperture in a conventional camera. That is it provides the raw dataset to be imaged to device input device may be a keyboard a laboratory instrument such as a mass spectrometer a reader of computer readable medium or a network interface device. Such input devices are commercially available and their use is well known in the art to which the present invention applies.

Output devices in the present invention are used to create a picture or image of the hyperspace dataset or object in either 2D format or 3D format. The present invention may utilize a plurality of output devices to provide the user with a choice of viewing options in visualizing and analyzing the hyperspace dataset. For example output devices illustrated in include a monitor a 2D printer and a 3D printer . The 3D printer is also referred to as an additive manufacturing device. Such output devices can produce a 3D object of solid tangible material. Thus both the 2D printer and the 3D printer produce an image of the hyperspace dataset in a non transitory medium. For the 2D printer the non transitory medium is typically paper or another flat medium such as vellum or polyester film. For the 3D printer the non transitory medium is typically a plastic metal ceramic or composite material used to form a 3D object. Such 3D printers or additive manufacturing devices are commercially available and their use is well known in the art to which the present invention applies.

Computer processor in the present invention receives data from input device which as noted above serves as the equivalent of an aperture in a conventional camera. Having received this data computer processor the performs a series of steps as will be fully described below to create a 2D and or 3D image of the hyperspace object. The resulting image is then produced in a non transitory medium by one or more of the output devices . The monitor of output device provides visualization capability in a transitory medium. That is the images produced by output device are displayed on a monitor screen. This monitor imaging capability may be used to view and manipulate the 2D and 3D images of the hyperspace object for analyzing the dataset and selecting the perspective for the 2D and 3D print in a non transitory medium using output devices and or .

Having provided an overview of the present invention attention is now turned to a detailed description of the processor steps taught herein starting with a background of multivariate analysis and visualization.

It is well known that a 2D object can be defined by the coordinates along two axes at right angles to each other and that a 3D object can be defined by the coordinates along three axes each at right angles to the other two axes. Similarly a 4D hyperspace object can be defined mathematically by four axes each at right angles to the other three axes. This 4D object or illustration cannot be visualized by a human but it can be created in mathematical space. This hyperspace construct can be conceptualized in 3D as a constellation of points mapped within the visualized 3D points. That is a point that can be visualized in 3D is assumed to possibly represent a plurality or constellation of points in the fourth dimension. This conceptualization can be extended to any hyperspace dimension and therefore is not limited to 4D.

In the present invention after receiving a hyperspace dataset from input device the first step in processor steps serves to calculate and preserve the distances between any two points in the hyperspace dataset. This is done by construction of a distance matrix. The distance matrix that is constructed is an x by x matrix where x equals the number of experimental points in the hyperspace dataset.

By way of example a hyperspace dataset could include the data measured by a mass spectrometer. The dataset from a mass spectrometer can be thought as consisting of many variables which may be denoted as mass 100 variable 1 mass 101 variable 2 mass 102 variable 3 and so forth. Each mass can be considered as representing a dimension or axis in hyperspace. As a processing step the axes can be normalized in intensity units. That is the axes can be scaled based upon the experimental measurements so that each axis spans from zero to one in magnitude.

To continue the example suppose that six different samples are submitted to a mass spectrometer. Suppose they result in six masses or variables denoted as 100 101 102 103 104 and 105. Also suppose that the first and second samples have values or coordinates as follows Sample 1 mass normalized intensity 100 0.1 101 0.3 102 0.5 103 1.0 104 0.7 105 0 . Sample 2 100 0.3 101 0 102 0.2 103 0.8 104 0 105 0.6 .

Basic plotting in hyperspace translates each spectrum measured value to a single point in hyperspace. Therefore for sample 1 a point denoted as x 0.1 can be placed at 0.1 intensity units on the mass 100 first dimension axis. Similarly a point denoted as y 0.3 can be placed 0.3 intensity units on the mass 101 second dimension axis and a point denoted as z 0.5 can be placed 0.5 intensity units on the mass 102 third dimension axis. This results in a point in 3D space denoted as x y z 0.1 0.3 0.5 which can readably be visualized in a 2D or 3D illustration of the data.

The challenge in visualizing the dataset begins when the fourth dimension axis is created for Mass 103. Mathematically a fourth dimension axis is created and a point denoted as n 1.0 is mathematically placed 1.0 intensity units along the fourth dimension axis to correspond to the value measured as Mass 103. This is a common procedure in mathematical dataspace plotting however this fourth dimension and higher dimensions cannot be visualized in raw form. In this example the process continues for mass 104 and 105 thus resulting in a fifth and sixth dimension axis respectively. All six axes are perpendicular to each other mathematically by definition even though the six axes cannot be viewed together. The challenge then is in providing a meaningful and useful 2D and or 3D representation of this dataset that preserves as much of the multivariate information as possible and minimizes the dilution of information as displayed.

The processing steps of the present invention utilize a matrix denoted as R to model or represent any object shape or collection of points in hyperspace as received from input device . In this notation the N columns correspond to the number of variables or axes and the M rows correspond to the number of points in the hyperspace dataset. That is the hyperspace object thus modeled is represented by M points that comprise the dataset. This could be a set of mass spectrum data points as in the example above M 2 or number of samples N 6 or number of masses or any other hyperspace dataset.

An optional step in the present invention is to standardize the columns of the Rmatrix. The most common standardization technique is by subtracting the mean of the data in a column from all column entries also known as centering and then dividing that value by the standard deviation of the column data also known as scaling. The drawback of scaling a variable with a standard deviation is when the variance of the data is small. Division by a small standard deviation will inflate that variable s variance in comparison with other variables. Accordingly the standardization technique chosen here if used is the unity scale of zero to one. To scale values in each column of the Rmatrix equation 1 can be used in which Max equals the maximum value in the column to be scaled and Min equals the minimum value in the column to be scaled. Scaled Value Value Min Max Min 1 

Whether or not data standardization was performed as described above the present invention utilizes a distance matrix to preserve the distance between any two points in the hyperspace dataset. Calculation of the distance matrix denoted herein as D is therefore labeled step in the process steps of . The subscript M represents the number of points in hyperspace corresponding to the original data matrix R. Each entry in the distance matrix denoted as p q corresponds to the calculated distance between points p and q. The distance between any two points is calculated using the Euclidean distance equation as illustrated in equation 2 of Table 1.

The distance matrix Dcan be further reduced into a diagonal matrix given that it is always a symmetrical matrix with the values of d d. Such use of its symmetry can result in memory space and processor time savings in storing and manipulation of the data. Use of the distance matrix Das defined in Table 1 and taught herein preserves the distances between all points in the hyperspace.

To preserve the relative angles between all the points in the dataset as well as the distances the following approach is performed by the present invention.

Turning to an illustration of how the X axis is created in the present invention is provided. In this step denoted as processor step the maximum distance din distance matrix Dis used to define points A and B and to thus locate the X axis. As illustrated the X axis intersects points A and B from the dataset. Points A and B are selected as those two points in the hyperspace dataset that have the maximum distance between them d as illustrated and labeled in as d. The X axis also referred to as the y axis is thus defined by a line intersecting the two points A and B. Such a line is unique in hyperspace as well as 2D and 3D space. The distance between points A and B can be denoted as AB d d. Given that each entry in the distance matrix which is denoted as entry p q corresponds to the calculated distance between points p and q the maximum value in the distance matrix d didentifies the two end points A and B. That is the p q location of the maximum value in the distance matrix identifies point A as corresponding to the row denoted as p. Similarly point B is identified as corresponding to the column denoted q. Computer processor routines to find the maximum value in a matrix and to identify the corresponding points which equate to the row and column location within the matrix are well known in the art to which the invention applies.

Returning to an illustration of how the X axis is created and datasets points are mapped into the 2D surface or space defined by X and X is provided. In what is referred to herein as processor step to point C is found in the dataset such that the perpendicular distance from point C to a point C on line AB is the maximum distance possible from the dataset of points. The X axis also referred to as the x axis is constructed parallel to the two points C and C as shown in . The mathematical equations to find points C and C on line AB as illustrated in are well known in the art to which the invention applies.

In processor step the Cartesian coordinates of point A are defined as the 0 0 0 location in 3D space. The Cartesian coordinates of point B are therefore 0 AB 0 for a 3D space where AB represents the distance between points A and B or d. Similarly the Cartesian coordinates of point C are CC AC 0 or X X 0 for a 3D space. The values of Xand Xare calculated in step using the distance equations 2a and 2b respectively as provided in Table 2.

Turning to an illustration showing how points A B and C are used to find the Cartesian coordinates in the X X plane for the rest of the points in the dataset. The total number of such dataset points is M 3 where M is the total number of points in the original dataset. The method illustrated here preserves both distances and angles information from each point in the dataset. The X and X values of any point denoted and illustrated here as point j are calculated in processor step using equations 3a and 3b as provided in Table 3.

Turning to a processor step is illustrated in which a point D is found such that the perpendicular distance from point D to the A B C plane or X X plane is maximum. This is done using equation 3c in Table 3. The j point having that maximum distance denoted as X is labeled point D. The Cartesian coordinates of point D are denoted as X X X for a 3D space as illustrated in and are calculated using equations 4a c in Table 4.

Turning to a processor step is illustrated in which points A B C and D are used to find the 3D Cartesian coordinates for the rest of the points in the dataset while preserving angles information for or from each point in the dataset. The X X and X values of any point j as depicted in are calculated using equations 5a c of Table 5. Equation 5d is used to find point E where the X axis will be created in a similar manner as used to find point D from equation 3c. Point E is found such that the perpendicular distance from point E to the A B C D hyperplane also referred to as the X X X hyperplane is maximum. The point j having that maximum distance denoted as X is labeled point E. The Cartesian coordinates of point E are thus denoted as X X X X for a 4D space.

In processor step the prior processor steps of and are repeated to create a total of L axes where L represents the maximum number of visualization axis VA VA VA . . . VL in the hyperspace dataset. The maximum number of visualization axis L is less or equal to the smaller number of the M or N the total number of points in the dataset or total number of variables in the dataset respectively. This results in a set of Cartesian coordinates for all points in the hyperspace dataset. The forth visualization axis VA or X and higher axis are not used in the 2D or 3D multivariate digital camera imaging and in this invention. The first three coordinates denoted as X X X or VA VA VA correspond to locations on the three axes created based on the maximum distance values and the maintenance or preservation of relative angles information between points steps as described herein. The images produced in a form suitable for human viewing as described below and in reference to illustrations of FIGS and may be produced using these first three Cartesian coordinates for each point as obtained by the present invention.

In processor step the data from step is sent to one or more output devices as labeled in as and . This can be performed directly by computer processor or through a post processing output controller for further data manipulating and formatting.

Tables 2 5 are summarized in the following Table to find the three visualization axis VA VA VA as well as the 4visualization axis. By looking at steps and we will be able to determine how to calculate the 5 6 . . . and higher visualization axes.

Having the described the device and method of the present invention attention is now turned to its use and a comparison qualitative and quantitative with a prior art method. In this section the present invention is referred to as the visualization axis approach or VAA. The evaluation of VAA and its comparison with the prior art PCA method was performed using the method described in Table 6.

A computer program was written in the C language to perform the VAA imaging of the present invention as described in processor steps as well as the analysis and comparison process described in Table 6 above. Three well known public library datasets were used in this evaluation which are referred to as the Swiss roll Punctured Sphere and Wine Dataset respectively. In addition a cylinder within a cylinder object was synthesized and used.

Turning to the cylinder within a cylinder object is illustrated. In this dataset example the inner cylinder is three times longer than the outer cylinder . The inner cylinder diameter is about two thirds of the outer cylinder diameter. Using any 3D commercially available plotting software it is easy to rotate and select a viewing perspective that clearly shows the two cylinders as was done to produce the image of . A suitable and robust algorithm for dimensional reduction will preserve the higher dimensional object s characteristics when translated into a lower dimension 2D or 3D format for viewing. This can be tested by using a computer based automated process to reduce a 3D image to 2D and then comparing the resulting 2D images with those produced by manual manipulation of the 3D data. This is only possible with a 3D dataset because the original dataset can be visualized and therefore an optimized viewing perspective can be selected manually to produce one or more 2D plots for comparison with those produced by the computer based automated process.

Turning to the results of using the VAA present invention and a PCA prior art method are shown for comparison purposes. VAA was used to produce three visualization axes and three visualization planes presented in . As illustrated the VA VA and VA VA planes represent satisfactory angles that very closely translate the 3D characteristics of the two cylinder object into the 2D plot. PCA as applied to the same raw dataset produced three principal components and three planes presented in . As illustrated in this particular example PCA provides useful information but none of the three PCA plots in 2D resemble the 3D cylinder within a cylinder object in comparison with that provided by two of the VAA plots . In other words two of the VAA plots are more picture like in quality than the three PCA plots.

Turning to and B a 2D plot of a 3D dataset object known as the Swiss roll is illustrated. This dataset is well known and can be characterized as a nonlinear manifold with to characteristic. The dataset is illustrated in with a picture like quality using a commercially available 3D plotting software and manual manipulation of the viewing perspective. The resulting PCA plot and VAA plot of the Swiss roll dataset are illustrated in respectively. As shown the PCA plot captures the spiral characteristic of the dataset very well but the 2D representation provided by PCA does not have picture like qualities in comparison to the manually manipulated plot of or the VAA generated plot of . It should be emphasized here that the manual manipulation that was used to produce plot of is not possible with hyperspace data so the original dataset for a hyperspace object would be viewed only with a plot equivalent to PCA plot or VAA plot of without the benefit of seeing plot . The more picture like quality of plot compared with plot would be very helpful in such a situation.

The comparison shown in illustrates vital advantage provided by the VAA present invention. This advantage may be attributed to its retention of distances and angles information between all points in the dataset when reducing the dimension from 3D space to 2D space. The processing steps of the VAA method can also be characterized as a maximum distance method in reference to how the axes are constructed. The limitation of PCA as illustrated in this example and the corresponding advantage of the present invention may be due to the non linear manifold properties of the dataset. While PCA may have advantages in applications such as data compression and visualization of other types of hyperspace datasets the non linear manifold type properties illustrated in this dataset occur in real world datasets that must be analyzed and visualized by scientists and researchers. Accordingly both VAA and PCA have utility as tools for use in science and research.

Turning to a Punctured Sphere model is illustrated. This is another non linear manifold dataset presented in the literature. For the purposes of this comparison the analysis and plots of charts 34 and 35 in the following document are incorporated by reference Manifold Learning Techniques So which is the best Todd Wittman Gilad Lerman Department of Mathematics University of California Los Angeles Spring 2005 slide 34 35. These charts have been published for example at website http www.math.ucla.edu wittman mani mani presentation.pdf and are available or otherwise understood from the following description by those skilled in the art to which the invention pertains.

As noted in the reference and illustrated in herein the punctured sphere sampling of points is sparse at the bottom and dense at the top . Note that this sparse dense sampling density refers to the proximity of data points to one another and not to the orifice at either end of the punctured sphere where there are no data points. All eight MVA methods analyzed and illustrated in the referenced material at chart 35 show an extensive degree of image distortion of punctured sphere . Some MVA methods produce totally unrecognizable 2D figures or representations of punctured sphere . This image distortion is due to the fact that the various MVA methods use functions or models that force the raw data points to be collapsed flattened or unrolled in a certain way. For example PCA projects the sphere from the side MDS and ISOMAP turn the sphere inside out and the other five MVA methods tend to flatten punctured sphere and give too much emphasis to the sparse region . As illustrated in VAA plots and of B and D respectively the present invention produces a picture like 2D image quality of this dataset.

Turning to a comparison of VAA and PCA is illustrated using the multivariate dataset know as the Italian Wine Dataset. Given the hyperspace nature of this dataset which is thirteen dimensions it cannot be plotted using commercially available software as in the previous examples. The Italian wine dataset consists of 178 rows representing wine samples and 13 columns representing the measured variables. In addition it is divided into three classes according to location. The three classes are Barolo Grignolino and Barbera. The thirteen measured variables that describe different wine characteristics are alcohol malic acid ash alkalinity of ash magnesium total phenols flavonoids non flavonoid phenols proanthocyanins color intensity hue OD280 OD315 of diluted wines and proline.

The Barolo class is illustrated in in open triangles with the Barbera class shown in open circles and the Grignolino class in solid circles.

The tabulated values for VAA and for PCA provide the percentage of information contained in the respective VAA and PCA planes. These values were calculated using the method describe in Table 6.

The tabulated values for PC PC and PC represent 66.3 of the total information of the dataset while the corresponding tabulated values for VA VA and VA represent 69.3 of the total information in the dataset using the method described in Table 6. Thus the results obtain by VAA and PCA on this dataset were similar in this regard but with VAA resulting in a slight advantage.

Both the VAA plots and the PCA plots provide useful visualizations of the data. The center VAA plot arguably provides the best picture like quality in the tighter clusters of points for the three wine datasets while still showing the resolution or dispersion of individual points. Likewise PCA plot also provides relative good clustering of wine by class with dispersion of individual points but appears less picture like in resolving the shapes formed by the three wine datasets.

As illustrated and described herein the present invention utilizes a maximum distance means to generate axes for dimensional reduction in such a way that preserves the relative angles information from each point in the dataset thus providing the capability to produce a more picture like image for human viewing. While a specific exemplary embodiment of the invention has been described it will be understood that additional embodiments and various modifications may be made without departing from the spirit and scope of the invention. Accordingly these and other embodiments of the invention fall within the scope of the claims below.

