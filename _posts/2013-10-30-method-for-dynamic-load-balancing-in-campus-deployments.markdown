---

title: Method for dynamic load balancing in campus deployments
abstract: A method is described for dynamically assigning tasks to entities of different types within a network system based on preferences to perform the tasks on particular entities and/or network/device conditions. This ability to dynamically assign processing of tasks between disparate devices in a network system provides a more efficient network configuration and utilization of resources while not compromising throughput, overall network security, and/or network flexibility.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09405591&OS=09405591&RS=09405591
owner: ARUBA NETWORKS, INC.
number: 09405591
owner_city: Sunyvale
owner_country: US
publication_date: 20131030
---
The present disclosure relates to dynamically assigning tasks to different types or classes of devices in a network system based on preference scores associated with performing the tasks on each device.

Over the last decade there has been a substantial increase in the use and deployment of wireless client devices from dual mode smartphones to tablets capable of operating in accordance with a particular Institute of Electrical and Electronics Engineers IEEE standard. With wireless becoming the de facto medium for connectivity among users it has become increasingly important for network systems to intelligently manage connections.

In some environments multiple access points and network controllers may be deployed to handle clients and customers in various areas. Each of these access points and network controllers may independently perform operations or tasks for associated client devices. For example in a tunnel mode a network controller may perform encryption decryption tasks for an associated client device. In contrast in a de tunnel mode an access point may perform these encryption decryption tasks for the client device. Similarly Media Access Control Service Data Unit MSDU processing tasks e.g. encapsulation decapsulation and aggregation multicast optimization e.g. dynamic multicast unicast conversion and rate control and other types of tasks may be performed by either an access point or a network controller in a network decision. Traditionally the decision of which device performs each task is pre determined and remains static during operation of the network system.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding. One or more embodiments may be practiced without these specific details. Features described in one embodiment may be combined with features described in a different embodiment. In some examples well known structures and devices are described with reference to a block diagram form in order to avoid unnecessarily obscuring the present invention.

Herein certain terminology is used to describe features for embodiments of the disclosure. For example the term digital device generally refers to any hardware device that includes processing circuitry running at least one process adapted to control the flow of traffic into the device. Examples of digital devices include a computer a tablet a laptop a desktop a netbook a server a web server an authentication server an authentication authorization accounting AAA server a Domain Name System DNS server a Dynamic Host Configuration Protocol DHCP server an Internet Protocol IP server a Virtual Private Network VPN server a network policy server a mainframe a television a content receiver a set top box a video gaming console a television peripheral a printer a mobile handset a smartphone a personal digital assistant PDA a wireless receiver and or transmitter an access point a base station a communication management device a router a switch and or a controller.

It is contemplated that a digital device may include hardware logic such as one or more of the following i processing circuitry ii one or more communication interfaces such as a radio e.g. component that handles the wireless data transmission reception and or a physical connector to support wired connectivity and or iii a non transitory computer readable storage medium e.g. a programmable circuit a semiconductor memory such as a volatile memory and or random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive etc. or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive portable hard disk drive or the like.

Herein the terms logic or logic unit are generally defined as hardware and or software. For example as hardware logic may include a processor e.g. a microcontroller a microprocessor a CPU core a programmable gate array an application specific integrated circuit etc. semiconductor memory combinatorial logic or the like. As software logic may be one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an object method implementation an applet a servlet a routine source code object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium or transitory computer readable transmission medium e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals or digital signals .

Lastly the terms or and and or as used herein are to be interpreted as inclusive or meaning any one or any combination. Therefore A B or C or A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

The access points may be any device that can associate with the client devices to transmit and receive data over wireless channels. Each of the access points may be configured to operate one or more virtual access points VAPs that allow each of the access points to be segmented into multiple broadcast domains. In one embodiment each VAP may apply different wireless settings to separate sets of the client devices associated with the access points . In one embodiment the access points may correspond to a network device such as a wireless access point a switch a router or any combination thereof. shows a component diagram of the access point according to one embodiment. In other embodiments the access points may include similar or identical components to those shown and described in relation to the access point .

As shown in the access point may comprise one or more of a hardware processor data storage an input output I O interface and device configuration logic . Each of these components of the access point will be described in further detail below.

The data storage of the access point may include a fast read write memory for storing programs and data during performance of operations tasks and a hierarchy of persistent memory such as Read Only Memory ROM Erasable Programmable Read Only Memory EPROM and or Flash memory for example for storing instructions and data needed for the startup and or operation of the access point . In one embodiment the data storage is a distributed set of data storage components. The data storage may store data that is to be transmitted from the access point or data that is received by the access point . For example the data storage of the access point may store data to be forwarded to the client devices or to one or more of the network controllers .

In one embodiment the I O interface corresponds to one or more components used for communicating with other devices e.g. the client devices the network controllers and or other access points via wired or wireless signals. The I O interface may include a wired network interface such as an IEEE 802.3 Ethernet interface and or a wireless interface such as an IEEE 802.11 WiFi interface. The I O interface may communicate with the client devices and the network controllers over corresponding wireless channels in the system . In one embodiment the I O interface facilitates communications between the access point and one or more of the network controllers through the switching fabric . In one embodiment the switching fabric includes a set of network components that facilitate communications between multiple devices. For example the switching fabric may be composed of one or more switches routers hubs etc. These network components that comprise the switching fabric may operate using both wired and wireless mediums.

In some embodiments the I O interface may include one or more antennas for communicating with the client devices the network controllers and or other wireless devices in the network system . For example multiple antennas may be used for forming transmission beams to one or more of the client devices or the network controllers through adjustment of gain and phase values for corresponding antenna transmissions. The generated beams may avoid objects and create an unobstructed path to the client devices and or the network controllers .

In one embodiment the hardware processor is coupled to the data storage and the I O interface . The hardware processor may be any processing device including but not limited to a MIPS ARM class processor a microprocessor a digital signal processor an application specific integrated circuit a microcontroller a state machine or any type of programmable logic array.

In one embodiment the device configuration logic includes one or more functional units implemented using firmware hardware software or a combination thereof for configuring parameters associated with the access point . In one embodiment the device configuration logic may be configured to allow the access point to associate with different client devices .

As described above the other access points may be similarly configured as described above in relation to access point . For example the access points may comprise a hardware processor data storage an input output I O interface and device configuration logic in a similar fashion as described above in relation to the access point .

In one embodiment the client devices may be any wireless or wired electronic devices capable of receiving and transmitting data over wired and wireless mediums. For example the client devices may be one or more of personal computers laptop computers netbook computers wireless music players portable telephone communication devices smart phones tablets and digital televisions. In one embodiment the client devices are digital devices that include a hardware processor memory hierarchy and input output I O interfaces including a wired and or wireless interface such as an IEEE 802.3 interface. In one embodiment the configuration of the components within the client devices may be similar to those discussed above in relation to the access point . In other embodiments the client devices may include more or less components than those shown in in relation to the access point .

In one embodiment the network controllers are digital devices that include a hardware processor memory hierarchy and input output I O interfaces including a wired and or wireless interface such as an IEEE 802.3 interface. In one embodiment the configuration of the components within the network controllers may be similar to those discussed above in relation to the access point . In other embodiments the network controllers may include more or less components than those shown in in relation to the access point .

In one embodiment the network controllers may be any set of devices that assist the access points in performing network tasks and operations. For example the network controllers may assist the access points to perform one or more of 1 encryption and decryption 2 Media Access Control Service Data Unit MACSDU processing and 3 multicast optimization. As will be described in greater detail below the access points and the network controllers may share each of these tasks such that under a first set of conditions and preferences an access point may perform a particular set of tasks while under a second set of conditions and preferences a network controller may perform this set of tasks. For example under a first set of task preferences and load conditions on the access point and the network controller encryption and decryption tasks corresponding to the client device may be performed by the access point . In contrast under a second set of task preferences and load conditions on the access point and the network controller these encryption and decryption tasks corresponding to the client device may be performed by the network controller . Accordingly tasks may be selectively assigned and performed by access points and network controllers based on multiple variables e.g. load conditions and task preferences . In some embodiments the assignment of tasks between access points and network controllers may be further divided by numerous characteristics of the tasks including 1 client device identifiers 2 Wi Fi Multimedia WMM traffic type 3 session identifiers 4 application identifiers 5 packet types and 6 virtual access point identifiers. The process of assigning tasks to particular access points and network controllers will be described in greater detail below.

It is understood that although assignment of tasks in the method is discussed in relation to access points and network controller these sets of devices are merely illustrative. Accordingly in other embodiments assignment of tasks in the method may be performed in relation to any set of dissimilar devices i.e. devices of different type model or class .

The method may be performed by one or more devices in the network system . For example the method may be performed by one or more of the network controllers in conjunction with one or more of the access points in the network system . In one embodiment one of the network controllers may be designated as a master network controller in the network system such that each operation of the method is performed by this designated master network controller.

In one embodiment the method may commence at operation with the detection of a triggering event in the network system . The triggering event may be for example 1 the detection of the memory load on a particular access point or network controller exceeding a predefined memory threshold and or 2 the detection of the processor load on a particular access point or network controller exceeding a predefined processor threshold. In these embodiments detection of memory or processor loads above predefined thresholds indicates over utilization of one or more of these entities. Accordingly the method may seek to re assign particular tasks to alleviate this over utilization of these entities and reduce potential bottlenecks. In one embodiment the triggering event of operation may be the detection of overall congestion or over utilization of the network system instead of congestion on a particular entity in the network system . Similar to the embodiments discussed above the method may seek to re assign particular tasks to alleviate this congestion or over utilization. In some embodiments the triggering event of operation may be the detection of manual inputs from a network administrator or the detection of the passage of a predefined amount of time e.g. twelve hours . Accordingly in these embodiments the method may be manually initiated by a network administrator and or automatically initiated at predefined intervals.

Following the detection of a triggering event at operation operation may identify t tasks t 1 that may be assigned re assigned to an access point or a network controller in the network system i.e. each of the t identified tasks may be either performed by an access point or a network controller . For example in a tunnel mode the network controller may perform encryption and decryption operations for the client device . However in a de tunnel mode these encryption and decryption operations for the client device may be performed by the access point . Accordingly the encryption and decryption tasks of the client device may be identified at operation since they may be performed by either an access point or a network controller . Although described in relation to encryption and decryption tasks in other embodiments other types of tasks may be identified at operation . For example Media Access Control Service Data Unit MSDU processing e.g. aggregation control encapsulating and decapsulating and multicast optimization tasks may be identified as tasks at operation since these tasks may be selectively performed by an access point or a network controller in the network system . As will be described below the tasks identified at operation will be examined for assignment to devices within the network system according to preference scores and or network device utilization characteristics.

In one embodiment identifying tasks at operation may be performed based on different levels of granularity. For example tasks may be divided based on one or more of 1 client device identifiers 2 Wi Fi Multimedia WMM traffic type 3 session identifiers 4 application identifiers 5 packet types and 6 virtual access point identifiers. For example an encryption decryption task k corresponding to client device may be identified separately from an encryption decryption task j corresponding to client device . In this example tasks k and j corresponding to the client devices and respectively may be separately assigned to an access point or to a network controller in the network system . Similarly the tasks k and j may be sub divided by traffic type such that each traffic type for each client device and is identified as a separate task at operation . In this fashion tasks may be identified on a varied level of granularity. The level of division granularity of tasks may be selected at operation based on load constraints e.g. processor and or memory of the network resource performing the method e.g. one of the network controllers and or time constraints for the performance of the method . For example when a high load is detected on the network resource performing the method operation may set the level of granularity for identifying tasks at a low level e.g. division of tasks only by client device identifiers . In contrast when a low load is detected on the network resource performing the method operation may set the level of granularity for identifying tasks at a high level e.g. division of tasks by client device identifiers WMM traffic type and session identifiers . By varying the level of granularity for division of tasks operation ensures that the method may be efficiently performed and is not impractically delayed by the complexity level in performing the method .

Following the identification of t tasks at operation operation determines preferences for each of the t tasks to be performed on an associated access point and network controller . In the description that follows for a task k in the set of t identified tasks the preference to perform the task k by entity i e.g. one of the access points or one of the network controllers is represented as P i k . In one embodiment the preference score P i k may be on a scale from one to ten where ten indicates a high preference for task k to be performed by entity i while one indicates a low preference for task k to be performed by entity i. For example a preference score of three may be set for encryption decryption tasks to be performed by the network controller for the client device accessing a YouTube website. In contrast a preference score of ten may be set for encryption decryption tasks to be performed by the network controller for the client device accessing corporate email services. In this example access to corporate email is viewed as a more sensitive operation in comparison to access to YouTube . Accordingly the network controller has a high preference to perform encryption decryption tasks for corporate email services i.e. operate in a tunnel mode to ensure access to the corporate email services is secure. However access to streaming videos e.g. access to a YouTube website may be considered less sensitive and accordingly access to these services may be performed in a de tunnel mode.

In one embodiment each of these preference scores e.g. P i k may be determined by a network administrator or an element within the network system . For example one or more of the network controllers and the access points may indicate a preference for a task k to be performed by that particular entity. These preference scores may be cultivated based on historic usage trends i.e. through direct analysis of historic usage data machine learning based on historic usage data and or other techniques preferences indicated by a user of a client device and or a network administrator. In one embodiment default preference score values may be provided for common scenarios. These default preference score values may thereafter be modified by a network administrator or an automated system.

Following determination of preference scores for each of the t identified tasks to be performed by one or more of the entities within the network system operation determines an estimated load on each entity that may potentially perform each of the t identified tasks. In one embodiment the estimated load on an entity i for a task k includes an estimated memory utilization load M k and or an estimated processor utilization load L k to be incurred by the entity i if the task k is assigned to be performed by the entity i. For example an estimated processor load L k in Floating point Operations Per Second FLOPS may be determined at operation for each of the t tasks and each entity that may potentially perform each of the t tasks. These estimates may be determined based on previously seen similar types of traffic on the particular entity within the network system current measurements of processor utilization load L k or memory utilization load M k on the entity i and or correlations between processor utilization load L k or memory utilization load M k with other metrics e.g. correlations between the number of packets sent by the entity i and processor utilization load L k for the entity i . In one embodiment the memory load M k may be calculated based on a table which scales in proportion to the processor load L k .

Following the determination of estimated loads L and or M operation assigns each of the t tasks to an entity in the network system based on the preference scores P such that a set of predefined load thresholds are not exceeded. Operation may be performed using various techniques and approaches. shows an example approach for assigning each of the t tasks to an entity in the network system according to one embodiment. The algorithm shown in uses a mix of greedy solution along with a 0 1 Multi constrained Knapsack approach to assign tasks.

In one embodiment the operation shown in may commence at sub operation with the sorting of each entity in the network system into a list. The list of entities may be sorted according to any characteristic or approach. For example in one embodiment the entities in the network system may be sorted in descending order based on current memory and or processor constraints i.e. the most constrained entity in the network system is at the top of the sorted list and the least constrained entity is at the bottom of the sorted list . In other embodiments the list of entities may be sorted based on other factors including the number of client devices associated with each entity e.g. entities in the list sorted in descending order based on the number of client devices associated with each entity .

Following the creation and the sorting of the list of entities at sub operation sub operation selects the first or top entity in the sorted list. For example the first entity may be the entity with the highest processor or memory load.

Following the selection of the first entity in the sorted list at sub operation sub operation selects a set of tasks from the t tasks identified at operation that potentially may be performed by the selected first entity from the sorted list. For example the selected first entity in the sorted list may be access point and the t tasks identified at operation may include encryption decryption tasks for client devices . In this example only the encryption decryption tasks associated with the client devices and are selected as potential tasks for the access point since only the client devices and are associated with the access point .

Following the selection of a set of potential tasks for the first entity in the sorted list sub operation assigns one or more of the potential tasks to be performed by the first entity. In one embodiment sub operation assigns tasks to the first entity to maximize the sum of preferences scores of corresponding tasks assigned to the first entity while not exceeding a predefined set of load thresholds e.g. memory and processor loads on the first entity. This may be represented as max Such That 0 1

In this formulation M i denotes a memory utilization threshold on the entity i and L i denotes a processor utilization threshold on the entity i. For example these thresholds M i and L i may represent total memory and processor resources available on the entity i. In some embodiments the above formulation may be expanded to include other dependent or independent system constraints.

In one embodiment the above formulation may be solved at sub operation using any technique. For example a dynamic programming approach or a greedy approximation may be used to solve the above formulation.

Following assignment of one or more tasks to the selected first entity in the sorted list at sub operation sub operation removes the assigned tasks from the set of t tasks identified at operation . In the example provided above where the selected first entity in the sorted list is the access point and the potential tasks for the access point include encryption decryption tasks for client devices and upon assigning one or more of these encryption decryption tasks to the access point these assigned tasks may be removed from the set of t tasks identified at operation . Removing the tasks at sub operation ensures that the assigned tasks are not needlessly and erroneously considered for assignment to another entity in the network system .

At sub operation the selected first entity in the sorted list of entities is removed from the sorted list. For instance in the example provided above the access point would be removed from the sorted list. Removing the first entity from the sorted list ensures that tasks are not needlessly and erroneously considered for assignment to the already considered entity. Although described and shown in as being performed subsequent to sub operation in other embodiments sub operation may be performed concurrently or before sub operation .

Following removal of the previously selected first entity from the sorted list sub operation determines whether any entities remain in the sorted list of entities. Upon determining at sub operation that one or more entities are in the sorted list the method moves to sub operation to select the new first entity in the sorted list. The newly selected first entity in the sorted list is thereafter processed according to sub operations in a similar manner as described above.

Upon determining at sub operation that no entities remain in the sorted list the method moves to sub operation to wait for another triggering event such that the method may be performed again.

The embodiment of operation described above provides a greedy solution along with a 0 1 Multi constrained Knapsack approach to assign tasks. This approach provides an efficient solution to the assignment of tasks which allows for great flexibility in the granularity level of task assignment.

Turning now to another example approach is provided for assigning each of the t tasks to an entity in the network system according to one embodiment i.e. operation . In contrast to the Knapsack approach used in the approach in assumes that the network controllers are the bottlenecks in the network system . Based on this assumption the approach of attempts to assign as many of the t tasks identified at operation to the network controllers and assigns the remaining tasks to the access points .

In one embodiment the operation shown in may commence at sub operation with the sorting of each entity in the network system into a list. The creation of a sorted list of entities may be performed at sub operation using similar factors as those described above in relation to sub operation shown in . In one embodiment the network controllers may be sorted to the top of the sorted list and the access points may be sorted to the bottom of the sorted list. In other embodiments the sorted list may only include the network controllers . By pushing the network controllers to the top of the sorted list or including only the network controllers operation of may first process each of the network controllers before considering the access points .

Following the creation and the sorting of the list of entities at sub operation sub operation selects the first or top entity in the sorted list. For example the first entity may be the entity with the highest processor or memory load.

Following the selection of the first entity in the sorted list at sub operation sub operation selects a set of tasks from the t tasks identified at operation that potentially may be performed by the selected first entity from the sorted list. In one embodiment sub operation may be performed in a similar fashion as sub operation in .

Following the selection of a set of potential tasks for the first entity in the sorted list sub operation assigns one or more of the potential tasks with the greatest preference score to load ratio to the first entity in the sorted list while not exceeding a predefined set of load thresholds e.g. memory and processor loads on the first entity. This list may be sorted sequentially in the order of 

In this formulation the Load may be either memory utilization load M k and or processor utilization load L k . As described above the sorted list may be top loaded with the network controllers such that the t tasks may be assigned to the network controllers until capacity is reached on each of the network controllers . Thereafter the remaining tasks of the t tasks are assigned to the access points .

Following assignment of one or more tasks to the selected first entity in the sorted list at sub operation sub operation may remove the assigned tasks from the set of t tasks identified at operation . In one embodiment operation may performed in a similar fashion to sub operation shown in .

At sub operation the selected first entity in the sorted list of entities is removed from the sorted list. In one embodiment operation may performed in a similar fashion to sub operation shown in . Although described and shown in as being performed subsequent to sub operation in other embodiments sub operation may be performed concurrently or before sub operation .

Following removal of the previously selected first entity from the sorted list sub operation determines whether any entities remain in the sorted list of entities. Upon determining at sub operation that one or more entities remain in the sorted list the method moves to sub operation to select the new first entity in the sorted list. The newly selected first entity in the sorted list is thereafter processed according to sub operations in a similar manner as described above.

Upon determining at sub operation that no entities remain in the sorted list the method moves to sub operation to wait for another triggering event such that the method may be performed again.

As described above the method may dynamically assign tasks at various granularity levels to different types models and or classes of devices based on preferences to perform these tasks on each device and or network device conditions. This ability to dynamically assign processing of tasks between disparate devices in the network system e.g. assignment between the access points and the network controllers provides a more efficient network configuration and utilization of resources while not compromising throughput overall network security and or network flexibility.

An embodiment of the invention may be an article of manufacture in which a machine readable medium such as microelectronic memory has stored thereon instructions which program one or more data processing components generically referred to here as a processor to perform the operations described above. In other embodiments some of these operations might be performed by specific hardware components that contain hardwired logic e.g. dedicated digital filter blocks and state machines . Those operations might alternatively be performed by any combination of programmed data processing components and fixed hardwired circuit components. Also although the discussion focuses on uplink medium control with respect to frame aggregation it is contemplated that control of other types of messages are applicable.

Any combination of the above features and functionalities may used in accordance with one or more embodiments. In the foregoing specification embodiments have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention and what is intended by the applicants to be the scope of the invention is the literal and equivalent scope of the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction.

