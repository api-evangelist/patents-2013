---

title: Proximity based communication with embedded system
abstract: A computing device connects to a local area network (LAN) and determines whether a device comprising an embedded system is also connected to the LAN. Responsive to determining that the device is connected to the LAN, the computing device establishes a first session with the embedded system of the device over the LAN and then communicates with the embedded system of the device via the first session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09426185&OS=09426185&RS=09426185
owner: Ayla Networks, Inc.
number: 09426185
owner_city: Santa Clara
owner_country: US
publication_date: 20130603
---
Many modern appliances consumer devices and other devices include embedded systems that are configured to perform one or more dedicated functions. However most embedded systems of such devices do not include networking capabilities remote interface capabilities remote control capabilities or related capabilities. Designing such functionality into an embedded system designing application programming interfaces APIs for accessing such functionality designing web services capable of communicating with and controlling the embedded system via this added functionality and designing applications for taking advantage of this functionality can consume considerable resources of the device manufacturer.

Some consumer devices such as routers network storage devices and so on provide an interface that enables these devices to be accessed over a local area network LAN via a remote interface. The remote interface is typically accessible using a standard web browser. Standard security practices for the remote interfaces are either non existent or insecure. For example one common practice is to configure the device with a permanent password and to identify that password on a sticker attached to the device. Any individual who knows the password can access the device. As a result security leaks may occur through the manufacturing and distribution chain of the device. Additionally once the password is compromised security of the device is compromised for the life time of that device. Accordingly typical security solutions for the remote interfaces of such conventional consumer devices often introduce a security hole.

Embodiments are directed to an embedded system having a remote control interface and to a remote control application capable of communicating with the embedded system. The remote control application is capable of establishing a direct local area network LAN session with the embedded system and of communicating with the embedded system over the LAN session. The remote control application is additionally capable of establishing a session with a wide area network WAN accessible service e.g. a web service or cloud service . The WAN accessible service may maintain a session with the embedded system or may periodically establish sessions with the embedded system and the remote control application may use the WAN accessible service as a proxy for communicating with the embedded system. The remote control application may determine whether it is on the same LAN as the embedded system and may establish the direct LAN session with the embedded system if they are connected to the same LAN. If the remote control application and the embedded system are not on the same LAN then the remote control application may communicate with the embedded system via the session with the WAN accessible service.

The remote control applications described in embodiments herein may automatically identify the optimal means to connect to an embedded system and may connect to that embedded system using the identified means. Additionally the remote control application may transition from a direct LAN session with the embedded system to an indirect connection via a WAN accessible service automatically without user input as a computing device running the remote control application moves out of range of the LAN. Similarly the remote control application may automatically transition from an indirect connection to the embedded system via the WAN accessible service to a direct LAN connection after the computing device hosting the remote control application joins the LAN. A direct LAN connection may provide reduced latency between receiving user commands at the remote control application and implementing those commands by the embedded system. An indirect connection via the WAN accessible service may enable control of the embedded system regardless of a user s location. Accordingly the automatic identification of an optimal connection type and establishment of the identified connection type enhances a user experience.

In some embodiments the remote control application and embedded system use a non static security mechanism for establishing direct LAN sessions. The WAN accessible service may generate shared keys and distribute these shared keys to the embedded system and to remote control applications that are authorized to communicate with the embedded system. The remote control application and embedded system may use these shared keys to establish secure sessions. The keys may be revoked and or replaced at any time. For example if a shared key becomes compromised the WAN accessible service may revoke that shared key and deliver a new shared key to the embedded system and to the remote control application. Thus the security implementations described in embodiments herein provide maximum security for establishing direct LAN sessions in a manner that may be transparent to a user.

Referring now to the figures is a block diagram depicting an example network architecture including remotely accessible embedded systems and computing devices that interact with the embedded systems. The network architecture includes multiple devices and computing devices connected to a local area network LAN . The devices are devices with embedded systems and may include for example electrical appliances such as refrigerators ovens washers driers dishwashers thermostats alarms air conditioners televisions radios receivers amplifiers and so forth. The devices may also include consumer devices such as digital watches music players game consoles digital cameras printers and so forth. Other examples of devices include stationary devices such as HVAC systems traffic lights factory controllers signs electronic billboards sprinkler systems and irrigation control systems as well as medical devices. Devices may also be any other type of device that includes an embedded system .

An embedded system is a class of computing device that is embedded into another device as one component of the device . The device typically also includes other hardware electrical and or mechanical components that may interface with the embedded system. Embedded systems are typically configured to handle a particular task or set of tasks for which the embedded systems may be optimized. Accordingly the embedded systems may have a minimal cost and size as compared to general computing devices.

The embedded systems may each include a communication module not shown that enables the embedded system and thus the device to connect to the LAN . The communication module may be configured to manage security manage sessions manage communications with external devices and so forth. In one embodiment the communication module is configured to communicate using WiFi . Alternatively the communication module may be configured to communicate using Bluetooth Zigbee Internet Protocol version 6 over Low power Wireless Area Networks 6LowPAN power line communication PLC Ethernet e.g. 10 Megabyte Mb 100 Mb and or 1 Gigabyte Gb Ethernet or other communication protocols. One example of an embedded system is described in greater detail below with reference to .

Referring back to the LAN may include a router switch bridge or other network device not shown that enables communication between multiple devices e.g. devices computing device computing device etc. connected to the LAN . The network device may provide wired connections to the LAN using for example Ethernet ports universal serial bus USB ports and or Firewire ports. The network device may additionally provide wireless connections to the LAN using for example a WiFi transceiver.

Some embedded systems may not support any of the communication types supported by the network device. For example device may support Zigbee and device may support Bluetooth. To enable such devices to connect to the LAN the LAN may include a gateway device not shown connected to the network device via one of the connection types supported by the network device e.g. via Ethernet or WiFi . The gateway device may additionally support other communication protocols such as Zigbee PLC and or Bluetooth and may translate between supported communication protocols. Accordingly some devices may connect to the LAN through the gateway device.

The LAN is connected to a wide area network WAN . The WAN may be a private WAN e.g. an intranet or a public WAN such as the Internet or may include a combination of a private and public network. The LAN may include a router and or modem e.g. a cable modem a direct serial link DSL modem a Worldwide Interoperability for Microwave Access WiMAX modem an long term evolution LTE modem etc. that provides a connection to the WAN .

The WAN may include or connect to a server computing device . The server computing device may include a physical machine and or a virtual machine hosted by a physical machine. The physical machine may be a rackmount server a desktop computer or other computing device. In one embodiment the server computing device includes a virtual machine managed and provided by a cloud provider system. Each virtual machine offered by a cloud service provider may be hosted on a physical machine configured as part of a cloud. Such physical machines are often located in a data center. The cloud provider system and cloud may be provided as an infrastructure as a service IaaS layer. One example of such a cloud is Amazon s Elastic Compute Cloud EC2 .

The server computing device hosts a WAN accessible service which may be a web based service and or a cloud service e.g. a web based service hosted in a cloud computing platform . The WAN accessible service may maintain a session e.g. via a continuous or intermittent connection with one or more of the embedded systems . Alternatively the WAN accessible service may periodically establish sessions with the embedded systems . Via a session with an embedded system WAN accessible service may issue commands to the embedded system and or receive status updates from the embedded system. The commands may be commands to change a state of one or more parameters of a device controllable by the embedded system. For example if the embedded system is embedded in a heater or thermostat then the commands may include commands to increase or decrease a temperature. In another example if the embedded system is embedded in a home automation system then the commands may include commands to turn on or off lights.

Status updates received from the embedded systems may identify values or states of some or all detectable parameters of devices that the embedded systems are included in. Such values or states may change based direct user interaction with the devices. Such values or states may also change responsive to commands sent to the embedded systems by the WAN accessible service and or by computing devices . By maintaining or periodically establishing sessions with the embedded systems the WAN accessible service may maintain up to date information on the states of the devices .

Computing devices may include portable devices such as electronic book readers portable digital assistants mobile phones laptop computers portable media players tablet computers cameras video cameras netbooks notebooks and the like. Computing devices may also include traditionally stationary devices such as desktop computers gaming consoles digital video disc DVD players media centers and the like. Computing devices may connect to the WAN and or to the LAN . Computing devices may connect to the LAN when they enter a proximity to the LAN sufficient to exchange data with a network device associated with the LAN . This may include coming within a particular proximity to a wireless antenna associated with the LAN and or physically connecting to the LAN via for example an Ethernet cable.

Computing devices each include a remote control application . The remote control application is configured to interface with and or control one or more of the devices via the devices embedded systems . In one embodiment the computing devices include separate remote control applications for each of the embedded systems . Alternatively the computing devices may include a single remote control application that is capable of communicating with and controlling embedded systems for multiple different devices .

While computing devices are connected to WAN a remote control application may establish a session with the WAN accessible service . The WAN accessible service may provide an interface for indirectly controlling and monitoring the devices . If a user desires to change a state of a device the user may issue a command via the remote control application and that command may be sent to the WAN accessible service . The WAN accessible service may then forward the command on to the appropriate embedded system. Additionally when the WAN accessible service received updated state information for a device from an embedded system the WAN accessible service may forward the state information on to the remote control application. This may enable users to connect to and control the devices from anywhere they have access to the Internet.

When a computing device connects to the LAN the remote control application may automatically establish a direct connection to one or more embedded systems that are also connected to the LAN . While the computing device is connected to the LAN it may maintain a session with and control one or more embedded systems even in the absence of a connection to WAN e.g. if LAN loses a broadband Internet connection .

For example computing device is shown as originally being connected to WAN and then moving 108 to an area in which it can connect to LAN . Responsive to computing device connecting to LAN remote control application may detect that embedded systems are also connected to LAN . Remote control application may then send notifications to the embedded systems to initiate the establishing of direct LAN sessions to each of the embedded systems . Once a direct LAN session is established between remote control application and an embedded system remote control application may send commands directly to the embedded system and receive status updates directly from the embedded system without using the WAN accessible service as an intermediary. Such direct connection provides a low latency e.g. near instantaneous communication between the remote control application and the embedded systems . Accordingly the embedded system may respond to and execute user commands without any user perceptible delay.

When a computing device becomes disconnected from the LAN the computing device may automatically connect to the WAN accessible service via the WAN . For example if the computing device is a mobile phone then the computing device may connect to the LAN using a WiFi radio. Once the computing device goes out of range of the LAN the computing device may connect to WAN and WAN accessible service through a connection with a wireless carrier system e.g. though a global system for mobile communications GSM code division multiple access CDMA wideband code division multiple access WCDMA time division multiple access TDMA universal mobile telecommunications system UMTS long term evolution LTE worldwide interoperability for microwave access WiMAX or other wireless communication protocol connection . Accordingly the remote control application may automatically select an optimal connection type for communicating with the embedded systems and then establish an appropriate session for the determined connection type. Such connection establishment and transition between connections and sessions may be performed automatically without user interaction by the remote control application and may be transparent to the user.

Graphical user interface GUI enables users to interact with and control devices in an intuitive and user friendly manner. GUI may provide a collection of graphical icons visual indicators buttons toggles sliders and so forth that represent states and values of different parameters for the devices as well as controls for changing those states and values. A user may interact with the GUI to cause the remote control application to generate notifications commands property updates and other messages for the devices represented in the GUI.

Search module searches for embedded systems that the remote control application has been registered with. In one embodiment search module initiates a search each time the computing device executing the remote control application connects to a LAN. In one embodiment search module first attempts to connect to the device using the last known IP address of the device. Search module may send a ping message to the IP address . If a response is received from the device then search module determines that the device shares a LAN connection with remote control application . If no response is received from the device or a response is received from an unexpected different device then search module may use multicast domain name system mDNS to locate the device. Accordingly search module may broadcast a query message asking for any device on the network having the device ID to identify itself. If the device is on the LAN then the embedded system of the device will multicast its IP address over the LAN. This then identifies the IP address of the embedded system to search module .

Communication mode selector determines whether the remote control application will communicate with the embedded system of the device directly over the LAN or indirectly using a WAN accessible service as a proxy. If search module identified the device as being on the same LAN as the remote control application then communication mode selector may select a direct LAN communication mode. If search module determined that the device is not on the same LAN as remote control application then communication mode selector may select an indirect WAN communication mode. Additionally in some instances LAN support may be disabled for the embedded system. In such an instance communication mode selector would default to WAN communication mode.

The search module may detect connections to new LANs and detect disconnections from LANs as a computing device running the remote control application changes locations. Whenever a connection status to a LAN or to a WAN changes search module may perform a new search for the device. Additionally communication mode selector may select a new communication mode based on updated LAN or WAN connectivity and or based on new search results of the search module .

If a WAN communication mode has been selected WAN communicator may establish a connection to a WAN accessible service. WAN communicator may provide credentials of a user and or of the remote control application to the WAN accessible service. Responsive to WAN communicator providing the proper credentials the WAN accessible service may establish a session with remote control application . In one embodiment secure sockets layer SSL or other security protocols are used for the secure session. Once the session is established the WAN accessible service may provide remote control application with an updated IP address and or device state of the device. Additionally if a shared key and key ID associated with the device have changed then WAN communicator may receive and store an updated shared key and key ID .

During a session with the WAN accessible service a user may request to register the remote control application to a new device or to de register the remote control application from a device. The session may be associated with a particular user account and that user account may include entries for multiple devices. For example if a user has an oven a dishwasher a dryer and a washer at home each with an embedded system then the account may include entries for each of these devices. By registering the remote control application to a device the remote control application gains the ability to monitor and or control that device. In one embodiment the remote control application may be granted one of multiple different permission levels through the registration process. A first permission level may permit monitoring of a device but not permit any control of the device. A second permission level may permit control of some e.g. a subset of all device functions or settings and a third permission level may permit control of all device functions and settings as an example.

Responsive to registering the remote control application to a device WAN communicator receives one or more of the shared key key ID IP address device ID and device state from the WAN accessible service. The shared key key ID IP address and or device ID may be usable to detect the device and establish direct LAN connections and sessions to the device.

If a LAN communication mode is selected for communication with a device LAN communicator establishes a direct LAN connection and session with the embedded system of the device. To establish a session LAN communicator may invoke security manager .

Security manager uses the shared key and key ID to generate one or more unique session keys for a new session with the embedded system. The security manager may determine based on the key ID that remote control application and the embedded system each have a copy of the same shared key . For example LAN communicator may send the key ID to the embedded system and or may receive a message from the embedded system that includes a key ID. Security manager may compare a key ID of a shared key used by the embedded system to the stored key ID associated with the device. If the key ID s match then security manager may generate one or more session keys using the shared key.

The session keys may be established for example by concatenating random strings generated by the security manager and the embedded system and hashing the concatenated strings using the shared secret. In one embodiment session key establishment is performed in accordance with RFC 5246 section 5. In one embodiment a first session key is generated for signing messages and a second session key is generated for encrypting messages. Additionally a third session key may be generated for use as an initialization vector when using a block cipher in a mode of operation.

Once session keys for a secure session are established LAN communicator may use the session keys to encrypt and or sign messages e.g. property updates sent to the embedded system. For example LAN communicator may use a first session key for encrypting messages and a second session key for signing messages. LAN communicator may also use a session key to decrypt messages received from the embedded system and or verify an identity of the embedded system based on digital signatures included in the messages.

Encryption may be performed using a block cipher in a feedback mode of operation e.g. using an advanced encryption standard AES block cipher in a cipher block chaining CBC mode of operation . A third session key may be used as an initialization vector for the mode of operation and a first key may be used as in input key for the block cipher. Messages may also be encrypted with an incrementing sequence number in one embodiment to provide enhanced security.

In one embodiment messages generated by WAN communicator and LAN communicator include Javascript object notation JSON objects. The JSON objects may include an encrypted payload and a signature where the signature may have been generated using the second session key.

Notably remote control application stores the shared key and key ID received from the WAN accessible service. Accordingly LAN communicator may use the shared key and key ID to establish secure sessions with the embedded system whether or not remote control application is connected to the WAN accessible service. Additionally the shared key may be revoked and replaced at any time by the WAN accessible service and or may expire based on an assigned expiry. Accordingly a LAN connection may be provided that has maximum security without the disadvantages associated with traditional LAN connection solutions.

Account manager manages user accounts. Each user account may include one or multiple embedded systems one or more authorized users of the account and one or more registered computing devices allowed to communicate with the embedded systems.

Embedded system interface is responsible for connecting to embedded systems. WAN accessible service may establish secure sessions with and or maintain secure sessions with one or many embedded systems identified in the user accounts. In one embodiment WAN accessible service establishes sessions with many embedded systems associated with many different user accounts. SSL or other secure communication protocols may be used to establish the secure sessions. Alternatively WAN accessible service may establish connections with embedded systems associated with a single user account. Via the active sessions embedded system interface may send notifications property updates and or control messages to the embedded systems and receive acknowledgments status updates e.g. of a device state and or local IP address and other information e.g. a device ID from the embedded systems. Additionally embedded system interface may deliver shared keys and associated key IDs to the embedded systems notify the embedded systems of revoked keys and so on.

Application interface is responsible for connecting to remote control applications. Application interface may enable users to log in to user accounts on WAN accessible service by providing the proper credentials. A secure session may be established with the remote control applications as a part of the log in process. Once a secure session is established e.g. via SSL and a remote control application is logged into a particular user account application interface may provide the remote control application with updated status information for embedded systems to which the remote control application is registered. Additionally application interface may receive commands from the remote control application for modifying a state of or otherwise controlling one or more embedded systems with which the remote control application is registered.

Graphical user interface may be a web interface that is accessible from computing devices using a web browser. Accordingly computing devices that do not include a remote control application may still log into a user account for monitoring and or controlling embedded systems via the graphical user interface .

Security manager manages shared keys also referred to as shared secrets for embedded systems. Security manager may include a key generator and a key revoker . Key generator may use a random number generator pseudorandom number generator or other key generation mechanism to generate shared keys. A shared key may be a random integer or string of values. In one embodiment shared keys are 32 character keys e.g. having 32 alphanumeric characters . In one embodiment shared keys are 256 bit keys. Alternatively other size keys may be used such as 128 bit keys 512 bit keys and so on. Key generator may additionally generate a key identifier ID for each generated shared key . The key ID may be a random string a sequentially incremented integer or other data type.

Once a new shared key has been generated embedded system interface may propagate the shared key and associated key ID to the appropriate embedded system and application interface may propagate the new shared key and associated key ID to remote control applications registered to that embedded system in a user account. In one embodiment embedded system interface transmits the shared key and associated key ID to the embedded system before the shared key and key ID are distributed to any remote control applications. Embedded system interface may wait for a confirmation that the embedded system received the shared key and associated key ID. Responsive to the confirmation application interface may then transmit the shared key and key ID to the remote control applications registered to the embedded system.

At any time a key may become compromised. Accordingly key revoker may revoke a key causing the key to no longer be usable. Application interface notifies remote control applications of the revoked status of a shared key and embedded system interface notifies an appropriate embedded system using that shared key of the key s revoked status. Additionally keys may be created with a predetermined expiration. The expiration may be dictated by the embedded system for which the key is generated. Example expiration periods include 15 minutes after creation 30 days 6 months and so forth.

The embedded system may include a host processing device a host memory and or a communication module coupled to the host processing device . The embedded system may also include numerous other components that are not shown herein. Examples of such additional components may include light emitting diodes LEDs a power supply regulator fuses ports a user interface digital to analog D A converters analog to digital A D converters field programmable gate arrays FPGAs application specific integrated circuits ASICs and so on.

Host processing device may be a microcontroller or a digital signal processor DSP in one embodiment. Host processing device may alternatively or additionally include a programmable logic controller PLC a field programmable gate array FPGA or a complex programmable logic device CPLD . The host processing device may be configured to perform specific functions related to the operation and control of the device .

Host memory may include random access memory RAM read only memory ROM one time programmable OTP ROM Flash e.g. NOR Flash or other types of memory. Host memory may store an application programming interface API for the communication module . The API may enable the host processing device to send commands and or data to and receive commands and or data from communication module .

Host memory may additionally include a device state for the device . The device state may include a present device state historical device state and or changes made to the device state over a particular period. For example device state in one embodiment includes changes made to the device s state since a connection to a WAN accessible service was lost. Host memory may also include firmware for the host processing device that configures the host processing device to perform one or more operations that are specific to device .

In some embodiments the host memory may be integrated into the host processing device . For example microcontrollers typically include a processor core memory and programmable input output peripherals. Accordingly if the host processing device is a microcontroller then host memory may be a memory of host processing device .

Communication module may be an integrated circuit IC that is configured to be coupled to host processing device of embedded system . Communication module may be provided by a third party to a manufacturer of the device along with the API and may enable network capability and remote control capability to be easily added to the device . The communication module may include its own processing device a memory and or a network adapter . The processing device may be a microcontroller a DSP a PLC a microprocessor or programmable logic device such as an FPGA or a CPLD. The memory may include a non volatile memory e.g. RAM and or a volatile memory e.g. ROM Flash etc. . In one embodiment memory is integrated into processing device .

Memory may store a shared key or multiple shared keys and an associated key ID or multiple key IDs . Memory may also store firmware for the processing device such as firmware that includes instructions for a security manager and a remote interface .

Network adapter may be a wired network adapter e.g. an Ethernet adapter or a wireless network adapter e.g. a WiFi adapter or other wireless local area network WLAN adapter . Network adapter may also be configured to provide connection to a network or other devices using Zigbee PLC Bluetooth 6LowPAN or other communication protocols. Network adapter may receive notifications and other messages from a WAN accessible service and or remote control applications. Network adapter may additional send outgoing messages to the WAN accessible service and or to remote control applications.

Remote interface may be executed by processing device to operate on messages and notifications received from a WAN accessible service and or remote control applications. Responsive to receiving a notification from a remote control application that does not have an active LAN session with the embedded system remote interface may determine whether LAN support is enabled. If LAN support is enabled remote interface may send an acknowledgment response to the remote control application. If LAN support is not enabled then the remote control operation would have to communicate with the communication module of the embedded system through a WAN accessible service.

Remote interface may also determine if there are sufficient resources to establish a session with the remote control application. For example remote interface may include sufficient resources to maintain LAN sessions with a particular number of remote control applications in one embodiment. In such an instance remote interface would determine whether the particular number of remote control applications already have sessions with the embedded system. If so remote interface would not establish a connection with the new remote control application from which the notification was received. If there were fewer than the particular number of remote control applications with LAN sessions then remote interface would initiate session establishment.

For session establishment remote interface may invoke security manager e.g. cause processing device to execute security manager . Security manager uses shared key to generate session keys for a new session with the remote control interface. In one embodiment remote interface notifies the remote control application of the key ID for the shared key prior to or as a step in session establishment. If the remote control application does not have a copy of the shared key associated with the key ID then no session may be established with the remote control application.

If the remote control application and communication module include copies of the same shared key then security manager generates unique session keys for a new session using the shared key . The remote control application also generates the same unique session keys using a copy of the shared key . After the secure session is established remote interface may use the session keys to encrypt and sign messages to be sent to the remote control application and to decrypt and verify messages received from the remote control application.

After a session has been established remote interface may receive notifications from the remote control application and from any other remote control applications that also have active sessions. Additionally remote interface may receive notifications from the WAN accessible service. Each of the notifications may indicate that a sender of the notification has a message e.g. a command or property update for the embedded system . Remote interface may or may not send acknowledgements of receipt of the notifications to senders. Additionally remote interface may place the notifications into a queue based on an order that they were received and may process the notifications on a first in first out FIFO basis.

When a notification is to be processed remote interface sends a message to the sender of the notification requesting a message. The remote interface then receives the requested message decrypts it and forwards any commands or property updates from the message on to host processing device . Host processing device may perform one or more operations based on the commands which may cause a state of one or more parameters or properties for the device to change. The host processing device may report the changed device state to processing device .

Remote interface may generate a status update message and may send it to the connected remote control applications and to the WAN accessible service if an auto echo mode is enabled. If an auto echo mode is disabled then the host processing device may determine which if any remote control applications and or WAN accessible services will be notified of the state update as well as when such updates will be distributed. For example the host processing device may determine to actively update LAN sessions for every state change and only update the WAN accessible service with latest information once a day. The WAN accessible service may then forward the status update to any remote control applications that are not directly connected to embedded system over the LAN.

Processing device may keep track of every remote control application and WAN accessible service it has an active session with. Reachability to the WAN accessible service may be detected in numerous ways. For example remote interface may attempt to POST to the WAN accessible service with status updates and or may attempt to ping the WAN accessible service. If a POST attempt and or ping attempt fails after one or more retries processing device may inform host processing device that the WAN accessible service is unreachable. Remote interface may then periodically attempt to reconnect to the WAN accessible service e.g. every 5 minutes every 10 minutes or at some other interval .

In one embodiment processing device notifies host processing device each time communication module connects to or loses connection with a destination e.g. with WAN accessible service or a remote control application . The host processing device may use this information to keep track of WAN accessible service reachability and record which property updates state changes have not been reported to the WAN accessible service in device state . Once a connection to the WAN accessible service is reestablished host processing device or processing device may send all updates that the WAN accessible service missed.

Though memory is shown to have a single shared key and associated key ID it should be understood that memory may alternatively include multiple different shared keys and key IDs. In one embodiment memory includes different shared keys associated with different permission levels. A remote control application may be granted a level of access and control of the embedded system based on the permission level associated with a shared key in possession of that remote control application. Additionally memory may store multiple shared keys having different expirations and or different valid use periods. For example a first shared key may be usable for a first month and then expire and a second shared key may become usable for a second month after the first shared key expires.

At block processing logic determines whether the particular device with the embedded system is on the LAN. If the device is on the LAN the method proceeds to block . If the device is not on the LAN the method proceeds to block .

At block processing logic determines whether there is already an active session with a WAN accessible service also referred to as a WAN service . If so the method may proceed to block and processing logic may terminate that active session. Alternatively processing logic may maintain the active session with the WAN accessible service. This may enable processing logic to later transition to use of the session with the WAN accessible service without going through the session establishment routine if a connection to the LAN is lost. If there is not a current session with the WAN accessible service the method proceeds to block .

At block processing logic establishes a local session with the embedded system of the device over the LAN. This may be referred to as a LAN session. One embodiment of session establishment is set forth below with reference to . At block processing logic communicates with the embedded system using the local LAN session. In one embodiment the session with the embedded system has a limited lifetime for which it is valid. Accordingly processing logic may periodically refresh the session to extend its lifetime.

At block processing logic determines whether there is an active session with the WAN accessible service. If there is such an active session the method proceeds to block . Otherwise at block processing logic establishes such a session with the WAN accessible service e.g. by using a secure web protocol such as SSL and logging into a user account on the WAN accessible service . At block processing logic communicates with the WAN accessible service using the session. The WAN accessible service may act as a proxy for communications with the embedded system. For example processing logic may send commands for the embedded system to the WAN accessible service and the WAN accessible service may forward those commands to the embedded system. Additionally the WAN accessible service may receive status updates and other information from the embedded system and may forward such status updates and other information on to the processing logic.

At block processing logic receives a shared key an associated key ID and a last known IP address of the device from the WAN accessible service. The shared key may be a shared key currently in use by the device. Processing logic may also receive a MAC address and or device ID of the embedded system e.g. of a communication module in the embedded system . Processing logic may also receive an indication as to whether the embedded system has LAN support enabled. At block processing logic stores the shared key associated key ID device IP address and or other received information.

At block processing logic determines whether the shared key has been revoked. In one embodiment the WAN accessible service notifies processing logic when the key is revoked. Alternatively processing logic may determine that the shared key has been revoked when processing logic fails to successfully connect to the device using the shared key. If the shared key is revoked at block processing logic may receive a new shared key and new associated key ID from the WAN accessible service. The new shared key and key ID may overwrite the original shared key and key ID in one embodiment. If the shared key has not been revoked the method proceeds to block .

At block processing logic receives a new IP address of the device from the WAN accessible service if the IP address has changed. Any of the operations of blocks may be performed and in various orders while processing logic maintains the secure session with the WAN accessible service.

After some time interval processing logic receives an indication that the embedded system is ready to establish a session. This indication may be a session establishment message which may include the key ID. At block processing logic determines whether it has access to the same shared key used by the embedded system based on the key ID. If the embedded system and processing logic have access to the same shared key the method continues to block . Otherwise no session can be established and the method ends.

At block processing logic generates one or more session keys using the shared key and creates a new local session. At block processing logic uses the session keys for secure communication with the embedded system of the device. This may include encrypting and signing messages sent to the embedded system using the session keys as well as decrypting and verifying messages received from the embedded system using the session keys.

In alternative embodiments secure sessions may be established using other techniques. For example the embedded system may include an SSL certificate which a remote control application may verify in order to establish an SSL session between the embedded system and the remote control application. In another alternative embodiment the embedded system e.g. the communication module in the embedded system may be preconfigured with one or more security keys that are usable for session establishment.

At block processing logic determines whether the computing device has a copy of a shared key used by the embedded system. In one embodiment processing logic sends a key ID associated with a particular shared key to the computing device and the computing device makes the comparison. Alternatively processing logic may receive a key ID from the computing device and compare the received key ID to a key ID associated with a shared key used by the embedded system. At block if the computing device and embedded system have the same shared key the method continues to block . Otherwise the method ends.

At block processing logic initiates session establishment with the computing device. In an alternative embodiment processing logic may begin session establishment without first checking for a common shared key. In such an embodiment the session establishment would later fail if these is no common shared key. At block processing logic sends a session establishment message to the computing device. At block processing logic generates one or more session keys based on the shared key. The computing device may also independently generate the same session keys. At block processing logic uses the session key for secure communications with the computing device.

At block processing logic requests a message from the computing device or from the WAN accessible service if the notification was received from the WAN accessible service . At block processing logic receives a message from the computing device. The message may be encrypted and processing logic may decrypt the message using an appropriate session key.

At block processing logic forwards a command included in the message to a microprocessor or other host processing device . The microprocessor may execute the command which may cause a state of the device to change. At block processing logic identifies a state change of the device. In one embodiment the microcontroller sends a status update to processing logic. At block processing logic sends a state update of the device to any computing device with active local connections. This may include sending the status update to a computing device that issued a message causing the state to change as well as other computing devices.

At block processing logic determines whether the embedded system is connected to a WAN e.g. to the Internet . If the embedded system is not connected to the WAN processing logic may record the state update of the device. In one embodiment processing logic instructs the microcontroller to store the state update. The method may then return to block and processing logic may again determine whether the embedded system has a WAN connection. This process may repeat indefinitely until a WAN connection is established. Once a WAN connection is established the method proceeds from block to block . At block processing logic sends the state update of the device to the WAN accessible service.

Initially the remote control application may not have a session with the embedded system and may send a notification indicating that the remote control application would like to establish such a session. The embedded system may then respond to the notification with an acknowledgment .

At some later time the embedded system may initiate key establishment . This may include sending a message with one or more random strings as well as a key ID associated with a key to be used for the session establishment. The remote control application may then perform key establishment operations and may conclude with a key establishment response to the embedded system . After key establishment is complete remote control application and embedded system may each have a secure copy of one or more unique session keys to be used for a new session between the remote control application and the embedded system .

After a session is established remote control application may receive a user input to control a device associated with the embedded system . Remote control application may then send a notification of an even to the embedded system. The embedded system may send an acknowledgment if it recognizes the remote control application has having a valid session and at some later time sends an initiate event message to remote control application . Responsive to receipt of the initiate event message remote control application sends an event response which includes one or more commands to be executed by the embedded system. In one embodiment remote control application additionally notifies the WAN accessible service and or other remote control applications of the command and or property updates associated with the command responsive to sending the command to the embedded system. This may supplement or replace similar updates sent out by the embedded module when it updates a state of a device.

The embedded system may execute the commands which may cause a state of the device associated with the embedded system to change. Embedded system may then send a status update of the device to the remote control application as well as to a WAN accessible service and to any other remote control applications with active sessions to the embedded system .

In the illustrated embodiment embedded system receives minimally sized notifications and records receipt of the notifications in a queue. With this communication model the embedded system may record just the identification of the remote control application or WAN accessible service that notifications have been received from without storing any additional information. When embedded system is ready to perform a next operation embedded system may send an initiate event message or initiate key establishment message as appropriate to a device that a notification was received from. Accordingly data such as a nature of the event data associated with the event and so on may be stored at the remote control application or WAN accessible service which typically will have far greater available resources than the embedded system . This maximizes efficient use of the embedded system s available resources.

In alternative embodiments remote control applications may directly post messages e.g. encrypted and signed packets to the embedded system rather than waiting for a request of such messages.

The example computing device includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM or Rambus DRAM RDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a secondary memory e.g. a data storage device which communicate with each other via a bus .

Processing device represents one or more general purpose processors such as a microprocessor central processing unit or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor processor implementing other instruction sets or processors implementing a combination of instruction sets. Processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. Processing device is configured to execute the processing logic instructions for performing the operations and steps discussed herein.

The computing device may further include a network interface device . The computing device also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a machine readable storage medium or more specifically a computer readable storage medium on which is stored one or more sets of instructions embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting computer readable storage media.

The computer readable storage medium may also be used to store a remote control application as described with reference to and or a software library containing methods that call a remote control application. While the computer readable storage medium is shown in an example embodiment to be a single medium the term computer readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable storage medium shall also be taken to include any medium that is capable of storing or encoding a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies described herein. The term computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic media.

The modules components and other features described herein for example in relation to can be implemented as discrete hardware components or integrated in the functionality of hardware components such as ASICS FPGAs DSPs or similar devices. In addition the modules can be implemented as firmware or functional circuitry within hardware devices. Further the modules can be implemented in any combination of hardware devices and software components or only in software.

Some portions of the detailed description have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as receiving connecting determining establishing communicating or the like refer to the actions and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the present invention also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the discussed purposes or it may comprise a general purpose computer system selectively programmed by a computer program stored in the computer system. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic disk storage media optical storage media flash memory devices other type of machine accessible storage media or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. Although the present invention has been described with reference to specific example embodiments it will be recognized that the invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense. The scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

