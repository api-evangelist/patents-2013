---

title: Systems and methods of active text markup
abstract: The present subject matter relates to text viewing and markup, and in particular to systems and methods of active text markup. In particular, various embodiments include at least one of systems, methods, and software to define text markup styles including associated actions to be performed against text marked up according to a defined markup style. Some embodiments include receiving marker input mapping a first markup style to an action and receiving text marker input associating the marker to a portion of document text. Such embodiments may further include receiving an action trigger to perform the action mapped to the marker associated to the portion of document text and performing the action based on the associated portion of document text.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09477645&OS=09477645&RS=09477645
owner: SAP SE
number: 09477645
owner_city: Walldorf
owner_country: DE
publication_date: 20130313
---
When reading text on a computing device users often times make notes markup text highlight words or larger portions of text and the like. Such actions are generally referred to as markups. With few exceptions such as change tracking in word processing programs markups made today via a computing device are essentially the same as they have been since people started marking up physically printed text. For example a user may markup a document with edits and comments and the edits and comments are later reviewed by the same or another user that may accepts or rejects changes and appropriately handles any comments. Another example is highlighting of text which may further include adding comments or notes to the highlighted portions. However in such examples of markups the marked up text remains static and for action to be taken with regard to the markups a user must take the particular action which includes reviewing the markups manually and manually performing the particular action.

Textual documents can take many different forms. Such forms may include word processing documents page description language documents i.e. Portable Document Format or PDF email presentation files i.e. Microsoft PowerPoint files spreadsheets and the like. Such documents may be read and reviewed for various purposes. Often times a user may choose to markup a document for various reasons such as to identify certain document portions as relevant to particular tasks for follow up to inquire further to associate text with particular products that might meet a certain purpose or requirement specified in the text and other reasons. Conventionally such markups are later returned to and the reviewing user or another user takes action with regard to the markups. Various embodiments illustrated and described herein provide a markup tool that allows a user to define one or more markup styles and to associate one or more actions therewith. The one or more markup styles are then available within a markup tool to markup a textual document under review. Then from markups applied to a textual document the one or more actions associated with markup styles used in marking up the textual document can be triggered and performed. Performance of the actions may be automatic or semi automatic i.e. performed in part automatically and requesting further user input such as in scheduling a meeting or generating an email based at least in part on text marked up in the textual document .

An action associated with a markup style may generally include a data processing activity that is to be performed with regard to text of a marked up portion of a textual document. One such action may be a query of an Internet search engine or a database. The markup in such an embodiment may be defined as a highlighter color associated with an action SEARCH and further associated with a Universal Resource Locator URL of a particular Internet search engine. In a database query embodiment rather than an association with an Internet search engine the association may instead be with a particular database a stored procedure of a database a web service or other service that can be called to query a database and the like.

As stated above however a query is but just one action type that may be associated with a markup style. Other examples may include a set of markup styles where each markup style is associated with a particular product. Subsequent markup of a textual document such as a requirements document or a request for proposal document the marked up portions of text may be extracted from the textual document into a new document or other repository and organized according to the markups. For example a new document may be generated that includes a section for each of a number of products associated with respective defined markup styles. Each section of the new document may be created to include a heading representative of the respective product and each section may be populated with text from the textual document marked up in the markup style associated with the respective product. In another embodiment rather than the markup styles being associated with products the markup styles may instead be associated with chapter numbers user defined subjects or titles or other user defined sections. Similarly the respective marked up text upon triggering of markup actions with regard to the textual document will be copied into a new document and organized according to the defined markups. In some embodiments the new document rather than being a textual document may instead be one or more database records that will be created in a database and populated with the text of respective markups. In these and similar embodiments as a user reviews and markups a textual document the user is defining a new organization for select content of the textual document that can be automatically realized through triggering of the actions associated with the defined markup styles.

In yet another embodiment a user may define markup styles with regard to various portions of a particular document type such as an email or a meeting invitation. For example markup styles may be defined for each of one or more of TO blocks i.e. TO CC BCC fields of an email or meeting invite of a calendaring program or functionality of a groupware application system a subject line a date and time and a body. Following a user marking up a textual document and triggering the actions associated with the defined markup styles an email or invite can be automatically generated. The email or invite may then be automatically sent saved as a draft or presented to the user prior to sending.

In the following detailed description reference is made to the accompanying drawings that form a part hereof and in which is shown by way of illustration specific embodiments in which the inventive subject matter may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice them and it is to be understood that other embodiments may be utilized and that structural logical and electrical changes may be made without departing from the scope of the inventive subject matter. Such embodiments of the inventive subject matter may be referred to individually and or collectively herein by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed.

The following description is therefore not to be taken in a limited sense and the scope of the inventive subject matter is defined by the appended claims.

The functions or algorithms described herein are implemented in hardware software or a combination of software and hardware in one embodiment. The software comprises computer executable instructions stored on computer readable media such as memory or other type of storage devices. Further described functions may correspond to modules which may be software hardware firmware or any combination thereof. Multiple functions are performed in one or more modules as desired and the embodiments described are merely examples. The software is executed on a digital signal processor ASIC microprocessor or other type of processor operating on a system such as a personal computer server a router or other device capable of processing data including network interconnection devices.

Some embodiments implement the functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules or as portions of an application specific integrated circuit. Thus the exemplary process flow is applicable to software firmware and hardware implementations.

The user interface among other portions includes a textual presentation area . The textual presentation area is an area within which text of document is presented and within which markups are made to the text. The markups to the text are added by a user through use of a markup tool as manipulated by way of one or more input devices i.e. touchscreen mouse touchpad keyboard etcetera . In some embodiments the markup tool may be triggered via an input device upon receipt of gesture input such as a motion tapping clicking or combination thereof as detected by a touchscreen or touchpad. Selection of the markup tool activates markup tool functionality to markup text of the textual document. As illustrated the markup tool is a dropdown. Selecting the markup tool to view the dropdown options causes different defined markup styles to be presented. Selection of one such option activates the markup tool according to the selected defined markup style. To define delete modify or just to review the defined markup styles the CONFIGURE button can be selected. Selection of the CONFIGURE button causes a markup style configuration user interface to be presented an example of which is illustrated and described with regard to .

As illustrated the markup style applied to the textual document presented within the textual presentation area is highlighting of text. Note however that in other embodiments a markup style need not be limited only to highlighting of text. Instead a markup style may be defined with regard to other properties of text such as being one or more of bold italic a particular color a different font a different font size underlined double underlined single or double strikethrough all capital letters small capital letters or relevant combinations thereof. A markup style may be added by a user by selection of an appropriate markup definition through manipulation of the markup tool and selecting document text. Similarly the text may instead be selected first followed by selection of the appropriate markup definition through manipulation of the markup tool .

As a user markups up a textual document presented within the textual presentation area the user may select various action buttons or menu items not illustrated to cause various data processing activities to be performed. Most simply a user may wish to discard any markups added to the presented document. In such an instance the CANCEL button may be selected and all previously unsaved markups added or removed by the user in the current session will be discarded.

However if the user desires to save markup additions and removals as presented within the textual presentation area the user may select the SAVE button . Selection of the SAVE button causes data representative of all markups as presented within the document presentation area to be stored.

The markups may be stored in various ways depending on the particular embodiment and depending on the type of document to which the markups are added. For example the markups maybe added within data of the document in instances where the document is stored in a markup language format i.e. Hypertext Markup Language HTML eXtensible Markup Language XML . Such embodiments may generate a header object within the markup language document defining one or more markup styles and actions associated therewith. The markup language document in such embodiments will further include custom tags i.e. . . . associated with each defined markup style denoting the markups in association with text of the document. In other embodiments data defining markup styles and marking of document text is performed in a document file type specific manner and is stored within the document file or in another file or data storage location from which the markup data is retrievable. In some embodiments however the markup styles may be defined separately and associated with the document data within data of the document itself or in data stored separately from the document in storage location from which markup style data is retrievable such as from a file database or web service providing such data. In yet another embodiment a document viewing or authoring application or an application plugin augmenting functionality of such an application may include markup styles defined therein that are utilized in marking up documents. Thus in some embodiments the document defined markup styles and document markups may be stored in one or multiple locations. Relations between the document markup styles and the markups may be defined in the document itself within a data structure defining such associations within a data structure or stored data representative of the markups and various combinations thereof.

Regardless of where the document data defining markup styles and markup data is stored selection of the SAVE button causes data representative of markups added to or removed from a document presented within the textual presentation area to be stored.

Selection of the PERFORM ACTION S button causes one or more actions associated with the markup styles of markups added to the presented document text to be performed. As mentioned above such actions may include generation of an email or a meeting invitation with marked up text being populated into various email or invitation fields. Generation of an email or an invitation typically includes generation of one or more application programming interface API calls to an operating system OS of a computing device i.e. a personal computer a tablet a smartphone on which the user interface is presented or an email or groupware application i.e. Microsoft Outlook that executes thereon. In another embodiment such actions may include generation of a new word processing document such as by generating and submitting one or more API calls to a word processing application executing on the computing device. Such a word processing document will typically be generated with multiple sections where each section is populated with text from markups associated with various markup styles each markup style having its own section or subsection. Among other benefits such embodiments allow a document reviewing user to define a new organization of text provided in a document as the user reviews the document. The effort of reorganizing text in the document is significantly reduced as manual copy and paste operations are not needed or at least as significantly reduced.

In one embodiment an algorithm to generate a new document including text marked up for different document sections includes receiving a command to generate a new document based on the markups such as selection of the PERFORM ACTION S button . An API call is then issued to a word processing application and the new document is created. The markups may then be evaluated to determine a number of sections to be included in the new document. When only a single section is needed the marked up text is copied sequentially unless marked up in a differing order and pasted into the new document. When the markups dictate multiple sections an order of the sections is determined. The order may be defined in the markup style definitions. However where an order is not defined a user interface may be presented to the user requesting input regarding the ordering of the sections. Once the order of sections is identified the first section is generated in the new document such as through an API call to the word processing document and the text marked up for inclusion in that section is placed therein. The next section is then created and the text placed therein. This process repeats until all needed sections are created. The new document may then be stored presented to the user or both. In another embodiment and depending on one or more actions associated with each defined markup style the new document may be forwarded over a network such as a local area network or the Internet to another user or system.

In a further embodiment the actions associated with the markup styles may be specific to a particular application. For example where the document to which the markups are applied is a requirements document submitted to a product vendor that offers several products each markup style may be associated in a respective markup definition with a particular product or product class of the product vendor. The actions associated with each markup style may include an action to trigger a process or invoke another application to receive and process the marked up text. That application may then process the marked up text and provide an output to the user store data such as the text to a database or forward data such as the text or an output of a process to another system. Through such embodiments textual data from a marked up document can automatically be processed extracted and provided to other systems among other possibilities. Further efforts of a reviewing user can be leveraged more quickly and accurately by removing an additional error prone manual task of inputting such data into another program or system as needed in particular processes.

Regardless of the particular actions to be performed selection of the PERFORM ACTION S button causes the particular actions of the relevant markups to be performed. The actions may be initiated within an application of which the user interface is a part. In other embodiments when the application of which the user interface is a part does not organically include the text markup functionality an application plugin augmenting the application will initiate the actions and perform the relevant portions thereof. Initiation and performance of the actions may include calling other processes services and the like depending on the particular actions to be performed and configuration of the actions within the markup style definitions.

The user interface presents markup options and action configuration abilities. While the user interface includes only highlighting color options for defining markup styles other embodiments may include additional text formatting options for use in defining a markup style. For example a markup style may be defined with regard to other properties of text such as being one or more of bold italic a particular color a different font a different font size single or double underlined single or double strikethrough all capital letters small capital letters to include particular sub or superscript and relevant combinations thereof. Yet another embodiment provides options for defining markups that are not visible in some or all views of a document such as when presented within the document presentation area illustrated and described above with regard to .

As illustrated the user interface includes three columns of options for each markup style. These options include a color used to highlight marked up text an action to be performed with regard to the marked up text and a detail option. Data included within the detail option may vary depending on the particular selected action option with regard to a markup style. For example the detail option when the action option is search may identify a location service website or other entity relevant to the search such as an Internet search engine or a database to be searched based on marked up text. The detail options in some embodiments may be even further involved. For example the detail options may include a data element indicating each document portion marked up according to the particular markup style is to be search individually or once utilizing text from each of the document portions marked up according to the defined style.

In a first example markup style is illustrated within the user interface a color of black is specified for the markup style. This markup style includes an action of search and detail of WWW.GOOGLE.COM. This configures the markup styles so that all text marked up according to this markup style is searched via the Google search engine.

A second example markup style is illustrated within the user interface having a color of yellow. This example is for an action of scheduling a meeting. The detail in this second example specifies a conference room where the meeting is to take place. The detail in some embodiments for scheduling a meeting may include more dimensions such as causing a meeting scheduling user interface to be displayed where a meeting room date and time can be selected. A further embodiment may instead include additional markup style configurations where other colors are utilized to markup text in documents that will be used to populate further elements of the meeting such as the location invitees date and time text to be included in a body of an invite and so on.

A third example markup style is illustrated within the user interface having a color of green . The color in each of the examples is selectable from a dropdown user interface control. Other control types and other text markup style options may be provided in other embodiments as previously described. The action options are presented within a dropdown listing. Again other user interface controls can be utilized in different embodiments and additional and different options may be provided.

The action options presented in the action control of the third example include a search and an invite option both as previously described. The options also include a chapter option. A chapter option is as discussed above with regard to the section options. In various embodiments the detail option can be configured so each marked up portion of text will be its own chapter or section in a document to be created based on the marked up text. In some other embodiments multiple chapter markup styles can be configured where each chapter markup style will be its own chapter in the document to be created. For example all text of a document marked up as green will be included in one chapter. Another markup style such as having a red color can be designated as another chapter. Thus all green marked up text will be placed in one chapter of the document to be created and all red marked up text will be placed in another chapter.

The actions options as presented in the action control of the third example further include a requirement action. A requirement action can be configured in different ways. In one example a single requirement action markup style may be defined. A user reviewing a document including customer product or service requirements may then markup document text to identify requirements and details thereof. An action may then be performed against such marked up documents to copy the marked up text therein and repurposed such as into another document into a customer relationship management application or other destination as configured in the detail of the third example. In another embodiment a requirement markup style may be defined for each of a plurality product or service offerings of a vendor. Text within a document may then be marked up accordingly and multiple documents or a multi section document a document or section of a document for each marked up requirement based on the configuration details provided. In another embodiment one or more other applications may receive the text of the document marked with a requirement markup style. The one or more other applications in some embodiments may process the text according to an algorithm such as a scoping algorithm to determine a likely relevance of one or more product or service offerings to the marked up requirement text. Such a product may be a software product a special purpose machine a financial services product a service offering or other product or service. Data representative of one or more relevance determinations may then be presented to a user such as in a graphical representation stored to a customer relationship management application emailed to one or more users which may include a requesting customer provided to a product and service proposal generation process or system among other possibilities. Regardless of the action to be performed the detail control in some embodiments is utilized to configure the specifics of the particular action to be performed with regard to marked up text. However in some embodiments selection of the action may be sufficient and does not require any additional detail input. Further although only a text box is illustrated for the detail control when additional configuration information is to be provided with regard to not only requirement markup styles but also other markup styles the detail configuration data may be gathered through other user interface control types via one or more additional user interfaces and include one or a plurality of configuration options.

The data entry action option is a markup style that can be used in some embodiments to associate marked up text with particular data fields of forms database columns application interfaces function and service calls and the like. Multiple data entry action configurations may be included in different embodiments.

The query action option is similar to the search action option but is typically instead with regard to querying a database an application a web service or other data source capable of querying. A query action option is typically defined to perform a query based on text included in a marked up document. The detail may be populated with connectivity data database access credentials and other data that might be needed to facilitate a query.

The product action is a markup style that can be defined in some embodiments to link a portion of a document such as a requirement or request for proposal document. The detail may identify one or more products. When the markup style is associated with a portion of document text the association indicates the product meets or likely meets the particular requirement at least in part. The action performed against such a document including product markups in some embodiments may cause at least a portion of a proposal document to be generated that includes each product associated with text marked up in a document according to a product markup style.

The user interface further includes actions that can be performed with regard to received input. These actions are presented by a set of action buttons that can be selected to carry out the particular action desired. For example when a user does not desire to save any changes made to the markup styles a CANCEL button can be selected. To save additions deletions and other modifications to markup styles the SAVE button can be selected. This will cause data representative of the markup style configuration to be stored such as in a document itself in a database within application data or other storage location.

The user interface in some embodiments may include markup style configuration profiles. Such profiles are stored representations of markup style configurations that can be stored and retrieved for later use in marking up documents according to the same markup style configuration. For example if a user or a group of users desires to use the same markup style configuration for multiple documents or consistently within a group of users a profile may be stored using the STORE AS PROFILE button which can be later retrieved using the RETRIEVE PROFILE button.

In another embodiment markup styles may be generated in association with something to be marked up in a document automatically. For example one or more markup styles may generated and associated with data representative of a product a document a profile of a person data representative of a property building or room or other data. The action of such markup styles is to markup text of a document under review to link portions of the document to the data represented by the markup style based on a matching performed between document text and data associated with the defined markup styles. Such document markup may be performed in an automated manner in such embodiments.

Once the markup style configuration is complete the user interface may be closed which will typically return the user to the user interface of . However in some embodiments the user interface may be accessed without first viewing the user interface .

In some embodiments the method includes storing a representation of the marker input as a marker profile. In one such embodiment the method further includes storing data identifying the document of the document portion an association to the marker profile and data identifying the portion of document text of the received text marker input. In another embodiment the action of the action trigger is a query of stored data based at least in part on the portion of document text the stored data to be queried identified in the marker input.

Some embodiments of the method further include receiving second marker input mapping a second markup style to a second action and receiving second text marker input associating the second marker to a second portion of document text. For example the first marker input may map a portion of document text to an email address field and the second marker input may map another portion of document text or content to an email body. In such an embodiment the action trigger will cause an email to be generated and populated with text in accordance therewith.

In another embodiment receiving the action trigger is a command according to received text marker input to split a document into which the text marker input and second text marker input has been received into two documents. For example a first document of the two documents may be a document consisting of document text associated with a first text marker input a second document consisting of document text associated with a second text marker input.

Returning to the computer memory may include volatile memory and non volatile memory . Computer may include or have access to a computing environment that includes a variety of computer readable media such as volatile memory and non volatile memory removable storage and non removable storage . Computer storage includes random access memory RAM read only memory ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other memory technologies compact disc read only memory CD ROM Digital Versatile Disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium capable of storing computer readable instructions. Computer may include or have access to a computing environment that includes input output and a communication connection . The input may include one or more of a touchscreen touchpad mouse keyboard camera and other input devices. The computer may operate in a networked environment using a communication connection to connect to one or more remote computers such as database servers web servers and other computing device. An example remote computer may include a personal computer PC server router network PC a peer device or other common network node or the like. The communication connection may be a network interface device such as one or both of an Ethernet card and a wireless card or circuit that may be connected to a network . The network may include one or more of a Local Area Network LAN a Wide Area Network WAN the Internet and other networks.

Computer readable instructions stored on a computer readable medium are executable by the processing unit of the computer . A hard drive magnetic disk or solid state CD ROM and RAM are some examples of articles including a non transitory computer readable medium. For example various computer programs such as a text marker program or application plugin a document authoring or view application a web browser and a groupware application may be stored on a non transitory computer readable medium.

It will be readily understood to those skilled in the art that various other changes in the details material and arrangements of the parts and method stages which have been described and illustrated in order to explain the nature of the inventive subject matter may be made without departing from the principles and scope of the inventive subject matter as expressed in the subjoined claims.

