---

title: Program calling method, and mobile device
abstract: A program calling method is to be implemented by a control module, which uses a first channel during execution of a first Java applet, and includes creating a virtual channel that corresponds to a second channel when the first Java applet intends to call a second Java applet which is to be executed using the second channel, in response to a channel management instruction associated with the virtual channel, opening the second channel for allowing execution of the second Java applet, determining whether the virtual channel is still open, and receiving an output from the second Java applet for use by the first Java applet when it is determined that the virtual channel is still open.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08978050&OS=08978050&RS=08978050
owner: 
number: 08978050
owner_city: 
owner_country: 
publication_date: 20130517
---
The invention relates to a program calling method more particularly to a Java applet calling method which is applicable to a Java card virtual machine structure.

As applications on a mobile terminal device have developed to have more variety and as complexity in the aspect of business continues to increase services provided on the mobile terminal device have become more diverse.

Conventional personal service certification identity terminals such as subscriber identity module SIM cards identification ID cards bank cards etc. all belong to a Java card operating system COS smart card which conforms with the Java card and Java SIM structure and which has a single input output I O port interface. These smart cards are categorized as a passive element and are to be called by the mobile terminal device through protocols. Therefore if one Java applet of a smart card is desired to be executed in another Java applet which is running on a Java card virtual machine in the same smart card a shareable interface object SIO is required to be practiced. In other words calling of a Java applet is currently executed through an instruction invocation by the mobile terminal device or an external card reader device. If it is desired to execute calling between Java applets the current regulations associated with a Java applet should be modified. However since the current Java card and Java SIM structure have been practiced for decades and more than hundreds of millions of the smart cards have been issued to the market it is impossible to modify the regulations. Moreover the practice of the SIO interface also incurs security concerns. In addition current application regulations which are associated with security of bank cards published by many international organizations do not include the invocation regulations designed in the SIO let alone calling between Java applets.

Accordingly how to perform calling between Java applets under the premise of not modifying the current Java applet regulations is the focus of the present invention.

Therefore an object of the present invention is to provide a program calling method capable of performing communication and calling between Java applets.

Accordingly a program calling method of the present invention is to be implemented by a control module which stores a plurality of Java applets and which uses a first one of a plurality of channels during execution of a first one of the Java applets. The program calling method comprises 

 A configuring the control module to create a virtual channel that corresponds to a second one of the channels when the first one of the Java applets intends to call a second one of the Java applets which is to be executed using the second one of the channels 

 B in response to a channel management instruction associated with the virtual channel configuring the control module to open the second one of the channels for allowing execution of the second one of the Java applets 

 D configuring the control module to receive an output from the second one of the Java applets for use by the first one of the Java applets when it is determined that the virtual channel is still open.

Another object of the present invention is to provide a mobile device capable of performing the aforementioned program calling method.

Accordingly the mobile device of the present invention comprises an input module and a control module. The control module includes an input output port coupled electrically to the input module a program storage storing a plurality of Java applets and a control unit coupled electrically to the input output port and the program storage.

While the control module uses a first one of a plurality of channels during execution of a first one of the Java applets the control unit is configured to create a virtual channel that corresponds to a second one of the channels when the first one of the Java applets intends to call a second one of the Java applets which is to be executed using the second one of the channels. In response to a channel management instruction associated with the virtual channel the control module is configured to open the second one of the channels for allowing execution of the second one of the Java applets. Subsequently the control module is configured to determine whether the virtual channel is still open. Finally the control module is configured to receive an output from the second one of the Java applets for use by the first one of the Java applets when it is determined that the virtual channel is still open.

By virtue of the program calling method of this invention communication between Java applets may be practiced without modifying the current Java applet regulations. It is noted that the Java applets may be earlier released bank Java applets such as bank Java applets complying with Europay MasterCard and Visa EMV standards or People s Bank of China PBOC standards.

Referring to a preferred embodiment of a mobile device according to the present invention is illustrated. The mobile device such as a mobile phone a personal digital assistant PDA etc. is a device that is able to communicate with a mobile network through a subscriber identity module SIM .

The input module is a baseband module. Alternatively the input module may be an input device associated with ISO 7816 International Organization for Standardization UART universal asynchronous receiver transmitter and is not limited to the preferred embodiment.

The control module is an integrated circuit IC application chip which is designed based on a Java card. The control module includes an input output I O port which is coupled electrically to the input module a program storage and a control unit which is coupled electrically to the I O port and the program storage . The I O port is configured to communicate with the input module according to the ISO 7816 protocol for transmitting information therebetween. The program storage is provided to store a plurality of Java applets. These Java applets may be obtained by a user who may correspondingly download the Java applets based on the user s needs via over the air OTA programming. The Java applets may be SIM application toolkit STK applets or bank Java applets. The control unit is provided to according to content of information transmitted from the input module control the I O port to be electrically connected to the program storage for allowing information to be transmitted therebetween and control the plurality of Java applets stored in the program storage to communicate with each other.

In the present invention the control module is established based on a structure of the Java card virtual machine such that other application programs such as programs associated with Europay MasterCard and Visa EMV People s Bank of China PBOC certificate authority CA public key infrastructure PKI etc. which comply with the Java card standard regulations may be transplanted to a Java virtual machine of the control module for execution. Moreover since the structure of the Java card virtual machine is a structure that supports GlobalPlatform the control module is capable of OTA updates is able to update Java applets and safety certification elements and systems and therefore is a secure element SE . It is noted that the control module may be manufactured in the input module and integrated with the input module on the same chip and in the alternative may be manufactured independently as a single chip and should not be limited to the kind of manufacturing method.

Referring to and since the control module is an IC application chip designed based on a Java card the control module of each mobile device needs to undergo initialization setup in the production chain before leaving the factory. In step S a factory operator may utilize a card reader or initialization equipment to determine whether the control module is in an initialization status. When it is determined in step S that the control module is in the initialization status this means that the control module is a card required to be initialized and thus step S is performed. In step S the initialization setup is performed for the control module . During the initialization setup software such as an operation system a card management program etc. and personal data associated with a user are loaded into the control module . When it is determined in step S that the control module is not in the initialization status this means that the control module has already been configured to be a Java card or in a Java card status and thus the control module does not need to undergo the initialization setup.

Referring further to detailed procedures to be performed by the control module during operation are described hereinafter.

In step S when the user turns on or actively resets the mobile device the input module is configured to send a reset instruction to the control module if the control unit is required to be reset.

In step S the control unit is configured to receive a signal transmitted from the input module via the I O port .

In step S under a condition that the control unit uses a first one of a plurality of channels during execution of a first one of the Java applets the control unit is configured to create a virtual channel that corresponds to a second one of the channels when the first one of the Java applets intends to call a second one of the Java applets which is to be executed using the second one of the channels. In this embodiment the control module is configured to provide a flag for each one of the channels and the virtual channel which corresponds to one of the channels in the control module . The control unit is configured to check and update a status of the virtual channel. Specifically the control unit is configured to register the flag of the virtual channel i.e. to register the flag of said one of the channels that corresponds to the virtual channel when creating the virtual channel. Furthermore the control unit may be configured to modify update the flag of said one of the channels that corresponds to the virtual channel according to the signal received in step S or step S which will be described in detail hereinafter . More specifically the control unit is configured to determine whether the signal received in step S or step S includes a channel setting instruction such as Create Channel Close Channel an instruction for indicating whether the second one of the Java applets is still being called by the first one of the Java applets etc. and to create or close a corresponding virtual channel when it is determined that the signal includes the channel setting instruction. For example the control unit creates the virtual channel which corresponds to the second one of the channels by registering the flag of the virtual channel i.e. the flag of the second one of the channels . When it is determined in step S that the signal does not include the channel setting instruction which is adapted for creating closing the virtual channel or for modifying a status of the virtual channel the flow proceeds to step S.

It is noted that step S is not a standard virtual machine Java Card Runtime Environment JCRE modular block in the control unit and JCRE native kernel architecture therein is modified for implementing step S.

In step S the control unit is configured to determine whether the signal received in step S or step S includes a channel management instruction. The channel management instruction includes a plurality of channel settings. Each of the channel settings corresponds to a designated one of the Java applets stored in the program storage . When it is determined that the signal includes the channel management instruction the flow proceeds to step S. Otherwise the flow proceeds to step S. Step S is a standard virtual machine JCRE modular block in the control unit .

In step S in response to a channel management instruction associated with the virtual channel the control unit is configured to open the second one of the channels for allowing execution of the second one of the Java applets. In other words the control unit is configured to execute the channel management instruction that is to update states e.g. ON and OFF of the channels according to the channel management instruction. Specifically the control unit may set a specific one of the channels ON and set the rest of the channels OFF or Stop Freeze and stores information of the channel which is set OFF under usage in a memory buffer. Alternatively the control unit may set many ones of the channels ON. In the preferred embodiment the control unit is configured to set the second one of the channels that corresponds to the virtual channel created in step S ON for allowing the first one of the Java applets i.e. a current channel to communicate with the second one of the Java applets which corresponds to the virtual channel i.e. the second one of the channels . Step S is a standard virtual machine JCRE modular block in the control unit . However in other embodiment step S may be also modified to check or update the status of the virtual channel.

In step S the control unit is configured to determine whether the virtual channel i.e. the second one of the channels opened in step S is still open. In this embodiment the virtual channel is determined to be still open when the control unit determines that said one of the channels that corresponds to the virtual channel opened in step S i.e. the second one of the channels is being called by another Java applet i.e. the first one of the Java applets . More specifically the control unit is configured to determine whether the second one of the Java applets is being called by the first one of the Java applets from a registration state of the flag of the virtual channel. Alternatively the virtual channel is determined to be still open when the control unit determines that a return instruction returning to the input module belongs to one of a return instruction resulting from opening the second one of the channels and a return instruction associated with the output from the second one of the Java applets. In addition the control unit is further configured to check or update the status of the virtual channel. When it is determined in step S that the virtual channel is still open the flow proceeds to step S. Otherwise when it is determined in step S that the virtual channel is not open the flow proceeds to step S. It is noted that the first one of the Java applets which calls the second one of the Java applets and results in opening the virtual channel may also close the virtual channel by once again calling a channel instruction for closing the virtual channel.

It is noted that step S is not a standard virtual machine JCRE modular block in the control unit and the JCRE native kernel architecture therein is modified for implementing step S.

In step S the control unit is configured to receive an output signal from the second one of the Java applets which corresponds to the virtual channel for use by the first one of the Java applets. The control unit is further configured to provide a signal which is associated with at least one of the channel setting instruction and the channel management instruction for modifying the flag of the virtual channel and for modifying a relationship between the virtual channel and a corresponding one of the channels. Subsequently the flow proceeds to step S. It is noted that step S is not a standard virtual machine JCRE modular block in the control unit and the JCRE native kernel architecture therein is modified for implementing step S.

In step S the control unit is configured to perform a corresponding process according to a type of the signal received in step S. In this embodiment step S may include the following sub steps.

In step S the control unit is configured to determine whether the signal received in step S is a user authentication identify instruction e.g. SIM USIM universal SIM applet . When it is determined that the signal is the user authentication identify instruction this means that the signal is a Global System for Mobile Communications GSM instruction and the flow proceeds to step S. Otherwise the flow proceeds to step S. Step S is a standard Java SIM virtual machine JCRE modular block in the control unit .

In step S in response to the user authentication identify instruction the control unit is configured to execute one of the Java applets which corresponds to the user authentication identify instruction. Step S is a standard Java SIM virtual machine JCRE modular block in the control unit .

In step S the control unit is configured to determine whether the signal received in step S is one of a standard Java applet instruction and a Java SIM applet instruction. When it is determined that the signal is one of the standard Java applet instruction and the Java SIM applet instruction the flow proceeds to step S. When it is determined that the signal is neither one of the standard Java applet instruction nor the Java SIM applet instruction the signal is presumed to be one of a Java Card Runtime Environment JCRE instruction and a test instruction and then the flow proceeds to step S. Step S is a standard Java SIM virtual machine JCRE modular block in the control unit .

In step in response to the standard Java applet instruction or the Java SIM applet instruction the control unit is configured to call according to the standard Java applet instruction or the Java SIM applet instruction one of the Java applets which corresponds to the standard Java applet instruction or the Java SIM applet instruction through a special virtual channel command format such that the first one of the Java applets the current applet may communicate with for example the second one of the Java applets thus called for allowing transmission of information therebetween. Subsequently the flow proceeds to step S. It is noted that the special virtual channel command format is previously written in the control module and corresponds to a standard channel command format utilized to call one of the Java applets from the input module . Step S is a standard Java SIM virtual machine JCRE modular block in the control unit and a new library is added to control management of the virtual channel and to allow the first one of the Java applets to call the second one of the Java applets using the virtual channel.

In step S the control unit is configured to transmit the signal received in step S back to the input module . It is noted that each signal to be transmitted back to the input module will go through the determination of step S so as to determine whether the signal belongs to information communicated between the Java applets or belongs to information communicated between the Java applet and the input module . Certainly in combination with different setups the control unit may also pass the signal received in step S to a specific JCRE circuitry for execution. Alternatively the control unit may call via a specific Java applet instruction a specific program to invoke a specific service instruction and signal flows of the specific program and therefore the practice of the control unit is not limited to the preferred embodiment.

It is evident from the aforementioned steps S to step S that the mobile device of the present invention may realize a safety certification element that supports channel calling and that conforms to a structure suitable for operation of the Java virtual machine. During the process of the operation a mechanism of channel management is entirely managed by the control unit according to the channel management instruction of the signal. Moreover the corresponding process performed in step S also complies with the structure of the Java card virtual machine and is to invoke a library and a memory in a corresponding native layer according to an application programming interface API an object etc. in the virtual channel. In addition when the Java applet invokes the API the Java applet may first call the Create Channel instruction set the virtual channel ON and call the Close Channel instruction after invocation so as to release the occupied virtual channel. In this way the service instruction of the input module may be assured to operate normally.

The steps of S S and S are all standard virtual machine JCRE blocks. In the present invention the standard Java virtual machine architecture is changed and the interface architecture between the I O port and the control unit is modified so as to implement the aforementioned steps of S S and S i.e. kernel blocks associated with the instruction routing flow and rule.

Furthermore the program Java applet calling method is not only applicable to the mobile device with the single I O port . For a structure of the Java card virtual machine having multiple I O ports an effect of communication between Java applets may also be achieved by means of the program calling method of the present invention.

To sum up the mobile device of the present invention by virtue of the control module conforms to the structure of the Java card virtual machine. Moreover by adding the Create Channel instruction and the Close channel instruction which are utilized to set the virtual channel to the API of the control unit and by allowing a current one of the Java applets to invoke the service instruction associated with outgoing data and to send the outgoing data to the Java applet that corresponds to the virtual channel the Java Applets may communicate with each other and information may be transmitted therebetween.

While the present invention has been described in connection with what is considered the most practical and preferred embodiment it is understood that this invention is not limited to the disclosed embodiment but is intended to cover various arrangements included within the spirit and scope of the broadest interpretation so as to encompass all such modifications and equivalent arrangements.

