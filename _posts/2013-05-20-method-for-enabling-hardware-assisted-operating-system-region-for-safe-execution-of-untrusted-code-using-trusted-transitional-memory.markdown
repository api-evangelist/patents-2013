---

title: Method for enabling hardware assisted operating system region for safe execution of untrusted code using trusted transitional memory
abstract: An electronic device. The device comprises an anti-trusted-security-zone in the trusted security zone that, when installed and managed by the trusted security zone manager, places non-trusted applications into the anti-trusted-security-zone for execution, restricts access of the non-trusted applications to at least some resources of the electronic device outside the anti-trusted-security-zone, alerts the user when the non-trusted application inside the anti-trusted-security-zone desires access to any restricted resource of the electronic device outside the anti-trusted-security-zone, asks the user for permission to access the desired resource outside the anti-trusted-security-zone, grants access for the non-trusted application to requested resources outside the anti-trusted-security-zone upon the permission by the user, moves the applications from the anti-trusted-security-zone to the normal zone that are determined not to be malicious, keeps the applications within the anti-trusted-security-zone that do not need to execute outside the anti-trusted-security-zone, and deletes the applications that are determined to be malicious.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069952&OS=09069952&RS=09069952
owner: Sprint Communications Company L.P.
number: 09069952
owner_city: Overland Park
owner_country: US
publication_date: 20130520
---
Data network capable electronic devices are becoming increasingly prevalent in our daily lives. Additionally more and more electronic devices that did not have data network capabilities are getting data network capable. With the rapid development and popularization of data network capable electronic devices a wide variety of increasingly sophisticated techniques are being deployed by attackers to take control of electronic devices and cause unintended consequences for users. The development of online application stores also helps cause rapid development distribution and proliferation of malware applications across the network. The behavior of uncontrollable electronic device or application and their impact on the user experience may have implications for user satisfaction with the electronic device and or the network service provider.

In an embodiment an electronic device is disclosed. The electronic device comprises a processor an operating system a memory and a trusted security zone manager to manage the trusted security zone. The electronic device further comprises an anti trusted security zone in the trusted security zone that when installed and managed by the trusted security zone manager places non trusted applications into the anti trusted security zone for execution restricts access of the non trusted applications to at least some resources of the electronic device outside the anti trusted security zone alerts the user when the non trusted application inside the anti trusted security zone desires access to any restricted resource of the electronic device outside the anti trusted security zone asks the user for permission to access the desired resource outside the anti trusted security zone grants access for the non trusted application to the desired resource outside the anti trusted security zone upon the permission by the user moves the applications from the anti trusted security zone to the normal zone that are determined not to be malicious keeps the applications within the anti trusted security zone that do not need to execute outside the anti trusted security zone and deletes the applications that are determined to be malicious whereby the risk that non trusted applications can cause harm to the electronic device is reduced.

In an embodiment a method of reducing the risk of a JavaScript injection harming a server computer is disclosed. The method comprises installing an anti trusted security zone into a memory of the server computer placing dynamically downloaded JavaScript that is part of a web browser into the anti trusted security zone for execution restricting access of the JavaScript to at least part of the rest of the computer and alerting the user when the JavaScript inside the anti trusted security zone desires access to any restricted resource of the device outside the anti trusted security zone. The method further comprises asking the user for permission to access the desired resource outside the anti trusted security zone granting access for the JavaScript to the desired resource outside the anti trusted security zone upon the user s permission and moving the JavaScript code from the anti trusted security zone to the normal zone that is determined not to be malicious.

In an embodiment a method of managing untrusted applications on an electronic device is disclosed. The method comprises placing non trusted applications into an anti trusted security zone for execution restricting access of the non trusted applications to at least some resources outside the anti trusted security zone and alerting the user when the non trusted application inside the anti trusted security zone desires access to any restricted resource of the device outside the anti trusted security zone. The method further comprises granting access for the non trusted application to the desired resource outside the anti trusted security zone upon the permission by the user and moving the applications from the anti trusted security zone to the normal zone that are determined not to be malicious upon the permission by the user.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although illustrative implementations of one or more embodiments are illustrated below the disclosed systems and methods may be implemented using any number of techniques whether currently known or not yet in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below but may be modified within the scope of the appended claims along with their full scope of equivalents.

Problems may be caused by non authorized applications executing on an electronic device that interfere with the proper operation of the electronic device for example the ability of browsers on the electronic device to keep the richness of browsing experience while eliminating the risk of being harmed by non trusted applications. The problems may result from security loopholes that malware can utilize to affect the normal operation of electronic devices. For example a compiler named just in time JIT to accelerate the compiling process of JavaScript in web browsers may be utilized by malware to exploit a security loophole called JavaScript injection to insert malicious code to web browsers that has unintended consequences for the end users. Because by turning on JavaScript on web browsers a much richer browser experience is enabled while at the same time the loophole of JavaScript injection may be opened up it is desirable to solve this dilemma. The present disclosure teaches a system and method for proactively monitoring behavior of non trusted applications controlling the accessibility of non trusted applications and taking further action under predefined circumstances.

The normal operating system on an electronic device may be open freely accessible and highly vulnerable. A trusted security zone on an electronic device may be secure static and impermeable. An anti trusted security zone may be a transitional memory between the trusted security zone and the normal zone and may be suitable for storing installing and executing some non trusted applications. For example a trusted security zone manager on an electronic device may install an anti trusted security zone into a memory of the electronic device. The anti trusted security zone may be an area installed by the trusted security zone manager into the trusted security zone in the memory of the electronic device. Alternatively the entire trusted security zone may be transformed into the anti trusted security zone for a period of time. Applications inside the trusted security zone may be protected from applications outside the trusted security zone by restricting the applications outside the trusted security zone to certain resources when the applications inside the trusted security zone are executing. For example the application outside the trusted security zone may not have access to some resource at the same time that the application inside the trusted security zone has access to that resource. In other words the same resource may not be accessible to both applications inside and outside the trusted security zone at the same time. Hence the applications outside the trusted security zone may also be protected from the applications inside the trusted security zone.

Non trusted applications for example JavaScript code may be downloaded and placed into the anti trusted security zone and applications outside the anti trusted security zone may be protected from non trusted applications inside the anti trusted security zone. The anti trusted security zone may monitor and control the behavior of the JavaScript code to some extent. For example the anti trusted security zone may restrict the access of the JavaScript code to certain resources outside the anti trusted security zone. For example the JavaScript code may not be allowed to access network memory outside the anti trusted security zone irrelevant hardware outside the anti trusted security zone or other resources outside the anti trusted security zone. For example the JavaScript code may not be allowed to access the contact list on the electronic device if any. When the JavaScript code desires to access some resource outside the anti trusted security zone the user will be alerted by the anti trusted security zone. The user will further be asked for permission for the JavaScript code to access the desired resource outside the anti trusted security zone. When the user grants access for the JavaScript code to access the desired resource outside the anti trusted security zone the JavaScript code may access the permitted resource outside the anti trusted security zone. If the JavaScript code is determined to be not malicious the JavaScript code may be moved from the anti trusted security zone to the normal zone. For example if the JavaScript code is determined to be from a trusted source the JavaScript code may be determined to be not malicious. As another example if the JavaScript code did not try to access restricted resources outside the anti trusted security zone without the user s permission over time for example within a predefined period after a predefined number of invocations of the JavaScript code or after a time period defined by another standard the JavaScript code may be determined to be not malicious.

A trusted security zone provides chipsets with a hardware root of trust a secure execution environment for applications and secure access to peripherals. A hardware root of trust means the chipset should only execute programs intended by the device manufacturer or vendor and resists software and physical attacks and therefore remains trusted to provide the intended level of security. The chipset architecture is designed to promote a programmable environment that allows the confidentiality and integrity of assets to be protected from specific attacks. Trusted security zone capabilities are becoming features in both wireless and fixed hardware architecture designs. Providing the trusted security zone in the main mobile device chipset and protecting the hardware root of trust removes the need for separate secure hardware to authenticate the device or user. To ensure the integrity of the applications requiring trusted data such as a mobile financial services application the trusted security zone also provides the secure execution environment where only trusted applications can operate safe from attacks. Security is further promoted by restricting access of non trusted applications to peripherals such as data inputs and data outputs while a trusted application is running in the secure execution environment. In an embodiment the trusted security zone may be conceptualized as hardware assisted security.

A complete trusted execution environment TEE may be implemented through the use of the trusted security zone hardware and software architecture. The Trusted execution environment is an execution environment that is parallel to the execution environment of the main mobile device operating system. The trusted execution environment and or the trusted security zone may provide a base layer of functionality and or utilities for use of applications that may execute in the trusted security zone. For example in an embodiment trust tokens may be generated by the base layer of functionality and or utilities of the trusted execution environment and or trusted security zone for use in trusted end to end communication links to document a continuity of trust of the communications. Through standardization of application programming interfaces APIs the trusted execution environment becomes a place to which scalable deployment of secure services can be targeted. A device which has a chipset that has a trusted execution environment on it may exist in a trusted services environment where devices in the trusted services environment are trusted and protected against attacks. The trusted execution environment can be implemented on mobile phones and tablets as well as extending to other trusted devices such as personal computers servers sensors medical devices point of sale terminals industrial automation handheld terminals automotive etc.

The trusted security zone is implemented by partitioning all of the hardware and software resources of the mobile device into two partitions a secure partition and a normal partition. The secure partition may be implemented by a first physical processor and the normal partition may be implemented by a second physical processor. Alternatively the secure partition may be implemented by a first virtual processor and the normal partition may be implemented by a second virtual processor. Placing sensitive resources in the secure partition can protect against possible attacks on those resources. For example resources such as trusted software applications may run in the secure partition and have access to hardware peripherals such as a touchscreen or a secure location in memory. Less secure peripherals such as wireless radios may be disabled completely while the secure partition is being accessed while other peripherals may only be accessed from the secure partition. While the secure partition is being accessed through the trusted execution environment the main mobile operating system in the normal partition is suspended and applications in the normal partition are prevented from accessing the secure peripherals and data. This prevents corrupted applications or malware applications from breaking the trust of the device.

The trusted security zone is implemented by partitioning the hardware and software resources to exist in a secure subsystem which is not accessible to components outside the secure subsystem. The trusted security zone is built into the processor architecture at the time of manufacture through hardware logic present in the trusted security zone which enables a perimeter boundary between the secure partition and the normal partition. The trusted security zone may only be manipulated by those with the proper credential and in an embodiment may not be added to the chip after it is manufactured. Software architecture to support the secure partition may be provided through a dedicated secure kernel running trusted applications. Trusted applications are independent secure applications which can be accessed by normal applications through an application programming interface in the trusted execution environment on a chipset that utilizes the trusted security zone.

In an embodiment the normal partition applications run on a first virtual processor and the secure partition applications run on a second virtual processor. Both virtual processors may run on a single physical processor executing in a time sliced fashion removing the need for a dedicated physical security processor. Time sliced execution comprises switching contexts between the two virtual processors to share processor resources based on tightly controlled mechanisms such as secure software instructions or hardware exceptions. The context of the currently running virtual processor is saved the context of the virtual processor being switched to is restored and processing is restarted in the restored virtual processor. Time sliced execution protects the trusted security zone by stopping the execution of the normal partition while the secure partition is executing.

The two virtual processors context switch via a processor mode called monitor mode when changing the currently running virtual processor. The mechanisms by which the processor can enter monitor mode from the normal partition are tightly controlled. The entry to monitor mode can be triggered by software executing a dedicated instruction the Secure Monitor Call SMC instruction or by a subset of the hardware exception mechanisms such as hardware interrupts which can be configured to cause the processor to switch into monitor mode. The software that executes within monitor mode then saves the context of the running virtual processor and switches to the secure virtual processor.

The trusted security zone runs a separate operating system that is not accessible to the device users. For security purposes the trusted security zone is not open to users for installing applications which means users do not have access to install applications in the trusted security zone. This prevents corrupted applications or malware applications from executing powerful instructions reserved to the trusted security zone and thus preserves the trust of the device. The security of the system is achieved at least in part by partitioning the hardware and software resources of the mobile phone so they exist in one of two partitions the secure partition for the security subsystem and the normal partition for everything else. Placing the trusted security zone in the secure partition and restricting access from the normal partition protects against software and basic hardware attacks. Hardware logic ensures that no secure partition resources can be accessed by the normal partition components or applications. A dedicated secure partition operating system runs in a virtual processor separate from the normal partition operating system that likewise executes in its own virtual processor. Users may install applications on the mobile device which may execute in the normal partition operating system described above. The trusted security zone runs a separate operating system for the secure partition that is installed by the mobile device manufacturer or vendor and users are not able to install new applications in or alter the contents of the trusted security zone.

Turning now to a communication system is described. In an embodiment the system comprises a plurality of electronic devices remote hosts attackers and trusted sources . The electronic device may comprise a processor an operating system a memory and peripherals . The memory may comprise a permissive sector and a trusted security zone that may comprise an anti trusted security zone . The electronic devices the trusted sources the attackers and the remote hosts are coupled to a network . The network may comprise any combination of private and public networks.

It is understood that the system may comprise any number of remote hosts any number of attackers and any number of trusted sources . The electronic device the trusted source the remote hosts and the attacker may be any of a server computer a desktop computer a laptop computer a notebook computer a tablet computer a mobile phone a personal digital assistant PDA a media player a game console an Internet digital media streaming device or another network communications capable device. The electronic device the trusted source and the attacker may access the network through wired or wireless access networks. The wired access network may be abstracted in different ways and may comprise cable modems and Ethernet routers switches or hubs. The wireless access network may also be abstracted in different ways and may comprise wireless access points cable modems Ethernet or wireless routers switches or hubs servers and data storages such as home location registers HLRs or servers that implement the functionality of home location registers visitor location registers VLRs or servers that implement the functionality of visitor location registers base transceiver stations base station controllers BSCs mobile switching centers MSCs and other network nodes that are specifically associated with providing wireless access and connectivity to the electronic devices.

In an embodiment the trusted security zone is more than just a segment of memory. The trusted security zone may also have a dimension of processing. The trusted security zone may provide the secure execution environment for trusted applications where only trusted applications may operate safe from attacks. The trusted security zone may be implemented by partitioning both hardware and software resources of the electronic device into two partitions a secure partition and a normal partition. The secure partition may be implemented by a distinct separate or dedicated physical processor usually the first processor from the processor by which the normal partition may be implemented usually the second processor. Alternatively the secure partition may be implemented by a distinct separate or dedicated virtual processor from the virtual processor by which the normal partition may be implemented. In an embodiment the hardware partition of the trusted security zone and the software installation of the trusted security zone may enable a trusted execution environment on the electronic device . The trusted execution environment may be included integrated within an application processor on the electronic device at the chip manufacturer.

Trusted applications are authorized secure applications that may store transmit or receive confidential data. The trusted applications may execute using higher level of security than the normal applications or the non trusted applications that are executed in a normal zone the operating system or the anti trusted security zone . For example the trusted applications may be applications used to perform payments online banking and enterprise authentication. The trusted applications may also be applications that entail content protection such as email and corporate VPN. The trusted applications may be applications that handle confidential health records or personal health metrics. Additionally the trusted applications may be entertainment content streaming services that entail content protection of the data in the form of music and video as well as authentication of the device or the user or another application that stores transmits or receives confidential data. The trusted applications may be stored at least in part in the secure partition of the memory the trusted security zone . The trusted applications may be built in by device makers original equipment manufacturer OEM or installed as users demand them. The trusted applications can originate from different application providers.

The trusted applications running in a trusted execution environment may have access to the full power of a device s main processor and memory when the trusted applications are executed with hardware isolation that protects the trusted applications from user installed applications in the main operating system. Software and cryptographic isolation inside the trusted execution environment protect the trusted applications from each other. Hence an unauthorized trusted application may not have the access to the security resources of another trusted application .

Non trusted applications are dubious applications on the electronic device . The non trusted applications may be stored in the anti trusted security zone within the trusted security zone or the entire trusted security zone may be transformed into the anti trusted security zone when the non trusted applications are executed in the trusted security zone . And then the anti trusted security zone may be transformed back to the trusted security zone after the non trusted applications finish execution. When the non trusted application is determined not to be malicious the non trusted application may be moved to the permissive sector . For example if the non trusted application is determined to be from the trusted source the non trusted application may be determined to be not malicious. As another example if the non trusted application did not try to access restricted resources outside the anti trusted security zone without the user s permission over time for example within a predefined period after a predefined number of invocations of the non trusted application or after a time period defined by another standard the non trusted application may be determined to be not malicious. When the non trusted application is moved from the anti trusted security zone to the permissive sector the non trusted application may be considered as a normal application. In an embodiment the permissive sector of the memory is the normal partition in the memory . Normal applications may be stored in the permissive sector in the memory . Additionally other non secure resources may be stored in the permissive sector in the memory .

In contrast when the non trusted application generally does not need to execute outside the anti trusted security zone the non trusted application may be kept in the anti trusted security zone even if the non trusted application is determined to be not malicious. When the non trusted application is determined to be malicious the non trusted application may be deleted.

When the non trusted application is executed in the anti trusted security zone at least some resources outside the anti trusted security zone may not be accessible to the non trusted application . For example at least some of the peripherals the network the permissive sector in the memory physical virtual cores other than the first physical virtual core or another core that the trusted execution environment utilizes and physical virtual processors other than the first physical virtual processor or another processor that the trusted execution environment utilizes may not be accessible to the non trusted application in the anti trusted security zone . In an embodiment it may be controllable which resource outside the anti trusted security zone is accessible to the non trusted application . For example the non trusted application may be restricted from accessing any data any memory other cores other physical processors other virtual processors other applications a hardware component or the network outside the anti trusted security zone . The non trusted application may be restricted from accessing any resource outside the anti trusted security zone that the non trusted application may do harm to. Alternatively the non trusted application may be restricted from accessing any irrelevant resource outside the anti trusted security zone . For example a game application may be desirable on an electronic device but the contact information on the electronic device may be irrelevant and so the user may want to restrict the game application from accessing the contact information on the electronic device. If the game application is downloaded and executed in the anti trusted security zone the controllable access including restricted access to contact information on the electronic device may be achieved.

As another example for a web browser or web application that utilizes Hypertext Markup Language 5 HTML5 technology the use of just in time JIT compiler in JavaScript engines may open up a security loophole called JavaScript injection. Currently web browsers have the option to allow disallow JavaScript to be run on web pages. Turning it on enables a much richer browser experience but at the same time opens the loophole of JavaScript injection. Turning the JavaScript off may render many web pages as almost useless. JavaScript is an interpreted language and as such is generally slower in execution than compiled languages. The just in time compiler is an application that turns Java bytecode which contains instructions that must be interpreted for the computer to understand into instructions that can be sent directly to the processor. The just in time compiler may accelerate the process of compiling and executing JavaScript. With just in time compiler web browsers or web applications with JavaScript may provide a similar experience to what compiled code would in terms of processing time. However with just in time compiler JavaScript injection may be exploited by the attacker to insert malicious code into web browsers or web applications that has unintended consequences for the end users. If the dynamically downloaded JavaScript code is placed and executed in the anti trusted security zone the JavaScript code may be restricted from accessing certain resource outside the anti trusted security zone . For example when the JavaScript code stored in the anti trusted security zone is executed the JavaScript code may be allowed to write to the computer screen but not to read from the computer screen where information from other applications may also be present. The JavaScript code may run freely in the anti trusted security zone environment to accomplish its task as long as the JavaScript code does not need to access any restricted computer resource. The richness of the web browser or web application experience may be kept while the risk that the JavaScript injection harms the computer may be reduced.

When the non trusted application desires access to some restricted resource outside the anti trusted security zone the user will be alerted by the anti trusted security zone and asked for permission for the non trusted application to access the resource the non trusted application desires. The user may then be given the option of granting permission on a one time basis or for any time in the future for the non trusted application to access the requested resource.

The anti trusted security zone may be an area installed by a trusted security zone manager into the trusted security zone of the memory . Alternatively the entire trusted security zone may be transformed into the anti trusted security zone temporarily during the period when the non trusted application is executed in the anti trusted security zone . The temporary anti trusted security zone that was the trusted security zone may then be transformed back to the trusted security zone when the non trusted application finishes execution. The trusted security zone manager may oversee supervise the anti trusted security zone and the non trusted application to control the accessibility of the non trusted application to resources outside the anti trusted security zone . For example the non trusted application in the anti trusted security zone may be restricted from accessing some resources outside the anti trusted security zone . In an embodiment the anti trusted security zone may also implement isolation between the non trusted application and the normal application in terms of accessibility to resources outside the anti trusted security zone . The isolation in the resource accessibility between the non trusted application and the normal application may be helpful in reducing the risk that the non trusted application may do harm to the electronic device .

For example the non trusted application may completely be restricted from accessing memory outside the anti trusted security zone which is accessible to the normal application . For example the non trusted application may be disallowed to rewrite to non trusted memory outside the anti trusted security zone . In addition the non trusted application may be disallowed from accessing data outside the anti trusted security zone . For example the non trusted application may be restricted from reading irrelevant data outside the anti trusted security zone . For example a game application on a mobile phone as a non trusted application may be restricted from accessing the contact list on the mobile phone. In an embodiment the functionality of the non trusted application may or may not be affected when the non trusted application is restricted from accessing some resources outside the anti trusted security zone but it may be worth implementing to restrict the non trusted application from accessing some resources outside the anti trusted security zone so that the risk of the electronic device being harmed by the non trusted application may be reduced.

The hardware component of the electronic device may not be accessible to both the non trusted application and the normal application simultaneously. The isolation between the non trusted application and the normal application may not just comprise hardware isolation but also a dimension of processing. When the non trusted application is executed in the anti trusted security zone the normal applications outside the trusted security zone may be inhibited paused and or shut down. In addition when the non trusted application is executed in the anti trusted security zone the trusted applications in the trusted security zone may be inhibited paused and or shut down. Even when the non trusted application and the normal application are allowed to be executed at the same time the non trusted application may be restricted from accessing some processing with the same hardware that the normal application has access to. Consequently even if the non trusted application intends to harm the normal application or the electronic device the damage caused by the non trusted application may be limited. For example when the normal application is executed and is accessing some peripheral the non trusted application may not be granted the access to the same peripheral that the normal application is accessing at the same time. Thus the non trusted application may not be able to access data or information that the normal application inputs to or outputs from the peripheral when the normal application is executed. Additionally the non trusted application may not be granted the access to the part of the resource outside the trusted security zone that the normal application has access to. For example the non trusted application may be allowed to write to the screen of the electronic device but not to read from the screen while the normal application is writing and or reading from the screen.

Turning now to a method is described. At block an anti trusted security zone is installed into a memory of a computing device. The computing device may be any of a mobile communication device a server computer a desktop computer a laptop computer a notebook computer a tablet computer a personal digital assistant PDA or another computing device. The anti trusted security zone may be installed by a trusted security zone manager into a portion of the trusted security zone in the memory of the server computer or the entire trusted security zone may be transformed into an anti trusted security zone when non trusted applications are executed in the anti trusted security zone. The anti trusted security zone may then be transformed back to the trusted security zone after the non trusted application finishes execution. At block dynamically downloaded JavaScript is placed into the anti trusted security zone for execution that is part of a web browser. JavaScript may be treated as non trusted application because a security loophole called JavaScript injection may be utilized by malware to insert code into web browsers or web applications that has unintended consequences for the end users. The vulnerability may be worse in the presence of a just in time compiler to interpret compile JavaScript code. At block access of the JavaScript is restricted to at least part of the rest of the computer. The JavaScript may not be allowed to access at least part of the rest of the computer outside the anti trusted security zone. The restricted area outside the anti trusted security zone may comprise network memory outside the anti trusted security zone and other cores of the processor other than the core that the anti trusted security zone is using or other processors other than the processor that the anti trusted security zone is using.

At block the user is alerted when the JavaScript inside the anti trusted security zone desires access to any restricted resource of the device outside the anti trusted security zone. For example if the JavaScript code inside the anti trusted security zone is restricted from accessing the screen of the computer but desires access to the screen the user will be alerted. At block the user is asked for permission to access the desired resource outside the anti trusted security zone. The user is asked for permission for the JavaScript code to access the requested resource outside the anti trusted security zone when the user is alerted that the JavaScript code desires access to some restricted resource outside the anti trusted security zone. At block access is granted for the JavaScript to the desired resource outside the anti trusted security zone upon the user s permission. If the user permits the JavaScript is then granted the right to access the desired resource outside the anti trusted security zone either on a one time basis or for every time in the future depending on the user s permission. At block the JavaScript code is moved from the anti trusted security zone to the normal zone that is determined not to be malicious. The JavaScript code is determined not to be malicious either if the JavaScript code is from a trusted source or the JavaScript code was not detected to have tried to force to access any restricted resource outside the anti trusted security zone without permission.

The DSP or some other form of controller or central processing unit operates to control the various components of the mobile device in accordance with embedded software or firmware stored in memory or stored in memory contained within the DSP itself. In addition to the embedded software or firmware the DSP may execute other applications stored in the memory or made available via information carrier media such as portable data storage media like the removable memory card or via wired or wireless network communications. The application software may comprise a compiled set of machine readable instructions that configure the DSP to provide the desired functionality or the application software may be high level software instructions to be processed by an interpreter or compiler to indirectly configure the DSP .

The DSP may communicate with a wireless network via the analog baseband processing unit . In some embodiments the communication may provide Internet connectivity enabling a user to gain access to content on the Internet and to send and receive e mail or text messages. The input output interface interconnects the DSP and various memories and interfaces. The memory and the removable memory card may provide software and data to configure the operation of the DSP . Among the interfaces may be the USB port and the infrared port . The USB port may enable the mobile device to function as a peripheral device to exchange information with a personal computer or other computer system. The infrared port and other optional ports such as a Bluetooth interface or an IEEE 802.11 compliant wireless interface may enable the mobile device to communicate wirelessly with other nearby handsets and or wireless base stations.

The keypad couples to the DSP via the interface to provide one mechanism for the user to make selections enter information and otherwise provide input to the mobile device . Another input mechanism may be the touch screen LCD which may also display text and or graphics to the user. The touch screen LCD controller couples the DSP to the touch screen LCD . The GPS receiver is coupled to the DSP to decode global positioning system signals thereby enabling the mobile device to determine its position.

It is understood that by programming and or loading executable instructions onto the computer system at least one of the CPU the RAM and the ROM are changed transforming the computer system in part into a particular machine or apparatus having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an application specific integrated circuit ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs which are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data which are read during program execution. ROM is a non volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage . The secondary storage the RAM and or the ROM may be referred to in some contexts as computer readable storage media and or non transitory computer readable media.

I O devices may include printers video monitors liquid crystal displays LCDs touch screen displays keyboards keypads switches dials mice track balls voice recognizers card readers paper tape readers or other well known input devices.

The network connectivity devices may take the form of modems modem banks Ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA global system for mobile communications GSM long term evolution LTE worldwide interoperability for microwave access WiMAX and or other air interface protocol radio transceiver cards and other well known network devices. These network connectivity devices may enable the processor to communicate with the Internet or one or more intranets. With such a network connection it is contemplated that the processor might receive information from the network or might output information to the network in the course of performing the above described method steps. Such information which is often represented as a sequence of instructions to be executed using processor may be received from and outputted to the network for example in the form of a computer data signal embodied in a carrier wave.

Such information which may include data or instructions to be executed using processor for example may be received from and outputted to the network for example in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embedded in the carrier wave or other types of signals currently used or hereafter developed may be generated according to several methods well known to one skilled in the art. The baseband signal and or signal embedded in the carrier wave may be referred to in some contexts as a transitory signal.

The processor executes instructions codes computer programs scripts which it accesses from hard disk floppy disk optical disk these various disk based systems may all be considered secondary storage ROM RAM or the network connectivity devices . While only one processor is shown multiple processors may be present. Thus while instructions may be discussed as executed by a processor the instructions may be executed simultaneously serially or otherwise executed by one or multiple processors. Instructions codes computer programs scripts and or data that may be accessed from the secondary storage for example hard drives floppy disks optical disks and or other device the ROM and or the RAM may be referred to in some contexts as non transitory instructions and or non transitory information.

In an embodiment the computer system may comprise two or more computers in communication with each other that collaborate to perform a task. For example but not by way of limitation an application may be partitioned in such a way as to permit concurrent and or parallel processing of the instructions of the application. Alternatively the data processed by the application may be partitioned in such a way as to permit concurrent and or parallel processing of different portions of a data set by the two or more computers. In an embodiment virtualization software may be employed by the computer system to provide the functionality of a number of servers that is not directly bound to the number of computers in the computer system . For example virtualization software may provide twenty virtual servers on four physical computers. In an embodiment the functionality disclosed above may be provided by executing the application and or applications in a cloud computing environment. Cloud computing may comprise providing computing services via a network connection using dynamically scalable computing resources. Cloud computing may be supported at least in part by virtualization software. A cloud computing environment may be established by an enterprise and or may be hired on an as needed basis from a third party provider. Some cloud computing environments may comprise cloud computing resources owned and operated by the enterprise as well as cloud computing resources hired and or leased from a third party provider.

In an embodiment some or all of the functionality disclosed above may be provided as a computer program product. The computer program product may comprise one or more computer readable storage medium having computer usable program code embodied therein to implement the functionality disclosed above. The computer program product may comprise data structures executable instructions and other computer usable program code. The computer program product may be embodied in removable computer storage media and or non removable computer storage media. The removable computer readable storage medium may comprise without limitation a paper tape a magnetic tape magnetic disk an optical disk a solid state memory chip for example analog magnetic tape compact disk read only memory CD ROM disks floppy disks jump drives digital cards multimedia cards and others. The computer program product may be suitable for loading by the computer system at least portions of the contents of the computer program product to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system . The processor may process the executable instructions and or data structures in part by directly accessing the computer program product for example by reading from a CD ROM disk inserted into a disk drive peripheral of the computer system . Alternatively the processor may process the executable instructions and or data structures by remotely accessing the computer program product for example by downloading the executable instructions and or data structures from a remote server through the network connectivity devices . The computer program product may comprise instructions that promote the loading and or copying of data data structures files and or executable instructions to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system .

In some contexts the secondary storage the ROM and the RAM may be referred to as a non transitory computer readable medium or a computer readable storage media. A dynamic RAM embodiment of the RAM likewise may be referred to as a non transitory computer readable medium in that while the dynamic RAM receives electrical power and is operated in accordance with its design for example during a period of time during which the computer is turned on and operational the dynamic RAM stores information that is written to it. Similarly the processor may comprise an internal RAM an internal ROM a cache memory and or other internal non transitory storage blocks sections or components that may be referred to in some contexts as non transitory computer readable media or computer readable storage media.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

Also techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

