---

title: Synchronizing source code objects and software development workflow objects
abstract: Technologies are described herein for synchronization of source code objects and software development workflow objects. Software development workflow objects are identified that are related to source code objects to be synchronized to a development device. The identified software development workflow objects are then stored in a copy of a source control object store that also includes the source code objects to be synchronized. The copy of the source control object store may then be transmitted to the development device for offline use. Tools might also be provided on the development device for utilizing the software development workflow objects stored in the copy of the source control object store maintained by the development device. The copy of a source control object store containing modified source code objects and modified software development workflow objects might also be utilized to synchronize the changes to the objects to an appropriate object store.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09448791&OS=09448791&RS=09448791
owner: Amazon Technologies, Inc.
number: 09448791
owner_city: Seattle
owner_country: US
publication_date: 20131106
---
Software developers commonly utilize many different types of tools during the development of a software application. For example software developers might utilize tools for editing source code and compiling the source code into executable code. In addition to these tools software developers might also utilize other types of utility programs to assist with the development of an application. For example a developer might utilize a version control system VCS to manage changes made to the source code and other components of the application.

In addition to a VCS software developers might also utilize various software development workflow systems to manage the workflow of program development. For example a developer might utilize an issue tracking system to track issues which might also be referred to as bugs within the program being developed. Similarly the developer might also utilize a software project management system to manage the development timeline and other aspects of the development of a program. A developer might also utilize other software development workflow systems in conjunction with the development of a program.

Some VCSs which may be referred to herein as a distributed VCS or DVCS allow a developer to check out and utilize source code objects stored in a source control object store even when a network connection cannot be made to the DVCS. In this way a developer can utilize and modify source code objects even when their development device is offline from the DVCS. When a connection is reestablished with the DVCS any changes to the source code objects made by the developer can be synchronized back to the source control object store. Most software development workflow systems however do not provide such an offline mode of operation. Consequently it may be difficult and or time consuming for a developer to update related software development workflow systems following the offline use and or modification of source code objects maintained by a DVCS.

The following detailed description is directed to technologies for synchronizing source code objects and software development workflow objects. Utilizing the technologies described herein both source code objects and software development workflow objects can be synchronized to a development device for use in an offline fashion i.e. when a network connection between the development device and the DVCS is unavailable . After the development device returns online any modifications to the source code objects and the software development workflow objects can be synchronized to the appropriate object store.

According to one embodiment a DVCS is provided that includes functionality for managing changes made to source code files and other types of files associated with a program referred to herein as source code objects . The DVCS may store source code objects in a source control object store. The DVCS also provides functionality for allowing a developer to utilize source code objects stored in the source control object store in an offline manner. For example a copy of a source control object store that includes all or a subset of the source code objects contained in the source control object store can be provided to a development device for use in an offline fashion.

As mentioned briefly above various software development workflow systems might be utilized in conjunction with a DVCS to manage various aspects of the development of a program. For example and without limitation software development workflow systems include issue tracking systems software project management systems and deployment systems for deploying programs to various computing systems. The embodiments disclosed herein might also be utilized with other types of software development workflow systems.

Each of the software development workflow systems identified above might store appropriate objects in an associated object store. For example and without limitation an issue tracking system may store objects containing data and or metadata relating to issues in a program i.e. issue tracking objects in an issue tracking system object store. Similarly a software project management system may store objects containing data and or metadata relating to the management of a software project i.e. project management objects in a software project management system object store.

The DVCS or another component might also be configured to identify software development workflow objects maintained by software development workflow systems that are related to source code objects to be provided to a development device for offline use. For example the DVCS or another component might be configured to identify issue tracking objects and or project management objects that are related to or otherwise associated with one or more source code objects to be provided to a development device. Other types of software development workflow objects associated with source code objects might also be identified in a similar manner.

Once one or more software development workflow objects have been identified that are associated with source code objects to be synchronized to a development device the identified software development workflow objects may be stored in the copy of the source control object store to be provided to the development device. In this way a copy of a source control object store may be generated that includes both source code objects from a source control object store and software development workflow objects from one or more software development workflow object stores. The copy of the source control object store may then be transmitted to the development device for offline use.

In some embodiments the development device includes tools for utilizing the software development workflow objects stored in the copy of the source control object store maintained at the development device. For example and without limitation the development device might be configured with an issue tracking system client tool for utilizing and potentially modifying issue tracking objects. Similarly the development device might be configured with a software project management system client tool for utilizing and potentially modifying project management objects. The development device might also be configured to execute a version control system client tool that permits the utilization and modification of source code objects contained in the copy of the source control object store maintained at the development device. Through the use of these tools a software developer can modify and otherwise utilize the source code objects and the software development workflow objects stored on the development device.

The DVCS the version control system client tool or another component might also provide functionality for merging source code objects and software development workflow objects modified on the development device into their respective object stores. For example the development device might provide the copy of the source control object store containing modified source code objects and modified software development workflow objects to the DVCS or another component configured to synchronize the changes to the objects to the appropriate object store. In response thereto the DVCS or another component may merge the changes to the source code objects into the original source control object store. The DVCS or another component might also merge the changes to the software development workflow objects into an appropriate software development workflow system object store. In this way both source code objects and software deployment workflow objects can be efficiently provided to a development device utilized in an offline fashion and any changes to the objects can be merged into the appropriate object store.

It should be appreciated that the subject matter presented herein may be implemented as a computer process a computer controlled apparatus a computing system or an article of manufacture such as a computer readable storage medium. These and various other features will become apparent from a reading of the following disclosure and a review of the associated drawings.

While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described below including multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers handheld computers personal digital assistants cellular telephone devices electronic book readers special purposed hardware devices network appliances and the like. The embodiments described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In the following detailed description references are made to the accompanying drawings that form a part hereof and that show by way of illustration specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures.

The DVCS may store the source code objects in a source control object store . The source control object store might also be referred to as a source code repository. The DVCS also provides functionality for allowing a developer to utilize source code objects stored in the source control object store even when a network connection cannot be made between the developer s development device and the DVCS . The development device is a computing device such as a desktop or laptop computer a tablet device or a smartphone configured to execute software components for performing program development. Other types of development devices might also be utilized.

In order to provide functionality for using the source control object store on the development device a copy of the source control object store that includes all or a subset of the source code objects contained in the source control object store can be provided to a development device for use in an offline fashion. A developer may be permitted to specify which of the source code objects are synchronized to the development device . As shown in a version control system client tool might also be provided for execution on the development device that permits the use of the source code objects in the copy of the source control object store stored at the development device .

As shown in the DVCS might also be utilized in conjunction with one or more software development workflow systems A B which might be referred to herein individually as a software development workflow system or in the collective as the software development workflow systems . As mentioned briefly above the software development workflow systems provide functionality for managing various aspects of the workflow of software development. For example and without limitation the software development workflow systems include issue tracking systems software project management systems and deployment systems. The embodiments disclosed herein might also be utilized with other types of software development workflow systems .

As also mentioned above each of the software development workflow systems identified above might store appropriate objects referred to herein as software development workflow objects in an associated software development workflow system object store . For example the software development workflow system A may store software development workflow objects A in the software development workflow system object store A. Similarly the software development workflow system B may store software development workflow objects B in the software development workflow system object store B. As will be described in greater detail below the embodiments disclosed herein provide functionality for enabling the utilization and modification of the software development workflow objects on a development device in an offline fashion. Additional details regarding this process will be provided below.

In order to utilize the functionality provided herein a developer might utilize the version control system client tool or another component to request a copy of the source control object store that includes all or a subset of the source code objects contained in the source control object store . In response thereto the DVCS or another component may create the copy of the source control object store containing the requested source code objects . Additionally the DVCS or another component might also be configured to identify software development workflow objects maintained by the software development workflow systems that are related in some manner to the requested source code objects . For example the identified software development workflow objects might include data and or metadata corresponding to the requested source code objects .

Once one or more software development workflow objects have been identified that are associated with requested source code objects the DVCS or another component may retrieve the identified software development workflow objects and store the objects in the copy of the source control object store that is to be provided to the development device . In this way the copy of the source control object store is generated that includes both source code objects from the source control object store and software development workflow objects from one or more software development workflow object stores . The DVCS or another component may then transmit the copy of the source control object store to the development device for offline use. As illustrated in the development device receives and stores the copy of the source control object store in a locally available storage device.

As also shown in the development device might also be configured with software tools for modifying and otherwise utilizing the source code objects and the software development workflow objects stored in the copy of the source control object store . For example and as shown in the development device might include a version control system client tool that provides functionality for utilizing the source code objects stored in the local copy of the source control object store . The version control system client tool might also provide functionality for utilizing and or modifying the software development workflow objects A B. For example and without limitation the version control system client tool might interact with the software development workflow objects A B directly or indirectly through the software development workflow system client tools A B.

The development device might also include a software development workflow system client tool A for utilizing the software development workflow objects A stored in the local copy of the source control object store . Similarly the development device might also include a software development workflow system client tool B for utilizing the software development workflow objects B stored in the local copy of the source control object store . The tools A and B may be configured to permit the utilization of the contents of the copy of the source control object store even when a network connection cannot be established to the DVCS .

It should be appreciated that the tools described above might be implemented in various ways using various technologies in different embodiments. For example and without limitation the client tools A and B might be implemented as application programs executing on the development device . In another implementation the client tools A and B are implemented as Web programs. The client tools A and B might also provide functionality for both online and offline operation. The functionality described herein as being provided by the client tools A and B might also be provided by a single software component. Additionally one or more application programming interfaces APIs might be provided on the development device for accessing and utilizing the contents of the copy of the source control object store stored on the development device .

Functionality is also disclosed herein for merging changes to the objects and contained in the copy of the source control object store back into the respective object stores and . For example after a network connection has been established between the development device and the DVC the development device might automatically provide the copy of the source control object store containing modified source code objects A and modified software development workflow objects AA and BB to the DVCS or another component configured to synchronize the changes to these objects to the appropriate object store.

In response to receiving the copy of the source control object store from the development device the DVCS or another component may retroactively merge the modified source code objects A into the original source control object store . Similarly the DVCS or another component might also retroactively merge the modified software development workflow objects AA into the software development workflow system object store A and retroactively merge the modified software development workflow objects BB into the software development workflow system object store B. In this way both source code objects and software deployment workflow objects can be efficiently provided to a development device utilized on the development device even when a connection cannot be established with the DVCS and any changes to the objects and made on the development device can be merged back into the appropriate object store or retroactively. Additional details regarding this process are provided below with regard to .

It should be appreciated that although illustrates the DVCS as creating the copy of the source control object store and receiving the copy of the source control object store from the development device other systems and or components might also perform this functionality. In some embodiments for example a component on the development device might be configured to push the modified software development workflow objects AA and BB into the appropriate software development workflow object store A or B. Other configurations might also be utilized.

It should also be appreciated that the various components shown in and the other FIGS. have been simplified for ease of understanding. In this regard it should also be appreciated that many more computers software components networking devices networks and other components might be utilized to implement the various embodiments described herein. It should also be appreciated that the embodiments described herein might be implemented utilizing a client and server model or a peer to peer model. In the client and server model one or more servers might be configured to provided the DVCS and to provide the functionality described herein to multiple clients i.e. development devices . In a peer to peer model the development devices might be configured to synchronize changes to objects in a source control object store between one other. Other configurations might also be utilized.

The implementation of the various components described herein is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the FIGS. and described herein. These operations may also be performed in parallel or in a different order than those described herein. Some or all of these operations might also be performed by components other than those specifically identified.

The routine begins at operation where the DVCS receives a request for one or more source code objects stored in the source control object store . For example and without limitation a development device may be utilized to provide such a request to the DVCS . In response to receiving a request at operation the routine proceeds from operation to operation where the DVCS or another component identifies one or more software development workflow objects that are related to the requested source code objects . For example and without limitation the DVCS or another component might search the contents of one or more software development workflow system object stores to identify software development workflow objects that are related to the requested source code objects . Other mechanisms might also be utilized to identify related software development workflow objects . Once the related software development workflow objects have been identified the routine proceeds to operation .

At operation the DVCS or another component creates a copy of the source control object store that includes the requested source code objects and the software development workflow objects identified at operation . The DVCS or another component then provides the copy of the source control object store in response to the request received at operation . For example the DVCS might provide the copy of the source control object store to the version control system client tool for local storage on the development device . Additional details regarding this process will be provided below with regard to .

From operation the routine proceeds to operation where as described briefly above software tools may be executed on the development device for utilizing and potentially modifying the source code objects and the software development workflow objects stored in the copy of the source control object store maintained at the development device . For example and without limitation the version control system client tool may be utilized to modify the source code objects . Similarly the software development workflow system client tools A and B may be utilized to modify the software development workflow objects A and B respectively. As also discussed above the version control system client tool might also be utilized to interact with and or modify the software development workflow objects A B. For example and as also mentioned above the version control system client tool might interact with the software development workflow objects A B directly. Alternately the version control system client tool might interact with the software development workflow objects A B through an interaction with the software development workflow system client tools A B.

It should be appreciated that tools other than those specifically identified above might also be provided and utilized on the development device for utilizing and modifying the contents of the copy of the source control object store . As discussed above these tools may be utilized to interact with the contents of the copy of the source control object store even when a network connection cannot be established between the development device and the DVCS and or the software development workflow systems A and B.

From operation the routine proceeds to operation where a determination is made as to whether a request has been received to synchronize modified source code objects A into the source control object store . For example and without limitation the version control system client tool might provide such a request to the DVCS or another component along with a copy of the source control object store that includes modified source code objects and potentially modified software development workflow objects AA and BB. If such a request is received at operation the routine proceeds to operation .

At operation the DVCS or another component updates the source control object store with the modified source code objects A. The DVCS or another component might also update one or more software development workflow system object stores with modified software development workflow objects. For example the DVCS or another component might cause the modified software development workflow objects AA to be synchronized with the contents of the software development workflow system object store A. Similarly the DVCS or another component might cause the modified software development workflow objects BB to be synchronized with the contents of the software development workflow system object store B. Additional details regarding this process will be provided below with regard to . From operation the routine proceeds to operation where it ends.

As mentioned briefly above the issue tracking system provides functionality for tracking issues within a program. In this regard the issue tracking system may store issue tracking objects containing data and or metadata relating to issues in a program in an issue tracking system object store . In some embodiments the issue tracking objects contain data and or metadata regarding issues within source code maintained by the DVCS . Example issue tracking systems include but are not limited to the JIRA issue and project tracking system from ATLASSIAN the TRAQ project management system from TRAQ.IO the BUGZILLA software development system and the RT REQUEST TRACKER issue tracking system from BEST PRACTICAL SOLUTIONS INC.

As also mentioned briefly above the software project management system provides functionality for managing a development timeline and other aspects of the development of a program. The software project management system may store project management objects containing data and or metadata relating to the management of a software project in a software project management system object store . In some embodiments the project management objects contain data and or metadata regarding the management of a software project having source code objects maintained by the DVCS . Example software project management systems include but are not limited to the JIRA issue and project tracking system from ATLASSIAN the TRAQ project management system from TRAQ.IO the BASECAMP project management system from SIGNALS LLC the PROJECT management application from MICROSOFT INC. and the RATIONAL ROSE project management tool from IBM INC.

In order to utilize the source code objects the issue tracking objects and the project management objects in an offline mode of operation a developer might utilize the version control system client tool or another component to transmit a request for a copy of the source control object store that includes all or a subset of the source code objects contained in the source control object store . In response thereto the DVCS or another component may create the copy of the source control object store containing the requested source code objects . Additionally the DVCS or another component might also be configured to identify issue tracking objects maintained by the issue tracking system that are related in some manner to the requested source code objects . For example and without limitation the identified issue tracking objects might include data and or metadata corresponding to issues in source code within or referenced by the requested source code objects .

The DVCS or another component might also be configured to identify project management objects maintained by the software project management system that are related in some manner to the requested source code objects . For example and without limitation the identified project management objects might include data and or metadata corresponding to the management of source code within or referenced by the requested source code objects . The DVCS or another component might also be configured to identify other types of objects maintained by other types of software development workflow systems that are related to or otherwise associated with the requested source code objects .

Once one or more issue tracking objects and or project management objects have been identified that are associated with requested source code objects the DVCS or another component may retrieve the identified issue tracking objects and or project management objects and store the objects and in the copy of the source control object store that is to be provided to the development device in response to the request . In this way the copy of the source control object store is generated that includes both source code objects from the source control object store and issue tracking objects and or project management objects . The DVCS or another component may then transmit the copy of the source control object store to the development device for offline use. As illustrated in the development device receives and stores the copy of the source control object store in a locally available storage device.

As also shown in the development device might also be configured with software tools for modifying and otherwise utilizing the source code objects the issue tracking objects and or the project management objects . For example and as shown in the development device might include a version control system client tool that provides functionality for utilizing the source code objects stored in the local copy of the source control object store .

The development device might also include an issue tracking system client tool for utilizing the issues tracking objects stored in the local copy of the source control object store . Similarly the development device might also include a software project management system client tool for utilizing the project management objects stored in the local copy of the source control object store . The tools and may be configured to permit the utilization of the contents of the copy of the source control object store even when a network connection cannot be established to the DVCS the issue tracking system or the software project management system .

As mentioned briefly above the version control system client tool might also be configured to utilize and or modify software development workflow objects . For instance in the example shown in the version control system client tool might be utilized in the manner described above to obtain and modify one or more source code objects . If an issue exists in the source code objects the version control system client tool might also be utilized to modify the corresponding issue tracking objects for the issue. Similarly the version control system client tool might also be utilized to update and project management objects associated with the source code objects . In other implementations the version control system client tool might also be utilized to modify other types of software development workflow objects .

In response to receiving the request at operation the routine proceeds from operation to operation where the DVCS or another component creates the copy of the source control object store that includes the requested source code objects . The routine then proceeds to operation where the DVCS or another component identifies one or more issue tracking objects and or project management objects that are related to the requested source code objects .

An issue tracking system for a large organization may include as many as millions of issues related to a software project. Transferring all issues in response to a request may be inefficient and time consuming. In some implementations related issues may be selectively identified based on the specificity and relevance with which they indicate software development activities that may be performed on the requested source code objects. For example an issue that includes a stack trace indicating a particular source code file contained in the source code objects would be a higher priority to transfer than an issue that only specified a module or component containing the source code file. As another example an issue indicating work that can be performed now would be a higher priority to transfer than an issue that is blocked waiting for other work to be performed.

In some implementations all of the issue tracking objects and or project management objects that are related to the requested source code objects are identified and provided in response to a request . In other embodiments however various mechanisms might be utilized to identify a subset of the related issue tracking objects and or project management objects to be provided in response to the request . For example and without limitation only issue tracking objects and or project management objects related to the requested source code objects and that have changed since a previous request for the source code objects may be provided. As another example issue tracking objects and or project management objects related to the requested source code objects and that have been created or modified recently e.g. created or modified within some threshold period of time prior to the receipt of the request may be provided. As yet another example only issue tracking objects and or project management objects related to the requested source code objects and that have not previously been transmitted to the development device may be provided. Other mechanisms might also be utilized to identify the subset of the related issue tracking objects and or project management objects to be provided in response to the request . Moreover the objects and to be provided in response to the request might be identified by the DVCS the issue tracking system the software project management system or another system or combination of systems. Once the objects and to be provided in response to the request have been identified the routine proceeds from operation to operation .

At operation the DVCS or another component stores the issue tracking objects and or project management objects identified at operation in the copy of the source control object store that includes the requested source code objects . According to various embodiments various mechanisms might be utilized to store the identified issue tracking objects and or project management objects in the copy of the source control object store . For example and without limitation software development workflow objects might be encoded as source code objects . In this way source code objects can be created in a particular format that allows issue tracking objects and or project management objects to be stored therein. A commit might be generated to the copy of the source control object store for instance that contains content corresponding to an issue maintained by the issue tracking system . Another file in the same directory might similarly be created that describes a log of activity on the particular issue.

One or more namespaces may be assigned to objects in the copy of the source control object store in order to distinguish source code objects from software development workflow objects that have been encoded as source code objects in the copy of the source control object store . In this way the version control system client tool can distinguish between actual source code objects and software development workflow objects that have been encoded as source code objects . Other mechanisms might also be utilized in order to distinguish between software development workflow objects and source code objects stored in the copy of the source control object store utilized by a development device .

From operation the routine proceeds to operation where the DVCS or another component provides the copy of the source control object store in response to the request received at operation . For example the DVCS might provide the copy of the source control object store to the version control system client tool for local storage on the development device . The routine then proceeds from operation to operation where it ends.

Changes made to the contents of the copy of the source control object store can also be synchronized back to their respective object stores. In particular the development device might provide a copy of the source control object store containing modified source code objects A modified issue tracking objects A and modified project management objects A to the DVCS or another component configured to synchronize the changes to these objects to the appropriate object store.

In response to receiving the copy of the source control object store from the development device the DVCS or another component may merge the modified source code objects A into the original source control object store . Similarly the DVCS or another component might also merge the modified issue tracking objects A into the issue tracking system object store . The DVCS or another component might also merge the modified project management objects A into the software project management system object store .

It should be appreciated that although illustrates the DVCS as receiving the copy of the source control object store from the development device other systems and or components might also perform this functionality. In some embodiments for example the version control system client tool or another component on the development device might be configured to push the modified issue tracking objects A and the modified project management objects into the appropriate object store. Other configurations might also be utilized.

In one example scenario the version control system client tool might be utilized to created and or modify source code having an associated issue being tracked by the issue tracking system . In this example the version control system client tool might be utilized to record a commit i.e. a change to source code stored in the source control object store associated with the issue. In response thereto the issue tracking system client tool might create and or update one or more issue tracking objects stored in the copy of the source control object store indicating that the issue has been addressed. The new or modified issue tracking objects and the modified source code objects can later be synchronized back to the issue tracking system for retroactive inclusion in the issue tracking system object store in the manner described herein. It should be appreciated that this scenario is merely illustrative and other usage scenarios might be enabled by the various technologies described herein.

From operation the routine proceeds to operation where the DVCS or another component updates the source control object store with the modified source code objects A. From operation the routine proceeds to operation where the DVCS or another component determines whether the copy of the source control object store includes any modified issue tracking objects A or modified project management objects A.

If the copy of the source control object store includes modified issue tracking objects A or modified project management objects A the DVCS synchronizes the modified issue tracking objects A and or modified project management objects A into the appropriate object store. As discussed above for example the modified issue tracking objects A may be merged into the issue tracking system object store . Similarly any modified project management objects A may be merged into the software project management system object store . Other types of modified objects in the copy of the source control object store might also be synchronized with other object stores in a similar manner.

Additionally modified issue tracking objects A and or modified project management objects A might be processed in other ways during the synchronization operation. For example and without limitation these objects might be converted translated or modified in other ways prior to synchronization to the respective object store. From operation the routine proceeds to operation where it ends.

The computer includes a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment one or more central processing units CPUs operate in conjunction with a chipset . The CPUs are standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .

The CPUs perform the necessary operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

The chipset provides an interface between the CPUs and the remainder of the components and devices on the baseboard. The chipset may provide an interface to a random access memory RAM used as the main memory in the computer . The chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that help to startup the computer and to transfer information between the various components and devices. The ROM or NVRAM may also store other software components necessary for the operation of the computer in accordance with the embodiments described herein.

According to various embodiments the computer may operate in a networked environment using logical connections to remote computing devices and computer systems through the network such as a local area network LAN a wide area network WAN the Internet or any other networking topology known in the art that connects the computer to remote computers. The chipset includes functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. The NIC is capable of connecting the computer to other computing devices over the network . It should be appreciated that any number of NICs may be present in the computer connecting the computer to various types of networks and remote computer systems.

The computer may be connected to a mass storage device that provides non volatile storage for the computer . The mass storage device may store system programs application programs other program modules and data which are described in greater detail herein. The mass storage device may be connected to the computer through a storage controller connected to the chipset . The mass storage device may consist of one or more physical storage units. The storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other standard interface for physically connecting and transferring data between computers and physical storage devices.

The computer may store data on the mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether the mass storage device is characterized as primary or secondary storage and the like. For example the computer may store information to the mass storage device by issuing instructions through the storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. The computer may further read information from the mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to the mass storage device described above the computer may have access to other computer readable storage media to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available non transitory media that may be accessed by the computer . By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology. Computer readable storage media includes RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

The mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises the LINUX operating system. According to another embodiment the operating system comprises the WINDOWS SERVER operating system from MICROSOFT Corporation of Redmond Wash. According to further embodiments the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device may store other system or application programs and data utilized by the computer such as a DVCS and or a software development workflow system each of which was described above in regard to .

In one embodiment the mass storage device or other computer readable storage media may be encoded with computer executable instructions that when loaded into the computer may transform the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform the computer by specifying how the CPUs transition between states as described above. According to one embodiment the computer may have access to computer readable storage media storing computer executable instructions that when executed by the computer perform the routines and described above with regard to respectively.

The computer might also include an input output controller for receiving and processing input from a number of input devices such as a keyboard the mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly the input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that the computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

Based on the foregoing it should be appreciated that concepts and technologies synchronizing source code objects and software development workflow objects have been presented herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

