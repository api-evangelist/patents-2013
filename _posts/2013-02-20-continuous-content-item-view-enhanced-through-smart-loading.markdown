---

title: Continuous content item view enhanced through smart loading
abstract: Systems, methods, and computer-readable storage media for a continuous photo view on a browser-type application are disclosed. The system can receive a request to display a set of images associated with a user account. The system can generate a web page based on a size of the content items, the web page having a respective placeholder for each of the content items in an area of the web page that is relative to a visible portion of the web page, wherein the web page can provide a continuous presentation of the content items on a device, and wherein the web page can be configured to dynamically load and unload content items based on a current position of the web page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793573&OS=08793573&RS=08793573
owner: Dropbox, Inc.
number: 08793573
owner_city: San Francisco
owner_country: US
publication_date: 20130220
---
This application is a continuation of and claims the benefit of U.S. Non Provisional application Ser. No. 13 725 806 filed on Dec. 21 2012 which claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application No. 61 719 855 filed on Oct. 29 2012. Said applications are expressly incorporated herein by reference in their entirety.

The present technology pertains to presenting content items stored in a network based content management environment and more specifically to enhanced techniques for presenting large collections of such content items.

Media recording capabilities such as photography and video recording have become common features available in a score of common everyday devices. The ubiquity of such media recording capabilities has prompted a growing demand for media applications to access media stored on different devices to share media with other users. The Internet has further fueled the demand for media applications by greatly expanding the amount of media available to users and providing an ever widening audience for conveniently sharing media.

Consequently numerous browser based tools have emerged that allow users to share and access media through a web browser from any Internet connected device. For example image search engines allow users to search the Web for image content and browse the searched photos through a web browser. Other browser based tools and services such as social network sites similarly allow users to view and share photos through a web browser.

Browser based tools have several limitations largely due to the memory and bandwidth constraints of user devices. Such limitations are particularly common when dealing with media files such as photos which typically have greater bandwidth and memory requirements than text files. For example the number of photos that modern browsers can load and display is restricted by the amount of random access memory RAM available to the browser. As the browser loads photos the Document Object Model DOM of the browser continues to grow in size with each photo that is loaded and the browser s memory begins to fill. If the browser continues to load more photos the browser s memory will eventually fill causing the browser to slow down or even crash.

As a result present day browsers are unable to load large libraries of photos in a single page without crashing or causing significant performance issues. Thus instead of loading a large library of photos in a single page the browser will generally divide the photos over several discrete pages. The user must then load and browse each page separately. A common scenario is a photo gallery where the browser requires the user to navigate sets of previous and next photo pages to browse the entire photo gallery. However this is a tedious wasteful and inconvenient process for the user particularly as the size of the photo gallery and consequently the number of photo pages increases.

Features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out hereinafter. These and other features of the disclosure will become more fully apparent from the following detailed description and accompanying drawings or can be learned by the practice of the principles set forth herein.

The approaches set forth herein can be used to load a large library of content items such as photos in a single page without dividing the content items over a number of discrete pages while minimizing the amount of memory used by the browser application thereby reducing the likelihood of causing the application to crash. The user can browse all of the content items within a single page by simply scrolling down the page. The result of the disclosed approach is that the user does not have to spend time separately loading a number of different pages to browse the different content items. Moreover the user can have a continuous view of all the content items which can help the user search and or compare different content items without having to jump to separate content item pages. These approaches can also be used with a timeline or event based view of the content items and may be used to organize all of the content items for presentation to the user. The improved organization and presentation of the content items can provide the user a richer browsing experience.

Disclosed are systems methods and non transitory computer readable storage media for a continuous content item view in a content item browsing application enhanced with smart loading. While the content item browsing application is discussed in the examples below in terms of a web browser the photo browsing application can alternatively be a compiled or interpreted local application. In some embodiments the system can receive a request to display a set of content items associated with an online data storage account. The system then generates a web page based on a size of the set of content items the web page having a respective placeholder for each of the content items in an area of the web page that is relative to a visible portion of the web page wherein the web page provides a continuous presentation of the set of content items at the web page on a device and wherein the web page is configured to dynamically load and unload content items at the respective placeholder based on a current position of the web page. In response to the request the system transmits the web page to the device for display to a user.

In other embodiments the system can first receive a request to display a set of content items associated with an online data storage account. The system then generates a web page based on a size of the set of content items the web page providing a continuous presentation of the set of content items at the web page on a device wherein a visible portion of the web page includes a presentation of content items from the set of content items and wherein the content items in the presentation of content items are mapped to an area in the web page that is associated with a current position within the web page. In response to the request the system then transmits the web page to the device for display to a user.

The web page can be a single continuous web page having a respective placeholder for each of the content items in an area of the web page that is relative to the visible portion of the web page or the web browser. The single continuous web page can provide an interface to display without pagination more content items than can be stored at the memory available for use by the web page. Thus the single continuous web page can display an entire library of content items on a browser that does not have enough memory to actually load the entire library of content items simultaneously without causing the browser to crash.

The presentation of content items can include a listing of the content items from the set of content items arranged by date name album size location event type format and so forth. For example the content items can be arranged in chronological order or reverse chronological order. Moreover the presentation of content items can also include a first display of dates along a plane and a second display of the content items along a parallel plane. The dates can be associated with the content items in one or more ways. For example the dates can be the dates the content items were created the dates of events associated with the content items the dates the content items were captured the dates the content items were received the dates the content items were edited the dates the content items were added to a folder etc. The presentation of content items can also include an event based navigation structure. The event based navigation structure can be based on date ranges of content items such as days weeks or months. The event based navigation structure can alternatively be based on events such as Spring Break 2012 Halloween 1999 or August Camping Trip. In one embodiment the event based navigation structure includes a first display of content item details along a plane and a second display of the content items along a parallel plane. The content item details can include dates associated with the content items events associated with the content items descriptions associated with the content items names associated with the content items locations associated with the content items people associated with the content items links associated with the content items and so forth.

The visible portion of the web page refers to the portion of the web page that is currently being displayed. The portions of the web page outside of the visible portion are not visible in the sense that these portions are not currently displayed. However these portions of the web page can have loaded elements including images content items and or elements having different visibility states and attributes including visible and hidden attributes. Thus the portions of the web page outside the visible portion while not displayed under the current view can have a visible state and or attribute.

The visible portion of the web page can include a presentation of content items from the set of content items where the content items in the presentation of content items have placeholders in a portion of the web page that is associated with a current position within the web page. Moreover the visible portion of the web page can include a different view of the presentation of content items when the current position within the web page changes. For example the visible portion of the web page can present different content items as a user navigates and or scrolls through the web page. Further a current view of the presentation of content items can fade out and the different view of the presentation of content items can fade in as the current position within the web page changes.

The web page can be configured to detect a scroll event and dynamically update the visible portion of the web page based on the scroll event. For example the web page can be configured to detect a movement of a scroll bar in a web browser window associated with the web page and dynamically update the visible portion of the web page to present the different view of the presentation of content items and or a different view of the continuous presentation of the set of content items. The scroll bar can be operable to allow the user to scroll through the continuous presentation of the set of content items and or web page. The different view of the presentation of content items and or the different view of the continuous presentation of the set of content items can be associated with the position of the scroll bar resulting from the scroll event. For example the different view can be based on one or more content items mapped to an area of the web page or having a placeholder in an area of the web page that corresponds to the specific scroll bar position in the web browser window.

Moreover the web page can be configured to detect scrolling events to dynamically load and unload content items at the respective placeholder based on a current position of the web page and or scroll bar. Here the web page can load content items in portions of the web page located in the same direction of the detected movement and or scrolling event. The web page can also unload content items in portions of the web page located away from the direction of the movement and or scrolling event. The web page can determine the timing and or content items for dynamically loading and unloading content items based on one or more factors including the size of the set of content items the memory available for use by the browser the size of individual content items the scrolling speed the total number of content items the type of browser etc. When unloading content items the web page can hide or remove the content items from the Document Object Model DOM of the browser but can also keep placeholders for the unloaded content items or can keep images cached but not loaded.

Furthermore the system can generate and transmit instructions for updating the web page based on changes made to the set of content items. For example the system can add edit and or delete one or more content items or folders from the set of content items and transmit instructions to the web browser for updating the web page to add or remove placeholders for any content items that were added or deleted from the set of content items.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the art will recognize that other components and configurations may be used without departing from the spirit and scope of the disclosure.

The present disclosure provides a way to present content items in a continuous content item view in a web browser. A system method and computer readable media are disclosed that provide a continuous content item view enhanced with smart loading. A description of a system configuration in which can be employed to practice the concepts is disclosed herein. A more detailed description and variations of a continuous presentation of content items in a browser and smart loading and unloading will then follow. These variations shall be described herein as the various embodiments are set forth. The disclosure now turns to .

An exemplary system configuration is shown in wherein electronic devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can include a content item management module for maintaining a content directory. The content directory can identify the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

The displayed portion of web page can include an event based navigation feature to browse images and a scroll bar for scrolling through web page . Scroll bar can be used to scroll through the continuous presentation of the images. Web page can detect a scroll event and load images in areas of web page located in the same area and or direction of the scroll event. Web page can also unload images in areas of web page located away from the direction area of the scroll event. For example as scroll bar moves towards one area of web page web page can load images in that area including any portions around that area. Moreover as scroll bar moves towards one area of web page web page can also unload images that are away from that area of web page . The left pane of view shows a fixed navigation bar of years. The left pane can be fixed in that its position can be fixed in one location and in that the contents displayed therein can provide an indication of the entire collection of photos regardless of which photos are currently displayed. The user can click tap or otherwise select one of the elements in event based navigation feature to directly navigate to photos related to that element. For example a user can select a year and the system can navigate to photos in that year. The years are illustrative and can be replaced or augmented by more natural language descriptions of photo contents or events depicted in the photos.

Event based navigation feature can include images A D which are mapped to an area in web page that is associated with the current position of scroll bar . Event based navigation feature can also include a list of dates A D associated with images A D in the area of web page . Images A D are arranged according to the list of dates A D. For example images A are associated with date A and are thus grouped based on date A. Similarly images B are associated with date B and grouped based on date B. Likewise images C and D are associated with dates C and D respectively and also grouped accordingly.

Images A D can be arranged in chronological order or reverse chronological order based on dates A D. Dates A D can represent the dates images A D were created received recorded edited added etc. Dates A D can also represent the date of an event associated with an image. Event based navigation feature can also include additional details associated with images A D. For example event based navigation feature can provide a title name event location and or description for each of images A D. For example instead of or in addition to dates A D event based navigation feature can sort images A D by album title and list the album title instead of or in addition to the dates A D.

In view portion of web page can include event based navigation bar that provides a navigation structure for all the photos in the collection regardless of whether the photos are in view or not. Event based navigation bar can include dates A C and A C D and image area which can display images A C. Dates A C in in view portion of web page can be associated with images A C in image area . Off view portions A B of the web page can include images A D which are not displayed in in view portion of web page although dates A D which are associated with images A D can be displayed as part of the event based navigation structure regardless of whether images A D are visible. Images B C and dates B C which are adjacent to in view portion of web page can be loaded and ready to be displayed if web page is scrolled and images B C and dates B C are placed in view. Placeholders A and D do not have images loaded because they are not in view and are farther away from in view portion but the images can be loaded as web page is scrolled and or placeholders A and D are placed in view. For example as web page is scrolled up towards placeholder A and placeholder A is placed in view web page can load an image for display at placeholder A.

Event based navigation feature can remain constant along one side of the page and can be user configurable to appear in any location on the page. The user can use the event based navigation feature to directly jump to a particular point in the collection. For example the user can click on 2006 in the event based navigation structure to jump instantly to photos from 2006. The layout of the event based navigation structure can be based on the full collection of photos so that the spacing of the labels in the event based navigation represents the relative number of photos present in a particular section. For example larger spaces between 2009 and 2008 can indicate more items in that part of the collection than between 2006 and 2007.

In some embodiments off view portions A B may not have any images loaded. Instead off view portions A B can have placeholders for images to be loaded when off view portions A B are placed in view. In this case images B and images C would only be loaded when they are placed in view and or when web page is scrolled in their direction. In other embodiments web page can have more or less images loaded in off view portions A B depending on various factors. The factors can include the total size of the images the size of individual images the number of images the scrolling speed the browser memory the user preferences the browser type etc. For example if web page contains a large number of images it can load more images in off view portions A B to allow the user to quickly scroll through a large number of images in web page . As another example if the size of the images is large the web page can reduce the number of images loaded in off view portions A B to reduce the amount of memory required by web page .

In one variation the system can generate the web page including JavaScript or other script instructions that provide certain portions of the client side functionality. The script instructions can detect a browser type and other system parameters such as an amount of memory available to the browser or available to a thread associated with displaying web page in a tab in the browser. The script can govern how many images are loaded and when images are unloaded based on the memory available to the browser. Thus different browsers on a same computer or the same browser on different computers may lead to different quantities of images that the script instructions allow the browser to load simultaneously. Thus as browser technology or available memory improve the scripting instructions can automatically adapt to allow additional images to be loaded at the same time when displaying the web page.

Web page can include a scroll bar for scrolling through content in web page . Moreover web page can include in view portion and two off view portions A B. In some embodiments web page can include additional in view and or off view portions. In view portion of web page can include event based navigation feature with dates A C and image area which displays images A C. Dates A C in in view portion of web page are associated with images A C in image area . Image area can correspond to an area of in view portion that is currently displaying images A C. Off view portions A B of web page can include images A D which are not displayed in in view portion of web page and dates A D which are associated with images A D.

Images B C and dates B C which are adjacent to in view portion of web page can be loaded and ready to be displayed if web page is scrolled and images B C and dates B C are placed in view. Placeholders A and D do not have images loaded because they are not in view and are farther away from in view portion but can be loaded as web page is scrolled and or placeholders A and D are placed in view. The images can be loaded in placeholders A and D from image database .

In scroll bar is moving up causing web page to scroll up towards off view portion A. As web page scrolls up images A can be loaded at their respective placeholders and images D can be unloaded. Images A can be loaded because the scrolling may place off view portion A where the placeholders for images A are located in view. On the other hand images D can be unloaded because web page is scrolling away from images D. Images A can be loaded from image database and images D can be unloaded to the image database .

By dynamically loading and unloading images web page can present a continuous presentation of a set of images on a device having a memory available for use by the web page that is less than a size of the set of images. Here web page can present all of the images on the device in a single continuous web page without pagination and without causing the web browser to crash. Web page can load images as they are needed for display and unload other images that are not in display in order to limit the use of browser memory. Web page can reserve space for all of the images via placeholders and load images from image database at particular placeholders on web page as web page scrolls towards those placeholders. Web page can then hide or unload images from web page as web page scrolls away from the images. When unloading images web page can keep the placeholders for those images on web page .

Loaded portion of web page can include those portions of web page that have images already loaded. Specifically loaded portion can include off view portions and and in view portion . In view portion has images loaded and displayed under the current view. On the other hand off view portions and have the images and loaded but are not displayed under the current view as they are currently outside the boundaries of the display.

Off view portions and are not in the loaded portion of web page because they do not have images loaded. Instead off view portions and have placeholders for images that will be loaded if off view portions and are moved within loaded portion of web page . For example if the user moves or scrolls up one level in web page loaded portion will change to include off view portions and and in view portion . In this case web page will load images at the placeholders in off view portion and will unload images from off view portion . Moreover off view portion will be placed in view and in view portion will be placed off view. Thus web page will display the images in portion but will have images and loaded at portions and respectively.

Having disclosed some basic system components and concepts the disclosure now turns to the example method embodiments shown in . For the sake of clarity the methods are described in terms of an example system as shown in . The steps outlined herein are illustrative and can be implemented in any combination thereof including combinations that exclude add or modify certain steps.

The web page can be a single continuous web page having a respective placeholder for each of the content items in an area of the web page that is relative to the visible portion of the web page. The single continuous web page can display without pagination more content items than can be stored at the memory available for use by the web page. Thus the single continuous web page can display an entire library of content items on a browser that does not have enough memory to load the entire library of content items without causing the browser to crash.

The content items can include an image a document a video and or a combination thereof. The presentation of content items can include a listing of the content items from the set of content items arranged by date name album size location event type format and so forth. For example the content items can be arranged in chronological order or reverse chronological order such as in a timeline. Moreover the presentation of content items can also include a first display of dates along a plane and a second display of the content items along a parallel plane. Here the dates can be associated with the content items. For example the dates can be the dates the images were created the dates of events associated with the images the dates the images were captured the dates the images were received etc. The presentation of content items can also include an event based presentation of content items. The event based presentation of content items can include a first display of content item details along a plane and a second display of the content items along a parallel plane. The content item details can include dates associated with the content items events associated with the content items descriptions associated with the content items names associated with the content items locations associated with the content items people associated with the content items and so forth.

The visible portion of the web page can refer to the portion of the web page that is currently being displayed. The portions of the web page outside of the visible portion are not visible in the sense that these portions are not currently displayed. However these portions of the web page can have loaded elements including images and or elements having different visibility states and attributes including visible and hidden attributes. Thus the portions of the web page outside the visible portion while not displayed under the current view can have a visible state and or attribute.

Moreover the visible portion of the web page can include a different view of the presentation of content items when the current position within the web page changes. For example the visible portion of the web page can present different content items as a user navigates and or scrolls through the web page. Further a current view of the presentation of content items can fade out and the different view of the presentation of content items can fade in as the current position within the web page changes.

Also the web page can be configured to detect a scroll event and dynamically update the visible portion of the web page based on the scroll event. For example the web page can be configured to detect a movement of a scroll bar in a web browser window associated with the web page and dynamically update the visible portion of the web page to present the different view of the presentation of content items and or a different view of the continuous presentation of the set of content items. The scroll bar can be operable to allow the user to scroll through the continuous presentation of the set of content items and or web page. The user can move through the web page by using the scroll bar to scroll swiping a finger or pointing device on the screen and or clicking on a link anchor pointing to a different portion of the web page.

The different view of the presentation of content items and or the different view of the continuous presentation of the set of content items can be associated with the position of the scroll bar resulting from the scroll event. For example the different view can be based on one or more content items mapped to an area of the web page or having a placeholder in an area of the web page that corresponds to the specific scroll bar position in the web browser window. The different view can also be associated with the position of the web page relative to the display and or web browser.

The web page can be configured to detect scrolling events to dynamically load and unload content items at the respective placeholder based on a current position of the web page and or scroll bar. Here the web page can load content items in portions of the web page located in the same direction of the detected movement and or scrolling event. The web page can also unload content items in portions of the web page located away from the direction of the movement and or scrolling event. The web page can determine the timing and or content items for dynamically loading and unloading content items based on one or more factors including the size of the set of content items the memory available for use by the browser the size of individual content items the scrolling speed the total number of content items the type of browser etc. When unloading content items the web page can hide or remove the content items from the Document Object Model DOM of the browser but can also keep placeholders for the unloaded content items.

Furthermore the content management system can generate and transmit instructions for updating the web page based on changes made to the set of content items. For example the content management system can add edit and or delete one or more content items or folders from the set of content items and transmit instructions to the web browser for updating the web page to add or remove placeholders for any content items that were added or deleted from the set of content items.

The web page can be a single continuous web page having a respective placeholder for each of the content items in an area of the web page that is relative to the visible portion of the web page. The single continuous web page can display without pagination more content items than can be stored at the memory available for use by the web page. Thus the single continuous web page can display an entire library of content items on a browser that does not have enough memory to load the entire library of content items without causing the browser to crash.

The continuous presentation of the set of content items can include a listing of the content items from the set of content items arranged by date name album size location event type format and so forth. For example the content items can be arranged in chronological order or reverse chronological order. Moreover the continuous presentation of the set of content items can also include a first display of dates along a plane and a second display of the content items along a parallel plane. Here the dates can be associated with the content items. For example the dates can be the dates the content items were created the dates of events associated with the content items the dates the content items were captured the dates the content items were received etc. The continuous presentation of the set of content items can also include a first display of content item details along a plane and a second display of the content items along a parallel plane. The content item details can include dates associated with the content items events associated with the content items descriptions associated with the content items names associated with the content items locations associated with the content items people associated with the content items and so forth.

The visible portion of the web page can refer to the portion of the web page that is currently being displayed. The portions of the web page outside of the visible portion are not visible in the sense that these portions are not currently displayed. However these portions of the web page can have loaded elements including images and or elements having different visibility states and attributes including visible and hidden attributes. Thus the portions of the web page outside the visible portion while not displayed under the current view can have a visible state and or attribute.

The visible portion of the web page can include an event based presentation of content items from the set of content items where content items in the event based presentation of content items can have placeholders in a portion of the web page that is associated with a current position within the web page. Moreover the visible portion of the web page can include a different view of the event based presentation of content items when the current position within the web page changes. For example the visible portion of the web page can present different content items as a user navigates and or scrolls through the web page. Further a current view of the event based presentation of content items can fade out and the different view of the event based presentation of content items can fade in as the current position within the web page changes.

Also the web page can be configured to detect a scroll event and dynamically update the visible portion of the web page based on the scroll event. For example the web page can be configured to detect a movement of a scroll bar in a web browser window associated with the web page and dynamically update the visible portion of the web page to present the different view of the event based presentation of content items and or a different view of the continuous presentation of the set of content items. The scroll bar can be operable to allow the user to scroll through the continuous presentation of the set of content items and or web page. The different view of the event based presentation of content items and or the different view of the continuous presentation of the set of content items can be associated with the position of the scroll bar resulting from the scroll event. For example the different view can be based on one or more content items mapped to an area of the web page or having a placeholder in an area of the web page that corresponds to the specific scroll bar position in the web browser window.

Moreover the web page can be configured to detect scrolling events to dynamically load and unload content items at the respective placeholder based on a current position of the web page and or scroll bar. Here the web page can load content items in portions of the web page located in the same direction of the detected movement and or scrolling event. The web page can also unload content items in portions of the web page located away from the direction of the movement and or scrolling event. The web page can determine the timing and or content items for dynamically loading and unloading content items based on one or more factors including the size of the set of content items the memory available for use by the browser the size of individual content items the scrolling speed the total number of content items the type of browser etc. When unloading content items the web page can hide or remove the content items from the Document Object Model DOM of the browser but can also keep placeholders for the unloaded content items.

Furthermore the content management system can generate and transmit instructions for updating the web page based on changes made to the set of content items. For example the content management system can add edit and or delete one or more content items or folders from the set of content items and transmit instructions to the web browser for updating the web page to add or remove placeholders for any content items that were added or deleted from the set of content items.

Upon receiving the request to navigate to the second portion of the set of content items client device can check if all of the content items in the second portion of the set of content items are currently loaded in their respective placeholders within the continuous presentation of the set of content items . As previously described the off view portion can include placeholders for content items to be loaded but can also have content items already loaded at their respective placeholders. Thus since the second portion of the set of content items is an off view portion it can have placeholders for content items and or loaded content items. If all of the content items are currently loaded client device can update the current view of the continuous presentation of the set of content items to display the second portion of the set of content items . If there are content items in the second portion that are not already loaded client device can load the content items in the second portion of the set of content items that are not currently loaded in their respective placeholders within the continuous presentation of the set of content items . Client device can update the current view of the continuous presentation of the set of content items to display the second portion of the set of content items .

Next client device can check if any of the set of content items that are not displayed under the updated current view are currently loaded in their respective placeholders within the continuous presentation of the set of content items . If so client device can unload one or more of the loaded content items that are not displayed under the updated current view . Unloading content items that are not in display can help minimize the memory resources used by the continuous presentation of the set of content items. This way client device can load and unload content items as needed for display. Thus the system can load content items as the current view changes and the content items move closer toward the in view portion of the continuous presentation of the set of content items. Similarly client device can unload content items as the current view changes and the content items move farther away from the in view portion of the continuous presentation of the set of content items.

Client device can dynamically load and unload content items as the current view changes. In some embodiments client device can unload the content items that are farthest away from the in view portion of the continuous presentation of the set of content items. In other embodiments the system can determine which content items to load and unload based on various factors such as the content item s proximity to the display area the total size of the set of content items the size of the individual content items the number of content items the scrolling or navigation speed the browser memory the user preferences the browser type the memory at the device etc.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

