---

title: Touch identification for multi-touch technology
abstract: A first plurality of contact locations may be determined in view of a first scan of a touch-sensing surface and a second plurality of contact locations may be determined in view of a second scan of the touch-sensing surface. A number of total contact locations may be identified in view of the first plurality of contact locations and the second plurality of contact locations. Furthermore, a first correlation process may be performed when the number of total contact locations satisfies a threshold number and a second correlation process may be performed when the number of total contact locations does not satisfy the threshold number.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09310927&OS=09310927&RS=09310927
owner: PARADE TECHNOLOGIES, LTD.
number: 09310927
owner_city: Santa Clara
owner_country: US
publication_date: 20131226
---
This application is a continuation of U.S. application Ser. No. 12 767 722 filed Apr. 26 2010 which claims priority to U.S. Provisional Patent Application No. 61 172 338 filed Apr. 24 2009 all of which are incorporated by reference herein in their entirety.

This disclosure relates to the field of user interface devices and in particular to identification of multiple touches at a touch sensing surface.

Computing devices such as notebook computers personal data assistants PDAs kiosks and mobile handsets have user interface devices which are also known as human interface devices HID . One user interface device that has become more common is a touch sensor pad also commonly referred to as a touchpad . A basic notebook computer touch sensor pad emulates the function of a personal computer PC mouse. A touch sensor pad is typically embedded into a PC notebook for built in portability. A touch sensor pad replicates mouse X Y movement by using two defined axes which contain a collection of sensor elements that detect the position of an object such as a finger. Mouse right left button clicks can be replicated by two mechanical buttons located in the vicinity of the touchpad or by tapping commands on the touch sensor pad itself. The touch sensor pad provides a user interface device for performing such functions as positioning a pointer or selecting an item on a display. These touch sensor pads may include for example sensor arrays having two dimensions for detecting movement in a plane. The sensor array may include a one dimensional sensor array detecting movement in one axis. The sensor array may also be two dimensional detecting movements in two axes.

Another user interface device that has become more common is a touch screen. Touch screens also known as touchscreens touch panels or touchscreen panels are transparent display overlays which are typically either pressure sensitive resistive or piezoelectric electrically sensitive capacitive acoustically sensitive surface acoustic wave SAW or photo sensitive infrared . The effect of such overlays allows a display to be used as an input device removing or augmenting the keyboard and or the mouse as the primary input device for interacting with the display s content. Such displays can be attached to computers or as terminals to networks. There are a number of types of touch screen technologies such as optical imaging resistive surface acoustical wave capacitive infrared dispersive signal piezoelectric and strain gauge technologies. Touch screens have become familiar in retail settings on point of sale systems on ATMs on mobile handsets on kiosks on game consoles and on PDAs where a stylus is sometimes used to manipulate the graphical user interface GUI and to enter data. A user can touch a touch screen or a touch sensor pad to manipulate data. For example a user can apply a single touch by using a finger to touch the surface of a touch screen to select an item from a menu.

The following description sets forth numerous specific details such as examples of specific systems components methods and so forth in order to provide a good understanding of several embodiments of the present invention. It will be apparent to one skilled in the art however that at least some embodiments of the present invention may be practiced without these specific details. In other instances well known components or methods are not described in detail or are presented in a simple block diagram format in order to avoid unnecessarily obscuring the present invention. Thus the specific details set forth are merely exemplary. Particular implementations may vary from these exemplary details and still be contemplated to be within the spirit and scope of the present invention.

In one embodiment a touch sensing surface having row and column sensor elements may report touch contact locations using a coordinate system and said touch locations may be reported paired with a touch or finger identifier. A touch controller performing a scan of such a touch sensing surface may scan each row and column element and store data from such scan in a memory where it is analyzed to determine contact locations. Said data is normally processed in a particular sequence such that if multiple contacts are present at the touch sensing surface each of the contacts is detected in a particular order. In some situations it is possible that multiple contacts detected by a first scan may be detected in a different order in a subsequent second scan if the contacts have moved between the first and second scans.

For example illustrates a touch sensing surface on which two contacts and are present. Contact designates a location of contact as detected by a first scan and contact designates a location of contact as detected by a second scan. Contact does not move and is therefore detected at the same location by the first and second scans. The contacts and may represent touches by a first finger and a second finger respectively. In accord with the illustration of the first finger may remain stationary on the touch sensing surface while the second finger moves from location to . Each scan of the touch sensing surface begins at location and proceeds in direction to end at location . Following scanning the measured touch information may be analyzed to determine touch contact locations and correlation of said locations with contacts identified in a prior scan.

If the data analysis is performed following the same sequence as when the panel was scanned the first scan will detect contact first and contact second. In the subsequent second scan however contact will be detected first and contact will be detected second.

Thus the order of detection during data analysis may not be a reliable way to correlate contacts detected by a first scan with contacts detected by a subsequent scan. With regard to the example of due to their motion between scans the contacts and may not be reliably recognized between the two scans as having been caused by the same finger. In one embodiment the inability to accurately correlate contacts from one scan to the next may make applications such as multi touch gesture recognition and other advanced user interface UI software unreliable.

In one embodiment a touch controller may use multiple methods to correlate contacts from one scan to a subsequent scan. For example a least squares method and a nearest neighbor method may be implemented by a touch controller to correlate up to five or more contacts at the touch sensing surface. In one embodiment this scheme reduces the amount of computation used for correlating contacts such that up to five fingers can be identified and tracked on a touch sensing surface using a low computation integrated circuit IC such as a 4 MIPS IC. In one embodiment the maximum number of contacts that can be tracked and correlated depends on the processor throughput.

In one embodiment the two methods being used may differ in complexity. A least squares method for example may be more computationally complex O N or O N than a nearest neighbor method O N . The more accurate but more computationally complex method may be used when less than a threshold number of contacts is detected at the touch sensing surface.

In one embodiment of a method for tracking contact locations between scans a contact identifier may be assigned to each contact location detected by a scan. The contact identifier may uniquely identify a contact from one scan to a subsequent scan. For example a contact by a finger moving across the touch sensing surface may have a contact identifier unique from all other contacts at the touch sensing surface. Each of the contact locations on subsequent scans having the same contact identifier may be caused by the same finger or other object contacting the touch sensing surface.

In one embodiment a touch controller may also identify contacts that have not moved during the time between a first scan and a subsequent scan. The touch controller may exclude the unmoved contacts from the calculations to reduce the amount of computation for performing the correlation process.

In one embodiment the sensor array includes sensor elements N where N is a positive integer that are disposed as a two dimensional matrix also referred to as an XY matrix . The sensor array is coupled to pins N of the processing device via an analog bus transporting multiple signals. In this embodiment each sensor element N is represented as a capacitor. The capacitance of each sensor in the sensor array is measured by a capacitance sensor in the processing device .

In one embodiment the capacitance sensor may include a relaxation oscillator or other means to convert a capacitance into a measured value. The capacitance sensor may also include a counter or timer to measure the oscillator output. The capacitance sensor may further include software components to convert the count value e.g. capacitance value into a sensor element detection decision also referred to as switch detection decision or relative magnitude. It should be noted that there are various known methods for measuring capacitance such as current versus voltage phase shift measurement resistor capacitor charge timing capacitive bridge divider charge transfer successive approximation sigma delta modulators charge accumulation circuits field effect mutual capacitance frequency shift or other capacitance measurement algorithms. It should be noted however instead of evaluating the raw counts relative to a threshold the capacitance sensor may be evaluating other measurements to determine the user interaction. For example in the capacitance sensor having a sigma delta modulator the capacitance sensor is evaluating the ratio of pulse widths of the output instead of the raw counts being over a certain threshold.

In one embodiment the processing device further includes processing logic . Operations of the processing logic may be implemented in firmware alternatively it may be implemented in hardware or software. The processing logic may receive signals from the capacitance sensor and determine the state of the sensor array such as whether an object e.g. a finger is detected on or in proximity to the sensor array e.g. determining the presence of the object where the object is detected on the sensor array tracking the motion of the object or other information related to an object detected at the touch sensor.

In another embodiment instead of performing the operations of the processing logic in the processing device the processing device may send the raw data or partially processed data to the host . The host as illustrated in may include decision logic that performs some or all of the operations of the processing logic . Operations of the decision logic may be implemented in firmware hardware software or a combination thereof. The host may include a high level Application Programming Interface API in applications that perform routines on the received data such as compensating for sensitivity differences other compensation algorithms baseline update routines start up and or initialization routines interpolation operations orientation operations or scaling operations. The operations described with respect to the processing logic may be implemented in the decision logic the applications or in other hardware software and or firmware external to the processing device . In some other embodiments the processing device is the host .

In another embodiment the processing device may also include a non sensing actions block . This block may be used to process and or receive transmit data to and from the host . For example additional components may be implemented to operate with the processing device along with the sensor array e.g. keyboard keypad mouse trackball LEDs displays or other peripheral devices .

The processing device may reside on a common carrier substrate such as for example an integrated circuit IC die substrate or a multi chip module substrate. Alternatively the components of the processing device may be one or more separate integrated circuits and or discrete components. In one embodiment the processing device may be the Programmable System on a Chip PSoC processing device developed by Cypress Semiconductor Corporation San Jose Calif. Alternatively the processing device may be one or more other processing devices known by those of ordinary skill in the art such as a microprocessor or central processing unit a controller special purpose processor digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable device. In an alternative embodiment for example the processing device may be a network processor having multiple processors including a core unit and multiple micro engines. Additionally the processing device may include any combination of general purpose processing device s and special purpose processing device s .

In one embodiment the electronic system is implemented in a device that includes the touch sensing surface as the user interface such as handheld electronics portable telephones cellular telephones notebook computers personal computers personal data assistants PDAs kiosks keyboards televisions remote controls monitors handheld multi media devices handheld video players gaming devices control panels of a household or industrial appliances or other computer peripheral or input devices. Alternatively the electronic system may be used in other types of devices. It should be noted that the components of electronic system may include all the components described above. Alternatively electronic system may include only some of the components described above or include additional components not listed herein.

Capacitance sensor includes multiplexer control demultiplexer and multiplexer clock generator signal generator demodulation circuit and analog to digital converter ADC . ADC is further coupled with touch coordinate converter . Touch coordinate converter outputs a signal to the processing logic .

The transmit and receive electrodes in the electrode matrix may be arranged so that each of the transmit electrodes overlap and cross each of the receive electrodes such as to form an array of intersections while maintaining galvanic isolation from each other. Thus each transmit electrode may be capacitively coupled with each of the receive electrodes. For example transmit electrode is capacitively coupled with receive electrode at the point where transmit electrode and receive electrode overlap.

Clock generator supplies a clock signal to signal generator which produces a TX signal to be supplied to the transmit electrodes of touch sensor . In one embodiment the signal generator includes a set of switches that operate according to the clock signal from clock generator . The switches may generate a TX signal by periodically connecting the output of signal generator to a first voltage and then to a second voltage wherein said first and second voltages are different.

The output of signal generator is connected with demultiplexer which allows the TX signal to be applied to any of the M transmit electrodes of touch sensor . In one embodiment multiplexer control controls demultiplexer so that the TX signal is applied to each transmit electrode in a controlled sequence. Demultiplexer may also be used to ground float or connect an alternate signal to the other transmit electrodes to which the TX signal is not currently being applied.

Because of the capacitive coupling between the transmit and receive electrodes the TX signal applied to each transmit electrode induces a current within each of the receive electrodes. For instance when the TX signal is applied to transmit electrode through demultiplexer the TX signal induces an RX signal on the receive electrodes in matrix . The RX signal on each of the receive electrodes can then be measured in sequence by using multiplexer to connect each of the N receive electrodes to demodulation circuit in sequence.

The mutual capacitance associated with each intersection between a TX electrode and an RX electrode can be sensed by selecting every available combination of TX electrode and an RX electrode using demultiplexer and multiplexer . To improve performance multiplexer may also be segmented to allow more than one of the receive electrodes in matrix to be routed to additional demodulation circuits . In an optimized configuration wherein there is a 1 to 1 correspondence of instances of demodulation circuit with receive electrodes multiplexer may not be present in the system.

When an object such as a finger approaches the electrode matrix the object causes a decrease in the mutual capacitance between only some of the electrodes. For example if a finger is placed near the intersection of transmit electrode and receive electrode the presence of the finger will decrease the mutual capacitance between electrodes and . Thus the location of the finger on the touchpad can be determined by identifying the one or more receive electrodes having a decreased mutual capacitance in addition to identifying the transmit electrode to which the TX signal was applied at the time the decreased mutual capacitance was measured on the one or more receive electrodes.

By determining the mutual capacitances associated with each intersection of electrodes in the matrix the locations of one or more touch contacts may be determined. The determination may be sequential in parallel or may occur more frequently at commonly used electrodes.

In alternative embodiments other methods for detecting the presence of a finger or conductive object may be used where the finger or conductive object causes an increase in capacitance at one or more electrodes which may be arranged in a grid or other pattern. For example a finger placed near an electrode of a capacitive sensor may introduce an additional capacitance to ground that increases the total capacitance between the electrode and ground. The location of the finger can be determined from the locations of one or more electrodes at which an increased capacitance is detected.

The induced current signal is rectified by demodulation circuit . The rectified current output by demodulation circuit can then be filtered and converted to a digital code by ADC .

The digital code is converted to touch coordinates indicating a position of an input on touch sensor array by touch coordinate converter . The touch coordinates are transmitted as an input signal to the processing logic . In one embodiment the input signal is received at an input to the processing logic . In one embodiment the input may be configured to receive capacitance measurements indicating a plurality of row coordinates and a plurality of column coordinates. Alternatively the input may be configured to receive row coordinates and column coordinates.

In one embodiment the sensor array can be configured to detect multiple touches. One technique for multi touch detection uses a two axis implementation one axis to support rows and another axis to support columns. Additional axes such as a diagonal axis implemented on the surface using additional layers can allow resolution of additional touches.

In one embodiment a touch sensing surface including a sensor array may be scanned by a touch controller in a sequence according to . The touch controller may be implemented in processing device . As previously discussed when a contact moves during the time between scans the order in which the contact is detected relative to other contacts such as contact may be changed. For example following a first scan with contacts at location and the contact at location is detected before the contact at location . Following a subsequent scan with contacts at locations and the contact at location is detected by the scan before the contact at location .

In one embodiment the touch controller may assign a contact identifier to each contact location detected following a scan. In one embodiment the contact identifier is a number or other code that is unique from all other contact identifiers associated with a scan. In one embodiment the same contact identifiers may be associated with contact locations detected following another scan such that contact locations detected following different scans but having the same contact identifier are designated as resulting from the same contact at the touch sensing surface.

For example in the case of fingers moving across the touch sensing surface each finger will have first contact location detected by a first scan and a second contact location detected by a subsequent scan. The touch controller may associate each set of contact location coordinates with a contact identifier. The touch controller can then track the movements of individual fingers across the touch sensing surface.

In one embodiment the touch controller assigns the appropriate contact identifier to each contact locations detected by subsequent scans using a search method such as a least squares method or a nearest neighbor method.

In one embodiment a combination of search methods may be used to correlate the contact locations from one scan to the next. In one embodiment the computation power used to perform the search methods and the resulting accuracy of the search methods may differ. For example one embodiment of a touch controller may use a more accurate least squares method high computation power in combination with a less accurate nearest neighbor method low computation power .

In one embodiment the touch controller may operate in a first mode using the least squares method for correlating touch contacts between two scans when the number of contacts is less than or equal to a threshold number of contacts. In response to the number of contacts exceeding the threshold the touch controller may switch to a second mode where the touch controller correlates the detected contact locations using the nearest neighbor method. For example the least squares method may be used to correlate all of the detected contacts between scans when up to three contacts are detected at the touch sensing surface. The nearest neighbor method may be used to correlate all of the detected contacts when more than three contacts are detected.

In one embodiment the touch controller identifies touch contacts that have not moved in the time between the first scan and the following scan and excludes the unmoved contacts from the correlation process. For example the touch controller may identify an unmoved contact from a contact location detected by the first scan that is identical or within a small threshold distance from a contact location detected by the second scan. The touch controller may then exclude the unmoved contact along with any other unmoved contacts from the least squares or nearest neighbor calculations. Note that the number of unmoved contacts may then be subtracted from the total number of contacts to determine which of the least squares of nearest neighbor methods to use.

In one embodiment a reliable method for correlating contact locations detected by two or more sequential scans is the least squares method. The least squares calculation is based on searching for the minimum of the sum of the squares of the distance of two neighboring contact locations as described by Equation 1 below. min Equation 1 

In Equation 1 n is the number of contacts and L is the distance between contact locations detected at times t1 and t2. The number of possible combinations of the sums of distances is n factorial n .

With reference to Table 1 a touch controller performing the least squares calculation on the contacts calculates a sum of squared distances for each possible combination of correlations. For example combination 3 in Table 1 correlates contact location with with and with . For this combination the sum of squared distances S3 is calculated by calculating the distances D D and Dbetween each pair of corresponding contact locations of combination 3 and summing the squared distances. The least squares determination includes a similar calculation for each of the combinations 1 6 to determine a sum of squared distances S1 S6 associated with each combination. The combination having the smallest sum of squared distances is accepted as an accurate correlation. For example if S1 is the smallest among the sums S1 S6 then combination 1 correlating with with and with is accepted as an accurate correlation.

In one embodiment each pair of correlated contact locations may be assigned a unique contact identifier. In one embodiment the correlation process may be repeated with subsequent scans to correlate contact locations detected over a series of scans.

In one embodiment the time for performing the least squares calculation for correlating contact locations between subsequent scans increases with the number of contacts for which the calculation is performed. Table 2 below lists the time used for the least squares calculation when 0 5 contacts are being correlated according to an embodiment using a CY8CTMA120 touch controller manufactured by Cypress Semiconductor Corporation of San Jose Calif. at 5V and 24 MHz.

As described in Table 2 the time for performing a least squares calculation increases from 1.32 milliseconds ms for three contacts to 13.34 ms for five contacts. Since the increase in calculation time can cause a delay in the response time of a touch panel or other device in which the correlation process is performed a simpler and less computation intensive calculation such as a nearest neighbor method may be used when the number of contacts exceeds a threshold number of contacts. For example a touch controller may use the least squares method to correlate contacts between subsequent scans when the number of contacts is less than or equal to the threshold number of three contacts and may use the nearest neighbor method to correlate the contacts when the number of contacts is greater than three contacts.

The nearest neighbor method is illustrated in . With reference to the maximum distances and define maximum distances from contact locations and detected by a scan. Upon detecting the contacts at locations and during a scan of the touch sensing surface a touch controller may correlate the newly detected contact locations and with contact locations and detected by a previous scan.

A touch controller implementing the nearest neighbor method correlates the contact location with a contact location by searching within a predefined maximum distance from the contact location . According to the nearest neighbor method the contact location within the maximum distance that is nearest to the contact location is identified by the touch controller as having been caused by the same object contacting the touch sensing surface such as a finger.

In an alternative embodiment the touch controller implementing the nearest neighbor method does not limit the search to the area within the max distance threshold or but may search a larger area such as the entire touch sensing surface.

In one embodiment the nearest neighbor method may be performed by comparing distance between contact locations. For example a touch controller that is determining which of the contact locations or corresponds to contact location may compare distance D between and and D between and . Since Dis less than D and Dis also less than the max distance the contact location is identified as corresponding to contact location .

In one embodiment once the contact location is correlated with the contact location may be correlated with by default. Alternatively the nearest neighbor calculations may be performed again for contact location .

In one embodiment the nearest neighbor method can be used to correlate all of the contact location from a scan when more than a threshold number of contacts is detected. When less than or equal to the threshold number of contacts is detected the more accurate and more computationally intensive least squares method may be used. Assuming that the movement speed of contacts decreases when more contacts are being applied to the touch sensing surface such as when multiple fingers are applied to a touchpad the use of a faster correlation method such as the nearest neighbor method does not cause a noticeable decrease in correlation accuracy.

In one embodiment the touch controller assigns a unique contact identifier to each corresponding contact location identified by the correlation process.

In one embodiment the touch controller may switch modes between using a first correlation process such as a least squares calculation and a second correlation process such as a nearest neighbor calculation based on other factors besides or in addition to the number of contacts detected at the touch sensing surface. For example the touch controller may switch modes based on a direction of movement of contact locations as indicated by a vector between previously correlated contact locations. Alternatively the touch controller may switch modes based on an acceleration of the contact. For example if the contact is accelerating the touch controller may switch from a more computationally intensive correlation process such as the least squares method to a faster correlation process such as the nearest neighbor method.

In one embodiment the touch controller may switch modes based on the size of one or more contacts at the touch sensing surface. For example in an embodiment where the touch sensing surface is used to simulate buttons a larger contact area being applied to the touch sensing surface i.e. by a finger may indicate a button press rather than a gesture. Accordingly the touch controller may switch modes to a less accurate and faster correlation method when accurate correlation of moving contacts is less important.

In one embodiment the touch controller may switch modes based on a power mode or other operating mode of the touch controller or an electronic device in which the touch controller is implemented. For example the touch controller may switch to a faster and less computationally intensive correlation process when the electronic device is switched to a power conserving mode to reduce the power consumption of the touch controller. In one embodiment the touch controller may switch based on remaining battery life of the electronic device or whether the electronic device is plugged into a power source such as an outlet.

In one embodiment the touch controller may switch modes based on a heuristic that tracks the behavior of a user. For example such a heuristic may determine that a user of the touch sensing surface typically makes slow gestures meaning that the contact locations change little in between scans. Accordingly the touch controller may switch to a less accurate and less computationally intensive correlation process i.e. nearest neighbor . In one embodiment the touch controller may switch modes based on the spacing between contacts size or other characteristics of a user s gestures.

In one embodiment the touch controller may switch modes based on the application for which the touch sensing surface is used. For example in an electronic device running a drawing application the touch controller may switch to a more accurate correlation process such as least squares. The touch controller in the same electronic device may switch to a faster correlation process such as nearest neighbor when speed is important such as when a game is being played.

In one embodiment the touch controller may switch modes based on user settings. For example a user may specify the threshold above which the touch controller switches modes.

The correlation process begins at block . At block the touch controller performs a scan of the touch sensing surface to determine a first plurality of contact locations. The first plurality of contact locations includes a first contact location. From block the process continues at block .

At block the touch controller assigns one of a plurality of contact identifiers to each of the first plurality of contact locations. In one embodiment the contact identifier may be a sequence of numbers or a digital code that is unique for each of the contact locations in a given set of contact locations detected by the same scan. In one embodiment the assignment of contact identifiers to the first plurality of contact locations may be accomplished using a correlation process similar to process . From block the process continues at block .

At block the touch controller scans the touch sensing surface to determine a second plurality of contact locations. The second plurality of contact locations includes a second contact location. From block the process continues at block .

At block the touch controller identifies contact locations that have not moved between the first scan and the second scan. In one embodiment the touch controller subtracts the unmoved contact locations from the number of contacts to be compared to the threshold number at block . From block the process continues at block .

At block the touch controller determines whether the number of contacts is less than or equal to a first threshold number. In one embodiment the number of contacts is based on the number of contact locations of either the first plurality of contact locations or the second plurality of contact locations. If the actual number of contacts based on the results of the first or second scan is not less than or equal to the threshold number of contacts the process continues at block . In one embodiment the threshold number of contacts may be three or may be some other number of contacts for which the time for performing a least squares or other computation intensive correlation method is less than a predetermined time.

At block the touch controller determines whether the number of actual contacts is greater than a second threshold number. In one embodiment the second threshold number is the same as the first threshold number. For example the first threshold and the second threshold numbers may be three such that if the actual number of contacts is less than or equal to three the process continues from block to block but when the actual number of contacts is greater than three the process continues from block to to .

In an alternative embodiment the second threshold number is higher than the first threshold number. In this case if the actual number of contacts does not satisfy the conditions of blocks and the process may perform some other operation not shown such as continuing to process the contact locations using another correlation method different from the least squares or nearest neighbor methods. Thus such an embodiment may use three or more different correlation methods which may or may not include the least squares or nearest neighbor methods selecting an appropriate correlation method based on whether the number of contacts detected falls within a certain range.

The process arrives at block from block having determined that the number of actual contacts minus those that have not moved is less than or equal to the threshold number of contacts. At block the touch controller performs a least squares calculation to correlate the second contact locations with the first contact locations.

The process arrives at block from block when the number of actual contacts minus those that have not moved is greater than the threshold number of contacts. At block the touch controller performs a nearest neighbor calculation to correlate the second contact location with the first contact location.

From block or the process continues at block . At block the touch controller in response to correlating the second contact location with the first contact location assigns a contact identifier of the first contact location to the associated second contact location. In one embodiment if the least squares calculation was used the correlation of the second contact location with the first contact location may occur along with the correlation of the other second scan contact locations with corresponding first scan contact locations. Alternatively if a method such as the nearest neighbor calculation is used the contacts may be correlated independently in sequence. From block the process continues at block .

At block the touch controller determines if all the contact locations of the second plurality of contacts detected by the second scan have been processed. In one embodiment the contact locations of the second plurality of contacts have been processed when all of the second plurality of contact locations has been either correlated with one of the first plurality of contacts or determined to be a new contact without a corresponding contact location from the first plurality of contact locations. At block if all the second scan contact locations have not been processed the process continues at block where another contact location from the second plurality of contacts is selected as the second contact location. The newly selected second contact location is then processed according to blocks . By these operations each of the second plurality of contact locations is processed in turn. At block if all the second scan contact locations have been processed the process continues back to block where the touch controller performs the next scan of the touch sensing surface.

The least squares process begins at block . At block the touch controller determines a plurality of combinations pairing each of the second plurality of contact locations detected by the second scan with a contact location from the first plurality of contact locations detected by the first scan . For example with reference to Table 1 the touch controller may identify six possible correlation combinations for a first scan with three contact locations and and a second scan with three contact locations and . Each of the combinations pairs one of the second plurality of contact locations with one of the first plurality of contact locations. From block the process continues at block .

At block the touch controller calculates for each of the combinations identified at block a squared distance between the two contact locations in each pair of contact locations. For example with reference to Table 1 the touch controller squares the distances D D and Dfor combination 1. Combination 1 pairs with with and with corresponding to the distances D D and D. The touch controller similarly squares the distances for each of the other possible combinations 2 6. From block the process continues at block .

At block for each combination the touch controller sums the squared distance for all the pairs of contact locations. With reference to Table 1 the touch controller may add the squared distances together for each of the combinations 1 6. From block the process continues at block .

At block the touch controller identifies the combination having the lowest sum of squared distances. For example with reference to Table 1 the touch controller may search for the lowest value from among the sums S1 S2 S3 S4 S5 and S6. In one embodiment the combination having the lowest sum of squared distances represents an accurate correlation of contact locations from the second scan with contact locations from the first scan. For example if S1 is the lowest sum then the touch controller correlates the contacts according to combination 1 which pairs contact locations with with and with . In one embodiment the touch controller may then proceed to block of process where the appropriate contact identifiers are assigned to the contact locations.

The nearest neighbor process begins at block . At block the touch controller calculates a distance between a second contact location from the second plurality of contact locations detected by the second scan and each of the contact locations of the first plurality of contact locations detected by the first scan . For example with reference to the touch controller may calculate distances Dand Dbetween contact location detected by a second scan and each of the contact locations and detected by a previous scan. From block the process continues at block .

At block the touch controller finds a contact location corresponding to the shortest distance that is less than the maximum distance. For example with reference to the distance Dis the shortest distance and is also less than the maximum distance . The contact location corresponding to distance Dis therefore selected as the nearest neighbor to . From block the process continues at block of process .

At block the contact identifier of the nearest neighbor identified at block which is treated as the first contact location is assigned to the second contact location to correlate the second contact location with the first contact location. For example the contact identifier of contact location determined to be the nearest neighbor to contact location is assigned to the contact location to correlate with . Thus and have the same contact identifiers and can be treated as having been caused by the same objects such as fingers in continuous contact with the touch sensing surface.

By using the nearest neighbor process for a larger number of contacts and the least squares process for a smaller number of contacts the process may correlate contacts between scans without noticeably degrading the responsiveness of a touchpad or touchscreen.

Embodiments of the present invention described herein include various operations. These operations may be performed by hardware components software firmware or a combination thereof. As used herein the terms coupled to or coupled with may mean coupled directly or indirectly through one or more intervening components. Any of the signals provided over various buses described herein may be time multiplexed with other signals and provided over one or more common buses. Additionally the interconnection between circuit components or blocks may be shown as buses or as single signal lines. Each of the buses may alternatively be one or more single signal lines and each of the single signal lines may alternatively be buses.

Certain embodiments may be implemented as a computer program product that may include instructions stored on a computer readable medium. These instructions may be used to program a general purpose or special purpose processor to perform the described operations. A computer readable medium includes any mechanism for storing or transmitting information in a form e.g. software processing application readable by a machine e.g. a computer . The computer readable storage medium may include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory or another type of medium suitable for storing electronic instructions. The computer readable transmission medium includes but is not limited to electrical optical acoustical or other form of propagated signal e.g. carrier waves infrared signals digital signals or the like or another type of medium suitable for transmitting electronic instructions.

Additionally some embodiments may be practiced in distributed computing environments where the computer readable medium is stored on and or executed by more than one computer system. In addition the information transferred between computer systems may either be pulled or pushed across the transmission medium connecting the computer systems.

Although the operations of the method s herein are shown and described in a particular order the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operation may be performed at least in part concurrently with other operations. In another embodiment instructions or sub operations of distinct operations may be in an intermittent and or alternating manner.

In the foregoing specification the invention has been described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

