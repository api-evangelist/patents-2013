---

title: Segmented source routing in a network
abstract: A method implemented in a network controller configured to perform source routing, the method comprising receiving a request from a network node to determine a path for transporting a data packet from a source node to a destination node, determining the path to transport the data packet from the source node to the destination node, partitioning a description of the path into a plurality of route segments, and distributing the route segments to one or more network nodes to append routing information to the data packet, wherein the network nodes route the data packet using the appended routing information and without using a forwarding table, and wherein each of the route segments describes a portion of the path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09325609&OS=09325609&RS=09325609
owner: Futurewei Technologies, Inc.
number: 09325609
owner_city: Plano
owner_country: US
publication_date: 20130823
---
Software defined networking SDN is a form of network architecture in which a control plane is separated from a data plane and implemented as a software application. This architecture allows network administrators to have programmable logically centralized control of network traffic without requiring physical access to the network s hardware devices. Thus SDN decouples network control learning and forwarding decisions from network topology junctions interfaces and how they peer . Decoupling network control from network topology enables better routing decisions and resource utilization based on centrally collected and managed global network topology states and applications or traffic flow patterns. SDN may simplify network operations since centralized controller can pre specify an alternate routing path and configure network equipment automatically and global definitions per identity do not have to be matched to each and every interface location. The basic approach to achieve decoupling of the network control from the network topology is to apply globally aware and topology decoupled software control at the edges of the network. The assumption is that traditional topology coupled bridging and routing drives the core of the network so that scalability interoperability high availability and extensibility of Internet Protocol IP networks can be maintained.

Some of the network nodes within a SDN network may operate in the data plane to forward data to other network nodes within the SDN network. Typically network nodes may obtain forwarding tables from a SDN controller and use the forwarding tables to route and forward data to other network nodes. Using forwarding tables unfortunately increases route convergence time and routing latency. Source routing as described in the Internet Engineering Task Force IETF document draft ashwood sdnrg state reduction 00.txt entitled SDN State Reduction published Jul. 3 2013 which is incorporated herein as if reproduced in its entirety simplifies data forwarding network nodes and reduces routing time and latency when compared to using a forwarding table. Specifically source routing appends and records the entire routing information for a path within the data packet. Instead of performing lookup functions using the forwarding table a network node uses the routing information in a data packet to forward the data packet. However long and complex paths may have large amounts of route information to represent the entire path. As a result appending the entire route information to a data packet may reduce the effective size of the payload. Therefore a more efficient solution is needed to route data through a SDN network.

In one example embodiment the disclosure includes a network controller configured to perform source routing. The network controller may receive a request from a network node to determine a path for transporting a data packet from a source node to a destination node. After receiving the request the network controller may determine the path to transport the data packet from the source node to the destination node and partition the route information for the path into a plurality of route segments. The route segments may be distributed to one or more network nodes that append the routing information to the data packet. The data packet is then forwarded amongst the network nodes using the appended routing information and without using a forwarding table. Each of the route segments describes a portion of the path from the source node to the destination node.

In another example embodiment the disclosure includes a network controller that determines a complete route to forward a data packet from a source node to a destination node. The network controller may partition a description of the complete route into a plurality of route segments and obtain a segment length variable that determines a number of intermediate nodes between each segmentation node along the complete route. The network controller may distribute the route segments to the segmentation nodes. The segmentation nodes may append routing information to the data packet based on the route segments and the intermediate nodes along the complete route may forward the data packet using the appended routing information and without using a forwarding table.

In yet another example embodiment the disclosure includes a network node configured to perform segmented source routing by receiving a data packet and examining a pointer that references route information appended to the data packet. The network node may subsequently forward the data packet according to route information referenced by the pointer. The route information may represent a portion of all routing information used to route the data packet from a source node to a destination node. The network node may forward the data packet without using a forwarding table.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more example embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

Disclosed herein are various example embodiments to implement segmented source routing in a network such as a SDN network. Segmented source routing means that a data packet may carry some or all of the information so the nodes on the path do not need to search a forwarding table. To minimize overhead and maximize the size of the data packet s payload route information may be partitioned into one or more route segments and distributed to one or more segmentation nodes along a path. Each route segment may describe at least a portion or subset of the route information used to transport a data packet from a source node to a destination node via the path. The segmentation nodes may append route information to data packets traversing along the path. The route information appended to the data packets may be based on the route segment received from a network controller. Intermediate nodes located between the segmentation nodes may forward data to the appropriate network nodes using the route information appended to the data packets and without using a forwarding table.

The network controller may be any network controller configured to perform a variety of control path and or control plane functions such as drawing a network map and defining the information in a route segment that defines how to route incoming packets. In one example embodiment the network controller may be a SDN controller. The network controller may be configured for management and control functionality of the control plane which may include routing and resource management. The network controller may receive messages from and transmit messages to the network nodes via the control plane. The network controller may communicate with the segmentation nodes via a variety of API protocols such as Openflow. The network controller may determine the global network topology of the SDN network . With the global network topology state information dynamic traffic flow volume information and other network state information the network controller may make decisions on how to assign resources and route applications information and or data packet flows though the SDN network .

As one of ordinary skill in the art are aware although the foregoing discussion was directed toward SDN and a SDN network the disclosed technique is not limited to that application and may instead apply equally to a plurality of network architectures and networking techniques that employ a centralized controller with a global view of a network that can control network elements in the network all of which are intended to be encompassed by this disclosure. The use and discussion of a single architecture is served solely to facilitate ease of description and explanation.

At least some of the features methods described in the disclosure may be implemented in a network controller and network nodes such as a segmentation node and intermediate node. For instance the features methods of the disclosure may be implemented using hardware firmware and or software installed to run on hardware. The network controller may be any device that communicates via the control plane e.g. router server SDN controller etc. is a schematic diagram of an example embodiment of a network controller which may be any device configured to provide control plane functions such as network controller shown in . The network controller may also be configured to implement or support the segmented source routing disclosed herein.

The network controller may comprise one or more downstream ports coupled to a transceiver Tx Rx which may be transmitters receivers or combinations thereof. A Tx Rx may be coupled to a plurality of downstream ports for transmitting and or receiving frames from other nodes. Tx Rx may also be coupled to a plurality of upstream ports for transmitting and or receiving frames from other nodes. A processor may be coupled to the Tx Rxs to process the frames and or determine the nodes to which to send frames. The processor may comprise one or more multi core processors and or memory modules which may function as data stores buffers etc. Processor may be implemented as a general processor or may be part of one or more application specific integrated circuits ASICs and or digital signal processors DSPs . The downstream ports and or upstream ports may contain electrical and or optical transmitting and or receiving components. In one example embodiment network controller may be a routing component that makes routing decisions.

The memory modules may be used to house the instructions for carrying out the system and methods described herein. The memory module may comprise a cache for temporarily storing content e.g. a Random Access Memory RAM . Additionally the memory module may comprise a long term storage for storing content relatively longer e.g. a Read Only Memory ROM . For instance the cache and the long term storage may include dynamic random access memories DRAMs solid state drives SSDs hard disks or combinations thereof. The memory module may comprise a source route determination and segmentation block that may be implemented on the processor . Alternatively the source route determination and segmentation block may be implemented directly on the processor . The source route determination and segmentation block may be used to implement method disclosed in . For example the source route determination and segmentation block may be used to determine a path for the data in response to the request generate route information for the path and divide the route information into route segments.

The memory module may further comprise a segment distribution block that may be implemented using processor or alternatively may be implemented directly on processor . The segment distribution block may be configured to distribute the route segments for the corresponding path to one or more segmentation nodes in the network. In one example embodiment segment distribution block may distribute the route segments simultaneously to the segmentation nodes. In another example embodiment the segment distribution block may distribute a first segment to a first segmentation node and then distribute subsequent route segments in response to requests from subsequent segmentation nodes. The source route determination and segmentation block and segment distribution block may be implemented using software hardware or both.

The memory module may comprise a data packet forwarding block that may be implemented on the processor . The data packet forwarding block may be used to implement method shown in . Alternatively the data packet forwarding block may be implemented directly on the processor . The data packet forwarding block may be used to route data packets using routing information within the data packets. In one example embodiment the data packet forwarding block may update routing information contained in a data packet with new routing information received from a network controller. The data forwarding block may also be used to search for and or request an appropriate route segment if one has not yet been received from a network controller after receiving the data packet. The data packet forwarding block may be implemented using software hardware or both.

It is understood that by programming and or loading executable instructions onto the network controller and or segmentation node at least one of the processor and or the cache and the long term storage are changed transforming the network controller and or network node in part into a particular machine or apparatus e.g. a segmented source routing network component having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

In another example embodiment the optimal path to transmit a data packet from the source node to the destination node may be pre determined by the network controller prior to the data packet being received at the segmentation node . In either example embodiment after determining the optimal path the network controller may partition the routing information into smaller route segments . The route segments may comprise information that identifies a subset of links in the network over which the data packet should be forwarded over. The aggregate of the route segments may indicate each link in the network over which a data packet may be transported over to reach a destination node via the optimal path.

As shown in the network controller may transmit and install the route segments and in segmentation nodes and respectively. Each segmentation node may use the route segments to determine the routing information and append the routing information to an incoming data packet. The routing information appended to the data packet may provide information to route the data packet for at least a portion of the optimal path. For example route segment may specify a data packet is to be forwarded over links A B C and D to reach segmentation node from segmentation node . Segmentation node may append routing information that includes information for links A D to the data packet and subsequently forward the data packet over link A based on the appended routing information. Routing information obtained from route segments may be transmitted and appended according to any suitable method well known by one of ordinary skill in the art.

The route segments may be distributed to segmentation nodes in a variety of ways. In one example embodiment before the data packet is received by segmentation node the network controller may transmit and install the respective route segments in each of the segmentation nodes . The network controller may determine which network nodes are segmentation nodes based on a segment length n that is described in more detail below with respect to . Generally a route segment may be installed in the first network node e.g. edge node that receives the frame from source node . In segmentation node may be an edge node and may represent the first network node. Every n network node thereafter along the optimal path through which the data packet may be forwarded may be selected as segmentation nodes . In other words the network controller may distribute route segments to segmentation nodes on a segment boundary e.g. a location at which a data packet is located but has been forwarded through all links provided by the route information appended to the data packet. As shown in the route segments may be installed in segmentation nodes and in a network in which the segment length n is four. Other network nodes may be intermediate nodes which may not receive route segments 

In another example embodiment the network controller may transmit and install a route segment on a segmentation node one at a time. After the data packet has been forwarded through all of the links identified by its current route segment the segmentation node that just received the data packet may determine whether the segmentation node has the correct routing information. If the segmentation node does not have the routing information the segmentation node may request the routing information from network controller . After receiving route segment the segmentation node may append new routing information to the data packet. To determine whether a segmentation node stores the proper routing information the segmentation node may look up routing information using information within the data packet e.g. source address destination address previous route information input port etc. Once the segmentation node has obtained the new route information the segmentation node may replace the previous route information with the new route information prior to forwarding the data packet to the next segmentation node in the network . As shown in the routing information appended to the data packet may comprise output link information next hop network nodes output ports information and or any other suitable information that signals to the segmentation nodes and or intermediate nodes a location to forward the data packet.

In an example embodiment of the network the network may employ strict link source routing in creating route segments . As such the route segments may explicitly describe each and every specific link over which the data packet should be forwarded. In other words the aggregate of route segments may describe the exact route that the data packet will travel from source node to destination node through network and explicitly tell each segmentation node over which link and to what other segmentation node it should forward the data packet.

After appending the routing information segmentation node may forward the data packet based on the routing information appended to the data packet. To determine a location for forwarding the data packet the segmentation node may examine a pointer within the data packet that references the appropriate routing information. The segmentation node may then forward the data packet according to link described in the routing information and identified by the pointer . As shown in the pointer points to link A when forwarding a data packet from segmentation node to the next node along the path e.g. intermediate node . Once intermediate node receives the data packet the intermediate node may also examine the pointer to obtain routing information from the data packet. The intermediate node may not use a forwarding table or any other type of routing table in determining how to forward the data packet. Pointer may be incremented in order to point to the appropriate routing information e.g. link B.

The intermediate nodes may continue to read and increment the attached pointer and forward the data packet accordingly until the data packet reaches the next segmentation node . Segmentation node may then examine the pointer and determine that no other links are referenced in the routing information appended by segmentation node . Segmentation node may search for and or request the next route segment from the network controller and after receiving the route segment replace routing information within the data packet with the routing information obtained from route segment . The segmentation node may then forward the data packet in a manner similar to that of segmentation node . Intermediate network nodes may operate as previously discussed and forward the data packet to the next segmentation node as discussed above.

Returning to routing header the routing header may further comprise a segment or portion of the complete routing path for the data packet . The route segment may comprise n links where n is an integer and where each route segment comprises an identification of one or more network links coupling network elements between which the associated data packet should be forwarded. In an example embodiment of routing header in which the total number of network links over which the data packet should be transmitted is not divisible by n the final route segment may contain m links wherein m is an integer and m 

At least one example embodiment is disclosed and variations combinations and or modifications of the example embodiment s and or features of the example embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative example embodiments that result from combining integrating and or omitting features of the example embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 5 percent . . . 50 percent 51 percent 52 percent . . . 95 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are example embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several example embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various example embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

