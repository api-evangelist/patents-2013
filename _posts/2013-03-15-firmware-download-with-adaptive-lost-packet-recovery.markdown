---

title: Firmware download with adaptive lost packet recovery
abstract: Disclosed are methodologies for implementing a firmware download to endpoints in a mesh network. A firmware package is divided into a number of blocks, each block containing a number of packets and sent as a broadcast to endpoints in a wireless mesh network. A number of redundancy packets are sent to permit calculation of lost packets. A maximum number of redundancy packets to be sent is determined and a forward error correction code is developed depending on the maximum number of redundancy packets and the total number of firmware packets to be sent. A first block of redundancy packets, less than the maximum number, is sent followed by additional blocks of redundancy packets depending on reports from the receiving endpoints.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08787210&OS=08787210&RS=08787210
owner: Itron, Inc.
number: 08787210
owner_city: Liberty Lake
owner_country: US
publication_date: 20130315
---
This application is a continuation in part of pending U.S. patent application Ser. No. 13 780 001 filed Feb. 28 2013 which is a continuation of U.S. patent application Ser. No. 12 902 853 filed Oct. 12 2010 issued Mar. 5 2013 as U.S. Pat. No. 8 391 177 entitled USE OF MINIMAL PROPAGATION DELAY PATH TO OPTIMIZE A MESH NETWORK which is a continuation of U.S. patent application Ser. No. 11 900 202 filed Sep. 10 2007 issued Nov. 30 2010 as U.S. Pat. No. 7 843 834 and bearing the same title which claims the benefit of two previously filed U.S. Provisional patent applications entitled METERING RF LAN PROTOCOL AND CELL NODE UTILIZATION AND MANAGEMENT respectively assigned U.S. Ser. No. 60 845 056 as filed Sep. 15 2006 and assigned U.S. Ser. No. 60 845 994 as filed Sep. 20 2006 all of which are hereby incorporated herein by reference in their entireties for all purposes. Any disclaimer that may have occurred during prosecution of the above referenced applications is hereby expressly rescinded.

The presently disclosed subject matter relates to a wireless mesh network technology and in particular to such networks including firmware image update functionality for network nodes.

Wireless mesh networks have been employed to good advantage in various environments and often are used to collect and report usage consumption and or generation information for various utilities including for example water gas and electricity usage. Such mesh networks may incorporate a number of devices nodes that operate based on firmware stored within the device node . In some instances it is desirable from time to time to update such stored firmware for varying purposes including such as adding additional functionality for the node correcting patching errors in existing firmware or for other reasons.

Generally firmware software updates are accomplished by broadcasting firmware packets to the nodes. Broadcast packets are not acknowledged and often the fact that such broadcasts are conducted in a noisy RF environment means that all packets will not be received by all nodes. Furthermore the broadcast efficiency depends on the environment and is not easy to predict. In addition the ever changing nature of interference levels and network traffic load will make the broadcast efficiency vary with time.

In previously known arrangements following the broadcast of a number of packets corresponding to for example a new or replacement firmware image the network head management system will interrogate the various network nodes to find out which packets are missing in each node. The missing packets are then retransmitted either through a broadcast mechanism or through individual point to point communications. As different nodes are usually missing different packets this process may entail the retransmission of a very large number of packets slowing down the whole process.

In some systems redundant broadcasts including systematic repetition of each packet is employed to attempt to mitigate problems associated with broadcast update techniques. Such redundancy increases the probability of reception of the packets but slows down the whole process.

In view of these identified issues it would be advantageous to provide a firmware software updating downloading arrangement that provides improved packet reception reliability and recovery.

While various implementations of firmware updating systems have been developed and while various combinations of error correcting techniques have been developed no design has emerged that generally encompasses all of the desired characteristics as hereafter presented in accordance with the subject technology.

Repeat use of reference characters throughout the present specification and appended drawings is intended to represent same or analogous features elements or steps.

Mesh networks and their associated protocol architecture may be described as based on a tree with four kinds of elements spread on cells generally represented by present . At the top of such architecture is a Collection Engine which acts as a central database. It knows all the cells and their contents that is the cell where each meter endpoint or node is as well as its address. The Collection Engine collects monthly or other appropriate interval data from every endpoint and it allows access to any meter in the network. The user can request or send data to a single meter or broadcast information. The Collection Engine can communicate with the router of the selected cell by TCP IP protocol inside Internet network.

In such tree hierarchy just below the Collection Engine stand routers of the cells referred to as the Cell Relays. There is one Cell Relay for each cell and it is the gateway between individual meters in the cell and the Collection Engine. The Cell Relay contains a routing table of all the meters in its cell. It can also forward data in the two directions that is between the Collection Engine and the endpoints. It also assumes the role of synchronizing the cell.

At the bottom of such tree are located so called Endpoints EPs . They can transmit and receive metering information. In addition each one of them can act as a relay for distant endpoints with no additional hardware.

The last indicated module of such four kinds of elements is the Walk By unit a Zigbee or other communications technology handheld that can communicate with orphan endpoints or configure protocol parameters for endpoints. Therefore an exemplary network preferably uses three media which are an RF link a Zigbee RF Link and a TCP IP link all as represented per present .

Major components of AMS include exemplary respective meters endpoints and one or more respective radio based networks including RF neighborhood area network RF NAN and its accompanying Radio Relay and power line communications neighborhood area network PLC NAN and its accompanying PLC Relay an IP internet protocol based Public Backhaul and a Collection Engine . Other components within exemplary AMS may include a utility LAN local area network and firewall through which communications signals to and from Collection Engine may be transported from and to respective exemplary meters and or other devices including but not limited to Radio Relay and PLC Relay .

AMS is configured to be transparent in a transportation context such that exemplary respective meters and may be interrogated using Collection Engine regardless of what network infrastructure exists in between or among such components. Moreover due to such transparency the meters may also respond to Collection Engine in the same manner.

As represented by the illustration in Collection Engine is capable of integrating Radio PLC and IP connected meters. To facilitate such transparency AMS operates and or interfaces with ANSI standard C12.22 meter communication protocol for networks. C12.22 is a network transparent protocol which allows communications across disparate and asymmetrical network substrates. C12.22 details all aspects of communications allowing C12.22 compliant meters produced by third parties to be integrated into a single advanced metering interface AMI solution AMS is configured to provide meter reading as well as load control demand response in home messaging and outage and restoration capabilities. All data flowing across the system is sent in the form of C12.19 tables. The system provides full two way messaging to every device however many of its functions may be provided through broadcast or multicast messaging and session less communications.

Generally when new or upgraded firmware is to be installed within a system an image of the firmware to be downloaded will be provided to an Advanced Metering System AMS Collection Engine as a binary image file. Further discussion of Collection Engine is included herewith but for the present it is noted that Collection Engine is responsible for breaking up the single binary image into a series of discrete blocks that can be distributed across a communications arrangement such as an RF LAN or other media. In an exemplary embodiment an ANSI C12.22 compliant media may be used. Such blocks have previously contained information to verify the block s integrity as well as a block identifier which is represented in by the leading and trailing spaces and respectively.

In general when transferring blocks each broken down discrete block is in its entirety preferably written into a record in a manufacturer s table for firmware images. End devices are configured to evaluate such blocks to determine their discrete integrity by using their block level hashes. The end devices can also validate that such blocks are assembled that is reassembled into the correct order. Finally each end device is able to evaluate the integrity of the overall image by evaluating the CRC Cyclic Redundancy Check or hash for the entire image.

Prior basic process for transferring firmware image blocks involved in part functionality that is similar to that used for reading data from meters. A broadcast containing the image blocks was sent to meters . Meters indicated whether they had successfully received the image blocks . Meters that don t respond are retried in a recovery process to make up for any failures. Because of the critical nature of firmware images and the large number of blocks involved some additional control and feedback mechanisms may be desired in some instances to logistically handle the volume of traffic.

Managing the transport of firmware blocks in an environment which encounters or involves unreliable media becomes critical when transferring firmware images. When transferring blocks across an RF LAN for example it is relatively likely that at least one node within a given cell will fail to successfully receive a block. Such circumstances have been addressed in two manners. First it was important that blocks be able to be transmitted and received in any order. Second depending on the practical reliability of the underlying network it may have been practiced to broadcast a given block several times before resorting to point to point transfers of image blocks.

With further reference to a firmware download process begins with the Collection Engine sending out a broadcast message to all target nodes calling a manufacturer s stored procedure or writing to a manufacturer s table in the device. In such context a target node may correspond to an end device such as meter cell relay or meters including representative meters and . Such command indicates to the device the number of firmware blocks it should expect to receive and that it should now be in firmware download mode.

When in such firmware download mode the device will report the number of blocks it has successfully received as part of any daily read requests. Additionally being placed in firmware download mode resets to zero a block counter of such device. Moreover the command includes instructions to the end devices indicating that no direct acknowledgements on the part of the meters should be made. Rather devices acknowledge such command by reporting their success count as part of the next interrogation cycle.

Collection Engine is responsible for evaluating based on the presence of the firmware block success count whether all of the targeted nodes have successfully entered firmware download mode. Nodes that have not switched to firmware download mode eventually are then individually contacted by the Collection Engine .

Once the target nodes are in firmware download mode Collection Engine will begin broadcasting firmware blocks to the target nodes . As an alternative to transmission of the firmware blocks exclusively by Collection Engine it may be desirable to transfer the firmware image to the cell relays and then send a command to instruct them to broadcast the firmware image within their respective cell. Such alternative method would be one approach to reducing public carrier back haul costs and to allowing cell relays to better manage bandwidth within their cells.

Completion of the broadcast transfers is a process that may take several days or even weeks depending on whether it is being done in conjunction with other operations. In any event after such completion Collection Engine begins evaluating the block success count of each of the target nodes. When a node has a complete set of blocks it will record a special event in the meter history log indicating such successful completion. Most nodes should have a complete set of blocks once the broadcast transfers are complete. Nodes that are still missing blocks will need to have them transferred point to point. Nodes that have excessive missing blocks after the broadcast process is complete may be flagged for possible maintenance or replacement as being potentially defective.

To facilitate point to point transfers Collection Engine will call a second stored procedure in the device. Such second procedure a manufacturer s stored procedure will provide a list of missing blocks by block number. In an exemplary embodiment the block list will include a predetermined maximum number of blocks and a status byte indicating whether there is more than the predetermined number of blocks missing. For example the predetermined maximum number of blocks may be set to twenty blocks. In using such exemplary method most meters will receive all blocks and will not need to report on individual blocks however those meters that are missing blocks can be interrogated for a manifest of what they still require.

Collection Engine will use such missing block data provided by the respective meter to perform point to point block transfers. Meter nodes that cannot be contacted will be reported to the system operator. Once the point to point retries have been completed the devices can be instructed to enable the new firmware. The command to activate the firmware may correspond to a C12.22 manufacturer s stored procedure. If a date and time is specified the device will activate the firmware at the specified date and time. If no date and time is provided the device normally will be set to activate the firmware download on an immediate basis.

Successful firmware activation can involve two additional aspects. First selected metrology devices i.e. meters may employ not just one but a plurality of images related to different aspects of the device s operation. In an exemplary configuration at least three separate firmware images may be employed one for the meter register board another for a neighborhood local area network LAN microprocessor and a third for a home area network HAN processor. In a more specific exemplary configuration the neighborhood local area network microprocessor may correspond to an RF LAN microprocessor while the home area network processor may correspond to a Zigbee processor. Each of such components will have its own firmware image that may need to be updated. Additionally over the course of time new metrology device versions which require different firmware may be incorporated into existing systems. In such case a given cell may have a mixture of devices with different firmware needs. For example the Zigbee protocol may be used for communicating with gas meters in home displays load control relays and home thermostats.

With reference presently to there is illustrated and represented a known exemplary methodology for transmitting differing firmware images to selected end devices.

As illustrated in for the general group of meters illustrated a first subset of such meters illustrated with a white background and generally represented by meters and support one firmware image while a second subset of generally illustrated meters illustrated with a grey background and generally represented by meters and support another firmware image. As a result while meters are under meters in the cell network hierarchy or tree and may be able to exchange firmware images with each other the only way meters can receive their firmware is through meters which in the present example are of another device type.

In order to handle such exemplary circumstances as represented in the firmware image distribution system is independent of the actual device for which the firmware is intended. Put another way when an image is delivered to cell relay and distributed over the RF LAN it is distributed to all of the members of the cell that match the broadcast or multicast address used regardless of whether the image is compatible with their particular hardware. This means that cell members act as hosts for the firmware. In order to update both types of meters two firmware updates will need to be distributed. Firmware will be transferred first to meters of the first subset generally represented by meters and and then activated. Secondly firmware will be transferred to meters of the second subset generally represented by meters and and then activated. Such same mechanism can be used to download separate firmware images for individual microprocessors within the end node as needed on a case by case basis.

With reference again to both it will be observed that the various meters or nodes are illustrated as being connected to one another by double headed arrow lines representatively illustrated at and in and at and in . Such interconnections schematically illustrate a self generated network formed by the meters themselves per the presently disclosed subject matter in concert with each other and cell relay as the individual meters are activated. Because each of the respective meters is self contained with respect to the RF LAN formed an opportunity exists to distribute upgrade software firmware among the various meters on a viral peer to peer basis.

In such foregoing viral peer to peer model a firmware image may be delivered to exemplary cell relay . From there Collection Engine preferably may send a stored procedure command to cell relay indicating that it should distribute such firmware image to the RF LAN. Collection Engine also sends a command to the meter nodes within the cell using a broadcast or multicast message instructing them that a new firmware image is available. Once such command is received cell relay makes the firmware available to its local RF LAN processor. Per the presently disclosed subject matter meter nodes within such cell instruct their RF LAN processors to begin looking for blocks. At such point the RF LAN processors take over the block transfer process.

Such disclosed viral type distribution mechanism may be very powerful and very efficient in that it may be able to make better use of the available physical bandwidth. Under such viral peer to peer arrangement individual meter nodes can grab firmware images or portions of firmware images from their immediate neighbors or parents rather than needing to get the data directly from cell relay or Collection Engine . As a result one portion of the cell could be exchanging firmware blocks while another portion of the cell could be passing various messages between meter nodes and cell relay all without impacting each other.

As previously employed the Forward Error Correction FEC used to recover missing symbols was a Reed Solomon code RS n k with symbols in Galois Field GF 256 . This means that the symbols of the code are bytes and that for each block of k bytes there are appended r n k additional redundancy bytes. Such a code has a Hamming distance of r 1 and allows the computation of r missing symbols per block provided the positions of the missing symbols are known this is called an erasure in coding theory . The code parameters are adapted to the network performance but as a first approximation a Reed Solomon RS 255 200 can be suggested.

The steps for encoding include 1 If the message length is shorter than k bytes zero pad the message to make it k byte long. The zeros are on the most significant symbol side of the message. 2 Compute the r redundancy bytes with the RS n k code.

The steps for decoding are 1 If no packets are missing no decoding has to be done because the purpose of this decoding is only to recover missing packets. It plays no role for error detection. The decoding program needs to know how many packets are missing and where they are located in the block. 2 If the message is shorter than k bytes should be known from the length field of the header use zero padding to make it k byte long as for coding process. 3 If some packets are missing replace the missing symbols by zeros. 4 Compute the missing packets with the RS n k code.

Each byte of the message is considered as an element of Galois Field GF 256 . These elements are called symbols. All the operations made with these symbols addition subtraction multiplication and division should be made according to the additive and multiplicative laws of the Galois field GF 256 constructed with the primitive polynomial p x xx x x x x 1. A symbol of GF 256 has several useful representations a binary representation bbbbbbbb a polynomial representation ba ba ba ba ba ba ba band an exponential representation .

In the last two representations is a primitive element such that p 0. The binary or polynomial representation is useful for addition and the exponential representation is useful for multiplication. All GF 256 elements except zero have an exponential representation the complete field can be written as the set GF 256 0 1 . . . . The conversion between the two representations is done with a look up table. For the implementation of the encoder decoder it is necessary to add and multiply the symbols in GF 256 . Addition is easily done with the binary or polynomial representation of the symbols. The operation is equivalent to a modulo 2 addition of each bit for instance 0010 1100 1000 1111 1010 0011

Multiplication is more difficult because a conversion to the exponential form of the symbol is necessary. A look up table is used for this purpose. As an example one may multiply the two symbols of the previous example 0010 1100 1000 1111

The first symbol 44 has the exponential representation the second symbol 143 has the exponential representation . The product is because 1. One can use the table in the other way to convert the result in binary form and obtain 44 143 226.

Conforming to established convention in coding theory for a Reed Solomon encoder the polynomial representation for the messages is used. The k symbol data block u u . . . u u can be written u x ux ux . . . ux ux ux u. The symbol uis the first symbol sent. The n symbol code word message redundancy symbols can be written c x cx cx . . . cx cx cx c. The Reed Solomon encoding process is equivalent to a division of the message by a generator polynomial G x . Such can be implemented with a linear feedback shift register as shown in . Such is similar to the conventional CRC encoder. The difference is that here each multiplication by a coefficient and each addition has to be understood as multiplication and addition in GF 256 .

In the shift register implementation shown in the i g are elements of GF 256 . The shift register is first initialized with zeros. The symbols of the message are then shifted into the register beginning with uand finishing with u. After the whole data block has been pushed into the shift register the content of the register is the remainder of the division. These symbols are the FEC symbols and they are appended to the initial message in the following way 

As with conventional CRC computing the multiplicative factors in the shift register are given by the coefficients of a polynomial 

This polynomial needs to be developed to find the gcoefficients. As an example for a RS 255 200 code the result is 

In accordance with the presently disclosed subject matter further improvements have been made to permit significant improvement in the lost packet recovery aspects of broadcast firmware updates. Thus in accordance with the presently disclosed subject matter as generally illustrated in present in order to download a new firmware version into the endpoints of the wireless LAN the firmware is broken down into small packets that can be sent via an air wireless interface. Each one of these packets is sent to the whole network with a broadcast mechanism Packets sent broadcast in this way are not acknowledged. In order to make sure that all the endpoints receive all the packets of the broadcast the broadcast procedure is configured for a very high degree of reliability.

To make the broadcast very reliable the packets are relayed through the network with a sufficient number of repetitions. Randomization windows for transmission are also chosen to be large enough to avoid the loss of too many packets through internal collisions. The pace of successive broadcasts is chosen to be slow enough to avoid interference between successive packets.

After the completion of the broadcast the applicative layer checks the integrity of the download in each endpoint. Missing packets are then retransmitted either individually to the endpoints which have reported the packet to be missing or with another broadcast if the packet is missing in too many endpoints.

Such kind of firmware download gives good results but is not the fastest way to make a firmware download. Reasons for these shortcomings include sending a very large number of packets to a very large number of endpoints with a high success rate requires a very reliable broadcast. The broadcast needs to be slowed down to achieve this reliability. Retransmission of missing packets takes time because different packets are missing in different endpoints and a lot of packets might need to be retransmitted before the firmware is complete in every endpoint.

In accordance with the presently disclosed subject matter to speed up the firmware download the following mechanisms have been provided. The process to provide such improved download efficiency is elegantly simple in that the process provides for appending some redundancy packets to the firmware download. Such redundant packets will allow each endpoint to compute the missing packets if not too many packets are lost.

For this purpose and with reference to present the download blocks are broken down into blocks of k packets. The block size may be optimized for specific situations but for present discussion systems using blocks of 240 packets may be employed as a good starting point. This means that in an exemplary configuration three to four blocks will be enough to download a complete version of the firmware. The amount of redundancy may also be optimized based on the particular network but preliminary estimations indicate that a redundancy of 5 gives good results. illustrates the structure of a block of packets per the presently disclosed subject matter.

With reference to present there is illustrated the successive broadcast of all the blocks for a complete firmware download. Each of the blocks contains n packets except that the last block may be shorter that is it may be adjusted to fit the exact number of packets that need to be downloaded.

Present shows the internal structure of an exemplary single packet. The payload is a succession of symbols D i j l that will be bytes in most situations but it is possible to use shorter or longer symbols. The L symbols D i j l 1 l L form the payload of the packet.

If one considers all the symbols in position l of the packets of block i there is the following sequence 1 2 3 . . . for 1 2and 1 21

The redundancy symbols D i j l k 1 j n are chosen in such a way that this sequence of n symbols is a word of the Reed Solomon code C n k . It then becomes very easy to recompute a missing packet with the error correction capability of the Reed Solomon code.

In this instance the Reed Solomon decoding involved here is an erasure procedure. Erasure decoding requires much less computation and allows the recovery of twice as many packets compared to the standard Reed Solomon decoding. This is made possible because in such case it is known beforehand which packets need to be recovered. Such is a much simpler problem than finding the location of an unknown error and then correcting the error. For the last shorter packet a similar procedure can be applied. 1 2 3 . . . for 1 2and

The firmware download with lost packet recovery in accordance with the presently disclosed subject matter is much faster than previous techniques because if no lost packet recovery is possible the broadcast has to be slowed down to make sure that every packet is received by every endpoint. Only a small redundancy overhead allows the endpoints to compute several lost packets. This allows a much faster broadcast pace because the system is now fault tolerant.

In accordance with further aspects of the presently disclosed subject matter other improvements over the just described lost packet recovery technique have also been provided. Generally it is expected that the performance of a broadcast strongly depends on the propagation conditions endpoint density and ongoing traffic in the network. With no prior knowledge of the network and no feedback mechanism the performance of the broadcast is unknown. One solution is to always send the broadcasts with a maximum efficiency configuration in order to minimize retransmissions. In accordance with such aspect of the presently disclosed subject matter a feedback mechanism is provided that adapts the broadcast to the actual network.

The first step in such presently disclosed adaptive process is identical to the previously described firmware download with lost packet recovery. After the completion of a block broadcast the endpoints try to compute missing packets within the block and report the result of their computations reported to the cell relay. If the block has been successfully received the broadcast of the next block can begin. If some packets are missing within the block the cell relay will proceed with the broadcast of additional redundancy packets. The benefit of this is that there is no need to retransmit the missing packets which will be different for each endpoint. The additional redundancy packets bring extra information that can be used by any endpoint whatever the missing packets are.

Such presently disclosed process can be extended to have several steps as illustrated for example in the three step adaptive packet recovery process shown in . If the first r1 redundancy packets are not enough to allow computation of the missing packets the cell relay can decide to send r2 additional redundancy packets or to send r2 r3 additional redundancy packets if the broadcast performance has been very poor. The cell master can also decide to retransmit the whole block if this seems appropriate. Such decision preferably will be based on the knowledge of the broadcast success rate gained from the initial block transmission. From an estimation of the broadcast success rate it is straightforward to evaluate the necessary number of redundancy packets.

For proper operation such process uses the same Reed Solomon code for all the steps. In such way the redundancy packets bring incremental information to the endpoints. At each step the endpoint can use the previously transmitted redundancy packets as well as the newly received redundancy packets. Therefore per presently disclosed subject matter one starts with the maximum number of redundancy packets and choses the code to be C n k with n k r r rbeing the maximum FEC length as illustrated in . Such code can compute r r r rmissing packets.

As illustrated in during the initial block broadcast only rredundancy symbols are sent. The endpoint will have in the best conditions r rmissing symbols. The recovery capacity of r r rsymbols will be reduced to rsymbols as expected from a standard Reed Solomon code.

Those of ordinary skill in the art should appreciate that multi step process may be extended to include more than the three basic steps illustrated in by providing additional optional broadcasts similar to those of step along with additional calculating acknowledging and reporting steps similar to steps and . Such repeated steps may be performed up to a predetermined maximum number of times with the Reed Solomon code word initially adjusted to correspond to the predetermined maximum number of times and the associated total number of symbols both message and redundancy to be sent.

As an aid to implementing the presently disclosed subject matter provides a table summarizing parameters used for statistical requirements estimations.

Simulation results for the presently disclosed subject matter have shown that with a 10 redundancy the total firmware download time can be expected to be reduced by a factor between two and four using a single step process. By implementation of the presently disclosed subject matter lost packet recovery makes the firmware download much faster as the small redundancy overhead allows a fast broadcast pace with the computation of lost packets by the endpoint itself.

Similarly multi step adaptive lost packet recovery provides further improvement since additional redundancy is used only in difficult environments and the normal firmware download is not slowed down if the propagation conditions are normal. Further retransmission of lost packets is replaced by transmission of additional redundancy packets. As those are the same for all endpoints the total time dedicated to retransmission is dramatically reduced accordingly there is no need to address packets to individual endpoints. As a consequence the multi step procedure in accordance with the presently disclosed subject matter can cope with a very wide range of environments up to the most difficult ones thereby significantly increasing overall reliability.

