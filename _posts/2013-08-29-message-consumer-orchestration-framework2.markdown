---

title: Message consumer orchestration framework
abstract: In a decoupled messaging system, a producer device sends produced messages to a message fabric. The message fabric either stores the received message in designated queues, from which consumer devices may retrieve the messages, or broadcasts the messages to consumer devices that subscribe to topics assigned to the messages. A message consumption orchestrator service gathers capabilities information for the message producer, the message fabric, and the message consumer, and configures resources allocated for the message consumer to more fully optimize message throughput. Further, the message consumption orchestrator identifies patterns in changes of the rate of produced messages, i.e., through analysis of historical data and/or received information. The message consumption orchestrator configures resources for the message consumer to account for predicted need based on the identified patterns.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09614794&OS=09614794&RS=09614794
owner: Apollo Education Group, Inc.
number: 09614794
owner_city: Phoenix
owner_country: US
publication_date: 20130829
---
This application claims priority to Indian Patent Appln. No. 3096 CHE 2013 filed Jul. 11 2013 titled Message Consumer Orchestration Framework under 35 U.S.C. 119 a . The entire contents of the above mentioned application are hereby incorporated by reference as if fully set forth herein. Applicants hereby rescind any disclaimer of claim scope in the parent and related application.

The present invention relates to optimizing message throughput in decoupled message producer consumer systems and more specifically to automatically adjusting the resources being used for a message consumer of the system.

It is useful especially in information processing to decouple an information producer from a consumer of the produced information. Such decoupling may be useful when an information producer produces information at a rate that is faster than an information consumer can process the information.

To decouple an information producer from an information consumer the information producer sends produced information in messages to a third party message management system i.e. a message fabric instead of sending the information directly to the information consumer. The message fabric stores messages until the information consumer requests the messages.

Many times resources for a messaging system are configured without respect to the capabilities of the messaging system components i.e. the information producer message fabric and information consumer. As such the throughput of a messaging system may be at a sub optimal rate given the capabilities of the system. It would be advantageous to configure resources for a messaging system based at least in part on the capabilities of the messaging system.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

In a decoupled messaging system a producer device sends produced messages to a message fabric. The message fabric either stores the received message in designated queues from which consumer devices may retrieve the messages or broadcasts the messages to consumer devices that subscribe to topics assigned to the messages. According to one embodiment the decoupled messaging system includes a message consumption orchestrator service that gathers capabilities information for the message producer the message fabric and the message consumer and configures resources allocated for the message consumer to more fully optimize message throughput.

Further the message consumption orchestrator identifies patterns in changes of the rate of produced messages i.e. through analysis of historical data and or received information. The message consumption orchestrator configures resources for the message consumer to account for predicted need based on the identified patterns.

Specifically the message consumption orchestrator records collected capabilities information and or received information as historical information. From such historical information the message consumption orchestrator identifies changes in the rate of messages sent to a particular message queue from message producer service . The message consumption orchestrator further identifies patterns in changes in the rate of messages and adjusts a configuration of consumer resources for the message consumer based at least in part on identified patterns.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It will be apparent however that embodiments may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the disclosure.

In a decoupled messaging system a producer device sends produced messages to a message fabric. The message fabric either stores the received message in designated queues from which consumer devices may retrieve the messages or broadcasts the messages to consumer devices that subscribe to topics assigned to the messages. According to one embodiment the decoupled messaging system includes a message consumption orchestrator service that gathers capabilities information for the message producer the message fabric and the message consumer and configures resources allocated for the message consumer to more fully optimize message throughput.

Further the message consumption orchestrator identifies patterns in changes of the rate of produced messages i.e. through analysis of historical data and or received information. The message consumption orchestrator configures resources for the message consumer to account for predicted need based on the identified patterns.

Specifically the message consumption orchestrator records collected capabilities information and or received information as historical information. From such historical information the message consumption orchestrator identifies changes in the rate of messages sent to a particular message queue from message producer service . The message consumption orchestrator further identifies patterns in changes in the rate of messages and adjusts a configuration of consumer resources for the message consumer based at least in part on identified patterns.

Techniques are described hereafter for optimizing the throughput of a decoupled messaging system. is a block diagram that depicts an example network arrangement for optimizing the throughput of a decoupled messaging system. Network arrangement includes a consumer device a server device a message fabric and a producer device communicatively coupled via a network . Server device is also communicatively coupled to a database . According to embodiments part or all of example network arrangement and are managed by a cloud computing service or by one or more virtual computing environments. References to cloud computing services herein are non limiting.

Example network arrangement may include other devices including client devices server devices other kinds of computing devices and display devices according to embodiments. For example according to embodiments one or more additional consumer devices may be communicatively coupled to network arrangement as described in further detail below. Example implementations of a display device include a monitor a screen a touch screen a projector a light display a display of a tablet computer a display of a telephony device a television etc.

Consumer device may be implemented by any type of computing device that is communicatively connected to network . Example implementations of consumer device include without limitation mobile phones personal digital assistants tablets workstations personal computers laptop computers and any other type of computing device. In network arrangement consumer device is configured with a Message Consumption Orchestrator MCO client and a message consumer client having one or more pollers A N. MCO client is configured with a collector client . MCO client and message consumer client may be implemented by one or more logical modules and is described in further detail below. Consumer device may be configured with other mechanisms processes and functionalities depending upon a particular implementation including for example Business Services and components.

Server device may be implemented by any type of computing device that is capable of communicating with at least consumer device over network . In network arrangement server device is configured with a Message Consumption Orchestrator MCO service which includes a collector service . MCO service and collector service may be implemented by one or more logical modules and are described in further detail below. Server device may be configured with other mechanisms processes and functionalities depending upon a particular implementation. According to another embodiment MCO service runs on consumer device . In this embodiment MCO service performs one or more functions attributed herein to MCO client .

Server device is communicatively coupled to database . Database may reside in any type of storage including volatile and non volatile storage including random access memory RAM one or more hard or floppy disks or main memory. The storage on which database resides may be external or internal to server device . Database stores information gathered by collector service and or information from MCO service .

Message fabric comprises at least one or more message queues and may be implemented on any one of the devices depicted in or may be implemented by a distinct computing device that is communicatively connected to network and that is not depicted in . Message flow indicators and depict the logical flow of messages between producer device message fabric and consumer device . Message fabric is communicatively coupled to producer device and to consumer device via network .

Producer device may be implemented by any type of computing device that is capable of communicating with at least message fabric over network . In network arrangement producer device is configured with a message producer service . Message producer service may be implemented by one or more logical modules and is described in further detail below. Producer device may be configured with other mechanisms processes and functionalities depending upon a particular implementation.

Network may be implemented with any type of medium and or mechanism that facilitates the exchange of information between the devices in network arrangement . Furthermore network may use any type of communications protocol and may be secured or unsecured depending upon the requirements of a particular embodiment.

The services and clients of network arrangement may receive and respond to Application Programming Interface API calls Simple Object Access Protocol SOAP messages requests via HyperText Transfer Protocol HTTP HyperText Transfer Protocol Secure HTTPS Simple Mail Transfer Protocol SMTP or any other kind of communication e.g. from another component of network arrangement . Further the services and clients of network arrangement may send one or more of the following over network to another component of network arrangement information via HTTP HTTPS SMTP etc. XML data SOAP messages API calls and other communications according to embodiments.

In an embodiment each of the processes described in connection with one or more of the clients and services of network arrangement are performed automatically and may be implemented using one or more computer programs other software elements and or digital logic in any of a general purpose computer or a special purpose computer while performing data retrieval transformation and storage operations that involve interacting with and transforming the physical state of memory of the computer.

The messaging system depicted in network arrangement includes message producer service running on producer device message fabric and message consumer client running on consumer device . Message producer service is configured to transmit information in messages to message consumer client via message fabric . Message consumer client retrieves or receives the messages from message fabric and processes the messages. To retrieve messages from message fabric message consumer client uses a poller such as poller A which is configured to retrieve a certain number of messages from a message queue of message fabric at a certain frequency e.g. 10 messages per second.

For example message producer service sends a message with credit check information used to validate a credit card transaction to a particular queue in message fabric . Message fabric stores messages in the particular queue for a configurable length of time such as 14 days. Message consumer client retrieves messages from the particular queue for processing. Thus message consumer client retrieves and processes messages from message producer service asynchronously from when the messages are produced.

In order to process the messages with credit check information message consumer client performs one or more of parsing the message information retrieving information from a database accessible by message consumer client retrieving information from external sources such as credit card agencies not shown in network arrangement dispatch messages to devices not shown in network arrangement etc.

Such a decoupled messaging system can be used to perform any task where it would be beneficial for message producers and consumers to work asynchronously e.g. when the information producer and the information consumer have different throughput capabilities.

According to an embodiment collector client is configured with one or more collectors each of which collects one or more kinds of static and or dynamic capabilities information for message consumer client and or consumer device . MCO client reports the collected capabilities information to MCO service via collector client . MCO client performs a handshake with MCO service upon sending information to MCO service to authenticate the identity of MCO client .

Examples of static capabilities information include the top CPU speed for consumer device total RAM memory for consumer device etc. Examples of dynamic capabilities information include RAM memory that is currently available on consumer device current CPU usage how many pollers A N are currently running in connection with message consumer client other capabilities information for message consumer client current throughput for a database not shown in example network arrangement that is being used by message consumer client to process messages capabilities information for one or more other resources that are involved in processing messages how much network bandwidth is available at consumer device the average time that it takes message consumer client to process a message etc.

Collector client is by default configured with one or more default collectors to collect information from consumer device and message consumer client . For example default collectors at collector client are configured to collect capabilities information about the infrastructure of collector device including static and dynamic CPU and RAM data.

According to an embodiment MCO client provides a collector implementation framework by which custom collectors may be added to collector client . Through the collector implementation framework an administrator of message consumer client may create a custom collector for collector client e.g. to collect capabilities information that is specific to the processing of messages by message consumer client . As such custom collectors may provide MCO service with information about how quickly message consumer client is able to process received messages which affects message throughput at the message consumer.

For example message consumer client performs one or more queries on a database in connection with processing messages. An administrator implements a custom collector in collector client that retrieves information about the average throughput of database queries on the database e.g. by performing a query on the database that returns a processing grade for the kind of query that message consumer client calls on the database. In response to the query the database returns information indicating that the database processes a certain number of the queries per second such as ten queries per second .

As another example to process messages message consumer client communicates with a third party resource not shown in network arrangement . The speed with which the third party resource responds to the communications from message consumer client affects the throughput of messages at the message consumer. In this example an administrator creates a custom collector at collector client to collect information about how quickly the third party responds to the communications from message consumer client . Such a custom collector may request the information directly from the third party resource or may derive the information from actual response times for the third party resource.

MCO client sends the custom collected information to MCO service which uses the custom collected information to calculate the speed with which message consumer client processes messages. According to an embodiment a custom collector includes one or more rules for translating the custom collected information to a format that is usable by MCO service e.g. to a standard unit of time. According to another embodiment a custom collector produces data in a format expected by MCO service .

According to an embodiment MCO service gathers capabilities information of message fabric by directly querying message fabric for capabilities information. According to one embodiment capabilities information for message fabric includes one or more of 

Message fabric may expose an API to MCO service or allow SOAP queries etc. by which MCO service performs capability queries.

According to an embodiment MCO service derives capabilities information for message fabric by analyzing information available at message consumer client via collector client . To illustrate message fabric denies a request of poller A to retrieve eleven messages from a particular queue and then allows a request of poller A to retrieve ten messages from the particular queue all other things about the requests being similar . MCO service derives from the rejected request and the subsequent allowed request that the limit of the number of messages that message fabric permits a particular poller to draw from the particular queue at a time is ten messages.

According to an embodiment MCO service gathers capabilities information such as a rate at which message producer service produces messages for message consumer client a rate at which producer device transmits messages to message fabric for message consumer client etc. for producer device and or message producer service by directly querying message producer service or producer device . MCO service may query the message producer directly e.g. using a SOAP call.

According to an embodiment MCO service derives capabilities information associated with message producer service and or producer device . For example MCO service directly queries message fabric for a rate at which message fabric receives messages from message producer service for a particular queue. MCO service derives that the rate at which producer device sends messages to message fabric for the particular queue directly correlates with the rate at which message fabric receives messages from message producer service for message consumer client .

MCO service uses the information from collector client to identify needed adjustments to the resources being used for message consumer client i.e. the pollers and or the devices being used to pull messages from message fabric and process messages for message consumer client . Returning to flowchart of at step a configuration of consumer resources associated with the message consumer are automatically adjusted based at least in part on the capabilities information by adding at least one consumer clone executing on one or more devices that are not currently used to pull messages from the message fabric for the message consumer.

For example MCO client sends to MCO service information indicating that the number of messages in a particular message queue from which message consumer client pulls messages is increasing at a particular rate. For purposes of this example MCO service adjusts the resources for the message consumer based on information for a single message queue. However within embodiments MCO service adjusts resources for the message consumer based on multiple sources of messages including message queues and or message broadcasts. Adjusting message consumer resources based on a rate of messages from a message broadcast source is described in more detail below.

From the capabilities information sent by MCO client MCO service determines that message consumer client should pull messages from the queue at a faster rate than the client is currently pulling messages. According to an embodiment MCO service identifies a target pull rate for the particular queue at which message consumer client should pull messages from the particular queue. For example MCO service determines that the target pull rate for the particular queue matches the rate that MCO service has either been informed or has derived that message producer service is currently sending messages to the particular queue. With message consumer client pulling messages at such a target pull rate the backlog of messages in the particular queue would no longer be increasing.

As a further example MCO service calculates a target pull rate for the particular queue that is faster than the rate that MCO service has either been informed or has derived that message producer service is currently sending messages to the particular queue. MCO service may set such a target pull rate if the particular queue has more than a threshold number of messages stored therein. With message consumer client pulling messages at such a target pull rate the backlog of messages in the particular queue would decrease. Once MCO service determines that the backlog of messages in the particular queue has reached a certain target number of messages which may or may not equal the threshold number MCO service then sets a new target pull rate for the particular queue that matches the rate that message producer service is sending messages to the particular queue.

If MCO service determines that the target pull rate for the particular queue in message fabric is greater than the rate at which message consumer client is currently pulling messages from the particular queue then MCO service identifies needed adjustments to increase the resources allocated for message consumer client . In other words one or more additional pollers and or one or more message consumer client clones should be allocated to message consumer client to increase the rate of pulling messages from the queue to the target pull rate.

MCO service may increase the number of pollers associated with message consumer client that simultaneously pull messages from the particular queue to increase the rate at which message consumer client actually pulls messages from the particular message queue. MCO service may also cause that all of pollers are pulling the maximum number of messages that message fabric allows which maximum number is determined from the gathered capabilities information. For purposes of this example it is assumed that all pollers are pulling messages from message fabric at the maximum allowed rate.

Based on the capabilities information for consumer device MCO service determines whether consumer device has the capacity to run one or more additional pollers in addition to pollers A N. Such a determination is based at least in part on one or more of capabilities information indicating the capacity of the infrastructure of consumer device e.g. CPU RAM capabilities information indicating a speed with which message consumer client processes messages etc.

For example if consumer device has the capacity to run one or more additional pollers based on the infrastructure of the device but message consumer client cannot process messages any faster than it currently processes messages then adding a poller to message consumer client will not increase the throughput of messages for message consumer client . If a database that message consumer client queries during message processing could not handle more queries than the database currently handles then configuring message consumer client to retrieve more messages from message fabric would not result in greater throughput of messages by the message consumer. As a result MCO service requests additional resources from a cloud computing service as described in detail below.

Also if a third party resource to which message consumer client sends messages during processing of messages cannot process more messages than the resource currently receives then increasing message throughput for message consumer client would be a waste of resources

However if consumer device has the capacity to run one or more additional pollers and message consumer client has the capability to process messages faster than it currently processes messages then adding an additional poller to message consumer client would increase the throughput of messages for message consumer client .

If MCO service determines that adding a poller to message consumer client is feasible and would increase message throughput then MCO service calculates the number of additional pollers that would cause message consumer client to pull messages from the particular queue at the target pull rate. Also based at least in part on capabilities information sent to MCO service by MCO client MCO service determines a number of additional pollers that MCO service could feasibly and usefully add to message consumer client .

For example MCO service determines that four additional pollers are needed to achieve the target pull rate and that consumer device has the capacity to run four additional pollers. Thus MCO service causes four additional pollers to run at message consumer client . As a further example if MCO service determines that three pollers are needed to achieve the target pull rate and consumer device has the capacity to run four pollers then MCO service causes three additional pollers to run at message consumer client . According to these examples no additional resources are needed to achieve the target pull rate for the particular queue.

As yet a further embodiment MCO service provides to MCO client logic that allows MCO client to calculate a number of pollers to instruct message consumer client to run. MCO client uses the logic to identify the number of pollers to run and causes message consumer client to run that number of pollers.

According to an embodiment MCO service provides to MCO client logic that allows MCO service to dynamically adjust the number of pollers A N running at message consumer client based on the current capacity of consumer device i.e. based on gathered capabilities information for CPU RAM etc . For example the logic indicates that if the system capacity of consumer device increases by a certain amount or has a certain total amount of available resources for pollers then MCO client should automatically cause message consumer client to run an additional poller . As yet another example the logic indicates that if the system capacity of consumer device decreases to a certain total amount of available resources for pollers or the total amount of available resources decreases by a certain amount then MCO client should automatically cause message consumer client to terminate one or more of pollers A N. According to an embodiment MCO client reports such automatic addition or reduction of a poller to MCO service .

If the maximum number of pollers that consumer device is able to run e.g. because the available system resources such as CPU RAM etc. or because of limitations during message processing etc. is insufficient to achieve the target pull rate then MCO service requests additional resources to be dynamically provisioned from a cloud computing service that manages consumer device . The request includes requested device specifications that are sufficient to run the number of additional pollers needed to achieve the target pull rate for message consumer client .

The cloud computing system in response to the request dynamically provisions one or more computing devices that collectively meet or exceed the requested specifications. In one embodiment a cloud computing service dynamically provisions a device by selecting one or more devices from among multiple available devices managed by the cloud computing service based at least in part on one or more of 

According to an embodiment MCO service receives a rejection of its request for additional computing devices from the cloud computing service when no device at least meets the required specifications and MCO service submits a second request for multiple devices with collective capacity to meet or exceed the requested specifications.

According to an embodiment MCO service automatically identifies device specifications that are sufficient to run the number of additional pollers needed to achieve the target pull rate for message consumer client based at least in part on historical information for the messaging system of network arrangement as recorded by MCO service e.g. at database . For example MCO service records in database historical information that includes how many pollers a device successfully runs and how much RAM and CPU the device had available for pollers at the time. From such information MCO service calculates the average amount of RAM and CPU that is required to run a particular number of pollers.

To illustrate the provisioning of additional resources depicts an example network arrangement with a a message consumer client clone i.e. message consumer client on consumer device and b a subset of the entities of network arrangement for simplicity. The cloud computing service that manages consumer device provisions consumer device in response to the request for additional resources from MCO service . While network arrangement illustrates two consumer devices and the cloud computing service that manages consumer device may provision any number of devices to run clones of message consumer client .

MCO service configures consumer device to serve as a clone of message consumer client . According to an embodiment MCO service causes the appropriate clients to be installed on consumer device i.e. at least MCO client collector client message consumer client and one or more pollers A N . According to another embodiment the cloud computing service managing consumer device causes the appropriate clients to be installed on consumer device .

Message consumer client serves as a message consumer clone for message consumer client . Specifically message consumer client retrieves or receives messages from the same sources of messages within message fabric as message consumer client and also processes the messages in the same manner as message consumer client . As such the addition of message consumer client increases the throughput of messages for message consumer client .

MCO service identifies a number of pollers to instantiate for the new message consumer clone in order to attain the target pull rate for the particular message queue for message consumer client . Specifically MCO service collects capabilities information for consumer device and or message consumer client via collector client in a manner similar to collection of capabilities information described in connection with collector client above.

Based at least in part on the capabilities information for the new consumer clone MCO service causes a number of pollers A N to be initiated for message consumer client in a manner similar to identifying a number of pollers and initiating the pollers for message consumer client described above. Furthermore MCO client may be configured with logic similar to the logic described for MCO client above.

Running resources for a message consumer which resources are not running at full capacity constitutes a waste of resources. Therefore if MCO service determines that the target pull rate for the particular queue in message fabric is less than the rate at which message consumer client is currently pulling messages from the particular queue then MCO service identifies needed adjustments to decrease the resources allocated for message consumer client .

For example MCO service determines that the target pull rate for pulling messages from the particular queue for message consumer client is supportable by fewer resources than are currently allocated for message consumer client . Specifically MCO service identifies a number of pollers needed to achieve the target pull rate and the maximum number of pollers that may be terminated leaving message consumer client the capacity to pull messages from message fabric at the target pull rate. If there is only one device pulling messages for message consumer client i.e. consumer device then MCO service causes termination of the excess number of pollers from pollers A N. Specifically MCO service instructs MCO client to cause message consumer client to terminate the excess number of pollers from pollers A N.

However if there are multiple devices pulling messages from message fabric for message consumer client then MCO service identifies the optimum device currently allocated for message consumer client from which to remove pollers. For example a particular device is running at most the number of pollers that should be terminated and MCO service selects the pollers from that particular device to be terminated since termination of those pollers would result in decommissioning an allocated device. Decommissioning an allocated device releases the resource to the cloud computing service that manages the device freeing the device for other purposes. As a further example if a particular device is designated as a valuable resource e.g. by a cloud computing service that manages the device then MCO service selects pollers from that particular device to be terminated in order to free up capacity on the valuable resource

According to an embodiment MCO service predicts a message consumer s future need for resources based at least in part on historical information recorded by MCO service and or information from a third party information source. illustrates a flowchart for predicting a future change to the rate of a flow of messages from a message producer and adjusting the configuration of consumer resources based at least in part on the predicted future change.

At step a future change to a flow of messages from a message producer through a message fabric to a message consumer is predicted. For example MCO service predicts a future change in the rate of messages that message producer service sends to a particular queue in message fabric for message consumer client by identifying a pattern in changes of the rate of messages from message producer service sent to the particular queue. MCO service identifies patterns in changes of the rate of produced messages by analyzing historical information recorded by MCO service and or information from a third party information source. MCO service further analyzes the identified patterns to predict future changes in the rate of messages from message producer service sent to the particular queue.

According to an embodiment MCO service records collected capabilities information in database as historical information. From such historical information MCO service identifies changes in the rate of messages sent to a particular message queue from message producer service . MCO service stores the identified changes in the rate of messages as further historical information in database . In connection with the flow change information MCO service also records one or more of a time of day a day of the week a time of year a calendar date etc.

MCO service identifies patterns in changes in the rate of messages recorded in the historical information and stores the patterns in database . For example MCO service determines that the rate at which message producer service sends messages to a particular queue in message fabric surges between 9 00 AM and 12 00 PM on weekdays peak time . In this example the surge rate during this peak time is 65 75 of a particular baseline message rate e.g. the highest recorded message production rate for message producer service . Herein a percentage rate refers to a percentage of the baseline message rate. Based at least in part on this identified pattern of peak times MCO service predicts that the rate of messages from message producer service to the particular queue will be at 65 75 between 9 00 AM and 12 00 PM on weekdays.

Returning to flowchart of at step a configuration of consumer resources for the message consumer is adjusted based at least in part on the predicted change. For example in response to predicting that the rate of messages from message producer service to the particular queue will be at 65 75 between 9 00 AM and 12 00 PM on weekdays MCO service identifies a target pull rate for message consumer client for the peak times which is based at least in part on the predicted message production rate i.e. 65 75 . MCO service calculates a number of pollers needed to pull messages from the particular queue at the target pull rate as described above .

MCO service then determines whether to terminate pollers or to request additional resources for message consumer client in order to achieve the target pull rate for the peak time. For example MCO service schedules for a certain amount of time before the anticipated peak time e.g. five minutes an adjustment of resources for message consumer client to account for the predicted surge rate i.e. 65 75 . At the scheduled time MCO service determines that message consumer client is running ten pollers on one or more consumer devices and that in order to pull resources at the target pull rate for the predicted peak time message consumer client requires 14 running pollers. Therefore as described above MCO service causes message consumer client to add four pollers which may involve allocating additional resources as needed to run the needed 14 pollers. According to an embodiment once the peak time is past MCO service decreases the number of pollers allocated for message consumer client .

As a further example MCO service identifies a pattern from rate change data stored in historical information indicating that message producer service produces almost no messages i.e. between 0 5 between 2 00 AM and 6 00 AM on weekdays dead time . In response to identifying this pattern MCO service schedules a decrease of the resources allocated for message consumer client to an amount that MCO service calculates is sufficient to handle the dead time demand. The scheduled time may be at the predicted start of dead time or a certain amount of time before or after the predicted start of dead time.

At the scheduled time MCO service reduces the number of pollers being used for message consumer client and or clones thereof by releasing resources that are allocated for message consumer client as described above. MCO service may either decommission all resources allocated for message consumer client or maintain one or more pollers retrieving any messages entering message fabric for message consumer client during the dead time. According to an embodiment once the dead time is past MCO service increases the resources allocated for message consumer client .

According to an embodiment MCO service continually records identified patterns in database and capabilities information and other information as historical information in database . MCO service also updates stored patterns based at least in part on historical information that was recorded after the pattern was last updated. In response to updating the established pattern MCO service schedules adjustments to the resources for message consumer client based at least in part on the updated pattern rather than based on the previous iteration of the pattern.

For example after determining that 9 00 AM to 12 00 PM on weekdays is a peak time for the flow of messages from message producer service for the particular queue MCO service records additional historical information. MCO service analyzes at least the additional historical information and based on the analysis determines that the peak time for the flow of messages is now 9 45 AM to 12 00 PM on weekdays and 7 00 PM to 10 30 PM on Sunday through Thursday. MCO service updates the peak time pattern in database accordingly and adjusts the schedule for handling the peak time.

According to an embodiment MCO service adjusts resources allocated to message consumer client based on predicted message broadcasts to which message consumer client subscribes e.g. through message fabric . To illustrate MCO service collects capabilities information that indicates when message consumer client receives broadcast messages and records such as historical information in database . MCO service analyzes the historical information to identify a pattern in the receipt of broadcast messages. For example MCO service determines a pattern that message consumer client generally receives the equivalent of a 10 rate of broadcast messages on the last day of a school s semester information about which MCO service receives from a third party information source as described in further detail below. Based on the identified pattern MCO service schedules an increase of the resources allocated for message consumer client to accommodate 10 more messages on the last day of the school s semesters as described above.

According to an embodiment MCO service receives information from a third party information source information source which is not depicted in . A third party information source is none of the message producer message fabric or message consumer. An information source provides MCO service with information that MCO service analyzes to identify patterns of changes in the rate of messages from message producer service and to anticipate resource needs based at least in part on the patterns.

An information source may send to MCO service any kind or format of data e.g. documents pdfs tables XML HTML SOAP messages etc. For example an information source sends to MCO service one or more of summaries of information such as critical dates a projected rate of messages potential indicators of message rate etc. As another example an information source sends unprocessed data for MCO service to process such as syllabuses for a school s educational courses.

In order for MCO service to recognize a third party information source as a valid source of information the source may register with MCO service with or without authenticating information as having information relevant to message producer service and or message consumer client . Further one or more of the following may register an information source with MCO service MCO client message consumer client a cloud computing service that manages consumer device etc.

An information source may communicate information with MCO service via broadcast such that MCO service subscribes to a broadcast from the information source. Furthermore an information source may implement a collector client such as collector client which is configured to communicate to MCO service information from a database associated with the information source from a broadcast to which the information source subscribes or from other auxiliary sources of information.

An information source may indicate an explicit association between particular communicated information and one or more queues or broadcasts within message fabric . Thus MCO service may use the communicated information to identify patterns for those consumers that subscribe to the one or more queues or broadcasts that the information source associated with the communicated information.

The following example illustrates MCO service receiving and analyzing information from a third party information source. In this example message consumer client receives and processes messages that represent submissions of homework assignments and completed examinations for a particular school. Administrators for the school set up an information source such as a server computing device communicatively coupled to network that is registered with MCO service as supplying information pertinent to the flow of messages from message producer service .

After it is registered with MCO service the information source sends to MCO service syllabus data for one or more courses that use message producer service to facilitate processing the submission of homework assignments and exams. For example the syllabus data includes information about the start date of courses the duration of courses the frequency and timing of examinations and homework assignments for the courses due dates vacations the date of a final exam or project etc.

MCO service is configured to parse the syllabus data and extract data therefrom that is pertinent to identifying patterns in changes of the rate of messages from message producer service . To illustrate the third party information source informs MCO service that 200 of 1500 available courses have a final exam or project due on the same particular day. MCO service determines from historical data that there is a 10 12 rise in the rate of messages produced by message producer service on days where 200 225 courses have an exam or project due on the same day. From this identified pattern MCO service predicts that message producer service will produce 10 12 additional messages on the particular day and MCO service schedules an increase of allocated resources for message consumer client a certain amount of time before the predicted start of the predicted rise in rate. MCO service adjusts the allocated resources based on the schedule as described above.

MCO service may also use historical information that MCO service stored at database in conjunction with data received from an information source to identify patterns in the message flow. For example based on historical data MCO service determines that historically the third week of a six week course generally coincides with an uptick in messages from message producer service resulting from homework submissions or exams taken e.g. by 25 if 500 600 six week courses start at the same time. From the registered information source MCO service knows that 556 six week courses recently started on the same day. Therefore MCO service schedules an increase of the resources for message consumer client to handle 25 more messages from message producer service to anticipate the period of predicted increased activity as described above.

As a further example the information source identifies a particular week as a school wide vacation week. From historical data MCO service determines that message producer service generates a message output level of 5 during the first three days of a school wide vacation week. As such MCO service predicts dead time for the first three days of the school wide vacation week and schedules a reduction of resources for message consumer client in anticipation of the dead time as described above.

As yet a further example message consumer client receives and processes messages that represent credit card transactions from message producer service . An information source that supplies information pertinent to the flow of messages from message producer service sends to MCO service holiday shopping season dates. According to one embodiment the data from the information source indicates that a higher than average amount of transactions are expected during the holiday shopping season dates. According to another embodiment MCO service determines based on historical data that the rate of messages during holiday shopping seasons is usually 75 95 . Based at least in part on the historical data MCO service predicts a 75 95 message flow rate during the holiday shopping season indicated in the information from the information source. Accordingly MCO service schedules resources for message consumer client to handle the predicted message flow rate for the predicted dates.

According to an embodiment MCO service automatically determines that information received from a particular information source informs identification of patterns in changes of the rate of the flow of messages from message producer service through message fabric to message consumer client .

To illustrate MCO service receives first information from a third party information source. For example MCO service receives calendar information indicating the dates of government holidays for the current year from a third party information source. The third party information source is not registered with MCO service as producing information relevant to a flow of messages from message producer service nor does MCO service have access to any other information that indicates an explicit connection between the information source and message producer service .

MCO service detects an actual change in the rate of messages from message producer service through message fabric to message consumer client . For example MCO service detects that message production from message producer service drops by 25 on certain days which drop is currently unexplained by analysis of information that MCO service has for message producer service e.g. from information sources that are explicitly connected to message producer service within database in historical information for message producer service etc. .

Based at least in part on detecting the actual change in the rate of messages from message producer service MCO service identifies a correlation between the first information and the actual change in the rate of messages. For example MCO service analyzes information in database from information sources that are not explicitly connected to message producer service to identify patterns that predict the detected actual change in the flow of messages at least in part. According to an embodiment MCO service initiates such analysis when a threshold amount of change in the rate of message flow is detected and unexplained. The threshold for the amount of change is according to embodiments learned by MCO service based at least in part on historical data or is configured by an administrator etc.

As a result of analyzing information in database from information sources that are not explicitly connected to message producer service within database MCO service determines that the 25 drop in message flow from message producer service correlates with days during a government holiday that are not the last day of the government holiday as indicated by the first information and records this pattern in database .

MCO service uses the pattern to predict a future change to the rate of the flow of information from message producer service . For example MCO service predicts a 25 drop in the rate of messages from message producer service on the next day that is a government holiday which is not the last day of the holiday the predicted rate drop day . MCO service schedules a reduction of resources to account for the predicted 25 drop in message flow for message consumer client in anticipation of the predicted rate drop day such that the reduction of resources is implemented for when the drop in message rate is predicted to occur as described above.

According to an embodiment MCO service manages the configuration of multiple message consumers including message consumer client . A message consumer may register with MCO service to allow MCO service to optimize the throughput of messages for the associated messaging system. According to an embodiment an MCO client such as MCO client automatically registers the associated message consumer with MCO service when MCO client is communicatively connected to MCO service i.e. via network for the first time.

According to one embodiment the techniques described herein are implemented by one or more special purpose computing devices. The special purpose computing devices may be hard wired to perform the techniques or may include digital electronic devices such as one or more application specific integrated circuits ASICs or field programmable gate arrays FPGAs that are persistently programmed to perform the techniques or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware memory other storage or a combination. Such special purpose computing devices may also combine custom hard wired logic ASICs or FPGAs with custom programming to accomplish the techniques. The special purpose computing devices may be desktop computer systems portable computer systems handheld devices networking devices or any other device that incorporates hard wired and or program logic to implement the techniques.

For example is a block diagram that illustrates a computer system upon which an embodiment of the invention may be implemented. Computer system includes a bus or other communication mechanism for communicating information and a hardware processor coupled with bus for processing information. Hardware processor may be for example a general purpose microprocessor.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Such instructions when stored in non transitory storage media accessible to processor render computer system into a special purpose machine that is customized to perform the operations specified in the instructions.

Computer system further includes a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor . A storage device such as a magnetic disk optical disk or solid state drive is provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. According to one embodiment the techniques herein are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term storage media as used herein refers to any non transitory media that store data and or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non volatile media and or volatile media. Non volatile media includes for example optical disks magnetic disks or solid state drives such as storage device . Volatile media includes dynamic memory such as main memory . Common forms of storage media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card cable modem satellite modem or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention and what is intended by the applicants to be the scope of the invention is the literal and equivalent scope of the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction.

