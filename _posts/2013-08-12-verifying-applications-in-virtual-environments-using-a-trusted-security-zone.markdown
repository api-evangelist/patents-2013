---

title: Verifying Applications in Virtual Environments Using a Trusted Security Zone
abstract: Systems and methods for transmitting information between virtual environments comprising: copying a first virtual environment, wherein the first virtual environment comprises a plurality of original applications, a first clock, and a first trusted security zone to create a second virtual environment, wherein the second virtual environment comprises a copy of at least some applications of the plurality of original applications, a second clock, and a second trusted security zone. The first trusted security zone may receive a request from a copied application to engage in a transmission with an original application. The first trusted security zone may then determine if a nonce associated with the copied application is a verified nonce, wherein determining if the nonce is a verified nonce comprises comparing, by the first trusted security zone, the nonce associated with the copied application to a nonce associated with the at least one original application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208339&OS=09208339&RS=09208339
owner: Sprint Communications Company L.P.
number: 09208339
owner_city: Overland Park
owner_country: US
publication_date: 20130812
---
In an environment such as a virtual environment various systems and or applications on an electronic device or in a remote location may be authorized to access and or transmit data to internal or external applications. Some of this data may be considered confidential data such as financial or health information and there may be restrictions on the transmission of that confidential data.

In an embodiment a method of transmitting information between virtual environments is disclosed. The method comprises copying a first virtual environment wherein the first virtual environment comprises a plurality of original applications a first clock and a first trusted security zone wherein the first trusted security zone comprises a verification application and a nonce application and subsequently creating a second virtual environment wherein the second virtual environment comprises a copy of at least some applications of the plurality of original applications a second clock and a second trusted security zone. The method further comprises receiving by the verification application from a copied application a request for a transmission with an original application of the plurality of the original applications determining by the verification application if a nonce associated with the copied application is a verified nonce wherein the nonce comprises a clock value. Determining if the nonce is a verified nonce comprises comparing by the verification application the clock value of the nonce to a clock value of the first clock and determining by the first trusted security zone if the clock value of the nonce correlates sufficiently to the clock value of the first clock. The method further comprises granting in response to a determination that the clock value of the nonce correlates sufficiently to the clock value of the first clock the request and denying in response to a determination that the clock value of the nonce does not correlate sufficiently to the clock value of the first clock the request.

In another embodiment a method for transmitting data between applications in a virtual environment is disclosed. The method comprises receiving by a first application in a first virtual environment wherein the first virtual environment comprises a trusted security zone a plurality of applications and a clock at least one of a request to send information to a second application or a request to receive information from the second application wherein the second application comprises a nonce and sending by the first application a request for verification of the second application to the trusted security zone in the first virtual environment wherein the trusted security zone comprises a verification application. The method further comprises receiving by the first application from the verification application a confirmation of verification wherein the confirmation is sent based on comparing by the verification application a nonce associated with the second application with an assigned nonce of a plurality of assigned nonces stored in the trusted security zone wherein the nonce comprises a clock value and determining by the verification application that the clock value correlates sufficiently to a current clock value on the clock in the first virtual environment.

In an embodiment a system for transmitting information between applications is disclosed. The system comprises a first virtual environment wherein the first virtual environment comprises a clock a first application of a plurality of applications and a trusted security zone and wherein the trusted security zone comprises a verification application and a nonce application. The method further comprises a second application wherein the trusted security zone receives a request from the first application to verify the second application wherein the application in the trusted security zone determines if a nonce associated with the second application is verifiable wherein the determination is based on a comparison of a clock value of the nonce and a clock value of the clock and wherein in response to the determination that the clock value of the nonce correlates sufficiently to the clock value of the clock the second application at least one of receives a transmission from the first application or sends a transmission to the first application.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although illustrative implementations of one or more embodiments are illustrated below the disclosed systems and methods may be implemented using any number of techniques whether currently known or not yet in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below but may be modified within the scope of the appended claims along with their full scope of equivalents.

Embodiments of the disclosure are directed to methods and systems for generating and using a nonce in conjunction with a trusted security zone which may also be referred to herein as a trust zone. It is appreciated that a nonce in some embodiments may comprise one or more attributes or components and may be a unique single use identifier. In other embodiments the nonce may be reusable in whole or in part for two or more uses. Accessing the trusted security zone may comprise one or more of the following executing one or more secure applications in a trusted security zone of the mobile device reading data from the trusted security zone portion of memory writing data to the trusted security zone portion of memory and accessing one or more keys in the trusted security zone. An application may be granted access to the trusted security zone. In some cases a plurality of applications created and or maintained by a telecommunications service provider or a third party such as a vendor may be granted access to communicate with or execute within the trusted security zone. Some applications may be referred to as trusted applications which may mean that the applications are authorized to execute in the trusted security zone. Alternatively applications referred to as authenticated applications may be authorized to communicate with the trusted security zone.

In some cases one application may want to send information to or receive information from another application. For example a first application may receive a request from a second application. This request may be for the second application to send information to the first application and or for the first application to send information to the second application. However the first application may not know if the second application is actually the second application identify verification or if the second application is a spoofed or otherwise corrupted or false source. This may be especially of interest if the information involved in the request is sensitive or confidential information such as financial data or health information. In addition the first application may not know where the second application is hosted and or is executing from for example whether the second application is executing on the same device as the first application a different device than the first application or on a remote server in a cloned virtual environment or in another location. Depending upon the embodiment the first application and the second application may be in different virtual processing environments or may be in the same virtual processing environment. A virtual processing environment as known to one skilled in the art may be created by an operating system to provide applications executing in the virtual processing environment the appearance that they are executing on their own central processing unit. Typically a plurality of virtual processing environments two or more are created on a single central processing unit by an operating system applications executing in a first one of the virtual processing environments feel as though their virtual processing environment is the complete central processing unit and applications executing in a second one of the virtual processing environments feel as though their virtual processing environment is the complete central processing unit.

In one embodiment a first application in a virtual environment receives a request from a second application. The virtual environment may comprise a trusted security zone a clock and a plurality of applications including the first and second applications. The request received by the first application may be for the first application to send information to the second application and or for the first application to receive information from the second application. The first application may have been authorized to operate in and or through a trusted security zone but may not know if the second application is a verified application from which it may receive information or to which it may send information. In that embodiment the first application may want to verify that the second application is not spoofed. The first application may ask the trusted security zone to verify the second application. In an embodiment the trusted security zone may comprise a verification application. The verification application may verify a nonce associated with and or assigned to the second application. This may not mean that the second application would be authenticated or authorized to execute in or interact with the trusted security zone just that the trusted security zone is the agent that verifies a nonce associated with and or assigned to the second application so that the second application may interact with the first application. The first application may send a request to the trusted security zone to verify the second application and the trusted security zone may then determine if the second application has a nonce assigned to and or associated with it and if that nonce can be verified.

In an embodiment the nonce is a unique identifier comprising at least one component that may be a number letter symbol or combination thereof. In an embodiment the nonce may comprise a time stamp that may indicate when the nonce was assigned or may comprise a clock value that reflects the time of the virtual environment where the second application is located. The trusted security zone may also comprise a nonce application that assigns nonces to applications and that may store information such as the date time and other nonce components that were assigned to an application. A nonce may be assigned for example upon a first use execution of an application that is in communication with or is executing in a trusted security zone. A nonce may also be assigned at the request of the verification application in response to receiving a request for verification from the first application.

If the verification application in the trusted security zone determines that the second application has a nonce assigned to it and or associated with it the verification application compares this nonce against information stored in the nonce application for the second application and or stored in the trusted security zone portion of memory. The stored information may comprise a plurality of nonce components such as the date and time the nonce was assigned that should correspond to the time stamp and or the number letter symbol or combination thereof that was assigned. If the stored information sufficiently correlates to the information from the second application the trusted security zone may send a notification to the first application that the second application has been verified at which time the requested transmission of information to from the first application may commence. The nonce may comprise a clock value. In that case the clock value is compared with the clock time in the virtual environment where the first application resides to look for a sufficient correlation. This is discussed in more detail in the embodiments below.

In combination with the present disclosure one skilled in the art will readily be able to determine a clock value correlation threshold. In an embodiment clock values that are within 1 second of each other may be sufficiently correlated. In another embodiment clock values that are within 1 millisecond of each other may be sufficiently correlated. In another embodiment clock values that are within 1 microsecond of each other may be sufficiently correlated. In general a clock value correlation threshold may be determined such that the threshold is less than the clock skew that would typically be associated with cloning a second virtual execution environment along with the associated environment clock or environment clock value from a first virtual execution environment and first environment clock.

In an embodiment the application requesting transmission of information which in this is case the second application may not have a nonce assigned. In that embodiment a nonce may be assigned to the second application by the nonce application that is in communication with the verification application. Nonces may be assigned to applications when applications are first loaded into virtual environments or may be assigned when the application attempts to communicate using the trusted security zone or when the application attempts to execute in the trusted security zone. Applications may seek verification prior to transmission because the request for transmission of data was for sensitive protected or confidential data such as financial or healthcare data or because the application does not want to receive a transmission of data from or send a transmission of data to an unknown source. In that embodiment the verification application may commence verification after the nonce is assigned to the second application. In an alternate embodiment if neither application has a nonce assigned to and or associated with it the verification application may request that the nonce application assign at least the application requesting transmission of information the second application a nonce. In some cases the application requesting transmission of information may also have an assigned and or associated nonce. This nonce assignment association may depend on the type and or sensitivity level of information requested for transmission. If the verification of the second application is successful a notification may be sent from the trusted security zone to the first application and then the first application may send receive the information in the request for transmission from the second application. In an embodiment while a nonce may be intended for single use verification the first application may based upon this verification allow further transmissions to from the second application. These further transmissions may be allowed for a predetermined period of time for a predetermined number of messages or combinations thereof.

If in any of these embodiments the verification of the nonce assigned to the second application fails the verification application may notify the first application that the second application has not been verified. The first application may decide to re attempt verification may block the second application from further communication or the trusted security zone may automatically re attempt verification and may or may not send a notification indicating the re attempt to the first application. The trusted security zone for example by way of the verification application may notify the first application that verification may be attempted again at a predetermined interval and or that different or additional information may be requested.

In one embodiment the first and the second applications may be in the same virtual environment. In an alternate embodiment the first application and the second application are referred to as original applications and are in a virtual environment that may be referred to as a first or an original virtual environment. It is appreciated that in some embodiments the first environment may have been cloned from another environment. In another embodiment this first virtual environment may be cloned to create a second virtual environment. The second virtual environment may comprise a copy of the plurality of original applications from the first virtual environment. This copied plurality of applications may include a copy of each the first application and the second application from the first virtual environment as well as a trusted security zone and a clock. In that embodiment an application that resides in the cloned environment which may be referred to as a copied application may attempt to contact an application from the first virtual environment to request to send information to and or receive information from an application in the first virtual environment such as the first application. In that embodiment the first application in the first virtual environment may contact the trusted security zone in the first environment for verification of a nonce associated with the copied application in the second virtual environment. As discussed above the verification application in conjunction with the nonce application determines if the copied application has a nonce. If the copied application does not have a nonce the verification application in the first virtual environment may send a message to the first application requesting further instruction providing options on how to proceed or may send another request for additional information to the copied application.

If the copied application has a nonce the verification application may verify the nonce in conjunction with the nonce application. This verification may comprise a comparison of a code assigned to the application and or a clock value. If the nonce is determined to be a known nonce for the subject application a further check of the clock value which may or may not be part of the nonce may be performed. The clock value may correspond to the clock value of the virtual environment where the second application currently executes. When the first virtual environment was cloned the time it took to copy and clone the original virtual environment may mean that the clock value of the copied application may not correspond to the clock value in the first virtual environment. In that event a notification may be sent to the first application that the copied application s verification failed. The first application may then block the copied application from contacting it again re attempt verification using the trusted security zone and or may send a notification to a telecommunications service provider regarding the failed verification and possible presence of a spoofed application. In an embodiment the first application may take action to cause the copied application to obtain a nonce on its own behalf and the verification may be re attempted.

In an alternate embodiment when a second application requests service from a first application the second application sends a request with a nonce to the first application the first application asks the trusted security zone to confirm the nonce and if the nonce is confirmed service is provided to the second application.

A trusted security zone provides chipsets with a hardware root of trust a secure execution environment for applications and secure access to peripherals. A hardware root of trust means the chipset should only execute programs intended by the device manufacturer or vendor and resists software and physical attacks and therefore remains trusted to provide the intended level of security. The chipset architecture is designed to promote a programmable environment that allows the confidentiality and integrity of assets to be protected from specific attacks. Trusted security zone capabilities are becoming features in both wireless and fixed hardware architecture designs. Providing the trusted security zone in the main mobile device chipset and protecting the hardware root of trust removes the need for separate secure hardware to authenticate the device or user. To ensure the integrity of the applications requiring trusted data such as a mobile financial services application the trusted security zone also provides the secure execution environment where only trusted applications can operate safe from attacks. Security is further promoted by restricting access of non trusted applications to peripherals such as data inputs and data outputs while a trusted application is running in the secure execution environment. In an embodiment the trusted security zone may be conceptualized as hardware assisted security.

A complete trusted execution environment TEE may be implemented through the use of the trusted security zone hardware and software architecture. The trusted execution environment is an execution environment that is parallel to the execution environment of the main mobile device operating system. The trusted execution environment and or the trusted security zone may provide a base layer of functionality and or utilities for use of applications that may execute in the trusted security zone. For example in an embodiment trust tokens may be generated by the base layer of functionality and or utilities of the trusted execution environment and or trusted security zone for use in trusted end to end communication links to document a continuity of trust of the communications. For more details on establishing trusted end to end communication links relying on hardware assisted security see U.S. patent application Ser. No. 13 532 588 filed Jun. 25 2012 entitled End to end Trusted Communications Infrastructure by Leo Michael McRoberts et al. which is hereby incorporated by reference in its entirety. Through standardization of application programming interfaces APIs the trusted execution environment becomes a place to which scalable deployment of secure services can be targeted. A device which has a chipset that has a trusted execution environment on it may exist in a trusted services environment where devices in the trusted services environment are trusted and protected against attacks. The trusted execution environment can be implemented on mobile phones and tablets as well as extending to other trusted devices such as personal computers servers sensors medical devices point of sale terminals industrial automation handheld terminals automotive etc.

The trusted security zone is implemented by partitioning all of the hardware and software resources of the mobile device into two partitions a secure partition and a normal partition. Placing sensitive resources in the secure partition can protect against possible attacks on those resources. For example resources such as trusted software applications may run in the secure partition and have access to hardware peripherals such as a touchscreen or a secure location in memory. Less secure peripherals such as wireless radios may be disabled completely while the secure partition is being accessed while other peripherals may only be accessed from the secure partition. While the secure partition is being accessed through the trusted execution environment the main mobile operating system in the normal partition is suspended and applications in the normal partition are prevented from accessing the secure peripherals and data. This prevents corrupted applications or malware applications from breaking the trust of the device.

The trusted security zone is implemented by partitioning the hardware and software resources to exist in a secure subsystem which is not accessible to components outside the secure subsystem. The trusted security zone is built into the processor architecture at the time of manufacture through hardware logic present in the trusted security zone which enables a perimeter boundary between the secure partition and the normal partition. The trusted security zone may only be manipulated by those with the proper credential and in an embodiment may not be added to the chip after it is manufactured. Software architecture to support the secure partition may be provided through a dedicated secure kernel running trusted applications. Trusted applications are independent secure applications which can be accessed by normal applications through an application programming interface in the trusted execution environment on a chipset that utilizes the trusted security zone.

In an embodiment the normal partition applications run on a first virtual processor and the secure partition applications run on a second virtual processor. Both virtual processors may run on a single physical processor executing in a time sliced fashion removing the need for a dedicated physical security processor. Time sliced execution comprises switching contexts between the two virtual processors to share processor resources based on tightly controlled mechanisms such as secure software instructions or hardware exceptions. The context of the currently running virtual processor is saved the context of the virtual processor being switched to is restored and processing is restarted in the restored virtual processor. Time sliced execution protects the trusted security zone by stopping the execution of the normal partition while the secure partition is executing.

The two virtual processors context switch via a processor mode called monitor mode when changing the currently running virtual processor. The mechanisms by which the processor can enter monitor mode from the normal partition are tightly controlled. The entry to monitor mode can be triggered by software executing a dedicated instruction the Secure Monitor Call SMC instruction or by a subset of the hardware exception mechanisms such as hardware interrupts which can be configured to cause the processor to switch into monitor mode. The software that executes within monitor mode then saves the context of the running virtual processor and switches to the secure virtual processor.

The trusted security zone runs a separate operating system that is not accessible to the device users. For security purposes the trusted security zone is not open to users for installing applications which means users do not have access to install applications in the trusted security zone. This prevents corrupted applications or malware applications from executing powerful instructions reserved to the trusted security zone and thus preserves the trust of the device. The security of the system is achieved at least in part by partitioning the hardware and software resources of the mobile phone so they exist in one of two partitions the secure partition for the security subsystem and the normal partition for everything else. Placing the trusted security zone in the secure partition and restricting access from the normal partition protects against software and basic hardware attacks. Hardware logic ensures that no secure partition resources can be accessed by the normal partition components or applications. A dedicated secure partition operating system runs in a virtual processor separate from the normal partition operating system that likewise executes in its own virtual processor. Users may install applications on the mobile device which may execute in the normal partition operating system described above. The trusted security zone runs a separate operating system for the secure partition that is installed by the mobile device manufacturer or vendor and users are not able to install new applications in or alter the contents of the trusted security zone.

At least some of the applications of the plurality of original applications may be considered trusted or authenticated applications. A trusted application may be one that may execute in whole or in part in the trusted security zone and an authenticated application may be one that may interact with the trusted security zone but may not execute in the trusted security zone . In an embodiment trusted and authenticated applications may have a first nonce assigned to them by a first nonce application that executes in the trusted security zone . The first nonce may be a unique single use identifier that may be requested by an original application or that may be assigned to the application automatically upon downloading from a trusted and or otherwise authorized and or authenticated source. The first nonce is a randomly constructed string of characters and or special characters that is deemed difficult to guess or discover by trial and error. The first nonce may comprise a plurality of components or attributes. In an embodiment one attribute or component of the first nonce may be an identifier comprising at least one group of numbers letters symbols or combinations thereof. In some embodiments where the first nonce includes more than one component attribute the components attributes may also be referred to as a level of protection. In another embodiment the first nonce may comprise a time stamp which may reflect the date and or time that the first nonce was assigned to an application. In a different embodiment the time stamp of the first nonce may comprise a clock value that reflects the clock value of the first clock in the virtual environment when the first nonce was assigned.

At block in the first application receives a request for a transmission from another application such as application B . In some embodiments the request at block may contain a nonce and in other embodiments the first trusted security zone may request a nonce from the requesting application as discussed below. This request for transmission may comprise at least one of a request to send information to or receive information from the second application . In an embodiment the first application may be a trusted application or an authenticated application. When the second application requests a transmission the first application may want to be able to verify that the second application is not a spoofed application or otherwise an altered application.

At block the first application may send a request to the trusted security zone to verify a second nonce that may be assigned to and or associated with the second application . The verification may comprise a verification that the second application is what it claims to be and or is executing from a known safe or otherwise verifiable location. In an embodiment the first application may be a trusted or authenticated application that has had a first nonce assigned to it prior to the request being sent to the first trusted security zone at block . A nonce may be assigned when an application is loaded into an environment or when an application attempts to communicate with or execute in the first trusted security zone . At block the first verification application which may reside in the first trusted security zone determines if there is a nonce associated with and or assigned to the second application . In some embodiments at the request of the second application or automatically based on predetermined settings the first verification application may also look for and or request a nonce from the first application

In one embodiment both the first application and the second application may be trusted or authenticated applications that have had first nonce and second nonce respectively assigned prior to the request being sent to the first trusted security zone at block . In that embodiment at block the first verification application may confirm for example in conjunction with the first nonce application that the first nonce and the second nonce assigned to the first application and the second application correspond to the nonces recorded in the first nonce application as being assigned to those respective applications. The verification at block by the first verification application may verify at least the second nonce . The second nonce may comprise a plurality of attributes and or components and at least one attribute and or component of the plurality of attributes and or components may be verified in this process. This attribute and or component may include a combination of symbols numbers letters or combinations thereof and or a time stamp and or a clock value. In some embodiments the second application may request verification of the first application which may proceed in a similar fashion to the verification for the second application in .

In an embodiment the time stamp of the second nonce may be checked against the time stamp for the nonce assigned to the second application that may be stored in the first nonce application . This time stamp may reflect when the second nonce was assigned. In an alternate embodiment the clock value may be checked against the value of the first clock in the first virtual environment where the first application is located where the second application is requesting to communicate with this is discussed in more detail below with respect to . It is appreciated that the nonce may comprise one more components and or attributes and that at least one component and or attribute may be verified at block .

If at block the first verification application successfully verifies the second nonce associated with and or assigned to second application at block the second application may be considered verified. This may be based on the verification application determining that the clock value of the nonce corresponds and or correlates sufficiently to the clock value of the first clock which may in some embodiments mean an exact match and in other embodiments may mean a match close enough to determine that the clock value of the nonce is not likely to reflect that of a different and or unauthorized cloned environment. Determining whether the clock associated with the nonce correlates sufficiently with the clock value of the first clock may be based on comparing the difference between the two clock values and a clock value correlation threshold. If the difference is less than the correlation threshold the two clock values are deemed sufficiently correlated. In combination with the present disclosure one skilled in the art will readily be able to determine a clock value correlation threshold. In an embodiment clock values that are within 1 second of each other may be sufficiently correlated. In another embodiment clock values that are within 1 millisecond of each other may be sufficiently correlated. In another embodiment clock values that are within 1 microsecond of each other may be sufficiently correlated. In general a clock value correlation threshold may be determined such that the threshold is less than the clock skew that would typically be associated with cloning a second virtual execution environment along with the associated environment clock or environment clock value from a first virtual execution environment and first environment clock.

When the clock value of the nonce correlates sufficiently to the clock value of the first clock at block the first application may receive a confirmation of verification and the transmission request sent at block may be granted by the first application at block . The information requested by the second application from the first application and or the information that the second application requested to send to the first application may be transmitted to the first application at block .

If the verification at block fails at block the second application may be asked by the verification application to re authenticate may be denied communications transmissions with the first application may be flagged by the first verification application and or the first nonce application at block as an application with which communication should not be allowed or combinations thereof. It is appreciated that in an embodiment the nonces such as the first nonce and the second nonce assigned by the first nonce application are each used only for a single use a single communication transmission or series of related transmissions. In an embodiment if an application other than of the first plurality of applications desires transmit information to and or receive information from the first application which has never interacted with that other application or for which a previous verification is no longer valid due to a predetermined time period a number of transmissions or a type of transmissions has expired or been exceeded. In that embodiment a different nonce may be assigned to the other application requesting transmission or receipt of information from the first application and the method in may be repeated. In an embodiment the first verification application may recognize that two applications have been previously authorized to communicate and may grant the requested communication transmission on the basis of this previous communication based on the fact that the request at block is within a predetermined time number of transmissions type of transmission or combinations thereof.

In the pathways X Y and Z may be further described as follows. Pathway X may be where the second application requests to transmit information to and or receive information from the first application for example at block . Pathway X may also illustrate where as discussed at block the first application receives sends the information sent requested by the second application at block . In an embodiment Pathway Y may indicate where at block the first application requests verification of the second application from the first trusted security zone and where that verification or failure of verification is sent back. In some embodiments if verification fails a notification may be sent to the first application that alerts the first application of the failure and or presents options for how to further proceed. In other embodiments a message comprising options for how to further proceed may be sent instead of a notification of failure. This message may comprise options as re attempt verification report application refuse all further attempts at communication from the second application that failed verification may be sent instead of or in addition to the notification. Pathway Z may illustrate the transmission of a request for verification from the first trusted security zone and or first verification application sent to the application requesting a transmission the second application . Pathway Z may also illustrate the transmission of the second nonce if present from the second application to the first trusted security zone and or first verification application .

The first application may send a request to the first trusted security zone to verify the nonce associated with and or assigned to second application at block . The verification at block may comprise a verification that the second application A is what it claims to be. In an embodiment the first application may be a trusted or authenticated application that has had a first nonce assigned to it prior to the request being sent to the first trusted security zone at block . The first verification application in the first trusted security zone may receive the request sent at block from the first application . In one embodiment both the first application and the second application A may be trusted or authenticated applications that have had a first nonce and a second nonce respectively assigned prior to the request being sent to the trusted security zone and prior to the first virtual environment being cloned at block . In that embodiment at block the first verification application may verify that the nonces assigned to at least one of the first application and the second application A corresponds to the nonces recorded and stored in the nonce application as being assigned to each respective application. This verification at block may comprise a verification of the first nonce and the second nonce which may comprise a plurality of attributes and or components and at least one attribute and or component is verified in this process.

If the second nonce comprises a time stamp the time stamp may be checked against the time stamp for that application stored in the first nonce application and this time stamp may reflect a clock value when the second nonce was assigned. In an alternate embodiment the time stamp may be a clock value that corresponds to the clock time in the environment where the second application A resides. The clock value of the nonce may be checked against the clock value on the first clock in the first virtual environment where the first application is located.

In one embodiment the first verification application asks the second application A for the time. If the current time associated with the second nonce of the second application A does not correlate sufficiently to the clock value of the first clock in the first virtual environment the transmission request may be denied at block . In one example the verification at block may fail because the clock associated with the second nonce of the second application A may not correlate closely to the current clock value on the first clock . This difference may be due to the time difference created when the environment is cloned copied and may be used to indicate a spoofed or otherwise undesirable application. It is appreciated that at least the first clock and any related copies may keep time down to units of measurement as small as may be needed to detect cloned spoofed or otherwise potentially untrustworthy applications.

Determining whether the clock associated with the second nonce correlates sufficiently with the clock value of the first clock may be based on comparing the difference between the two clock values and a clock value correlation threshold. If the difference is less than the correlation threshold the two clock values are deemed sufficiently correlated. In combination with the present disclosure one skilled in the art will readily be able to determine a clock value correlation threshold. In an embodiment clock values that are within 1 second of each other may be sufficiently correlated. In another embodiment clock values that are within 1 millisecond of each other may be sufficiently correlated. In another embodiment clock values that are within 1 microsecond of each other may be sufficiently correlated. In general a clock value correlation threshold may be determined such that the threshold is less than the clock skew that would typically be associated with cloning a second virtual execution environment along with the associated environment clock or environment clock value from a first virtual execution environment and first environment clock.

If the first verification application at block successfully verifies the first nonce and or the second nonce at block the request at may be granted at block after the first application receives confirmation of verification at block . The information requested from the first application and or the information that the second application A requested to send at block may then be transmitted at block . In an alternate embodiment if the application requesting transmission of information in this case the second application A is not a trusted or authenticated application and therefore may not have a nonce the first verification application at block may interpret this as a failed verification similar to block and or may require further steps for verification at block .

If the second application A has a second nonce but the verification at fails the second application may be asked to re authenticate. Instead of or in addition to this re authentication a message may be sent to the first application at block that the verification failed at block and the second application A may be denied communications with the first application . In alternate embodiments the second application A may be flagged at block by the first verification application and or the first nonce application as an application with which communication may not be allowed. It is appreciated that the nonces assigned by the nonce application may be for only a single use a single communication transmission or a series of related transmissions. If an application of the first plurality of applications and an application of the second plurality of applications wish to communicate or transmit information after the initial transmission at a different nonce may be assigned to at least the application requesting transmission or receipt of information the second application A in this example and the method in may be repeated. In an embodiment the first verification application may recognize that two applications have been previously authorized to communicate and may grant the requested communication transmission on the basis of this previous communication.

The DSP or some other form of controller or central processing unit operates to control the various components of the mobile device in accordance with embedded software or firmware stored in memory or stored in memory contained within the DSP itself. In addition to the embedded software or firmware the DSP may execute other applications stored in the memory or made available via information carrier media such as portable data storage media like the removable memory card or via wired or wireless network communications. The application software may comprise a compiled set of machine readable instructions that configure the DSP to provide the desired functionality or the application software may be high level software instructions to be processed by an interpreter or compiler to indirectly configure the DSP .

The DSP may communicate with a wireless network via the analog baseband processing unit . In some embodiments the communication may provide Internet connectivity enabling a user to gain access to content on the Internet and to send and receive e mail or text messages. The input output interface interconnects the DSP and various memories and interfaces. The memory and the removable memory card may provide software and data to configure the operation of the DSP . Among the interfaces may be the USB port and the infrared port . The USB port may enable the mobile device to function as a peripheral device to exchange information with a personal computer or other computer system. The infrared port and other optional ports such as a Bluetooth interface or an IEEE 802.11 compliant wireless interface may enable the mobile device to communicate wirelessly with other nearby handsets and or wireless base stations.

The keypad couples to the DSP via the input output interface to provide one mechanism for the user to make selections enter information and otherwise provide input to the mobile device . Another input mechanism may be the touch screen LCD which may also display text and or graphics to the user. The touch screen LCD controller couples the DSP to the touch screen LCD . The GPS receiver is coupled to the DSP to decode global positioning system signals thereby enabling the mobile device to determine its position.

It is understood that by programming and or loading executable instructions onto the computer system at least one of the CPU the RAM and the ROM are changed transforming the computer system in part into a particular machine or apparatus having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an application specific integrated circuit ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs which are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data which are read during program execution. ROM is a non volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage . The secondary storage the RAM and or the ROM may be referred to in some contexts as computer readable storage media and or non transitory computer readable media.

I O devices may include printers video monitors liquid crystal displays LCDs touch screen displays keyboards keypads switches dials mice track balls voice recognizers card readers paper tape readers or other well known input devices.

The network connectivity devices may take the form of modems modem banks Ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA global system for mobile communications GSM long term evolution LTE worldwide interoperability for microwave access WiMAX and or other air interface protocol radio transceiver cards and other well known network devices. These network connectivity devices may enable the processor to communicate with the Internet or one or more intranets. With such a network connection it is contemplated that the processor might receive information from the network or might output information to the network in the course of performing the above described method steps. Such information which is often represented as a sequence of instructions to be executed using processor may be received from and outputted to the network for example in the form of a computer data signal embodied in a carrier wave.

Such information which may include data or instructions to be executed using processor for example may be received from and outputted to the network for example in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embedded in the carrier wave or other types of signals currently used or hereafter developed may be generated according to several methods well known to one skilled in the art. The baseband signal and or signal embedded in the carrier wave may be referred to in some contexts as a transitory signal.

The processor executes instructions codes computer programs scripts which it accesses from hard disk floppy disk optical disk these various disk based systems may all be considered secondary storage ROM RAM or the network connectivity devices . While only one processor is shown multiple processors may be present. Thus while instructions may be discussed as executed by a processor the instructions may be executed simultaneously serially or otherwise executed by one or multiple processors. Instructions codes computer programs scripts and or data that may be accessed from the secondary storage for example hard drives floppy disks optical disks and or other device the ROM and or the RAM may be referred to in some contexts as non transitory instructions and or non transitory information.

In an embodiment the computer system may comprise two or more computers in communication with each other that collaborate to perform a task. For example but not by way of limitation an application may be partitioned in such a way as to permit concurrent and or parallel processing of the instructions of the application. Alternatively the data processed by the application may be partitioned in such a way as to permit concurrent and or parallel processing of different portions of a data set by the two or more computers. In an embodiment virtualization software may be employed by the computer system to provide the functionality of a number of servers that is not directly bound to the number of computers in the computer system . For example virtualization software may provide twenty virtual servers on four physical computers. In an embodiment the functionality disclosed above may be provided by executing the application and or applications in a cloud computing environment. Cloud computing may comprise providing computing services via a network connection using dynamically scalable computing resources. Cloud computing may be supported at least in part by virtualization software. A cloud computing environment may be established by an enterprise and or may be hired on an as needed basis from a third party provider. Some cloud computing environments may comprise cloud computing resources owned and operated by the enterprise as well as cloud computing resources hired and or leased from a third party provider.

In an embodiment some or all of the functionality disclosed above may be provided as a computer program product. The computer program product may comprise one or more computer readable storage medium having computer usable program code embodied therein to implement the functionality disclosed above. The computer program product may comprise data structures executable instructions and other computer usable program code. The computer program product may be embodied in removable computer storage media and or non removable computer storage media. The removable computer readable storage medium may comprise without limitation a paper tape a magnetic tape magnetic disk an optical disk a solid state memory chip for example analog magnetic tape compact disk read only memory CD ROM disks floppy disks jump drives digital cards multimedia cards and others. The computer program product may be suitable for loading by the computer system at least portions of the contents of the computer program product to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system . The processor may process the executable instructions and or data structures in part by directly accessing the computer program product for example by reading from a CD ROM disk inserted into a disk drive peripheral of the computer system . Alternatively the processor may process the executable instructions and or data structures by remotely accessing the computer program product for example by downloading the executable instructions and or data structures from a remote server through the network connectivity devices . The computer program product may comprise instructions that promote the loading and or copying of data data structures files and or executable instructions to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system .

In some contexts the secondary storage the ROM and the RAM may be referred to as a non transitory computer readable medium or a computer readable storage media. A dynamic RAM embodiment of the RAM likewise may be referred to as a non transitory computer readable medium in that while the dynamic RAM receives electrical power and is operated in accordance with its design for example during a period of time during which the computer system is turned on and operational the dynamic RAM stores information that is written to it. Similarly the processor may comprise an internal RAM an internal ROM a cache memory and or other internal non transitory storage blocks sections or components that may be referred to in some contexts as non transitory computer readable media or computer readable storage media.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

Also techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

