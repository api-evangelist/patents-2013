---

title: Supporting color fonts
abstract: A system includes a computing device that includes a memory configured to store instructions. The computing device also includes a processor to execute the instructions to perform operations that include receiving information that indicates whether an asset presenter being executed by a computing device is capable of presenting one or more colored fonts of a web asset. In response to receiving the information, sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09569865&OS=09569865&RS=09569865
owner: Monotype Imaging Inc.
number: 09569865
owner_city: Woburn
owner_country: US
publication_date: 20131220
---
This application claims priority under 35 USC 119 e to U.S. Patent Application Ser. No. 61 745 153 filed on Dec. 21 2012 the entire contents of which are hereby incorporated by reference.

This description relates to techniques for allowing computing devices to support color fonts for presentation.

In the ever expanding connectivity and information sharing capabilities provided by computer networks such as the Internet various types of web assets such as websites webpages etc. have been developed to assist with the transfer of information. Along with the almost explosive development of web assets the content being presented by the assets has similarly grown. Text audio video etc. is being incorporated into web assets to provide a more efficient and enjoyable viewing experience. For example different languages imagery etc. may be included in web assets to tailor content for characteristics of a viewer such as their geographical location. However providing such rich content does not come without some constraints. For example the functionality of computing devices operating systems software etc. may limit a viewer s ability to view and enjoy all of the content types that could be provided.

The systems and techniques described here relate to determining if an asset presenter e.g. a web browser a device etc. is capable of supporting fonts that are capable of employing multiple colors. Appropriate action can be taken based upon the determination. For example if capable of supporting such color fonts appropriate font information may be provided to the asset presenter for presenting the font e.g. in an asset such as a webpage website etc. . If not supported by the asset presenter font information may be prepared and provided such that the asset presenter can present the color fonts. By providing the ability to present such richly colored content viewer experiences may be improved along with their interest in the asset e.g. webpage website etc. being presented.

In one aspect a computer implemented method includes receiving information that requests one or more colored fonts of a web asset for an asset presenter being executed by a computing device. In response to receiving the information the method include sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device. The color font information is provided by an executable file and a color font file or an executable file that includes content of the color font file.

Implementations may include one or more of the following features. The executable file when executed by the computing device may adjust a document object model. Adjusting the document object model may include replicating glyphs of the web asset in a node based structure representation of the document object model. Adjusting the document object model may include assigning one or more colors to the replicated glyphs. The color font file may include a font subset for presenting the content of the web asset. The color font file may include scalable vector graphics. Sending the color font information may include sending a file to the computing device that includes glyph spacing information and is absent glyph marking information. Positioning of the glyph spacing information as presented by the computing device may be adjustable based upon user interaction.

In another aspect a system includes a computing device that includes a memory configured to store instructions. The computing device also includes a processor to execute the instructions to perform operations that include receiving information that requests one or more colored fonts of a web asset for an asset presenter being executed by a computing device. Operations also include in response to receiving the information sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device. The color font information is provided by an executable file and a color font file or an executable file that includes content of the color font file.

Implementations may include one or more of the following features. The executable file when executed by the computing device may adjust a document object model. Adjusting the document object model may include replicating glyphs of the web asset in a node based structure representation of the document object model. Adjusting the document object model may include assigning one or more colors to the replicated glyphs. The color font file may include a font subset for presenting the content of the web asset. The color font file may include scalable vector graphics. Sending the color font information may include sending a file to the computing device that includes glyph spacing information and is absent glyph marking information. Positioning of the glyph spacing information as presented by the computing device may be adjustable based upon user interaction.

In another aspect one or more computer readable media storing instructions that are executable by a processing device and upon such execution cause the processing device to perform operations that include receiving information that requests one or more colored fonts of a web asset for an asset presenter being executed by a computing device. Operations also include in response to receiving the information sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device. The color font information is provided by an executable file and a color font file or an executable file that includes content of the color font file.

Implementations may include one or more of the following features. The executable file when executed by the computing device may adjust a document object model. Adjusting the document object model may include replicating glyphs of the web asset in a node based structure representation of the document object model. Adjusting the document object model may include assigning one or more colors to the replicated glyphs. The color font file may include a font subset for presenting the content of the web asset. The color font file may include scalable vector graphics. Sending the color font information may include sending a file to the computing device that includes glyph spacing information and is absent glyph marking information. Positioning of the glyph spacing information as presented by the computing device may be adjustable based upon user interaction.

In another aspect a computer implemented method that includes receiving information that indicates whether an asset presenter being executed by a computing device is capable of presenting one or more colored fonts of a web asset. In response to receiving the information sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device.

Implementations may include one or more of the following features. Sending the font information may include sending an executable file to the computing device. Sending the font information may include sending a color font file to the computing device. The color font file may include scalable vector graphics. Sending the color font information may include sending a file to the computing device that includes glyph spacing information and is absent glyph marking information. Positioning of the glyph spacing information as presented by the computing device may be adjustable based upon user interaction.

In another aspect a system includes a computing device that includes a memory configured to store instructions. The computing device also includes a processor to execute the instructions to perform operations that include receiving information that indicates whether an asset presenter being executed by a computing device is capable of presenting one or more colored fonts of a web asset. In response to receiving the information sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device.

Implementations may include one or more of the following features. Sending the font information may include sending an executable file to the computing device. Sending the font information may include sending a color font file to the computing device. The color font file may include scalable vector graphics. Sending the color font information may include sending a file to the computing device that includes glyph spacing information and is absent glyph marking information. Positioning of the glyph spacing information as presented by the computing device may be adjustable based upon user interaction.

In another aspect one or more computer readable media storing instructions that are executable by a processing device and upon such execution cause the processing device to perform operations that include receiving information that indicates whether an asset presenter being executed by a computing device is capable of presenting one or more colored fonts of a web asset. In response to receiving the information sending color font information to the computing device to allow content of the web asset represented in colored fonts to be presented by the computing device.

Implementations may include one or more of the following features. Sending the font information may include sending an executable file to the computing device. Sending the font information may include sending a color font file to the computing device. The color font file may include scalable vector graphics. Sending the color font information may include sending a file to the computing device that includes glyph spacing information and is absent glyph marking information. Positioning of the glyph spacing information as presented by the computing device may be adjustable based upon user interaction.

These and other aspects and features and various combinations of them may be expressed as methods apparatus systems means for performing functions program products and in other ways.

Referring to many types of computing devices are capable of presenting various types of graphical content such as text images video etc. To present text and similar graphics various types of font families e.g. Times New Roman Arial etc. may be used that typically include a set of fonts e.g. regular italic bold bold italic etc. Each font generally includes a set of individual character shapes called glyphs and the glyphs generally share various design features e.g. geometry stroke thickness serifs size etc. associated with the font. One or more techniques may be utilized for representing such fonts for example outline based representations may be adopted in which lines and curves are used to define the borders of glyphs. Such fonts may be scalable for a variety of sizes e.g. for rendering by various computing devices and may be represented in one or more formats. For example scalable outline fonts may be represented in a format that includes data structures capable of supporting a variety of typographic visual symbols of many languages. Along with the size and shape of the glyphs used by the font to represent a character a color is also generally applied. For example relatively dark colors e.g. black blue etc. are typically implemented for presenting the font characters. However other colors such as lighter shaded colors e.g. white yellow etc. may also be implemented e.g. when a darker background such as a black background is being presented .

As illustrated in the figure some devices operating systems software applications etc. may be capable of presenting font characters and features that employ a single color. However often such devices operating systems applications etc. are unable to support presenting such characters and features in multiple colors. For example it may be desired to present an individual font with multiple colors such as one portion of a character in one color e.g. the horizontal crossbar of the character T and another portion of the character e.g. the vertical post of the character T in another color. In another example different characters may be presented in different colors for example the font character A may be presented in the color red while the font character B may be presented in the color blue. In this illustrated example a cellular telephone is executing an asset presenter e.g. web browser application to present content transmitted over one or more networks e.g. the Internet from a variety of sources. In this situation the web browser does not support the ability to present font characters in multiple colors. For example each character of the presented phrase Hi may only be presented by the web browser in one color e.g. the color black and not in multiple colors. Based upon the browser being executed by a user computing device the ability to use multiple colors for individual characters may or may not be supported and multi color content from an author may not be presented as originally prepared. However by knowing the capabilities of a device its operating system executed applications etc. information may be prepared and provided to the device so it can be capable of properly presenting such multi color content as originally intended.

Referring to a computing environment includes a computing device e.g. the cellular telephone that a user may interact with e.g. using a keypad etc. to identify a target web asset e.g. website webpage etc. for being presented by the computing device. For example the web browser or other type of asset presenter e.g. a software application may be executed by the cellular telephone for the user to target one or more webpages. Upon being identified operations of the web browser may include requesting via the Internet content from one or more webpage sources for the target webpage s . As illustrated in this particular example a webpage page is requested from web asset source and a corresponding web asset file or files are sent from the source through the Internet to the cellular telephone . In one arrangement the web asset files include a hypertext markup language HTML file that includes instructions for presenting the asset and a cascading style sheet CSS file that provides presentation semantics for the asset being provided by the HTML file.

To determine if the web browser is capable of processing and presenting multi color character fonts one or more techniques and methodologies may be implemented. For example operations may be executed at one or more locations for making the determination. In the illustrated example operations may be executed by the cellular telephone or other types of user computing devices and a font service provider which is in communication with the computing device through one or more networks e.g. the Internet . The font service provider may incorporate one or more architectures layouts etc. For example the font service provider may incorporate a relatively large distributions of systems computing devices e.g. servers etc. deployed in one or more locations e.g. different geographical locations and can be considered a content delivery network. Once determined if the web browser is capable of supporting multi color character fonts or not the font service provider may execute operations to provide appropriate information to the computing device for presenting the multi color content for either situation e.g. the web browser supports multi color fonts or the web browser does not support multi color fonts . As illustrated in the figure a color font file represents the multi color information that is sent from the font service provider to the user device i.e. the cellular telephone . Once the multi color information e.g. contained in the color font file is received the information is used by the user device e.g. executed by an asset presenter such as a web browser to present the multi color character fonts. In the illustrated example a determination is made whether a web browser supports color fonts however such a determination may be made for other types of web asset presenters. For example along with web browsers a web asset presenter may be considered as one or more applications referred to as a web based application that can access or be accessed over a network such as the Internet an intranet etc. Such web based applications may also be considered as software applications that are hosted over a network and coded in a browser supported programming language such as JavaScript combined with a browser rendered markup language such as HTML etc. . A web asset presenter may also be one or more applications e.g. native application executed on a computing device or multiple devices such as a user device e.g. the cellular telephone that provide a view of a web asset e.g. a web view . Similar applications executed locally remotely or in combination among multiple locations may be considered as a web asset presenter. Similar to making the determination for web asset presenters such a determination may be made for asset presenters that do not communicate with networks such as the Internet. For example an asset presenter may be considered as one or more applications locally executed by a computing device that is capable of presenting network based assets such webpages websites etc. without being in communication with the Internet.

One or more architectures may be implemented by the font service provider for determining if an asset presenter is capable of presenting color fonts along with other functionality. In the illustrated arrangement a font service manager is executed by a server located at the font service provider . To prepare and provide the color font file or files to the user device the font service manager may access information from one or more sources such as a storage device e.g. one or more hard drives CD ROMs etc. located at the font service provider . However the font information provided by the server may also be collected from one or more other sources located internal or external to the font service provider . In one arrangement upon receiving and executing the web asset file s e.g. the HTML file the web browser may initiate a request to be delivered to the font service provider that asks for a software agent to be sent to the user device e.g. the cellular telephone . Such agents can be considered as a software module that may be executable in a substantially autonomous manner. For example upon being provided to the user computer device e.g. the cellular telephone a software agent may operate without considerable user interaction. By operating in a somewhat flexible manner the software agent can adaptively identify if the web browser being executed by the user device is capable of supporting color fonts such as multiple colors being applied to one or more font characters. In one arrangement the software agent may be implemented as a file that includes scripting language that is capable of supporting a variety of programming styles e.g. JavaScript . Once received the software agent may be executed e.g. by the web browser to determine if the executed browser is capable of presenting color fonts. To make such a determination one or more techniques may be implemented. For example by identifying the browser being executed e.g. from information such as browser type version manufacturer etc. the software agent may use one or more predefined rules e.g. Microsoft Internet Explorer version supports color fonts Microsoft Internet Explorer version does not support color fonts etc. to determine if the web browser is capable of presenting such color fonts such as multi color characters. Along with a rules based determination being used by the software agent to determine if a web browser supports color fonts other techniques and methodology may be implemented. For example the software agent may poll the asset presenter e.g. web browser test the asset presenter etc. to determine if the asset presenter supports color fonts such as multi color font characters.

Operations may be executed remotely from the user device to determine if an asset presenter e.g. executed by the user device is capable of supporting color fonts such as multi color font characters. For example operations may be executed at the font service provider with or without operations being executed on the user device for making such determinations. In one arrangement the font service provider may use information provided by the user device to execute the determinations. For example software e.g. a user agent operating in association with asset presenter e.g. the web browser may provide information to the font service provider . Along with identifying information associated with the asset presenter e.g. web browser name type version capabilities etc. the user agent may also provide other information such as device information e.g. type of user device version capabilities etc. other software executed by the device e.g. operating system applications etc. and other types of information e.g. protocols being used by the web browser etc. . From the provided information the font service provider may determine if the user device e.g. cellular telephone is capable of supporting color fonts.

Software agents provided to the user device may also provide other type of functionality. For example a software agent may also gather other information for having a target web asset that uses color fonts to be presented by the user computing device. For example the software agent may identify the particular color related information from the web asset that may be needed from the font service provider to present the asset. In one arrangement the software agent may scan the CSS file provided with the web asset file s of the web asset to determine such color related information included in the web asset. The software agent may also review the HTML file provided with the web asset file s to identify color related information such as the particular characters glyphs etc. and other types of typographical elements e.g. ligatures a single glyph fractions subscripts superscripts etc. being used by the asset. Other types of information may also be collected for being provided to the font service provider . For example information associated with the user computing device operating system used by the device application s executed by the device e.g. the type of web browser being executed by the device etc. Once identified this information may be provided to the font service provider for processing and preparing the needed information for delivery to the user computing device e.g. the cellular telephone for presenting the content of the asset. Along with color related information other types of information may be provided to the font service provider . For example the particular fonts characters typographical features etc. included in the content of the web asset may be identified e.g. by a software agent and provided. In response to being provided this information the font service manager may prepare one or more subsets of appropriate font data along with the color related information such that the only font information provided to the user device is the information needed to present the web asset and no additional font information e.g. font characters not included in the web asset is transmitted from the font service provider to the user computing device.

Referring to a diagram graphically illustrates data transfers such that appropriate information e.g. color font information is provided to asset presenters e.g. web browsers for presenting web assets based upon whether or not the asset presenter supports color fonts. In this illustration one computing device i.e. the cellular telephone does not support this capability and another computing device i.e. a tablet computing device is capable of presenting such color fonts. Both devices respectively execute browsers which in this example are directed to the same target web asset. From the source of the web asset the corresponding web asset file s are provided to each device . Upon receiving the file s software agents are respectively provided to the devices e.g. from the font service provider or are previously residing and are executed e.g. to determine if each corresponding device is capable of providing support for such color fonts . To initiate the delivery of the software agents one or more techniques may be implemented. For example once delivered the web asset file s e.g. an HTML file and a CSS file may be used e.g. executed by the recipient device to initiate a request being sent to the font service provider . Receiving the request a software agent e.g. a JavaScript file may be sent as a reply from the font service manager being executed by the server at the font service provider . Along with sending the software agent the font service provider may perform other operations associated with the software agent. For example at predefined times e.g. intervals event triggered times etc. the agent may be updated by the font service provider as information is collected. Information regarding which types of browsers is capable of supporting color fonts incapable of supporting color fonts etc. may be gathered and included in updated versions of the software agent. The font service manager may execute other operations in some arrangements. For example the font service manager may determine if a web browser is capable of supporting or not supporting color fonts and other potential features e.g. scalable font formats such as OpenType fonts . Receiving information from a device e.g. the type of browser being executed by the device in a request such as request the font service manager may be able to determine if color fonts are supported by the device and execute appropriate operations. For example information associated with the asset presenter e.g. web browser and collected by a user agent may be provided in the request being sent from the device to the font service provider . From the provided information and possibly other information e.g. present at the font service provider the font service manager may determine the color font capabilities of the asset presenter executed by the device and take appropriate action.

The software agents may be capable of performing other operations. For example operations may be respectively executed by the software agents to collect information regarding color information typographical features and other content of the web asset being provided by the web asset file s . In one example each software agent may read the CSS file included with the web asset file s to identify which font information e.g. color information classes etc. may be used by the asset. The software agent may also read the HTML file included with the web asset file s to identify the particular colors characters features etc. that may be used by the web asset. In some arrangements the software agent may read information of the HTML file from other sources for example information from a document object model DOM a node based structure used to organize the information e.g. a DOM tree etc. By identifying data such as the colors characters etc. used by the web asset one or more advantageous operations may be executed. For example if a relatively small number of colors characters glyphs etc. for a particular font are identified as being presented for the web asset an appropriate font subset that only includes those identified colors characters glyphs typographical features e.g. OpenType font features etc. may be provided by the font service provider thereby conserving processing time and memory by not having font information absent from the web asset being sent to the corresponding user device. Incremental subsetting techniques may also be employed. For example after a subset is produced for the color fonts characters typographical features etc. present in a first page of a web asset this identified information may not be used for producing subset s for subsequent pages e.g. a second page of the web asset. By filtering out color fonts characters typographical features etc. already present in a subset less processing time and memory may be consumed in a redundant manner.

In some arrangements operations of the software agents may be initiated by one or more conditions being satisfied one or more events occurring etc. For example the software agents may not use the contents of the web asset file s until appropriately signaled that one or more events have occurred. In one arrangement applications such as a text to speech application may process the contents of the web asset file s prior to being used by the software agents . For example once textual content of the web asset file s e.g. an HTML file has been read by the text to speech application e.g. for conversion to audible speech one or more signals may be sent or other type of signaling technique employed to notify the software agents that the web asset files s may be accessed and used. In some arrangements operations of the software agent may execute substantially in parallel with operations of other applications that also use the contents of the web asset file s e.g. the software agent and one or more other applications may access content of the web asset file s in parallel .

To provide the collected information e.g. information collected by a user agent does the browser support color fonts etc. what color information color fonts etc. are included in the web asset etc. one or more techniques or methodologies may be implemented. For example to provide the collected information to the font service provider each of the user devices may send a corresponding request to the font service provider. In this arrangement each device is wirelessly connected to the one or more networks e.g. the Internet for exchanging information with the font service provider as represented with the respective graphics . Upon receiving the requests the font service manager prepares color font information for the devices based upon the information provided in each respective request. For example dependent upon the capability of the corresponding browser different types of information may be respectively prepared and sent by the font service provider . In the illustrated arrangement a color font file is prepared and sent to the device executing the web browser that assists the device in supporting color fonts. In general the information included in the color font file allows the device to express the color font of the web asset as authored. In one arrangement the color font file may include color font formats that are directly supported by the web browser . For example such a color font format may be implemented in a format that includes data structures capable of supporting a variety of typographic visual symbols of many languages. A format such as a variant of the OpenType format may be capable of defining color fonts along with other types of typographical features for one or more scalable computer fonts. Generally using a file or files of relatively reduced size such formats may be advantageous.

In some arrangements the color font file may include other types of color font information. For example one or more other formats may be implemented for providing color font information. In one arrangement the asset presenter e.g. web browser of the device may be compatible with a family of specifications of an extensible markup language XML based file format for two dimensional vector graphics such as scalable vector graphics SVG . Formats such as SVG inline SVG SVG Tiny e.g. for mobile devices etc. can be used for static imagery e.g. individual images and dynamic imagery e.g. interactive animated imagery etc. . Similar to SVG other implementations may also be employed that use layering techniques e.g. apply one color to a background layer apply a second color to a foreground layer etc. for providing color font information e.g. in the color font file to the asset presenter e.g. web browser .

Some web browsers or other types of asset presenters are unable to support color fonts formats such as SVG. In such situations one or more techniques may be implemented to enable color fonts. For example one or more executable files may be provided to the asset presenter e.g. a non supporting web browser such that when executed each character present in the web asset is replicated into multiple glyphs such that each may be assigned a specific color. For example one or more JavaScript files may be provided and when executed the DOM tree associated with a target web asset is altered at run time such that each character present in the asset is replicated into multiple glyphs and assigned a corresponding color. Two or more of the replicated glyphs may share a common font or two or more different fonts may be used by the replicated glyphs. Assigned colors the executable files may layer the replicated glyphs such that a multi color character may be presented in one or more fonts e.g. web fonts . In some arrangements the executed file or files e.g. JavaScript files a software agent etc. may insert adjust etc. data in the DOM tree.

In this example recognizing that the web browser of the device does not support color fonts e.g. from the information provided by the request different color font information may be sent to the user device compared to the color font file sent to the user device capable of supporting such color fonts . One or more techniques may be implemented to provide color font information to non supporting web browsers for presenting for example multi color font characters. In the illustrated example based upon the information included in the request multiple files may be sent from the font service provider to the non supporting browser of user device . In particular a color font file is delivered from the font service provider that includes some color font information needed to present the color font content of the web asset. In some examples information is only provided for the content included in the web asset to be presented. As such a subset of information needed to present the asset may be provided e.g. font color information for characters present in the web asset thereby conserving sources such as memory processing time throughput and or other transmission characteristics etc.

In addition to the color font file an executable file may be provided by the font service provider . Typically the executable file e.g. a JavaScript file includes logic for producing processing etc. color font information. For example the executable file may include logic for adjusting the DOM tree of the target web asset for replicating characters and assigning colors to the corresponding glyphs. Additionally the executable file may include logic for layering the replicated glyphs for producing multi color characters for example. Similar to the color font files the contents of the executable file may be reduced based upon the subset of material included in the web asset. For example logic may be absent from the executable file if corresponding characters and colors are not included in the content of the web asset. Further multiple executable files may be sent from the font service provider to the device rather than a single executable file. For example multiple files may be used for delivering the logic for providing color font information. In some arrangements subsetted color font information may be delivered in an individual file or concatenated from multiple files into a single file. In some arrangements the content of files may be combined. For example by including the content e.g. SVG data of the color font file and the executable file e.g. a JavaScript file a single file e.g. an executable file that contains the content needed by an asset presenter e.g. the non supporting web browser may be provided. Along with using the information provided from the font service provider for presenting color fonts e.g. with asset presenters that support or do not support such features the information e.g. provided by one or more font files executable files etc. may be used for other applications. For example this information may be utilized by an editor executed locally e.g. by a user device or remotely e.g. at the font service provider or other location for corresponding applications e.g. creating content editing content managing content etc. . For example an editor that allows a user to select various types of characters e.g. to create different types of presentations assets applications etc. may utilize the color font information. Similar to providing characters for selection the editor may also provide colors and various color patterns and palettes for content creation. Along with different types of editors various types of user interfaces may be implemented. For example interfaces may be implemented that are directed toward use on a local computer. Similarly interfaces may be implemented for remotely located computer systems e.g. cloud based computer systems and services and other types of computer and network architectures.

Referring to a graphical representation is presented that includes font characters that use multiple colors. In particular along with shapes being used the multiple colors applied to each character give the appearance that each letter of the word HELLO is made of bamboo sticks.

Along with information for presenting multi color characters other types of information may be included in the color font information. For example similar to solid colors being assigned to portions of a character gradients of one or more colors may be represented in the color font information. By representing such gradients a variety of effects e.g. lighting effects etc. may be simulated. For example by applying color gradients to portions of the letters included in the representation the incident angle of a light source may be simulated and potentially adjusted . Physical texture may also be represented by in color font information. For example one or more representations of physical textures e.g. wood fur sand smooth metal glass leather etc. may be represented in the information e.g. the color font file provided to an asset presenter capable of supporting color fonts the color font file and or the executable file provided to an asset presenter unable to support color fonts . Similar to solid colors such gradients textures etc. may be represented by vector graphics e.g. SVG inline SVG SVG Tiny etc. or other techniques that use geometrical primitives for representing images and allow the images to be scaled without significant degrading of clarity. Textures may be represented along one or more axes for example to create texture patterns. A graphical element that represents a texture element may be mirrored along an x axis and a y axis to produce a two dimensional representation of the texture. By mirroring the graphical element along a single axis e.g. an x axis a one dimensional texture path may be produced that extends along the single axis. Through the use of vector graphics the texture representation may be adjusted e.g. scaled up scaled down offset bent etc. to provide the visual effect of interest e.g. have a texture path follow a straight line curved line etc. represent a two dimensional surface with the texture etc. .

Similar to producing two dimensional characters such color information could also be used for producing three dimensional characters. For example color font information representing solid colors color gradients textures etc. may be used to define three dimensional characters based upon the location of one or more virtual light sources. Along with using the geometry of the virtual light source or sources other geometrical locations may be used for defining the shading tone etc. of three dimensional characters or combinations of two and three dimensional characters . For example the perspective of one or more viewers may be defined and used to determine the colors gradients textures etc. to be applied to portions of the characters. For example colors gradients and textures may be applied to provide a certain esoteric visual effect at the perspective of the viewer. Along with static views use of a virtual light source or light sources one or more viewing perspectives etc. may be used for dynamically changing characters. For example characters that incorporate one or more animations e.g. the crossbar of a letter T spins about an axis defined by the vertical bar of the letter may use colors gradients textures etc. to present the animated characters from a particular viewing perspective while being illuminated by one or more virtual light sources. Similar to virtual light sources data representing real light sources may be used for determining colors gradients textures etc. to be applied to portions of characters. For example data from one or more sensors may be used to determine parameters e.g. incident angle location orientation etc. properties e.g. light intensity polarization etc. etc. of one or more real light sources e.g. the sun street lights surface reflections etc. to determine appropriate colors gradients textures etc. for applying to characters. Viewer perspective and other viewing characteristics may also be included in defining the presentable characters.

Referring to information may be provided from the font service provider such that the presented text e.g. represented in a multi color font may take advantage of other capabilities of an asset presenter such as a web browser. For example along with presenting text e.g. in a webpage the web browser may be capable of interacting with the text to allow a user to select a portion of the text e.g. highlight the text through pointing device operations copy and paste the text e.g. into another executed application search the content of the text e.g. for user provided search terms etc. In some instances such as when the web browser is not capable of supporting color fonts additional information may be provided by the font service provider to allow for such interactions along with assisting with color font support to present the text. In one example technique additional data being provided may represent spatial information associated with the font glyphs but not include any additional data for visual information e.g. character outlines or fill . As such glyph spacing information may be provided but glyph marking information may be absent. Regardless of whether color fonts are supported or not the web browser is able to recognize and use this spatial information. For example the spatial information may assist the web browser with positioning a cursor between the text characters. Made aware of the spatial boundaries of the character the web browser can allow the text to be searched portions selected copied for pasting in other applications etc. regardless of whether color fonts are supported by the browser.

One or more techniques may be employed to provide such an empty or invisible font that provides spacing information but is absent additional visual information. For example such invisible font information may be included in one or more files provided by the font service provider . With reference to along with providing the color font file and the executable file for use with the web browser the font service provider may also provide a file that includes such invisible font information. For the situation in which the web browser supports color fonts e.g. web browser a similar file that includes invisible font information may be sent along with a file with color font information e.g. color font file from the font service provider . Other combinations of files may be employed for providing the invisible font information. For example rather than being sent in a separate file the invisible font information may be combined with the color font information and sent in a single file such as the color font file . The invisible font information may also be sent from other sources. For example such invisible font information may be included in the web asset file s e.g. included in the HTML file defining a webpage . In an HTML file a node may be defined for each word to be displayed for instructing that the word be presented in such an invisible font.

Once provided the color font information e.g. SVG data in the color font file and the invisible font information e.g. in a separate file from the font service provider the web browser can overprint the invisible font with a color font. As such the web browser can be assisted in presenting a color font and the web browser is also capable of allowing text to be searched selected copied for pasting into another application etc. by using the invisible font data. As illustrated in the figure two characters are presented that employ a font that uses multiple colors represented in shades of gray for each character. Additionally an invisible font for each character represented by hash lined boxes provides spatial information such as for positioning a cursor on either side or between the characters.

To assist with allowing the spatial information provided by the invisible font to be utilized the layering position of the color font and the invisible font may be adjusted. For example the invisible font may be initially presented and overprinted by the color font. To assist with the selection of the characters the layer position of the invisible font and the color font may be reversed such that the invisible font lies over the color font. Once the positions have changed selection of one or more characters may be easier for the user e.g. operating a pointing device . To initiate the reversing of the positions one or more techniques may be implemented. For example based upon a pointing device activity being detected e.g. the user left clicks on a mouse the positions of the invisible font and the color font may reverse. Once reversed the user can then select the desired character s for other operations e.g. copying cutting pasting etc. .

Referring to a flowchart represents operations of a font service manager e.g. the font service manager shown in . Operations of the font service manager are typically executed by a single computing device e.g. the server also shown in however operations of the font service manager may be executed by multiple computing devices. Along with being executed at a single site e.g. the font service provider shown in operation execution may be distributed among two or more locations.

Operations of the font service manager may include receiving receiving information that requests one or more colored fonts of a web asset for an asset presenter e.g. a web browser being executed by a computing device. In some arrangements the received information may include information about the computing device e.g. indicate whether the asset presenter being executed by the computing device is capable of presenting the one or more colored fonts of the web asset. For example a request may be sent from the computing device to the font service provider where the font service manager is executed that contains information indicative of whether a web browser executed by the device supports color fonts e.g. information that identifies web browser the computing device etc. . In some arrangements the request may be absent information indicative of whether the asset presenter is capable or not of supporting colored fonts. Operations may also include in response to receiving the information sending color font information to the computing device to allow content e.g. characters etc. of the web asset represented in colored fonts to be presented by the computing device. The color font information is provided by an executable file and a color font file or an executable file that includes content of the color font file. For example a color font file may be sent by the font service provider that includes inline SVG information along with an executable file e.g. a JavaScript file for producing color font characters. In some arrangements the contents of these two files may be combined. For example an executable file e.g. a JavaScript file may be provided that also includes the content of the color font file e.g. inline SVG information so that the color font characters may be produced for presentation from a single file. Other file combinations and file content combinations may be realized. For example subsets of color font information may be produced and packaged prior to sending the information to the computing device.

Referring to a flowchart represents other potential operations of a font service manager e.g. the font service manager shown in . As mentioned above operations of the font service manager are typically executed by a single computing device e.g. the server also shown in however operations of the font service manager may be executed by multiple computing devices. Along with being executed at a single site e.g. the font service provider shown in operation execution may be distributed among two or more locations.

Operations of the font service manager may include receiving information that indicates whether an asset presenter e.g. a web browser being executed by a computing device is capable of presenting one or more colored fonts. For example a request may be sent from the computing device to the font service provider where the font service manager is executed that contains information indicative of whether a web browser executed by the device supports color fonts e.g. information that identifies web browser the computing device etc. . Operations may also include in response to receiving the information sending color font information to the computing device to allow content e.g. characters etc. of the web asset represented in colored fonts to be presented by the computing device. For example a color font file may be sent by the font service provider that includes inline SVG information an executable file e.g. a JavaScript file and or other information for producing color font characters. Other operations may also subset the color font information prior to sending the information to the computing device.

The system may provide scalable stores for storing data resources. The client device may upload data resources to the hosted storage service and control access to the uploaded data resources. Access control may include a range of sharing levels e.g. private shared with one or more individuals shared with one or more groups public etc. . Data stored in hosted storage service can be secured from unauthorized access. The hosted storage service can use a simple and consistent application programming interface or API which can allow arbitrary quantities of structured or unstructured data to be kept private or shared between individuals organizations or with the world at large. The client device may access retrieve be provided store etc. data in the hosted storage service for any number of a variety of reasons. For example data may be stored for business reasons e.g. provide identification information to attain access clearance for font data at the hosted storage service or for use in data processing by other services.

The client device may be implemented using a computing device such as the computing device or the mobile device described with respect to . The client device may communicate with the hosted storage service via a network such as the Internet. The client device may communicate across the network using communication protocols such as for example one or more of Transmission Control Protocol Internet Protocol TCP IP Hypertext Transfer Protocol HTTP Secure Shell Remote Protocol SSH or Application Program Interfaces API . While only a single client device is shown there may be multiple client devices communicating across the network with the hosted storage service and or other services and devices.

The hosted storage service may be implemented such that client applications executing on client device such as a client application may store retrieve or otherwise manipulate data resources in the hosted storage service . The hosted storage service may be implemented by one or more server devices which may be implemented using a computing device such as the computing device or mobile device described with respect to . For example the hosted storage service may be implemented by multiple server devices operating in the same or different data centers.

The hosted storage service generally includes an interface frontend an interface backend a storage backend and metadata for resources stored in the storage backend . The hosted storage service may also include an authenticator to verify that a user requesting one or more fonts should be provided access to the fonts e.g. based on a service subscription rental period etc. .

In general the interface frontend may receive requests from and send responses to the client device . For instance the hosted storage service may be implemented as a Web Service with a corresponding set of Web Service Application Programming Interfaces APIs . The Web Service APIs may be implemented for example as a Representational State Transfer REST based HTTP interface or a Simple Object Access Protocol SOAP based interface. Interface frontend may receive messages from the client and parse the requests into a format usable by the hosted storage service such as a remote procedure call RPC to an interface backend . The interface frontend may write responses generated by the hosted storage service for transmission to the client . In some implementations multiple interface frontends may be implemented for example to support multiple access protocols.

The interface frontend may include a graphical front end for example to display on a web browser for data access. The interface frontend may include a sub system to enable managed uploads and downloads of large files e.g. for functionality such as pause resume and recover from time out . The interface frontend may monitor load information and update logs for example to track and protect against denial of service DOS attacks.

As described above the Web Service API may be a REST based HTTP interface. In a REST based interface a data resource is accessed as a resource uniquely named using a uniform resource identifier URI and the client application and service exchange representations of resource state using a defined set of operations. For example requested actions may be represented as verbs such as by HTTP GET PUT POST HEAD and DELETE verbs. The GET verb may be used to retrieve a resource while the HEAD verb may be used to retrieve information about a resource without retrieving the resource itself. The DELETE verb may be used to delete a resource from the hosted storage service . The PUT and POST verbs may be used to upload a resource to the service . PUT requests may come from the client and contain authentication and authorization credentials and resource metadata in a header such as an HTTP header. POST requests may be received when a client wants to upload from a web browser form. The form POST upload protocol for the hosted storage service may involve multiple form fields to provide authentication authorization and resource metadata. More generally any of the API requests may include credentials for authentication and authorization for example in a header of the request. An authorization header may be included in the REST requests which may include an access key to identify the entity sending the request.

Alternatively or additionally a user may be authenticated based on credentials stored in a browser cookie which may be appended to the API requests. If no valid cookie is present a redirect to an authentication frontend may be generated and the authentication frontend may be used to generate the browser cookie. The authentication frontend may be used by systems and services in addition to the hosted storage service e.g. if the organization operating the hosted storage service also operates other web services such as email service . A user may also or alternatively be authenticated based on authentication credentials from an external credentialing service or an external service that includes credentialing functionality. User or group identifier information may be calculated from the external service s credential information. Requests sent by the client to the interface frontend may be translated and forwarded to the external service for authentication.

In general resources stored in the hosted storage service may be referenced by resource identifiers. The hosted storage service may define namespaces to which a valid resource identifier must conform. For example the namespace may require that resource identifiers be a sequence of Unicode characters whose UTF 8 encoding is at most 1024 bytes long. As another example the namespace may require that resource identifiers be globally unique identifiers GUIDs which may be 128 bit integers.

Resources e.g. objects such as font data may be stored in hosted storage service in buckets. In some examples each bucket is uniquely named in the hosted storage service each data resource is uniquely named in a bucket and every bucket and data resource combination is unique. Data resources may be uniquely identified by a URI that includes the bucket name and the resource name and identifies the hosted storage service .

The interface backend along with the authenticator may handle request authentication and authorization may manage data and metadata and may track activity such as for billing. As one example the interface backend may query the authenticator when a request for one or more fonts is received. The interface backend may also provide additional or alternative functionality. For example the interface backend may provide functionality for independent frontend backend scaling for resource utilization and responsiveness under localized heavy loads. Data management may be encapsulated in the interface backend while communication serving may be encapsulated in the interface frontend . The interface backend may isolate certain security mechanisms from the client facing interface frontend .

The interface backend may expose an interface usable by both the interface frontend and other systems. In some examples some features of the interface backend are accessible only by an interface frontend not shown used by the owners of the hosted storage service internal users . Such features may include those needed for administrative tasks e.g. resolving a resource reference to a low level disk address . The interface backend may handle request authentication e.g. ensuring a user s credentials are valid and authorization e.g. verifying that a requested operation is permitted . The interface backend may also provide encryption and decryption services to prevent unauthorized access to data even by internal users.

The interface backend may manage metadata associated with data resources for example in a MySQL database or BigTable. User specified names labeling the buckets can be completely defined within the metadata and resource metadata can map a resource name to one or more datastores storing the resource. The metadata can also contain bucket and resource creation times resource sizes hashes and access control lists ACL for both buckets and resources. The interface backend can log activity and track storage consumption to support accounting for billing and chargebacks. In some examples this includes quota monitoring in each dimension in which customers are charged e.g. reads writes network transfers total storage in use .

The ACLs may generally define who is authorized to perform actions on corresponding buckets or resources and the nature of the permitted actions. The ACLs may be an unordered list of scope role pairs plus Boolean flags. The scope may define a user or group of users and the role may define the access permissions for the user or group. In some examples the union of all scope role pairs may define access rights. In some examples more specific scope role pairs override more general ones.

The storage backend may contain multiple datastores . Although three datastores are shown more or fewer are possible. Each of the datastores may store data resources in a particular format. For example data store may store a data resource as a Binary Large Object BLOB data store may store a data resource in a distributed file system e.g. Network File System and data store may store a data resource in a database e.g. MySQL .

Computing device includes processor memory storage device high speed interface connecting to memory and high speed expansion ports and low speed interface connecting to low speed bus and storage device . Each of components and are interconnected using various busses and can be mounted on a common motherboard or in other manners as appropriate. Processor can process instructions for execution within computing device including instructions stored in memory or on storage device to display graphical data for a GUI on an external input output device including e.g. display coupled to high speed interface . In other implementations multiple processors and or multiple buses can be used as appropriate along with multiple memories and types of memory. Also multiple computing devices can be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

Memory stores data within computing device . In one implementation memory is a volatile memory unit or units. In another implementation memory is a non volatile memory unit or units. Memory also can be another form of computer readable medium including e.g. a magnetic or optical disk.

Storage device is capable of providing mass storage for computing device . In one implementation storage device can be or contain a computer readable medium including e.g. a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in a data carrier. The computer program product also can contain instructions that when executed perform one or more methods including e.g. those described above. The data carrier is a computer or machine readable medium including e.g. memory storage device memory on processor and the like.

High speed controller manages bandwidth intensive operations for computing device while low speed controller manages lower bandwidth intensive operations. Such allocation of functions is an example only. In one implementation high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which can accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which can include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet can be coupled to one or more input output devices including e.g. a keyboard a pointing device a scanner or a networking device including e.g. a switch or router e.g. through a network adapter.

Computing device can be implemented in a number of different forms as shown in the figure. For example it can be implemented as standard server or multiple times in a group of such servers. It also can be implemented as part of rack server system . In addition or as an alternative it can be implemented in a personal computer including e.g. laptop computer . In some examples components from computing device can be combined with other components in a mobile device not shown including e.g. device . Each of such devices can contain one or more of computing device and an entire system can be made up of multiple computing devices communicating with each other.

Computing device includes processor memory an input output device including e.g. display communication interface and transceiver among other components. Device also can be provided with a storage device including e.g. a microdrive or other device to provide additional storage. Each of components and are interconnected using various buses and several of the components can be mounted on a common motherboard or in other manners as appropriate.

Processor can execute instructions within computing device including instructions stored in memory . The processor can be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor can provide for example for coordination of the other components of device including e.g. control of user interfaces applications run by device and wireless communication by device .

Processor can communicate with a user through control interface and display interface coupled to display . Display can be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. Display interface can comprise appropriate circuitry for driving display to present graphical and other data to a user. Control interface can receive commands from a user and convert them for submission to processor . In addition external interface can communicate with processor so as to enable near area communication of device with other devices. External interface can provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces also can be used.

Memory stores data within computing device . Memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory also can be provided and connected to device through expansion interface which can include for example a SIMM Single In Line Memory Module card interface. Such expansion memory can provide extra storage space for device or also can store applications or other data for device . Specifically expansion memory can include instructions to carry out or supplement the processes described above and can include secure data also. Thus for example expansion memory can be provided as a security module for device and can be programmed with instructions that permit secure use of device . In addition secure applications can be provided through the SIMM cards along with additional data including e.g. placing identifying data on the SIMM card in a non hackable manner.

The memory can include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in a data carrier. The computer program product contains instructions that when executed perform one or more methods including e.g. those described above. The data carrier is a computer or machine readable medium including e.g. memory expansion memory and or memory on processor which can be received for example over transceiver or external interface .

Device can communicate wirelessly through communication interface which can include digital signal processing circuitry where necessary. Communication interface can provide for communications under various modes or protocols including e.g. GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication can occur for example through radio frequency transceiver . In addition short range communication can occur including e.g. using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module can provide additional navigation and location related wireless data to device which can be used as appropriate by applications running on device . Sensors and modules such as cameras microphones compasses accelerators for orientation sensing etc. maybe included in the device.

Device also can communicate audibly using audio codec which can receive spoken data from a user and convert it to usable digital data. Audio codec can likewise generate audible sound for a user including e.g. through a speaker e.g. in a handset of device . Such sound can include sound from voice telephone calls can include recorded sound e.g. voice messages music files and the like and also can include sound generated by applications operating on device .

Computing device can be implemented in a number of different forms as shown in the figure. For example it can be implemented as cellular telephone . It also can be implemented as part of smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which can be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium and computer readable medium refer to a computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying data to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be a form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in a form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or a combination of such back end middleware or front end components. The components of the system can be interconnected by a form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

In some implementations the engines described herein can be separated combined or incorporated into a single or combined engine. The engines depicted in the figures are not intended to limit the systems described here to the software architectures shown in the figures.

A number of embodiments have been described. Nevertheless it will be understood that various modifications can be made without departing from the spirit and scope of the processes and techniques described herein. In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps can be provided or steps can be eliminated from the described flows and other components can be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

