---

title: Crowd sourcing information to fulfill user requests
abstract: A user request is received from a mobile client device, where the user request includes at least a speech input and seeks an informational answer or performance of a task. A failure to provide a satisfactory response to the user request is detected. In response to detection of the failure, information relevant to the user request is crowd-sourced by querying one or more crowd sourcing information sources. One or more answers are received from the crowd sourcing information sources, and the response to the user request is generated based on at least one of the one or more answers received from the one or more crowd sourcing information sources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09280610&OS=09280610&RS=09280610
owner: Apple Inc.
number: 09280610
owner_city: Cupertino
owner_country: US
publication_date: 20130315
---
This application claims priority of U.S. Provisional Application Ser. No. 61 646 831 filed May 14 2012 which is incorporated herein by reference in its entirety.

The disclosed embodiments relate generally to digital assistants and more specifically digital assistants that provide crowd sourced responses to users speech based requests.

Just like human personal assistants digital assistants or virtual assistants can perform requested tasks and provide requested advice information or services. An assistant s ability to fulfill a user s request is dependent on the assistant s correct comprehension of the request or instructions. Recent advances in natural language processing have enabled users to interact with digital assistants using natural language in spoken or textual forms rather than employing a conventional user interface e.g. menus or programmed commands . Such digital assistants can interpret the user s input to infer the user s intent translate the inferred intent into actionable tasks and parameters execute operations or deploy services to perform the tasks and produce output that is intelligible to the user. Ideally the output produced by a digital assistant should fulfill the user s intent expressed during the natural language interaction between the user and the digital assistant.

The ability of a digital assistant system to produce satisfactory responses to user requests depends on the natural language processing knowledge base and artificial intelligence implemented by the system. At any time a digital assistant may be limited by its particular implementation however sophisticated that implementation may be and fail to produce a satisfactory response to a user s request. A well designed response procedure in such a situation can improve a user s experience in interacting with the system and prevent the user s loss of confidence in the system s service.

The embodiments disclosed herein provide methods systems computer readable storage medium and user interfaces for a digital assistant to crowd source assistance or information from one or more external information sources so called crowd sourcing information sources or CS information sources and generate a response to a user request based on the crowd sourced information or assistance. These external information sources for example include expert information services general information sources and forums where answers to questions are provided in structured semistructured and unstructured forms by members of the public. In addition crowd sourced information and answers can be stored e.g. in a crowd sourced knowledge base in a manner that facilitates searching based on natural language queries or structured queries derived from subsequent user requests.

Accordingly some embodiments provide a method for providing a response to a user request the method including at a computer system including one or more processors and memory storing one or more programs receiving a user request from a mobile client device the user request including at least a speech input and seeks an informational answer or performance of a task detecting a failure to provide a satisfactory response to the user request in response to detecting the failure crowd sourcing information relevant to the user request by querying one or more crowd sourcing information sources receiving one or more answers from the crowd sourcing information sources and generating a response to the user request based on at least one of the one or more answers received from the one or more crowd sourcing information sources.

In some embodiments crowd sourcing the information relevant to the user request further includes generating one or more queries based on the user request and sending the one or more queries to the one or more crowd sourcing information sources.

In some embodiments the crowd sourcing further comprises identifying from a set of crowd sourcing information sources the one or more crowd sourcing information sources to be queried.

In some embodiments detecting the failure to provide a satisfactory response to the user request further includes determining that a web search based on information contained in the user request is unsatisfactory to the user.

In some embodiments detecting the failure to provide a satisfactory response to the user request comprises receiving feedback from the user that a previous response provided to the user for the user request was unsatisfactory.

In some embodiments detecting the failure to provide a satisfactory response to the user request comprises analyzing logs of the usage of the digital assistant.

In some embodiments the method further includes prior to the crowd sourcing requesting permission from the user to send the information contained in the user request to the one or more crowd sourcing information sources and receiving permission from the user to send the information contained in the user request to the one or more crowd sourcing information sources.

In some embodiments the method further includes sending a list of the one or more crowd sourcing information sources to the mobile client device.

In some embodiments the one or more crowd sourcing information sources represented in the list are separately selectable by the user.

In some embodiments the information contained in the user request is sent to a real time answer lookup database.

In some embodiments the information contained in the user request is sent to one or more non real time expert services.

In some embodiments the method further includes receiving at least one real time answer from a real time answer lookup database upon receipt of the at least one real time answer sending to the mobile client device the at least one real time answer receiving at least one non real time answer from a non real time expert service after receiving the at least one real time answer and upon receipt of the at least one non real time answer sending to the mobile client device the at least one non real time answer.

In some embodiments the at least one real time answer and the at least one non real time answer are presented to the user at different times.

In some embodiments the method further includes not receiving any answer from at least one of the one or more crowd sourcing information sources before generating the remedial response.

In some embodiments the method further includes when more than one answer is received from the one or more crowd sourcing information sources ranking the answers in accordance with predetermined criteria.

In some embodiments the method further includes selecting a subset of answers from the one or more answers in accordance with the ranking.

In some embodiments receiving the one or more answers from the crowd sourcing information sources further includes receiving at least one of the one or more answers from individual members of the public in non real time.

Specifically a digital assistant is capable of accepting a user request at least partially in the form of a natural language command request statement narrative and or inquiry. Typically the user request seeks either an informational answer or performance of a task by the digital assistant. A satisfactory response to the user request is either provision of the requested informational answer performance of the requested task or a combination of the two. For example a user may ask the digital assistant a question such as Where am I right now Based on the user s current location the digital assistant may answer You are in Central Park near the west gate. The user may also request the performance of a task for example Please invite my friends to my girlfriend s birthday party next week. In response the digital assistant may acknowledge the request by saying Yes right away and then send a suitable calendar invite on behalf of the user to each of the user friends listed in the user s electronic address book. There are numerous other ways of interacting with a digital assistant to request information or performance of various tasks. In addition to providing verbal responses and taking programmed actions the digital assistant can also provide responses in other visual or audio forms e.g. as text alerts music videos animations etc.

An example of a digital assistant is described in Applicant s U.S. Utility application Ser. No. 12 987 982 for Intelligent Automated Assistant filed Jan. 10 2011 the entire disclosure of which is incorporated herein by reference.

As shown in in some embodiments a digital assistant is implemented according to a client server model. The digital assistant includes a client side portion hereafter DA client executed on a user device and a server side portion hereafter DA server executed on a server system . The DA client communicates with the DA server through one or more networks . The DA client provides client side functionalities such as user facing input and output processing and communications with the DA server . The DA server provides server side functionalities for any number of DA clients each residing on a respective user device .

In some embodiments the DA server includes a client facing I O interface one or more processing modules data and models and an I O interface to external services . The client facing I O interface facilitates the client facing input and output processing for the digital assistant server . The one or more processing modules utilize the data and models to determine the user s intent based on natural language input and perform task execution based on inferred user intent. In some embodiments the DA server communicates with external services through the network s for task completion or information acquisition. The I O interface to external services facilitates such communications.

Examples of the user device include but are not limited to a handheld computer a personal digital assistant PDA a tablet computer a laptop computer a desktop computer a cellular telephone a smart phone an enhanced general packet radio service EGPRS mobile phone a media player a navigation device a game console a television a remote control or a combination of any two or more of these data processing devices or other data processing devices. More details on the user device are provided in reference to an exemplary user device shown in .

Examples of the communication network s include local area networks LAN and wide area networks WAN e.g. the Internet. The communication network s may be implemented using any known network protocol including various wired or wireless protocols such as e.g. Ethernet Universal Serial Bus USB FIREWIRE Global System for Mobile Communications GSM Enhanced Data GSM Environment EDGE code division multiple access CDMA time division multiple access TDMA Bluetooth Wi Fi voice over Internet Protocol VoIP Wi MAX or any other suitable communication protocol.

The server system can be implemented on one or more standalone data processing apparatus and or a distributed network of computers. In some embodiments the server system also employs various virtual devices and or services of third party service providers e.g. third party cloud service providers to provide the underlying computing resources and or infrastructure resources of the server system .

Although the digital assistant shown in includes both a client side portion e.g. the DA client and a server side portion e.g. the DA server in some embodiments the functions of a digital assistant can be implemented as a standalone application installed on a user device. In addition the divisions of functionalities between the client and server portions of the digital assistant can vary in different embodiments. For example in one example embodiment the DA client can be a thin client that provides only user facing input and output processing functions and delegates all other functionalities of the digital assistant to a backend server.

As described later in this specification the digital assistant can implement a crowd sourcing functionality. The crowd sourcing functionality allows the digital assistant to gather information from third party information sources i.e. so called crowd sourcing information sources or CS information sources and use the crowd sourced information to facilitate request fulfillment and in some cases intent inference in an extended time frame. In some embodiments the information crowd sourcing is only invoked when other real time response mechanisms of the digital assistant have failed to produce a satisfactory response to a user request. In some embodiments the information crowd sourcing is available to produce a response to a user request without the presence of a prior failure by another response mechanism of the digital assistant. In some embodiments the information crowd sourcing is performed offline when failures are detected in a user interaction log and the crowd sourced information is subsequently used to improve the response mechanisms of the digital assistant for future user requests and interactions.

For example a motion sensor a light sensor and a proximity sensor are coupled to the peripherals interface to facilitate orientation light and proximity sensing functions. Other sensors such as a positioning system e.g. GPS receiver a temperature sensor a biometric sensor and the like can also be connected to the peripherals interface to facilitate related functionalities.

A camera subsystem and an optical sensor are utilized to facilitate camera functions such as taking photographs and recording video clips. Communication functions are facilitated through one or more wired and or wireless communication subsystems which can include various communication ports radio frequency receivers and transmitters and or optical e.g. infrared receivers and transmitters. An audio subsystem is coupled to speakers and a microphone to facilitate voice enabled functions such as voice recognition voice replication digital recording and telephony functions.

An I O subsystem is also coupled to the peripheral interface . The I O subsystem includes a touch screen controller and or other input controller s . The touch screen controller is coupled to a touch screen . The touch screen and the touch screen controller can for example detect contact and movement or break thereof using any of a plurality of touch sensitivity technologies such as capacitive resistive infrared surface acoustic wave technologies proximity sensor arrays and the like. The other input controller s can be coupled to other input control devices such as one or more buttons rocker switches thumb wheel infrared port USB port and or a pointer device such as a stylus.

The memory interface is coupled to memory . The memory can include high speed random access memory and or non volatile memory such as one or more magnetic disk storage devices one or more optical storage devices and or flash memory e.g. NAND NOR .

The memory stores an operating system a communication module a graphical user interface module a sensor processing module a phone module and applications . The operating system includes instructions for handling basic system services and for performing hardware dependent tasks. The communication module facilitates communicating with one or more additional devices one or more computers and or one or more servers. The graphical user interface module facilitates graphic user interface processing. The sensor processing module facilitates sensor related processing and functions. The phone module facilitates phone related processes and functions. The application module facilitates various functionalities of user applications such as electronic messaging web browsing media processing Navigation imaging and or other processes and functions.

As described in this specification the memory also stores client side digital assistant instructions e.g. in a digital assistant client module and various user data e.g. user specific vocabulary data preference data and or other data such as the user s electronic address book to do lists shopping lists etc. to provide the client side functionalities of the digital assistant.

In various embodiments the digital assistant client module is capable of accepting voice input text input touch input and or gestural input through various user interfaces e.g. the I O subsystem of the user device . The digital assistant client module is also capable of providing output in audio visual and or tactile forms. For example output can be provided as voice sound alerts text messages menus graphics videos animations vibrations and or combinations of two or more of the above. During operation the digital assistant client module communicates with the digital assistant server using the communication subsystems .

In some embodiments the digital assistant client module utilizes the various sensors subsystems and peripheral devices to gather additional information from the surrounding environment of the user device to establish a context associated with a user input. In some embodiments the digital assistant client module optionally provides the context information or a subset thereof with the user input to the digital assistant server to help infer the user s intent.

In some embodiments the context information that can accompany the user input includes sensor information e.g. lighting ambient noise ambient temperature images or videos of the surrounding environment etc. In some embodiments the context information also includes the physical state of the device e.g. device orientation device location device temperature power level speed acceleration motion patterns cellular signals strength etc. In some embodiments information related to the software state of the user device e.g. running processes installed programs past and present network activities background services error logs resources usage etc. of the user device can also be provided to the digital assistant server as context information associated with a user input.

In some embodiments the DA client module selectively provides information e.g. user data stored on the user device in response to requests from the digital assistant server. In some embodiments the digital assistant client module also elicits additional input from the user via a natural language dialogue or other user interfaces upon request by the digital assistant server . The digital assistant client module passes the additional input to the digital assistant server to help the digital assistant server in intent inference and or fulfillment of the user s intent expressed in the user request.

In various embodiments the memory can include additional instructions or fewer instructions. Furthermore various functions of the user device may be implemented in hardware and or in firmware including in one or more signal processing and or application specific integrated circuits.

The digital assistant system includes memory one or more processors an input output I O interface and a network communications interface . These components communicate with one another over one or more communication buses or signal lines .

In some embodiments the memory includes a non transitory computer readable medium such as high speed random access memory and or a non volatile computer readable storage medium e.g. one or more magnetic disk storage devices flash memory devices or other non volatile solid state memory devices .

The I O interface couples input output devices of the digital assistant system such as displays a keyboards touch screens and microphones to the user interface module . The I O interface in conjunction with the user interface module receive user inputs e.g. voice input keyboard inputs touch inputs etc. and process them accordingly. In some embodiments e.g. when the digital assistant is implemented on a standalone user device the digital assistant system includes any of the components and I O and communication interfaces described with respect to the user device in . In some embodiments the digital assistant system represents the server portion of a digital assistant implementation and interacts with the user through a client side portion residing on a user device e.g. the user device shown in .

In some embodiments the network communications interface includes wired communication port s and or wireless transmission and reception circuitry . The wired communication port s receive and send communication signals via one or more wired interfaces e.g. Ethernet Universal Serial Bus USB FIREWIRE etc. The wireless circuitry receives and sends RF signals and or optical signals from to communications networks and other communications devices. The wireless communications may use any of a plurality of communications standards protocols and technologies such as GSM EDGE CDMA TDMA Bluetooth Wi Fi VoIP Wi MAX or any other suitable communication protocol. The network communications interface enables communication between the digital assistant system with networks such as the Internet an intranet and or a wireless network such as a cellular telephone network a wireless local area network LAN and or a metropolitan area network MAN and other devices.

In some embodiments memory or the non volatile and or non transitory computer readable storage media of memory stores programs modules instructions and data structures including all of a subset of an operating system a communications module a user interface module one or more applications and a digital assistant module . The one or more processors execute these programs modules and instructions and reads writes from to the data structures.

The operating system e.g. Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks includes various software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communications between various hardware firmware and software components.

The communications module facilitates communications between the digital assistant system with other devices over the network communications interface . For example the communication module may communicate with the communication interface of the device shown in . The communications module also includes various software components for handling data received by the wireless circuitry and or wired communications port .

The user interface module receives commands and or inputs from a user via the I O interface e.g. from a keyboard touch screen and or microphone and generates user interface objects on a display.

The applications include programs and or modules that are configured to be executed by the one or more processors . For example if the digital assistant system is implemented on a standalone user device the applications may include user applications such as games a calendar application a navigation application or an email application. If the digital assistant system is implemented on a server farm the applications may include resource management applications diagnostic applications or scheduling applications for example.

The memory also stores the digital assistant module or the server portion of a digital assistant . In some embodiments the digital assistant module includes the following sub modules or a subset or superset thereof an input output processing module a speech to text STT processing module a natural language processing module a dialogue flow processing module a task flow processing module a service processing module a failure management module and a crowd sourcing module . Each of these processing modules has access to one or more of the following data and models of the digital assistant or a subset or superset thereof ontology vocabulary index user data task flow models service models and crowd sourced knowledge base .

In some embodiments using the processing modules data and models implemented in the digital assistant module the digital assistant performs at least some of the following identifying a user s intent expressed in a natural language input received from the user actively eliciting and obtaining information needed to fully infer the user s intent e.g. by disambiguating words names intentions etc. determining the task flow for fulfilling the inferred intent and executing the task flow to fulfill the inferred intent. In some embodiments the digital assistant also takes appropriate actions when a satisfactory response was not or could not be provided to the user for various reasons.

As shown in in some embodiments the I O processing module interacts with the user through the I O devices in or with a user device e.g. a user device in through the network communications interface in to obtain user input e.g. a speech input and to provide responses to the user input. The I O processing module optionally obtains context information associated with the user input from the user device along with or shortly after the receipt of the user input. The context information includes user specific data vocabulary and or preferences relevant to the user input. In some embodiments the context information also includes software and hardware states of the device e.g. the user device in at the time the user request is received and or information related to the surrounding environment of the user at the time that the user request was received. In some embodiments the I O processing module also sends follow up questions to and receives answers from the user regarding the user request. When a user request is received by the I O processing module and the user request contains a speech input the I O processing module forwards the speech input to the speech to text STT processing module for speech to text conversions.

The speech to text processing module receives speech input e.g. a user utterance captured in a voice recording through the I O processing module . In some embodiments the speech to text processing module uses various acoustic and language models to recognize the speech input as a sequence of phonemes and ultimately a sequence of words or tokens written in one or more languages. The speech to text processing module can be implemented using any suitable speech recognition techniques acoustic models and language models such as Hidden Markov Models Dynamic Time Warping DTW based speech recognition and other statistical and or analytical techniques. In some embodiments the speech to text processing can be performed at least partially by a third party service or on the user s device. Once the speech to text processing module obtains the result of the speech to text processing e.g. a sequence of words or tokens it passes the result to the natural language processing module for intent inference.

More details on the speech to text processing are described in Applicant s U.S. Utility application Ser. No. 13 236 942 for Consolidating Speech Recognition Results filed on Sep. 20 2011 the entire disclosure of which is incorporated herein by reference.

The natural language processing module natural language processor of the digital assistant takes the sequence of words or tokens token sequence generated by the speech to text processing module and attempts to associate the token sequence with one or more actionable intents recognized by the digital assistant. An actionable intent represents a task that can be performed by the digital assistant and has an associated task flow implemented in the task flow models . The associated task flow is a series of programmed actions and steps that the digital assistant takes in order to perform the task. The scope of a digital assistant s capabilities is dependent on the number and variety of task flows that have been implemented and stored in the task flow models or in other words on the number and variety of actionable intents that the digital assistant recognizes. The effectiveness of the digital assistant however is also dependent on the assistant s ability to infer the correct actionable intent s from the user request expressed in natural language.

In some embodiments in addition to the sequence of words or tokens obtained from the speech to text processing module the natural language processor also receives context information associated with the user request e.g. from the I O processing module . The natural language processor optionally uses the context information to clarify supplement and or further define the information contained in the token sequence received from the speech to text processing module . The context information includes for example user preferences hardware and or software states of the user device sensor information collected before during or shortly after the user request prior interactions e.g. dialogue between the digital assistant and the user and the like.

In some embodiments the natural language processing is based on an ontology . The ontology is a hierarchical structure containing many nodes each node representing either an actionable intent or a property relevant to one or more of the actionable intents or other properties . As noted above an actionable intent represents a task that the digital assistant is capable of performing i.e. it is actionable or can be acted on. A property represents a parameter associated with an actionable intent a domain concept or entity or a sub aspect of another property. A linkage between an actionable intent node and a property node in the ontology defines how a parameter represented by the property node pertains to the task represented by the actionable intent node.

In some embodiments the ontology is made up of actionable intent nodes and property nodes. Within the ontology each actionable intent node is linked to one or more property nodes either directly or through one or more intermediate property nodes. Similarly each property node is linked to one or more actionable intent nodes either directly or through one or more intermediate property nodes. For example as shown in the ontology may include a restaurant reservation node i.e. an actionable intent node . Property node restaurant a domain entity represented by a property node and property nodes date time for the reservation and party size are each directly linked to the actionable intent node i.e. the restaurant reservation node . In addition property nodes cuisine price range phone number and location are sub nodes of the property node restaurant and are each linked to the restaurant reservation node i.e. the actionable intent node through the intermediate property node restaurant. For another example as shown in the ontology may also include a set reminder node i.e. another actionable intent node . Property nodes date time for the setting the reminder and subject for the reminder are each linked to the set reminder node. Since the property date time is relevant to both the task of making a restaurant reservation and the task of setting a reminder the property node date time is linked to both the restaurant reservation node and the set reminder node in the ontology .

An actionable intent node along with its linked concept nodes may be described as a domain. In the present discussion each domain is associated with a respective actionable intent and refers to the group of nodes and the relationships therebetween associated with the particular actionable intent. For example the ontology shown in includes an example of a restaurant reservation domain and an example of a reminder domain within the ontology . The restaurant reservation domain includes the actionable intent node restaurant reservation property nodes restaurant date time and party size and sub property nodes cuisine price range phone number and location. The reminder domain includes the actionable intent node set reminder and property nodes subject and date time. In some embodiments the ontology is made up of many domains. Each domain may share one or more property nodes with one or more other domains. For example the date time property node may be associated with many different domains e.g. a scheduling domain a travel reservation domain a movie ticket domain etc. in addition to the restaurant reservation domain and the reminder domain .

While illustrates two example domains within the ontology other domains or actionable intents include for example initiate a phone call find directions schedule a meeting send a message and provide an answer to a question and so on. A send a message domain is associated with a send a message actionable intent node and may further include property nodes such as recipient s message type and message body. The property node recipient may be further defined for example by the sub property nodes such as recipient name and message address. 

In some embodiments the ontology includes all the domains and hence actionable intents that the digital assistant is capable of understanding and acting upon. In some embodiments the ontology may be modified such as by adding or removing entire domains or nodes or by modifying relationships between the nodes within the ontology .

In some embodiments nodes associated with multiple related actionable intents may be clustered under a super domain in the ontology . For example a travel super domain may include a cluster of property nodes and actionable intent nodes related to travels. The actionable intent nodes related to travels may include airline reservation hotel reservation car rental get directions find points of interest and so on. The actionable intent nodes under the same super domain e.g. the travels super domain may have many property nodes in common. For example the actionable intent nodes for airline reservation hotel reservation car rental get directions find points of interest may share one or more of the property nodes start location destination departure date time arrival date time and party size. 

In some embodiments each node in the ontology is associated with a set of words and or phrases that are relevant to the property or actionable intent represented by the node. The respective set of words and or phrases associated with each node is the so called vocabulary associated with the node. The respective set of words and or phrases associated with each node can be stored in the vocabulary index in association with the property or actionable intent represented by the node. For example returning to the vocabulary associated with the node for the property of restaurant may include words such as food drinks cuisine hungry eat pizza fast food meal and so on. For another example the vocabulary associated with the node for the actionable intent of initiate a phone call may include words and phrases such as call phone dial ring call this number make a call to and so on. The vocabulary index optionally includes words and phrases in different languages.

The natural language processor receives the token sequence e.g. a text string from the speech to text processing module and determines what nodes are implicated by the words in the token sequence. In some embodiments if a word or phrase in the token sequence is found to be associated with one or more nodes in the ontology via the vocabulary index the word or phrase will trigger or activate those nodes. Based on the quantity and or relative importance of the activated nodes the natural language processor will select one of the actionable intents as the task that the user intended the digital assistant to perform. In some embodiments the domain that has the most triggered nodes is selected. In some embodiments the domain having the highest confidence value e.g. based on the relative importance of its various triggered nodes is selected. In some embodiments the domain is selected based on a combination of the number and the importance of the triggered nodes. In some embodiments additional factors are considered in selecting the node as well such as whether the digital assistant has previously correctly interpreted a similar request from a user.

In some embodiments the digital assistant also stores names of specific entities in the vocabulary index so that when one of these names is detected in the user request the natural language processor will be able to recognize that the name refers to a specific instance of a property or sub property in the ontology. In some embodiments the names of specific entities are names of businesses restaurants people movies and the like. In some embodiments the digital assistant can search and identify specific entity names from other data sources such as the user s address book a movies database a musicians database and or a restaurant database. In some embodiments when the natural language processor identifies that a word in the token sequence is a name of a specific entity such as a name in the user s address book that word is given additional significance in selecting the actionable intent within the ontology for the user request.

For example when the words Mr. Santo are recognized from the user request and the last name Santo is found in the vocabulary index as one of the contacts in the user s contact list then it is likely that the user request corresponds to a send a message or initiate a phone call domain. For another example when the words ABC Caf are found in the user request and the term ABC Caf is found in the vocabulary index as the name of a particular restaurant in the user s city then it is likely that the user request corresponds to a restaurant reservation domain.

User data includes user specific information such as user specific vocabulary user preferences user address user s default and secondary languages user s contact list and other short term or long term information for each user. The natural language processor can use the user specific information to supplement the information contained in the user input to further define the user intent. For example for a user request invite my friends to my birthday party the natural language processor is able to access user data to determine who the friends are and when and where the birthday party would be held rather than requiring the user to provide such information explicitly in his her request.

Other details of searching an ontology based on a token string is described in Applicant s U.S. Utility application Ser. No. 12 341 743 for Method and Apparatus for Searching Using An Active Ontology filed Dec. 22 2008 the entire disclosure of which is incorporated herein by reference.

Once the natural language processor identifies an actionable intent or domain based on the user request the natural language processor generates a structured query to represent the identified actionable intent. In some embodiments the structured query includes parameters for one or more nodes within the domain for the actionable intent and at least some of the parameters are populated with the specific information and requirements specified in the user request. For example the user may say Make me a dinner reservation at a sushi place at 7. In this case the natural language processor may be able to correctly identify the actionable intent to be restaurant reservation based on the user input. According to the ontology a structured query for a restaurant reservation domain may include parameters such as Cuisine Time Date Party Size and the like. Based on the information contained in the user s utterance the natural language processor may generate a partial structured query for the restaurant reservation domain where the partial structured query includes the parameters Cuisine Sushi and Time 7 pm . However in this example the user s utterance contains insufficient information to complete the structured query associated with the domain. Therefore other necessary parameters such as Party Size and Date are not specified in the structured query based on the information currently available. In some embodiments the natural language processor populates some parameters of the structured query with received context information. For example if the user requested a sushi restaurant near me the natural language processor may populate a location parameter in the structured query with GPS coordinates from the user device .

In some embodiments the natural language processor passes the structured query including any completed parameters to the task flow processing module task flow processor . The task flow processor is configured to receive the structured query from the natural language processor complete the structured query if necessary and perform the actions required to complete the user s ultimate request. In some embodiments the various procedures necessary to complete these tasks are provided in task flow models . In some embodiments the task flow models include procedures for obtaining additional information from the user and task flows for performing actions associated with the actionable intent.

As described above in order to complete a structured query the task flow processor may need to initiate additional dialogue with the user in order to obtain additional information and or disambiguate potentially ambiguous utterances. When such interactions are necessary the task flow processor invokes the dialogue processing module dialogue processor to engage in a dialogue with the user. In some embodiments the dialogue processor determines how and or when to ask the user for the additional information and receives and processes the user responses. The questions are provided to and answers are received from the users through the I O processing module . In some embodiments the dialogue processor presents dialogue output to the user via audio and or visual output and receives input from the user via spoken or physical e.g. clicking responses. Continuing with the example above when the task flow processor invokes the dialogue flow processor to determine the party size and date information for the structured query associated with the domain restaurant reservation the dialogue flow processing module generates questions such as For how many people and On which day to pass to the user. Once answers are received from the user the dialogue flow processor can then populate the structured query with the missing information or pass the information to the task flow processor to complete the missing information from the structured query.

In some cases the task flow processor may receive a structured query that has one or more ambiguous properties. For example a structured query for the send a message domain may indicate that the intended recipient is Bob and the user may have multiple contacts named Bob. The task flow processor will request that the dialogue processor disambiguate this property of the structured query. In turn the dialogue processor may ask the user Which Bob and display or read a list of contacts named Bob from which the user may choose.

Once the task flow processor has completed the structured query for an actionable intent the task flow processor proceeds to perform the ultimate task associated with the actionable intent. Accordingly the task flow processor executes the steps and instructions in the task flow model according to the specific parameters contained in the structured query. For example the task flow model for the actionable intent of restaurant reservation may include steps and instructions for contacting a restaurant and actually requesting a reservation for a particular party size at a particular time. For example using a structured query such as restaurant reservation restaurant ABC Caf date Mar. 12 2012 time 7 pm party size 5 the task flow processor may perform the steps of 1 logging onto a server of the ABC Caf or a restaurant reservation system such as OPENTABLE 2 entering the date time and party size information in a form on the website 3 submitting the form and 4 making a calendar entry for the reservation in the user s calendar.

In some embodiments the task flow processor employs the assistance of a service processing module service processor to complete a task requested in the user input or to provide an informational answer requested in the user input. For example the service processor can act on behalf of the task flow processor to make a phone call set a calendar entry invoke a map search invoke or interact with other user applications installed on the user device and invoke or interact with third party services e.g. a restaurant reservation portal a social networking website a banking portal etc. . In some embodiments the protocols and application programming interfaces API required by each service can be specified by a respective service model among the services models . The service processor accesses the appropriate service model for a service and generates requests for the service in accordance with the protocols and APIs required by the service according to the service model.

For example if a restaurant has enabled an online reservation service the restaurant can submit a service model specifying the necessary parameters for making a reservation and the APIs for communicating the values of the necessary parameter to the online reservation service. When requested by the task flow processor the service processor can establish a network connection with the online reservation service using the web address stored in the service model and send the necessary parameters of the reservation e.g. time date party size to the online reservation interface in a format according to the API of the online reservation service.

In some embodiments the natural language processor dialogue processor and task flow processor are used collectively and iteratively to infer and define the user s intent obtain information to further clarify and refine the user intent and finally generate a response i.e. an output to the user or the completion of a task to fulfill the user s intent.

In some embodiments after all of the tasks needed to fulfill the user s request have been performed the digital assistant formulates a confirmation response and sends the response back to the user through the I O processing module . If the user request seeks an informational answer the confirmation response presents the requested information to the user. In some embodiments the digital assistant also requests the user to indicate whether the user is satisfied with the response produced by the digital assistant .

More details on the digital assistant can be found in the U.S. Utility application Ser. No. 12 987 982 entitled Intelligent Automated Assistant filed Jan. 18 2010 U.S. Utility Application No. 61 493 201 entitled Generating and Processing Data Items That Represent Tasks to Perform filed Jun. 3 2011 the entire disclosures of which are incorporated herein by reference.

In many instances a digital assistant is able to infer a user s intent based on a natural language request provided by the user and fulfill the user s request either by providing information sought by the user s request or by performing tasks according to the user s request. However sometimes the digital assistant will fail to provide a satisfactory response to the user s request for information or action. The reasons for the failures can be many such as imperfect speech recognition unrecognized terms and concepts in the user request incorrect or incomplete information and inadequate capability in the digital assistant s services and so on. Regardless of the reason for the digital assistant s failure to provide a satisfactory response to a user request it is desirable to implement a suitable failure management procedure for the digital assistant.

As shown in in some embodiments the digital assistant also implements a failure management module to provide appropriate remedies when a failure is detected. In some embodiments the failure management module invokes the crowd sourcing module or searches for answers in the crowd source knowledge base to generate an appropriate remedial or corrective response for a failed user request. The crowd sourcing module issues queries and collects answers from one or more external CS information sources over an extended period of time and uses the answers to supplement the digital assistant s abilities in speech processing natural language processing for intent inference and or task flow processing. For example the crowd sourced answers may help to recognize speech in particular accents in different regions expand the vocabulary associated with different domains and or identify additional domain entities. In some embodiments the crowd sourced answers are used either by the digital assistant itself or by a provider of the digital assistant to create additional domains and task flows to further expand the capabilities of the digital assistant.

In some embodiments the crowd sourcing module establishes and maintains the crowd sourced knowledge base . The crowd sourced knowledge base stores crowd sourced information that addresses informational or task requests that the digital assistant might provide to its users. In some embodiments the contents of the crowd sourced knowledge base are organized by records of previous user requests to which the digital assistant had initially failed to successfully respond but subsequently fulfilled using crowd sourced information. The crowd sourced knowledge base provides references and information to the digital assistant to provide correct and satisfactory responses to the same or similar user requests received in the future. In some embodiments the crowd sourced knowledge base is organized to facilitate searching by the natural language processor. For example the information and answers in the crowd sourced knowledge base may be indexed by nodes in an ontology e.g. the ontology in as well so that the infrastructure of the natural language processor can be leveraged to quickly find past questions and answers in one or more relevant domains.

In some embodiments the failure management module the crowd sourcing module and the CS knowledge base are part of the digital assistant system and can various other components through various internal application interfaces. In some embodiments one or more of the failure management module the crowd sourcing module and the CS knowledge base of one or more sub components thereof are optionally provided separately from the digital assistant system and the digital assistant system accesses each of these modules and sub components thereof through one or more external application programming interfaces APIs . In some embodiments various aspects of the digital assistant system such as the speech to text processing e.g. the speech modules acoustic models vocabulary used in speech recognition the natural language processing aspect e.g. language models grammar ontology etc. the task flow dialogue flow and service processing are modified based on the information stored in the CS knowledge base to improve future performance of the digital assistant system .

In some embodiments the digital assistant maintains usage logs on user requests and interactions between the digital assistant and the users. The usage logs optionally store information such as the user requests received the context information surrounding the user requests the responses provided to the users and feedback provided by the users the parameters models third party services and procedures used by the digital assistant to generate and provide the responses etc. In some embodiments the usage logs are searchable by various search parameters such as time location user demographic response type feedback type task type duration failure type etc. More details are provided with respect to the usage log in and accompanying descriptions.

Although does not explicit show the communication interfaces between all components of the digital assistant it is to be understood that the components shown are capable of communicate with any other components of the digital assistant either directly or through one or more other interfaces such as application programming interfaces database query interfaces and or other interfaces protocols and or communication channels.

In the example process first the digital assistant registers a failure to provide a satisfactory response to a user request and optionally determines the failure type for the failure . A failure type is determined based on the reason for which the digital assistant has failed to produce a satisfactory response to the user request. The failure may be discovered by the digital assistant during the natural language processing or task flow execution process or may be indicated by the user after the unsatisfactory response was provided to the user.

After the failure has been registered and its failure type determined the digital assistant selects one or more real time remedy options suitable for addressing the type of failure and presents the options to the user . Examples of real time remedy options include doing a web search based on the user request calling a technical support hotline calling an emergency number searching the crowd sourced knowledge base and the like. In this specification a real time response refers to a response to a user request provided to the user by the digital assistant within a time frame associated with the same user session or continuous dialogue between the user and the digital assistant in which the user request was received by the digital assistant. Therefore each of the real time remedy options should produce a real time remedial or corrective response to the user request e.g. within a few minutes of the user request.

In some embodiments if the digital assistant had been able to partially infer one or more candidate actionable intents during the natural language processing stage the candidate intents and their associated properties and domains can be used by the digital assistant in selecting the real time remedy options to be presented to the user. In some embodiments the domains or actionable intents recognized by the digital assistant may each be associated with one or more real time remedy options. In some embodiments the domains or actionable intents are clustered into different groups and each group is associated with one or more real time remedy options.

After the selected real time remedy option s are presented to the user the user may reject or accept the real time remedy options s by providing a user input e.g. a verbal reply a gestural input or the like . Based on the user input the digital assistant determines whether the user has accepted any of the real time remedy option s . If the digital assistant determines that the user has accepted one or more of the real time remedy option s presented to the user the digital assistant proceeds to execute the accepted real time remedy option s e.g. performing the web search or making the call to the technical support hotline and so on .

Once the accepted real time remedy options have been executed e.g. when search results from the web search have been presented or when the technical support call is completed the digital assistant inquires whether the user is satisfied with the results of the real time remedies just provided . If the digital assistant determines that the user is satisfied with the real time remedial response based on the user s response the digital assistant considers that the failure has been addressed and ceases further action regarding the failure and associated user request .

In some embodiments if the digital assistant determines that the user has rejected all of the real time remedy options presented to the user e.g. shown as the No branch of the decision or if the user is unsatisfied with the real time remedial response s provided to the user e.g. shown as the No branch of the decision the digital assistant proceeds to invoke the delayed remedy procedures . The delayed remedy procedures include consulting with external CS information sources and or crowd sourced knowledge base to generate a delayed remedial or corrective response in an extended time frame.

In this specification a delayed response refers to a response to a user request that is provided outside of the time frame of the current user session or continuing dialogue with the user in which the user request was first received. The time frame in which a delayed response to a user request is provided ranges from several minutes to several hours days or weeks depending on the nature of the user request and the typical time frame that useful information may be crowd sourced from external CS information sources.

As shown in the delayed remedy procedures include first obtaining user s authorization to proceed with information crowd sourcing for the user request performing the information crowd sourcing process and generating a delayed response based on the crowd sourced information as well as any information that the digital assistant already possessed before the crowd sourcing was started . More details on information crowd sourcing for user requests are provided with reference to A C and .

As set forth above in some embodiments the digital assistant may attempt to obtain additional information from external sources and formulate a response based on the additional information in an extended time frame. In some embodiments the information crowd sourcing procedures may also be invoked as one of the means to generate a response without first detecting a failure. For example the digital assistant can allow the user to explicitly request a response to be generated based on crowd sourced information at the outset. In response to the user s explicit request the natural language processor of the digital assistant can invoke the information crowd sourcing module directly without first detecting a failure.

Also shown in the crowd sourcing module stores data in various data structures and databases to keep track of the CS information sources user requests queries and answers involved in the crowd sourcing process. For example the information sources database stores the CS information sources available to provide crowd sourced information. The user requests database stores the user requests for which information crowd sourcing is currently being performed. The queries database stores the queries that have been sent to the external CS information sources for each user request. The answers database stores the answers that have been received from the CS information sources for each query.

In some embodiments the information source selection module selects from among multiple CS information sources in the information source database one or more CS information sources suitable to provide useful information for the comprehension and fulfillment of a user request. In some embodiments the information source selection module is optional and a fixed set of CS information sources are used for all user requests.

In some embodiments the query generation module generates one or more queries for each user request for which information crowd sourcing is to be performed. The queries are generated based on the user request and its context information. The query generation module designs the queries such that they are likely to bring back answers helpful in the comprehension and fulfillment of the user request. In some embodiments the query generation module also serves to send the queries to the appropriate CS information sources.

In some embodiments the answer monitoring module monitors the CS information sources to retrieve answers to queries from the CS information sources. In some embodiments the answer monitoring module can also receive answers sent to the answer monitoring module by the CS information sources. For different CS information sources and or queries the time frame in which monitoring for answers is performed can range in minutes hours days weeks or even longer. The answer monitoring module stores the answers received for each query in the answers database and keeps track of the answer statuses of the queries.

Once the answer monitoring module determines that sufficient answers have been collected for the queries issued for a particular user request the answer integration module filters ranks reconciles and integrates the answers to provide consolidated crowd sourced information relevant to the particular user request to the response generation module. The response generation uses the consolidated crowd sourced information and any information the digital assistant already possesses to generate a response to the particular user request.

In some embodiments if the response generated based on the crowd sourced information is satisfactory to the user the knowledge base building module stores the consolidated crowd sourced information and or the queries and answers that contributed to the consolidated crowd sourced information in the crowd sourced knowledge base .

As shown in during the first stage the digital assistant first seeks express permission from the user that information crowd sourcing is to be used to aid in the generation of a satisfactory response to the user request . In some embodiments the digital assistant notifies the user that the information crowd sourcing does not guarantee to produce a satisfactory response and that even if the information crowd sourcing does bring back useful information for producing a satisfactory result it would take some extended time outside of the current user session before the response can be generated. In some embodiments the digital assistant also notifies the user that the digital assistant may act on behalf of the user to answer questions and provide additional information to external CS information sources during the crowd sourcing process. The digital assistant allows the user to reject the option to perform crowd sourcing for the user request. The digital assistant can also help the user to establish some privacy rules for the digital assistant for interacting with different CS information sources such that the user s privacy is not inadvertently compromised during the crowd sourcing.

Based on user s input the digital assistant determines whether the user has accepted the option to crowd source information for the user request . If the user does not accept the information crowd sourcing option for any reason e.g. for privacy or timing concerns the digital assistant notifies the user that a satisfactory response cannot be generated based on the current capabilities of the digital assistant. After the notification the digital assistant can cease further actions or dialogues regarding the user request .

If the digital assistant determines that the user would like to proceed with the information crowd sourcing the digital assistant proceeds to identify one or more CS information sources suitable for providing information regarding the user request . In some embodiments the CS information source selection is performed by the information source selection module shown in . In some implementations the information source selection is optional and a default set of information sources are used for all user requests.

In some embodiments the digital assistant optionally selects the suitable CS information sources based on the properties and domains that were activated by the words in the user request during the earlier natural language processing of the user request. For example if the properties of restaurant and birthday party were activated during the natural language processing of a user request the digital assistant can select CS information sources such as a life style information portal rather than a technical support information portal. In some embodiments other criteria for selecting the CS information sources can be used.

In some embodiments the CS information sources that the crowd sourcing module may query for information and answers include public forums. In a public forum questions can be posted to a wide audience and answers can be solicited and received from the general public who visit the public forum. Examples of public forums include online chat rooms online message boards discussion groups and the like. In general a large public forum can have sub forums focused on different topics and subject matters. In some embodiments the digital assistant can treat each sub forum as a separate CS information source.

In general public forums are suitable for collecting answers for queries that are difficult to categorize or comprehend for machines but may be easily handled by real people. For example the digital assistant may fail to comprehend a question or answer such as How to get rid of ants in my kitchen based on the domains and properties it has implemented so far however individual members of the public will easily understand the question and may have straight forward answers right away.

In some embodiments the CS information sources may include specialized sources providing more specialized and focused information such as expert forums technical support forums fan sites for particular subject matter and the like. The more specialized and focused CS information sources may be more suitable for queries that require specialized knowledge. For example a user may ask Why can t I print this after failing to print a webpage opened on her handheld device. The answer may require a diagnostic procedure that only specially trained technical support staff or other technically savvy individuals can provide. The query regarding the error in printing a webpage from a user device may be more suited for a technical support expert forum than a general purpose public forum or a product review expert forum for example.

In some embodiments the CS information sources include a group of self identified contributors. Each contributor can be an individual or a group of individuals who have identified themselves as experts in particular fields and agreed to answer questions from the crowd sourcing module in the particular fields.

For example a female programmer who is also an excellent chef may identify herself as an expert in the fields of computers and cooking Whenever a query in one of these two fields is issued by the information crowd sourcing module the programmer can be alerted of the query e.g. through an automatic notification system of the digital assistant . If the programmer is able to provide an answer to the query she can submit the answer to the information crowd sourcing module e.g. to the answer monitoring module shown in .

In some embodiments queries and answers in a particular field may be posted in a public area for all self identified experts of the field to see. The answers provided for the queries can be peer reviewed and rated by other self identified experts in the field. The information crowd sourcing module can utilize the rating of the answers to select the best answers to a query for example.

In some embodiments the interaction between the information crowd sourcing module and the self identified experts can be through a third party service where the third party service handles the dispatching of queries and collection of answers as well as screening the self identified experts evaluating answers and or rating the self identified experts. In some embodiments the information crowd sourcing module implements the interfaces and processing components for managing the information crowd sourced from the self identified experts.

In some embodiments the CS information sources include an answer arena where users participate in a game in which participants compete to see who can provide the best answers and the most number of answers to queries posted to the game arena. In some embodiments the game arena includes many smaller arenas each for a different question domain or subject matter. The game arena can provide rewards for gamers such as points credits and the like. Sometimes the game arena can be used to collect answers for the more challenging questions and the participants can utilize various resources they personally have access to as an individual e.g. either online or in the real world to figure out an answer. The answers for a particular query can be reviewed and or voted on by a group panel or by other disinterested non participating users for the particular query.

In some embodiments each user can specify a list of preferred CS information sources or the digital assistant of the user may have learned over time that a particular group of CS information sources have worked well for the user. In such embodiments the information source selection module can choose the suitable CS information sources based on the user s preference or the recommendation by the digital assistant based on past successes.

In some embodiments some CS information sources are only available to a specific group of users e.g. subscribers to a premium CS information source and the information source selection can be based on the status and identity of the user and whether they have authorization to use particular CS information sources. Other ways of selecting the CS information sources for different users and user requests are possible.

Once the digital assistant has selected the suitable CS information sources for the user request the digital assistant can proceed to generate one or more queries based on the user request and any available context information . In some embodiments the query generation is performed by the query generation module shown in . In some embodiments the queries may be the raw voice input of the user contained in the user request. In some embodiments the query may be a portion of the voice input of the user and or other processed form of the raw voice input. In some embodiments the query includes some or all of the context information currently associated with the user request. In some embodiments the query may also include partially instantiated domains and or concepts related to the user request. In various embodiments the crowd sourcing module generates different queries for different CS information sources and according to the respective formats required by the different CS information sources.

In some embodiments the CS information sources identified in the information source database can be organized according subject matter and types. Different APIs and or protocols needed to communicate with each CS information source can be stored in the information source database as well. The query generation module can refer to the CS information source database when formatting the queries for a particular CS information source.

In some embodiments the query generation module can generate a query that includes the user request and associated context information their original data form for some CS information sources. The query generation module can also generate a query that includes the user request and context information in a processed form according to the requirements of a CS information source e.g. according to particular APIs or formatting requirements of the CS information source. In some embodiments query generation module generates a natural language query that paraphrases the user request with some useful context information but has all personally identifiable information removed therefrom.

In some embodiments the query generation module generates queries that are related to only one or more sub aspects of the user request. For example suppose that the user said Please make an e card for me with the words You are the best dad in the world. The query generation module may generate a query How do I make a custom e card The query generation module may also generate other queries such as What is an e card or How to make an e card if the word e card and task flow associated with making an e card are yet not part of the vocabulary and task flow models of the digital assistant at the time. In some embodiments the query generation module uses the natural language processing capabilities of the digital assistant to generate the queries in natural language.

In some embodiments the query generation module can generate queries that are natural language variants of the user request. For example suppose the user said Teach me how to cook lobsters. The query generation module may generate natural language queries such as How to cook lobsters Lobster cooking tips Got an easy lobster recipe The crowd sourcing module can use the natural language variants to identify similar questions that have already been asked and answered in the past in various occasions. For example instead of or in addition to issuing a fresh query generated from the user request to the various CS information sources the information crowd sourcing module can search on FAQ bulletins message boards public forums and the crowd source knowledge base for similar or equivalent questions and use the answers to those similar or equivalent questions to help with formulating a response to the user request.

In some embodiments the query generation module identifies user requests that are very similar to one another and can benefit from the answers to the same queries. For example suppose that the crowd sourcing module has dispatched a first query Printing error after system upgrade to OS version 7.1. to a CS information source for a user request Why can t I print accompanied by context information indicating a system upgrade to OS version 7.1 and the first query is now in the answer gathering stage. Further suppose that the information crowd sourcing module now needs to do information crowd sourcing for a second user request I upgraded to OS 7.1 and now I can no longer print what s wrong The query generation module will generate a second query based on the second user request and then recognize that there is already a similar or equivalent query i.e. the first query dispatched to one or more CS information sources. Therefore the crowd sourcing module does not dispatch the newly generated query to the CS information sources that have already received a similar or equivalent query before. Instead the crowd sourcing module waits for the answers to the first query to be collected and uses the answers to the first query for generating responses to both user requests.

The ability to recognize that similar or equivalent queries have been dispatched or answered is important because the information crowd sourcing module handles information crowd sourcing for many user requests received from many users. Many of these user requests may be very similar and the same queries and answers may provide the necessary information to resolve all of these user requests. Thus by recognizing similarities between user requests and detecting and filtering out duplicate or nearly duplicate queries generated from the user requests the information crowd sourcing module can operate more efficiently. The filtering of duplicate and near duplicate queries also helps prevent the need to have contributors answer the same questions over and over again. In some embodiments the query generation module uses the natural language processing capabilities of the digital assistant to determine if two or more queries are duplicates or near duplicates of each another.

In some embodiments the information crowd sourcing module avoids issuing duplicate queries by recognizing the commonalities among different user requests. In some embodiments the commonality between two user requests can be found based on a large overlap between the domains and properties activated by the two user requests. If two user requests can be fulfilled using the same root solutions or answers e.g. a common task flow then the information crowd sourcing only need to be performed for one of the two user requests or a generic combination of the two user requests.

For example suppose that after a new version of a device operating system is released many users who have upgraded to the new version of operating system may experience similar technical issues due to compatibility with existing applications or due to bugs in the operating system. Therefore multiple users may issue user requests indicating a problem with their respective devices around the same period of time. The information crowd sourcing module will recognize that the different user requests Why did my web browser crash What happened to my web browser Why can t I open this webpage and Why can t I open this link from my e mail all relate to the same issue because all of these different user requests map to the same domain of technical questions related to the domain of web browser application technical issues in the ontology implemented by the digital assistant. In addition since devices of the users may collect context information e.g. the operation that the user was performing right before the user request was received the current version of the operating system the device type and so on the commonality of the user requests is further reflected in the context information provided along with the user requests. In this example the commonality of the user requests will be reflected in the context such as the version of the operating system the time that the user requests were received the error log that has been recorded and so on. When these user requests are all directed to the crowd sourcing module around the same time period the crowd sourcing module will be able to determine and recognize that the information crowd sourcing of these similar user requests can be addressed together using one or more generic queries such How to fix the browser problem after operating system upgrade to version x.x in device XX The version information and device information in the generic query is completed in by the context information accompanying the user requests. In some embodiments some user specific context information anonymized to protect user privacy may be utilized by the experts in the CS information sources to provide answers that may be generally applicable to other users.

In some embodiments the information crowd sourcing component establishes a special query pool for handling queries that are each relevant to the fulfillment of multiple similar or equivalent user requests. The crowd sourcing module optionally sends the queries in the special query pool to a team of experts who can provide solutions answers or information in a more speedily manner. Once the answer to a query in the special query pool is received the answer can help resolve a large number of user requests. In some embodiments the crowd sourcing module establishes certain criteria for determining when a query may enter the special query pool to receive expedited answers.

The ability to recognize the similarity between user requests also allows the information crowd sourcing module to determine if a current user request is similar or identical to another user request that has already been successfully fulfilled as the result of a previous information crowd sourcing process. If the crowd sourcing module determines that the current user request and the earlier request are identical or sufficiently similar the crowd sourcing module attempts to fulfill the current user request in a similar manner. The similarity between the two user requests can be determined based on the similarity between the domains and properties that were activated during the natural language processing intent inference process for the two user requests.

In some embodiments the query generation module uses the results from the natural language processing intent inference process to determine what questions will likely bring forth answers that will aid the digital assistant in producing a satisfactory response to the user request. For example suppose that the user had said Find me a restaurant that serves Caipirinha. The digital assistant would be able to infer that the user wishes to find a restaurant but would not know what Caipirinha stands for. The query generation module will then use the words that were not found in the vocabulary for the property of restaurant e.g. Caipirinha in this case as the subject of the query. Therefore the query generation module would generate queries such as What is Caipirinha or What kind of food or drink is called Caipirinha in addition to the user s original question Which restaurant serves Caipirinha. In some embodiments for unknown vocabulary the query generation module may also provide a few variations of the spelling in the different queries.

In addition in some embodiments the query generation components may also use the ontology e.g. the hierarchy of nodes and sub nodes of the restaurant property to formulate a query such as What kind of cuisine is Caipirinha When a reply is received for this query and the digital assistant finds out that Caipirinha is a type of alcoholic drink found in South America then the digital assistant will be able to focus its search for restaurants that serve South American cuisine and alcoholic beverages and finally find an answer to the user s original question.

In some embodiments the query generation component may pass at least some of the domains and properties that were activated during natural language processing process of the user request to a CS information source that is capable of extracting information embedded in one or more partially completed structured queries representing those domains and properties. The CS information source can use the information extracted from the partially completed structured queries to decide which contributor should receive the natural language or structured crowd sourcing queries generated by the query generation module . In some embodiments the CS information source can also use the extracted information to provide answers to follow up questions that a contributor may ask regarding the crowd sourcing queries.

There are many ways that queries can be generated for a user request. Different query generation methods may have different implications in the effectiveness in bringing forth information helpful in responding to user requests and in the efficiency of query dispatching and answer collection processes. The methods for generating queries provided above are just some of the examples. In some embodiments the query generation module stores all the queries that have been handled and the queries that are in the answer collection stage in a queries database e.g. the queries database in . The queries in the queries database may be clustered based on their commonalities in terms of subject matter. In some embodiments equivalent or similar queries may be identified as such in the queries database.

In some embodiments the crowd sourcing module selects the suitable CS information sources for a user request before the queries for the user request are generated. In some embodiments however the queries can be generated from the user request first and then CS information sources can be selected for each query based on various criteria e.g. based on the subject matter of the query. In some embodiments a group of CS information sources can be selected before the queries are generated and the selected CS information sources can be further refined and assigned to handle different queries after the queries are generated.

For example the queries that are generated for a user request may be related to several different domains of knowledge. Thus different queries may be dispatched to different CS information sources each suitable for answering some of the queries. Suppose that a user asked How do I program my thermostat to conserve energy This user request may be partially matched to the domain of technical support due to the terms program and thermostat and partially matched to the domain of energy conservation due to the terms conserve energy in the user request. Based on these two domains the CS information source selection module may decide to select a technical support forum for a first query How to program a thermostat generated from the user request while selecting a conservation focused panel for a second query What room temperatures conserve energy generated from the user request.

Referring back to after the queries are generated for each selected CS information source the queries and selected CS information sources are optionally presented to the user for review and approval . In some embodiments the user is allowed to modify the queries and or the selection of CS information sources at this time or accept the queries and CS information sources as suggested by the crowd sourcing module. In some embodiments the digital assistant does not present the queries and selected CS information sources to the user for review or approval and simply proceeds to send the queries to the CS information sources.

In some embodiments natural language representations of the queries are presented to the user for review and approval but equivalent structured machine readable queries are sent to the CS information sources. In some embodiments the crowd sourcing module will present a list of all the different CS information sources available to the user upon request by the user. The user is allowed to choose one or more of the CS information sources to use for the crowd sourcing. In some embodiments the user is also allowed to modify some or all of the queries that are to be sent to the different CS information sources.

In some embodiments if the information crowd sourcing module is already handling a similar user request and the queries generated for the current user request are already being answered at various CS information sources the information crowd sourcing module notifies the user that many users have been experiencing the same issue or have the same question and assures the user that a solution or answer should be arriving soon.

In some embodiments if the crowd sourcing module is invoked as part of the failure management process of a digital assistant the crowd sourcing module stores the user request in a failure status database. Each user request is assigned a unique identifier in the failure status database and information associated with the user request such as the original user input the context information associated with the user request the reason of the failure the partial or complete intent inferred from user input the current status of the crowd sourcing for the user request and ultimately the result of the crowd sourcing and output generation can be stored in the failure status database. Various modules of the crowd sourcing module can updated the failure status database with appropriate information.

In some embodiments when a user s voice input or a portion thereof is included a query the query generation module implements an algorithm to clean the voice input of the user to remove or obfuscate any offensive or sensitive phrases or words from the voice input before releasing the voice input to any public forums. In some embodiments the query generation module establishes a screening process that prevents queries involving questionable content from being posted onto the public forums. For example if the query generation module detects sensitive words related to illegal activities e.g. copyright violations or drug related activities in a user request the information crowd sourcing component can reject the user request or avoid sending queries related to the user request to the CS information sources.

Referring back to if suitable CS information sources and or queries have been presented to the user for approval the crowd sourcing module determines whether the user has approved the CS information sources and or queries presented to the user . If the presented CS information sources and or queries are approved the crowd sourcing module can prepare to enter the second stage of the information crowd sourcing described with reference to . If the user did not approve the CS information sources and queries but provided suggestions for modifications the digital assistant modifies the queries and or selection of CS information sources according to user s suggestions . After the queries and or selection of CS information sources are modified according to the user s suggestions the crowd sourcing module can prepare to enter the second stage of the information crowd sourcing described with reference to . If the request for approval of the CS information sources and or queries is not implemented by the crowd sourcing module the crowd sourcing module proceeds to the second stage once the queries are generated.

In some embodiments if a query generated for a current user request is a duplicate of another query already provided to an CS information source the information crowd sourcing module does not sent that query to the CS information source again but simply monitors the answers for the earlier query for both some earlier user request s and the current user request.

If one or more of the approved queries are not found in the crowd sourced knowledge base the information crowd sourcing module proceeds to send those one or more approved queries to the approved CS information sources . In some embodiments sending the queries to a CS information source includes posting a message to a public discussion forum or bulletin board adding a challenge to a game arena sending a structure query to a database and or other communications according to the respective APIs and protocols of the CS information sources.

After the queries have been dispatched to the CS information sources the information crowd sourcing module or an answer monitoring module thereof monitors the replies received from the CS information sources for the queries dispatched to the CS information sources . In some embodiments the monitoring includes responding to follow up questions about the queries and determining when to close the answer gathering period for each of the queries. In some embodiments the monitoring also involves requesting the user to provide additional information or participating in a live dialogue with one of the CS information sources. In some embodiments the monitoring also includes determining whether it is appropriate to request the user to provide information or participate in a live dialogue based on the current state of the user. For example the answer monitoring module may access the user s calendars and determine the user s current location or speed or current engagement and decide whether it is appropriate to interrupt the user at the present time.

In some embodiments after the queries are sent to different CS information sources the answer monitoring module proactively e.g. periodically check to see if any replies or answers have been provided by the CS information sources. Sometimes the answer monitoring module receives notifications from the CS information sources when one or more replies or answers have been received for a particular query. Sometimes if the number of answers are abundant for certain CS information sources e.g. expert forums having many self identified experts or popular game arenas the answer monitoring module optionally sets a limited answer gathering period and stops taking more replies or answers after the limited answer gathering period expires. For different types of CS information sources the manner by which answer to queries are monitored may be different.

In some embodiments the answer monitoring module provides additional information to the CS information sources in response to follow up questions received from the CS information sources. For example when a reply is received from a CS information source about a query the answer monitoring module may utilize the natural language processing capabilities and intent inference process of the digital assistant to determine whether the reply seeks additional clarification information or provides an answer. If the reply seeks additional information the answer monitoring module determines what information is being sought and whether the digital assistant possesses that information. If the information is available and sharing of the information with the CS information source is not prohibited by the user s privacy policy or preference the answer monitoring module provides the information to the CS information source. In some embodiments the answer monitoring module formulates a natural language response that includes the requested additional information and provides the natural language response back to the CS information source. For example the natural language response can be posted as a follow up to the original query in a public forum and all users reading the original query can now see the follow up information as well.

In some embodiments when the answer monitoring module processes the follow up questions to determine their meanings and intent the answer monitoring module also utilizes the domains and properties associated with the original user request to help provide context to the follow up questions.

In some embodiments when a follow up question is received from a CS information source for a particular query the answer monitoring module initiates a dialogue with the information source e.g. an expert or a customer support staff . In some embodiments the answer monitoring system utilizes the natural language processing and dialogue processing capabilities of the digital assistant to facilitate the dialogue with the CS information source. In some embodiments the dialogue can be carried out continuously in real time or intermittently over an extended period of time. For example the answer monitoring module may engage in a diagnostic process with a live technical support staff and can answer questions posed by the technical support staff. In some embodiments the digital assistant handles the follow up questions without the active participation of the user in some situations while in other situations the answer monitoring module may decide that it is appropriate to bring the user into the follow up dialogue so that the user can provide information that the digital assistant did not currently possess.

Referring back to once the information crowd sourcing module or the answer monitoring module thereof determines that the enough answers have been gathered for the queries associated with a user request the information crowd sourcing module proceeds to compile and integrate the answers received for the queries and formulate a response to the user request based on the integrated answers . In some embodiments the answer integration module compiles and integrates the answers received from the queries for the user request into consolidated crowd sourced information and the response generation module generates the response to the user request based on the consolidated crowd sourced information and any information the digital assistant already possessed before the information crowd sourcing for the user request.

In some embodiments when integrating the answers received from different CS information sources the answer integration module merges and reconciles information received from all of the answers. In some embodiments outlier answers may be filtered out. In some embodiments the answer integration module ranks the answers according to factors such as the votes they received the quality level or credibility of their respective contributors the number of duplicates or supporter replies each answer has and so on.

In some embodiments one or more top ranked answers are selected and a response is formulated to include all of the one or more top ranked answers e.g. when the user request seeks an informational answer . In some embodiments one or more top ranked answers are merged into a single answer and a response is formulated to include the single answer. In some embodiments the answers received for a user request may be related to different aspects of the user request and the response generation module creates a response based on the consolidated knowledge inferred from answers received for the different aspects of the user request.

In some embodiments if the user request is for the performance of a task the information obtained from the answers can be used by the response generation module to generate a task flow for the user request.

At the second stage shown in the response is merely formulated. For a user request seeking an informational answer the crowd sourced informational answer has not been presented to the user. For a user request seeking performance of a task the actions for performing the task have not been carried out by the digital assistant.

Referring back to after the digital assistant has made the attempt to formulate a response to the user request using the crowd sourced information e.g. information from the crowd sourced knowledge base and or from the answers to the queries the crowd sourcing module determines whether the response has been successfully formulated . If the information crowd sourcing module determines that despite the additional information obtained from the answers received from the CS information sources it is not able to successfully formulate a response to the user request the information crowd sourcing notifies the digital assistant of the failure and ceases further action on this user request . In some embodiments the information crowd sourcing module stores a log of the failures and retries the crowd sourcing at a later time e.g. when a new CS information source is added .

In some embodiments the answer integration module may determine that at the end of the allowed answer gathering time period no satisfactory answer or an insufficient number of answers have been received from the different CS information sources. If so the crowd sourcing module also determines that a response cannot be successfully formulated at this time. For example sometimes the answer integration module may determine that the answers received are not of sufficient quality e.g. based on a threshold quality criterion such as votes or based on peer review for generating a satisfactory response to the user. Sometimes the response generation module may determine that the answers received do not provide sufficient information or the information is not of sufficient specificity and clarity to help the response generation module to generate a task flow to accomplish the requested task.

Referring back to if the information crowd sourcing module determines that it is able to formulate a response to the user request with the help of the additional information obtained from the crowd sourcing process the digital assistant can prepare to enter the final stage of providing the crowd sourced response to the user. illustrates the final stage of the information crowd sourcing i.e. presenting the crowd sourced response to the user.

As shown in before the digital assistant provides the crowd sourced response to the user the digital assistant first determines whether it is an appropriate time to reengage the user regarding the earlier user request . For example the digital assistant may determine the current status of the user based on various signals such as the speed by which the user is moving the current location of the user the current time whether there is any meeting scheduled on the user s calendar for the present time whether the user device is currently idle or being used for other tasks and so on. Based on the status of the user the digital assistant determines whether it is appropriate to interrupt the user or wait for a better opportunity later.

If the digital assistant determines that is it not appropriate to actively reengage the user at the present time the digital assistant optionally presents a silent notification to the user e.g. a silent status indicator on the user device about the availability of the crowd sourced response such that the user can initiate a dialogue with the digital assistant at a time he or she deems fit or the digital assistant can just wait until a suitable opportunity to reengage with the user is presented . For example at the end of a conversation with the user regarding other matters the digital assistant can ask the user whether the user wishes to see the crowd sourced response for an earlier user request. In some embodiments the digital assistant checks periodically to determine if it is appropriate the reengage the user regarding the crowd sourced response for the earlier user request.

If the digital assistant determines that it is appropriate to reengage the user regarding the earlier user request the digital assistant proceeds to provide the crowd sourced response to the user. Depending on whether the user request was seeking an informational answer or the performance of a task different steps are taken by the digital assistant. For example the digital assistant first determines whether the user request was for an informational answer . If the user request seeks an informational answer the digital assistant proceeds to present the informational answer formulated based on the crowd sourced information to the user .

Alternatively if the user request seeks the performance of a task the digital assistant optionally presents the task flow formulated for the user request and asks the user to confirm that the user wishes to proceed with the execution of the task flow . The digital assistant determines whether the user approves the task flow . If the user does not approve the task flow the digital assistant considers the crowd sourcing answer as unsatisfactory and ceases further actions regarding the user request . If the digital assistant determines that the task flow is approved the digital assistant proceeds to execute the task flow e.g. using the facilities of the task flow processing and execution infrastructure of the digital assistant .

In some implementations before a crowd sourced task flow is executed for a user request the crowed sourcing module forwards the crowd sourced task flow to a board of trusted experts for review and verification. In some embodiments the digital assistant optionally simulates an operating environment of the user s device and associated services and executes the crowd sourced task flow in a simulation before the task flow is executed on the user s device.

Once either the informational answer is presented to the user or the execution of the proposed task flow is successfully completed the digital assistant asks the user whether the response provided for the user request was satisfactory . If based on the user s feedback the digital assistant determines that the crowd sourced response is still not satisfactory to the user the digital assistant considers the crowd sourced response an unsatisfactory response and ceases further actions regarding the user request or escalates the user request to other remedial processes such as sending the user request to a human personal assistant of the user or the like.

Alternatively if the digital assistant determines that the user is satisfied with the crowd sourced response e.g. based on the user s feedback the digital assistant e.g. the knowledge base building module shown in proceeds to record the crowd sourced response the user request and or the queries and answers that contributed to the successful fulfillment of the user request to the crowd sourced knowledge base . In some embodiments the digital assistant also records other information such as the CS information sources that provided the best answers to the queries and the follow up questions and answers exchanged during the answer gathering stage.

In some embodiments the user requests queries and answers can be organized by one or more ontologies. The ontologies optionally model the user requests queries and answers as nodes of domains and properties having various associated vocabulary attributes parameters and task flows. The nodes are organized in one or more hierarchies and may be interrelated by their super properties sub properties vocabulary attributes parameters task flows and so on. The organization of the crowd sourced knowledge base allows the digital assistant to determine whether satisfactory answers to a query or information request already exist in the crowd sourced knowledge base and whether a satisfactory response for a user request for performance of a task can be found in the crowd sourced knowledge base. In some embodiments the searching for a user request or answer in the crowd sourced knowledge ontology based on words in the user request or answer is analogous to the identification of an actionable intent based on the words in the user s utterance. For example a user request node in the crowd sourced knowledge ontology is optionally associated with one or more property nodes that define different aspects of the user request. Based on the respective vocabulary associated with each node in the crowd sourced knowledge ontology a new user request will trigger or activate many of the property nodes associated with an existing user request in the crowd sourced knowledge base and be identified as similar to the existing user request.

In some embodiments the failure to provide a satisfactory response to a user request is identified by an offline analysis of the data logs of the operation and usage of the digital assistant rather than in real time while responding to the user. In some embodiments the failure is identified by automated or manual analysis of log data. For example in some embodiments failures are identified in the usage logs by evidence for a task not being completed or answers not being available from information sources or from users repeated requests with similar intents or from users indicating frustration e.g. turning off or otherwise interrupts the digital assistant s response or action and or other data analysis techniques. In some embodiments data on failures identified offline are sent to the crowd sourcing module in a similar manner as failures identified in real time. In these embodiments the results of crowd sourced answers are available for use in future real time sessions but generally are not delivered back to the users who experienced the failures that were identified offline.

Referring now to content of the usage logs of the digital assistant can be analyzed for failures . In some embodiments a failure detection component periodically or upon request scans the usage logs for signals and or patterns indicative of failures. For example if the digital assistant implements a catch all response e.g. sending the user to a web search interface whenever the digital assistant has failed to find or provide a satisfactory response after two attempts each issuance of the catch all response is logged in the usage log . When the failure detection module makes a query against the usage logs for all instances in which a catch all response has been provided for a particular type of user request the failure detection module would receive event logs of user requests that had failed to produce a satisfactory response. The failure detection module optionally sends to the failure management module the event logs of these user requests. In some embodiments the failure management module processes these failures in a similar manner as failures that are detected in real time. The difference between real time and offline processing of the failures lies in the lack of direct interactions with the user e.g. requesting permissions or confirmations etc. during the processing. In addition in most scenarios if and when these failures are resolved by crowd sourcing the correct responses are not presented back to users who initially experienced those failures. Instead the offline processing is for the benefit of users that make similar requests in the future.

In some embodiments the information obtained by failure driven crowd sourcing and stored in crowd sourced knowledge base is integrated back into the real time response mechanisms e.g. the STT processing module the natural language processing module dialogue processing module the task flow processing module the service processing module and the models used by these processing modules used by the digital assistant . For example if a question posed by a user was not answered by the digital assistant and the failure was identified and sent to crowd sourcing as described herein and successfully answered then the answer is optionally added to the primary information sources used by the digital assistant. The next time that the same question is asked the assistant optionally uses the updated information sources to answer the question directly without invoking the crowd sourcing processes.

In some embodiments a crowd sourcing incorporation module is implemented either as a standalone module or part of the failure management module . The crowd sourcing incorporation module operates in a batch mode to analyze successful crowd sourced information in the crowd sourced knowledge base and add that information into the appropriate information stores e.g. acoustic models speech models vocabulary ontology language models task flow models service models etc. of the digital assistant .

In some embodiments the crowd sourced information is used to update the vocabulary database used in natural language processing. For example when the failure involved a failure to recognize certain words which were then later associated by the crowd sourcing process with nodes in the ontology as described in earlier parts of the specification the new vocabulary is optionally added to vocabulary database and indexed by nodes in ontology so that on subsequent requests the assistant can correctly infer the intent based on the new vocabulary.

In some embodiments the crowd sourced information is used to update the task flow models . For example the crowd sourced response to a diagnostic problem might suggest that the next task flow step is to ask the user a certain question to obtain specific diagnostic data. In some embodiments such task flows are added to the task flow models after an expert panel review as described in earlier part of the specification.

In some embodiments the crowd sourced information is used to update the service models used by service processing module . For example the crowd source response to a certain question might be a referral to use a particular service. For instance if the user asked where can I get blue suede shoes the crowd sourced response might be a referral to use a service representing an online shoe sales information site. This is different from storing a specific answer to where to buy the shoes. It is the information used by an assistant to call the shoe sales information service with a query about blue suede shoes which in turn might respond with stores and inventory results for blue suede shoes.

In some embodiments the crowd sourced knowledge base is used directly by external services which are employed by the digital assistant to respond to user requests. For example a digital assistant sometimes calls on the services of several question answering services e.g. external services in . One of these services is optionally a question answering service that uses questions and answers stored in the crowd sourced knowledge base to provide answers back to the digital assistant . In these embodiments some of these questions are directly answered by the assistant in real time without requiring the information to be incorporated into the response mechanisms of the digital assistant e.g. through the operation of the crowd sourcing incorporation module . For example in some embodiments the digital assistant optionally uses the information in the crowd sourced knowledge base either directly or through a third party service for a period of time to respond to real time requests and further evaluate the user feedback before allowing the crowd sourcing incorporation module to modify the response mechanism of the digital assistant using such information.

In some embodiments when preparing a response to the user the digital assistant in addition to calling on a web search engine on unknown queries also calls a service that is powered by a crowd sourced knowledge base e.g. the crowd sourced knowledge base or other third party crowd sourced knowledge bases . In some embodiments if the crowd sourced knowledge base powered service returns an answer the digital assistant provides that answer to the user instead of the web search e.g. the catch all response . If the crowd sourced knowledge base powered service does not return an answer the digital assistant provides the answer received from the web search e.g. the catch all response . In this way the competence of the digital assistant can be automatically grown as it feeds failures to crowd sourced services and they provide suitable responses on subsequent requests.

It should be understood that the particular order in which the operations in the flow charts have been described is merely exemplary and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. In addition unless explicitly specified features described in various embodiments may be combined and used together. Additionally it should be noted that details of other processes described herein may be applied in addition to instead of or in conjunction with the operations described with reference to the figures.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

