---

title: Transaction distribution with an independent workload advisor
abstract: In an exemplary embodiment, a computer-implemented method includes providing a mapping between a set of two or more IP addresses and a set of two more servers. A weight recommendation for the servers is received, based at least in part on server data related to current states of the servers, where the weight recommendation represents a goal for distributing a plurality of transactions among the servers. The mapping is modified based at least in part on the weight recommendation. A transaction is received, directed toward a first IP address of the two or more IP addresses. The transaction is routed to a first server, of the two or more servers, associated with the first IP address according to the modified mapping.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584595&OS=09584595&RS=09584595
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09584595
owner_city: Armonk
owner_country: US
publication_date: 20131017
---
Various embodiments of this disclosure relate to workload management and more particularly to effective transaction distribution absent traditional communication between a load balancer and a group weight manager.

In a conventional load balancing system a group weight manager GWM communicates with a load balancer to facilitate reasonable assignments of transactions to various available servers. The GWM provides historical real time insights into the servers processing the transactions from the load balancer. The GWM generates weights using those insights where the weights apply to the servers. The weights are the bases for recommendations to the load balancer for the distribution of incoming transactions to those servers. Examples of GWMs include the IBM Unified Resource Manager URM and Enterprise Workload Manager EWLM .

For intelligent load balancing to be successful the load balancer must implement a protocol that accepts weight recommendations from the GWM. Server Application State Protocol SASP is such a protocol. Whether SASP is adopted into a particular load balancer depends on market traction and the budget available to the load balancer s vendor to develop and maintain SASP support. Many load balancers do not support the SASP protocol today making it difficult to use these load balancers with hardware from other vendors. Thus there are drawbacks to supporting SASP as well as drawbacks for not supporting it.

In one embodiment of this disclosure a computer implemented method includes providing a mapping between a set of two or more IP addresses and a set of two more servers. A weight recommendation for the servers is received based at least in part on server data related to current states of the servers where the weight recommendation represents a goal for distributing a plurality of transactions among the servers. The mapping is modified based at least in part on the weight recommendation. A transaction is received directed toward a first IP address of the two or more IP addresses. The transaction is routed to a first server of the two or more servers associated with the first IP address according to the modified mapping.

In another embodiment a distribution system includes a virtual networking layer. The virtual networking layer is configured to receive a weight recommendation from a workload advisor where the weight recommendation is based at least in part on server data representing a current state of a set of two or more servers modify a mapping between a set of two or more IP addresses and the two more servers based at least in part on the weight recommendation receive a transaction directed toward a first IP address of the two or more IP addresses and route the transaction to a first server of the two or more servers based on the first IP address being mapped to the first server in the modified mapping.

In yet another embodiment a computer program product includes a computer readable storage medium having computer readable program code embodied thereon. The computer readable program code is executable by a processor to perform a method. The method includes providing a mapping between a set of two or more IP addresses and a set of two more servers. According to the method a weight recommendation for the servers is received based at least in part on server data related to current states of the servers where the weight recommendation represents a goal for distributing a plurality of transactions among the servers. The mapping is modified based at least in part on the weight recommendation. A transaction is received directed toward a first IP address of the two or more IP addresses. The transaction is routed to a first server of the two or more servers associated with the first IP address according to the modified mapping.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with the advantages and the features refer to the description and to the drawings.

Various embodiments of this disclosure relate to a distribution system in which a load balancer need not use a conventional protocol such as SASP to receive weight recommendations from a GWM. Rather in an exemplary embodiment the load balancer may assign transactions using a predetermined method such as round robin distribution and dynamic adjustment of IP addresses may determine which servers receive the transactions.

In an exemplary embodiment as shown in the computer system includes a processor memory coupled to a memory controller and one or more input and or output I O devices and such as peripherals that are communicatively coupled via a local I O controller . The I O controller may be for example but not limitation one or more buses or other wired or wireless connections as are known in the art. The I O controller may have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers to enable communications.

The processor is a hardware device for executing hardware instructions or software particularly those stored in memory . The processor may be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the computer system a semiconductor based microprocessor in the form of a microchip or chip set a macroprocessor or other device for executing instructions. The processor includes a cache which may include but is not limited to an instruction cache to speed up executable instruction fetch a data cache to speed up data fetch and store and a translation lookaside buffer TLB used to speed up virtual to physical address translation for both executable instructions and data. The cache may be organized as a hierarchy of more cache levels L1 L2 etc. .

The memory may include any one or combinations of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. and nonvolatile memory elements e.g. ROM erasable programmable read only memory EPROM electronically erasable programmable read only memory EEPROM programmable read only memory PROM tape compact disc read only memory CD ROM disk diskette cartridge cassette or the like etc. . Moreover the memory may incorporate electronic magnetic optical or other types of storage media. Note that the memory may have a distributed architecture where various components are situated remote from one another but may be accessed by the processor .

The instructions in memory may include one or more separate programs each of which comprises an ordered listing of executable instructions for implementing logical functions. In the example of the instructions in the memory include a suitable operating system OS . The operating system essentially may control the execution of other computer programs and provides scheduling input output control file and data management memory management and communication control and related services.

Additional data including for example instructions for the processor or other retrievable information may be stored in storage which may be a storage device such as a hard disk drive.

In an exemplary embodiment a conventional keyboard and mouse may be coupled to the I O controller . Other output devices such as the I O devices and may include input devices for example but not limited to a printer a scanner a microphone and the like. The I O devices may further include devices that communicate both inputs and outputs for instance but not limited to a network interface card NIC or modulator demodulator for accessing other files devices systems or a network a radio frequency RF or other transceiver a telephonic interface a bridge a router and the like.

The computer system may further include a display controller coupled to a display . In an exemplary embodiment the computer system may further include a network interface for coupling to a network . The network may be an IP based network for communication between the computer system and any external server client and the like via a broadband connection. The network transmits and receives data between the computer system and external systems. In an exemplary embodiment the network may be a managed IP network administered by a service provider. The network may be implemented in a wireless fashion e.g. using wireless protocols and technologies such as WiFi WiMax etc. The network may also be a packet switched network such as a local area network wide area network metropolitan area network the Internet or other similar type of network environment. The network may be a fixed wireless network a wireless local area network LAN a wireless wide area network WAN a personal area network PAN a virtual private network VPN intranet or other suitable network system and may include equipment for receiving and transmitting signals.

Systems and methods according to this disclosure may be embodied in whole or in part in computer program products or in computer systems such as that illustrated in .

In conventional systems weight recommendations provided by the GWM which is in communication with the servers inform the load balancer about how transactions should be assigned based on the servers current states. In an exemplary distribution system however the load balancer may assign work in a round robin fashion to a set of IP addresses without concern about weights representing a set of servers that will ultimately handle the transactions. In some other embodiments methods of assignment other than round robin may be used without regard to the current state of the various servers . Each IP address may be mapped by the virtual networking layer to one of the servers . The virtual networking layer and the workload advisor may work together to determine the current statuses of the servers and to reassign the IP addresses accordingly. Thus neither the virtual networking layer nor the workload advisor may be required to communicate with the load balancer through SASP. Rather the virtual networking layer and the workload advisor may be in communication with each other and the virtual networking layer may be in communication with the servers .

At initialization of the distribution system the IP addresses may be equally or approximately equally distributed among the servers which may be virtual or physical servers. As far as the load balancer is concerned each IP address may be treated as a distinct entity associated with a distinct virtual server. The load balancer may use a round robin style of assigning work where each IP address is assigned a single transaction within a round of transaction assignments and then the load balancer loops back around to the first IP address for another round of assignments. The IP addresses may all be directed toward the virtual network layer which may route each transaction to the server currently associated with the IP address to which the load balancer assigned that transaction. It will be understood that although this disclosure refers repeatedly to round robin assignments other methods of assignment may be used by the load balancer as well.

The virtual networking layer may maintain a mapping between the IP addresses and the servers indicating the server with which each IP address is currently associated. While each IP address may be directed to no more than a single server at a given time each server may be associated with zero one or more IP addresses at a given time. As shown in the virtual networking layer may route work that is assigned to the virtual IP addresses. This routing may be based on the current mapping of IP addresses to servers which may be based at least in part on a weight recommendation provided by the workload advisor .

The virtual networking layer may dynamically update the current mapping of IP addresses to servers based on data received from the workload advisor . By dynamically modifying the mappings between the IP addresses and the servers dependency on SASP may be removed as adjustments may be made by the virtual networking layer based on current server states. The net effect may be that the load balancer need not be aware of server weights or weight recommendations. Weight recommendations may instead be handled by the workload advisor and communicated to the virtual networking layer . Hence various load balancers capable of simple round robin distribution or other distribution algorithms may now take advantage of weighted load balancing according to various embodiments of this disclosure.

The virtual networking layer may receive feedback from the servers informing the virtual networking layer of the current states of the servers . The virtual networking layer may pass this data on to the workload advisor which may analyze the data to adjust the current weight recommendation associated with the servers . The weight recommendation may in some embodiments provide a suggested ratio describing how transactions should be distributed among the servers .

In some embodiments currently existing methods of determining weight recommendations may be used by the workload advisor . Accordingly in some embodiments a conventional GWM or a modified GWM may be used as the workload advisor . For example and not by way of limitation the workload advisor may be IBM s Uniform Resource Manager. Based on its analysis the workload advisor may pass recommendations for new or adjusted weights to the virtual networking layer .

The virtual networking layer may receive a weight recommendation from the workload advisor and may modify the IP address mapping as needed to achieve the weight recommendation or to achieve server weights that are reasonably close to the weight recommendation. Servers that the weight recommendation indicates can handle more work may be assigned additional IP addresses adjusting the current mappings accordingly. Analogously servers that the weight recommendation indicates are overloaded or loaded more so than other servers may have one or more of their IP addresses reassigned to other servers . In other words the virtual networking layer may adjust the mappings between the virtual IP addresses and the servers to account for the current states of the servers as reflected in the weight recommendation.

In the example shown in six IP addresses are defined to the load balancer which distributes transactions to these six IP addresses approximately equally such as by way of a round robin algorithm. At initialization of the distribution system three IP addresses are mapped to each of the servers responsible for processing transactions.

For the sake of this example suppose Server A runs into a performance or availability problem. The existence of this problem may be passed from the server to the virtual networking layer which may pass this information to the workload advisor . The workload advisor may then adjust its weight recommendation accordingly to suggest that Server A should have a reduced workload compared to Server B.

It will be further understood that the ability to reassign an IP address need not be the entire scope of adjustments that the virtual networking layer can make. In some embodiments the virtual networking layer may remove a mapping of an IP address to a server without reassigning that IP address to another server thus allowing the load balancer to detect the missing resource for that IP address. In that case the relationship between the IP address and the server may persist but the connection may be temporarily stopped as the load balancer skips over that IP address when making transaction assignments.

In some embodiments the virtual networking layer may be enabled to remove IP addresses entirely thus avoiding future transaction assignments to that IP address. The virtual networking layer may additionally or alternatively be enabled to add IP addresses as needed arranging a mapping between each new IP address and one of the existing servers .

In some embodiments the virtual networking layer may use the application programming interface API of the load balancer to indicate that a particular IP address is still around but not currently available for new traffic. This type of API is available in many existing hardware load balancers. In this case again the mapping of the IP address to the server need not change.

In some embodiments the virtual networking layer may perform periodic traffic reduction for the connection between an IP address and its corresponding server . For example to request half the traffic flow the virtual networking layer may reduce traffic e.g. by using the API to indicate the IP address should not receive traffic every half minute and may resume the traffic flow for the other half minute.

Thus exemplary embodiments of the distribution system may incorporate conventional load balancers and may enable the load balancer to use its existing features e.g. detect and act on the availability of a network resource manage a persistent session filter network traffic behave as a firewall use intelligent traffic compression etc. . At the same time the distribution system may take advantage of recommendations from the workload advisor . Further the distribution system need not require the load balancer s vendor to expend effort developing and supporting SASP. In other words in some embodiments the load balancer need not be modified from a conventional load balancer.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Further as will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable radio frequency RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

