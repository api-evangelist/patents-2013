---

title: Displaying dynamic content on a map based on user's location and scheduled task
abstract: Graphic elements for a computer-implemented mapping system may be displayed based on scheduled task data, routine data, or other data corresponding to an application of a client computing device. The application data may include a location and a scheduled time. A user may request a map for the scheduled task location. If a difference between the request time and the scheduled task time is below a threshold, then the mapping system may display or modify graphic elements for the location that are relevant to the scheduled task. For example, a user may include appointment data for an airline flight in a calendar application of a mobile computing device. If the user requests a map of the departure airport within a short amount of time before the flight, the map may include only relevant graphic elements such as a check in counter, a security checkpoint, and a departure gate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09449407&OS=09449407&RS=09449407
owner: GOOGLE INC.
number: 09449407
owner_city: Mountain View
owner_country: US
publication_date: 20130108
---
The present disclosure relates to electronic map systems and more specifically to a mapping system that displays map elements based on a user s location and scheduled task.

The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors to the extent it is described in this background section as well as aspects of the description that may not otherwise qualify as prior art at the time of filing are neither expressly nor impliedly admitted as prior art against the present disclosure.

Current online maps show the maps in a static state. Vectors describing both the map content and styling are sent to a user device in response to a request for specific locations. The data sent to the user device only represents the map data as it exists on the backend mapping servers. Thus if two users made a request for mapping data and each request included the same location the backend mapping servers would return identical or nearly identical information. While these static maps may be useful for general viewing they may not be appropriate in other dynamic contexts.

Features and advantages described in this summary and the following detailed description are not all inclusive. Many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims hereof. Additionally other embodiments may omit one or more or all of the features and advantages described in this summary.

A method for displaying graphic elements on a digital map based on application data generated or received by an application executing on a client computing device may send a mapping data request from the client computing device via a network connection. The mapping data request may include a geographic location and a request time. The method may also receive a vector in response to the mapping data request. The received vector may include mapping data corresponding to the geographic location. Further the mapping data may include a plurality of graphic elements that represent the geographic location. The method may then retrieve application data generated or received by an application executing on the client computing device. The application data may include an application data time and an application data location and the mapping data request geographic location may correspond to the application data location. The method may determine a difference between the application data time to the request time modify the received mapping data based on the retrieved application data and the difference between the application data time to the request time and display the modified mapping data on the client computing device.

In a further embodiment a method may generate mapping data for display at a client computing device based on application data corresponding to an application executing on a client computing device. The method may receive a mapping data request from a client computing device via a network connection. The mapping data request may include a geographic location a request time and application data generated or received by the application executing on the client computing device. The application data may include an application data time and an application data location and the mapping data request geographic location may correspond to the application data location. The method may also retrieve mapping data that corresponds to the mapping data request geographic location and determine that a difference between the application data time and the request time is below a threshold. The method may then modify the retrieved mapping data based on the received application data and the determined time difference generate a vector that includes the modified retrieved mapping data and send the vector to the client computing device via the network connection.

In a still further embodiment a system may display graphic elements for mapping data of a digital map based on application data. The system may include a user task system and a mapping system. The user task system may include a processor and memory. The user task system memory may store user scheduled task data that is generated or received by an application executing on a client computing device. The user scheduled task data may include a task time and a task location. The mapping system may include a processor and a memory also. The mapping system memory may store mapping data that includes a plurality of graphic elements to represent a geographic location using a mapping application of a client computing device. The mapping system memory may also store instructions for execution by the mapping system processor. One instruction may receive a mapping data request from the client computing device via a network connection. The mapping data request may include a geographic location and a request time. The mapping data request geographic location may correspond to the task location. Another instruction may retrieve mapping data that corresponds to the mapping data request geographic location. A further instruction may determine that a difference between the task time and the request time is below a threshold and modify the retrieved mapping data based on the received task location and the determined time difference. Also an instruction may generate a vector that includes the modified retrieved mapping data and send the vector to the client computing device via the network connection.

The figures depict a preferred embodiment for purposes of illustration only. One skilled in the art may readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

Embodiments of systems and methods for displaying dynamic map content based on a user s location and scheduled task are discussed below. To produce a standard map image of a location in a mapping application or another application a client computing device may send a mapping request to a map server via a communication network and the map server in response may provide vector based map data that allows the mapping application executing on the client computing device to render graphic map elements. In particular the vector map data may specify various geometric shapes e.g. using mathematical descriptions for graphic elements and features of a digital map and indicate how these shapes should be positioned for rendering various map features such as roads buildings parks etc. on the client computing device. To produce a customized map image of a location dynamic map content may be rendered by referencing the user s scheduled task and or the user s preference in order to specify which visual styles to apply to the various map features so that the most relevant features are displayed or highlighted thereby providing more targeted and useful information to the user.

Data regarding the user s scheduled task may include a task time and a task location for various user defined tasks or events e.g. taking a scheduled flight going to a doctor s office attending a birthday party etc. . By referencing the user s scheduled task in a mapping request the map server or the client device may show map elements based on the time difference between the current real time and the time for the scheduled task and the relationship between the current mapping request geographic location and the task location. For example if the user s scheduled task involves taking a flight from an airport that is scheduled on a calendar application executing on the user s mobile computing device and the user makes a mapping request at the airport using a mapping application on the mobile computing device with ample time before flight departure then a map returned to the device may include vector data to show relevant map elements such as a check in counter a security gate a restaurant a currency exchange or other places of interests for the user. However if the user makes the mapping request very close in time to the flight departure time then the data returned to the mobile device in response to the request may only show relevant map elements that are essential for the user to get to the flight quickly such as the check in counter or security gate.

In another example if the user s scheduled task involves taking a flight from an airport that is scheduled on a calendar application running on the user s mobile computing device but the user makes a mapping request on the way to the airport using a mapping application on the mobile computing device with ample time before flight departure then a map returned to the device may include vector data to show relevant map elements such as a taxi stand a bus stop or other transportation stations necessary for the user to get to the airport. However if the user makes the mapping request very close in time to the flight departure time then the data returned to the mobile device in response to the request may only show relevant map elements that essential for the user to get to the airport quickly such as the taxi stand.

In addition to or in the absence of user defined tasks or events data regarding the user s daily routines or activities e.g. a train station used by the user to get to work every morning a gym visited by the user on weekend afternoons etc. may form the basis for the user s scheduled task which may include a routine time and a routine location. By referencing the user s daily routine in a mapping request the map server or the client device may show map elements by matching the current real time to the routine time and the current mapping request geographic location to the routine location. For example if the user is driving near work on a weekday afternoon and makes a mapping request using a mapping application on the user s mobile computing device then a map returned to the device in response to the request may include vector data to show relevant map elements such as a bank a post office or other places that the user may visit regularly during weekday afternoons. In another example if the user is driving near home on a weekend morning and makes a mapping request using a mapping application on the user s mobile computing device then a map returned to the device in response to the request may include vector data to show relevant map elements such as a grocery store a park or other places that the user may visit regularly during weekend mornings.

In showing the relevant map elements data regarding the user s preference may be incorporated into a request for mapping data the data returned in response to a mapping request or a combination of the request and returned data to provide a more personalized map viewing experience. Information on the user s interests likes dislikes habits behaviors etc. e.g. a favorite type of restaurant an interest in classical music a smoking habit etc. may be referenced so that the map server sends data and or the client device shows relevant personalized elements for the user. For example in the airport example described above if the user makes a request for mapping data at the airport with ample time before flight departure then the returned mapping data may show relevant map elements such as the check in counter or the currency exchange but also relevant personalized elements such as a smoking lounge if the user preference data indicates that the user is a habitual smoker.

The mapping system may include a map server which may be in the form of one or more servers including a processor and a memory storing instructions to send and receive map data A from a map data repository . In response to a mapping data request from the mapping module executing on client device a processor A of the map server may execute instructions B to retrieve and send map data A for a digital map image to be displayed in a display component of the client device . To render the digital map with dynamic map content the mapping module may execute instructions A to reference application data and send the application data along with a mapping data request. The application data may include one or more of data associated with the user s scheduled task scheduled task data A routine data B or data associated with the user s preference user preference data A .

One or more of the client computing device or the backend components may only collect the scheduled task data A routine data B or user preference data A with a user s full understanding and acceptance to published terms and conditions for collection and use of that data. For example before one or more elements of the computing device or the backend components executes an instruction to collect or use this data a visual or other prompt at the client computing device may alert the user to such action. The prompt allows the user to opt out of some or all collection of scheduled task data A routine data B user preference data A or any other data as described herein.

Scheduled task data A may be stored in the user task module and collected from a variety of applications such as a calendar application a trip planning application or other application sources executing on or in communication with the client device . Daily routine data B may include data associated with the user s typical daily routines or activities e.g. a mass transit station used to go to work every morning a restaurant visited regularly during lunch break etc. . The Daily routine data B may be stored in the user task module and collected from various applications such as a user activity tracking application a search history application or other application sources executing on or in communication with the client device . User preference data A indicating the user s interests likes dislikes habits etc. may be stored in the user preference module and collected from various applications such as a user profile application a user activity tracking application or other application sources executing on or in communication with the client device .

In some embodiments scheduled task data A daily routine data B and user preference data A may at the user s option and understanding be collected and stored in the backend components . The user task system may include one or more user task servers and various user task resources . Data associated with the user s scheduled task may be collected from the user task resources and stored as scheduled task data A. Data associated with the user s daily routines or activities may also be collected from the user task resources and stored as daily routine data B. A processor A of the user task server may execute instructions B to send and receive the scheduled task data A and the daily routine data B from the user task resources . The user preference system may include one or more user preference servers and various user preference resources e.g. a user profile application a social networking application etc. . Data associated with the user s preference may be collected from the user preference resources and stored as user preference data A. A processor A of the user preference server may execute instructions B to send and receive the user preference data A from the user preference resources .

In some embodiments scheduled task data A daily routine data B or user preference data A may be collected from applications executing on the client device and pushed to the backend to be stored in the user task system and the user preference system . In other embodiments scheduled task data A daily routine data B or user preference data A may be collected in the backend and pulled to the frontend to be stored in the client device . In still other embodiments scheduled task data i.e. A A daily routine data i.e. B B or user preference data i.e. B B may be collected and stored among the frontend client device and the backend user task system and user preference system .

In one embodiment the client device may send a request for mapping data to the mapping system to display a map on the device . In response to the request the map server may retrieve and send map data A to the mapping module . The mapping module may then process the received map data A and render dynamic map content on the map by referencing a combination of scheduled task data daily routine data and user preference data stored in either the client device or the backend user task system and user preference system . In another embodiment the client device may send a request for mapping data to the mapping system to display a map on the device . In response to the request the map server may first retrieve and process map data A and render dynamic map content on the map by referencing a combination of scheduled task data daily routine data and user preference data stored in either the client device or the backend user task system and user preference system . The map server may then send the map rendered with dynamic map content to the mapping module for subsequent display on the client device .

In some embodiments the mapping module may receive map data in the form of graphic components text and other data. The received data may include vector data that specifies the map features such as geometric shapes using mathematical descriptions of points and paths connecting the points. For example rather than specifying each pixel that makes up a raster image of a line segment or other graphic elements vector data may specify the two endpoints of the line segment and indicate that the two endpoints are connected by a straight line. The mapping module then may apply style and other data as appropriate to the specified line segment so that the line segment is displayed with a particular title description etc. As another example the vector data may specify the contour of a building and corresponding text data may specify the name description web page contact information address etc. of the building. In other words rather than receiving raster images from the map server the mapping module may receive instructions for drawing a map image on the display component of the client device and execute the instructions to generate a raster map image.

For simplicity the client device is illustrated with a single processor to execute various modules stored in the device memory as described herein. The client device in other embodiments may include additional processing units not shown such as a graphics processing unit GPU configured to facilitate image rendering on the display component for example. Further the mapping module may utilize a library of graphics functions for efficiently generating a map image. For example the memory may store a plugin such as an OpenGL or Direct3D library having functions for rendering graphics which various applications executing on the client including the mapping module may access via an application programming interface API . In another embodiment the memory stores a plugin particularly suitable for browser applications such as WebGL for example. Also in some embodiments the memory stores additional software components that facilitate efficient rendering of images via the display . For example the memory may store an Adobe Flash plugin or an O3D plugin.

With reference to scheduled task data i.e. A A may include a task time and a task location for various user defined tasks or events. Daily routine data i.e. B B may include a routine time and a routine location that correspond to the user s typical daily routines or activities. User preference data i.e. A A may include preferences to each indicating a preference for the user i.e. the user s interests likes dislikes habits etc. . For example preference may include data that indicate the user enjoys fast food preference may include data that indicate the user has an interest in classical music and preference may include data that indicate the user is a habitual smoker. While illustrates user preference data i.e. A A as having three user preferences the data in general may have any number of preferences.

With reference to a map controller of the client device mapping module or the backend map server may include various functions to process and render a map with dynamic map content based on the user s location scheduled task and preference. According to an embodiment the map controller may operate as a set of instructions i.e. A B in either the client device or the mapping system or the various functions may be split among the client device and the mapping system .

According to an embodiment the map controller may include a dynamic map content controller communicatively coupled to a map data generator a user task data generator a user preference data generator and a map request processor . After the map request processor receives a request for mapping data to display a map for a geographic location the map request processor may execute a function call to the map data generator to retrieve map data A from the map data repository for the requested geographic location. The map data generator may include instructions to generate the map data as a set of map tile descriptors such that each map tile descriptor describes a map tile i.e. a portion of a map image of a certain size . The size of a geographic region represented by an individual map tile depends on the zoom level with which the map tile is associated so that a single map tile at a lower zoom level illustrates a larger geographic area than a single map tile at a higher zoom level. The map data generator may generate each map tile descriptor according to a vector graphics format and a client device such as the client device of may locally generate a raster image for each tile.

To render dynamic map content on the map the map request processor may execute a function call to the user task data generator to access scheduled task data i.e. A A or daily routine data i.e. B B which may be retrieved from the client device or the backend user task system . The map request processor may also execute a function call to the user preference task generator to access user preference data i.e. A A which may be retrieved from the client device or the backend user preference system .

The dynamic map content controller may read scheduled task data i.e. A A to determine from the time difference between the current real time e.g. determined from the processor clock A and the task time and the relationship between the current mapping request geographic location and the task location. Based on this information the dynamic map content controller may decide which map features to display or highlight on the map. In addition the dynamic map content controller may read the user preference data i.e. A A to determine user tailored map features in order to provide the user with a more personalized map viewing experience. The dynamic map content controller may also read daily routine data i.e. B B to match the current real time e.g. determined from the processor clock A to the routine time and the current mapping request geographic location to the routine location. The dynamic map content controller may then determine the relevant map features to display or highlight on the map. For example with reference to the system determines that the user has a scheduled task that corresponds to taking a flight from an airport in five hours time. If the user arrives at the airport in four hours time i.e. one hour prior to the fight departure and requests to view a map of the airport then the dynamic map content controller may render an airport map to show relevant map elements that are essential to the scheduled task with respect to the short period before flight departure e.g. check in counter security gate boarding gate car rental return etc. . With reference to if the user arrives at the airport in one hour time i.e. four hours prior to the flight departure and requests to view a map of the airport then the dynamic map content controller may render an airport map to show more relevant map elements for the scheduled task with respect to the longer period before flight departure e.g. check in counter security gate boarding gate food court shop currency exchange etc. . In addition the dynamic map content controller may incorporate data associated with the user s preference to personalize the map view by showing personalized map elements for the user such as a smoking lounge if the data in the user s preference indicates that the user is a smoker.

At block the mapping module of the client device may execute an operation. For example the mapping module may execute a function call to the mapping system via the network to request map data A to be sent to the mapping module to display a map within the display component of the device .

At block the mapping module may receive the requested map data A i.e. map tile data sent from the mapping system once the system matches a geographic location of the request to the map data A and the system sends the matched data to the client device . In some embodiments the system may send the matched data in a vector format as described herein. The received map data A may include a plurality of graphic elements that when rendered by the client device depict various map features e.g. a building a store an airport check in counter airport security checkpoint an airport gate location a train station etc. .

To render dynamic map content on the map displayed at the client device the method may cause instructions to be executed at block to retrieve application data from either the client device or the user task system . The application data may include one or more of scheduled task data i.e. A A and daily routine data i.e. B B . At block the method may cause instructions to be executed to retrieve user preference data i.e. A A from either the device or the user preference system .

At block the method may determine whether scheduled task data i.e. A A is available. If scheduled task data i.e. A A is available then the method may proceed to block to read the scheduled task data i.e. A A retrieved in block and determine the task time and task location . At block the method may calculate a time difference between the current real time e.g. determined from the processor clock A and the task time . The method may then proceed to block to quantify the time difference to determine if there is a large amount of time before the task time e.g. a couple of hours before the task time or if there is a small amount of time before the task time e.g. an hour before the task time .

At block if the time difference is large e.g. the time difference is above or below a threshold then the method may cause instructions to be executed to modify the received map data. In some embodiments block may include instructions to modify an appearance of a graphic element of the map or select relevant map elements from the received map tile data based on the large time difference the current mapping request geographic location in relation to the task location and preferences e.g. in the user preference data i.e. A A retrieved in block . For example if the scheduled task data includes an appointment for an airline reservation in a calendar or other scheduling application executing on the client device then the relevant graphic elements of a map for the airport may include a rental car return a check in a security checkpoint and a gate. However if the time difference is small then the method may cause instructions to be executed to select relevant map elements that are essential based on the small time difference the current mapping request geographic location in relation to the task location and preferences e.g. in the user preference data i.e. A A retrieved in block . The method may then proceed to block to execute instructions for displaying the map elements within a map displayed on the client computing device.

Subsequently the method may proceed to block to determine whether daily routine data i.e. B B is available. If daily routine data i.e. B B is available then the method may proceed to block to read the daily routine data i.e. B B retrieved in block and determine the routine time and routine location . At block the method may match the current real time e.g. determined from the processor clock A and the routine time before moving to block where instructions may be executed to select relevant map elements based on a successful matching between the current real time and the routine time as well as the current mapping request geographic location in relation to the routine location and preferences e.g. in the user preference data i.e. A A retrieved in block . The method may then proceed to block where instructions may be executed to show the map elements for display on the map. The method may terminate at block .

If scheduled task data i.e. A A is determined to be not available at block then the method may proceed directly to block to determine whether daily routine data i.e. B B is available. If daily routine data i.e. B B is determined to be not available at block then the method may terminate at block .

Using the system and method described herein an electronic map system may be implemented for displaying dynamic map content on a map based on a user s location scheduled task and preference. By referencing data associated with the user s scheduled task and preference in response to a request for mapping data for specific locations the styling and appearance of graphical map elements may be rendered to provide more targeted and useful information to the user.

As shown in the computing device includes a processor that is coupled to an interconnection bus . The processor includes a register set or register space which is depicted in as being entirely on chip but which could alternatively be located entirely or partially off chip and directly coupled to the processor via dedicated electrical connections and or via the interconnection bus . The processor may be any suitable processor processing unit or microprocessor. Although not shown in the computing device may be a multi processor device and thus may include one or more additional processors that are identical or similar to the processor and that are communicatively coupled to the interconnection bus .

The processor of is coupled to a chipset which includes a memory controller and a peripheral input output I O controller . As is well known a chipset typically provides I O and memory management functions as well as a plurality of general purpose and or special purpose registers timers etc. that are accessible or used by one or more processors coupled to the chipset . The memory controller performs functions that enable the processor or processors if there are multiple processors to access a system memory and a mass storage memory that may include either or both of an in memory cache e.g. a cache within the memory or an on disk cache e.g. a cache within the mass storage memory .

The system memory may include any desired type of volatile and or non volatile memory such as for example static random access memory SRAM dynamic random access memory DRAM flash memory read only memory ROM etc. The mass storage memory may include any desired type of mass storage device. For example if the computing device is used to implement a mapping application having an API a user task module and a user preference module . The mass storage memory may include a hard disk drive an optical drive a tape storage device a solid state memory e.g. a flash memory a RAM memory etc. a magnetic memory e.g. a hard drive or any other memory suitable for mass storage. As used herein the terms module block function operation procedure routine step and method refer to tangible computer program logic or tangible computer executable instructions that provide the specified functionality to the computing device and the mobile mapping system . Thus a module block function operation procedure routine step and method can be implemented in hardware firmware and or software. In one embodiment program modules and routines e.g. the mapping application the API the user task module the user preference module etc. are stored in mass storage memory loaded into system memory and executed by a processor or can be provided from computer program products that are stored in tangible computer readable storage mediums e.g. RAM hard disk optical magnetic media etc. .

The peripheral I O controller performs functions that enable the processor to communicate with peripheral input output I O devices and a network interface a cellular network transceiver a local network transceiver and a GPS transceiver via the network interface via a peripheral I O bus . The I O devices and may be any desired type of I O device such as for example a keyboard a display e.g. a liquid crystal display LCD a cathode ray tube CRT display etc. a navigation device e.g. a mouse a trackball a capacitive touch pad a joystick etc. etc. The I O devices and may be used with the mapping application the user task module and the user preference module to receive GPS data from the GPS transceiver send the GPS data to the backend components of the system render and display maps and user interfaces as described in relation to the figures. A cellular telephone transceiver may be resident with the local network transceiver . The local network transceiver may include support for a Wi Fi network Bluetooth Infrared or other wireless data transmission protocols. In other embodiments one element may simultaneously support each of the various wireless protocols employed by the computing device . For example a software defined radio may be able to support multiple protocols via downloadable instructions. In operation the computing device may be able to periodically poll for visible wireless network transmitters both cellular and local network on a periodic basis. Such polling may be possible even while normal wireless traffic is being supported on the computing device . The network interface may be for example an Ethernet device an asynchronous transfer mode ATM device an 802.11 wireless interface device a DSL modem a cable modem a cellular modem etc. that enables the system to communicate with another computer system having at least the elements described in relation to the system .

While the memory controller and the I O controller are depicted in as separate functional blocks within the chipset the functions performed by these blocks may be integrated within a single integrated circuit or may be implemented using two or more separate integrated circuits. The mobile mapping system may also implement the mapping application the user task module and the user preference module on remote computing devices and . The remote computing devices and may communicate with the computing device over an Ethernet link . For example the computing device may receive mapping data created by a mapping application executing on a remote computing device . In some embodiments the mapping application the user task module and or the user preference module may be retrieved by the computing device from a cloud computing server via the Internet . When using the cloud computing server the retrieved mapping application the user task module and or the user preference module may be programmatically linked with the computing device . The mapping application the user task module and or the user preference module may be a Java applet executing within a Java Virtual Machine JVM environment resident in the computing device or the remote computing devices . The mapping application the user task module and or the user preference module may also be plug ins adapted to execute in a web browser located on the computing devices and . In some embodiments the mapping application the user task module and or the user preference module may communicate with back end components such as the mapping system the user task system and the user preference system via the Internet .

The system may include but is not limited to any combination of a LAN a MAN a WAN a mobile a wired or wireless network a private network or a virtual private network. Moreover while only three remote computing devices and are illustrated in to simplify and clarify the description it is understood that any number of client computers are supported and can be in communication within the system .

Additionally certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code or instructions embodied on a machine readable medium or in a transmission signal wherein the code is executed by a processor or hardware modules. A hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In various embodiments a hardware module may be implemented mechanically or electronically. For example a hardware module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner or to perform certain operations described herein. As used herein hardware implemented module refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where the hardware modules comprise a general purpose processor configured using software the general purpose processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods or routines described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or processors or processor implemented hardware modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. application program interfaces APIs . 

The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the one or more processors or processor implemented modules may be located in a single geographic location e.g. within a home environment an office environment or a server farm . In other example embodiments the one or more processors or processor implemented modules may be distributed across a number of geographic locations.

Some portions of this specification are presented in terms of algorithms or symbolic representations of operations on data stored as bits or binary digital signals within a machine memory e.g. a computer memory . These algorithms or symbolic representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. As used herein an algorithm is a self consistent sequence of operations or similar processing leading to a desired result. In this context algorithms and operations involve physical manipulation of physical quantities. Typically but not necessarily such quantities may take the form of electrical magnetic or optical signals capable of being stored accessed transferred combined compared or otherwise manipulated by a machine. It is convenient at times principally for reasons of common usage to refer to such signals using words such as data content bits values elements symbols characters terms numbers numerals or the like. These words however are merely convenient labels and are to be associated with appropriate physical quantities.

Unless specifically stated otherwise discussions herein using words such as processing computing calculating determining presenting displaying or the like may refer to actions or processes of a machine e.g. a computer that manipulates or transforms data represented as physical e.g. electronic magnetic or optical quantities within one or more memories e.g. volatile memory non volatile memory or a combination thereof registers or other machine components that receive store transmit or display information.

As used herein any reference to some embodiments or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in some embodiments in various places in the specification are not necessarily all referring to the same embodiment.

Some embodiments may be described using the expression coupled and connected along with their derivatives. For example some embodiments may be described using the term coupled to indicate that two or more elements are in direct physical or electrical contact. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. The embodiments are not limited in this context.

Further the figures depict preferred embodiments of a system for displaying dynamic map content based on the user s location and application data for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for displaying dynamic map content based on the user s location scheduled task and preference for subsequent display on a mobile computing device through the disclosed principles herein. Thus while particular embodiments and applications have been illustrated and described it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims.

