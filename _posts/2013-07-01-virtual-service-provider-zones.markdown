---

title: Virtual service provider zones
abstract: A service proxy services as an application programming interface proxy to a service, which may involve data storage. When a request to store data is received by the service proxy, the service proxy encrypts the data and stores the data in encrypted form at the service. Similarly, when a request to retrieve data is received by the service proxy, the service proxy obtains encrypted data from the service and decrypts the data. The data may be encrypted using a key that is kept inaccessible to the service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286491&OS=09286491&RS=09286491
owner: Amazon Technologies, Inc.
number: 09286491
owner_city: Seattle
owner_country: US
publication_date: 20130701
---
This application incorporates by reference for all purposes the full disclosure of U.S. Pat. No. 8 416 709 issued on Apr. 9 2013 entitled NETWORK DATA TRANSMISSION ANALYSIS MANAGEMENT U.S. patent application Ser. No. 13 491 403 filed on Jun. 7 2012 entitled FLEXIBLY CONFIGURABLE DATA MODIFICATION SERVICES U.S. patent application Ser. No. 13 764 963 filed on Feb. 12 2013 entitled DATA SECURITY SERVICE and U.S. patent application Ser. No. 13 932 872 filed concurrently herewith entitled DATA LOSS PREVENTION TECHNIQUES .

The security of computing resources and associated data is of high importance in many contexts. As an example organizations often utilize networks of computing devices to provide a robust set of services to their users. Networks often span multiple geographic boundaries and often connect with other networks. An organization for example may support its operations using both internal networks of computing resources and computing resources managed by others. Computers of the organization for instance may communicate with computers of other organizations to access and or provide data while using services of another organization. Organizations may utilize complex data storage systems to efficiently and cost effectively store data. In many instances organizations configure and utilize data storage systems hosted and managed by other organizations thereby reducing infrastructure costs and achieving other advantages. These data storage systems and other services may operate under multiple different jurisdictions each with their own rules and regulations. With such complex use of computing resources to manage ensuring that access to the data is authorized and generally that the data is secure can be challenging especially as the size and complexity of such configurations grow.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein provide the ability to offer various computing resource services such as data storage services in various zones without the need to build full infrastructures in those zones. In some examples the zones correspond to facilities in different geopolitical boundaries. Various geographic regions may have their own rules laws and or regulations with respect to the handling of other people s data. For instance one regulation may require that certain types of data remain in country. Similar regulations may be in force in multiple geographic regions. At the same time many organizations find it advantageous to utilize various computing resource services. Such services may not be available in all jurisdictions or better and or more economical services may be provided in other regions.

In many instances compliance with such regulations may be achieved by encrypting data before the data leaves a regulated jurisdiction. Techniques of the present disclosure accordingly allow various data related services to be provided to multiple geographic regions while maintaining compliance with the differing rules laws and or regulations. Generally the techniques described and suggested herein allow for the providing of services in multiple zones where the zones may but do not necessarily correspond to different sovereign entities. For instance different zones may be different computer networks governed by different entities whether those entities be governmental agencies of a sovereign entity corporations organizations divisions within an organization individuals and or others. Other example zones are discussed in more detail below.

In various embodiments a service interface such as a web service interface is provided in one zone. In some examples the service operates in an Internet Point of Presence PoP . The service interface may operate as a virtual application programming interface API endpoint for a service whose supporting infrastructure is in another zone e.g. under another political legal jurisdiction . Accordingly the service interface may operate to receive and respond to requests submitted to the service interface while fulfillment of some or even all the requests may require the use of the infrastructure in the other zone. In this manner customers may utilize the service interface to utilize a service as if the customers were utilizing a service with fully supporting infrastructure in the zone. In other words from the perspective of the customers a computing resource provides instances of a service in multiple zones but behind the scenes the processing of a request for a particular zone may occur at least in part using the instance of a service of another zone. For example a web service request to store data may be fulfilled by the service interface by transmitting the data for persistent storage to the service in the other zone. Similarly a data retrieval request may be fulfilled by retrieving data persistently stored in the infrastructure of the service in the other zone. In this manner a full infrastructure does not need to be constructed and maintained for every zone wherein there may be legal restrictions on the export of certain types of information.

To comply with various rules laws regulations and or preferences some or even all data passing through the service interface to a service in another zone may be encrypted using cryptographic keys that are maintained within the zone of the service interface and or generally in a zone that is outside of the zone of the supporting service infrastructure. In this manner while in the zone of the supporting service infrastructure the data is secure and inaccessible without access to appropriate cryptographic keys in another zone. The data that is encrypted may be generally or selectively encrypted. The data which is encrypted may also be configurable by a customer on behalf of whom the data is stored. In addition the data that is encrypted and whether the data is encrypted may be determined in accordance with one or more data loss prevention DLP policies. In addition while various illustrative embodiments of the present disclosure utilize encryption for the purpose of illustration various other techniques may also be used. For example the various techniques described herein include various manipulation mangling of data where the type of mangling to be applied may be customer configurable.

Returning to the illustrative examples of encryption of data in some embodiments the service interface operating as an API proxy utilizes a cryptography service within the same zone. The cryptography service may securely manage cryptographic keys used for encrypting and decrypting and possibly for performing other cryptographic operations such as message signing. When data is to be encrypted the service interface may utilize the cryptography service to encrypt the data before the data is transmitted to the other service in the other zone. Similarly when data is to be decrypted the service interface may utilize the cryptography service to decrypt the data. Illustrative manners in which the cryptography service may be utilized appear below. An example cryptography service can be found in U.S. patent application Ser. No. 13 764 963 filed on Feb. 12 2013 entitled DATA SECURITY SERVICE which is incorporated herein by reference.

The instances of a service type of a service provider may be utilized by a customer to restrict access to certain data by certain individuals such as to comply with one or more regulations. As an example the set of operators e.g. individuals with authority to make requests to a service of the computing resource service provider on behalf of a customer may have different vetting properties or qualifications than another set of operators for another service. For example as noted above and discussed in more detail below a service provider may operate a first service in a first region and a second service in a second region e.g. in a different legal jurisdiction than the first region where for at least some requests to the first service the first service acts as a proxy for the second service. The operators of the first service may be required to have certain qualifications which are different than the qualifications if any required for utilizing the second service. Example qualifications include but are not limited to having passed a background investigation having a particular nationality or location being subject to certain nondisclosure obligations having a certain security clearance level having a certain job title e.g. attorney and the like. To enable enforcement of such restrictions the service provider can require different authentication credentials for one service than for another service. As an example a signing key used to sign requests to the first service may not be usable for the second service. In this manner distribution of signing keys to individuals with the appropriate qualifications can be used to ensure that data access is in compliance with various regulations despite the data passing from one region to another.

As illustrated in for example the customer may transmit data to the virtual service such as through a web service API call to the virtual service . The data may be transferred for instance in connection with a request to store the data. The virtual service may process the request to store data as if the request had been submitted to the backing service . For example despite the virtual service lacking sufficient storage capacity to provide a data storage service to customers data provided to the virtual service may nevertheless be stored utilizing the infrastructure of the backing service . As noted above various jurisdictional considerations may come into play when utilizing a data storage service. Accordingly as illustrated in the virtual service and the backing service in some embodiments are implemented using physical infrastructure such as one or more data center facilities and or collections of servers networking equipment data storage and the like. In the example illustrated in the virtual service and backing service are in different countries although different jurisdictional entities are also considered as being within the scope of the present disclosure.

In order to prevent data that is transmitted to the virtual service from being stored in plaintext form in the backing service which may violate one or more rules laws regulations and or preferences data from the customer transmitted from the virtual service to the backing service may be encrypted. In various embodiments the data is encrypted using a cryptographic key that is never provided without the consent and or instruction of the customer to a computing device in the jurisdiction in which the backing service is located. For example in some embodiments the key used to encrypt the data is maintained securely within the jurisdiction in which the virtual is located. As discussed in more detail below some data may be provided from the virtual service to the backing service in plaintext cleartext form while other data may be encrypted. Further some data provided to the virtual service may not be transmitted to the backing service such as when such a transfer of information would violate one or more DLP policies.

It should be noted that while illustrates data being transmitted to the virtual service by the customer other ways in which the virtual service may obtain data that is transmitted to the backing service may be provided. For example in some embodiments customers of the customer utilize services of the customer that are implemented using computing resources of a computing resource service provider. Data may be transmitted to the virtual service directly from these customers of the customer . As another example customer data transmitted to the virtual service may be transmitted from a computing device that is physically hosted by a computing resource service provider that operates the virtual service . For instance the customer may provide the virtual service data from a virtual machine instance implemented by the computing resource service provider utilizing a virtual computer system service such as described below.

In addition while illustrates data from the customer traveling to the virtual service from outside the jurisdiction in which the virtual service sits the data may be provided from within that jurisdiction or from a different jurisdiction such as the jurisdiction in which the backing service is located. It should be further be noted that while the present disclosure discusses various communications and transmissions as coming from a customer or other entity unless otherwise clear from context it should be understood that such communications are initiated by one or more computing devices of the customer which may be operating pursuant to synchronous user input and or in accordance with automated processes. In other words while the customer may refer to an entity such as an organization when data is described as traveling from the customer unless otherwise clear from context the data is being provided from a computing device of the customer or a computing device operating on behalf of the customer . Other variations and additional features are discussed in more detail below.

As noted above a computing resource service provider may provide various computing resource services to its customers. The services provided by the computing resource service provider in this example include a virtual computer system service a block level data storage service a cryptography service also referred to as a key management service a data storage service and one or more other services although not all embodiments of the present disclosure will include all such services and additional services may be provided in addition to or as an alternative to services explicitly described herein. Each of the services may include one or more web service interfaces that enable the customer to submit appropriately configured API calls to the various services through web service requests. In addition each of the services may include one or more service interfaces that enable the services to access each other e.g. to enable a virtual computer system of the virtual computer system service to store data in or retrieve data from the data storage service and or to access one or more block level data storage devices provided by the block data storage service .

The virtual computer system service may be a collection of computing resources configured to instantiate virtual machine instances onto virtual computing systems on behalf of the customers of the computing resource service provider . Customers of the computing resource service provider may interact with the virtual computer systems service via appropriately configured and authenticated API calls to provision and operate virtual computer systems that are instantiated on physical computing devices hosted and operated by the computing resource service provider . The virtual computer systems may be used for various purposes such as to operate as servers supporting a website to operate business applications or generally to serve as computing power for the customer. Other applications for the virtual computer systems may be to support database applications electronic commerce applications business applications and or other applications.

The block level data storage service may comprise a collection of computing resources that collectively operate to store data for a customer using block level storage devices and or virtualizations thereof . The block level storage devices of the block level data storage service may for instance be operationally attached to virtual computer systems provided by the virtual computer system service to serve as logical units e.g. virtual drives for the computer systems. A block level storage device may enable the persistent storage of data used generated by a corresponding virtual computer system where the virtual computer system service may only provide ephemeral data storage.

As illustrated in the computing resource service provider may operate a cryptography service which is described in more detail below in connection with . Generally the cryptography service may be a collection of computing resources collectively configured to manage and use cryptographic keys for customers of the computing resource service provider. Keys used by the cryptography service may have associated identifiers that the customers can reference when submitting requests to perform cryptographic operations such as encryption decryption and message signing and or other operations such as key rotation. The cryptography service may securely maintain the cryptographic keys to avoid access by unauthorized parties.

As noted the computing resource service provider may also include one or more data storage services which may include an on demand data storage service and or an archival data storage service. As on demand data storage service may be a collection of computing resources configured to synchronously process requests to store and or access data. The on demand data storage service may operate using computing resources e.g. databases that enable the on demand data storage service to locate and retrieve data quickly so as to allow data to be provided in responses to requests for the data. For example the on demand data storage service may maintain stored data in a manner such that when a request for a data object is retrieved the data object can be provided or streaming of the data object can be initiated in a response to the request. As noted data stored in the on demand data storage service may be organized into data objects. The data objects may have arbitrary sizes except perhaps for certain constraints on size. Thus the on demand data storage service may store numerous data objects of varying sizes. The on demand data storage service may operate as a key value store that associates data objects with identifiers of the data objects which may be used by the customer to retrieve or perform other operations in connection with the data objects stored by the on demand data storage service . The on demand data storage service may also be accessible to the cryptography service . For instance in some embodiments the cryptography service utilizes the on demand data storage service to store keys of the customers in encrypted form where keys usable to decrypt the customer keys are accessible only to particular devices of the cryptography service . Access to the data storage service by a customer another service or other entity may be through appropriately configured API calls.

An archival storage system may operate differently than an on demand data storage service. For instance an archival storage system may be configured to store data in a manner that reduces the costs of storage at the expense of performance in connection with data access. As one illustrative example the archival storage system may be configured to perform data operations i.e. store and retrieve data asynchronously to take advantage of cost savings afforded by batch processing and parallelism. For instance a client of the archival storage system may receive requests to access data objects stored in the archival storage system aggregate the requests process the requests in batches and make the requested data available for retrieval using additional requests. Due to the asynchronous processing the archival storage system may require another request to retrieve a data object once the data object has been made ready for retrieval such as by reading the data object from one or more archival data storage devices and writing the data to one or more staging data storage devices from which the data object is available.

The on demand storage system on the other hand may be configured to provide better performance with respect to data access. For example the on demand storage system may be configured to synchronously process requests to store and or access data. To enable better performance relative to the archival storage system the on demand storage system may operate using additional computing resources e.g. databases that enable the on demand storage system to locate and retrieve data quickly relative to the archival storage system. The on demand storage system may provide synchronous data access. For example the on demand storage system may maintain stored data in a manner such that when a request for a data object is retrieved the data object can be provided or streaming of the data object can be initiated in a response to the request.

In the environment illustrated in a notification service is included. The notification service may comprise a collection of computing resources collectively configured to provide a web service or other interface and browser based management console that can be used to create topics customers want to notify applications or people about subscribe clients to these topics publish messages and have these messages delivered over clients protocol of choice i.e. HTTP email SMS etc. . The notification service may provide notifications to clients using a push mechanism without the need to periodically check or poll for new information and updates. The notification service may be used for various purposes such as monitoring applications executing in the virtual computer system service workflow systems time sensitive information updates mobile applications and many others.

The computing resource service provider may additionally maintain one or more other services based on the needs of its customers . For instance the computing resource service provider may maintain a database service for its customers . A database service may be a collection of computing resources that collectively operate to run one or more databases for one or more customers . Customers of the computing resource service provider may operate and manage a database from the database service by utilizing appropriately configured API calls. This in turn may allow a customer to maintain and potentially scale the operations in the database. Other services include but are not limited to object level archival data storage services services that manage and or monitor other services and or other services.

As illustrated in the computing resource service provider in various embodiments includes an authentication system and a policy management service . The authentication system in an embodiment is a computer system i.e. collection of computing resources configured to perform operations involved in authentication of users of the customer. For instance one of the services may provide information from the users to the authentication service to receive information in return that indicates whether or not the user requests are authentic. Determining whether user requests are authentic may be performed in any suitable manner and the manner in which authentication is performed may vary among the various embodiments. For example in some embodiments users electronically sign messages i.e. computer systems operated by the users electronically sign messages that are transmitted to a service. Electronic signatures may be generated using secret information e.g. a private key of a key pair associated with a user that is available to both an authenticating entity e.g. user and the authentication system. The request and signatures for the request may be provided to the authentication system which may using the secret information compute a reference signature for comparison with the received signature to determine whether the request is authentic.

If the request is authentic the authentication service may provide information to the service that the service can use to determine whether to fulfill a pending request and or to perform other actions such as prove to other services such as the cryptography service that the request is authentic thereby enabling the other services to operate accordingly. For example the authentication service may provide a token that another service can analyze to verify the authenticity of the request. Electronic signatures and or tokens may have validity that is limited in various ways. For example electronic signatures and or tokens may be valid for certain amounts of time. In one example electronic signatures and or tokens are generated based at least in part on a function e.g. a Hash based Message Authentication Code that takes as input a timestamp which is included with the electronic signatures and or tokens for verification. An entity verifying a submitted electronic signature and or token may check that a received timestamp is sufficiently current e.g. within a predetermined amount of time from a current time and generate a reference signature token using for the received timestamp. If the timestamp used to generate the submitted electronic signature token is not sufficiently current and or the submitted signature token and reference signature token do not match authentication may fail. In this manner if an electronic signature is compromised it would only be valid for a short amount of time thereby limiting potential harm caused by the compromise. It should be noted that other ways of verifying authenticity are also considered as being within the scope of the present disclosure.

The policy management service in an embodiment is a computer system configured to manage policies on behalf of customers of the computing resource service provider. The policy management service may include an interface that enables customers to submit requests related to the management of policy. Such requests may for instance be requests to add delete change or otherwise modify policy for the customer or for other administrative actions such as providing an inventory of existing policies and the like. The policy management service may also interface with other services to enable the services to determine whether the fulfillment of a pending request is allowable according to policy corresponding to the customer for which the request was made. For example when a service receives a request the service if it has not locally cached such information may transmit information about the request and or the request itself to the policy management system which may analyze policies for the customer to determine whether existing policy of the customer allows fulfillment of the request and provide information to the service according to the determination.

The backing zone may correspond to a network of computing resources under the administrative control of the computing resource service provider or another computing resource service provider. The virtual zone may be implemented in a variety of ways and generally as discussed below the virtual zone is implemented to operate such that from the perspective of a customer the virtual zone operates as if it is a fully facilitated backing zone that is independently capable of processing requests without use of the backing zone . In other words despite use of the backing zone the virtual zone is able to receive and cause the processing of requests as if the requests were submitted directly to the backing zone except for certain manipulations of data such as encryption that would not otherwise occur if the request were submitted directly to the backing zone . For example as noted above in some instances the virtual zone may be implemented as an internet PoP in a particular political jurisdiction. The backing zone may correspond to one or more data center facilities having infrastructure capable of providing one or more computing resource services such as described above in connection with .

Turning to the virtual zone as noted above the virtual zone may include a storage service proxy and a cryptography service . As described in more detail below the storage service proxy may provide a service interface to which the customer can submit requests. The service interface may be accessible at one or more public network addresses such as one or more public IP addresses. The storage service proxy may utilize the cryptography service to ensure sure that data sent to a storage service of the backing zone is encrypted. The storage service may also provide its own storage interface which may be directly accessible by the customer and or other customers. The backing zone may also include an authentication service . The authentication service may be a collection of computing resources such as described above that serve to enable the storage service proxy cryptograph service and storage service to determine whether to fulfill requests submitted by the customer or by another component of the environment .

It should be noted that the storage service proxy and the storage service may correspond to a data storage service of one or more computing resource service providers. For example the storage service may be an on demand storage service an archival data storage service a block level data storage service a database service such as a relational data base service a noSQL database storage service or a data warehouse data storage service. Generally any service that operates to store data on behalf of one or more customers may be utilized in the environment . It should also be noted that while storage services are used for the purpose of illustration the virtual zone and backing zone may include computing resources for other types of services such as virtual computer system services computing resource management service and or generally any computing resource service that may be provided by a computing resource provider and which may involve access to customer or other sensitive data. Accordingly the backing zone may include facilities to implement such a service and the virtual zone may include a corresponding service interface that operates as an API proxy for that service. In addition the virtual zone may also include multiple different services each with a corresponding service proxy in the virtual zone . As noted above a virtual zone may be provided in various ways and the ways in which a virtual zone may be provided are not limited to that which is illustrated in and described above.

As illustrated in the virtual zone as described above in connection with includes a storage service proxy and a cryptography service. As noted above the storage service proxy may include a storage service interface serving as an API proxy for a storage service located in the backing zone . As with the storage service proxy requests may be submitted by the customer to the storage service proxy and fulfillment of their requests may utilize the storage service . The cryptography service may be utilized by the storage service proxy to ensure that data transmitted to the storage service by the storage service proxy is encrypted when appropriate in accordance with the various embodiments. Similarly an authentication service in the backing zone may be utilized by the storage service proxy cryptography service and storage service to enable determinations of whether requests are authentically submitted and therefore fulfillable if otherwise fulfillable e.g. where fulfillment would be in accordance any applicable policy.

It should be noted that as with all environments described here in variations are considered as being within the scope of the present disclosure. For example shows a cryptography service inside of the virtual zone . The cryptography service may be operated for example as a hardware security module HSM or other computing device that manages cryptographic keys on behalf of the customer . It should be noted however the cryptography service may be located in other zones such as the backing zone or another virtual zone which is not illustrated in the figure. For instance the cryptography service may be in a virtual zone such as described above in connection with . Generally the cryptography service may be a service exclusively dedicated to the customer or may be a multitenant service that manages cryptographic keys on behalf of multiple customers of a computing resource service provider as appropriate. It should be also noted that shows a customer premises having a single virtual zone however a customer premise may include multiple virtual zones which may be utilized for various purposes. For example the customer may be an organization and different virtual zones may be used by different administrative entities within the organization. In this manner data mingling and other issues which may be of concern to the customer may be managed through the use of multiple virtual zones. Similarly while a storage service and a storage service proxy are utilized for the purpose of illustration one or more virtual zones of the customer premises may include multiple service proxies to multiple corresponding services. Generally the techniques described and suggested herein may be used to enable use of multiple services each with a corresponding proxy.

Further as noted above various service proxies may be accessible via public network addresses such as IP addresses. In some embodiments a service proxy has a corresponding uniform resource locator URL that is different than a URL used for the corresponding backing service. For instance in the example of a proxy and service being in different geographic jurisdictions a proxy may have a URL in the form of storageservicecountry1serviceprovidercom while the backing service may have a URL of the form storageservicecountry2serviceprovidercom where represents the character in the brackets used for delimiting domains and sub domains. In other examples the proxy and the storage service may have the same URL but different public IP addresses. Distributed DNS servers may be configured to resolve the URL to an IP address for the proxy or backing service that is geographically closest. As yet another example of a variation considered as being within the scope of the present disclosure a backing service may be configured to reroute requests through the proxy so that the backing service receives data in encrypted form where appropriate. Other variations are also considered as being within the scope of the present disclosure.

In an embodiment the request processing subsystem includes one or more web servers that provide a web service interface to the cryptography service such that web service calls from a customer or other service may be made to the request processing subsystem via the web service interface in order to cause the performance of various cryptographic operations. As noted above the cryptography service may securely manage cryptographic keys. Accordingly various components of the cryptography service may enable such secure management. In an embodiment the cryptography service includes a plurality of cryptographic modules and customer key storage . Each cryptographic module may be a subsystem of the cryptography service that securely manages cryptographic keys which may be referred to as domain keys. In an embodiment the cryptographic modules each store a set of one or more domain keys that is common to all of the cryptographic modules . In other words each of the cryptographic modules may store one of more of the same domain keys. Storage of the domain keys may be performed so that the domain keys never leave the cryptographic modules and generally are inaccessible to any subsystems of the cryptography service or other systems.

In an embodiment for example the cryptographic modules are security modules which may be hardware security modules HSMs . The hardware security modules may be configured with computing resources such as processors and memory storing executable instructions that enable the cryptographic modules to perform cryptographic operations. The cryptographic modules may be configured to be tamper proof such that if intrusion into the interior of the cryptographic modules is detected domain keys stored within the cryptographic module may be erased thereby preventing access to the domain keys by way of physical intrusion into a cryptographic module . As noted above in an embodiment the cryptography service includes a repository for customer keys which is illustrated in as the customer key storage . In alternate embodiments however one or more security modules store the customer keys without the use of external customer key storage . In such embodiments the customer keys may be accessed from memory and there may not be a need to decrypt using a domain key.

Returning to the embodiment illustrated each customer key corresponds to a corresponding customer of the cryptography service where one customer may have multiple corresponding customer keys but where keys are not shared among customers. As such the cryptography service may store customer keys in the customer key storage for multiple customers. Similarly the cryptography service may perform various cryptographic operations through the cryptographic modules for multiple customers. As illustrated in customer keys stored in the customer key storage are encrypted under a domain key stored by the cryptographic modules . It should be noted that the brackets around the customer key with the domain key annotating the right hand brackets is provided as notation indicating encryption of the customer key under the domain key. In this manner customer keys stored in the customer key storage are stored in a manner that requires access to a domain key in order to access the customer key. Thus access to data in the customer key storage does not by itself provide access to data encrypted under a customer key. Therefore customer keys for multiple customers may be stored external to the cryptographic modules therefore providing scalability without requiring the security modules to store all keys which they may use to perform cryptographic operations.

The cryptographic modules may be configured to upon a request to perform cryptographic operation using a specified customer key access the encrypted specified customer key from the customer key store use a domain key to decrypt the customer key and use the decrypted customer key to perform the cryptographic operations as discussed in more detail below. It should be noted that while the customer key storage is illustrated as being within the cryptography service the customer key storage may be located in another system such as a data storage service which may be in the same or in a different zone than the cryptography service .

Determination whether the request is authentic may be performed in any suitable manner. For example in some embodiments the request may be electronically digitally signed in a manner that is verifiable by the system performing the process or another system in which the system performing the process communicates. Referring to the request may be signed using a secret key shared between the customer and the authentication service . The cryptography service if performing the process may provide the request and the signature for the request to the authentication service which may generate a reference signature based on the request and its own copy of the secret key to determine whether the digital signature that was received with the request matches. If the signature generated by the authentication service matches the authentication service may provide a communication to the cryptography service that the request is authentic thereby enabling the cryptography service to determine that the request should be fulfilled. A similar process may be performed in connection with .

It should be noted that while not illustrated in the figure additional determinations regarding whether the request should be processed may be made. For example process may include determining whether policy allows the request to be fulfilled. The request may be a policy on a key to be used on one of more principals such as a user that submitted the request or otherwise. Such additional operations may also be performed as part of other processes including those described below. If it is determined that the request is authentic the process may include generating a data key. A data key may be a cryptographic key to be used to encrypt data such as data of a request to store the data in a storage service. The data key may be randomly pseudo randomly or otherwise generated. In addition while the process illustrates generation of the data key a data key may be pre generated and accessed from memory.

In an embodiment the process includes accessing an encrypted customer key. Referring to for example a cryptographic module of the cryptography service may submit a request to the customer key storage for the encrypted customer key which may be encrypted under a domain key. The request to the customer key storage may include an identifier of the customer key to be obtained. Once the encrypted customer key has been accessed the process may include using the domain key to decrypt the customer key. The decrypted customer key may then be used to encrypt the data key. The data key and the encrypted data key may then be provided in response to the request thereby enabling the requester to utilize the data key for the encrypted of data as discussed in more detail below.

Returning to the determination whether the request is authentic if it is determined that the request is not authentic such as if an authentication service indicates that the request is not authentic the process may include denying the request. Denying the request may be performed in various ways in accordance with various embodiments. Denying the request may be performed for example by responding the request with an indication that the request was denied and or one of more reasons for the denial. Denying the request may also include simply inaction such as not responding to the request. Generally any suitable way in which a request may be denied may be used. It should be noted that and generally all processes described herein show a particular order or operations although the scope of the present disclosure is not necessarily limited to the order or operations performed therein. For example shows generating a data key occurring before access of an encrypted customer key. Further operations may be performed in a different order or in parallel. Similarly using the domain key to decrypt a customer key may be performed before generation of the data key or otherwise obtaining the data key. Other variations are also considered as being within the scope of the present disclosure.

Returning to the embodiment illustrated in the figure if it is determined that the request is authentic the process may include accessing an encrypted customer key such as described above. The access customer key may then be used to decrypt the data key. The data key may then be provided in response to the request. In this manner a computer system that submitted the request may use the decrypted data key to perform one of more cryptographic operations such as decryption of data that was encrypted under the data key. Returning to the determination whether the request is authentic the process may include denying the request if determined that the request is not authentic or otherwise upon determining that the request should not be fulfilled.

If it is determined that the request is authentic and or generally that the request should be fulfilled the process may include requesting a data key from a local cryptography service. The local cryptography service may be a cryptography service such as described above that is in the same zone as the system performing the process . For instance referring to the cryptography service may be the cryptography service . Referring to the cryptography service may be the cryptography service . It should be noted that as with all processes described herein variations are considered as being within the scope of the present disclosure and the cryptography service is not necessarily a local cryptography service but it may be a cryptography service that is in a zone that is different from a zone in which a data storage service in which the data is to be ultimately stored is located. In this manner the cryptography service is not necessarily local but in a zone that is different from the zone where the data will be stored. Further the keys required for accessing the data are stored in a different zone than the encrypted data itself.

As illustrated in a response to the request for the data key from the local cryptography service may be provided and an encrypted data key may be received from the cryptography service. The data key may be encrypted by a customer key which may have been implicitly determined by the cryptography service or which may have been specified in the request to the local cryptography service. The received data key may then be used to encrypt the data. Once the data has been encrypted the process may include generating a data object that comprises the encrypted data and the encrypted data key. The data object that was generated may be transmitted to a backing storage service in another zone. Referring to for example the storage service proxy may transmit the data object to the storage service via an appropriately configured API call such as a web service call to the storage service . Referring to the storage service proxy may transmit the data object to the storage service via an appropriately configured API call.

Once the data key is no longer needed by the system performing the process the process may include destroying the unencrypted data key. Destroying the unencrypted data key may be performed in any suitable manner and generally in any manner in which access to the data key is lost by the system performing the process . As one example the data key in unencrypted form may be managed by the system performing the process such that the data key is only stored in volatile memory such as random access memory RAM or a central processing unit CPU register. In this manner when power is cut to the volatile memory the access to the stored unencrypted data key is lost or if power is never cut the memory locations in which the data key is stored will eventually be overwritten as the system performing the process continues to operate such as by performing the process additional times as future requests are received. As another example the data key may be destroyed by overriding any memory locations in which the data key is stored whether volatile or non volatile memory with other data which may be a sequence of 0 bits a sequence of 1 bits a sequence of random bits or a sequence of bits that does not contain sensitive information. Generally any manner of causing a loss of access to the data key may be used. In addition as noted above destruction of the unencrypted data key may be performed synchronously in performance of the process and not necessarily as an operation in the order illustrated in or may be performed asynchronously such as part of a process that operates to eventually destroy data keys or allow data keys to be overwritten with other data.

Returning to the determination whether the request is authentic if it is determined that the request is not authentic or otherwise that the request should not be fulfilled the process may include denying the request such as described above. As with all processes discussed herein variations are considered as being within the scope of the present disclosure. For example as illustrated in a request for a data key is submitted to a cryptography service that generates or otherwise obtains a data key and provides in response the data key in plaintext and cypher text form. As an alternative a system performing the process may generate or obtain a data key itself and provide the data key to the cryptography service for encryption. The cryptography service may then provide the encrypted data key back and not necessarily provide the data key back since the system performing the process may already have access to the data key. Also as noted above the request to store data that is received is described as being received from a customer computing system such as described above. In various embodiments the request does not necessarily originate from a customer computer system but may originate from another computer system despite the data ultimately being stored as a service for the customer.

In addition as another example of a variation a request to store data may not be received externally from another system. Performance of the process may for example include generation of the data and upon generation of the data and performing operations that result in the data being encrypted and transmitted to a data storage service such as described above. Further the process as illustrated in includes generation of a data object that comprises and encrypted data and the encrypted data key. As an example the encrypted data and encrypted data key may be concatenated together to form the data object. In this manner the encrypted data key and the encrypted data object are persisted together for later access such as described below. However in various embodiments the encrypted data key and encrypted data are not necessarily persisted together but may be persisted in different logical data containers of a data storage service in different storage services or in other ways. For instance the encrypted data key may be stored locally while the encrypted data is transmitted to a storage service in accordance with techniques described above. Metadata maintained may persist an association between the encrypted data key and the data encrypted under the key. Other variations are also considered as being within the scope of the present disclosure.

Once the encrypted data and encrypted data key have been obtained the process may include requesting decryption of the data key from a cryptography service which may be a local cryptography service such as described above or any suitable cryptography service such as a cryptography service in a zone that is different from a zone the data storage service is located. In response to the request for decryption of the data key from the cryptography service the decrypted data key may be received from the cryptography service to which the request was submitted. The decrypted data key may then be used to decrypt the encrypted data and the decrypted data may then be provided in response to the request to retrieve the data. Returning to the determination whether the request is authentic if it is determined that the request is not authentic or otherwise that the request should not be fulfilled the process may include denying the request. In addition while not illustrated in the figure the process may include destroying the unencrypted data key such as described above. The unencrypted data key may be destroyed for example in instances where the data is to remain stored by a storage service in encrypted form and therefore in a manner such that unauthorized access to the data key could be problematic.

As noted above the types of services which may utilize the various techniques described herein may vary in accordance with the various embodiments. In some examples for instance a service proxy for a database service may be located in one zone where the service proxy services as an API proxy to a database service in another zone. Referring to for example the storage service proxy may be a service proxy for a database service which may be the storage service . Similarly referring to the storage service may be a database service to which the storage service proxy acts as an API proxy. As noted above some but not all data sent from a service proxy to a backing service may be encrypted. accordingly shows an illustrative example of data which may be stored by a database service. In particular shows an illustrative diagram of data organized into a relational table stored by a virtual data base service which may be for instance a service proxy such as described above. As illustrated in the data base table comprises various data which may be for instance data about sales transactions although the scope of the present disclosure is not limited to the specific types of data mentioned herein. In this particular example each column of the table corresponds to a different type of information. The first column shown for instance may correspond to first names the second column may correspond to last names the third illustrated column may correspond to transaction amounts and the last column may correspond to dates on which the corresponding transaction occurred. A row in the table may for instance identify the person who made a transaction the transaction and the date on which the transaction occurred. As indicated by the ellipses other information may be included as well such as an identifier for an item purchased a payment method credit card e.g. and other types of data. Some of the data in the table may be considered sensitive. For instance the first and last name which may be names of customers may be considered sensitive data and may be subject to various privacy laws rules regulations or general preferences. Some of the data may not be considered sensitive such as the amounts of the transactions and the dates of which they occurred.

Accordingly performance of the various techniques described above may include encrypting some but not all of the data in the table before it is sent to a backing database service. shows an illustrative example of a table illustrating how the same data may be organized at the backing database service. In particular as indicated by the arrow transitioning between the virtual database service and the backing database service data in the table transformed resulting in the table where the first two columns corresponding to first and last names respectively and possibly other columns are encrypted. The values in the tables corresponding to the amounts however are left unencrypted. In this manner as discussed in more detail below the backing database service may be able to provide at least some functionality with respect to the unencrypted data such as by processing queries using the unencrypted data. While the encrypted columns of the relational database table are consecutive the columns that are encrypted are not necessarily consecutive. Further while shows illustrative examples of a relational database table the scope of the present disclosure is not limited to relational databases and related organizations of data sets but also extends to other types of databases and generally any types of data storage services that store data in a structured manner. Generally any type of database that is able to process queries may be used in accordance with the various embodiments.

When a database of a computing resource provider stores some but not all data that is encrypted such as in accordance with the techniques described above processing of database queries may occur across different zones. In other words some processing may occur in one zone and other processing may occur in other zones. accordingly shows an illustrative example of a process which may be used to process a database query. The process may be performed by any suitable system such as by a service proxy described above. For example a service proxy may perform the process in order to process queries that it receives despite the actual data being stored by a backing service in another zone. In an embodiment the process includes receiving a query for a database. The query may be received encoded in an appropriately configured API call to the system performing the process . The query may then be parsed or otherwise analyzed in order to generate a sensitive query and a non sensitive query where the sensitive query and the non sensitive query are configured such that sequential execution of the non sensitive query then the sensitive query with some intermediate data modification on a result of the non sensitive query as described in more detail below provides the same result as executing the query.

Parsing the query may be performed in any suitable manner. For example in some embodiments columns of a database table are tagged in a manner indicating whether the columns contain sensitive data. Referring to for example the first two columns illustrated may be tagged as sensitive where as other columns may be tagged as non sensitive where tagging as sensitive or non sensitive may be implicit by the absence of a tag. The tags may enable a storage proxy to determine which data to encrypt before transmitting data to a backing service. The service proxy may for instance be configured to receive data through its API interface identify which columns in a database the data affects determine which if any columns are tagged as sensitive and encrypt the data for the identified columns before transmitting to the backing service. Parsing the query may be performed by identifying portions of the query that require a search of columns tagged as sensitive or generally a search of data tagged as sensitive. Similarly parsing the query may be performed by identifying of the query requiring a search of data tagged as non sensitive. Turning to the illustrative example of for instance a query may be configured to identify data in a relational database that satisfies one or more conditions on a last name as well as one or more conditions on a transaction amount. As noted above a column for last names may be tagged as sensitive whereas a column of transactions amounts may be tagged as non sensitive. In this manner parsing such a query may be performed by extracting from the query a sub query for identifying data that satisfies the one or more conditions on the transaction amount. Some of the data identified may not satisfy the one or more conditions on the last name. In this manner a sub query configured to identify data that satisfies the one or more conditions on the last name may be identified as the sensitive query.

Returning to the non sensitive query may be forwarded to a backing database service such as in the form of an appropriately configured API call to the backing database service. The backing database service may receive the non sensitive query and process the non sensitive query on a database the backing database services maintains on behalf of a customer for which the query was received . The backing database service may then generate a preliminary response and provide that generated preliminary response which as noted above may be over inclusive as it may include data that does not satisfy the sensitive query that was generated . Accordingly the process includes receiving the preliminary response from the backing database service. The preliminary response may be received for example as a response to the API call that was made to the backing database service.

Once the preliminary response was received from the backing database service the process may include obtaining an encrypted data key. Obtaining the encrypted data key may be performed in any suitable manner. For example the encrypted data key may be included with the preliminary response. And as another example the encrypted data key may be locally stored in another storage service which may be in the same or in a different zone as the zone in which the system performing the process is located. Once the encrypted data key has been obtained the process may include requesting decryption of the data key from a cryptography service such as described above. The decrypted data key may be therefore received from the cryptography service and the data key may be used to decrypt encrypted portions of the preliminary result that was received from the backing database service.

It should be noted that encryption and therefore decryption may be performed in various ways in accordance with the various embodiments. For example each entry in a database table that is encrypted may be encrypted separately. In this manner the data that is returned in the preliminary result is decryptable regardless of whether the preliminary result includes all the data that was encrypted. Further as noted a single data key may be used to decrypt all the data that is encrypted in the preliminary result. Accordingly depending on a cryptographic cypher that is used each entry in the database that is encrypted may be encrypted using a different initialization vector nonce . Numerous variations are considered as being within the scope of the present disclosure such as encrypting each entry with a different data key encrypting each column with a different data key and generally performing encryption in various ways.

Returning to once the data key has been used to decrypt the encrypted portions of the preliminary result the process may include executing the sensitive query on the decrypted preliminary result to obtain a query result. The query result may then be provided in response to the query that was received . In this manner various technical advantages are achieved. For example as noted above a service proxy which also may be referred to as a virtual database service may include limited infrastructure. A database service on the other hand may include much greater infrastructure in order to handle large amounts of data. The virtual database service may for example lack the infrastructure that would enable the virtual database service to handle the amounts of data that the backing database service handles. In this manner the vast infrastructure of the backing database service may be used to perform the initial processing of the non sensitive query in a zone where some of the data is encrypted for various reasons discussed above. The much more limited infrastructure of the virtual database service may be used to finish processing of the query. In this manner despite the presence of data considered sensitive the infrastructure of the database service is able to be utilized.

In addition while shows a process where a query is received to a service proxy and the service proxy generates two queries one for the backing service to execute and the other for the service proxy to execute the process may be adapted to operate in different ways. For instance in some embodiments the complete query may be forwarded to the backing service which may itself generate two queries and pass at least one to the service proxy with the preliminary result. As another example the backing service may process the complete query while ignoring any conditions involving subsets of data tagged as sensitive or ignoring particular conditions e.g. conditions required to be satisfied . The proxy may also process the whole query on the preliminary result. Other variations including adaptations for other types of databases may be used.

As noted above various embodiments of the present disclosure may utilize numerous zones numerous service proxies and numerous backing zones. In some instances a service proxy may selectively provide data to different backing zones. For example a storage service may have different advantages in different zones. A data storage service in one zone for example may be cheaper than the same or a similar data storage service in another zone. As another example a data storage service in one zone may be better for latency reasons than the same or similar data storage service in another zone. Despite the advantages of one zone over another as noted above various concerns may result in a requirement or preference that data be stored in one zone or another zone. Different jurisdictions may have different regulations regarding various types of data for instance. Thus in order to achieve some advantages and or generally comply with various regulations some data may be stored in one zone and other data may be stored in another zone in order to comply with various requirements and or preferences.

Accordingly a storage service proxy or proxy for another service may actively make decisions where to store data based at least in part on various factors. For example some customers may request through an account configuration or as a parameter in an API call that their data be stored in a particular zone. As another example some types of data may be stored for the same customer in one zone while other types of data may be stored in another zone due to varying regulatory requirements. As yet another example a customer may configure computing resources of a computing resource service provider so that the service proxy applies one or more DLP policies so that some data is sent to one zone and other data is sent to another zone. accordingly shows an illustrative example of an environment in which various embodiments that utilize selection from multiple zones may be practiced.

As illustrated in the environment includes customer premises a virtual zone and one or more backing zones . In this particular example illustrates n backing zones where n is a positive integer. It should be noted that while the virtual zone relative to the customer premises are illustrated as with variations such as those shown in are considered as being within the scope of the present disclosure. As illustrated in a customer submits requests and receives responses from a storage service proxy or other service proxy and a photography service . Each of the backing zones may include a backing service and an authentication service such as described above although such services are not illustrated in for the purpose of simplification. In an embodiment the customer submits requests to the storage service proxy which then may select and submit corresponding requests to one of the backing zones as appropriate. Appropriateness may be determined in accordance with DLP policy customer preferences account configuration API call parameters and the like.

Upon determining the backing zone for the customer data the process may include requesting a data key from a local cryptography service such as described above or generally from another suitable cryptography service such as described above. Accordingly a data key and encrypted data key may be received from the cryptography service to which the request for the data key was submitted. The data key may then be used to encrypt the customer data and a data object comprising the encrypted customer data and the encrypted data key may be generated . The data object may then be transmitted to a backing storage service in the determined backing zone. The unencrypted data key may then be destroyed such as described above.

It should be noted that variations of the process are considered as being within the scope of the present disclosure including variations of the various processes described above for transmitting data to a backing service. shows an illustrative example of a process for selectively encrypting data and providing the data to a backing service in accordance with an embodiment. In particular the process utilizes various data loss prevention techniques such as those described in U.S. Pat. No. 8 416 709 which is incorporated herein by reference. The process of may be performed by any suitable system such as by a service proxy such as described above. The traffic may include for example one or more data packets such as IP or transmission control protocol TCP packets handshake requests such as a portion of the three part TCP handshake or an SSL handshake or other appropriate data packets. The network traffic may be received from a customer such as described above or another entity associated with the customer such as described above. In some embodiments the traffic is received through an application programming interface e.g. web service interface of a system performing the process . The network traffic may be analyzed with respect to one or more DLP policy criteria. DLP policy criteria may include those discussed in U.S. Pat. No. 8 416 709 noted above. For example data in IP or TCP packets may be inspected for data of certain data types such as credit card numbers social security numbers and or any other types of data that may be considered sensitive or otherwise for which modification is desired.

A determination may be made whether the DLP s criteria are satisfied. If it is determined that the DLP criteria are satisfied the process may include encrypting the network traffic that was received and transmitting the network to the backing service. If however it is determined that the DLP criteria are not satisfied then the network traffic may be transmitted to the backing service without being encrypted.

As discussed above various variations are considered as being within the scope of the present disclosure including decrypting some but not all of the data when DLP criteria are satisfied. In addition additional actions may be taken in addition to or as an alternative to encryption of the data. Sample actions include but are not limited to snapshotting i.e. copying the network traffic that was received and persisting the snapshot in a data storage service such as the backing service or another data storage service performing packet tracing performing a quarantine of the network traffic that was received initiating enhanced logging of network traffic and or denial of the action. Generally any type of action configured to address DLP concerns may be used. In addition the actions that are taken when a DLP or other policy criteria are satisfied may be configurable by a customer. Generally data may be manipulated in accordance with customer specifications utilizing techniques such as those described in U.S. patent application Ser. No. 13 491 403 filed on Jun. 7 2012 entitled FLEXIBLY CONFIGURABLE DATA MODIFICATION SERVICES which is incorporated herein by reference.

In particular a customer may specify certain rules by which various types of data inbound and or outbound from customer devices or other devices may be modified upon which various components of the distributed computing system are utilized to implement the rules e.g. using packet mangling techniques. For example the customer may specify that data through a service proxy to specific external device types or locales must conform to a customer provided specification e.g. for regulatory compliance and or performance optimization upon which the distributed computing system determines the necessary alterations and data patterns or other markers to which they apply. Thereafter in the example given the implementation may include redirection of some or all of the network traffic between the customer and the external device in question to a component of the distributed computing system such as a backing service. Upon processing in the determined manner the redirected data may be relayed to the original destination. As will be contemplated a similar process may be utilized for inbound network traffic.

In another example the data alteration service may be effective to modify data transiting through the service proxy between two virtualized instances of the distributed computing system one of which is controlled by a customer requesting the service while the other is controlled by a different customer. A separate virtualized instance of the distributed computing system implemented in the service proxy may be invoked to implement the customer requested rules or in some embodiments the same instance from whence or to which the data desired to be modified may perform the actual modification e.g. in a quarantine or sandbox. It is contemplated that data transiting to or from any device or component controlled by a service requesting customer whether physical virtual aggregated or otherwise to a device not under control by the customer without regard to its nature may be subject to packet mangling by the service. The service may in some embodiments be granularly controllable based on a number of criteria including customer or external device type geographic location and the like.

An example implementation of such a data alteration service may include the generation of one or more policies that apply to some or all components involved in a given data transaction type. The policies in some embodiments are generated by the distributed computing system upon receipt of customer defined rules and may take into account data type connected device type customer characteristics network topology or any other characteristics relevant to the generation of an effective policy. Such policies when broadcasted to the relevant devices can ensure that all controlled devices or a desired subset thereof act to implement the associated customer defined rules in a unified predictable fashion. In embodiments where a customer controls a significant plurality of devices at varying levels of abstraction and or access such policies may also ensure that e.g. mission critical or strict rules take effect across all affected devices.

Further additional operations may be performed in connection with the process . For example the analysis of the network traffic may inform the performance of one or more other operations. In some embodiments for instance a cryptographic key may be determined based at least in part on the analysis. Some types of data may for example may require e.g. in accordance with one or more regulations and or preferences stronger encryption than other types of data. If the analysis finds one type of data the data may be encrypted using a key that is smaller than another type of data that could be determined by the analysis. A first type of data for instance may require encryption using a 128 bit key whereas another type of data may require encryption using a 256 bit key. The key accordingly may be determined e.g. generated or obtained from data storage based on the analysis.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. Servers as used herein may be implemented in various ways such as hardware devices or virtual computer systems. In some contexts servers may refer to a programming module being executed on a computer system. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling some even a majority of the data access and business logic for an application. The application server may provide access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the web server in the form of HyperText Markup Language HTML Extensible Markup Language XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the web server. It should be understood that the web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein. Further operations described herein as being performed by a single device may unless otherwise clear from context be performed collectively by multiple devices which may form a distributed system.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect of the present disclosure. For example the data store illustrated may include mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user through a device operated by the user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser. It should be noted however that embodiments of the present disclosure are not necessarily limited to the context of web pages but may be more generally applicable to processing requests in general where the requests are not necessarily requests for content.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop laptop or tablet computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Various embodiments of the present disclosure utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as Transmission Control Protocol Internet Protocol TCP IP protocols operating in various layers of the Open System Interconnection OSI model File Transfer Protocol FTP Universal Plug and Play UpnP Network File System NFS Common Internet File System CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a web server the web server can run any of a variety of server or mid tier applications including Hypertext Transfer Protocol HTTP servers FTP servers Common Gateway Interface CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU or processor at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disc Read Only Memory CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected when unmodified and referring to physical connections is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. The use of the term set e.g. a set of items or subset unless otherwise noted or contradicted by context is to be construed as a nonempty collection comprising one or more members. Further unless otherwise noted or contradicted by context the term subset of a corresponding set does not necessarily denote a proper subset of the corresponding set but the subset and the corresponding set may be equal.

Conjunctive language such as phrases of the form at least one of A B and C or at least one of A B and C unless specifically stated otherwise or otherwise clearly contradicted by context is otherwise understood with the context as used in general to present that an item term etc. may be either A or B or C or any nonempty subset of the set of A and B and C. For instance in the illustrative example of a set having three members used in the above conjunctive phrase at least one of A B and C and at least one of A B and C refers to any of the following sets A B C A B A C B C A B C. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of A at least one of B and at least one of C to each be present.

Operations of processes described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. Processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments of the present disclosure to be practiced otherwise than as specifically described herein. Accordingly the scope of the present disclosure includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the scope of the present disclosure unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

