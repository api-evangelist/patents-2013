---

title: Systems and methods involving virtual machine host isolation over a network via a federated downstream cluster
abstract: Systems and methods for virtual machine host isolation are disclosed. According to one implementation, an illustrative system may include a first compute node configured to be operatively coupled to a second compute node via a first application server, and to a third compute node via a second application server. In operation, the first compute node may be configured to receive an instruction from the second compute node via the first server to define a virtual machine, and send an instruction to the third compute node via the second server to define the virtual machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09152441&OS=09152441&RS=09152441
owner: Virtustream Canada Holdings, Inc.
number: 09152441
owner_city: Bethesda
owner_country: US
publication_date: 20130220
---
This application is based on and derives the benefit of the filing date of U.S. Provisional Patent Application No. 61 600 888 filed Feb. 20 2012. The entire content of this application is herein incorporated by reference in its entirety.

The present disclosure is directed generally to systems and methods involving virtual machine host isolation.

Reference will now be made in detail to the inventions herein examples of which are illustrated in the accompanying drawings. The implementations set forth in the following description do not represent all implementations consistent with the claimed inventions. Instead they are merely some examples consistent with certain aspects related to the present innovations. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

According to some aspects of the present innovations implementations may relate to a system for isolating virtual machine hosts over a network using a federated downstream cluster. In one illustrative embodiment a system may include a first compute node configured to be operatively coupled to 1 a second compute node via a first application server such as an extensible messaging and presence protocol XMPP server and 2 a third compute node via a second application server such as another XMPP server. Here for example the first compute node may be configured to be included within a federated cluster that includes the third compute node. In operation the first compute node may be configured to receive an instruction from the second compute node via the first server to define a virtual machine. Further the first compute node may be configured to send an instruction to the third compute node via the second server to define the virtual machine. In some embodiments the first XMPP server can be the same as the second XMPP server.

With regard to the discussions below a system using federated downstream clusters to isolate virtual machine hosts can be used to geographically and or logically isolate virtual machine hosts. depicts a block diagram of an illustrative system that may be involved with isolating virtual machine hosts system according to an embodiment. System includes a federated cluster including a compute node and a compute node an application server cluster such as a jabber cluster a compute node and a network . In some implementations compute node of federated cluster includes a downstream manager compute node of federated cluster includes a downstream agent component and compute node includes an upstream manager component .

In some implementations detailed below the application server cluster is described as a jabber cluster that includes one or more extensible messaging and presence protocol XMPP servers logically connected and configured to support XMPP communication between upstream manager component and downstream manager component and between downstream manager component and downstream agent component . However various other processing components and messaging communication protocols other than or in conjunction with XMPP may be utilized to process the command and control for the cluster s including but not limited to AMQP ZeroMQ and HTTP among others. Here for example processing and communication may also take place via hybrid protocols such as combination s of HTTP and XMPP. Thus while some discussions of may describe system as including a jabber cluster in some embodiments system may comprise other application server s and or protocols. For instance in certain embodiments a variety of processing components and or protocols may be utilized provided that features such as topology isolation and message content set forth in the detailed implementations shown and described herein are achieved. Here for example such application servers may utilize or include messaging or communication protocol s that require low processing and memory resources are standardized are customizable are point to point and or are configured to send and receive state and or provisioning messages.

Additionally while may describe system as including a single cluster or jabber cluster in other embodiments system can include more than one cluster or jabber cluster. In such plural jabber cluster embodiments for example a first jabber cluster can include one or more servers logically connected and configured to support communication between the upstream manager and the downstream manager and a second jabber cluster can include one or more servers logically connected and configured to support communication between the downstream manager and the downstream agent . In this manner communication between downstream manager and downstream agent may be secured separately from communication between upstream manager and downstream manager and may continue in the event of a failure of any portion of the first jabber cluster.

According to implementations herein upstream manager component downstream manager component and downstream agent component can be a software and or hardware module s located at compute nodes such as for example at compute nodes and or . A compute node can be any type of device configured to send data to one or more devices within system and to devices outside of system via network and or receive data from devices included in network and or from devices outside of system via network . In some embodiments the compute node can be configured to function as for example virtual machine host a server device e.g. a web server device a network management device a data repository and or the like. The compute node can be configured to define and send provision and or action instructions and or add remove lock revise and or edit a virtual machine.

In some implementations the compute nodes may include one or more memory and or processor devices or components. The memory can be for example a random access memory RAM a memory buffer a hard drive a database an erasable programmable read only memory EPROM an electrically erasable read only memory EEPROM a read only memory ROM and or so forth. In some embodiments the memory of the compute node includes data used to define send and receive instructions messages poll requests and results etc. In some embodiments the memory stores instructions to cause the processor to execute modules processes and or functions associated with such a system .

The processor s of the compute nodes such as for example compute nodes and or can be any suitable processing device configured to run and or execute within system . In some embodiments the processor can be a general purpose processor a Field Programmable Gate Array FPGA an Application Specific Integrated Circuit ASIC a Digital Signal Processor DSP and or the like. The processor can be configured to execute modules functions and or processes to operate system .

According to some implementations the upstream manager component may be a software and or hardware module s located at compute node and may be configured to logically connect federated cluster to network via the application server cluster such as a jabber cluster. Upstream manager component may also be configured to receive hypertext transport protocol HTTP instructions from a device of a user for example a customer or network administrator via network . In some embodiments the upstream manager component may be configured to receive instructions via network in other protocols for example representative state transfer REST . Additionally upstream manager component may be configured to define an XMPP instruction s to downstream manager via the application server cluster . In some embodiments an XMPP instruction can include a provision instruction for defining a virtual machine.

In certain implementations the upstream manager component may be configured to receive provision results from downstream manager may store those results and may send status updates and or results to the user etc. via network . Further the upstream manager component may be configured to logically interact with federated cluster as a single compute node. Here for example the upstream manager component may be configured to treat a first federated cluster including a single downstream manager and a one or more downstream agents as a single compute node having a first amount of computing capacity and may treat a second federated cluster including a single downstream manager and ten downstream agents as a single compute node have a second amount of computing capacity distinct from the other compute node. In this manner upstream manager component need not store state and other information for each individual downstream agent but instead may only store state and other information for each federated cluster. Upstream manager component may also be configured to include customer data such as available capacity virtual machine quotas and the like. In this manner upstream manager component may accept or decline a request to provision a virtual machine and or can determine provisioning option based on that customer information. With regard to an associated compute node compute node may include one or more repositories A and or one or more databases A in addition to the memory A to store system and or customer data provisioning rules etc.

As set forth herein federated cluster may be a cluster of compute nodes or multiple cooperating compute nodes that may not be centrally managed. In some implementations federating the cluster of compute nodes can include designating one of the compute nodes as the location for a downstream manager and the remaining compute nodes as the location for downstream agents. The compute node designated as the location for the downstream manager can operate an agent emulation module to couple the federated cluster to an upstream manager via an jabber cluster and can present the federated cluster to the upstream manager as a single downstream agent including the available capacity of the whole cluster of compute nodes.

In the illustrative system shown in federated cluster includes downstream manager component and downstream agent component . While shown in as including a single downstream agent component in some embodiments federated cluster can include any number of downstream agent components . Federated cluster may be configured to communicate with the upstream manager via application sever cluster and may be configured to logically appear to upstream manager as a single compute node. Federated cluster may further include or operate with local storage locations B C and or remote storage locations A E for virtual machine one or more local or remote databases A D E and or one or more local or remote repositories A D E where such local databases and or repositories may also or instead be located within specific compute nodes . In embodiments here for example such one or more local repositories D can be synced to an upstream repository A.

In some implementations downstream manager component of federated cluster may be a software and or hardware module s located at compute node and may be configured to be logically connected to the compute node and upstream manager component via the application server cluster and logically connected to downstream agent component via the application server cluster . In this manner all traffic between downstream manager component and upstream manager component and all traffic between downstream manager component and downstream agent component may be sent and received via the application server cluster . Downstream manager component can be configured to receive an instruction such as an XMPP instruction s from upstream manager component . Downstream manager component may also be configured to 1 define a provision request associated with downstream agent component and 2 send that request to downstream agent component via the application server cluster . In some embodiments the provision request can include a request to instantiate a virtual machine. In such embodiments the provision request refers to requests to both instantiate and provision a virtual machine. Downstream manager component may be configured to receive an indication from downstream agent indicating whether the provisioning was successful and may also be configured to send a message indicating the provision result to the upstream manager via jabber cluster .

Downstream agent component of federated cluster may be a software and or hardware module s located at compute node and may be configured to be logically connected to compute node and downstream manager component via the application server cluster . In this manner all traffic between downstream manager component and downstream agent component may be sent and received via the application server cluster . Downstream agent component may be configured to receive a provision request from downstream manager component via the application server cluster . In some embodiments the provision request may include a request to instantiate a virtual machine. In such embodiments the provision request refers to requests to both instantiate and provision a virtual machine. Downstream agent component may be configured to send an indication to downstream manager component indicating whether the provisioning was successful. Downstream agent component may be configured to define a virtual machine in response to an instruction from downstream manager component . In some embodiment defining a virtual machine may include unarchiving files templates etc.

According to various implementations herein network may be any type of network e.g. a local area network LAN a wide area network WAN a virtual network a telecommunications network implemented as a wired network and or wireless network. A user may communicate with system via network . As such in some embodiments a user devices may send data to and or receive data from the compute node using one or more communication modes e.g. email text messages instant messages optical pattern transmissions using a mobile device application via a website using a personal computer PC application an interactive advertisement an ITV TCP IP transmissions interactive voice response e.g. via touch tones and or voice recognition etc. that may be transmitted to the compute node using a common network.

Consistent with present implementations system may be configured such that state information of federated cluster is sent using for example an XMPP message to upstream manager component . In this manner upstream manager component may have access to much of the computing capacity of the federated cluster while only updating state information when a state change within federated cluster occurs. This allows federated cluster to operate with less administrative overhead making system and federated cluster more scalable. Furthermore because the application server cluster sees federated cluster as a single downstream agent any compute node and or associated downstream agent of federated cluster may act as a service endpoint for example a location to instantiate a virtual machine. In this manner if any portion of federated cluster for example a portion of compute node and or downstream manager becomes unavailable upstream manager component may send a provision request to another location may reboot an offline virtual machine in another location and or may migrate a virtual machine to another location.

System may be configured such that downstream manager component receives commands and requests from upstream manager component but need not be controlled by upstream manager component . In such embodiments upstream manager component and associated users may have access to federated cluster s computing capacity without having complete control of federated cluster s compute capacity. In this manner federated cluster via downstream manager component may be configured to limit via quotas permissions etc. the computing capacity available to upstream manager component . Indeed here isolating control of the federated cluster from upstream manager component may prevent upstream manager component or a user of upstream manager component from monopolizing the compute capacity of federated cluster .

In implementations herein system may be configured such that compute node may be operatively coupled to federated cluster via an application server cluster using lower quality links for example wireless area network WAN link or internet links. Similarly system may be configured such that compute node and compute node within federated cluster may be operatively coupled to federated cluster via application server cluster using lower quality links. System may be configured such that if a link through the cluster fails either between upstream manager component and downstream manager component or between downstream manager component and downstream agent component system may failover to a new link. In some embodiments a waiting period may pass before a new link is initiated for example to prevent premature failover. By way of example upstream manager component may detect that a communication link to downstream manager has failed. Upstream manager component may wait a predetermined amount of time and may then establish a new link to downstream manager component through jabber cluster . This allows system to have improved reliability and fault recovery.

The illustrative method of may begin with the steps of namely receiving at a first compute node an instruction from the second compute node e.g. via a first XMPP server to define a virtual machine at . Further an instruction may be sent from the first compute node to a third compute node via the second XMPP server to define the virtual machine at . Additionally the method may comprise at receiving an indication from the downstream agent component indicating whether the provisioning was successful and at sending a message indicating the provision result to the upstream manager component.

As used in this specification the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a downstream agent is intended to mean a single downstream agent or a combination of downstream agents.

Some embodiments described herein relate to a computer storage product with a computer readable medium also may be referred to as a processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The media and computer code also may be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs and Read Only Memory ROM and Random Access Memory RAM devices.

Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. For example embodiments may be implemented using Java C or other programming languages e.g. object oriented programming languages and development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While various embodiments have been described above it should be understood that they have been presented by way of example only not limitation and various changes in form and details may be made. Any portion of the apparatus and or methods described herein may be combined in any combination except mutually exclusive combinations. The embodiments described herein may include various combinations and or sub combinations of the functions components and or features of the different embodiments described. For example while depicts a single federated cluster having a single downstream agent in some embodiments the system may include two or more federated clusters each having one or more downstream agents .

