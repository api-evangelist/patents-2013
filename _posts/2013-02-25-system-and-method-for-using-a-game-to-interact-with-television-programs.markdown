---

title: System and method for using a game to interact with television programs
abstract: A system, computer-readable storage medium including instructions, and a computer-implemented method for obtaining votes for participants in a television program are described, in which code for a game is transmitted to a computer system, where the game includes an in-game voting module that allows a player of the game to cast votes for participants in a television program. At least one vote for at least one participant in the television program is received from the in-game voting module. A database including vote counts for the participants in the television program is updated based on the at least one vote for the at least one participant.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08715081&OS=08715081&RS=08715081
owner: Zynga Inc.
number: 08715081
owner_city: San Francisco
owner_country: US
publication_date: 20130225
---
This application is a continuation of and claims the benefit of priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 13 070 757 entitled SYSTEM AND METHOD FOR USING A GAME TO INTERACT WITH TELEVISION PROGRAMS filed on Mar. 24 2011 which is hereby incorporated by reference herein in its entirety.

The disclosed embodiments relate generally to a system and method for using a game to interact with television programs.

Television programs that include viewer participation typically allow viewers to vote for participants in a television program. These television programs allow viewers to vote either by dialing particular phone numbers and or sending short messaging service SMS text messages to particular SMS short codes or phone numbers. The level of interactivity that the viewers have with the television program is limited.

The description that follows includes illustrative systems methods techniques instruction sequences and computing machine program products that embody illustrative embodiments. In the following description for purposes of explanation numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident however to those skilled in the art that embodiments of the inventive subject matter may be practiced without these specific details. In general well known instruction instances protocols structures and techniques have not been shown in detail.

The embodiments described herein provide techniques for using a game to interact with television TV programs.

A computer system a game server a TV network server and a third party game server are coupled to network and may communicate with each other via network .

The game server may be a server for a game publisher. Similarly the third party game server may be a server for a third party game publisher. The network system may include a game server for each of a plurality of game publishers. Similarly the network system may include a third party game server for each of a plurality of third party game publishers.

The TV network server may provide TV programs to a television via TV transmission medium . The TV transmission medium may include radio frequency RF signals e.g. satellite signals over the air signals etc. a data network and a cable network. The TV network server may also provide TV programs to the computer system the game server and the third party game server via network e.g. via a website associated with the TV network server .

The computer system may include a laptop computer system a desktop computer system a mobile phone a smart phone a personal digital assistant PDA a gaming console and a set top box. A player may use the computer system to play a game hosted by the game server and or the third party game server . In some embodiments the game allows the player to interact with TV programs via the TV network server . These embodiments are described in more detail below with respect to .

Note that although shows one instance for each of the computer system the game server the TV network server and the third party game server multiple computer systems game servers TV network servers and third party game servers may be present in the network system . For example each of the game server the TV network server and the third party game server may include a plurality of distributed servers. The plurality of distributed servers may provide load balancing and or may provide low latency points of access to nearby computer systems. The distributed servers may be located within a single location e.g. a data center a building etc. or may be geographically distributed across multiple locations e.g. data centers at various geographical locations etc. .

Also note that although the embodiments described herein refer to the computer system the game server the TV network server and the third party game server the embodiments may be applied to multiple computer systems game servers TV network servers and third party game servers.

As discussed above the game that is hosted on the game server may be used to interact with TV programs via the TV network server . The interaction between the computer system the game server and the network server is described with respect to

While the player plays the game the computer system and the game server exchange game data . The game data may include user interface elements for the game a state of the game game mechanics messages being sent to other players of the game e.g. via chat etc. vote data endorsement data in game task data and in game transactions e.g. purchases of assets interactions between players of the game completion of tasks etc. . Furthermore the player may use the in game voting module to obtain content from the TV network server via the game server . The content may include information about a TV program information about an episode of a TV program information about participants of a TV program e.g. actors contestants etc. of a TV program and or multimedia content related to the TV program e.g. text images video and or audio .

The game server may send data to the TV network server . The data may include vote data endorsement data in game task data and demographic data for at least a subset of the players. The data may be aggregated so that the vote data the endorsement data the in game task data and the demographic data are not associated with particular users. Alternatively or additionally the associations between the vote data the endorsement data the in game task data and the demographic data may be included in the data .

The data may be sent to the TV network server after a predetermined condition is satisfied. For example the predetermined condition may be satisfied when the data exceeds a predetermined size a predetermined time interval has elapsed since the last time the data was sent to the TV network server a current date and or time is greater than or equal to a predetermined date and or time and a request is received from the TV network server to obtain the data .

While the player plays the game the computer system and the third party game server exchange game data . The game data is similar to the game data described above. The player may use the in game voting module to obtain content from the TV network server via the third party game server which obtains the content via the game server . The third party game server may send data to the TV network server via the game server .

As discussed above the level of interactivity that the viewers of TV programs have with the television program is limited. For example for TV competition programs viewers are given the opportunity to vote for participants e.g. contestants in the TV competition program. Viewers may cast their votes by using a phone to dial a particular phone number using a mobile phone to send a SMS message to a particular SMS short code or to a particular phone number or using a website associated with the TV competition program. These techniques for viewer participation provide a basic level of interactivity. The embodiments described herein provide viewers of TV programs with an enhanced level of interactivity.

In some embodiments games are used to enhance the level of interactivity that viewers of TV programs have with the TV programs. These online games may include network based social games e.g. games played with friends on a social networking website multiplayer real time strategy games multiplayer role playing games and the like.

In some embodiments players of a game cast votes for participants of a TV program from within the game. is a flowchart of a method for obtaining votes for participants in a TV program from players of a game according to some embodiments. The game module transmits code for a game e.g. the game code the game code to the computer system . In some embodiments the game e.g. the game code the game code includes the in game voting module that allows a player of the game to cast votes for participants in a TV program. In some embodiments the game is a network based social game. In some embodiments the TV program is a TV competition program and the participants are contestants in the TV competition program.

In some embodiments the in game voting module is accessible to the player via a game element in the game. Attention is now directed to which is screenshot of an exemplary game interface according to some embodiments. The game interface includes a playable area that includes at least one game element. The playable area is an area of the game interface in which the player of the game interacts with game elements of the game e.g. buildings non player characters other human players crops etc. . For example the player of the game may place buildings crops and or other objects in the playable area . Similarly the player of the game may interact with non player characters and or other human players in the playable area . As illustrated in the playable area includes a building and a non player character . The game interface may include other types of game elements. For example the game interface may include a building in a playable area for a non player character that the player of the game may access via the playable area . The playable area for a non player character may include a city for the non player character an inside of a building for the non player character a farm for the non player character and the like. The game interface may also include game controls e.g. game control that allow the player to issue commands used to play the game. For example the game controls may include game controls to purchase game elements to place game elements to visit playable areas of friends or non player characters and the like. The game interface may also include user interface elements that allow the player to modify the presentation of the game interface . For example the game interface may include tabs e.g. a tab a voting tab etc. buttons e.g. a vote button and the like. Note that the game elements the user interface elements and the game controls illustrated in are exemplary and that other game elements user interface elements and game controls may be present in the playable area .

In some embodiments the in game voting module is accessible to the player via a game element in the game. For example the player may use the building the non player character or a building in a playable area for a non player character to access the in game voting module .

In some embodiments the in game voting module is accessible to the player via a user interface element in the game. For example the player may use the voting tab a window in the game interface or the vote button to access the in game voting module .

Returning to the voting module receives at least one vote for at least one participant in the TV program from the in game voting module . In some embodiments the at least one vote for the at least one participant includes a vote cast by the player for a participant. For example the player of the game may use the in game voting module to cast a vote for a participant in the TV program. In some embodiments the at least one vote for the at least one participant includes a plurality of votes for a participant cast by the player. For example the player of the game may use the in game voting module to cast multiple votes for one participant in the TV program. In some embodiments the at least one vote for the at least one participant includes a plurality of votes for a plurality of participants cast by the player. For example the player of the game may use the in game voting module to cast multiple votes for multiple participants in the TV program.

In some embodiments the player of the game casts the at least one vote for the at least one participant in response to a request by a second player of the game to vote for the at least one participant. For example the second player may be a friend of the player and second player may have asked the player to cast votes for a particular participant of the TV program.

In some embodiments the at least one vote for the at least one participant includes one or more of a vote for the at least one participant and a vote against the at least one participant. For example some TV competition programs select participants to stay in the competition based on the number of votes for the participants that are received from viewers. Alternatively some TV competition programs select participants to leave the competition based on the number of votes against the participants that are received from viewers.

In some embodiments prior to receiving the at least one vote for the at least one participant the voting module allocates votes to a player of the game. Attention is now directed to which is a flowchart of a method for allocating votes to a player of a game according to some embodiments. The voting module receives a request to vote for participants in the television program from the in game voting module .

The voting module allocates the at least one vote to the player of the game. For example the voting module may create an entry in the data structure for storing votes allocated to players of a game illustrated in and described with respect to . illustrate several methods for allocating the at least one vote to the player of the game according to some embodiments.

Referring to the voting module obtains game data for the player of the game. The voting module then allocates the at least one vote to the player of the game based on in game tasks performed by the player wherein the performed in game tasks are determined from the game data e.g. the game data the game data . For example the voting module may allocate votes based on the number and types of in game tasks performed by the player.

Referring to the voting module obtains a voting history for the player of the game with respect to the television program. The voting module then allocates the at least one vote to the player of the game based on the voting history for the player of the game. For example the voting module may allocate a first predetermined number of votes to the player if the player voted for a participant that received the highest number of votes in a prior voting session. Similarly the voting module may allocate a second predetermined number of votes to the player if the player voted for a participant that did not receive the highest number of votes in a prior voting session where the second predetermined number of votes is less than the first predetermined number of votes.

Referring to the voting module determines that the player of the game purchased votes using currency. In some embodiments the currency is real world currency e.g. dollars . In some embodiments the currency is in game currency e.g. proprietary currency credits electronic or virtual cash . The voting module then allocates the at least one vote to the player of the game using at least a portion of the purchased votes. For example if a single vote can be purchased for 1 and the player paid 10 for votes the voting module allocates 10 votes to the player.

Referring to the voting module determines that other players of the game have donated votes to the player of the game. The voting module then allocates the at least one vote to the player of the game using at least a portion of the donated votes. For example a friend of the player may donate 10 votes to the player. Accordingly the voting module allocates the 10 votes to the player.

Returning to the voting module notifies the in game voting module of the at least one vote allocated to the player of the game. The in game voting module may determine a type of voting session for which the player desires to cast votes and based on the determination the in game voting module may allow the player to cast a number of votes up to the number of votes allocated to the player.

Returning to the voting module updates a database e.g. the database including vote counts for the participants in the TV program based on the at least one vote for the at least one participant. For example if the player of the game voted for a participant of the TV program the voting module updates the database to reflect the fact that the player of the game voted for the participant of the TV program. The voting module may store the votes cast by the player in the data structure for storing votes illustrated in and described with respect to .

In some embodiments the voting module transmits the at least one vote to a computer system for the television program e.g. the TV network server . Attention is now directed to which is a flowchart of a method for providing votes to a computer system for a television program according to some embodiments. The voting module aggregates votes for participants of the television program from a plurality of players of the game and transmits the aggregated votes to a computer system for the television program e.g. the TV network server .

The voting module may provide additional data to the computer system for the television program. In some embodiments the voting module transmits demographic data of players that cast votes for the participants to the computer system for the television program. The demographic data may be anonymized so that personally identifiable information e.g. name address is not sent to the computer system for the television program. Alternatively or additionally the demographic data may include at least some personally identifiable information of players e.g. email addresses screen names for identification and or verification purposes.

In some embodiments the voting module transmits voting trends to the computer system for the television program. For example the voting module may calculate voting trends based on player locations based on time of day based on a day of the week based on the participant and the like. Note that the voting trends may be determined by the data analysis module .

In some embodiments the voting module generates heat maps of votes. is a flowchart of a method for providing a heat map of votes according to some embodiments. The voting module generates at least one heat map based on the aggregated votes and transmits at least one heat map to the computer system for the television program. Note that the data analysis module may analyze and correlate the vote data so that the voting module may generate the at least one heat map. In some embodiments a respective heat map includes a heat map for a predetermined geographical region or a heat map for a predetermined demographic of players of the game e.g. age sex occupation .

Games often provide mechanisms for players to view statistics about each other. These mechanisms may foster competition between players and encourage the players to spend more time playing the game. For example a game may list achievements completed by friends of the player. These players can then track their progress relative to each other. To encourage players of a game to cast votes through the in game voting module some embodiments provide vote data for friends of the player to the player via the in game voting module . is a flowchart of a method for providing vote data for friends of a player of a game according to some embodiments. The voting module receives a request from the in game voting module to obtain vote data for in game friends of the player. In some embodiments the vote data includes information about votes cast by the in game friends of the player.

The voting module obtains the vote data for the in game friends of the player. For example the voting module may obtain a list of in game friends for the player and query the data structure for storing votes cast by a player of a game illustrated in and described with respect to to obtain vote data for the in game friends of the player.

The voting module transmits the vote data to the in game voting module . The in game voting may then present the vote data for the friends of the player to the player of the game.

In some embodiments vote counts for voting sessions are provided to players of the game. is a flowchart of a method for providing updated vote counts according to some embodiments. The voting module receives a request from the in game voting module to obtain updated vote counts for participants of the TV program. The voting module obtains the updated vote counts for the participants of the TV program and transmits the updated vote counts for the participants of the TV program to the in game voting module .

In some embodiments the in game voting module provides the player of the game with content for a TV program. is a flowchart of a method for providing content for a TV program according to some embodiments. The voting module receives a request from the in game voting module to obtain content related to the TV program. The voting module obtains the content related to the TV program. For example the voting module may obtain the content related to the TV program from the TV network server and or from the data structures illustrated in and . In some embodiments the content related to the TV program includes biographies of the participants of the TV program and multimedia items for the television program e.g. text images videos audio . The voting module then transmits the content for the TV program to the in game voting module .

In some embodiments the in game voting module provides the player of the game with at least one leader board. is a flowchart of a method for providing a leader board for a television program according to some embodiments. The voting module receives a request from the in game voting module to obtain at least one leader board for the TV program where the at least one leader board for the TV program includes vote statistics for players of the game with respect to the TV program. In some embodiments the at least one leader board includes at least one of a leader board with respect to all players of the game a leader board with respect to in game friends of the player of the game and a leader board with respect to a predetermined demographic of players of the game.

The voting module obtains historical vote data for players of the game corresponding to the at least one leader board. For example the voting module may obtain the historical vote data from the data structure for storing votes illustrated in and described with respect to .

The voting module transmits the at least one leader board to the in game voting module . The in game voting module may then present the at least one leader board to the player of the game.

In some cases a player of the game may cast votes for participants of the TV program outside of the game itself. Thus in some embodiments in game rewards are provided to players of a game for voting for participants of a TV program. For example in game rewards may include assets e.g. in game currency resources buildings etc. and experience points used to increase the level of the player of the game. is a flowchart of a method for rewarding players of a game for voting for participants of a TV program according to some embodiments. The voting module transmits a reward code to a computer system for a television program e.g. the TV network server . In some embodiments the reward code to be presented by the computer system for a TV program to a player of a game is to reward the player for casting a vote for a participant in the TV program.

The voting module receives a request to redeem a reward corresponding to the reward code from a player of the game via an instance of a game on a computer system for the player. The player of the game may enter the reward code via a user interface element of the game interface that is generated by the in game voting module . For example the user interface element may include an asset in the game e.g. a building a non player character etc. and or a sponsored dialog box e.g. a pop up window sponsored by a product manufacturer etc. .

The voting module provides the in game reward to the player of the game. The voting module may record the redemption of the reward code in the data structure for storing data for a player that has redeemed a reward code illustrated in and described with respect to .

In some embodiments prior to transmitting the reward code to the computer system for the TV program the voting module receives a request from the computer system for the television program e.g. the TV network server to obtain the reward code. In response to the request the voting module generates the reward code. The reward code may be stored in the data structure for storing rewards illustrated in and described with respect to .

In some embodiments tasks for participants of a TV program are assigned based on in game tasks completed by players of a game. is a flowchart of a method for assigning tasks to participants of a television program according to some embodiments. The voting module transmits a plurality of in game tasks to players of a game. The in game tasks may be stored in the data structure for storing in game tasks illustrated in and described with respect to . In some embodiments each player of the game plays an instance of the game on a computer system e.g. the computer system . In some embodiments each in game task corresponds to a task performable by participants in a television program.

The voting module selects at least one in game task in the plurality of game tasks based on a number of players of the game that completed each in game task. The voting module may determine the number of players of the game that completed each in game task by analyzing data stored in the data structure for storing data for in game tasks completed by players of the game illustrated in and described with respect to .

The voting module assigns at least one program task corresponding to the at least one game task to participants of the TV program. The voting module may obtain the at least one program task from the data structure for storing in game tasks illustrated in and described with respect to . In some embodiments the at least one program task is to be performed by the participants while performing on the TV program.

In some embodiments the voting module provides statistics for the number of players of the game that have completed in game tasks. is a flowchart of a method for providing statistics for players who completed in game tasks according to some embodiments. The voting module receives a request to obtain statistics for the number of players of the game that have completed each in game task from an instance of the game on a computer system for a player e.g. the computer system . The voting module compiles the statistics for the number of players of the game that have completed each in game task. The voting module transmits the statistics for the number of players of the game that have completed each in game task to the instance of the game on a computer system for the player.

In some embodiments participants of the TV program are given rewards for receiving endorsements from players of the game. is a flowchart of a method for obtaining endorsements for participants of a television program according to some embodiments. The voting module transmits requests for endorsements of participants of a television program to players of a game. In some embodiments each player of the game plays an instance of the game on a computer system e.g. the computer system . A participant may initiate the requests for endorsements via the voting module . Note that the participants of the TV program may submit requests for endorsements via the game server .

The voting module receives endorsements for the participants from the players of the game via instances of the game on computer systems for the players. For example the players of the game may use the in game voting module to submit endorsements for participants of the TV program.

The voting module selects at least one participant based on a number of endorsements received from the players. In some embodiments the voting module selects a participant that received the most endorsements from the players. In some embodiments the voting module selects participants that received endorsements from at least a predetermined number of players.

The voting module presents a reward to the at least one participant where the reward is usable by the at least one participant while performing in the TV program. In some embodiments the reward includes additional cash to be used in the television program. In some embodiments the reward includes additional ingredients for a cooking recipe to be used in the television program. In some embodiments the reward includes an additional song to be performed in the television program. In some embodiments the reward includes additional time to complete a task in the television program. In some embodiments the reward includes a bonus task in the television program. In some embodiments the reward includes assistance from a non participant of the television program.

In some embodiments a player of a game is selected to assist a participant of a TV program. In some embodiments the voting module provides in game tasks for a player of a game to perform in order to assist the participant of the TV program. is a flowchart of a method for providing an in game task for a player of a game to perform according to some embodiments. The voting module selects at least one player of the game to assist the at least one participant during the TV program. The voting module assigns at least one in game task to the at least one player of the game to perform in the game. The voting module determines that the at least one task has been completed by the at least one player of the game. The voting module notifies a computer system of the TV program e.g. the TV network server that the at least one player of the game has completed the at least one in game task.

The machine is capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine. Further while only a single machine is illustrated the term machine shall also be taken to include any collection of machines that individually or jointly execute a set or multiple sets of instructions to perform any one or more of the methodologies discussed herein.

The example of the computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both and memory which communicate with each other via bus . Memory includes volatile memory devices e.g. DRAM SRAM DDR RAM or other volatile solid state memory devices non volatile memory devices e.g. magnetic disk memory devices optical disk memory devices flash memory devices tape drives or other non volatile solid state memory devices or a combination thereof. Memory may optionally include one or more storage devices remotely located from the computer system . The computer system may further include a video display unit e.g. a plasma display a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes input devices e.g. keyboard mouse trackball touchscreen display output devices e.g. speakers and a network interface device . The aforementioned components of the computer system may be located within a single housing or case e.g. as depicted by the dashed lines in . Alternatively a subset of the components may be located outside of the housing. For example the video display unit the input devices and the output devices may exist outside of the housing but be coupled to the bus via external ports or connectors accessible on the outside of the housing.

Memory includes a machine readable medium on which is stored one or more sets of data structures and instructions e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The one or more sets of data structures may store data. Note that a machine readable medium refers to a storage medium that is readable by a machine e.g. a computer readable storage medium . The data structures and instructions may also reside completely or at least partially within memory and or within the processor during execution thereof by computer system with memory and processor also constituting machine readable tangible media.

The data structures and instructions may further be transmitted or received over network via network interface device utilizing any one of a number of well known transfer protocols e.g. HyperText Transfer Protocol HTTP .

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code and or instructions embodied on a machine readable medium or in a transmission signal or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. the computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In various embodiments a hardware module may be implemented mechanically or electronically. For example a hardware module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware module may also comprise programmable logic or circuitry e.g. as encompassed within a processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where the hardware modules comprise a processor configured using software the processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Modules can provide information to and receive information from other modules. For example the described modules may be regarded as being communicatively coupled. Where multiples of such hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the modules. In embodiments in which multiple modules are configured or instantiated at different times communications between such modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple modules have access. For example one module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further module may then at a later time access the memory device to retrieve and process the stored output. Modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software code and or instructions stored in a machine readable medium or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented or computer implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented or computer implemented modules.

Moreover the methods described herein may be at least partially processor implemented or computer implemented and or processor executable or computer executable . For example at least some of the operations of a method may be performed by one or more processors or processor implemented or computer implemented modules. Similarly at least some of the operations of a method may be governed by instructions that are stored in a computer readable storage medium and executed by one or more processors or processor implemented or computer implemented modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

While the embodiment s is are described with reference to various implementations and exploitations it will be understood that these embodiments are illustrative and that the scope of the embodiment s is not limited to them. In general techniques for the embodiments described herein may be implemented with facilities consistent with any hardware system or hardware systems defined herein. Many variations modifications additions and improvements are possible.

Plural instances may be provided for components operations or structures described herein as a single instance. Finally boundaries between various components operations and data stores are somewhat arbitrary and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the embodiment s . In general structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements fall within the scope of the embodiment s .

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the embodiments to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles and their practical applications to thereby enable others skilled in the art to best utilize the embodiments and various embodiments with various modifications as are suited to the particular use contemplated.

