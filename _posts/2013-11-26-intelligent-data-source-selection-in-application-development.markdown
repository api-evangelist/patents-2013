---

title: Intelligent data source selection in application development
abstract: A method, system, and computer program product for amorphous data preparation for intelligent data source selection in application development are provided in the illustrative embodiments. A set of keywords is selected from a code portion of a source code. Using a subset of the set of keywords, an expected circumstance is determined, the expected circumstance being a circumstance relevant to a purpose of the source code. From a set of data sources, a data source is identified, wherein the data source provides information usable in the expected circumstance. A manner of accessing the information from the data source is identified. Pseudo-code is constructed to implement the manner of accessing the information from the data source. A weight is assigned to the data source based upon a type of input used for selecting the pseudo-code, wherein the selecting uses the pseudo-code in the source code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09195440&OS=09195440&RS=09195440
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09195440
owner_city: Armonk
owner_country: US
publication_date: 20131126
---
The present invention relates generally to a method system and computer program product for enhancing an application development environment. More particularly the present invention relates to a method system and computer program product for intelligent data source selection in application development.

An application development environment is a tool or software usable to develop the source code of other software applications. Typically an application development process uses a specification to implement the various features of the application.

People things businesses functions operations relationships needs problems and history are some purposes for which software developers develop a variety of software applications. An enormous amount of information concerning various purposes is available from a vast number of data sources. In 2011 alone an estimated 1.8 zettabytes or 1.8 trillion gigabytes of data was created the equivalent to every U.S. citizen writing 3 tweets per minute for 26 976 years. Furthermore the information and the data sources are ever changing with more new or different information in more new or different forms becoming available from existing and new data sources every day.

The illustrative embodiments provide a method system and computer program product for intelligent data source selection in application development. An embodiment includes a method for intelligent data source selection in application development. The embodiment selects a set of keywords from a code portion the code portion being a part of a source code the source code being modified in an application development tool. The embodiment determines using a subset of the set of keywords an expected circumstance the expected circumstance being a circumstance relevant to a purpose of the source code. The embodiment identifies from a set of data sources a data source wherein the data source provides information usable in the expected circumstance. The embodiment determines a manner of accessing the information from the data source. The embodiment constructs pseudo code to implement the manner of accessing the information from the data source. The embodiment assigns a weight to the data source based upon a type of input used for selecting the pseudo code wherein the selecting uses the pseudo code in the source code.

Another embodiment includes a computer usable program product comprising a computer usable storage device including computer usable code for intelligent data source selection in application development. The embodiment further includes computer usable code for selecting a set of keywords from a code portion the code portion being a part of a source code the source code being modified in an application development tool. The embodiment further includes computer usable code for determining using a subset of the set of keywords an expected circumstance the expected circumstance being a circumstance relevant to a purpose of the source code. The embodiment further includes computer usable code for identifying from a set of data sources a data source wherein the data source provides information usable in the expected circumstance. The embodiment further includes computer usable code for determining a manner of accessing the information from the data source. The embodiment further includes computer usable code for constructing pseudo code to implement the manner of accessing the information from the data source. The embodiment further includes computer usable code for assigning a weight to the data source based upon a type of input used for selecting the pseudo code wherein the selecting uses the pseudo code in the source code.

Another embodiment includes a data processing system for intelligent data source selection in application development. The embodiment further includes a storage device including a storage medium wherein the storage device stores computer usable program code. The embodiment further includes a processor wherein the processor executes the computer usable program code. The embodiment further includes computer usable code for selecting a set of keywords from a code portion the code portion being a part of a source code the source code being modified in an application development tool. The embodiment further includes computer usable code for determining using a subset of the set of keywords an expected circumstance the expected circumstance being a circumstance relevant to a purpose of the source code. The embodiment further includes computer usable code for identifying from a set of data sources a data source wherein the data source provides information usable in the expected circumstance. The embodiment further includes computer usable code for determining a manner of accessing the information from the data source. The embodiment further includes computer usable code for constructing pseudo code to implement the manner of accessing the information from the data source. The embodiment further includes computer usable code for assigning a weight to the data source based upon a type of input used for selecting the pseudo code wherein the selecting uses the pseudo code in the source code.

The illustrative embodiments recognize that in addition to the specification for the application being developed an application development process can benefit from the information available from a variety of data sources. The illustrative embodiments further recognize that with the ever changing collection of data sources and with the volume of information available from such data sources locating usable information is a non trivial task.

Missed data use opportunities are a consequence of the increasing volume of available information and the change in data sources from where the information is available. The illustrative embodiments recognize that as a consequence of missed data use opportunities applications are being developed with less capabilities fewer features and sub optimal built in intelligence than is possible from the available information. The illustrative embodiments also recognize that simply searching for information such as by using a search engine on the internet is not an effective way for integrating the available information into the application development process.

The illustrative embodiments used to describe the invention generally address and solve the above described problems and other problems related to using a variety of data sources in application development. The illustrative embodiments provide a method system and computer program product for intelligent data source selection in application development.

An embodiment detects application development activity in an application development environment. Depending on what part of code is being worked on during the activity an embodiment identifies a set of keywords. The keywords can include words or phrases that directly appear in the code are suggestive of concepts identified in the code are related to words phrases or concepts in the code or are helpful in some manner in the purpose associated with the words phrases or concepts in the code. For example if the code being worked on in the application development environment includes a call to a function that includes the word restaurant in the function name an embodiment determines that the code portion somehow pertains to a circumstance of the restaurant business a restaurateur role a restaurant going patron or an experience involving operating or visiting a restaurant.

An embodiment identifies a set of data sources that are capable of providing some information about the circumstance being coded. In one embodiment the set of data sources itself is a subset selected from a broader set of data sources that are approved preferred ranked pre qualified short listed or otherwise selected for use in an application development process.

A common search using a search engine is limited to finding and presenting content that is relevant to a search term e.g. a keyword. In contrast an embodiment determines what purpose or expected circumstance in the application development can be addressed by a data source what information related to that circumstance the data source can contribute to the application development process and how the data source is to be accessed to extract that information in a form that is usable in application development. An embodiment further generates code or pseudo code that is usable for accessing the data source extracting the information related to the circumstance and combining in the code being developed in the application development environment.

An embodiment presents to a user several possible purposes or expected circumstances corresponding subsets of data sources manner of accessing relevant information from the subset of data sources and code for implementing that manner of accessing. An embodiment presents these artifacts as options for a user to consider during the application development process. An embodiment further allows the user such as an application developer to select from the various options. The embodiment accepts a selection input from the user whereby the user selects one or more of the several options presented.

The selection input received by the embodiment has an associated type. For example the user may select an option by copying the code corresponding to that option or checking a checkbox for that option. The selection input can also have an order. For example the user may check more than one checkboxes in a particular order. The type and order of the selection inputs are indicative of an importance attributed to the data source of the selected option s . Accordingly an embodiment attributes a priority or weight to the selected data source s according to the type order or both of the input that selects those data source s .

Application development is an iterative process. Often the same code portion is developed and re developed refined corrected improved or modified in several iterations before the code portion is deemed acceptable. Application development is also a repetitive process. The code development process used in one code section is often repeatable in another code section at a different time. Accordingly an embodiment uses the priority or weight associated with the data sources for selecting the data sources that can participate in an expected circumstance. For example suppose that a data source was used for providing information relevant to an expected circumstance before. Further suppose that the user had copied and pasted the generated code to access that data source at that time. When a similar circumstance is expected again in the same or different code portion later an embodiment preferentially reuses the data source according to the data source s priority or weight to provide similar information in a similar manner using similar code.

The illustrative embodiments are described with respect to certain purposes circumstances code or pseudo code data processing systems environments components and applications only as examples. Any specific manifestations of such artifacts are not intended to be limiting to the invention. Any suitable manifestation of these and other similar artifacts can be selected within the scope of the illustrative embodiments.

Furthermore the illustrative embodiments may be implemented with respect to any type of data data source or access to a data source over a data network. Any type of data storage device may provide the data to an embodiment of the invention either locally at a data processing system or over a data network within the scope of the invention.

The illustrative embodiments are described using specific code designs architectures protocols layouts schematics and tools only as examples and are not limiting to the illustrative embodiments. Furthermore the illustrative embodiments are described in some instances using particular software tools and data processing environments only as an example for the clarity of the description. The illustrative embodiments may be used in conjunction with other comparable or similarly purposed structures systems applications or architectures. An illustrative embodiment may be implemented in hardware software or a combination thereof.

The examples in this disclosure are used only for the clarity of the description and are not limiting to the illustrative embodiments. Additional data operations actions tasks activities and manipulations will be conceivable from this disclosure and the same are contemplated within the scope of the illustrative embodiments.

Any advantages listed herein are only examples and are not intended to be limiting to the illustrative embodiments. Additional or different advantages may be realized by specific illustrative embodiments. Furthermore a particular illustrative embodiment may have some all or none of the advantages listed above.

With reference to the figures and in particular with reference to these figures are example diagrams of data processing environments in which illustrative embodiments may be implemented. are only examples and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. A particular implementation may make many modifications to the depicted environments based on the following description.

Clients or servers are only example roles of certain data processing systems connected to network and are not intended to exclude other configurations or roles for these data processing systems. Server and server couple to network along with storage unit . Software applications may execute on any computer in data processing environment . Clients and are also coupled to network . A data processing system such as server or or client or may contain data and may have software applications or software tools executing thereon.

Only as an example and without implying any limitation to such architecture depicts certain components that are usable in an example implementation of an embodiment. Servers and and clients are depicted as servers and clients only as example. Data processing systems and also represent example nodes in a cluster partitions and other configurations suitable for implementing an embodiment. For example server includes application which implements an embodiment described herein. Application development environment is a tool for software development. Within the scope of the illustrative embodiments an existing Application development environment can be modified to include the features of application or an existing application development environment can be configured to operate in conjunction with application . Data sources and are each a data source capable of providing information relevant to an expected circumstance of application development in a code portion as described elsewhere in this disclosure. For example data source can be a website or web accessible site data source can be a database file system or another type of information repository and data source can be an information service such as a service accessible via an application programming interface API .

Servers and storage unit and clients and may couple to network using wired connections wireless communication protocols or other suitable data connectivity. Clients and may be for example personal computers or network computers.

In the depicted example server may provide data such as boot files operating system images and applications to clients and . Clients and may be clients to server in this example. Clients or some combination thereof may include their own data boot files operating system images and applications. Data processing environment may include additional servers clients and other devices that are not shown.

In the depicted example data processing environment may be the Internet. Network may represent a collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP and other protocols to communicate with one another. At the heart of the Internet is a backbone of data communication links between major nodes or host computers including thousands of commercial governmental educational and other computer systems that route data and messages. Of course data processing environment also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

Among other uses data processing environment may be used for implementing a client server environment in which the illustrative embodiments may be implemented. A client server environment enables software applications and data to be distributed across a network such that an application functions by using the interactivity between a client data processing system and a server data processing system. Data processing environment may also employ a service oriented architecture where interoperable software components distributed across a network may be packaged together as coherent business applications.

With reference to this figure depicts a block diagram of a data processing system in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in or another type of device in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments.

In the depicted example data processing system employs a hub architecture including North Bridge and memory controller hub NB MCH and South Bridge and input output I O controller hub SB ICH . Processing unit main memory and graphics processor are coupled to North Bridge and memory controller hub NB MCH . Processing unit may contain one or more processors and may be implemented using one or more heterogeneous processor systems. Processing unit may be a multi core processor. Graphics processor may be coupled to NB MCH through an accelerated graphics port AGP in certain implementations.

In the depicted example local area network LAN adapter is coupled to South Bridge and I O controller hub SB ICH . Audio adapter keyboard and mouse adapter modem read only memory ROM universal serial bus USB and other ports and PCI PCIe devices are coupled to South Bridge and I O controller hub through bus . Hard disk drive HDD or solid state drive SSD and CD ROM are coupled to South Bridge and I O controller hub through bus . PCI PCIe devices may include for example Ethernet adapters add in cards and PC cards for notebook computers. PCI uses a card bus controller while PCIe does not. ROM may be for example a flash binary input output system BIOS . Hard disk drive and CD ROM may use for example an integrated drive electronics IDE serial advanced technology attachment SATA interface or variants such as external SATA eSATA and micro SATA mSATA . A super I O SIO device may be coupled to South Bridge and I O controller hub SB ICH through bus .

Memories such as main memory ROM or flash memory not shown are some examples of computer usable storage devices. Hard disk drive or solid state drive CD ROM and other similarly usable devices are some examples of computer usable storage devices including a computer usable storage medium.

An operating system runs on processing unit . The operating system coordinates and provides control of various components within data processing system in . The operating system may be a commercially available operating system such as AIX AIX is a trademark of International Business Machines Corporation in the United States and other countries Microsoft Windows Microsoft and Windows are trademarks of Microsoft Corporation in the United States and other countries or Linux Linux is a trademark of Linus Torvalds in the United States and other countries . An object oriented programming system such as the Java programming system may run in conjunction with the operating system and provides calls to the operating system from Java programs or applications executing on data processing system Java and all Java based trademarks and logos are trademarks or registered trademarks of Oracle Corporation and or its affiliates .

Instructions for the operating system the object oriented programming system and applications or programs such as application and application development environment in are located on storage devices such as hard disk drive and may be loaded into at least one of one or more memories such as main memory for execution by processing unit . The processes of the illustrative embodiments may be performed by processing unit using computer implemented instructions which may be located in a memory such as for example main memory read only memory or in one or more peripheral devices.

The hardware in may vary depending on the implementation. Other internal hardware or peripheral devices such as flash memory equivalent non volatile memory or optical disk drives and the like may be used in addition to or in place of the hardware depicted in . In addition the processes of the illustrative embodiments may be applied to a multiprocessor data processing system.

In some illustrative examples data processing system may be a personal digital assistant PDA or another mobile computing device which is generally configured with flash memory to provide non volatile memory for storing operating system files and or user generated data. A bus system may comprise one or more buses such as a system bus an I O bus and a PCI bus. Of course the bus system may be implemented using any type of communications fabric or architecture that provides for a transfer of data between different components or devices attached to the fabric or architecture.

A communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. A memory may be for example main memory or a cache such as the cache found in North Bridge and memory controller hub . A processing unit may include one or more processors or CPUs.

The depicted examples in and above described examples are not meant to imply architectural limitations. For example data processing system also may be a tablet computer laptop computer or telephone device in addition to taking the form of a PDA.

With reference to this figure depicts an example configuration for intelligent data source selection in application development in accordance with an illustrative embodiment. Configuration can be implemented using application and application development environment in . An application development environment presents interface within which code development activity in example area . Menu offers a user a variety of selections useful in code development.

An application implementing an embodiment such as application in provides additional features in interface . Only as an example and without implying any limitation thereto in one embodiment the application provides the features usable for intelligent data source selection in application development in menu . For example menu option or a suitable equivalent feature in other application development environments allows the user to activate an embodiment to provide contextual guidance for incorporating information from various data sources code development.

When the user selects menu option the application analyzes the code portion currently being worked on in area . The application identifies words phrases or concepts from the code section in area . In one embodiment if the code section in area references other code that is not presently in area such as a reference to a library or an included code in another file the application analyzes that other code as well in a similar manner.

For example code lines and include the word restaurant suggesting that the code in area pertains to purposes in a restaurant environment. Code block contains words that suggest a circumstance related to a location of a restaurant. Accordingly the application determines that the code in area also pertains to some purpose specifically related to a location of a restaurant.

Accordingly the application determines a set of expected circumstances that the code in area is being developed to address. Some example expected circumstances related to purposes of a restaurant include but are not limited to menu information at certain restaurant locations accessibility of certain restaurant locations reviews of certain restaurant locations and safety concerns of certain restaurant locations. The application can identify an expected circumstance from the words phrases or concepts discovered in the code with the help of a lexicon ontology or a knowledgebase in any suitable form.

The application presents some or all of the expected circumstances in area . In one embodiment area can be a dynamically generated submenu as shown. In another embodiment area can be sub panel not shown in interface . In another embodiment area can be separate from interface .

With reference to this figure depicts an example manner of presenting options for intelligent data source selection in application development in accordance with an illustrative embodiment. Table is an example way of presenting the options of various contextual information from various data sources in response to a user selecting menu selection in . In one embodiment table is presented in area or another area in interface in .

Only as an example table depicts some example columns to organize the contextual information. Column lists words phrases or concept discovered in a code portion such as from code lines and and code block in . In one embodiment column also lists synonyms related concepts related or helpful words words or phrases suggestive of similar concepts and many other variations of the actual findings in the code portion.

Column lists one or more expected circumstances for the listings in each row under column . Column lists one or more data sources capable of providing information relevant to an expected circumstance given the listings in column .

Column identifies the information needed to access the data sources of column . For example a data source may be capable of providing menus for several restaurant locations but in order to provide the menu information for a restaurant the data source needs the restaurant s name and address.

Column provides sample code or pseudo code for using a data source listed in column . The code in column can take any suitable form depending on the type of data source manner of accessing the data source protocol used parameters expected and many other factors. Some example forms of code under column can be a uniform resource locator URL a database query an API call or a file system path. Code under column can also be multi step code block within the scope of the illustrative embodiments. For example a database query may not be executed without first connecting to the database with proper authentication. Accordingly the code in column may includes code to connect followed by code to authenticate and then the code for the query.

As an example row depicts a set of words under column which include not only the word restaurant identified in code lines and but also other related words such as food and eating establishment for identifying one or more expected circumstance of using the word restaurant in code. For example row under column lists menu to identify an expected circumstance that the code might be able to use a data source that provides menu information about a restaurant. In column row identifies a set of website sources that provide menus. Column for row identifies the parameters needed to get menu information about a particular restaurant from one or more of the website sources. Column for row represented as provides a URL format that can be coded into code such that when the variable portions of the URL code are replaced with actual values during code execution the URL will fetch the menu of the an actual restaurant location.

Row column similarly lists a different set of parameters for a different set of data sources for a different expected circumstance . As an example data source is a database and code is a query pseudo code which when populated with actual values are runtime will fetch a record of an actual restaurant from the database.

Row column similarly lists a different set of parameters for a different set of data sources for a different expected circumstance . As an example data source is a web accessible file system drive and code is a pseudo file path which when populated with actual values are runtime will fetch a file of an actual restaurant from the drive. As an example data source is a web service and code is a call structure for an API of the web service whose parameters when populated with actual values are runtime will return a result of an actual restaurant from the drive.

In one embodiment the code or pseudo codes in column is available from a data source or another location. In another embodiment an embodiment generates the code based on the information provided by a data source and by using a code generation application.

The example forms of data sources the example code and pseudo codes the example parameters and the example words and circumstances are not intended to be limiting on the illustrative embodiments. From this disclosure those of ordinary skill in the art will be able to conceive many other forms of these and other similarly purposed artifacts and the same are contemplated within the scope of the illustrative embodiments.

With reference to this figure depicts a flowchart of an example process of intelligent data source selection in application development in accordance with an illustrative embodiment. Process can be implemented in application in .

The application detects application development activity in an application development environment block . The application identifies a code portion that is currently the focus of the application development activity block .

The application selects a set of keywords block . The selected set of keywords includes words phrases or concepts present in the code portion or are suggestive of helpful in dependent upon or related to the words phrases or concepts present in the code portion. The application identifies a subset of data sources from a set of data sources where the subset of data sources provides data related to a circumstance expected in the code portion according to a subset of keywords block .

The application executes one or more searches on the subset of data sources to determine a manner of using a data source from the subset block . For example a search in block may be configured to determine a protocol a sequence of commands a set of parameters a format of a call or other similarly purposed artifacts for using a data source. The application may repeat blocks and for any number of subsets of keywords and any number of subsets of data sources as may be applicable in a given implementation.

The application constructs code or pseudo code implementing the determined manner of using the data source block . In one embodiment the application gets the code in block from the data source. In another embodiment the application constructs the code in block using a code generation tool.

The application presents various options of code or pseudo code for using various data sources to address various expected circumstances in the code portion block . The application receives an input to select a code or pseudo code block . The application determines a type of the input an order of the input or both block . The application assigns a priority or weight to the data source of the selected option based on the type and or order of the input that selects the option block . The application may end process thereafter.

In one embodiment during another iteration of application development using the priority or weight assigned in block the application increases or decreases the priority of the data source for intelligent data source selection in another iteration of application development block . The application ends process thereafter. In one embodiment in block the application may use the data source with a changed priority with the same code portion as identified in block . In another embodiment in block the application may use the data source with a changed priority with a code portion that is different from the code portion identified in block .

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

Thus a computer implemented method system and computer program product are provided in the illustrative embodiments for intelligent data source selection in application development

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable storage device s or computer readable media having computer readable program code embodied thereon.

Any combination of one or more computer readable storage device s or computer readable media may be utilized. The computer readable medium may be a computer readable storage medium. A computer readable storage device may be for example but not limited to an electronic magnetic optical electromagnetic or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage device would include the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage device may be any tangible device or medium that can store a program for use by or in connection with an instruction execution system apparatus or device. The term computer readable storage device or variations thereof does not encompass a signal propagation media such as a copper cable optical fiber or wireless transmission media.

Program code embodied on a computer readable storage device or computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to one or more processors of one or more general purpose computers special purpose computers or other programmable data processing apparatuses to produce a machine such that the instructions which execute via the one or more processors of the computers or other programmable data processing apparatuses create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in one or more computer readable storage devices or computer readable media that can direct one or more computers one or more other programmable data processing apparatuses or one or more other devices to function in a particular manner such that the instructions stored in the one or more computer readable storage devices or computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto one or more computers one or more other programmable data processing apparatuses or one or more other devices to cause a series of operational steps to be performed on the one or more computers one or more other programmable data processing apparatuses or one or more other devices to produce a computer implemented process such that the instructions which execute on the one or more computers one or more other programmable data processing apparatuses or one or more other devices provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

