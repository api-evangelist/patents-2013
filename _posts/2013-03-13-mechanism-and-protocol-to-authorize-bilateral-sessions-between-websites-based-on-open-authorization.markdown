---

title: Mechanism and protocol to authorize bilateral sessions between websites based on open authorization
abstract: An apparatus for authorizing a bilateral session between two websites, comprising a processor configured to grant authorization for a first website to access a first resource located on a second website, grant authorization for the second website to access a second resource located on the first website, and establish the bilateral session between the first website and the second website when authorization is granted for the first website to access the first resource and authorization is granted for the second website to access the second resource, wherein the bilateral session supports the transfer of the first resource to the first website and the transfer of the second resource to the second website.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09130944&OS=09130944&RS=09130944
owner: Futurewei Technologies, Inc.
number: 09130944
owner_city: Plano
owner_country: US
publication_date: 20130313
---
Web Real Time Communication WebRTC is an application program interface API that provides a variety of resources such as address book voice calling video chat and peer to peer file sharing via a web browser. Without plug ins a web browser may support real time communication using Javascript APIs and Hyper Text Markup Language HTML . WebRTC applications and services may need bilateral sessions that allow resources on two different websites to access each other within one session. Bilateral sessions are also useful in non real time applications such as electronic mail email . For instance a user may have two email accounts located on two different websites such as a YAHOO email account and GMAIL email account. The user may login to the YAHOO email account to create a YAHOO login session to access emails stored in the YAHOO email account. In a bilateral session the user may be able to obtain emails from the user s GMAIL email account and the user s GMAIL email account may also obtain emails from the YAHOO email account within the YAHOO login session. As a result the bilateral session may allow both email accounts to share emails files pictures and or other forms of data between each other within one session. Bilateral sessions may also be useful in other WebRTC applications and services such as presence federation and call routing that use resources located on different web servers.

Unfortunately today s web infrastructure is configured to perform unilateral sessions where a resource in one website accesses a resource on another website within a session but not vice versa. Using the email account example from above a user may login to YAHOO email account to obtain emails from the YAHOO email account and the GMAIL email account. However in a unilateral session the GMAIL email account is unable to obtain emails from the YAHOO email account within the same YAHOO login session. Instead the user would create a new session such as opening a new web page logging into the GMAIL email account and authorizing the GMAIL email account to obtain emails from the YAHOO email account. Therefore in a unilateral session two different sessions may need to be created for two different websites to access each other resources.

One reason today s web infrastructure is limited to unilateral sessions is because of the current development of web authorization protocols such as Open Authorization OAuth 2.0 Hypertext Transfer Protocol Secure HTTPS and Kerberos. Today s web authorization protocols have not been adapted to authenticate websites to share resources between each other. OAuth 2.0 as defined in the Internet Engineering Task Force IETF Request for Comments RFC 6749 published October 2012 which is incorporated herein as if reproduced by its entirety supports unilateral sessions and not bilateral sessions. Furthermore OAuth 2.0 provides authorization to a fixed list of resources and may not dynamically add and or remove resources. HTTPS as defined in the IETF RFC 2818 published May 2000 may be used between websites to perform certificate based mutual authentication such as Transport Layer Security TLS as defined in the IETF RFC 5246 published August 2008. Although HTTPS may provide mutual authorization between websites HTTPS does not grant access to the resources on the websites. Kerberos as defined in the IETF RFC 4120 published July 2005 is an authentication protocol that authenticates distributed computer processes. Kerberos may authorize a session between a client and a server but does not permit bilateral sessions where the two servers in a session may access resources from each other. Therefore to improve the WebRTC experience a web authorization protocol is needed to support the establishment of bilateral sessions within a session.

In one embodiment the disclosure includes an apparatus for authorizing a bilateral session between two websites comprising a processor configured to grant authorization for a first website to access a first resource located on a second website grant authorization for the second website to access a second resource located on the first website and establish the bilateral session between the first website and the second website when authorization is granted for the first website to access the first resource and authorization is granted for the second website to access the second resource wherein the bilateral session supports the transfer of the first resource to the first website and the transfer of the second resource to the second website.

In yet another embodiment the disclosure includes an apparatus for authorizing a bilateral session between two websites comprising a processor configured to transmit an authorization request message to a first website receive an authorization response message from the first website establish the bilateral session between the first website and a second website using the authorization request and the authorization response wherein the authorization request message identifies a list of resources located on the first website and wherein the second website modifies the list of resources.

In yet another embodiment the disclosure includes a method for authorizing a bilateral session between two websites using the OAuth wherein the method comprises transmitting an authorization request message to a first website receiving an authorization response message from the first website and forwarding the authorization response message to a second website wherein the authorization request represents a request for the first website to grant access to a plurality of first resources located on the first website to the second website wherein the authorization request authorizes the first website to access a plurality of second resources located on the second website and wherein the authorization response message authorizes the first website to access the first resources.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques described below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

Disclosed herein are a method an apparatus and a system that may be used to authorize a bilateral session between two websites based on OAuth 2.0. Parameters may be added to the OAuth 2.0 protocol to support a bilateral session between two websites hosted by two different end nodes. More specifically the extension parameters may be added to OAuth 2.0 protocol messages such as the authorization request authorization response message access request and access response messages generated during an OAuth 2.0 authorization process. The additional parameters may prevent the addition of protocol messages exchanged during the OAuth 2.0 authorization process. After authorization of the bilateral session between the two websites each of the websites may access resources managed by the other website.

Client may be configured to operate and display information within one or more web browsers . Users such as a web user and or a resource owner may interact with the client via the input devices to operate web browser . In one embodiment web browser may be any software application for retrieving presenting and traversing resources from system such as CHROME FIREFOX INTERNET EXPLORER OPERA and SAFARI. In one embodiment web browser may be configured to access retrieve and view documents web applications and web services from the Internet. Some of these web services and web applications may include but are not limited to voice calling video chat and peer to peer file sharing. The web browser may be integrated with voice and video engines and configured to operate resources without the installation of plug ins and or other add ons. Web browser may be stored in a memory component within the client . Moreover the client may comprise a processing unit e.g. central processing unit CPU that may be used to load web browser within client and execute web services and applications within web browser .

Web browser may be configured to access one or more web pages that may be encoded in HTML extensible HTML XHTML or other forms of markup language. Web browser may be able to view web pages such as public websites and or intranet websites. In web page A may display web information from a website hosted by end node A while web page B may display web information from a website hosted by end node B . Another embodiment of system may have one of the end nodes e.g. end node A host the websites displayed in both web pages A and B . Hosting of web page A and web page B may also be distributed amongst a plurality of end nodes .

End nodes may include but are not limited to servers hosts storage devices and or any combination of devices that may be configured to implement the OAuth protocol. End nodes may transmit and receive data from client . In one embodiment end nodes may be one or more web servers implemented in a variety of method such as Java C and or other web server framework. End nodes may be used to host websites that can be accessed publicly e.g. over the Internet and or through a private network e.g. virtual private network .

End node may comprise one or more resources . Resources may be video data audio data text data and any other types of data that may be displayed and or executed within web browser . For example when a video chat is performed within web browser resources may be video and audio data. Other embodiments of resource may include address books phone applications presence distributed on different websites during a presence federation call or any two way real time web applications e.g. video chatting and peer to peer file sharing . Resources may be stored on one or more end nodes and may be distributed remotely on different web services. illustrates that resources A C may be stored within end node A resources D F may be stored within end node B and resource G and H may be stored within end node C . In one embodiment resource may be protected or access restricted and may be accessed after proper authorization from a user.

In the web browser may establish a session between two different websites hosted by end nodes A and C . Within session the web browser may be able to access resources A C G and H . Session may be authenticated using any version of the OAuth protocol such as OAuth 2.0 as defined in the IETF RFC 6749. For example a user may access a web page via the web browser . The web page A may display a website that may prompt the user to enter a username and password in a username field and password field. After the user enters the username and password the request to access resources A C may be sent to end node A . Once end node A receives the request end node A may authenticate the client and web browser to establish session .

The message exchange process starts when a user attempts to login to website A via a web browser . In the login process user may provide authentication information and or perform actions such as clicking on one or more hyperlinks and or entering a string of characters to navigate to website A via web browser . Once the user provides the proper information to navigate to website A to access resources in website A a login site A message may be sent to the web browser . In one embodiment user may enter a string of characters into a username field and a password field displayed within the web browser to produce login website A message . The login website A message may be one or more messages generated internally within a client. After web browser receives the login website A message the web browser may produce a Hypertext Transfer Protocol HTTP Get message as described in IETF RFC 2616 published June 1999 which is incorporated herein as if reproduced by its entirety. The HTTP Get message may request to retrieve website information and access resources e.g. access tokens in website A based on the information provided in the login website A message . Once website A authenticates the information website A may send a HTML Form message . The HTML Form message may include data used to produce a web page that a user may be able to view within web browser after website A authenticates the information sent in the HTTP Get message . HTML Form message may also provide resource data requested in the HTTP Get message .

After logging into website A user may then want website A to access the user s resources located on website B and website B to access the user s resources located on website A . In one embodiment user may send a track website A by website B request for website A to access resources in website B and vice versa. illustrates that website A may be labeled the visiting website while website B may be labeled the tracking website. Through tracking website A may send messages to website B that notifies website B of the user s presence. User may click on one or more hyperlinks enter a string of characters and or use other methods to navigate through website A within web browser to produce the track website A by website B request . Similar to the login website A message the track website A by website B request may be one or more internal messages produced within the client.

Once web browser receives the track website A by website B request the web browser may send a HTTP Post message as described in IETF RFC 2616 published June 1999 to website A . The HTTP Post message may be a request for website A to gain access to resources in website B and for website A to provide access to resources on website A to website B . When website A receives the HTTP Post message website A may send a redirect to website B message back to web browser . Currently website A may not have authorization to access resources in website B and website B may not have authorization to access resources in website A . To obtain the proper authorization website A may use the redirect to website B message to redirect web browser to website B . The redirect to website B message may comprise a uniform resource identifier URI that identifies website B . Once web browser receives the redirect to website B message the web browser processes the redirect to website B message and loads a web page displaying website B . In one embodiment the web page may have been displaying website A prior to receiving the redirect to website B message .

Web browser may then send a HTTP Post authorization request to website B . The HTTP Post authorization request may send a set of parameters such as a client identifier ID redirection URI and a list of resource user may want to access on website B. The HTTP Post authorization request may indicate a request on behalf of user for website A to obtain authorization to access resources on website B and for website B to access resources on website A . After website B receives the HTTP Post authorization request website B may produce a verify website A message to determine whether website A matches the redirection URI sent in the HTTP Post authorization request . The redirection URI may be used to redirect access tokens to website A instead of web browser . Moreover website B may determine whether the parameters within the HTTP Post authorization request are valid. The verify website A message may be generated within the one or more end nodes that host website B . The HTTP Post authorization request for an authorization code grant will be discussed in more detail in .

After verification of HTTP Post authorization request website B may send a HTML form message that may include data used to produce a web page that corresponds to website B . The HTML form message may provide the web page data so that a user may be able to view the web page within web browser . The HTML form message may include data to construct a field for user to enter private information such as a username and password. When web browser receives HTML form message web browser displays website B within a web page. Afterwards user may enter private and or secret information e.g. username and password to provide access to resources on website B. Once user provides the private information a grant access message or action may be generated within the client and sent to web browser . In one embodiment the grant access action may be realized by user clicking an appropriate button on web browser .

When web browser receives the grant access message the web browser may transmit an HTTP Post grant message to website B . The HTTP Post grant message may represent user s authorization for website B to grant resource access to website A and vice versa. For HTTP Post grant message may be an authorization grant. Other types of grants such as the implicit grant resource owner password credential grant or a client credential grant will be discussed in . The type of HTTP Post grant message may depend on the type of HTTP Post authorization request sent to website B .

After receiving the HTTP Post grant message website B may send a redirect authorization response message back to web browser that indicates that website B has received and verified the HTTP Post grant message . Additionally the redirect authorization response message may redirect the web browser to display a webpage corresponding to website A . In the redirect authorization response message may be for an authorization code grant and will be discussed in more detail in . Web browser may subsequently forward the received redirect authorization response message as an HTTP Post authorization response message to website A. The HTTP Post authorization response message may indicate website A has authorization to access resources on website B and website B has authorization to access resources on website A .

To obtain resources from website B website A may request for access tokens using an HTTP Get access request . The access tokens may comprise a token ID that may be a string of characters that identifies tokens that correspond to resources in website B . The access tokens may grant access to one or more resources on website B for website A . In one embodiment the string of characters may not represent the actual username and or passwords entered by user and may be a different set of characters. The HTTP Get access request may also issue access tokens to website B to access resources on website A . When website B receives the HTTP Get access request website B may send an access response message that issues access tokens to website A after verifying the HTTP Get access request is valid. The HTTP Get access request and access response message will be described in more detail in .

Website A may then send a Hyper Text Markup Language HTML confirmation message to web browser . The HTML confirmation message may indicate that website A may now access resources on website B and website B access resources on website A . When web browser receives the HTML confirmation message the web browser may display a message within a web page that notifies the user of the establishment of the bilateral session between website A and website B . To access resources website A may send a presence for user message to website B that includes the access tokens received from website B . The access tokens may be used to access the resources on website B . The presence for user message may also indicate the user s desire and instructions to obtain the resources from website B . When a user desires website B from resource in website A website B may send a call to user message to access resources in website A . The call to user message may include access tokens that correspond to resources located in website A .

The session parameter may indicate a session ID and the references that will be accessed within the bilateral session. The value session a may represent the value of the session ID. A session ID may be used to represent instances when the website sending the authorization request is accessing resources on the website receiving the authorization request . For example in the session ID with a value of session a may represent the instances when website A accesses resources from website B . The value of session a may be encoded as Extensible Markup Language XML such as XML Schema Definition XSD . xsd any infoset represents that session a may be encoded as any data structure that indicates the resources that may be accessed during the bilateral session. For example the xsd any infoset may indicate that a user s calendar address book and or video encoded using a certain codec may be accessed in the bilateral session. The resources identified in the value of session a may be modified and may not be a fixed list of resources.

The authorization response message may comprise a code parameter and a session parameter . The code parameter may represent the authorization to access resources in the website that transmits the authorization response message . The website may transmit the authorization response message after a user grants the authorization request. The code value may be the actual code generated by the website that authorizes another website to access resources. For example in after receiving the HTTP Post grant message from the web browser website B may generate the code value which may be used by website A to represent website A has authorization to access resources on website B . The session parameter may be substantially similar to the session parameter in except that session parameter has a value of session b. The value of session b may identify the instances used to access resources from the website that sent the authorization request. For example in the session ID with a value of session b may represent the instances when website B accesses resources from website A . Similar to the value of session a shown in session b may be encoded as a data structure in XML that indicates the resources that may be accessed during the bilateral session.

The token type 510 parameter may indicate the type of access tokens that are being issued. The value of session indicates that the access tokens may be used to access resources within a website for the bilateral session. The access token parameter may include the access tokens used to access resources for the website transmitting the access request . The value token a1 may represent the actual access tokens sent to the other website. In website A HTTP Get access request issues access tokens that access resources in website A to website B . The expires in parameter indicates when the access tokens expire and are no longer valid to access resources on the website transmitting the access request . The value xsd duration xsd dateTime may represent the duration of time or the absolute time point the access tokens may be valid. The duration of time may be represented in seconds minutes hours or longer periods of time. After the duration of time has elapsed the access tokens may no longer be valid. The absolute time point may be represented as a date and time of day. After time has elapsed beyond the absolute time point the access tokens may no longer be valid. The refresh token parameter provides refresh tokens that may be used to access resources on the website transmitting the access request once the access tokens have expired or are no longer valid. The value token a2 may represent that the refresh tokens and access tokens in access token parameter may have different values. Refresh tokens may be used to prevent re authorizing the bilateral session between two websites after a certain amount of time has elapsed since the initial authorization of the bilateral session.

The access token parameter may be substantially similar to access token parameter in except that access token parameter has a value of token b1. The value of token b1 represents the access tokens for the website that transmits access response and previously received the access request shown in . In the value of token b1 may represent the access tokens to access resources on website B . The expires in parameter may be substantially similar to expires in parameter shown in except that the expires in parameter may correspond to the access tokens issued in access token parameter . The refresh token parameter may be substantially similar to refresh token parameter except that refresh token parameter has a value of token b2. The value of token b2 may differ from token a1 token a2 and token b1. 

The authorization request may be encoded as a HTTP protocol and the parameters may be encoded as key and value attributes. The authorization request may be the HTTP Post authorization request shown in . The authorization request may provide access tokens to access resources for the website transmitting the authorization request . The authorization request may comprise a grant type parameter a redirect URI parameter a client ID parameter a token type parameter a access token parameter a expires in parameter a refresh token parameter and a session parameter . The grant type parameter may be substantially similar to the grant type parameter except that the grant type parameter may have a value of token. The value of token indicates that authorization request is an implicit type of grant. The redirect URI parameter client ID parameter token type parameter access token parameter expires in parameter refresh token parameter and session parameter have been discussed above.

The authorization request may be encoded as a HTTP protocol and the parameters may be encoded as key and value attributes. Using as an example the authorization request may be the HTTP Post authorization request . The authorization request may comprise a grant type parameter a username parameter a password parameter a scope parameter a token type parameter a access token parameter a expires in parameter a refresh token parameter and a session parameter . The grant type parameter may be substantially similar to the grant type parameter shown in except that grant type parameter may have a value of password. The value of password indicates that the authorization request may be for a resource owner password credential grant. The username parameter may indicate the user s username. The value name may represent the actual username. The password parameter may indicate the user s password. The value password may represent the actual password. All other parameters for the authorization request have been discussed above.

The authorization request may be encoded as a HTTP protocol and the parameters may be encoded as key and value attributes. Using as an example the authorization request may be the HTTP Post authorization request . The authorization request may comprise a grant type parameter a scope parameter a token type parameter an access token parameter an expires in parameter and a session parameter all which have been discussed above.

The schemes described above may be implemented on any general purpose computer system such as a computer or network component with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. illustrates a schematic diagram of a general purpose computer system suitable for implementing one or more embodiments of the methods disclosed herein such as the client web browser and end nodes . The computer system includes a processor which may be referred to as a CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM transmitter receiver and input output I O device . Although illustrated as a single processor the processor is not so limited and may comprise multiple processors. The processor may be implemented as one or more CPU chips cores e.g. a multi core processor field programmable gate arrays FPGAs application specific integrated circuits ASICs and or digital signal processors DSPs and or may be part of one or more ASICs. The processor may be configured to implement any of the schemes described herein such as the client web browser and end nodes . The processor may be implemented using hardware software or both.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if the RAM is not large enough to hold all working data. The secondary storage may be used to store programs that are loaded into the RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. The ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of the secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both the ROM and the RAM is typically faster than to the secondary storage . The secondary storage ROM and or RAM may be non transitory computer readable mediums and may not include transitory propagating signals. Any one of the secondary storage ROM or RAM may be referred to as a memory or these modules may be collectively referred to as a memory. Any of the secondary storage ROM or RAM may be used to store web pages as described herein. The processor may generate the hyperlinks web pages and store the web pages in memory and or retrieve the web pages from memory.

The transmitter receiver may serve as an output and or input device of the client and end node . For example if the transmitter receiver is acting as a transmitter it may transmit data out of the computer system . If the transmitter receiver is acting as a receiver it may receive data into the computer system . The transmitter receiver may take the form of modems modem banks Ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA global system for mobile communications GSM long term evolution LTE worldwide interoperability for microwave access WiMAX and or other air interface protocol radio transceiver cards and other well known network devices. The transmitter receiver may enable the processor to communicate with an Internet or one or more intranets. I O devices may include a video monitor liquid crystal display LCD touch screen display or other type of video display for displaying video and may also include a video recording device for capturing video. I O devices may also include one or more keyboards mice or track balls or other well known input devices.

It is understood that by programming and or loading executable instructions onto the computer system at least one of the processor the RAM and the ROM are changed transforming the computer system in part into a particular machine or apparatus e.g. invoking resources having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer which can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an application specific integrated circuit ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 7 percent . . . 70 percent 71 percent 72 percent . . . 97 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

