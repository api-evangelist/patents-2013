---

title: Service policies for communication sessions
abstract: Techniques for service policies for communication sessions are described. According to various embodiments, a service policy specifies various rules and/or procedures for handling communication sessions. For instance, a service policy can specify service priority designations to be applied to communication sessions based on various attributes of the communication sessions. Techniques discussed herein provide for automated and dynamic management of service policies in a variety of communication scenarios, e.g., via per-session customization of service policies. In at least some embodiments, techniques may be employed to remedy problems that may occur during a communication session, such as via bandwidth reallocation, dynamic remapping of routing paths, and so forth.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09515938&OS=09515938&RS=09515938
owner: Microsoft Technology Licensing, LLC
number: 09515938
owner_city: Redmond
owner_country: US
publication_date: 20131024
---
Modern communication systems have an array of capabilities including integration of various communication modalities with different services. For example instant messaging voice video communications data application sharing white boarding and other forms of communication may be combined with presence and availability information for subscribers. Such systems may provide subscribers with the enhanced capabilities such as providing instructions to callers for various status categories alternate contacts calendar information and comparable features. Furthermore collaboration systems enabling users to share and collaborate in creating and modifying various types of documents and content may be integrated with multimodal communication systems providing different kinds of communication and collaboration capabilities. Such integrated systems are sometimes referred to as Unified Communication and Collaboration UC C systems.

While UC C systems provide for increased flexibility in communications they also present a number of implementation challenges.

For instance a UC C system typically supports multiple communication modalities via a single connection e.g. voice video and data converged over a single interface. Challenges thus arise in implementing quality of service polices for the different modalities. Further UC C is typically implemented via software that can be loaded on mobile devices e.g. tablets smartphones laptops and so forth. Thus techniques for managing UC C communication traffic typically have to be fluid and dynamic to accommodate changing connection scenarios.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Techniques for service policies for communication sessions are described. According to various embodiments a service policy specifies various rules and or procedures for handling communication sessions. For instance a service policy can specify service priority designations to be applied to communication sessions based on various attributes of the communication sessions. A service policy may also specify bandwidth allocations for different communication sessions such as based on as service priority for a communication session a type of media included in a communication session and so on. Techniques discussed herein provide for automated and dynamic management of service policies in a variety of communication scenarios e.g. via per session customization of service policies. In at least some embodiments techniques may be employed to remedy problems that may occur during a communication session such as via bandwidth reallocation dynamic remapping of routing paths and so forth.

Techniques for service policies for communication sessions are described. In at least some embodiments a communication session refers to an exchange of communication data between different nodes in a network. Examples of a communication session include a Voice over Internet Protocol VoIP call a video call text messaging a file transfer and or combinations thereof. In at least some embodiments a communication session represents a Unified Communication and Collaboration UC C session.

According to various embodiments a service policy specifies various rules and or procedures for handling communication sessions. For instance a service policy can specify service priority designations to be applied to communication sessions based on various attributes of the communication sessions. Generally service priority designations refer to different priorities that can be assigned to different types of data. Examples of service priority designations include class of service CoS designations quality of service QoS designations and so forth. For instance communication data tagged with a high service priority may be given higher priority treatment in terms of access to network resources e.g. bandwidth than communication data tagged with a low service priority.

A service policy may also specify bandwidth allocations for different communication sessions such as based on as service priority for a communication session a type of media included in a communication session and so on. Thus service policies can be employed to manage a variety of different aspects of data flow in a communication session.

Techniques discussed herein provide for automated and dynamic management of service policies in a variety of communication scenarios. For instance consider an example implementation scenario where a VoIP call is initiated in a communication network. Various components of the communication network e.g. routers switches and so forth can be pre configured with a set of initialization service policies that apply to communication data that is handled by the components. The initialization policies for instance can specify that communication data is to be initially tagged with a particular service priority regardless of a type of media included in the communication data or a pre existing service priority designation for the communication data. Accordingly media data for the VoIP call is initially tagged with the particular service priority and is thus handled based on the particular service priority.

Continuing with the example scenario the VoIP call is determined to be entitled to a higher service priority. Quality management functionality for example can determine that one or more participating devices in the VoIP call are authenticated to receive a higher service priority and or that a data type included in the VoIP call data is entitled to a higher service priority. Accordingly updated service policies are generated for the VoIP call that specify that data for the VoIP call is to be tagged with a higher service priority. The updated service policies are propagated to various components of the communication network to be used in handling the VoIP call data. In at least some embodiments the updated service policies are transmitted separately e.g. out of band from the VoIP call data. The updated service policies for instance override some or all of the initialization service policies with regard to handling the particular VoIP call.

As described in more detail below the updated service policies can be tied to the particular VoIP call such as via identifiers for client devices involved in the call session. Thus the updated service policies can be applied to data for the VoIP call but not to data for a different communication session. Thus techniques discussed herein provide for per session customization of service policies. This prevents unauthorized e.g. unauthenticated data flows from being tagged with service priorities to which they are not entitled.

In at least some embodiments techniques discussed herein can be employed to remedy problems that may occur during a communication session. Examples of such problems include packet loss jitter packet delay and so forth. For instance techniques can enable additional bandwidth to be allocated for a communication session. Additionally or alternatively techniques can remap a routing path for a communication session to avoid e.g. circumvent a particular network component that is causing a problem.

In the following discussion an example environment is first described that is operable to employ techniques described herein. Next a section entitled Example Implementation Scenarios describes some example implementation scenarios in accordance with one or more embodiments. Following this a section entitled Example Procedures describes some example procedures in accordance with one or more embodiments. Finally a section entitled Example System and Device describes an example system and device that are operable to employ techniques discussed herein in accordance with one or more embodiments.

Having presented an overview of example implementations in accordance with one or more embodiments consider now an example environment in which example implementations may by employed.

Connected to the network are client terminals which are representative of end user devices that communicate via the network . The client terminals may be configured in a variety of ways such as a traditional computer e.g. a desktop personal computer laptop computer and so on a mobile station an entertainment appliance a smartphone a netbook a game console a handheld device e.g. a tablet and so forth.

The client terminals include communication applications which are representative of functionalities to enable different forms of communication via the client terminals . Examples of the communication applications include a voice communication application e.g. a VoIP client a video communication application a messaging application a content sharing application and combinations thereof. The communication applications for instance enable different communication modalities to be combined to provide diverse communication scenarios. In at least some embodiments the communication applications represent applications that are installed on the client terminals . Additionally or alternatively the communication applications can be implemented as remote applications such as accessed via a web browser a web application and so forth.

The environment further includes a communication service which is representative of a service to perform various tasks for management of communication between the client terminals and or other entities connected to the network . The communication service for instance can manage initiation moderation and termination of communication sessions between the client terminals . Examples of the communication service include a VoIP service an online conferencing service a UC C service and so forth. The communication service may be implemented as or be connected to a private branch exchange PBX in communication with a Public Switched Telephone Network PSTN to enable voice communication between the client terminals . In at least some embodiments the client terminals are configured to interface with the communication service via the communication applications to enable communication between the different client terminals . Further functionalities and implementations of the communication service are discussed below.

Further illustrated are communication components which are representative of functionalities to perform different communication related tasks for the network . Examples of the communication components include servers routers network switches network elements NEs and so on. The communication components for instance can receive communications from the client terminals process the communications and route the communications to the appropriate location s . Thus the communication components represent a hardware and logical infrastructure for routing communications to different nodes of the network .

The environment also includes a quality manager which is representative of functionality to control various quality related service policies for communication in the network . The quality manager for instance can configure and propagate service policies to the different communication components and or other entities of the network . The quality manager is further configured to dynamically update service policies and to propagate updated service policies to the communication components . The quality manager also enables dynamic configuration and reconfiguration of communication paths within the network and or other network such as to accommodate changes in network connections.

According to one or more embodiments the quality manager includes connectivity and logic that accesses routing information for the network . For instance the quality manager can access an Interior Gateway Protocol IGP and or spanning tree switching topology for the network . This enables the quality manager identify different data routing paths within the network such as between the client terminals and the communication components . The quality manager may also map and remap communication paths between various components of the network such as to optimize and or repair communication sessions in the network .

The ability to interface with the communication components and other nodes of the network enables the quality manager to configure and reconfigure service policies for communication within the network and or other connected network. Generally service policies enable attributes to be specified for communication within the network such as via traffic shaping packet prioritization application classification and so forth. Further details concerning the quality manager and service policies in general are described below.

Having described an example environment in which the techniques described herein may operate consider now some example implementation scenarios for service policies for communication sessions in accordance with one or more embodiments.

The following section describes example implementation scenarios for service policies for communication sessions in accordance with one or more embodiments.

Further to the scenario the quality manager generates service policies and propagates the service policies to the communication components . The service policies for example can be pushed to and or pulled by the communication components . In at least some embodiments the service policies represent initialization service policies which are applied to data of a communication session when the communication session is initiated.

According to various embodiments the service policies specify how different types of communication data are to be handled by the communication components . The service policies for example specify different classes of service to be applied to different types of data different bandwidth allocations for different types and classes of data and so forth. In at least some embodiments the service policies specify policy and priority to be applied for a data packet when traversing a hop in the network such as individual of the communication components . The policies listed as part of the service policies are presented for purpose of example only and a variety of other policies not expressly listed can be specified in accordance with the disclosed embodiments.

Examples of service priorities that can be applied to communication data by the service policies and or other service policies include 

 2 Expedited Forwarding EF . This class is typically dedicated to low loss low latency traffic such as voice data video data and so forth. In at least some embodiments EF is a high service priority.

 3 Assured Forwarding AF . This class typically provides assurance of packet delivery as long as packet traffic does not exceed a specified rate. In at least some embodiments AF does not provide latency attributes specified for EF packets and or is a lower service priority than EF and CS3.

 4 Best Effort BE . This class typically does not guarantee data delivery or provide a specific service priority e.g. with respect to packet loss packet latency and so forth. QoS for BE packets typically depends on packet traffic load in a particular portion of a network and is typically prioritized behind CS3 EF and AF packets.

These service priorities are presented for purpose of example only and embodiments may employ other class designators and classes of service without departing from the spirit and scope of the disclosed embodiments.

In this particular implementation the service policies specify that communication initialization signaling is to be tagged as a high service priority e.g. CS3. Generally communication initialization signaling refers to data included as part of a request to initiate communication between two or more client devices e.g. two or more of the client terminals introduced above.

The service policies further specify that media data is to be tagged as a lower service priority e.g. BE service priority. Generally media data refers to content included as part of a communication such as voice data video data content data and so forth. For instance communication initiation signaling can be used to initiate a communication session between devices. After the communication session is established media data can be exchanged as part of the communication session.

Bandwidth allocations BW are also specified by the service policies . In this example the service policies specify discrete bandwidth percentages to be allocated for routing data according to particular service priorities. The bandwidth values for example specify a particular percentage of bandwidth to be utilized by an egress link scheduler for routing data from the communication components . These bandwidth allocations are presented for purpose of example only and a variety of other allocation amounts units and so forth may be employed.

Thus the communication components are configured with the service policies and can utilize the service policies to handle various types of communication data. In at least some embodiments the scenario represents an initial setup of the communication components by the quality manager .

Further to the scenario the client terminal generates communication initiation signaling which represents a request to initiate a communication session with the client terminal . For instance a communication application of the client terminal e.g. an instance of the communication applications can initiate the request. The signaling includes information about the requested communication session such as an address e.g. IP address for the client terminal an address for the client terminal a type of communication session being requested e.g. a type and or types of media involved and so forth.

The signaling is received by the communication component which applies one or more of the service policies to the signaling . For instance the communication component marks the signaling with a high service priority such as CS3 referenced above to generate tagged signaling . A packet header in the tagged signaling for example is tagged with a service priority designator for the high service priority.

Continuing with the scenario the tagged signaling is routed from the communication component to a communication service which represents an implementation of the communication service introduced above. The communication service identifies the client terminal in the tagged signaling and routes the tagged signaling to the client terminal via the communication component . The communication component ascertains that the tagged signaling is tagged with the high service priority and thus routes the tagged signaling to the client terminal according to the higher service priority. For instance the communication component allocates bandwidth to the tagged signaling based on the service policies which specify bandwidth allocation for the high service priority.

Based on the tagged signaling a communication session is initiated between the client terminal and the client terminal via the exchange of a communication media flow . The media flow is representative of a sequence of data packets that include one or more types of media data such as audio e.g. voice data video and or other types of content.

Based on the service policies the media flow is tagged as BE service priority. In at least some embodiments if the media flow is not tagged or is already tagged with a particular service priority different than BE e.g. by the client terminal the media flow is tagged or retagged by the communication component and or the communication component as BE. Thus bandwidth allocation and or other data routing policies of the service policies that pertain to the BE service priority are applied to the media flow when routing the media flow between the client terminal and the client terminal .

In at least some embodiments the communication component and or the communication component tag the media flow as BE without inspecting the content of the media flow . Thus the media flow can be tagged with a particular service priority by a communication component without the communication component being aware of the type and or nature of the media content in the media flow . For instance a header for data packets of the media flow may simply identify the media flow as including content e.g. as being distinguished from signaling data. The media flow for example may be encrypted. Thus a communication component can tag the media flow with a particular service priority without decrypting and or deciphering its content.

Further to the scenario the communication service provides a notification to a quality manager that indicates that a communication session has been initiated between the client terminals . In at least some embodiments the notification is separate e.g. out of band from the tagged signaling and the media flow .

The notification includes attributes of the communication session such as a date time stamp for the communication session an identifier for the communication session a media type or types for the media flow and so forth. In at least some embodiments an identifier for the communication session includes 5 tuple information that describes attributes of the communication session. The 5 tuple information for instance includes an address for the client terminal e.g. source address an address for the client terminal e.g. destination address a port on the client terminal being used for the communication session e.g. a source port a port on the client terminal being used for the communication session e.g. a destination port and a transport protocol being used for the communication session e.g. transmission control protocol TCP .

The notification may also include an indication that the client terminal and or the client terminal are authenticated e.g. that the client terminal e.g. a user associated with a particular client terminal is authorized to initiate and or participate in a communication session via the communication service .

Based on the notification the quality manager generates updated service policies for communication between the client terminal and the client terminal e.g. for the media flow . The updated service policies include an identifier for the communication session e.g. the 5 tuple referenced above and a new service priority designator for the media flow . The updated service policies may include other updated policies such as updated bandwidth allocations for different service priorities updated routing information for the media flow e.g. an updated routing path and so forth.

In at least some embodiments the service priority designator is determined based on a media type for the media flow . For instance voice data e.g. as part of a VoIP call and live video data may be designated with a high service priority such as EF. Other types of data such as content data files and so forth may be tagged with a lower e.g. mid level service priority such as AF. Thus different types and or modalities of media may be designated with different service priorities.

According to one or more embodiments service policies discussed herein can specify different service priorities based on various considerations such as user priority modality priority device priority and so forth. For instance a communication session involving a high priority user may be designated with a higher service priority than a communication session for a lower priority user. Thus service priority for communication session data can be specified based on a variety of different considerations.

In the scenario the quality manager identifies the various communication components involved in transferring the media flow between the client terminals e.g. the communication components . As discussed above the quality manager has access to topology for the particular network s involved in a communication session and thus is able to identify components involved in various transactions within the network s .

The quality manager pushes the updated service policies to the communication components as well as to other components involved in handling the media flow . For instance the quality manager pushes the updated service policies to ingress switches involved in routing of the media flow . Alternatively or additionally the updated service policies can be pulled by one or more components from the quality manager . According to one or more embodiments the updated service policies are pushed to the various components separate e.g. out of band from the media flow and or other communication between the client terminals .

Thus the communication components are configured with the updated service policies . The service policies for example are replaced and or reconfigured with the updated service policies .

Based on the updated service policies the communication component and or the communication component identify the media flow based on the identifier e.g. the 5 tuple and retag the media flow with the service priority designator to generate tagged media flow . The media flow for instance is retagged from BE to a higher service priority e.g. AF EF and so forth to generate the tagged media flow . The tagged media flow is routed and or processed by the communication components based on the service priority designator . For instance bandwidth is allocated to the tagged media flow based on the service priority designator .

As referenced above the updated service policies may include updated bandwidth allocations for different service priorities. Thus the communication components can apply the updated bandwidth allocations to the tagged media flow and other media flows that pass through the communication components.

In at least some embodiments when the communication session between the client terminals is complete the updated service policies are removed from the communication components . For instance an End Dialog event can be sent to the communication components indicating that the communication session and thus the tagged media flow is terminated. In response the communication components can delete the updated service policies . Additionally or alternatively an aging function can also be implemented such that the updated service policies are deleted if no communication traffic between the client terminals is detected after a specified period of time has elapsed. Thus if the End Dialog event is lost invoking the aging function can nonetheless enable the updated service policies to be deleted.

Accordingly the scenario illustrates that service policies can be dynamically updated and propagated to various network entities and that media flows can be tagged and retagged e.g. dynamically and on the fly with different service priority designations.

In at least some embodiments techniques discussed herein can be employed to handle problems that may occur during a communication session. For instance consider the following.

In the scenario the communication service receives a notification of a problem in the tagged media flow . The notification for example indicates one or more problems with the tagged media flow such as dropped packets excess litter and or packet delay and so forth. The notification can be sent to the communication service by any suitable entity such the communication components one of the client terminals and or other entity involved in the communication session.

In response to receiving the notification the communication service notifies the quality manager of the problem via a notification . The notification for example can include a Bad Session notification that identifies the problem such as dropped packets excess jitter and or packet delay and so forth. In response to receiving the notification the quality manager determines a location or locations where the problem is occurring and or initiating. As discussed above the quality manager knows the routing path for the tagged media flow and thus can ascertain settings and performance attributes e.g. packet ingress and egress rates for different components involved in the routing path.

Further to the scenario the quality manager determines that the problem is occurring at the communication component . The quality manager for instance determines that packets are being dropped by the communication component that excess packet jitter and or packet delay is occurring at the communication component and or other media flow related problem s .

In this particular example scenario the quality manager determines that an amount of bandwidth allocated for the tagged media flow is insufficient. Thus the quality manager determines one or more ways of dealing with the problem. For instance the quality manager emits a notification to the communication component which instructs the communication component to increase its bandwidth allocation for the tagged media flow . The notification for example instructs the communication component to increase its bandwidth allocation for the service priority designated for the tagged media flow . Increasing the bandwidth allocation increases packet throughput of the communication component and thus may lessen or eliminate the problem with the tagged media flow .

In at least some embodiments the notification can include an update or a replacement for a service policy of the communication component . The notification for instance can include a bandwidth reallocation that allocates additional bandwidth for the service priority designated for the tagged media flow .

As an alternative or addition to the notification to the communication component the quality manager can reconfigure a routing path for the tagged media flow . For instance the quality manager can identify one or more other communication components that are available to route the tagged media flow between the client terminals . The other communication component s for example may have more bandwidth availability than the communication component . Thus the quality manager can push the reconfigured routing path out to the appropriate communication components which can then route the tagged media flow according to the reconfigured routing path. In at least some embodiments the reconfigured routing path may circumvent the communication component and thus avoid flow problems that may be introduced by the communication component .

Having discussed some example implementation scenarios consider now a discussion of some example procedures in accordance with one or more embodiments.

The following discussion describes some example procedures for service policies for communication sessions in accordance with one or more embodiments. The example procedures may be employed in the environment of the system of and or any other suitable environment. In at least some embodiments the steps described for the various procedures can be implemented automatically and independent of user interaction.

Step configures a notification event for propagating attributes of a communication session. The notification event for instance can be configured using an application programming interface API that can be leveraged to configure and communicate session information to various network components involved in a communication session. For example the API can identify dialogue events and session events for which attributes of a communication session can be identified. Consider for instance the following events and attributes that may be conveyed via a notification event generated by the API 

These events apply to various portions of a communication session such as the start update and end of a communication session. A dialogue event can include one or more of the following example attributes.

 1 Timestamp This attribute can be leveraged to specify timestamps for a start of a communication session updates that occur during a communication session and an end e.g. termination of a communication session.

 2 Source IP Address This attribute can be leveraged to specify an IP address for a device that is a source of media during a communication session e.g. a device that initiates a communication session.

 3 Destination IP Address This attribute can be leveraged to specify an IP address for a device that is to receive media as part of a communication session.

 4 Transport Type This attribute can be leveraged to specify a transport type or combination of transport types for a communication session. Examples of transport types include Transmission Control Protocol TCP User Datagram Protocol UDP and so forth.

 5 Source Port this attribute can be leveraged to specify an identifier for a port at a source device e.g. a source device identified by the Source IP Address referenced above.

 6 Destination Port This attribute can be leveraged to specify an identifier for a port at a destination device e.g. a destination device identified by the Destination IP Address referenced above.

 7 Media Type This attribute can be leveraged to specify a media type and or types that are to be transmitted and or are being transmitted as part of a communication session. As discussed elsewhere herein the communication session can involve multiple different types of media. Thus the Media Type attribute can be employed to identify media types in a communication session such as for applying the service policies discussed herein.

 8 Bandwidth Estimation This attribute can be leveraged to specify an estimated bandwidth that is to be allocated for a communication session. The estimated bandwidth for instance can be based on various factors such as a privilege level associated with a user type and or types of media included in a communication session and so forth.

 9 To This attribute can be leveraged to identify a user to which media in a communication session is to be transmitted.

 10 From This attribute can be leveraged to identify a user from which media and a communication session is transmitted.

 11 Error Code This attribute can be leveraged to specify various error codes for pairs that may occur as part of a communication session. For example errors can include errors that occur during initiation the communication session errors that occurred during a communication session errors that occur when a communication session is terminated and so forth.

These events can be generated and applied when a communication session experiences errors performance degradation and so forth. A session problem event may include one or more of the attributes discussed above with reference to Dialogue Events and may also include one or more of the following attributes.

 1 Mean Opinion Score MOS Degradation This attribute can be leveraged to specify a MOS for a communication session. The attribute for instance can be used to indicate that an overall quality of a communication session has decreased.

 2 Jitter Inter Arrival Time This attribute can be leveraged to specify jitter values for a communication session. The attribute for instance can be used to indicate that a jitter value or values have increased e.g. have exceeded a specified jitter value threshold.

 3 Packet Loss Rate This attribute can be leveraged to specify a packet loss rate for a communication session. The attribute for instance can be used to indicate that a packet loss rate has increased e.g. has exceeded a specified packet loss rate value threshold.

 4 Round Trip Delay RTD This attribute can be leveraged to specify RTD values for packets in communication sessions. The attribute for instance can be used to indicate that RTD values for packets have increased e.g. have exceeded a specified RTD value threshold.

 5 Concealment Ratio This attribute can be leveraged to specify a cumulative ratio of concealment time over speech time observed after starting a communication session. The attribute for instance can be used to specify that a concealment ratio has increased e.g. has exceeded a specified concealment ratio value threshold.

Step propagates the notification event to network components involved in the communication session. The quality manager for example can configure the notification event with various attributes discussed above such as for communicating Dialogue Events and or Session Problem Events. The notification event for instance can include attribute values for various attributes for service policies and can be used to propagate the service policies as discussed herein. The quality manager can propagate the notification event to the network components to enable the network components to apply associated service policies to a communication session. In at least some embodiments the procedure described above can be employed to propagate service policies to various network components and or to initiate remedial procedures for problems that may occur during a communication session.

According to various embodiments notification events can be configured to propagate e.g. via the API discussed above different types of service policies to network components. For instance consider the following example procedure.

Step generates initialization service policies for initiation of communication within a communication network. The initialization service policies for instance can specify default service priority designations for specific types of communication data. As discussed above the initialization service policies can specify that signaling to initiate a communication session is to be tagged with a high e.g. preferred service priority. The initialization service policies can further specify that media data is to be tagged or retagged as a lower service priority such as BE service priority. Still further the initialization service policies can specify bandwidth allocations for different service priorities for data in the communication network. The initialization service policies can specify other rules and actions not specifically discussed herein for data in a communication network.

Step propagates the initialization service policies to components of the communication network. For example with reference to the environment discussed above the quality manager can propagate the initialization service policies to the communication components . According to various embodiments this causes the components to be configured with the initialization service policies such that the components can apply the initialization service policies to communication data.

Step receives a notification that a communication session is initiated in the communication network. The notification for example includes attributes of the communication session such as identifiers for client devices involved in the session types of media involved and so forth. As an example consider the notification discussed above with reference to . The notification includes 5 tuple information which can be used to identify a specific communication session e.g. to differentiate the communication session from other communication sessions. In at least some embodiments the notification includes an indication that the communication session is authorized within the communication network e.g. is from an authenticated user. The notification for example can include a security key a hash value an authentication factor and or mechanism indicating that the notification is from an authenticated source that is authorized to issue such notifications.

Step generates updated service policies for the communication session. The updated service policies for example specify a new service priority designation for data of the communication session. For instance the updated service policies specify that media data for the communication session is to be tagged with a higher service priority such as EF. The updated service policies may include other types of information such as updated bandwidth allocations updated routing paths and so forth. For example the updated service policies can include different bandwidth allocations for different service priority different media types and so forth.

As referenced above the updated service policies can be specific to the communication session. For instance the updated service policies include an identifier for the communication session e.g. 5 tuple information for the session. Thus in at least some embodiments the updated service policies are to be applied to the communication session and not to other communication sessions.

Step identifies the components included in a routing path for the communication session. The quality manager discussed above for example can identify the various components e.g. routers switches and so forth that make up the routing path.

Step propagates the updated service policies to the components included in the routing path. The quality manager for instance transmits the updated service policies to the components identified as being in the routing path. As referenced above service policies can be transmitted to various components separately from a communication session e.g. as an out of band data transmission. The components can be reconfigured based on the updated service policies and can apply the updated service policies to the communication session. The updated service policies for example can replace and or override some or all of the initialization service policies and thus can be applied in place of at least some of the initialization service policies.

According to various implementations service policies for a communication session are removed when the communication session terminates and or expires. For instance consider the following example procedure.

Step removes service policies for the communication session from components involved in the communication session. The components for example can be notified that the communication session has been terminated and that any service policies for the communication session are to be removed. Alternatively or additionally an aging function can be invoked that specifies that since no data packets have been exchanged in the communication session for a specified period of time service policies for the communication session are to be removed.

Thus techniques discussed herein enable service policies to be generated and updated dynamically on a per session basis. Further service policies for a particular communication session are removed upon termination and or expiration of the communication session.

In at least some embodiments techniques discussed herein can be employed to remedy problems that may occur during a communication session. For instance consider the follow example procedure.

Step identifies a network component that is a source of the problem. For instance the quality manager determines that packet throughput at a particular communication component is insufficient e.g. that a packet ingress rate at the component is significantly higher than a packet egress rate such that packets are being dropped at the component excess jitter and or delay is occurring at the component and so forth.

The quality manager may also determine that one or more settings of the network component are causing the problem. For instance a bandwidth allocation for the communication session may be insufficient to handle data traffic through the component. As reference above the bandwidth allocation may refer to bandwidth allocation for the particular service priority for the communication session for the media type or types for the communication session and so forth.

Step initiates a remedial procedure for the problem. The quality manager for example can notify the identified network component that bandwidth allocation for the communication session is insufficient. In response the network component can allocate additional bandwidth to the communication session. For instance the network component can allocate additional bandwidth to a service priority designated for the communication session and or for a media type or types associated with the communication session.

Alternatively or additionally the quality manager can remap a routing path for the communication session. For instance the quality manager can generate a routing path that circumvents the network component that is the source of the problem. The quality manager can propagate the remapped routing path to one or more entities involved in the communication session such as client terminals that are communicating via the communication session a communication service that initiates and or mediates the communication session intermediary network components involved in routing the communication session and so forth. Thus the remapped routing path can be applied such that the communication session avoids the network component that is the source of the problem.

Having discussed some example procedures consider now a discussion of an example system and device in accordance with one or more embodiments.

The example computing device as illustrated includes a processing system one or more computer readable media and one or more Input Output I O Interfaces that are communicatively coupled one to another. Although not shown the computing device may further include a system bus or other data and command transfer system that couples the various components one to another. A system bus can include any one or combination of different bus structures such as a memory bus or memory controller a peripheral bus a universal serial bus and or a processor or local bus that utilizes any of a variety of bus architectures. A variety of other examples are also contemplated such as control and data lines.

The processing system is representative of functionality to perform one or more operations using hardware. Accordingly the processing system is illustrated as including hardware element that may be configured as processors functional blocks and so forth. This may include implementation in hardware as an application specific integrated circuit or other logic device formed using one or more semiconductors. The hardware elements are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions.

The computer readable media is illustrated as including memory storage . The memory storage represents memory storage capacity associated with one or more computer readable media. The memory storage may include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . The memory storage may include fixed media e.g. RAM ROM a fixed hard drive and so on as well as removable media e.g. Flash memory a removable hard drive an optical disc and so forth . The computer readable media may be configured in a variety of other ways as further described below.

Input output interface s are representative of functionality to allow a user to enter commands and information to computing device and also allow information to be presented to the user and or other components or devices using various input output devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone e.g. for voice recognition and or spoken input a scanner touch functionality e.g. capacitive or other sensors that are configured to detect physical touch a camera e.g. which may employ visible or non visible wavelengths such as infrared frequencies to detect movement that does not involve touch as gestures and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card tactile response device and so forth. Thus the computing device may be configured in a variety of ways as further described below to support user interaction.

Various techniques may be described herein in the general context of software hardware elements or program modules. Generally such modules include routines programs objects elements components data structures and so forth that perform particular tasks or implement particular abstract data types. The terms module functionality and component as used herein generally represent software firmware hardware or a combination thereof. The features of the techniques described herein are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

An implementation of the described modules and techniques may be stored on or transmitted across some form of computer readable media. The computer readable media may include a variety of media that may be accessed by the computing device . By way of example and not limitation computer readable media may include computer readable storage media and computer readable signal media. 

 Computer readable storage media may refer to media and or devices that enable persistent storage of information in contrast to mere signal transmission carrier waves or signals per se. Computer readable storage media do not include signals per se. The computer readable storage media includes hardware such as volatile and non volatile removable and non removable media and or storage devices implemented in a method or technology suitable for storage of information such as computer readable instructions data structures program modules logic elements circuits or other data. Examples of computer readable storage media may include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage hard disks magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other storage device tangible media or article of manufacture suitable to store the desired information and which may be accessed by a computer.

 Computer readable signal media may refer to a signal bearing medium that is configured to transmit instructions to the hardware of the computing device such as via a network. Signal media typically may embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier waves data signals or other transport mechanism. Signal media also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media.

As previously described hardware elements and computer readable media are representative of instructions modules programmable device logic and or fixed device logic implemented in a hardware form that may be employed in some embodiments to implement at least some aspects of the techniques described herein. Hardware elements may include components of an integrated circuit or on chip system an application specific integrated circuit ASIC a field programmable gate array FPGA a complex programmable logic device CPLD and other implementations in silicon or other hardware devices. In this context a hardware element may operate as a processing device that performs program tasks defined by instructions modules and or logic embodied by the hardware element as well as a hardware device utilized to store instructions for execution e.g. the computer readable storage media described previously.

Combinations of the foregoing may also be employed to implement various techniques and modules described herein. Accordingly software hardware or program modules and other program modules may be implemented as one or more instructions and or logic embodied on some form of computer readable storage media and or by one or more hardware elements . The computing device may be configured to implement particular instructions and or functions corresponding to the software and or hardware modules. Accordingly implementation of modules that are executable by the computing device as software may be achieved at least partially in hardware e.g. through use of computer readable storage media and or hardware elements of the processing system. The instructions and or functions may be executable operable by one or more articles of manufacture for example one or more computing devices and or processing systems to implement techniques modules and examples described herein.

As further illustrated in the example system enables ubiquitous environments for a seamless user experience when running applications on a personal computer PC a television device and or a mobile device. Services and applications run substantially similar in all three environments for a common user experience when transitioning from one device to the next while utilizing an application playing a video game watching a video and so on.

In the example system multiple devices are interconnected through a central computing device. The central computing device may be local to the multiple devices or may be located remotely from the multiple devices. In one embodiment the central computing device may be a cloud of one or more server computers that are connected to the multiple devices through a network the Internet or other data communication link.

In one embodiment this interconnection architecture enables functionality to be delivered across multiple devices to provide a common and seamless experience to a user of the multiple devices. Each of the multiple devices may have different physical requirements and capabilities and the central computing device uses a platform to enable the delivery of an experience to the device that is both tailored to the device and yet common to all devices. In one embodiment a class of target devices is created and experiences are tailored to the generic class of devices. A class of devices may be defined by physical features types of usage or other common characteristics of the devices.

In various implementations the computing device may assume a variety of different configurations such as for computer mobile and television uses. Each of these configurations includes devices that may have generally different constructs and capabilities and thus the computing device may be configured according to one or more of the different device classes. For instance the computing device may be implemented as the computer class of a device that includes a personal computer desktop computer a multi screen computer laptop computer netbook and so on.

The computing device may also be implemented as the mobile class of device that includes mobile devices such as a mobile phone portable music player portable gaming device a tablet computer a multi screen computer and so on. The computing device may also be implemented as the television class of device that includes devices having or connected to generally larger screens in casual viewing environments. These devices include televisions set top boxes gaming consoles and so on.

The techniques described herein may be supported by these various configurations of the computing device and are not limited to the specific examples of the techniques described herein. For example functionalities discussed with reference to the communication service and or the quality manager may be implemented all or in part through use of a distributed system such as over a cloud via a platform as described below.

The cloud includes and or is representative of a platform for resources . The platform abstracts underlying functionality of hardware e.g. servers and software resources of the cloud . The resources may include applications and or data that can be utilized while computer processing is executed on servers that are remote from the computing device . Resources can also include services provided over the Internet and or through a subscriber network such as a cellular or Wi Fi network.

The platform may abstract resources and functions to connect the computing device with other computing devices. The platform may also serve to abstract scaling of resources to provide a corresponding level of scale to encountered demand for the resources that are implemented via the platform . Accordingly in an interconnected device embodiment implementation of functionality described herein may be distributed throughout the system . For example the functionality may be implemented in part on the computing device as well as via the platform that abstracts the functionality of the cloud .

Discussed herein are a number of methods that may be implemented to perform techniques discussed herein. Aspects of the methods may be implemented in hardware firmware or software or a combination thereof. The methods are shown as a set of steps that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. Further an operation shown with respect to a particular method may be combined and or interchanged with an operation of a different method in accordance with one or more implementations. Aspects of the methods can be implemented via interaction between various entities discussed above with reference to the environment .

Techniques for service policies for communication sessions are described. Although embodiments are described in language specific to structural features and or methodological acts it is to be understood that the embodiments defined in the appended claims are not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as example forms of implementing the claimed embodiments.

