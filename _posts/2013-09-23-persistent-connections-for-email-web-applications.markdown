---

title: Persistent connections for email web applications
abstract: A token for a webclient in communication with an HTTP server to access an email system is stored at a database by the HTTP server. If the HTTP server is unexpectedly unavailable, a backup HTTP server that next interacts with the webclient can locate the token for the webclient using identifying information for the webclient to locate a record in the database containing the token. The backup HTTP server can then provide seamless access to the email system for the webclient despite the loss of connectivity to the initial HTTP server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09118650&OS=09118650&RS=09118650
owner: Amazon Technologies, Inc.
number: 09118650
owner_city: Seattle
owner_country: US
publication_date: 20130923
---
Many services offered to users via the Internet such as email services provide a web interface webclient that allows users to interact with a server using a web browser. User connectivity to such servers is facilitated by one or more web servers typically Hypertext Transfer Protocol HTTP servers that retrieve data in response to user web page requests and host web applications. Mail servers and web servers are typically located in a data center or some other facility remote from the user. Redundancy is usually built into such systems with redundant servers providing service in the event of a failure of a primary server and redundant communications links connected to the Internet to provide service in the event of a failure of one or more communications links.

When a user attempts to access an email system using a webclient the webclient connects to a web email application hosted by an HTTP server and sets up a communications session with the HTTP server. Upon initiating such a session some form of authentication is normally required by the HTTP server. This may take the form of a username and password combination access key token or some other form of user identity verification. Upon authenticating the user the HTTP server may provide access to the user s email account and information on the mail server via the web email application hosted by the HTTP server. If there is a failure of the HTTP server hosting the web email application being used by the webclient or if the connection between the HTTP server and the webclient fails the webclient is likely to be directed to a backup HTTP server hosting another web email application. When this happens the user may have to provide authentication information again because the user s authentication information has not been received by or stored at the backup HTTP server.

Email systems and many social websites and other interactive websites require user accounts for access and full utilization of the provided features. This is to ensure that each user s private information remains private and to ensure that only authorized users are permitted to take advantage of the services and features provided by the website or email system. Systems and methods in accordance with the various embodiments of the present disclosure provide the ability to automatically save and reuse authentication information for a user if a connection to a server e.g. an HTTP server is lost during a communication session between the server and a webclient being operated by the user to interact with the website or email system. For example a user may be interacting with an email system using a webclient after authenticating the user s identity with the HTTP server hosting a web application that provides access to the email system. If the HTTP server facilitating the user s access to the email system fails or otherwise becomes inaccessible the user s authentication information may be lost because such information may be stored only locally on the HTTP server. The user s webclient may then be redirected to a backup or alternate HTTP server upon its next attempt to interact with the email system and the user may have to provide authentication information to the backup HTTP server in order to continue interaction with the email system. In an embodiment the HTTP server with which the webclient was initially communicating may store the user s authentication information in a database that is accessible to one or more back up HTTP servers. Upon failure of a connection to an initial HTTP server a backup HTTP server may upon receiving a request from a webclient for email system access retrieve the stored authentication information from the database using identifying information associated with the webclient and or the user. In this way the user maintains access to the email system without having to provide authentication information again presenting a seamless interface to the user despite the failure of the initial HTTP server or a connection thereto. While many of the examples discussed herein are discussed in terms of email and mail servers and systems one skilled in the art will appreciate that the disclosed embodiments can be readily applied to any system where a lack of connectivity may occur during a communications session with a system that requires user authentication. All such applications are contemplated as embodiments that are within the scope of the present disclosure.

Webclient may be communicating with HTTP server that connects to Internet using communications link that like communications link may be any type and number of communications links. HTTP server may host and provide access to mail server using a web application executing on HTTP server . Through such a web application HTTP server may receive email data from and transmit email data to webclient . HTTP server may also in an embodiment using a web application executing on HTTP server exchange email data with mail server via communications link that may also be any type and number of communications links.

Mail server and or HTTP server may require authentication for users attempting to interact with mail server . When a user operating webclient initially attempts to access mail server via HTTP server and in some embodiments via a web application executing on HTTP server HTTP server may request authentication information from webclient . Such authentication information may take any form including a username and password combination an access key a token or some other form of user or device identity verification. Upon receiving authentication information from webclient HTTP server may transmit such authentication information to mail server for verification. Note that the authentication information sent by HTTP server may include any other information that may be used to verify the identity of webclient device and or a user thereof. This additional information may be included in the authentication information provided by webclient or it may be added by HTTP server to the authentication information provided by webclient . Mail server may transmit the authentication information received from HTTP server to authentication server via communications link that may be any type and number of communications links. This transmission may include a request to verify the identity of webclient device or a user thereof.

Upon receipt of the authentication information from mail server authentication server may authenticate or otherwise verify the information. If authentication server determines that the authentication information does not authenticate or is otherwise not verifiable it may send an indication to mail server indicating a failure to authenticate the authentication information. Mail server may then send an indication or message reflecting the failure of authentication to HTTP server which may relay the authentication failure information to webclient .

Upon successful authentication of the identity of webclient device or a user thereof based on the authentication information provided to it authentication server may generate a token that is associated with webclient device or a user thereof and may transmit the token to mail server which may provide the token to HTTP server . Upon receipt of the token HTTP server may begin to provide email system access to webclient . HTTP server may store the token locally e.g. local memory hard disk . In an embodiment HTTP server may also or instead store the token or a copy thereof in database via communications link . Communications link may be any type and number of communications links. Database represents any type and number of databases and database systems including a cloud based database system as well as any number and type of memory cache disk drive etc. Database also represents any form of storage that may be used to store any amount and type of data. In an embodiment HTTP server may generate upon authentication of webclient a session identifier that maybe stored at HTTP server and that may be transmitted to webclient for local storage at device for example in a cookie . Any storage of the token may be performed securely using encrypted files communications communications links etc. regardless of whether the token is stored locally or remotely.

The record containing the token may be identified or otherwise associated with webclient device or a user thereof. For example a webclient identifier e.g. session identifier may be used to identify the record associated with the token in database . Any other means of associating a record for a token with webclient device or a user thereof may be used and all such embodiments are contemplated as within the scope of the present disclosure.

HTTP server may provide redundancy to users by serving as a backup HTTP server for HTTP server . HTTP server may connect to other devices using communications link and may communicate with database and mail server using communications links and respectively. Each of communications links and may be any type and number of communications links. Note that each of communications links and is shown with less emphasis in only to make clear that in webclient and other devices are communicating using other links rather than communications links and . The various widths and emphases of the communications links shown in the instant figures should not be understood to be an indication of any other characteristic feature or limitation of the illustrated communications links.

In an alternative embodiment HTTP server may become unavailable due to failure to successfully communicate over one or more of communications links and . In such embodiments HTTP server or another system or device may determine that communication over one or more of these links is not functional and cause HTTP traffic for webclient to be diverted to HTTP server even though HTTP server itself may otherwise be functional. Once HTTP server is no longer available to service webclient traffic from webclient may be redirected to HTTP server . This may happen automatically using any means and methods and may be transparent to webclient and or the user thereof.

Like HTTP server HTTP server may be executing a web application that facilitates communication between webclients and mail server . Upon receiving a request for interaction with mail server from webclient HTTP server may determine whether a valid token associated with webclient device or a user thereof is present at database . HTTP server may use information available from the request for mail system access received from webclient to identify any records in database associated with webclient device or a user thereof. For example the request may include a webclient identifier e.g. session identifier that may be used to identify a record associated with webclient device or a user thereof in database . Any other means of locating a record associating a token with webclient device or a user thereof are contemplated. If no token is present or if the token present on database is not valid e.g. expired HTTP server may initiate a normal authentication process with webclient .

If a token is present at database database may provide HTTP server with a copy of the token in its reply to HTTP server s query. HTTP server may send the token to mail server and or authentication server with a request to determine whether the token is valid. A response may be received from one or both of these servers at HTTP server indicating the validity of the token. If the token is not valid HTTP server may begin standard authentication procedures to authenticate webclient . HTTP server may also remove the invalid token from the database. If the token is valid HTTP server may begin interacting with webclient and mail server to provide email system access to webclient as if webclient had initially authenticated via HTTP server thus providing a seamless transition from HTTP server to HTTP server to a user of webclient .

Note that while the devices of are described separately and individually these devices may be physically combined or may be several devices physically distributed across one or more datacenters or other geographical locations. For example mail server and authentication server may be a single device or the functions associated with mail server and authentication server may be performed by one or more devices. Note also that the connections between devices may be secured using authentication and or any other means to ensure that data exchanges between devices are less likely to be intercepted or if intercepted less likely to be decipherable to any non intended recipients. All such embodiments are contemplated as within the scope of the present disclosure.

At operation the received authentication information may be provided to the mail server. The mail server may use this information to interact with an authentication server to determine if the authentication information can be verified. At operation a response may be received from the mail server indicating whether the authentication was successful. If the response received from the mail server indicates that authentication was not successful at operation the HTTP server may notify the webclient of the authentication failure. In some embodiments the HTTP server may again request authentication information returning to operation .

Where the authentication is successful the response received at operation may include a token or other data that may be used to indicate to an HTTP server that a device has been authenticated. Such token or data may be stored locally by the HTTP server. At operation the HTTP server may store the token or other such data at a database associating the record containing the token or other data with for example a webclient identifier or communications session identifier e.g. a session identifier for the webclient and or the particular communications session in which the webclient and the HTTP server are engaged that may be used to identify a record associated with the webclient a device executing the webclient or a user of the webclient. Note that a session identifier or other identifying information may have been provided to the webclient by the HTTP server and the webclient may store such information on the user device executing the webclient in some embodiments as a cookie or data stored by a web browser executing on the user device. Alternatively any other means of identifying a record as associated with the webclient a device executing the webclient or a user of the webclient are contemplated. Any storage of the token may be performed securely using encrypted files communications communications links etc. regardless of whether the token is stored locally or remotely. At operation the HTTP server may provide email system access to the webclient with operating procedures ending at operation .

Note however that in some embodiments the HTTP server that originally provided service to the webclient may fail or connectivity between the HTTP server and webclient may fail for some reason after establishing a communications session authenticating the webclient and storing a token or other authentication data in a database. In such embodiments a backup or redundant HTTP server may then take over HTTP server functions for the webclient. depicts example operating procedures for an HTTP server according to such an embodiment. Operating procedures begin with operation and move to operation where a backup HTTP server may receive a request for access to an email system from a webclient. At operation the HTTP server may transmit a request to a database to determine whether a token or other authentication information for the webclient a device executing the webclient or a user of the webclient is present in the database. This operation may include constructing and transmitting a database query to a database. Such a query may include identifying information associated with the webclient the device executing the webclient or the user operating the webclient that can be used to look up a record in the database or determine that no such record exists. Such identifying information may take the form of a session identifier that identifies the webclient and or the particular communication session previously underway between the webclient and its former HTTP server.

At operation a response may be received from the database including a token or other authentication information for the webclient a device executing the webclient or a user of the webclient is present in the database. At operation the HTTP server may determine whether the response received at operation includes a valid token or other authentication information for the webclient a device executing the webclient or a user of the webclient is present in the database. This may be done by the HTTP server sending the token to a mail server and or an authentication server for such a server to determine toke validity. A response may be received from such a server at the HTTP server indicating the validity of the token. If the token is not valid at operation the HTTP server may begin standard authentication procedures such as those described in regard to . The HTTP server may also remove the invalid token from the database. If there is valid authentication information in the database at operation the HTTP server may provide email system access to the webclient with operating procedures ending at operation .

Note that in some embodiments an HTTP server may interact directly with an authentication server and may provide a token or other indication of successful authentication to a mail server as well as storing the token or other authentication information in a database. Alternatively the mail server may store the token or other authentication information in a database. In another embodiment the authentication server may store the token or other authentication information in a database. In such embodiments any information needed to perform these functions may be exchanged amongst the devices. For example where a mail server or an authentication server stores a token or other authentication information at a database the mail server or authentication server may receive identifying information for a webclient a device executing the webclient or a user of the webclient is present in the database from the HTTP server so that such identifying information can be used to identify the record in which the token or other authentication information is stored. All such embodiments are contemplated as within the scope of the present disclosure.

Note that as mentioned above the embodiments set forth herein are not limited to use with email service providers but may also be used in any system where a user operating a webclient may be authenticated and a connection to an HTTP server may be disrupted during the composition process. For example many social media websites and other websites that restrict public access may require users to authenticate themselves before obtaining full access to the website. One skilled in the art will appreciate that the disclosed embodiments can be readily applied to such systems and all such applications are contemplated as embodiments that are within the scope of the present disclosure.

It may be appreciated that these operating environments of may be used to implement aspects of the operating environments of . For example HTTP servers and mail server database mail server and authentication server may be implemented in a datacenter of or across multiple datacenters of . Likewise Internet of may be wide area network of and user device may be customer computing system of .

Within a datacenter of HTTP servers and mail server database mail server and authentication server may each be a server computer or of which itself may be computer of . Communications links and of may be portions of local area network of .

Turning now to details of depicts an example of a suitable computing environment in which embodiments described herein may be implemented. A cloud service provider such as computing service platform may configure the illustrated computing environment to host virtual clouds of entities and to enable communication paths between these virtual clouds that may otherwise be isolated. In particular is a system and network diagram that shows an illustrative operating environment that includes a computing service platform for implementing virtual clouds and for providing on demand access to computing resources such as virtual machine instances. Computing service platform can provide computing resources for executing applications on a permanent or an as needed basis and may be configured as a private network. These computing resources may include various types of resources such as data processing resources data storage resources data communication resources and the like. Each type of computing resource may be general purpose or may be available in a number of specific configurations. For example data processing resources may be available as virtual machine instances. The instances may be configured to execute applications including mail servers web servers HTTP servers storage servers application servers media servers database servers and the like. Data storage resources may include file storage devices block storage devices and the like.

Each type or configuration of computing resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Entities may choose to allocate a number of small processing resources as web servers HTTP servers and or one large processing resource as a database server for example.

The computing resources provided by computing service platform may be enabled by one or more datacenters A N which may be referred herein singularly as datacenter or in the plural as datacenters . Datacenters may be facilities that house and operate computer systems and associated components and may include redundant and backup power communications cooling and security systems. Datacenters may be located in a same geographical area such as in a same facility and may be interconnected using private networks such as high speed fiber optic networks controlled and managed by a service provider of computing service platform . Datacenters may also be distributed across geographically disparate locations and may be interconnected in part using public networks such as the Internet. One illustrative configuration for datacenter that implements the concepts and technologies disclosed herein is described below with regard to .

Entities of computing service platform may access the computing resources provided by datacenters over a wide area network WAN . Although a WAN is illustrated in it should be appreciated that a local area network LAN the Internet or any other networking topology known in the art that connects datacenters to remote entities and other users may be utilized. It should also be appreciated that combinations of such networks may also be utilized.

One or more entities that are customers of computing service platform may utilize a customer computing system to access the computing resources provided by datacenters . Customer computing system comprise a computer capable of accessing computing service platform such as a server computer a desktop or laptop personal computer a tablet computer a wireless telephone a PDA an e reader a game console a set top box or any other computing device.

As is described in greater detail below customer computing system may be utilized to configure aspects of the computing resources provided by computing service platform . In this regard computing service platform may provide a web interface through which aspects of its operation may be configured through the use of a web browser application program executing on customer computing system . Alternatively a stand alone application program executing on customer computing system may access an application programming interface API exposed by computing service platform for performing the configuration operations. Other mechanisms for configuring the operation of computing service platform including launching new virtual machine instances on computing service platform may also be utilized.

According to embodiments disclosed herein capacities of purchased computing resources provided by computing service platform may be scaled in response to demand. In this regard scaling refers to the process of instantiating which may also be referred to herein as launching or creating or terminating which may also be referred to herein as de scaling instances of computing resources in response to demand.

Auto scaling may be one mechanism for scaling computing resources in response to increases or lulls in demand for the resources. Auto scaling may allow entities of computing service platform to scale their purchased computing resources according to conditions defined by the entity. For instance rules may be defined for scaling up capacity in a particular manner in response to the occurrence of specified conditions such as a spike in demand. Similarly rules may also be defined to scale down capacity in a particular manner in response to the occurrence of other conditions such as a lull in demand. The mechanisms disclosed herein for launching virtual machine instances may be utilized when instances are manually launched by an entity or when instances are launched by an auto scaling component in computing service platform .

Computing service platform may also be configured with a deployment component to assist entities in the deployment of new instances of computing resources. The deployment component may receive a configuration from an entity that may include data describing how new instances should be configured. For example the configuration may specify one or more applications or software components that should be installed in new instances provide scripts and or other types of code to be executed in new instances provide cache warming logic specifying how an application cache should be prepared and other types of information. The deployment component utilizes the entity provided configuration and cache warming logic to launch configure and prime new instances of computing resources.

Instances A N which may be referred herein singularly as instance or in the plural as instances may be virtual machine instances. As known in the art a virtual machine instance is an instance of a software implementation of a machine i.e. a computer that executes programs like a physical machine. In the example of virtual machine instances each server computer may be configured to execute an instance manager capable of executing the instances. Instance manager may be a hypervisor or another type of program configured to enable the execution of multiple instances on a single server computer for example. Each of instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances other types of instances can be utilized with the concepts and technologies disclosed herein. For instance the technologies disclosed herein may be utilized with instances of storage resources instances of data communications resources and with other types of resources. The embodiments disclosed herein may also execute all or a portion of an application directly on a computer system without utilizing virtual machine instances.

Datacenter shown in may also include a server computer reserved for executing software components for managing the operation of datacenter server computers and instances . In particular server computer may execute a management component . As discussed above an entity of computing service platform may utilize customer computing system to access management component to configure various aspects of the operation of computing service platform and instances purchased by the entity. For example the entity may purchase instances and make changes to the configuration of the instances. The entity may also specify settings regarding how the purchased instances are to be scaled in response to demand. The entity may also provide requests to launch instances to management component .

As also described briefly above an auto scaling component may scale instances based upon rules defined by an entity of computing service platform . For example auto scaling component may allow an entity to specify scale up rules for use in determining when new instances should be instantiated and scale down rules for use in determining when existing instances should be terminated.

Auto scaling component may execute on a single server computer or in parallel across multiple server computers in computing service platform . In addition auto scaling component may consist of a number of subcomponents executing on different server computers or other computing devices in computing service platform . Auto scaling component may be implemented as software hardware or any combination of the two. Auto scaling component may monitor available computing resources in computing service platform over an internal management network for example.

As discussed briefly above datacenter may also be configured with a deployment component to assist entities in the deployment of new instances of computing resources. Deployment component may receive a configuration from an entity that includes data describing how new instances should be configured. For example the configuration may specify one or more applications that should be installed in new instances provide scripts and or other types of code to be executed for configuring new instances provide cache warming logic specifying how an application cache should be prepared and other types of information.

Deployment component may utilize the entity provided configuration and cache warming logic to configure prime and launch new instances . The configuration cache warming logic and other information may be specified by an entity using management component or by providing this information directly to deployment component . Other mechanisms may also be utilized to configure the operation of deployment component .

In the example datacenter shown in an appropriate LAN may be utilized to interconnect server computers A N and server computer . LAN may also be connected to WAN illustrated in . It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate load balancing devices or software modules may also be utilized for balancing a load between each of datacenters A N between each of server computers A N in each datacenter and between instances purchased by each entity of computing service platform . These network topologies and devices should be apparent to those skilled in the art.

It should be appreciated that datacenter described in is merely illustrative and that other implementations may be utilized. In particular functionality described herein as being performed by management component auto scaling component and deployment component may be performed by one another may be performed by other components or may be performed by a combination of these or other components. Additionally it should be appreciated that this functionality may be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art.

Computer may include a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. One or more central processing units CPUs may operate in conjunction with a chipset . CPUs may be standard programmable processors that perform arithmetic and logical operations necessary for the operation of computer .

CPUs may perform the necessary operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

Chipset may provide an interface between CPUs and the remainder of the components and devices on the baseboard. Chipset may provide an interface to a random access memory RAM used as the main memory in computer . Chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that may help to start up computer and to transfer information between the various components and devices. ROM or NVRAM may also store other software components necessary for the operation of computer in accordance with the embodiments described herein.

Computer may operate in a networked environment using logical connections to remote computing devices and computer systems through network . Chipset may include functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. NIC may be capable of connecting the computer to other computing devices over network . It should be appreciated that multiple NICs may be present in computer connecting the computer to other types of networks and remote computer systems.

Computer may be connected to a mass storage device that provides non volatile storage for the computer. Mass storage device may store system programs application programs other program modules and data including message attachments and webclient state data which have been described in greater detail herein. Mass storage device may be connected to computer through a storage controller connected to chipset . Mass storage device may consist of one or more physical storage units. Storage controller may interface with the physical storage units through a serial attached Small Computer System Interface SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

Computer may store data on mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of a physical state may depend on various factors and on different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether mass storage device is characterized as primary or secondary storage and the like.

For example computer may store information to mass storage device by issuing instructions through storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. Computer may further read information from mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to mass storage device described above computer may have access to other computer readable storage media to store and retrieve information such as program modules data structures or other data. It will be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile transitory and non transitory removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

Mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises a version of the LINUX operating system. According to another embodiment the operating system comprises a version of the WINDOWS SERVER operating system from the MICROSOFT Corporation. According to further embodiments the operating system may comprise a version of the UNIX operating system. It should be appreciated that other operating systems may also be utilized. Mass storage device may store other system or application programs and data utilized by computer such as management component and or the other software components described above.

Mass storage device or other computer readable storage media may also be encoded with computer executable instructions which when loaded into computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform computer by specifying how CPUs transition between states as described above. Computer may have access to computer readable storage media storing computer executable instructions which when executed by computer may perform operating procedures such as those depicted in .

Computer may also include an input output controller for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

It should be appreciated that the network topologies illustrated in the figures have been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that the systems in the figures are merely illustrative and that other implementations might be used. Additionally it should be appreciated that the functionality disclosed herein may be implemented in software in hardware or in a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing device may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

Each of the operations processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and sub combinations are intended to fall within the scope of this disclosure. In addition certain method or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks operations and states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks operations and states may be performed in serial in parallel or in some other manner. Blocks operations and states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

