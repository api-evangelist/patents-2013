---

title: Dynamic system configuration in a virtual environment
abstract: An example method of launching a virtual machine in a multi-tenant environment using dynamic configuration may include receiving a customer request to launch a virtual machine in the multi-tenant environment. The multi-tenant environment may include a plurality of host server computers. In response to the customer request, configuration parameters stored in association with an account of the customer may be retrieved in the multi-tenant environment. One or more parameters of a hardware and/or a software resource in the multi-tenant environment may be dynamically configured in accordance with the retrieved configuration parameters. The virtual machine may be launched on one of the plurality of host server computers, using the configured hardware and/or software resource. The configuration parameters may be associated with at least one desired performance characteristic of the virtual machine to be launched.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09641385&OS=09641385&RS=09641385
owner: Amazon Technologies, Inc.
number: 09641385
owner_city: Reno
owner_country: US
publication_date: 20131216
---
Cloud computing is the use of computing resources hardware and software that are available in a remote location and accessible over a network such as the Internet. In a computing environment with many computing devices such as a virtual server or cloud computing environment with many server computers the use of computing resources can provide a number of advantages including cost advantages and or the ability to adapt rapidly to changing computing resource needs. Therefore the computing resources such as the host server computers in the cloud computing environment need to be configured optimally. However configuration of computing resources in the cloud environment can be challenging.

For example some cloud computing or virtual server environments provide a limited number of pre defined categories of computing resources for customer selection but with little or no possibility for tenant customizations. Additionally while it is desirable for tenants to reserve and configure computing resource capacity for future need it is also desirable that such reserved computing resource capacity is utilized efficiently so as to maximize profitability and tenant customer satisfaction.

A virtual machine image contains an operating system e.g. Linux and other data needed to launch a virtual machine in a virtual environment. The virtual machine image is similar to a physical computer s disk volume and may include a file system the operating system and other components needed to boot up as a machine. In order to launch a virtual machine hardware needs to be selected. The hardware selection may be accomplished through instance types which may allow a variety of different sizes of memory CPU capacity I O performance and so forth. The combination of the virtual machine image and the instance type can be used to create an instance or a virtual machine which may be launched on a cloud computing resource such as a host server computer.

The following description is directed to techniques and solutions supporting dynamic system configuration. Traditionally hardware configuration for a customer instance is fixed and may be done at server build time. In an embodiment of the disclosure configuration of computing resources in a virtual multi tenant environment may be performed dynamically at instance launch time. For example a configuration control policy may be associated with a tenant or customer where the control policy may specify various requirements or configuration parameters associated with hardware and or software used within the multi tenant environment as well as configuration parameters associated with one or more instances launched at the request of the tenant. The control policy may be used in accordance with an instance launch request so that configuration parameters of the hardware software and or the instance may be implemented as indicated by the policy. In some instances computing resources e.g. a host server computer may be initially allocated for instance launching based on one or more performance metrics collected from a plurality of servers in the multi tenant environment. Performance metrics may include metrics measured reported by one or more sensors in the multi tenant environment which metrics relate to physical characteristics e.g. temperature power consumption etc. and or performance characteristics e.g. disk volume throughput I O operations per second etc. associated with one or more hardware resources within the multi tenant environment.

After a host server computer is initially selected based on the performance metrics the configuration control policy may be used to tweak settings of hardware software and or instance characteristics prior to launching the instance on the selected host server computer. Other examples of dynamic system configuration in the multi tenant environment are described herein below.

The placement manager may comprise suitable circuitry logic and or code and may be operable to determine where to place launch an instance based on one or more placement criteria or placement factors as explained in greater detail below in reference to . For example the placement manager may be operable to determine where to place an instance based on computing capacity utilization and or availability within the environment e.g. as received from the capacity tracker in one or more performance metrics associated with computing resources within the environment and or based on a configuration policy associated with a customer requesting the instance. For example upon receiving a customer request for launching an instance e.g. via communication path the placement manager may initially select one of the servers . . . based on available capacity of the host servers and or based on matching one or more desired performance characteristics specified by the customer e.g. in the request with one or more performance metrics measured in the multi tenant environment as described in reference to .

Additionally the placement manager may use the configuration policy to dynamically configure settings associated with the hardware resources the software resources and or virtual machine settings associated with the virtual machine requested by the customer. The virtual machine instance settings may comprise for example settings related to the virtual machine instance name CPU features location of the server hosting the instance metadata location and name of the Ethernet network communications device used by the instance and so forth.

In operation a customer request to launch a virtual machine within the multi tenant environment may be received by the placement manager . The customer request may be associated with a configuration policy with configuration parameters for dynamic configuration of one or more resources within the environment such as hardware resources and software resources . In one instance the configuration policy may be set by the customer at runtime e.g. as part of an API request . In another instance the configuration policy may be stored as part of the customer account information module and may be accessed using customer identification information e.g. . The customer account information may be stored in a database e.g. implemented with the placement manager as part of a management server or may be implemented as a separate database in a network attached storage .

The placement manager may use the configuration policy and or computing resources availability information e.g. as received from the capacity tracker in and or based on one or more desired performance characteristics specified by the customer with one or more performance metrics measured in the multi tenant environment to initially select e.g. at one of the host servers . . . for launching the requested virtual machine. The placement manager may further use the configuration policy to configure e.g. at one or more of the hardware resources software resources and or virtual machine settings . Thus one or more parameters of hardware and or software can be configured after receiving the launch request. The following are several non limiting examples of settings that may be specified by a configuration policy for dynamic system configuration 

The configuration policy may specify changes to a configuration file of a hypervisor for a selected host server computer e.g. the hypervisor configuration file parameters may be passed to the hypervisor as part of a virtual machine launch request and as part of an API call or may be passed by the placement manager after the configuration policy is retrieved . Changes to the configuration file may include changes to the hypervisor scheduler e.g. change scheduling of requests based on whether scheduling is to be biased towards latency centered workloads or batch centered workloads .

CPU specifics for the server computer hosting the virtual machine e.g. whether or not CPU is pinned to a particular virtual machine number of CPUs CPU family or brand CPU capacity and so forth .

Location of a subnet hosting the metadata server that will be used by the virtual machine e.g. specify the metadata server subnet IP address .

Additional configuration information indicative of a desired behavior of the virtual machine in the multi tenant environment may also be included in the selected configuration policy or any of the remaining configuration policies associated with the requesting customer . The term desired behavior as used herein includes desired physical characteristics e.g. temperature power consumption etc. and settings e.g. a specific value or within a discrete interval of one or more hardware and or software resources initially prior to operation during operation and or at rest as well as any networks that communicatively couple the hardware resources.

The configuration policy e.g. may specify desired settings or properties of a specific virtual machine and or any virtual machine that is to be launched in the multi tenant environment . Furthermore even though the configuration policy e.g. is retrieved by matching a tag e.g. received in a customer request with tags . . . in a customer account information module the present disclosure is not limiting in this regard. More specifically the customer account information module may specify other types of configuration policies as illustrated in .

Configuration policy may specify parameters for configuring any backup of a virtual machine. Configuration policy may specify parameters for configuring settings associated with a virtual network environment. Configuration policy may specify parameters for configuring a specific type of a virtual machine. Such parameters may include RAM capacity CPU storage latency I O characteristics e.g. network I O disk I O memory bandwidth and so forth. For example configuration policy may apply in instances when the customer has selected a pre configured virtual machine but would still like to change hardware and or software settings associated with the pre configured virtual machine.

Configuration policy may specify parameters for configuring a storage volume for use by any of the customer s virtual machines launched in the multi tenant environment. Configuration policy may specify parameters for configuring a firewall used by any of the customer s virtual machines launched in the multi tenant environment.

The configuration policies illustrated in constitute a non exhaustive list of possible configuration policies and other types of configuration policies may also be specified by the customer. Additionally any of the configuration policies . . . may be implemented specified by the customer at virtual machine runtime e.g. as part of an API request or may be stored as part of the customer account information module and accessed using customer identification information e.g. .

At a host server computer may be selected within the multi tenant environment for launching the virtual machine based at least on one performance characteristic of the multi tenant environment. For example the placement manager may use computing resources availability information e.g. as received from the capacity tracker in and or matching of on one or more desired performance characteristics specified by the customer with one or more performance metrics measured in the multi tenant environment to initially select e.g. at one of the host servers . . . for launching the requested virtual machine.

At in response to the customer request configuration parameters stored in association with an account of the customer may be retrieved in the multi tenant environment by matching the customer tag with tags stored in the customer account. For example the customer account information module or the placement manager may match the received tag with the available tags . . . in the customer profile. The matched tag may be tag indicating a configuration policy for use by the placement manager .

At based on the configuration parameters in the configuration policy at least one setting of a hypervisor running on the selected host server computer and or at least one setting of the virtual machine may be dynamically configured e.g. dynamic configuration of the virtual machine settings and or the software resources . At subsequent to the configuring the virtual machine may be launched on the selected host server computer.

The multi tenant environment may further comprise a metrics monitor which may comprise suitable circuitry logic and or code and may be operable to collect the performance metrics from the server sensors and communicate the performance metrics to the placement manager via communication path . The metrics monitor may also communicate e.g. continuously or periodically at a pre determined time interval one or more alarm signals to the placement manager to indicate that one or more of the performance metrics is outside of an acceptable value range e.g. server disk capacity is near maximum or server chassis temperature is nearing a temperature threshold value etc. The placement manager may then trigger a server switch and relocate one or more of the virtual machines running on the server associated with the alert to another server that has available capacity. Even though the metrics monitor is illustrated as a separate module within the environment the present disclosure may not be limited in this regard and the metrics monitor may be implemented as part of for example the placement monitor or another device within the multi tenant environment . In an example embodiment the metrics monitor and or the placement manager may be operable to manage one or more settings globally inside the server environment of host servers . . . . In this regard the metrics monitor and or the placement manager may be operable to configure redundancy settings power distribution hotspot management server load management power consumption management and other settings within the server environment.

In operation the placement manager may receive e.g. via wired and or wireless communication path a customer request for launching a virtual machine on one of the servers . . . . The customer request may comprise virtual machine performance characteristics VMPCs . The VMPCs may include desired characteristics for a new virtual machine and or desired modifications to one or more characteristics of a pre configured virtual machine available for use in the multi tenant environment . Example VMPCs include CPU speed CPU family I O characteristics number of CPUs disk space memory network throughput network latency and so forth. In an example embodiment the VMPCs may be stored maintained by the customer account information module and may be accessed retrieved by the placement manager by accessing the customer account information using customer identification information .

After the VMPCs are received by the placement manager one or more of the VMPCs may be matched by the placement manager with the performance metrics . In this regard if there is a match with one of the servers . . . the requested virtual machine may be initially launched on that server. For example the VMPCs may specify a given processor speed disk space memory and network throughput. The virtual machine will be placed at the host server computer that optimally matches the requested VMPCs. In instances when the virtual machine is already placed at a server and an alarm is generated by the metrics monitor the virtual machine may be moved to another server that matches the initially requested VMPCs and it does not trigger any alarms by the metrics monitor .

In an example embodiment the compute service provider can be established for an organization by or on behalf of the organization. That is the compute service provider may offer a private cloud environment. In another embodiment the compute service provider supports a multi tenant environment wherein a plurality of customers operate independently i.e. a public cloud environment . Generally speaking the compute service provider can provide the following models Infrastructure as a Service IaaS Platform as a Service PaaS and or Software as a Service SaaS . Other models can be provided. For the IaaS model the compute service provider can offer computers as physical or virtual machines and other resources. The virtual machines can be run as guests by a hypervisor as described further below. The PaaS model delivers a computing platform that can include an operating system programming language execution environment database and web server. Application developers can develop and run their software solutions on the compute service provider platform without the cost of buying and managing the underlying hardware and software. The SaaS model allows installation and operation of application software in the compute service provider. In some embodiments end users access the compute service provider using networked client devices such as desktop computers laptops tablets smartphones etc. running web browsers or other lightweight client applications. Those skilled in the art will recognize that the compute service provider can be described as a cloud environment.

The particular illustrated compute service provider includes a plurality of server computers A D. While only four server computers are shown any number can be used and large centers can include thousands of server computers. The server computers A D can provide computing resources for executing software instances A D. In one embodiment the instances A D are virtual machines. As known in the art a virtual machine is an instance of a software implementation of a machine i.e. a computer that executes applications like a physical machine. In the example each of the server computers A D can be configured to execute a hypervisor or another type of program configured to enable the execution of multiple instances on a single server. For example each of the servers A D can be configured e.g. via the hypervisor to support one or more virtual machine partitions with each virtual machine partition capable of running a virtual machine instance e.g. server computer A could be configured to support three virtual machine partitions each running a corresponding virtual machine instance . Additionally each of the instances can be configured to execute one or more applications.

In an example embodiment each of the server computers A D may also comprise a sensor communicatively coupled to the network . The sensor may comprise suitable circuitry logic and or code and may be operable to collect various performance metrics e.g. performance metrics in . For example each of the server sensors may collect network traffic information server CPU utilization server disk and memory space utilization server network throughput server physical characteristics e.g. server chassis temperature average fan speed power usage etc. and so forth.

The compute service provider may also comprise a placement manager . The placement manager may comprise suitable circuitry logic and or code and may be operable to determine which partition in which host server computer can be used to place launch an instance based on one or more placement criteria or placement factors. For example the placement manager may initially determine whether placing an instance in a given server computer is permitted based on operating system OS used by the instance e.g. minimize number of servers using certain operating system so as to minimize licensing costs architecture networking support business requirements and so forth.

If placing the instance is permitted and is not violating any of the above mentioned factors the placement manager may determine an optimal partition in a server computer for launching the instance based on a variety of factors such as density launch concurrency instance caching and service availability.

Density may be associated with how densely occupied with instances a given server is. Density optimization may be performed on a sliding scale since high density improves optimization but low density may reduce the effect of failures and improves the performance of instances. Launch concurrency may be associated with the placement manager avoiding hotspot creation by not launching instances at the same place at the same time. Instance caching may be associated with launching pre configured instances which may have to be stored in a cache at a server computer and a partition near the cache that stores the pre configured instance. Service availability may be associated with the placement manager trying to spread instances from a single customer across single points of failure which reduces the impact per customer of hardware failure . In this regard instances may be spread not only across partitions but also switches see e.g. .

The placement manager may be operable to determine where to place an instance based on the above factors and or based on computing capacity utilization availability within the environment of the compute service provider e.g. as received from the capacity tracker in one or more performance metrics associated with computing resources within the environment of the compute service provider and or based on a configuration policy associated with a customer requesting the instance as explained herein above .

The placement manager may be implemented in a dedicated server similar to the servers A D or may be implemented as part of the server computer that performs management functions. For example the placement manager may be implemented as part of the management component as seen in .

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machines other types of instances can be utilized with the concepts and technologies disclosed herein. For instance the technologies disclosed herein can be utilized with storage resources data communications resources and with other types of computing resources. The embodiments disclosed herein might also execute all or a portion of an application directly on a computer system without utilizing virtual machine instances.

One or more server computers can be reserved for executing software components for managing the operation of the server computers the instances the hypervisors and or the sensors . For example the server computer can execute a management component . A customer can access the management component to configure various aspects of the operation of the instances purchased by the customer. For example the customer can purchase rent or lease instances and make changes to the configuration of the instances. The customer can also specify settings regarding how the purchased instances are to be scaled in response to demand. The management component can further include a policy document to implement customer policies e.g. configuration policies as discussed in reference to .

The server computer may further comprise memory and storage . The memory may be used as processing memory by one or more of the placement manager and or the components . . . . The storage may include one or more databases for storing and maintaining customer account information e.g. one or more configuration policies and or VMPCs as described in reference to respectively . The storage may include the customer account information module and may be implemented as part of the placement manager and or any of the other components of the server computer e.g. as part of the management component .

An auto scaling component can scale the instances based upon rules defined by the customer. In one embodiment the auto scaling component allows a customer to specify scale up rules for use in determining when new instances should be instantiated and scale down rules for use in determining when existing instances should be terminated. The auto scaling component can consist of a number of subcomponents executing on different server computers or other computing devices. The auto scaling component can monitor available computing resources over an internal management network and modify resources available based on need.

A deployment component can be used to assist customers in the deployment of new instances of computing resources. The deployment component can have access to account information associated with the instances such as who is the owner of the account credit card information country of the owner etc. The deployment component can receive a configuration from a customer that includes data describing how new instances should be configured. For example the configuration can specify one or more applications to be installed in new instances provide scripts and or other types of code to be executed for configuring new instances provide cache logic specifying how an application cache should be prepared and other types of information. The deployment component can utilize the customer provided configuration and cache logic to configure prime and launch new instances . The configuration cache logic and other information may be specified by a customer using the management component or by providing this information directly to the deployment component . The instance manager can be considered part of the deployment component.

Customer account information can include any desired information associated with a customer of the multi tenant environment. For example the customer account information can include a unique identifier for a customer a customer address billing information licensing information customization parameters for launching instances scheduling information auto scaling parameters previous IP addresses used to access the account and so forth.

A network can be utilized to interconnect the server computers A D and the server computer . The network can be a local area network LAN and can be connected to a Wide Area Network WAN so that end users can access the compute service provider . It should be appreciated that the network topology illustrated in has been simplified and that many more networks and networking devices can be utilized to interconnect the various computing systems disclosed herein.

In order to access and utilize instances such as instances of a client device can be used. The client device can be any of a variety of computing devices mobile or otherwise including a cell phone smartphone handheld computer Personal Digital Assistant PDA desktop computer etc. The client device can communicate with the compute service provider through an end point which can be a DNS address designed to receive and process application programming interface API requests. In particular the end point can be a web server configured to expose an API. Using the API requests a client device can make requests to implement any of the functionality described herein. Other services which can be internal to the compute service provider can likewise make API requests to the end point . For example the client device may use the API requests to communicate a customer request and a tag as explained in reference to for launching an instance.

Other general management services that may or may not be included in the compute service provider and or within the management component include an admission control e.g. one or more computers operating together as an admission control web service. The admission control can authenticate validate and unpack the API requests for service or storage of data within the compute service provider . The capacity tracker is responsible for determining how the servers need to be configured in order to meet the need for the different instance types by managing and configuring physical inventory in terms of forecasting provisioning and real time configuration and allocation of capacity. The capacity tracker maintains a pool of available inventory in a capacity pool database . The capacity tracker can also monitor capacity levels so as to know whether resources are readily available or limited.

An instance manager controls launching and termination of instances in the network. When an instruction is received such as through an API request to launch an instance the instance manager pulls resources from the capacity pool and launches the instance on a decided upon host server computer. Similar to the instance manager are the storage manager and the network resource manager . The storage manager relates to initiation and termination of storage volumes while the network resource manager relates to initiation and termination of routers switches subnets etc. A network of partitions is described further in relation to and includes a physical layer upon which the instances are launched.

A placement manager may comprise suitable circuitry logic and or code and may have the same functionality as described above in reference to the placement managers and . Additionally the placement manager may implement a health monitoring service e.g. such as the metrics monitor that provides monitoring for resources e.g. performance metrics such as and the applications customers run on the compute service provider . System administrators can also use the monitoring service of the placement manager to collect and track metrics e.g. and gain insight to how applications and server computers are running. For example the monitoring service of the placement manager can allow system wide visibility into application performance and operational health. Metrics generated by the health monitoring service of the placement manager can be stored in the metrics database .

The placement manager may also communicate with the capacity tracker to receive information regarding available partitions and or host servers that can be used for launching an instance. Additionally communications with the admission control may be used to launch an instance and communications with the network of partitions may be used to push configuration changes e.g. from a configuration policy onto hardware and or software resources of the host servers in order to effectuate functionalities described herein.

The router reads address information in a received packet and determines the packet s destination. If the router decides that a different data center contains a host server computer then the packet is forwarded to that data center. If the packet is addressed to a host in the data center then it is passed to a network address translator NAT that converts the packet s public IP address to a private IP address. The NAT also translates private addresses to public addresses that are bound outside of the data center . Additional routers can be coupled to the NAT to route packets to one or more racks of host server computers. Each rack can include a switch coupled to multiple host server computers. A particular host server computer is shown in an expanded view at .

Each host has underlying hardware including a network interface card NIC one or more CPUs e.g. processor memory e.g. memory a sensor e.g. such as a server sensor storage devices not illustrated etc. The hardware layer may implement hardware settings .

Running a layer above the hardware is a hypervisor or kernel layer . The hypervisor or kernel layer can be classified as a type 1 or type 2 hypervisor. A type 1 hypervisor runs directly on the host hardware to control the hardware and to manage the guest operating systems. A type 2 hypervisor runs within a conventional operating system environment. Thus in a type 2 environment the hypervisor can be a distinct layer running above the operating system and the operating system interacts with the system hardware. Different types of hypervisors include Xen based Hyper V ESXi ESX Linux etc. but other hypervisors can also be used. The hypervisor or kernel layer may comprise software settings e.g. settings associated with a configuration file used by the hypervisor .

A management layer can be part of the hypervisor or separated therefrom and generally includes device drivers needed for accessing the hardware . The partitions are logical units of isolation by the hypervisor. Each partition can be allocated its own portion of the hardware layer s memory CPU allocation storage etc. Additionally each partition can include a virtual machine its own guest operating system and its own settings . As such each partition is an abstract portion of capacity designed to support its own virtual machine independent of the other partitions.

In accordance with an example embodiment of the disclosure a placement manager e.g. may be used to implement dynamic configuration functionalities as described herein and to configure one or more of the settings and or other hardware software or virtual machine settings. Any applications executing on the instances can be monitored using the management layer which can then pass the metrics to a health monitoring service e.g. of a placement manager such as for storage in a metrics database. Additionally the management layer can pass to the performance manager e.g. the number of instances that are running when they were launched the operating system being used the applications being run etc. All such metrics can be used by the health monitoring service and stored in a database for subsequent use.

At in response to the customer request configuration parameters stored in association with an account of the customer may be retrieved in the multi tenant environment. For example the placement manager may retrieve a configuration policy e.g. one of . . . and or VMPCs associated with customer account information. At one or more parameters of a hardware and or a software resource in the multi tenant environment may be dynamically configured in accordance with the retrieved configuration parameters. For example the placement manager may dynamically configure based on the retrieved configuration policy and or VMPCs hardware resources software resources and or virtual machine settings . At the placement manager may launch or cause launching of the virtual machine on one of the plurality of host server computers e.g. . . . the virtual machine using the configured hardware and or software resource.

The configuration parameters disclosed herein may be associated with at least one desired performance characteristic e.g. the VMPCs of the virtual machine to be launched. The placement manager may receive performance metrics e.g. associated with one or more of the host server computers e.g. . . . currently running in the multi tenant environment . The placement manager and or the customer account information module may match at least one of the received performance metrics e.g. to the desired performance characteristic e.g. VMPCs . The placement manager may then select the host server computer upon which to launch the virtual machine using the matched performance metrics. In some instances the performance metrics may dynamically change in accordance with use of the hardware resources e.g. in including the host servers . . . in the multi tenant environment e.g. and or .

Additionally the placement manager may also use the configuration parameters e.g. from one of the configuration policies . . . to change properties of the virtual machine as explained in reference to . The received customer request e.g. may be an API including a tag e.g. used to retrieve the configuration parameters e.g. . . . from the customer account e.g. .

At in response to the request configuration information associated with an account of the customer may be retrieved. The configuration information may be indicative of a desired behavior of the virtual machine in the multi tenant environment. For example the placement manager may retrieve a configuration policy e.g. one of . . . or . . . and or VMPCs associated with customer account information. At the placement manager may use the retrieved configuration information to dynamically reconfigure at least one of the host server computers e.g. . . . in the multi tenant environment. Additionally the placement manager may dynamically configure and reconfigure based on the retrieved configuration policy and or VMPCs hardware resources software resources and or virtual machine settings the virtual machine settings may comprise settings of the host server the virtual machine is launched on . At the placement manager may launch or cause launching of the virtual machine on a dynamically reconfigured host server computer of the multi tenant environment.

The dynamically reconfiguring may include changing parameters on a hardware and or a software resource e.g. in the multi tenant environment e.g. that interacts with the virtual machine. The dynamically reconfiguring may also include customizing parameters e.g. of the virtual machine that is launched. Customizing of the parameters of the virtual machine may include modifying a configuration file used by a hypervisor e.g. in of a host server computer e.g. A D to launch the virtual machine on the host server computer the modifying being based on the retrieved configuration information. Customizing of the parameters of the virtual machine may also include setting up an IP address for a metadata server used by the virtual machine.

The configuration information may include a plurality of tags . . . with different customized configurations e.g. . . . of the virtual machine associated with each tag. The dynamically reconfiguring may include configuring a host server computer e.g. A D used for launching the virtual machine within the multi tenant environment configuring a network storage server computer e.g. associated with the virtual machine and configuring at least one network parameter for one or more communication networks e.g. within the multi tenant environment.

At a customer input may be received which input may be associated with at least one desired performance characteristic of the virtual machine to be launched. For example the customer request may include desired performance characteristics e.g. VMPCs . Alternatively the VMPCs may be retrieved by the placement manager from a customer account information database e.g. in . At the placement manager may receive performance metrics e.g. associated with currently running virtual machines in the multi tenant environment. At the placement manager may determine in response to the customer request a host server computer from the host server computers . . . upon which to launch the virtual machine. The determining may be performed by matching at least one of the performance metrics e.g. in the multi tenant environment to the desired performance characteristic e.g. the VMPCs . At the placement manager may launch or cause launching of the virtual machine on the determined host server computer.

The determining of the host server computer may further include analyzing performance metrics not associated with the desired performance characteristics of the virtual machine. For example determining which host server computer to use for launching an instance may be based on analysis of performance metrics that are not associated with the desired VMPCs e.g. placement may be based on temperature characteristics of server chassis power consumption etc. . The performance metrics may dynamically change in accordance with use of hardware resources in the multi tenant environment. The performance metrics may be associated with one or more of the following latency of the currently running virtual machines CPU usage of the currently running virtual machines network bandwidth disk input output associated with the currently running virtual machines network throughput and or power consumption.

The placement manager may be operable to detect that the launched virtual machine is no longer matching one or more of the desired performance characteristics e.g. VMPCs . In response to such detection the virtual machine may be migrated to another host server computer that matches the desired performance characteristic.

In some instances the customer ID or may include a customer account number received from the customer to obtain a policy document e.g. . . . which includes at least one of the desired performance characteristic VMPCs . The policy document may further include configuration parameters for one or both of hardware resources and software resources within the multi tenant environment. The multi tenant environment e.g. and or may include a plurality of pre configured virtual machine types and the customer request to launch a virtual machine may include a customized virtual machine type that is not one of the pre configured virtual machine types.

With reference to the computing environment includes one or more processing units and memory . In this basic configuration is included within a dashed line. The processing units execute computer executable instructions. A processing unit can be a general purpose central processing unit CPU processor in an application specific integrated circuit ASIC or any other type of processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. For example shows a central processing unit as well as a graphics processing unit or co processing unit . The tangible memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two accessible by the processing unit s . The memory stores software implementing one or more innovations e.g. functionalities described herein in the form of computer executable instructions suitable for execution by the processing unit s .

A computing system may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The tangible storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information in a non transitory way and which can be accessed within the computing environment . The storage stores instructions for the software implementing one or more innovations described herein.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media can use an electrical optical RF or other carrier.

Although the operations of some of the disclosed methods are described in a particular sequential order for convenient presentation it should be understood that this manner of description encompasses rearrangement unless a particular ordering is required by specific language set forth below. For example operations described sequentially may in some cases be rearranged or performed concurrently. Moreover for the sake of simplicity the attached figures may not show the various ways in which the disclosed methods can be used in conjunction with other methods.

Any of the disclosed methods can be implemented as computer executable instructions stored on one or more computer readable storage media e.g. one or more optical media discs volatile memory components such as DRAM or SRAM or non volatile memory components such as flash memory or hard drives and executed on a computer e.g. any commercially available computer including smart phones or other mobile devices that include computing hardware . The term computer readable storage media does not include communication connections such as signals and carrier waves. Any of the computer executable instructions for implementing the disclosed techniques as well as any data created and used during implementation of the disclosed embodiments can be stored on one or more computer readable storage media. The computer executable instructions can be part of for example a dedicated software application or a software application that is accessed or downloaded via a web browser or other software application such as a remote computing application . Such software can be executed for example on a single local computer e.g. any suitable commercially available computer or in a network environment e.g. via the Internet a wide area network a local area network a client server network such as a cloud computing network or other such network using one or more network computers.

For clarity only certain selected aspects of the software based implementations are described. Other details that are well known in the art are omitted. For example it should be understood that the disclosed technology is not limited to any specific computer language or program. For instance the disclosed technology can be implemented by software written in C Java Perl JavaScript Adobe Flash or any other suitable programming language. Likewise the disclosed technology is not limited to any particular computer or type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.

It should also be well understood that any functionality described herein can be performed at least in part by one or more hardware logic components instead of software. For example and without limitation illustrative types of hardware logic components that can be used include Field programmable Gate Arrays FPGAs Program specific Integrated Circuits ASICs Program specific Standard Products ASSPs System on a chip systems SOCs Complex Programmable Logic Devices CPLDs etc.

Furthermore any of the software based embodiments comprising for example computer executable instructions for causing a computer to perform any of the disclosed methods can be uploaded downloaded or remotely accessed through a suitable communication means. Such suitable communication means include for example the Internet the World Wide Web an intranet software applications cable including fiber optic cable magnetic communications electromagnetic communications including RF microwave and infrared communications electronic communications or other such communication means.

The disclosed methods apparatus and systems should not be construed as limiting in any way. Instead the present disclosure is directed toward all novel and nonobvious features and aspects of the various disclosed embodiments alone and in various combinations and sub combinations with one another. The disclosed methods apparatus and systems are not limited to any specific aspect or feature or combination thereof nor do the disclosed embodiments require that any one or more specific advantages be present or problems be solved.

In view of the many possible embodiments to which the principles of the disclosed invention may be applied it should be recognized that the illustrated embodiments are only preferred examples of the invention and should not be taken as limiting the scope of the invention. Rather the scope of the invention is defined by the following claims. Therefore what is claimed as the invention is all that comes within the scope of these claims.

