---

title: User credentials
abstract: Obtaining and/or validating user credentials at client devices is described. A phrase may be generated based on one or more index values determined according to a function of time and a credential identifier identifying a user credential. The phrase may be output by the client device for validating the user credential.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09269358&OS=09269358&RS=09269358
owner: MicroStrategy Incorporated
number: 09269358
owner_city: Vienna
owner_country: US
publication_date: 20130610
---
This application claims priority to U.S. Provisional Application Ser. No. 61 670 456 filed on Jul. 11 2012 and U.S. Provisional Application Ser. No. 61 691 526 filed on Aug. 21 2012 both of which are incorporated herein by reference in their entirety.

In certain instances a person may be associated with a credential that for example permits the person to access events and or locations.

In general one aspect of the subject matter described in this specification may include techniques for obtaining and or validating user credentials at client devices.

Other features may include corresponding systems apparatus and computer programs configured to perform the actions of the methods encoded on computer storage devices.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other potential features and advantages of the disclosure will be apparent from the description and drawings and from the claims.

In some instances it can be beneficial to generate representations of credentials for groups of users or for individuals. The credentials can be for example forms of personal identification e.g. drivers licenses identity cards passports etc. badges to gain entrance to a location credentials to identify membership in a group e.g. a graduate of a school or a professional certification tickets for entry to an event redeemable vouchers keys that unlock locks e.g. for entry to a location credentials for gaining access to information technology IT resources e.g. credentials for logging into a computing device network or other computing resource credentials for accessing an electronic file directory or other storage component etc. credentials for accessing an electronic account e.g. credentials for accessing a bank account from a personal computing device and or an automated teller machine ATM etc. Representations for these credentials can be managed by a server or collection of servers and distributed to appropriate users client devices. These representations can then be outputted for evaluation by a credential authority who confirms that the credential possessed by a given user is valid. A credential authority may be a person and or a device that validates a credential.

Systems that generate distribute and validate representations for credentials are described below. First a general description of example implementations will be described. Then more detailed implementations are described including parametrically generated graphical representations for credentials animated graphical representations for credentials phrases corresponding to credentials numeric representations for credentials optical machine readable representations for credentials and combinations of one or more of these representations.

A credential may be evidence of authority status rights or entitlement to privileges that can be for example a badge to gain entrance to a location an identifier for membership in a group e.g. a graduate of a school or a professional certification a ticket for entry to an event a redeemable voucher a key that unlocks a lock e.g. for entry to a location etc. Credentials can be represented in various forms as described in detail below. For example credentials can be represented by parametrically generated graphical representations animated graphical representations phrases numeric representations and or optical machine readable representations. Combinations of one or more of these representations can also be used. In certain aspects credentials also may be hierarchical. For example a first credential may generally identify an individual as an employee of Company X while a second credential identifies the individual more specifically as an executive of Company X and a third credential identifies the individual as the Chief Executive Officer of Company X.

In operation the server manages and stores one or more credentials associates users and groups of users with appropriate credentials and provides representations of the credentials to users client devices and or processing systems e.g. operated by credential authorities for validation. The server can be any suitable computer or collection of computers executing software capable of managing distributing and validating representations of credentials for users and groups of users via a network as described herein.

Credentials user accounts group accounts and administrative accounts can be stored in a database e.g. MySQL PostgreSQL MS SQL Server MongoDB or other suitable data structure that can be accessed by the server . In some implementations the server may access the stored credentials and or user accounts via web services such as representational state transfer REST style services.

As an initial step the server creates a credential based on input provided by a credential grantor e.g. a party host or event organizer when the credential is a credential to gain access to a party or event . The credentials may include a variety of information such as a description of an event or location a credential identifier e.g. a number or character string that uniquely identifies a credential and or one or more designated credential authorities. The server may present a suitable interface to the credential grantor for creation of credentials. For example the server may present a web interface through which grantors can interact via a Web browser. In other aspects the server may be directly accessible via a graphical user interface or an application running on a mobile device. Any suitable interface can be used that enables the creation and storage of credentials and user accounts. In addition to creation of credentials by credential grantors credentials could be created at the request of registered users through a web based or other interface or through any other suitable mechanism such as sending email or short message service SMS to grantors. In some implementations registered users may be able to create credentials by use of an application running on a client device.

The server also may present an interface so that users and or credential grantors can create user accounts for individual users and groups of users. For example the server may present a web interface through which credential grantors can interact via a Web browser. Alternatively the server may be directly accessible via a graphical user interface or an application on a mobile device. User accounts may be stored in a table or collection of tables in a database or in any other suitable data structure accessible by the server . The user accounts may include a variety of information such as user name user identifier e.g. a number or character string that uniquely identifies a user and the address es of one or more client devices owned by or otherwise associated with the user. Likewise group accounts may be stored in a table collection of tables or other suitable data structure. Certain individual users may be identified as belonging to a group by linking an entry for the user to an entry for the group for example by use of a linking table. The group accounts may include a variety of information such as a group name group identifier e.g. a number or character string that uniquely identifies a group and a description of the group. In addition to creation of user accounts and groups by grantors user accounts and groups could be created at the request of potential users through a web based or other interface or through any other suitable means such as sending email or SMS to grantors. In some implementations the potential users may be able to create user accounts by use of an application running on a client device.

As an example Mr. John Smith may request a new user account from the server using an application executing on his client device. The server can then create database entries representing a user account for Mr. Smith. A credential grantor could then create a row in another table for a group identified as employees of Company X. The grantor could then link the database entry for Mr. Smith to the group account for Company X through use of a linking table.

Once credentials and users or groups of users have been created credential grantors and or users can associate the credentials with users or groups of users. For example the server may present a web interface through which grantors can interact via a Web browser to link a given credential to a given user or group of users. In other aspects the server may be directly accessible via a graphical user interface or an application on a mobile device. Credentials may be associated with users or groups of users for example by linking a database entry for a credential to a database entry for a user or group of users by use of a linking table. In addition to association of credentials to users and groups of users by grantors registered users also may request that certain users or groups of users be associated with certain credentials through a web based or other interface or through any other suitable means such as sending email or SMS to grantors. In some implementations the potential users may be able to create user accounts by use of an application running on a client device. Furthermore the server also may notify the users that they have been associated with the credential for example by pushing notifications to the respective users client devices. Such notifications may include the credential identifier for the credential a representation of the credential itself and or the user identifier.

In addition or as an alternative to receiving a push notification from the server the client devices may obtain the credential identifier the representation of the credential and or the user identifier in various other ways. For example the client devices may request the credential identifier the representation of the identifier and or the user identifier from the server . In some implementations an application executing on the client device may have the user identifier pre installed or may receive a user identifier when a user first runs the application and creates a user account associated with the application or may receive a user identifier when a user logs into the application from the client device.

In some implementations the creation and management of user accounts group accounts and credentials could be partially or completely automated. For example a web based application could act as a ticket agent for an event with tickets for the event corresponding to credentials. An interested user could access the web based application via a web browser or mobile application pay a ticket fee online and when the user s payment is verified the web based application could automatically create an account for the user and associate the account with the credential for the event.

Once credentials have been associated with appropriate user and or group accounts representations for the credentials can then be distributed to client devices for the appropriate users via the network . For example the network may be a local area network LAN and a wide area network WAN e.g. the Internet. In some versions the server may communicate with the client devices via SMS or multimedia messaging service MMS . The server may access user accounts in a database to locate the appropriate users client devices. Distribution of representations for credentials is discussed in more detail below.

Client devices and can then receive the representations for credentials and store them in any suitable memory for later retrieval. Software applications executing on the client devices and can then retrieve the representations so they can be presented to a credential authority for validation. The client devices and may be any type of computing device including but not limited to a mobile phone smart phone PDA music player e book reader tablet computer laptop or desktop computer or other stationary or portable device that includes one or more processors and non transitory computer readable storage media. The software application can be written in any suitable programming language such as for example Objective C C Java etc.

For example illustrates an example in which the credential corresponds to a ticket for a velvet rope event. Users and all have been invited to attend the event and consequently have all received representations of the credential. The credential authority is a doorman responsible for permitting only authorized individuals to enter the event. As described in greater detail below the credential for the event may be represented in a variety of different formats and the credential authority may be able to validate representations of the credential in any of these different formats. For example the client device of user is executing an application that displays a quick response QR code representing the credential. The client device of user is executing an application that displays an animated graphical representation for the credential. The client device of user is executing an application that displays a numeric representation for the credential. And the client device of user is executing an application that displays a phrase representing the credential i.e. the phrase frog astronaut pecan. User at the front of the entry line has presented a phrase for validation in this case by uttering the phrase frog astronaut pecan to the credential authority . The credential authority operates a processing system that retrieves a current phrase representing the credential from the server via network which is output to a display operatively coupled to the processing system . The credential authority can then confirm that the phrase uttered by the user matches the current phrase representing the credential. Once the representation presented by the user is validated the credential manager can permit the user to enter the event.

While shown in as a person the credential authority can be any agent capable of validating representations of credentials presented by users. As an example the credential authority could be a software application executing on the processing system that performs speech recognition on the phrase uttered by user retrieves a current phrase representing the credential from the server and then determines whether the utterance and the phrase from the server match. The software application could then control an automated gate to permit user to enter. The processing system can also be any suitable computer or set of computers capable of communicating with the server via network such as a mobile phone smart phone PDA tablet computer laptop or desktop computer or other stationary or portable device that includes one or more processors and non transitory computer readable media.

As an initial matter the server creates credentials e.g. identified by credential identifiers and user accounts e.g. identified by user identifiers based on input from credential grantors and or users and then associates credential identifiers with user identifiers as described above. For example a party host may create a credential and then associate user identifiers for all of the invitees e.g. users with the credential identifier to enable the invitees to gain admittance to the party. As another example users client devices may send a request to the server to be associated with a given credential. This may occur for instance if party invitees RSVP for a party by interacting with the server or if tickets for an event are available to the general public. The server also may notify the users that they have been associated with the credential for example by pushing notifications to the respective users client devices . Such notifications may include the credential identifier for the credential and or the user identifier.

As illustrated a server communicates via a network with client devices operated by users e.g. to distribute a credential for users to client devices . The server also communicates via network with a processing system operated by a credential authority e.g. to enable processing system and or credential authority to validate the credential. The credential can be represented in a variety of different formats. For example the client device of user is executing an application that displays an image of a fractal representing the credential. In some aspects a color scheme for the image of the fractal may be employed and the color scheme may be animated as described in more detail below. The client device of user is executing an application that outputs a three dimensional rendering of an object representing the credential to a display of the client device . In some aspects the three dimensional rendering of the object may be animated e.g. rotating in one or more dimensions . In the credential authority operates the processing system to validate the representation by visually inspecting the representation and then comparing it with a valid representation i.e. a three dimensional rendering of an object for the credential obtained from the server . In the example the three dimensional rendering of an object obtained from the server visually matches the three dimensional rendering of the object displayed on the client device and therefore the user s representation of the credential is validated. In particular in the three dimensional rendering of the object and the three dimensional rendering of the object are synchronized with each other e.g. both have the same orientation and rotation which may be useful in facilitating validation of the credential. The credential authority also may be able to input a command to the processing system via a man machine interface that switches between valid representations for credentials obtained from the server . For example the credential authority may be able to toggle the processing system between displaying the image of the fractal and the three dimensional rendering of the object for validation of either.

In some implementations the parametrically generated graphical representation for the credential can be a three dimensional rendering of an object. The object can be for example a simple polyhedron such as a cube tetrahedron or icosahedron or a more complicated object such as a helix trefoil knot Lissajous knot torus torus knot or hyperbolic knot. Various aspects of the three dimensional rendering can be specified using a variety of parameters. In some instances parameters may specify the shape of the object. For example a Lissajous knot is defined by the following parametric equations cos cos cos where n n and nare integers and phase shifts and may be real numbers. The parameters chosen may represent the variables n n and nand or and so that different inputs will cause different shapes to be rendered.

Parameters also may specify for example the color of the object the texture applied to the object the reflection image of an image applied to the object the background over which the object is displayed and or a light source position for the object. For example seed values e.g. time and or credential identifiers could be input into an equation that generates an output that may be used as an index into a collection of different colors textures reflection images and or backgrounds from which the color texture reflection image and or background may be selected. Furthermore seed values e.g. time and or credential identifiers could be input into an equation that generates an output that may be used as an index into a collection of objects e.g. a simple polyhedron such as a cube tetrahedron or icosahedron or a more complicated object such as a helix trefoil knot Lissajous knot torus torus knot or hyperbolic knot from which the object to be rendered is selected. In addition the three dimensional rendering of the object also may be animated which can advantageously make replication of the image more difficult. For example parameters may specify a camera location a camera path an object rotation direction an object translation and or an object rotation speed. Any suitable combination of one or more of these parameters may be fixed or variable. The three dimensional object can be rendered based on these parameters using a suitable application programming interface such as OpenGL or Direct3D.

The client device can use the parameters to generate a set of equations defining the three dimensional object. Typically a light source will be rendered to illuminate the object. Also the object may be animated e.g. rotated about one or more axes at a certain rate. As mentioned above each of the characteristics controlling the object lighting and animation may be constant or variable. In some implementations the client device renders the object within an exterior three dimensional object such as a cube or polyhedron. The exterior object may have textures on its faces that form reflection images on the interior object.

The parametrically generated graphical representation for the credential also may be an image of a fractal. The image of the fractal can be for example a Julia set or a Mandelbrot set. For an image of a fractal the parameters can define the boundaries of a region of the fractal. For example the parameters may define the x and y coordinates of a window within which the image of a fractal is rendered. The parameters can also define the fractal set to be used e.g. the Julia set or Mandelbrot set a background color or image and a colorization scheme for the image of a fractal. Any suitable combination of one or more of these parameters may be fixed or variable. The image of a fractal can be rendered based on these parameters using a suitable application programming interface such as OpenGL or Direct3D.

In some implementations the image of a fractal s colorization scheme and or background image can be animated. For example a certain color palette for rendering the image of the fractal may be selected and then the color palette could be rotated to provide an animated colorization. In particular some image files e.g. GIF and PNG may be palette based which means that the colors used in an image in the file have their red green blue RGB values defined in a palette table that holds a certain number of entries e.g. 256 entries . The data for the image can then refer to the colors by their indexes e.g. 0 255 in the palette table. The color definitions in the palette may be drawn from a color space of millions of shades e.g. 2shades 8 bits for each primary color . Rotation of the color palette could therefore involve periodically changing the color definitions in the palette table for example by incrementing or decrementing the color definitions by a predetermined amount at a predetermined time interval e.g. 100 ms while keeping the same palette index values in the image file. This may cause the image color scheme and or the background color scheme to vary over time e.g. provide an animation. Any other suitable technique for animating the colorization scheme or background image may be used. In some implementations the parameters may define characteristics of the animation for the colorization scheme and or background image.

Parameters are typically integers or floating point values that can be generated based on seed values that include a credential identifier and a time. The number of parameters generated may be implementation specific and could range from a single parameter up to dozens of parameters. The selection of the number parameters may involve a tradeoff between processing efficiency and security. Higher numbers of parameters may take longer to process but may provide less chance of collisions i.e. two different sets of credential identifiers and times resulting in the same set of parameters .

The credential identifier can be obtained from a server via the network as described in more detail below. The time can be a current timestamp e.g. seconds or milliseconds from epoch obtained from a timing device such as a hardware or software clock located at the client device. In some implementations the timing device can be synchronized with the server and or with one or more additional servers that provide a master clock reference as described below. Additional seed values may be used such as a user identifier a group identifier and or randomly generated numbers. When a user identifier is used as a seed value the graphical representation for the credential may be specific to a particular user. Likewise when a group identifier is used the graphical representation for the credential may be specific to a particular group. When a randomly generated number is used it may be stored by the server and associated with the credential identifier and a user or group identifier for additional security.

The mapping of the seed values to the parameters can use any suitable technique. For example the credential identifier could be used to seed a pseudo random number generator function and then the resulting value could be added to a value representing the time. In such cases the pseudo random number generator function may be configured so that different computers can generate the same value when they are called at substantially the same time and receive the same credential identifier as a seed value. The seed values can be concatenated manipulated using mathematical functions hashed using a hash function such as MD5 SHA 1 or SHA 2 subsampled to select a predetermined subset or subsets or any combination of these techniques to generate a suitable number of parameters.

As an example of generating a three dimensional rendering of an object a client device may generate a pseudo random number based on the credential identifier and the timestamp which it then uses to derive a set of parameters. The client device then uses the parameters to specify a set of surface equations that define a trefoil knot torus or other parametrically generated shape.

As an example of generating an image of a fractal a client device may generate a pseudo random number based on the credential identifier and the timestamp which it then uses to derive a set of parameters. The client device then maps the parameters to generate two sets of x y coordinates that define a region of a predetermined image of a fractal e.g. a Mandelbrot set . This set of x y coordinates may implicitly define a scale e.g. zoom factor based on the distance between the x y coordinates. In other words each of the x y coordinates may identify a corner of a view window e.g. the first x y coordinate identifies the lower left corner of the view window and the second x y coordinate identifies the upper right corner of the view window. The scale may then be defined so that the portion of the image of the fractal in the view window may be mapped to the desired display size e.g. the size of the display on the client device or any suitable portion thereof . Alternatively the client device could map the parameters to generate an origin x y point and a separate scale e.g. a zoom factor . It should be noted that certain regions of the image of a fractal will include little or no detail. For example whereas the boundary regions of the Mandelbrot and Julia set have high amounts of detail the interior and exterior portions exhibit very little. This lack of detail could make visual recognition of the image of a fractal difficult. When choosing the x y coordinates for the selected region it may therefore be desirable to avoid choosing interior or exterior portions of the fractals. This could be accomplished by filtering the potential choices to focus only on the boundaries of the fractal sets. Additionally or alternatively after a region of an image of a fractal has been selected for use within a graphical representation for a credential image processing techniques may be performed on the selected region of the image of the fractal to confirm that the selected region exhibits sufficient detail to enable use of the selected region within a graphical representation for the credential. In the event that the image processing techniques reveal that the selected region fails to exhibit sufficient detail to enable use of the selected region within a graphical representation for the credential the techniques described above for selecting a region of an image of a fractal may be repeated until a region exhibiting sufficient detail is selected. For example the image processing techniques may involve determining within the selected region a ratio of a number of pixels having a background color to a number of pixels having foreground colors. A new region could be selected if the ratio is greater than a predetermined threshold e.g. 95 or more of the pixels in the selected region are background color pixels .

In some implementations the parametrically generated graphical representation may be periodically changed. For example when the client device begins to display a parametrically generated graphical representation it also may initialize a timer that counts down during a predetermined time interval e.g. between about 1 minute and about 10 minutes . The client device can then monitor the timer while displaying the current graphical representation. When the timer expires the client device can obtain a new time from the timing device regenerate the set of parameters and generate a new graphical representation. The client device also may output the timer to the display of the client device to indicate the amount of time remaining until the current graphical representation will be changed.

Parametrically generated graphical representations for multiple credentials may be displayed concurrently. This may be implemented for example when credentials represent a hierarchy of access. As an example if Mr. John Smith is an employee of Company X and also authorized to access the 12floor of Company X s headquarters he may have two credentials i.e. a first credential identifying Mr. Smith as an employee who is authorized to enter the headquarters and a second authorizing Mr. Smith to access the 12floor. In such implementations graphical representations for the first credential and the second credential may both be displayed at the same time so that a credential authority can permit Mr. Smith access to the 12floor.

Advantageously generating complicated graphical representations for the credential makes replication difficult i.e. individuals cannot readily forge the representation by taking photographs but visual inspection for validation straightforward. For example when user presents the three dimensional rendering of an object that matches the three dimensional rendering of an object on the display of the processing system the credential authority can readily validate the user s representation by visual inspection.

The credential authority performs validation using the processing system . Specifically the processing system obtains a credential identifier and a time from a timing device and generates a parametrically generated graphical representation for the credential in the same manner described above for the client devices . When the timing device at the processing system is synchronized with the timing devices at client devices as described below the parameters generated at the processing system should be identical or nearly identical to those of the client devices when the credential identifiers are the same. The graphical representation generated by processing system should therefore match the graphical representations on the client devices .

In some versions the client device also may obtain an image of the user for additional security. The client device may display this image before after and or during display of the graphical representation for the credential. The image of the user also may be presented to the credential authority for authentication of the user . The user image may be obtained from for example a memory of the client device or a server such as a social networking web server. Obtaining a user image from a social networking web server may be advantageous in some implementations because a user is unlikely to store an image of someone else in their social networking profile because this might confuse the user s friends in the context of the social network. The user image also may be obtained from a database of photographs maintained by the credential grantor e.g. an employee directory in the case where the credential represents an employee badge . In some instances the user image may be provided by the credential grantor as part of granting the credential in the first instance e.g. the credential grantor provides the credential application access to a database of images for the potential credential holders .

In initially a client device transmits a request message for a credential identifier to a server . This request may be for example a request for credential identifiers associated with a user logged into the client device . The request also may be for example initiated in response to the operator of the client device accepting an offer of a credential from a credential grantor e.g. accepting an invitation to a party or event in the context of a party or event management software application . In response the server transmits a response message to the client device that includes a credential identifier. In some implementations however the server may push the message including the credential identifier to the client device without first receiving a request message .

Next the client device and processing system associated with the credential authority synchronize timing devices e.g. local clocks with a master clock of the server by transmitting synchronization messages and e.g. network time protocol NTP messages . While synchronization is shown as occurring only once and simultaneously among the client device server and processing system it should be appreciated that synchronization may occur at regular time intervals and need not be performed simultaneously for the client device and the processing system . Also it should be appreciated that while only one server is illustrated multiple time servers could be used synchronize the timing devices of client device and processing system . Synchronization among the client device the server and the processing system can be performed using any suitable technique. For example NTP global positioning system GPS or IEEE 1588 precision time protocol PTP may be used.

In step the client device generates a graphical representation for the credential as described above using parameters based on the credential identifier and the synchronized time. At some time the user of the client device will present the graphical representation for the credential to the credential authority for validation. When this occurs or any time before the processing system sends a message requesting the credential identifier to the server . In response the server transmits a response message to the processing system that includes a credential identifier. In some implementations however the server may push the message including the credential identifier to the processing system without first receiving a request message .

Finally in step the processing system generates a graphical representation for the credential. Since the timing device of the client device and processing system have been synchronized and the credential identifier is the same the parameters used to generate the graphical representation will be substantially similar e.g. sufficiently similar so that the rendered objects will be visually indistinguishable to the credential authority . The graphical representation for the credential rendered at the client device and the processing system will therefore visually match.

In some implementations the client device generates a three dimensional rendering of an object and outputs the three dimensional rendering of the object to the display of the client device in a manner that enables a credential authority to validate the credential by visual inspection of the three dimensional rendering of the object. In such implementations the client device may generate the three dimensional rendering of the object based on parameters including for example one or more of a reflection image applied to the object a shape of the object a background behind the object a light source position and a texture applied to the object. In some implementations the parameters also may be used to select a particular type of object.

Furthermore the client device also may animate the three dimensional rendering of the object. The client device can generate parameters for the animated object that include one or more of an object rotation speed an object rotation direction an object translation and a camera path. Then the client device can generate the animated three dimensional rendering of the object based on the object rotation speed the object rotation direction the object translation and the camera path and output the animated three dimensional rendering of the object to the display of the client device in a manner that enables the credential authority to validate the credential by visual inspection of the animated three dimensional rendering of the object.

In some implementations the client device generates an image of a fractal and outputs the image of a fractal to the display of the client device in a manner that enables a credential authority to validate the credential by visual inspection of the image of a fractal. In such implementations the client device may determine parameters based on the credential identifier and the time that include one or more of a fractal set a region of the image of a fractal a colorization scheme and a background. The client device can then generate the image of a fractal based on the fractal set the region of the image of a fractal the colorization scheme and the background. As an example the fractal set may be a Mandelbrot set or a Julia set.

Furthermore the client device also may animate a colorization of the image of a fractal. In particular the client device may output an animated colorization of the image of a fractal to the display of the client device in a manner that enables the credential authority to validate the credential by visual inspection of the animated colorization of the image of a fractal. For example a certain color palette for rendering the image of the fractal may be selected and then the color palette could be rotated to provide an animated colorization.

In some versions the client device may initialize a timer at the client device and monitor the timer during display of the graphical representation for the credential. Upon expiration of the timer the client device obtains an updated time derived from the timing device. Then the client device can update the parameters based on the credential identifier and the updated time and based on the updated parameters generate an updated graphical representation for the credential associated with the user. For example the updated graphical representation may be a different object type may have a different shape may have different reflection images applied may have different textures applied and or may have a different background behind the object. The client device can then output the updated graphical representation to the display of the client device in a manner that enables the credential authority to validate the credential by visual inspection of the updated graphical representation for the credential. The client device also may output to the display of the client device a graphical representation of the timer during display of the graphical representation for the credential.

The client device also may obtain an image of the user and output to the display of the client device the image of the user during display of the graphical representation for the credential such that the credential authority can authenticate the user. The client device can obtain the image by retrieving from a memory of the client device the image of the user or by querying a server via a network connection and receiving from the server over the network connection the image of the user.

Validation of the graphical representation displayed by the client device involves synchronizing the timing device at the client device with a master clock of at least one server. Next a timing device at a processing system is synchronized with the same master clock of the server or servers. The processing system is associated with e.g. operated by a credential authority. The processing system then obtains the credential identifier associated with the user and obtains a time derived from the second timing device. The processing system then determines one or more parameters based on the credential identifier and the time and based on the one or more parameters generates a graphical representation for the credential associated with the user. The processing system then outputs the graphical representation to a display operatively coupled to the processing system such that the graphical representation for the credential associated with the user on the display operatively coupled to the processing system matches the graphical representation for the credential associated with the user on the display of the client device. Because the timing devices for the client device and the processing system have been synchronized and the credential identifier is the same the representation on the client device and the representation displayed by the processing system should match.

In some cases multiple users may be associated with any given credential identifier. In such implementations a different user s client device synchronizes its timing device with the master clock of the server or servers. The client device then obtains the credential identifier that has been associated with the different user and a time measured by its timing device. The client device of the different user then determines one or more parameters based on the credential identifier associated with the different user and the time. Based on the one or more parameters the client device generates a graphical representation for the credential associated with the different user and outputs the graphical representation to a display of the client device such that the graphical representation for the credential associated with the different user on the display of their client device matches the graphical representation for the credential associated with the credential authority on the display operatively coupled to the processing system.

In some versions the client device may obtain the credential identifier by establishing a secure connection with a server e.g. via HTTP Secure sending to the server an identifier associated with the user and then receiving from the server the credential identifier.

A given user may be associated with multiple credential identifiers. For example a user s client device may obtain a set of multiple credential identifiers associated with the user and then determine one or more parameters based on the set of credential identifier and the time. Then the client device can based on the one or more parameters generate a graphical representation for each of the credential identifiers associated with the user. The client device may output one or more of these graphical representations associated with the user to the display of the client device in a manner that enables a credential authority to validate the outputted credentials by visual inspection of the graphical representations for the credentials. The client device may output to the display two or more of the graphical representations concurrently in a manner that enables a credential authority to validate multiple credentials at substantially the same time. This can allow visual inspection of the graphical representations for the multiple credentials in a manner that enables a credential authority to validate the multiple credentials by visual inspection of the graphical representations for the credentials. For instance as discussed in the example above Mr. John Smith may have two credentials i.e. a first credential identifying Mr. Smith as an employee who is authorized to enter company headquarters and a second authorizing Mr. Smith to access the 12floor of the company headquarters building.

As an initial matter the server creates credentials e.g. identified by credential identifiers and user accounts e.g. identified by user identifiers based on input from credential grantors and or users and then associates credential identifiers with user identifiers as described above. For example a party host may create a credential and then associate user identifiers for all of the invitees e.g. users with the credential identifier to enable the invitees to gain admittance to the party. As another example users client devices may send a request to the server to be associated with a given credential. This may occur for instance if party invitees RSVP for a party by interacting with the server or if tickets for an event are available to the general public. The server also may notify the users that they have been associated with the credential for example by pushing notifications to the respective users client devices . Such notifications may include the credential identifier for the credential and or the user identifier.

In more detail a server communicates via a network with client devices operated by users . The server also communicates via network with a processing system associated with e.g. operated by a credential authority . The client device of user is executing an application that displays an animated graphical representation for a credential a Birthday animation that may involve the girl with the balloons dancing and then releasing the balloons into the air . The client device of user is executing an application that also is displaying an animated graphical representation for the same credential also the Birthday animation . In the credential authority operates the processing system to validate the representation by visually inspecting the representation and then comparing it with a valid representation e.g. animated graphical representation for the credential obtained from the server or the processing system . In the example the animated graphical representation visually matches the animated graphical representation displayed on the client device and therefore the user s representation of the credential is validated. Also it should be noted that the animated graphical representation visually matches the animated graphical representation displayed on the client device .

Multiple animated graphical representations are typically stored in a memory structure accessible to the client device . The client devices may download the animated graphical representations for example from the server or from any other suitable server. The memory structure may be any suitable persistent data store that can provide an application executing on the client device with access to the animated graphical representations such as a file structure e.g. ext4 Hierarchical File System Plus HFS New Technology File System NTFS or a database e.g. SQLite . The animated graphical representations may be for example hypertext markup language HTML animations animated graphical interchange formation GIF files Motion Pictures Expert Group MPEG files Adobe Flash animations or any combination thereof. An animation may be for example a sequence of images defined by one of these files.

Applications executing on the client device may access the stored graphical representations by way of index values where an index value may correspond to a single representation. For example in implementations where the representations are stored in a file system an index value may correspond to a file name for example a uniform resource identifier URI to the file. In implementations where the representations are stored in a database the index value may correspond to a particular database entry. However in some implementations multiple index values could identify one particular representation. For example one index value could identify a file directory and another could identify a particular file within that directory. Likewise in some implementations one index value could identify multiple representations for example where the index value identifies a file directory including multiple representations. It should be appreciated that index values may identify graphical representations stored at any location. In other words the graphical representations may be stored on the client devices at the server or at any other location accessible via the network .

In operation an application executing on the client device can use seed values e.g. a credential identifier and a time to generate an index value identifying a current graphical representation for a credential. The credential identifier can be obtained from a server via the network as described in more detail below. The time can be a current timestamp e.g. seconds or milliseconds from epoch obtained from a timing device such as a hardware or software clock located at the client device. In some implementations the timing device can be synchronized with the server and or with one or more additional servers that provide a master clock reference as described below. Additional seed values may be used such as a user identifier a group identifier and or randomly generated numbers. When a user identifier is used as a seed value the graphical representation for the credential may be specific to a particular user. Likewise when a group identifier is used the graphical representation for the credential may be specific to a particular group. When a randomly generated number is used it may be stored by the server and associated with the credential identifier and a user or group identifier for additional security.

The client device may map the seed values to index values using any suitable technique. The technique may allow applications executing on different client devices to generate the same index values given the same input values e.g. the same credential identifier and time . For example the credential identifier could be used to seed a pseudo random number generator function and then the resulting value could be added to a value representing the time. In such cases the pseudo random number generator function may be configured so that different computers can generate the same value when they are called at substantially the same time and receive the same credential identifier as a seed value. The seed values can be concatenated manipulated using mathematical functions hashed using a hash function such as MD5 SHA 1 or SHA 2 subsampled to select a predetermined subset or subsets or any combination of these techniques to generate a suitable number of parameters.

The animated graphical representations may be stored in collections. In some versions these collections may be characterized by different themes. For example collections of representations may have themes directed to among other things birthdays general parties abstract graphics night life animals famous works of art geographical locations etc. In some implementations the theme may be selected by the credential grantor. For example a collection with an animal theme may include animations showing a dog a cat and a horse. In some implementations the client device may select at least two index values based on the seed values a first index value identifying a collection and a second index value identifying a graphical representation within that collection.

As an example of selecting a graphical representation based on a credential identifier and a time assume that an application executing on the client device obtains a credential identifier with a value of 1000 and a time since epoch value of 1341523271. Assume further that the client device includes a memory having collections of graphical representations one of which is the animal themed collection described above having three animated graphical representations e.g. a dog animation a cat animation and a horse animation . The credential identifier and the time could then be added to produce a resulting value 1000 1341523271 1341533271 and the resulting value normalized to generate an index value that identifies one of the three animated graphical representations. A simple implementation could use a modulo operation to derive a value from 0 to 2 where 0 identifies the dog animation 1 identifies the cat animation and 2 identifies the horse animation. In this example 1341533271 3 0 which corresponds to the index value for the dog. Consequently the dog animation may be selected as the graphical representation for the credential at that time. While only three animations are described above for exemplary purposes in implementations there may be many thousands or more animations from which the animation could be selected.

Moreover assume that an application executing on client device had access to the same animal themed collection. This application could then generate the same index value and therefore select the same dog animation as selected by client device if it used the same credential identifier at the same time. Furthermore timing devices on the client devices may be synchronized as described elsewhere herein so that they indicate substantially the same time. And in some implementations the times at which new index values may be generated are limited for example to predetermined multiples of 1 minute 5 minutes or 10 minutes so that applications on separate client devices may produce matching index values.

In some implementations the animated graphical representation may be periodically changed. For example when the client device begins to display an animated graphical representation it also may initialize a timer that counts down during a predetermined time interval e.g. between about 1 minute and about 10 minutes . The client device can then monitor the timer while displaying the current animated graphical representation. When the timer expires the client device can reset the timer and select a new animated graphical representation. The client device also may output the timer to the display of the client device to indicate the amount of time remaining until the current graphical representation will be changed.

When the client device selects a new animated graphical representation it may make the selection based on a predetermined progression through the animated graphical representations in a collection. For example using the animal themed collection described above the predetermined progression could establish that 1 an application displaying the dog animation would retrieve the cat animation next 2 an application displaying the cat animation would access the horse animation next and 3 an application displaying the horse animation would access the dog animation next. Advantageously such a progression may enable applications executing on different client devices to continually rotate through matching animated graphical representations for a credential over a period of time. Thus in this example if the dog animation were initially selected as described above the next animation to be displayed would be the cat animation. The server may separately provision the predetermined progression on the client devices and in some implementations may change the predetermined progression periodically. Additionally the progression may be different for different credentials for example for a different credential the progression may be the horse animation first then the cat animation and then the dog animation. In some implementations the client device may display the previous and or next animation in the progression concurrently with displaying the current animation which may provide an additional layer of verification.

In other implementations the client device may select a new animated graphical representation by generating a new index value or values based on a current time from the timing device. To continue the example above 0 identifies the dog animation 1 identifies the cat animation and 2 identifies the horse animation upon expiration of the timer the client device could use the credential identifier e.g. 1000 and a current time e.g. 1341523381 to select a new index value. In this example 1000 1341523381 1341533381 1341533381 3 2 and therefore the horse animation would be selected.

Animated graphical representations for multiple credentials may be displayed concurrently. This may be implemented for example when credentials represent a hierarchy of access. As an example if Mr. John Smith is an employee of Company X and also authorized to access the 12th floor of Company X s headquarters he may have two credentials i.e. a first credential identifying Mr. Smith as an employee who is authorized to enter the headquarters and a second authorizing Mr. Smith to access the 12th floor. In such implementations graphical representations for the first credential and the second credential may both be displayed at the same time so that a credential authority can permit Mr. Smith access to the 12th floor.

Advantageously using animated graphical representations for the credential makes replication difficult i.e. individuals cannot readily forge the representation by taking photographs but visual inspection for validation is straightforward. For example when user presents the animated graphical representation that matches the animated graphical representation on the display of the processing system the credential authority can readily validate the user s representation by visual inspection.

The credential authority performs validation using the processing system . Specifically the processing system obtains a credential identifier and a time from a timing device and selects an animated graphical representation for the credential in the same manner described above for the client devices . When the timing device at the processing system is synchronized with the timing devices at client devices as described below the index values generated at the processing system should be substantially identical to those of the client devices when the credential identifiers are the same. The graphical representation selected by processing system should therefore match or nearly match the graphical representations on the client devices .

In some versions the client device also may obtain an image of the user for additional security. The client device may display this image before after and or during display of the graphical representation for the credential. The image of the user also may be presented to the credential authority for authentication of the user . The user image may be obtained from for example a memory of the client device or a server such as a social networking web server. Obtaining a user image from a social networking web server may be advantageous in some implementations because a user is unlikely to store an image of someone else in their social networking profile because this might confuse their friends in the context of the social network. The user image also may be obtained from a database of photographs maintained by the credential grantor e.g. an employee directory in the case where the credential represents an employee badge . In some instances the user image may be provided by the credential grantor as part of granting the credential in the first instance e.g. the credential grantor provides the credential application access to a database of images for the potential credential holders .

In initially a client device transmits a request message for a credential identifier to a server . This request may be for example a request for credential identifiers associated with a user logged into the client device . The request also may be for example initiated in response to the operator of the client device accepting an offer of a credential from a credential grantor e.g. accepting an invitation to a party or event in the context of a party or event management software application . In response the server transmits a response message to the client device that includes a credential identifier. In some implementations however the server may push the message including the credential identifier to the client device without first receiving a request message .

Next the client device and processing system associated with the credential authority synchronize timing devices e.g. local clocks with a master clock of the server by transmitting synchronization messages and similarly to as described above in connection with . In step the client device obtains a graphical representation for the credential as described above using index values based on the credential identifier and the synchronized time. In some implementations the client device obtains the graphical representation from a memory structure incorporated within client device . Additionally or alternatively as shown with dotted arrow the graphical representation may be obtained from the server in some implementations.

At some time the user of the client device presents the graphical representation for the credential to the credential authority for validation. When this occurs or any time before the processing system sends a message requesting the credential identifier to the server . In response the server transmits a response message to the processing system that includes a credential identifier. In some implementations however the server may push the message including the credential identifier to the processing system without first receiving a request message .

Finally in step the processing system generates a graphical representation for the credential. Since the timing device of the client device and processing system have been synchronized and the credential identifier is the same the index values used to obtain the animated graphical representation will be the same. The animated graphical representation for the credential rendered at the client device and the processing system will therefore visually match.

In some implementations the graphical representation may be an HTML animation a GIF file an MPEG file or a Flash file. The client device may output the HTML animation the GIF file the MPEG file or the Flash file to the display of the client device in a manner that enables a credential authority to validate the credential by visual inspection of the HTML animation the GIF file the MPEG file or the Flash file.

Furthermore in some implementations there may be a single index value and the client device may select an animated graphical representation at that index value from a set of animated graphical representations for a credential. Moreover the client device may initialize a timer at the client device and monitor the timer during display of the current animated graphical representation for the credential. Upon expiration of the timer the client device may obtain a next animated graphical representation for a credential from the set of animated graphical representations for the credential based on a predetermined progression. Finally the client device may output the next animated graphical representation to the display of the client device in a manner that enables the credential authority to validate the credential by visual inspection of the next animated graphical representation for the credential. The client device also may output to the display of the client device a graphical representation of the timer during display of the current animated graphical representation for the credential.

Certain implementations involve the client device outputting to the display of the client device a previous animated graphical representation for the credential during display of the current animated graphical representation for the credential. Similarly some implementations involve the client device outputting to the display of the client device a future animated graphical representation for the credential during display of the current animated graphical representation for the credential. Displaying previous and or future animated graphical representations may be helpful in providing an extra layer of verification. For example it is possible that a given animation may be displayed at the same time for two different credentials. However assuming that the two different credentials have different progressions displaying the previous and or future animation would minimize the chance of erroneous validation. In some implementations the previous and or future animations could be displayed in small thumbnails overlaid on the current animated graphical representation.

The client device also may obtain an image of the user and output to the display of the client device the image of the user during display of the graphical representation for the credential such that the credential authority can authenticate the user. The client device can obtain the image by retrieving from a memory of the client device the image of the user or by querying a server via a network connection and receiving from the server over the network connection the image of the user.

Validation of the graphical representations displayed by client devices may involve synchronizing the timing device of a client device with a clock of at least one server. Next a timing device at a processing system is synchronized with the clock of the at least one server. The processing system is associated with e.g. operated by the credential authority. The processing system then obtains the credential identifier associated with the user and obtains a time measured by the timing device of the processing system. Next the processing system determines at least one index value based on the credential identifier and the time. Based on the at least one index value the processing system obtains a current animated graphical representation for the credential associated with the user. The processing system then outputs the current animated graphical representation to a display operatively coupled to the processing system such that the current animated graphical representation for the credential associated with the user on the display operatively coupled to the processing system matches the current animated graphical representation for the credential associated with the user on the display of the client device.

In some cases multiple users may be associated with any given credential identifier. In such implementations multiple users client devices may synchronize their respective timing devices with the clock of the at least one server. Then the client devices obtain a credential identifier associated with the respective users and obtain a time derived from the timing device of their client devices. Next the multiple client devices determine at least one index value based on the credential identifier associated with each respective user and the time. Based on the at least one index value the client devices obtain a current animated graphical representation for the credential associated with the respective users. Finally the client devices output the current animated graphical representation to respective displays of the client devices such that the current animated graphical representation for the credential associated with the respective users on the displays of the their client devices match the current animated graphical representation for the credential on the display operatively coupled to the processing system.

In some versions the client device may obtain the credential identifier by establishing a secure connection with a server e.g. via HTTP Secure sending to the server an identifier associated with the user and then receiving from the server the credential identifier. The client device may retrieve animated graphical representations from a memory of the client device or may query a server via a network connection and receive from the server over the network connection animated graphical representations for the credential associated with the user.

A given user may be associated with multiple credential identifiers. For example a user s client device may obtain multiple credential identifiers associated with the user and then determine index values based on the multiple credential identifiers and the time. Then the client device can based on the index values obtain an animated graphical representation for each of the credentials associated with the user. The client device may output to the display of the client device the animated graphical representations in a manner that enables the credential authority to validate the multiple credentials by visual inspection of the animated graphical representations for the credentials. The client device may output to the display two or more of the animated graphical representations concurrently in a manner that enables a credential authority to validate multiple credentials at substantially the same time. This can allow visual inspection of the animated graphical representations for the multiple credentials in a manner that enables a credential authority to validate the multiple credentials by visual inspection of the graphical representations for the credentials.

In some implementations the client device may initialize a timer at the client device and monitor the timer during display of the current animated graphical representation for the credential. Upon expiration of the timer the client device may obtain an updated time measured by the timing device. Then the client device may update the previously determined at least one index value based on the credential identifier and the updated time. Next based on the updated at least one index value the client device may obtain a different animated graphical representation for a credential associated with the user. Finally the client device may output the different animated graphical representation to the display of the client device in a manner that enables the credential authority to validate the credential by visual inspection of the second animated graphical representation for the credential.

As an initial matter the server creates credentials e.g. identified by credential identifiers and user accounts e.g. identified by user identifiers based on input from credential grantors and or users and then associates credential identifiers with user identifiers as described above. For example a party host may create a credential and then associate user identifiers for all of the invitees e.g. users with the credential identifier to enable the invitees to gain admittance to the party. As another example users client devices may send a request to the server to be associated with a given credential. This may occur for instance if party invitees RSVP for a party by interacting with the server or if tickets for an event are available to the general public. The server also may notify the users that they have been associated with the credential for example by pushing notifications to the respective users client devices . Such notifications may include the credential identifier for the credential and or the user identifier.

In more detail a server communicates via a network with client devices operated by users . The server also communicates via network with a processing system associated with e.g. operated by a credential authority . The client device of user is executing an application that displays a phrase corresponding to a credential i.e. frog astronaut pecan . The client device of user is executing an application that also is displaying a phrase corresponding to the credential i.e. frog astronaut pecan . As shown the user makes an utterance i.e. frog astronaut pecan that corresponds to the phrase to the credential authority . The credential authority operates the processing system to validate the utterance by recognizing the phrase and then comparing it with a valid phrase for the credential e.g. phrase frog astronaut pecan which is obtained from the server or the processing system . In the example the phrase on the display operatively coupled to the processing system matches the phrase from the client device and therefore the user is validated.

Words are typically stored in one or more dictionaries accessible to the client device . The dictionaries may be stored in any suitable data structure persistent or temporary that can provide an application executing on the client device with access to the words such as a property list hashmap or database e.g. MySQL or SQLite . The words may be stored in a wide variety of dictionaries. In some versions these dictionaries may be characterized by different content. For example dictionaries may have content directed to famous quotes Latin words celebrities animals food geographical locations etc. In some implementations the client device may select at least two index values based on the seed values a first index value identifying a dictionary from among a collection of dictionaries and a second index value identifying a word from among a collection of words within that dictionary. Moreover each word within a phrase may be chosen separately. For example given a single dictionary and a phrase that is to include three words the client device may select three different index values so as to choose three different words from the dictionary. Alternatively when there are multiple dictionaries the client device may select dictionaries from which the words are to be selected and then select the particular words from the selected dictionaries.

Applications executing on the client device may access dictionaries by way of index values where an index value can identify a single word or a group of words. For example in implementations where the words are stored in a property list an index value may correspond to a key that stores a word as its value. In implementations where the words are stored in a database the index value may correspond to a particular database entry. However in some implementations multiple index values could identify one particular word or group of words. For example one index value could identify a specific dictionary e.g. one hashmap in a collection of hashmaps and another index value could identify a particular word within that dictionary e.g. a key from the identified hashmap . Likewise in some implementations one index value could identify multiple words for example where the index value identifies a group of words.

It should be appreciated that index values may identify words stored in dictionaries at any location. In other words the dictionaries may be stored on the client devices at the server or at any other location accessible via the network . Furthermore multiple index values for a single phrase can refer to dictionaries stored at different locations. For example one index value may refer to a dictionary located at a client device and a second index value may refer to a dictionary located at the server .

In operation an application executing on the client device can use seed values e.g. a credential identifier and a time to generate one or more index values identifying a phrase for a credential. The credential identifier can be obtained from a server via the network as described in more detail below. The time can be a current timestamp e.g. seconds or milliseconds from epoch obtained from a timing device such as a hardware or software clock located at the client device. In some implementations the timing device can be synchronized with the server and or with one or more additional servers that provide a master clock reference as described below. Additional seed values may be used such as a user identifier a group identifier and or randomly generated numbers. When a user identifier is used as a seed value the graphical representation for the credential may be specific to a particular user. Likewise when a group identifier is used the graphical representation for the credential may be specific to a particular group. When a randomly generated number is used it may be stored by the server and associated with the credential identifier and a user or group identifier for additional security.

The client device may map the seed values to index values using any suitable technique. The technique may allow applications executing on different client devices to generate the same index values given the same input values e.g. the same credential identifier and time . For example the credential identifier could be used to seed a pseudo random number generator function and then the resulting value could be added to a value representing the time. In such cases the pseudo random number generator function may be configured so that different computers can generate the same value when they are called at substantially the same time and receive the same credential identifier as a seed value. The seed values can be concatenated manipulated using mathematical functions hashed using a hash function such as MD5 SHA 1 or SHA 2 subsampled to select a predetermined subset or subsets or any combination of these techniques to generate a suitable number of index values. The server may separately provision the seed value to index value mapping schema onto the client devices and in some implementations may change the mapping periodically.

The phrases may be periodically changed to add security. For example when the client device begins to display a phrase it also may initialize a timer that counts down during a predetermined time interval e.g. between about 1 minute and about 10 minutes . The client device can then monitor the timer while displaying the current phrase. When the timer expires the client device can reset the timer and select a new phrase. The client device also may output the timer to the display of the client device to indicate the amount of time remaining until the current phrase expires.

As an example of selecting a phrase based on a credential identifier and a time assume that an application executing on the client device obtains a credential identifier with a value of 1000 and a time since epoch value of 1341523271. Assume further that the client device includes a memory having a dictionary of words identified by index values. The credential identifier and the time could then be added to produce a resulting value 1000 1341523271 1341524271 and the resulting value can be manipulated to generate three different index values. A simple implementation could use various modulo operations to derive three index values from the resulting value. For example assume that in the dictionary 71 identifies the word frog 51 identifies the word astronaut and 7 identifies the word frog. Sample divisors of 100 for the first index value 60 for the second index value and 16 for the third index value would therefore yield frog astronaut and pecan which could be concatenated to form the phrase frog astronaut pecan. 

Moreover assume that an application executing on client device had access to the same dictionary. This application could then generate the same index values and therefore select the same phrase as selected by client device if it used the same credential identifier at the same time. Furthermore timing devices on the client devices may be synchronized as described elsewhere herein so that they indicate substantially the same time. And in some implementations the times at which new index values may be generated are limited for example to predetermined multiples of 1 minute 5 minutes or 10 minutes so that applications on separate client devices may produce matching index values.

The current phrase can be presented for validation in several ways. For example the client device could output an audio signal from a speaker corresponding to the current phrase that would be received by the processing system . This audio signal could be a normal audible signal e.g. 20 Hz to 20 kHz or it could be an ultrasonic signal e.g. 20 kHz that is detectable by a microphone on the processing system . As another example the client device may transmit the numeric value to the processing system using digital radio frequency communications e.g. near field communications NFC or Bluetooth.

Alternatively the user of the client device could utter the phrase to the credential authority . In such implementations the processing system may perform speech recognition on the utterance to determine whether it corresponds to a valid phrase. Moreover the processing system could obtain a voice recognition profile for the user and based on this voice recognition profile authenticate the user. The processing system may perform speech recognition e.g. identification of words and phrases in spoken language to convert them to a transcription according to any suitable technique.

The processing system also may perform voice recognition e.g. the recognition of the voice of a particular person as an identifier of the person by for example comparing the features of the user s voice with those of voice recognition profiles stored in one or more voice recognition dictionaries. Because the processing system knows a priori what the words in the phrase should be it may be able to readily match the voice of the user to an authorized person in a voice recognition dictionary. Such voice recognition can advantageously provide a second level of user authentication in addition to the phrase itself. As another example the processing system may access a record of all the users who have been granted the current credential where the record includes voice signatures of the authorized users. The processing system may then compare the voice signature of the user with the voice signatures of all the authorized users to authenticate the user. Any other suitable technique of voice recognition could be used.

In addition the client device and or the processing system also may display an image of the user for additional security. For example responsive to authenticating a user by voice recognition the processing system may obtain the user s image from for example a memory of the processing system the server the credential grantor or another server such as a social networking web server. Moreover the client device may obtain the user s image from for example a memory of the client device the credential grantor or a server such as a social networking web server. The client device may display this image before after and or during presentation of the phrase corresponding to the credential for authentication of the user .

Phrases for multiple credentials may be displayed concurrently. This may be implemented for example when credentials represent a hierarchy of access. As an example if Mr. John Smith is an employee of Company X and also authorized to access the 12th floor of Company X s headquarters he may have two credentials i.e. a first credential identifying Mr. Smith as an employee who is authorized to enter the headquarters and a second authorizing Mr. Smith to access the 12th floor. In such implementations phrases corresponding to the first credential and the second credential may both be presented at the same time so that a credential authority can permit Mr. Smith access to the 12th floor.

The credential authority performs validation using the processing system . Specifically the processing system obtains a credential identifier and a time from a timing device and selects a phrase corresponding to the credential in the same manner described above for the client devices . When the timing device at the processing system is synchronized with the timing devices at client devices as described below the index values generated at the processing system should be identical to those of the client devices when the credential identifiers are the same. The phrases selected by processing system should therefore match the phrases at the client devices .

Alternatively or additionally the server may select phrases as described above and then communicate the phrases to client devices . The processing system may then receive the correct phrase from the server and compare it to phrases presented by the client devices or the processing system may communicate the phrases from the client devices to the server for validation.

In initially a client device transmits a request message for a credential identifier to a server . This request may be for example a request for credential identifiers associated with a user logged into the client device . The request also may be for example initiated in response to the operator of the client device accepting an offer of a credential from a credential grantor e.g. accepting an invitation to a party or event in the context of a party or event management software application . In response the server transmits a response message to the client device that includes a credential identifier. In some implementations however the server may push the message including the credential identifier to the client device without first receiving a request message .

Next the client device and processing system associated with the credential authority synchronize timing devices e.g. local clocks with a master clock of the server by transmitting synchronization messages and as described above. In step the client device obtains a phrase corresponding to the credential as described above using index values based on the credential identifier and the synchronized time. As shown with dotted arrow the client device may obtain a portion or the entire phrase from the server in some implementations.

At some time the user of the client device will present the phrase corresponding to the credential to the credential authority for validation. In some implementations the phrase is output directly from the client device for example as an audio signal in step . When the phrase is presented or any time before the processing system sends a message requesting the credential identifier to the server . In response the server transmits a response message to the processing system that includes a credential identifier. In some implementations however the server may push the message including the credential identifier to the processing system without first receiving a request message .

Finally in step the processing system obtains the current phrase from the server as shown by dotted arrow or from a memory accessible to the processing system . Since the timing device of the client device and processing system have been synchronized and the credential identifier is the same the index values used to obtain the phrases will be the same. The phrases for the credential presented at the client device and displayed at the processing system will therefore match.

In some implementations the client device outputs an audio signal corresponding to the selected phrase to a speaker at the client device. Furthermore the speaker at the client device may output the audio signal at a frequency greater than 20 kHz. Such frequencies may be ultrasonic and therefore not perceptible to the human ear.

Alternatively the user may utter the selected phrase corresponding to the credential in a manner that enables the credential authority to validate the credential by performing speech recognition on the selected phrase uttered by the user. In such implementations the processing system may obtain a voice recognition profile of the user and perform voice recognition on the selected phrase uttered by the user to authenticate the user.

Some versions also involve outputting to a display of the client device a graphical representation of a timer associated with each selected phrase where the timer displays an amount of time remaining until a new phrase will be selected.

The client device also may obtain an image of the user and output to the display of the client device the image of the user during display of the graphical representation for the credential such that the credential authority can authenticate the user. The client device can obtain the image by retrieving from a memory of the client device the image of the user or by querying a server via a network connection and receiving from the server over the network connection the image of the user.

Validation of the phrases presented at the client devices may involve synchronizing the timing device of a client device with a clock of at least one server. Next at timing device at a processing system is synchronized with the clock of the at least one server. The processing system is associated with e.g. operated by the credential authority. The processing system then obtains the credential identifier associated with the user and obtains a time derived from the timing device of the processing system. Next the processing system determines at least one index value based on the credential identifier and the time. Based on the at least one index value the processing system selects a phrase corresponding to the credential associated with the user. The processing system then outputs a visual representation of the selected phrase corresponding to the credential associated with the user such that the visual representation of the selected phrase corresponding to the credential associated with the user matches the selected phrase rendered at the client device.

Multiple users may be associated with any given credential identifier. In such implementations multiple users client devices synchronize their respective timing devices with the clock of the at least one server. Next periodically at a predetermined time period the client devices perform the following three steps although not necessarily in the following order. First the client devices obtain a credential identifier associated with the respective users and obtain a time derived from the timing device of their client devices. Next the multiple client devices determine at least one index value based on the credential identifier associated with each respective user and the time. Based on the at least one index value the client devices then select a phrase corresponding to the credential. At some point the client devices receive a command from their respective users to output the selected phrase corresponding to the credential. Then responsive to the respective users commands the client devices render the selected phrases corresponding to the credential for the respective users.

In some versions the client device may obtain the credential identifier by establishing a secure connection with a server e.g. via HTTP Secure sending to the server an identifier associated with the user and then receiving from the server the credential identifier. The client device may retrieve a phrase from a memory of the client device or may query a server via a network connection and receive from the server over the network connection a phrase corresponding to the credential.

Furthermore the client device may determine a first index value and a second index value based on the credential identifier and the time. The client device may then obtain a first portion of the phrase corresponding to the credential based on the first index value and obtain a second portion of the phrase based on the second index value. In certain aspects the client device may then retrieve from a memory of the client device the first portion of the phrase corresponding to the credential based on the first index value communicate the second index value to a server and receive the second portion of the phrase from the server. Alternatively both portions of the phrase could be retrieved from the client device.

In more detail a server communicates via a network with client devices operated by users . The server also communicates via network with a processing system associated with e.g. operated by a credential authority . The client device of user Mary Smith is executing an application that displays a numeric value i.e. 84483170 which may correspond to a numeric representation that the server has associated with the credential and the user . Client device may lack network connectivity as illustrated by dotted arrow . In such cases the application executing on the client device may show a longer numeric value than a client device that does have network connectivity. This longer numeric value may not have a predetermined expiration time. The client device of user Jane Smith is executing an application that is displaying another numeric value i.e. 8123 which may correspond to a numeric representation that the server has associated with the credential and the user . It should be noted that this numeric value is shorter than the numeric value indicating that client device has network connectivity. However this shorter numeric value may correspond to a numeric representation having a predetermined expiration time. As shown the user makes an utterance i.e. 8123 corresponding to the numeric value to the credential authority .

Furthermore the client devices may operate in on line and off line modes. In on line mode the client devices have network connectivity and in off line mode the client devices lack network connectivity. In some implementations as part of receiving a credential issued by the server the client devices also receive an off line numeric representation that is longer than the numeric representations received when the client device is on line. Applications executing on the client devices may periodically monitor network connectivity and detect when the client devices have lost connectivity. If the client device is currently off line and the user inputs a command to present a numeric value for validation the client device accesses and outputs the previously received off line longer numeric representation. But if the client device is on line and receives such a command the client device requests a shorter numeric representation from the server .

The credential authority operates the processing system to validate the numeric value by recognizing the utterance and then entering the numeric value into the processing system via a man machine interface e.g. an onscreen numeric keypad . The processing system then sends a validation request to the server that includes the numeric value . The server accesses a memory to determine whether the numeric value matches a valid numeric representation that is currently associated with the user and the credential and then responds to the processing system . If a matching numeric representation is currently associated with the user the server s response indicates that the numeric value is valid i.e. the user is validated. Otherwise the server s response indicates that the numeric value is invalid.

In operation the server creates credentials e.g. identified by credential identifiers and user accounts e.g. identified by user identifiers based on input from credential grantors and or users and then associates credential identifiers with user identifiers as described above. For example a party host may create a credential and then associate user identifiers for all of the invitees e.g. users with the credential identifier to enable invitees to gain admittance to the party. As another example users client devices may send a request to the server to be associated with a given credential. This may occur for instance if party invitees RSVP for a party by interacting with the server or if tickets for an event are available to the general public. The server also may notify the users that they have been associated with the credential for example by pushing notifications to the respective users client devices .

After a user has been associated with a credential the user s client device may send a request to the server for a numeric representation for the credential. The client devices may send the request for example responsive to user interaction with the client device e.g. a user command to display the credential . The request may include a credential identifier for the desired credential e.g. an event or location and a user identifier for the requesting user . The server may then take several actions responsive to the request. Initially the server may confirm that the requesting user is actually associated with the credential. The server may for example access a database to determine whether an entry for the credential identifier has been linked to an entry for the user .

After the server has confirmed that the user has been associated with the credential the server may generate a numeric representation for the credential using any suitable technique. For example the server may use a random number generator or pseudo random number generator provided by a function or library routines that are accessible to the server . A pseudo random number generator may use a clock at the server as a seed which may provide suitable randomness for some applications. Alternatively random number generators such as dev random available for Mac OS X and Linux distributions or CryptGenRandom for Windows servers may provide higher quality random number generation.

In some implementations the numeric representations that the server associates with the user identities may be temporary meaning that they expire at a predetermined time e.g. after a predetermined time period . The server may choose a time period for the numeric representations such as for example 1 minute 5 minutes or 10 minutes. The expiration time for the corresponding numeric representation can then be associated with the numeric representation. For example the expiration time may be an entry in a database that is included with the entry for the numeric representation. In some implementations the time period may vary depending on a length of the numeric representation. For example a 4 digit numeric representation may expire after a short time such as 5 minutes or 10 minutes whereas a longer 8 digit numeric representation may expire after a longer time such as 1 hour or one day. In some implementations a longer numeric representation may be valid for an indefinite e.g. unlimited time period. This may be advantageous for example in cases where a user s client device does not have access to the server via the network .

Some implementations may include techniques to minimize collisions and or reuse of numeric representations e.g. to prevent instances where the same numeric representation is associated with two different users and or two different credentials. For example the server may maintain a memory structure e.g. a list a database table a set or a collection that includes previously generated numeric representations. When the server generates a new candidate for a numeric representation e.g. a random number it searches the memory structure for the candidate. If the server finds the candidate in the memory structure then the server generates a different candidate and searches the memory structure again. The server may repeat this process until a candidate is found that is not stored in the memory structure. In some aspects numeric representations stored in the memory structure may be flushed periodically based on for example the age of the respective numeric representations. This can minimize the potential for overflow of the memory structure. Similar mechanisms may be used to penalize numeric representations with respect to individual users so that when a particular numeric representation has been associated with a user that representation may not be used again for the same user for a period of time.

After a numeric representation is generated the server may then associate the numeric representation with the requesting user and the credential. For example the server may create a database entry for the numeric representation and then link this entry to the entry for the credential and the entry for the user . Then the server may transmit a message to the client device of the requesting user where the message includes the generated numeric representation. The users client devices can then store the numeric representation as a numeric value in a suitable memory.

When numeric representations include an expiration time the client devices may monitor the expiration time. For example when the client device begins to display a numeric representation it also may initialize a timer that counts down to the expiration time of the numeric representation. When the timer expires or at some defined period of time before or after the timer expires the client device may request a new numeric representation. Alternatively the server may automatically push a new numeric representation to the client device upon expiration of the current numeric representation without requiring a request from the client device . Upon receiving the new numeric representation the client device can reset the timer to the expiration time for the new numeric representation. The client device also may output the timer to the display of the client device to indicate the amount of time remaining until the current numeric representation expires.

When the user decides to present a numeric value e.g. a stored numeric representation to the credential authority for validation it can be presented in several ways. For example the credential authority could visually inspect the numeric value displayed on a display of the client device . As another example the client device may output an audio signal from a speaker corresponding to the numeric value that would be received by the processing system . This audio signal could be a normal audible signal e.g. 20 Hz to 20 kHz or it could be an ultrasonic signal e.g. 20 kHz that is detectable by a microphone on the processing system . As another example the client device may transmit the numeric value to the processing system using digital radio frequency communications e.g. near field communications NFC or Bluetooth.

Alternatively the user of the client device could utter the numeric value to the credential authority . The credential authority may then enter the numeric value into the processing system via a man machine interface operatively coupled to the processing system . Alternatively the processing system may perform speech recognition on the utterance to determine a corresponding numeric value. The processing system may perform speech recognition according to any suitable technique.

Moreover the processing system could obtain a voice recognition profile for the user and based on this voice recognition profile authenticate the user . The processing system may perform voice recognition by for example comparing the features of the user s voice with those of voice recognition profiles stored in one or more voice recognition dictionaries. Because the processing system knows a priori to expect a numeric value it may be able to readily match the voice of the user to an authorized person in a voice recognition dictionary. Such voice recognition can advantageously provide a second level of user authentication in addition to the numeric representation itself. As another example the processing system may access a record of all the users who have been granted the current credential where the record includes voice signatures of the authorized users. The processing system may then compare the voice signature of the user with the voice signatures of all the authorized users to authenticate the user. Any other suitable technique of voice recognition could be used.

Once the processing system has obtained a numeric value for validation the processing system then sends a validation request message including the numeric value to the server . In some aspects the processing system may also access a credential identifier for the relevant event or location and include the credential identifier with the validation request message. The server receives this validation request message from the processing system and then attempts to retrieve data corresponding to the numeric value from a suitable memory. For example the server may query a database using the numeric value and optionally the credential identifier. If the numeric value matches a stored numeric representation then the server accesses e.g. receives from the database the matching numeric representation. In instances where a numeric representation includes an expiration time the server may determine whether the accessed numeric representation has expired based on comparing the expiration time with a current time at the server . In implementations where the processing system transmits a credential identifier to the server the server also attempts to match the numeric value with a numeric representation associated with the transmitted credential identifier. Upon successful retrieval of a valid numeric representation that matches the presented numeric value the server may send a validation response to the processing system indicating that the numeric value corresponds to a valid numeric representation. If the server finds no matching numeric representations for the numeric value then it may send an error message to the processing system indicating that the numeric value is invalid.

In some implementations a validation response from the server to the processing system may include information relating to the user associated with the valid numeric representation. For example the validation response may include a user identifier a user name a voice recognition profile and or an image of the user. If a voice recognition profile is included then the processing system may perform voice recognition to authenticate the user as described elsewhere herein. In particular the server may obtain the user information from among other locations a social networking web server or from information provided by or made accessible by the credential grantor as part of granting the credential in the first instance e.g. the credential grantor provides the server access to a database of images for the potential credential holders .

In addition the client device and or the processing system also may display an image of the user for additional security. For example responsive to receiving a validation response from the server the processing system may obtain the user s image from for example a memory of the processing system the server or another server such as a social networking web server or a server made accessible by the credential grantor. The processing system may then output the user s image to a display operatively coupled to the processing system for authentication by the credential authority. Moreover the client device may obtain the user s image from for example a memory of the client device or a server such as a social networking web server. The client device may display this image before after and or during presentation of the numeric representation for authentication of the user .

Numeric values corresponding to multiple numeric representations for credentials may be displayed and or presented concurrently. This may be implemented for example when credentials represent a hierarchy of access. As an example if Mr. John Smith is an employee of Company X and also authorized to access the 12th floor of Company X s headquarters he may have two credentials i.e. a first credential identifying Mr. Smith as an employee who is authorized to enter the headquarters and a second authorizing Mr. Smith to access the 12th floor. In such implementations numeric values for the first credential and the second credential may both be presented at the same time so that a credential authority can permit Mr. Smith access to the 12th floor.

In initially a client device transmits a request message for a numeric representation to a server . This request may be for example triggered by the user requesting to display the credential. In response the server transmits a response message to the client device that includes a numeric representation. The client device may then store this numeric representation as a numeric value. In some implementations however the server may push the message including the numeric representation to the client device without first receiving a request message .

At some time the client device may output the stored numeric value to the credential authority for validation. In some implementations the client device outputs the numeric value directly to the processing system as a message for example as an audio signal or a digital radio frequency transmission. When the processing system receives the numeric value in step the processing system sends a validation request message including the numeric representation to the server . The server then transmits a validation response message to the processing system that indicates whether the numeric value corresponds to a valid numeric representation for the credential. If so then the processing system validates the user in step .

Responsive to the request from the client device the server performs the following four steps although not necessarily in the following order. In step the server determines that the user identifier from the request is associated with the credential identifier from the request. In step the server generates a numeric representation for the credential. In some implementations the numeric representation for the credential expires at a predetermined time. In some implementations the server generates a numeric representation by generating a random number based on a seed value obtained from a clock at the server. In step the server associates the numeric representation for the credential with the credential identifier from the request and the user identifier from the request. In some aspects the server may associate the numeric representation with the credential identifier and the user identifier by mapping the numeric representation for the credential to the credential identifier and the user identifier in a table or one or more related tables. Finally in step the server transmits a message including the numeric representation for the credential to the client device which may store the numeric representation in a memory of the client device. In some implementations the server may transmit the message via SMS. In some implementations the server may transmit the message via HTTP.

At some point later in time in step the server receives a validation request from a processing system associated with e.g. operated by a credential authority where the validation request includes a numeric value. In some implementations the server may receive the validation request via SMS. In other implementations the server may receive the validation request via HTTP. Before the predetermined expiration time for the numeric representation in step the server accesses the numeric representation for the credential using e.g. based on the numeric value from the validation request. For example the server may query a database using the numeric value as a query term. In step the server then determines that the numeric value from the validation request matches the numeric representation for the credential and transmits to the processing system a validation response indicating that the credential is associated with the user. In some implementations the server accesses the numeric representation for the credential and determines whether the numeric representation has expired. In some implementations the server may transmit the validation response via SMS. In other implementations the server may transmit the validation response via HTTP.

Multiple users may be associated with any given credential identifier. In such implementations the server may receive requests from multiple client devices for numeric representations for the credential where the requests include the credential identifier identifying the credential and respective user identifiers identifying the multiple users. Responsive to each of the requests the server performs the following four steps although not necessarily in the following order. First the server determines that the respective user identifier from the request is associated with the credential identifier from the request. Second the server generates a numeric representation for the credential. In some implementations the numeric representation for the credential expires at a predetermined time. Third the server associates the numeric representation for the credential with the credential identifier from the respective request and the user identifier from the respective request. And fourth the server transmits a message including the numeric representation for the credential to the respective client device which may store the numeric representation in a memory of the client device.

At some point later in time the server may receive multiple validation requests from a processing system associated with e.g. operated by a credential authority where the validation requests each include a numeric value. Before the predetermined expiration time for the respective stored numeric representations the server accesses the respective numeric representation for the credential using e.g. based on the numeric value from the respective validation request. The server then determines that the respective numeric value from each validation request matches the respective numeric representation for the credential and transmits to the processing system a validation response indicating that the credential is associated with the respective user.

In some implementations the server may store the numeric representations for the credential in a memory. To generate a new numeric representation the server may first generate a candidate numeric representation for the credential and then determine that the candidate numeric representation matches a numeric representation for the credential stored in the memory. In this case the server may generate another numeric representation for the credential. To minimize memory overflow the server may periodically remove one or more numeric representations from the memory based on an age of the one or more numeric representations.

The server may responsive to determining that the numeric value from a validation request matches a numeric representation for the credential obtain an image of the user associated with the numeric representation for the credential. The server may then transmit the image of the user to the processing system such that the credential authority can authenticate the user. The server can obtain the image by retrieving from a memory of the server the image of the user or by querying another server via a network connection and receiving from the other server over the network connection the image of the user. The server may obtain the image of the user from for example a social networking web server and or the credential grantor.

The client device may output the numeric value by rendering an audio signal corresponding to the numeric value from a speaker at the client device in a manner that enables the credential authority to validate the credential by acoustically detecting the numeric value for the credential. In some implementations the client device may render the audio signal at a frequency greater than 20 kHz.

Alternatively the user may utter the numeric value in a manner that enables the credential authority to validate the credential by performing speech recognition on the numeric value uttered by the user as described above. In such implementations the processing system may obtain a voice recognition profile of the user and perform voice recognition on the numeric value uttered by the user to authenticate the user as described above.

The client device also may output to a display of the client device a timer associated with the numeric representation for the credential. For example the timer may display an amount of time remaining until the predetermined time when the numeric representation will expire.

The client device also may obtain an image of the user and output to the display of the client device the image of the user such that the credential authority can authenticate the user. The client device can obtain the image by retrieving from a memory of the client device the image of the user or by querying a server via a network connection and receiving from the server over the network connection the image of the user. In some implementations the client device may display the image of the user concurrently with displaying the numeric representation on the display of the client device.

As an overview in applications for credential validation are executing on client devices and the processing system . The client devices may receive optical machine readable representations for credentials from the server and or may generate optical machine readable representations for credentials given credential identifiers and user identifiers. The applications on the client devices can then output optical machine readable representations for credentials to the respective displays of the client devices . The credential authority can operate the processing system to scan the optical machine readable representations from the displays of the client devices . The processing system can validate the user by communicating information decoded from the representations e.g. a credential identifier and a user identifier to the server and receiving a response indicating whether the user is associated with the credential.

In some implementations the population of credentialed users may change over time. For example employees of a company may leave the company party guests may decline invitations or party hosts may rescind invitations. It may therefore be advantageous to have the server confirm that the user is still associated with a credential each time the optical machine readable representation is presented to a credential authority for validation.

In more detail a server communicates via a network with client devices operated by users . The server also communicates via network with a processing system associated with e.g. operated by a credential authority . The client device of user Mary Smith is executing an application that displays an optical machine readable representation on a portion of the client device s display . The client device of user Jane Smith is executing an application that also is displaying a different optical machine readable representation on a portion of the client device s display . As an example the user identifiers for the users and the credential identifier or some values derived from the user identifiers and the credential identifier may be encoded using QR codes.

The credential authority then operates the processing system to scan the portion of the client device s display showing the optical machine readable representation. In particular the processing system outputs a reticle defining a field of view from a camera operatively coupled to the processing system . This reticle can be used by the credential authority to scan the optical machine readable representation from the relevant portion of the client device s display . The processing system can then decode the optical machine readable representation to obtain a set of alphanumeric characters which as described below may include or encode a user identifier and a credential identifier. The processing system then sends a validation request to the server that may include the set of alphanumeric characters the decoded user identifier and credential identifier the optical machine readable representation or any suitable combination thereof.

The server accesses a memory to determine whether the user identifier from the validation request is currently associated with the credential identifier from the validation request and then transmits a response to the processing system . If the credential identifier is currently associated with the user the server s response indicates that the user is validated. If the user is validated the server s response may include an image a name and or other data relating to the validated user. The server may obtain information relating to the user e.g. an image of the user from a social networking web server and or from the credential grantor as described above. For example the processing system may display the user s name and the user s image as shown in . Otherwise the server s response indicates that the user is not validated.

In operation the server creates credentials e.g. identified by credential identifiers and user accounts e.g. identified by user identifiers based on input from credential grantors and or users and then associates credential identifiers with user identifiers as described above. For example a party host may create a credential and then associate user identifiers for all of the invitees e.g. users with the credential identifier to enable the invitees to gain admittance to the party. As another example users client devices may send a request to the server to be associated with a given credential. This may occur for instance if party invitees RSVP for a party by interacting with the server or if tickets for an event are available to the general public. The server also may notify the users that they have been associated with the credential for example by pushing notifications to the respective users client devices . Such notifications may include the credential identifier for the credential and or the user identifier.

In addition to receiving a push notification from the server the client devices may obtain the credential identifier and user identifier in various other ways. For example the client devices may request the user identifier and or credential identifier from the server . In some implementations an application executing on the client device may have the user identifier pre installed or may request a user identifier when a user first runs the application and creates a user account associated with the application.

After a user has been associated with a credential and the user s client device obtains the corresponding credential identifier and the user identifier the user s client device may generate a set of alphanumeric characters from the user identifier and the credential identifier. The mapping of the user identifier and credential identifier to the set of characters can use any suitable technique. For example the credential identifier and user identifier could be concatenated manipulated using mathematical functions encrypted using a cryptographic algorithm such as AES hashed using a hash function such as MD5 SHA 1 or SHA 2 subsampled to select a predetermined subset or subsets or any combination of these techniques to generate a suitable set of characters. Alternatively the server may generate a set of alphanumeric characters from the credential identifier and the user identifier using any suitable method and transmit the set of characters to the client devices .

Once the set of alphanumeric characters has been generated the client devices may encode the set of characters to generate an optical machine readable representation for the credential. The client device may use any suitable technique for encoding the optical machine readable representation. For example the client device may call a function or library routine that encodes QR codes in accordance with the QR code International Organization for Standardization ISO standard ISO IEC 18004 2006 RSS Information technology Automatic identification and data capture techniques QR Code 2005 bar code symbology specification. Alternatively the server may generate the optical machine readable representation and transmit it to the users client devices . The users client devices can then store the optical machine readable representation in a suitable memory.

When a user decides to present an optical machine readable representation to the credential authority for validation the user may input a command into their client device via a man machine interface e.g. a user interface on a presence sensitive display . An application executing on the client device then outputs the stored optical machine readable representation to a display of the client device . In particular the application may render the optical machine readable representation on a portion of the display of the user s client device .

The credential authority then operates the processing system to scan the portion of the client device s display showing the optical machine readable representation. The processing system may use any suitable mechanism to scan the optical machine readable representation. For example the processing system may access a function or library routine that captures and decodes QR codes and or barcodes using a camera operatively coupled to the processing system . Suitable libraries may include for example Red Laser or Zxing. A credential identifier and a user identifier can then be derived from the optical machine readable representation in several ways. In some aspects the processing system decodes the optical machine readable representation to obtain a set of alphanumeric characters and then uses the inverse of the encoding techniques discussed above to decode the set of alphanumeric characters so as to obtain the credential identifier and the user identifier. For example the set of characters can be parsed manipulated using mathematical functions decrypted using a cryptographic algorithm such as AES subsampled to select a predetermined subset or subsets or any combination of these techniques to generate a credential identifier and user identifier. The processing system then transmits a validation request message to the server that includes the credential identifier and the user identifier.

Alternatively the processing system may decode the optical machine readable representation to obtain a set of alphanumeric characters but then transmit the set of characters to the server . In particular the processing system may transmit a validation request message to the server that includes the set of alphanumeric characters. The server may then decode the set of alphanumeric characters to obtain the credential identifier and the user identifier.

In other implementations the processing system may capture and store a copy of the optical machine readable representation. The processing system may then transmit the copy of the optical machine readable representation to the server rather than decoding the representation on the processing system . In such implementations the server can decode the reproduction of the optical machine readable representation to produce a set of alphanumeric characters and then decode the set of alphanumeric characters to obtain the credential identifier and the user identifier.

The server receives the validation request message from the processing system and then attempts to confirm that the user identifier derived from the optical machine readable representation is associated with the credential identifier derived from the optical machine readable representation. For example the server may query a database using the user identifier and or the credential identifier to determine whether they are linked. If the server determines that the user identifier is associated with the credential identifier the server may send a validation response to the processing system indicating that the user is validated. If the server determines that the user identifier is not associated with the credential identifier then it may send an error message to the processing system indicating that the user is not validated.

In some implementations a validation response from the server to the processing system may include information relating to the user associated with the credential identifier. For example the validation response may include a user name a voice recognition profile and or an image of the user. The server may obtain this information for example from a social networking web server and or from the credential grantor as described above. If a voice recognition profile is included then the processing system may perform voice recognition to authenticate the user as described elsewhere herein.

In addition the client device and or the processing system also may display an image of the user for additional security. For example responsive to receiving a validation response from the server the processing system may obtain the user s image from for example a memory of the processing system the server a server made accessible by the credential grantor or another server such as a social networking web server. The processing system may then output the user s image to a display operatively coupled to the processing system. Moreover the client device may obtain the user s image from for example a memory of the client device or a server such as a social networking web server. The client device may display this image before after and or during presentation of the optical machine readable representation for authentication of the user .

Optical machine readable representations for multiple credentials may be displayed and or presented concurrently. This may be implemented for example when credentials represent a hierarchy of access. As an example if Mr. John Smith is an employee of Company X and also authorized to access the 12th floor of Company X s headquarters he may have two credentials i.e. a first credential identifying Mr. Smith as an employee who is authorized to enter the headquarters and a second authorizing Mr. Smith to access the 12th floor. In such implementations optical machine readable representations for the first credential and the second credential may both be presented at the same time so that a credential authority can permit Mr. Smith access to the 12th floor.

In initially a client device transmits a request message for a credential identifier to a server . This request may be for example a request for credential identifiers associated with a user logged into the client device . The request also may be for example initiated in response to the operator of the client device accepting an offer of a credential from a credential grantor e.g. accepting an invitation to a party or event in the context of a party or event management software application . In response the server transmits a response message to the client device that includes a credential identifier. In some implementations the server may push the message including the credential identifier to the client device without first receiving a request message . The client device may similarly obtain the user identifier or may already have the user identifier stored in a memory of the client device . In step the client device then generates an optical machine readable representation for the credential using the credential identifier and the user identifier as described above.

At some time the client device may present the optical machine readable representation to the credential authority for validation. The processing system scans the optical machine readable representation in step and decodes the representation to obtain the user identifier and the credential identifier for example as described above. The processing system then sends a validation request message including the credential identifier and user identifier to the server . The server then transmits a validation response message back to the processing system that indicates whether the user identifier is currently associated with the credential identifier. If so then the processing system validates the user in step .

In initially a client device transmits a request message for an optical machine readable representation e.g. a QR code to a server . This request may be for example a request for credential identifiers associated with a user logged into the client device . The request also may be for example initiated in response to the operator of the client device accepting an offer of a credential from a credential grantor e.g. accepting an invitation to a party or event in the context of a party or event management software application . In response the server transmits a response message to the client device that includes an optical machine readable representation that encodes a credential identifier and the user identifier. In some implementations the server may push the message to the client device without first receiving a request message .

In step the client device displays the optical machine readable representation for the credential. The processing system scans the optical machine readable representation in step and decodes the representation to obtain the user identifier and the credential identifier. The processing system then sends a validation request message including the credential identifier and user identifier to the server . The server then transmits a validation response message back to the processing system that indicates whether the user identifier is currently associated with the credential identifier. If so then the processing system validates the user in step .

Then in step the server determines that the user identifier is associated with the credential identifier. For example the server may query a database using the user identifier to obtain a record corresponding to the user identifier and then determine that the record includes the credential identifier. Responsive to determining that the user identifier is associated with the credential identifier in step the server transmits to the processing system a validation response indicating that the credential is associated with the user.

Responsive to determining that the user identifier is associated with the credential identifier the server may obtain an image of the user. The server may then transmit the image of the user to the processing system such that the credential authority can authenticate the user. The server can obtain the image by retrieving from a memory of the server the image of the user or by querying another server e.g. a social networking web server or a server made accessible by the credential grantor via a network connection and receiving from the other server over the network connection the image of the user.

Multiple users may be associated with any given credential identifier. Accordingly the server may receive multiple validation requests from a processing system that correspond to multiple users. Each validation request may include a user identifier and credential identifier where each user identifier and credential identifier were derived from an optical machine readable representation for a credential obtained by the processing system. Each user identifier identifies a respective user. The server may then determine for each validation request whether the respective user identifier is associated with the credential identifier. Then responsive to determining that the respective user identifier is associated with the credential identifier the server transmits to the processing system a validation response indicating that the credential is associated with the respective user.

Responsive to receiving a validation response indicating that the user is associated with the credential the server may obtain an image of the user and output the image of the user to a display operatively coupled to the processing system. The credential authority may then authenticate the user using the image of the user. The processing system can obtain the image by retrieving from a memory of the processing system the image of the user or by querying a server via a network connection and receiving from the server over the network connection the image of the user.

In step the server then generates a set of characters based on the credential identifier and the user identifier and in step encodes the set of characters to generate an optical machine readable representation e.g. a QR code for the credential. In some implementations the client device may hash the user identifier and the credential identifier to generate the set of characters. For example the user identifier and credential identifier could be concatenated and then hashed using SHA 1 or SHA 2 hash function to generate the set of characters.

Next in step the server associates the user identifier with the credential identifier. For example the server may create an entry in a database linking the user identifier and the credential identifier. Finally the server transmits a message e.g. sends a push notification including the optical machine readable representation for the credential to the client device associated with the user in step . This can enable a credential authority to obtain the set of characters and in some implementations the credential identifier and user identifier by scanning the optical machine readable representation for the credential at the client device.

Multiple users may be associated with any given credential identifier. Accordingly the server may receive multiple requests for a user to be associated with a credential. Responsive to each request the server may then generate a set of characters based on the credential identifier and the user identifier and encode the set of characters to generate an optical machine readable representation e.g. a QR code for the credential. Furthermore for each request the server may associate the respective user identifier with the credential identifier. This can enable a credential authority to obtain the set of characters and in some implementations the credential identifier and user identifier by scanning the optical machine readable representation for the credential at the respective client device.

In more detail a server communicates via a network with client devices operated by users . The server also communicates via network with a processing system associated with e.g. operated by a credential authority . The client device of user is executing an application that can display at least two representations corresponding to a credential 1 a phrase i.e. Shoes ships and 2 a parametrically generated graphical representation . In particular the client device is currently displaying the phrase . However the user can switch between the two representations by inputting a command into the client device e.g. swiping the touchscreen display in the region of the display of phrase and or slider . The client device of user is executing an application that can display at least two different representations corresponding to the credential 1 a numeric value i.e. 7563 and 2 an optical machine readable representation . In particular the client device is currently displaying the numeric value . However the user can switch between the two representations by inputting a command into the client device e.g. swiping the touchscreens display in the region of the display of numeric value and or slider . As shown the user presents the numeric value for validation by making an utterance corresponding to the numeric value i.e. 7563 .

The credential authority then operates the processing system to validate one or more of the user s presented representations. The credential authority may switch between various validation modes by inputting a command into the processing system e.g. swiping slider . For example in a first mode e.g. selectable using slider the credential authority operates the processing system to validate the numeric value by recognizing the utterance and then entering the numeric value into the processing system via a man machine interface e.g. an onscreen numeric keypad . The processing system then sends a validation request to the server which responds with an indication of whether the numeric value is valid. In a second mode e.g. selectable using slider the processing system may scan the portion of the client device s display showing the optical machine readable representation. In particular the processing system outputs a reticle defining a field of view from a camera operatively coupled to the processing system which can be used by the credential authority to scan the optical machine readable representation. The processing system can then derive a user identifier and a credential identifier from the optical machine readable representation and request validation of the user from the server .

Maintaining multiple representations for a credential on a client device may provide a user and or a credential authority a choice of which representation to validate. For example the client device may display a command on a user interface of the client device that allows the user to select the desired representation for presentation. Likewise the processing system may display a command on a user interface operatively coupled to the processing system that allows the credential authority to select the appropriate representation to validate.

In some instances the credential authority may only request that the user present one type of representation for the credential even though the user s client device may have multiple representations available. This may be advantageous for example if one or more of the representations for the credential have been compromised e.g. from a security breach or forgery .

In other cases the credential authority may request that the user present two or more representations for the credential to provide additional verification. Any suitable combination of representations could be requested. Such combinations of credentials could be useful for a variety of applications. For example a first representation such as a parametrically generated graphical representation or an animated graphical representation could represent general membership in a group e.g. Mr. Smith is an employee of Company X who is authorized to enter the building . More specific privileges could then be granted based on a numeric representation or an optical machine readable representation for a credential e.g. Mr. Smith is authorized to access the 12th floor of the building . In some implementations for example the first representation could be displayed on a screen of the client device and the second representation could be concurrently rendered as an audio signal by a speaker of the client device.

In some implementations the client device may concurrently output to a display of the client device at least two of the selected one or more representations for the credential in a manner that enables the credential authority to validate the representations. In other implementations the client device may concurrently output i at least one of the selected one or more representations to a display of the client device in a manner that enables the credential authority to validate the representation by visual inspection and ii at least one other of the selected one or more representations as an audio signal to a speaker at the client device in a manner that enables the credential authority to validate the representation by acoustically detecting the at least one other of the selected one or more representations.

In some implementations the client device may obtain an image of the user and output to a display of the client device the image of the user such that the credential authority can authenticate the user. The image of the user can be obtained for example from a memory of the client device or by querying a server via a network connection and receiving the image of the user from the server over the network connection.

As described above in some implementations involving an animated graphical representation the client device may obtain a time derived from a timing device of the client device determine at least one index value based on the credential identifier and the time and based on the at least one index value obtain a current animated graphical representation for example from among a collection of multiple animated graphical representations.

As also described above in some implementations involving a three dimensional rendering of an object the client device may obtain a time derived from a timing device of the client device determine one or more parameters based on the credential identifier and the time and based on the one or more parameters generate a three dimensional rendering of an object.

As further described above in some implementations involving an image of a fractal the client device may obtain a time derived from a timing device of the client device determine one or more parameters based on the credential identifier and the time and based on the one or more parameters generate an image of a fractal.

As still further described above in some implementations involving a phrase the client device may periodically at a predetermined time period i obtain a time derived from a timing device of the client device ii determine at least one index value based on the credential identifier and the time and iii select based on the at least one index value a phrase corresponding to the credential from among a collection of multiple different words and or phrases.

As also described above in some implementations involving a numeric representation the client device may receive a numeric representation for the credential from a server.

As further described above in some implementations involving an optical machine readable representation the client device may obtain a credential identifier and a user identifier where the user identifier identifies the user generate a set of characters based on the credential identifier and the user identifier e.g. by encrypting the credential identifier and the user identifier and then encode the set of characters to generate an optical machine readable representation for the credential.

A wide variety of applications are possible based on the subject matter described above. For example credentials could be used to permit access to facilities. Representations for a credential could be provided to employees of a company or other individuals authorized to access company property. In some cases the validation of the representations could be automated. For example the credential authority could be a software agent that operates the processing system and controls an electro mechanical lock or gate to permit validated users to enter a physical space. Additionally or alternatively the credential authority could be a software agent that operates the processing system and controls an alarm system such that the credential authority can disable the alarm system responsive to presentation of a valid credential. Similarly representations could be distributed to employees or other individuals authorized to permit them access a company s electronic data or website. Additionally employees of a utility or other service company e.g. a cable company representative could present representations for a credential to identify themselves to customers.

Also representations for credentials could be distributed to identify certifications such as a first aid certification a medical license or a driver s license. Likewise representations for credentials could be used to identify graduates of a specific university or members of a specific group.

In one specific example in which a credential provides access to IT resources e.g. a computing device a network an electronic file a directory and or another computing resource or storage device the credential may be represented as a phrase as described above. In this example the phrase may be spoken into a microphone and or typed into an input device e.g. a keyboard keypad or a touchscreen input mechanism in order to gain access to the IT resource s . Additionally or alternatively the credential may be represented as a numeric string as described above and the numeric string may be spoken into a microphone and or typed into an input device e.g. a keyboard a keypad or a touchscreen input mechanism in order to gain access to the IT resource s or the credential may be represented by an optical machine readable code e.g. a QR code and the optical machine readable code may be scanned by an appropriate sensor in order to gain access to the IT resource s .

In another specific example in which a credential provides access to a physical space e.g. by unlocking a physical lock or gate and or disabling an alarm system the credential may be represented as a phrase as described above. In this example the phrase may be spoken into a microphone and or typed into an input device e.g. a keyboard keypad or a touchscreen input mechanism in order to gain access to the physical space. Additionally or alternatively the credential may be represented as a numeric string as described above and the numeric string may be spoken into a microphone and or typed into an input device e.g. a keyboard a keypad or a touchscreen input mechanism in order to gain access to the physical space or the credential may be represented by an optical machine readable code e.g. a QR code and the optical machine readable code may be scanned by an appropriate sensor in order to gain access to the physical space.

In yet another specific example in which a credential provides access to an electronic account e.g. by enabling access to a bank account from a personal computing device and or an ATM the credential may be represented as a phrase as described above. In this example the phrase may be spoken into a microphone and or typed into an input device e.g. a keyboard keypad or a touchscreen input mechanism in order to gain access to the electronic account. Additionally or alternatively the credential may be represented as a numeric string as described above and the numeric string may be spoken into a microphone and or typed into an input device e.g. a keyboard a keypad or a touchscreen input mechanism in order to gain access to the electronic account or the credential may be represented by an optical machine readable code e.g. a QR code and the optical machine readable code may be scanned by an appropriate sensor in order to gain access to the electronic account.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The apparatus can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The elements of a computer may include a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a touchscreen and or a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include e.g. a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network such as a network described above. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly other implementations are within the scope of the following claims.

