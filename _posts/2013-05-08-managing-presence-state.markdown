---

title: Managing presence state
abstract: A client application server (CAS) can include a presence layer configured to compute a published presence state for a client of the given CAS that characterizes at least one of an ability and a willingness of the client to communicate with another communication endpoint. The presence layer can also be configured to provide the published presence state for the client to a presence layer of at least another CAS according to a subscription request provided from the another CAS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09401952&OS=09401952&RS=09401952
owner: Shortel, Inc.
number: 09401952
owner_city: San Francisco
owner_country: US
publication_date: 20130508
---
This application claims the benefit of priority to U.S. Provisional Application No. 61 778 948 filed on Mar. 13 2013 and entitled OPTIMIZED DISTRIBUTED PRESENCE IN UNIFIED COMMUNICATIONS the contents of which is incorporated herein by reference in its entirety.

In computer and telecommunications networks presence information e.g. a presence state can provide a status indicator that conveys an ability and or a willingness of a potential communication partner such as a user and or a user device to communicate. A client employed by the user can provide presence information e.g. a presence state via a network connection to a presence service which can be stored in an associated personal availability record and can be made available for distribution to other devices. Such other devices can be referred to as watchers as to convey the client s availability for communication. In some examples a given device can provide presence information for the given device to the presence service while concurrently being configured as a watcher of another device.

This disclosure relates to managing presence states such as in a distributed communications system e.g. an enterprise communications system .

One example relates to a non transitory computer readable medium storing machine readable instructions that can include a presence layer of a given client application server CAS . The presence layer can be configured to compute a published presence state for a client of the given CAS that characterizes at least one of an ability or a willingness of the client to communicate with another communication endpoint e.g. another party . The presence layer can be configured to provide the published presence state for the client to a presence layer of at least another CAS according to a subscription request provided from the another CAS.

Another example relates to an enterprise system. The enterprise system can include a given CAS configured to calculate a published presence state for a given set of resource objects ROs associated with the given CAS wherein the published presence state for each respective RO in the given set of ROs characterizes at least one of an ability or a willingness of the respective RO to communicate with another party. Another CAS can be configured to communicate with the given CAS via a network. The another CAS can also be configured to provide a CAS subscription request to the given CAS for the published presence state of a given RO of the given set of ROs associated with the given CAS in response to a client subscription request from a client associated with the another CAS.

Yet another example relates to a method that includes determining at a given CAS a plurality of different published presence states for a plurality of different ROs associated with the given CAS wherein the published presence state for each respective RO of the plurality of ROs characterizes at least one of an ability or a willingness of the respective RO to communicate with another party. The method can also include receiving at the given CAS a CAS subscription request for the published presence state for a selected RO of the plurality of ROs associated with the given CAS from another CAS. The method can also include providing from the given CAS the published presence state for the selected RO to the another CAS via a network.

In some examples a given client application server CAS can be employed to determine a presence state for one or more resource objects. By way of example a resource object can include a device e.g. a desktop phone a smart phone a soft phone an instant messaging service a calendar service a location service or the like a user that employs one or more devices or a group of users. The presence state for a respective resource object can characterize the ability and or a willingness to communicate with another resource object as well as information related to the location of the RO the number of calls to which the RO is connected as explained herein. Such other resource objects can include another resource object an application a device or any combination thereof.

In some examples the ability and or willingness of a respective resource object to communicate with another resource object as specified by the presence state can encapsulate additional related concepts for the respective resource object. For instance the presence state can describe a level of activity e.g. how many calls or sessions is the object involved in a geographical location of the object the identity of other involved parties and the like. The given CAS can receive and process a subscription request for the published presence state for the resource object. The subscription request can be provided from another CAS in the enterprise. Subscription requests can also originate in the same CAS in which the resource object operates such as can be initiated by a client e.g. software hardware or a combination thereof . In response to the subscription request from the other CAS the given CAS can provide the published presence state for the resource object to the other CAS via a network e.g. a connection within the enterprise . The particular information details encapsulated by the published presence state can vary according to the subscription request. In this manner bandwidth can be efficiently leveraged and redundant processing of the presence state for the RO can be reduced and or eliminated.

Each CAS can include a memory for storing machine readable instructions. The memory could be implemented for example as a non transitory computer readable medium such as volatile memory e.g. random access memory nonvolatile memory e.g. a hard disk drive a solid state drive flash memory or the like or a combination thereof. Each CAS can also include a processing unit that can access the memory and execute the machine readable instructions. The processing unit can include for example one or more processor cores. For purposes of simplification of explanation CAS is referred to as the first CAS and CAS N is referred to as the Nth CAS .

The first CAS and the Nth CAS can communicate with a corresponding telephony management system TMS which can be referred to as the first TMS and the Nth TMS respectively. Each TMS can also communicate via the network . The first TMS can communicate with J number of switches where J is an integer greater than or equal to one. The Nth TMS can communicate with K number of switches where K is an integer greater than or equal to one. For purposes of simplification of explanation each switch is labeled with a two dimensional number which two dimensional number identifies the corresponding CAS and a number of the switch in a set of switches . For instance as illustrated in SWITCH 1 1 is associated with the first CAS and is the first switch of the J number of switches . Similarly as illustrated in SWITCH N K is associated with the Nth CAS and is the Kth switch of K number of switches . Moreover although the switches are illustrated and being described as being coupled to a corresponding TMS in some examples the switches can be coupled to the network and communicate with the corresponding TMS via the network .

Additionally each switch can be associated with a resource object RO . Each RO can be representative of a communication endpoint. In one example a RO could be implemented as a device that can be employed by an end user to facilitate communications e.g. telephone calls video and or video conferencing . In another example each RO could be implemented to represent a plurality of such devices. In yet another example each RO could represent a plurality of devices employed by a single user such that a presence state for the plurality of devices could be rolled up to represent a presence state for such user. In still another example each RO could be implemented as a plurality of devices employed by a plurality of users in a group e.g. a workgroup such that the presence state for the plurality of devices can be rolled up to represent a presence state for each of the plurality of users which in turn could be rolled up to represent a presence state for the group.

Similar to the switches for purposes of simplification of explanation each RO is labeled with a three dimensional number which three dimensional number identifies the corresponding CAS the corresponding switch and a number of the RO in a set of instances of the RO . For instance as illustrated in the RO 1 1 1 is associated with the first CAS and SWITCH 1 1 and is the first RO of a set of ROs . Additionally the system can include one or more ROs that can be implemented to facilitate a particular type of communication such as instant messaging. The RO can be coupled to the network . The RO is labeled with a two dimensional number which two dimensional number identifies the corresponding CAS and a number of the RO in a set of instances of the RO . Thus in RO 1 1 is associated with the first CAS and is the first RO of a set of ROs.

Each TMS can be configured to manage connections for the switches and the RO . In some examples each TMS or some subset thereof can be implemented for example as a hardware appliance e.g. a device that can include circuitry such as a microcontroller an application specific integrated circuit ASIC chip or the like. In other examples each TMS or some subset thereof can be implemented as software that can be executing on a host computer e.g. a server . Each TMS can include a distributed telephony application service DTAS to facilitate processing and distribution of signaling information between distributed systems in the enterprise system such as DTAS to DTAS communications over a network. Additionally or alternatively each TMS each TMS can facilitate voice over internet protocol VoIP connections. Each TMS can be configured to process signaling and or connections between ROs or between a given RO and an external device. The DTASs can communicate via the network e.g. via a private enterprise network connection such as a secure connection .

Each switch can be configured to couple a set of the ROs to the corresponding TMS . Each TMS can be configured to couple the switches to the corresponding CAS . Each switch can include a port that connects the TMS to the public switched telephone network PSTN . In some examples each switch or some subset thereof can be connected to the PSTN via a plain old telephone service POTS connection a primary rate interface PRI connection an Internet connection or the like. A communication layer included in the memory of each CAS can be configured to determine a communication state for each RO associated with a given CAS .

To calculate the communication state the communication layer can receive signaling information from the TMS such as from one or more of the ROs . In some examples the telephony state for each respective RO can characterize events that occur in relation to the respective RO . Such communication state can include for example standard telephone signaling data that indicates that a connection with the given RO is being requested ongoing or terminated as well as other status information associated with the state of the connection parties involved and related device information. Processing such signaling messages can be a cumbersome and processor intensive operation. For instance the communication layer can calculate the communication state based on observation of telephony activity of an observed RO . Such signaling messages can have a relatively large variance of sizes and be relatively large e.g. about 2 kilobytes or more and can be relatively frequent such as when a telephony or other communications event occurs. Some such signaling messages contain fields that may not impact a presence state for the observed RO . For example a given signaling message can occupy multiple packets and still not include information that impacts e.g. changes the presence state of the observed RO . Further although the signaling messages transferred between the TMS and the communication layer may be large and or frequent in some examples the system may be configured such that signaling messages can be transmitted between processes operating on the same server thereby avoiding transmission of such messages over the network . For instance while in the illustrated example the communication layer is demonstrated within the CAS in other examples the communication layer alternatively could be implemented as part of the TMS or vice versa.

A presence layer stored in the memory of each CAS can be configured to determine presence information for each associated RO based on the communication state for each respective RO . The presence information can include a presence state calculated for each associated RO . Table 1 lists examples of possible presence states for each RO . The list of presence states in Table 1 is not meant to be exhaustive. Instead the list of presence states in Table 1 lists some possible example of presence states that could be calculated by the presence layer . The type of presence information further can vary depending on the type and configuration of the RO .

In some examples the RO can be implemented as a desktop phone a smart phone e.g. a wireless phone or as software executing on a computer e.g. a softphone . The RO can be implemented for example as software executing on a computer such as an instant messaging client. The presence layer of the first CAS can calculate the presence state for the RO 1 1 1 and the RO 1 J 1 . Additionally the presence layer for the Nth CAS can calculate the presence state for the RO N K 1 . As noted in some examples the same user can be associated with multiple ROs such as can be registered to operate within a respective CAS . In such a situation the presence layer can generate a published presence state for each user associated with the corresponding CAS based on an aggregate of a presence state of each instance of RO assigned to a respective user. As an example the same user may be assigned a wireless phone a desktop phone and an instant messaging client. If such a user was unavailable on any one of the desktop phone the wireless phone and the instant messaging client the published presence state for the user could be set to Connected Call as described in Table 1.

In other examples multiple ROs can be associated with a group. In such a situation the presence state for the group can represent an aggregate of presence states of each RO in the group. In still other examples multiple ROs can be associated with multiple users which in turn can be associated with a group e.g. a workgroup . In such a situation the presence state of an RO can represent an aggregate of presence states for each user in the group.

In some examples the RO and the RO can include a client that can be configured to subscribe to the corresponding CAS to receive a published presence state for another RO . Each client as well as other equipment and switches can connect and be registered for local operation with a respective CAS in the distributed enterprise system . That is CAS TMS and DTAS and the associated switches equipment and clients collectively form a logical and or physical division within the larger enterprise system .

In a first example hereinafter the first example the RO 1 1 1 can include a client that is configured to subscribe to the first CAS to receive a published presence state for the RO N K 1 . Additionally a client computer can also be coupled to the network . The client computer can have a client executing thereon. The client could be implemented as an RO to include for example a softphone e.g. an application and or an instant messaging client. The client of the client computer can also be configured to subscribe to the first CAS for presence information for specific instances of the ROs . In a second example hereinafter the second example the client of the client computer is configured to subscribe to the first CAS to receive a published presence state for the RO 1 1 1 64 and the RO N K 1 . In a third example hereinafter the third example the RO N K 1 can be configured to subscribe to the Nth CAS to receive the published presence state for the RO 1 J 1 . Additionally or alternatively in some examples a client or can subscribe to a corresponding CAS to receive a published presence state for a specific RO which can reside in the same or different CAS as the subscribing client.

In the first example the presence layer of the first CAS can notify the presence layer of the Nth CAS that the RO 1 1 1 has subscribed to receive a presence state for the RO N K 1 which notification can be referred to as a CAS subscription request. In response the presence layer of the Nth CAS can provide a message that includes the presence state of the RO N K 1 . Such a message can be relatively small since the presence state can be characterized for example by an integer. Additionally the presence layer of the Nth CAS can continuously monitor the presence state of the RO N K 1 . Upon detecting a change to the presence state of the RO N K 1 the presence layer of the Nth CAS can provide an update message to the presence layer of the first CAS that characterizes the nature of the change to the published presence state of the RO N K 1 . As a further example CAS to CAS communication of presence state information can be limited to a prescribed subset of presence state changes determined relevant to the presence subscription request e.g. as defined in the subscription data . The presence layer of the first CAS can provide data that characterizes a substantially real time e.g. from about 0 to about 5 seconds published presence state of the RO N K 1 to the client of the RO 1 1 1 . In some examples based on the capabilities and or privileges of the RO 1 1 1 as well as a type of the subscription request a subset of the published presence state provided by the presence layer of the Nth CAS to the presence layer of the first CAS may be provided to the client of the RO 1 1 1 .

In the second example the client of the client computer can provide a subscription request e.g. a client subscription request to the first CAS for the published presence state for the RO 1 1 1 as well as the RO N K 1 . In response the presence layer of the first CAS can notify the presence layer of the Nth CAS via a subscription request to receive a presence state for the RO N K 1 . For example the subscription request can be generated in response to the client of the client computer requesting such presence information. The identity of the user requestor does not need to be communicated between CASs further reducing the amount of data communicated to manage presence states between CASs. In response the presence layer of the Nth CAS can provide a message that includes the published presence state of the RO N K 1 to the presence layer of the first CAS .

Additionally the presence layer of the Nth CAS can continuously monitor the presence state of the RO N K 1 . Upon detecting a change to the presence state the presence layer of the Nth CAS can provide an update message to the presence layer of the first CAS that characterizes the nature of the change to the presence state of the RO N K 1 . Similarly the presence layer of the first CAS can continuously monitor the published presence state of the RO 1 1 1 . The presence layer of the first CAS can provide data that characterizes a substantially real time e.g. from 0 to about 5 seconds published presence state of both the RO 1 1 1 and the RO N K 1 to the client of the client computer . In some examples based on the capabilities and or privileges of the client computer as well as the type of subscription request a subset of the published presence state determined by the first CAS for the RO 1 1 1 and or the presence state provided by the published presence layer for the RO N K 1 of the Nth CAS to the presence layer of the first CAS may be provided to the client of the client computer .

In the third example the client of the RO N K 1 can provide a client subscription request to the presence layer of the Nth CAS . In response the presence layer of the Nth CAS can provide a CAS subscription request to the presence layer of the first CAS e.g. responsive to a request from an RO within the Nth CAS such as RO N K 1 to receive a published presence state for the RO 1 J 1 . In response to the CAS subscription request the presence layer of the first CAS can provide a message that includes the published presence state of the RO 1 J 1 to the presence layer of the Nth CAS . Additionally the presence layer of the first CAS can continuously monitor the published presence state of the RO 1 J 1 . Upon detecting a change to the published presence state the presence layer of the first CAS can provide an update message to the presence layer of the Nth CAS that characterizes the nature of the change to the published presence state of the RO 1 J 1 . The presence layer of the Nth CAS can provide data that characterizes a substantially real time e.g. within about 5 seconds published presence state of the RO 1 J 1 to the client of the RO N K 1 . In some examples based on the capabilities and or privileges of the RO N K 1 as well as the type of client subscription request a subset of the presence state determined by the first CAS for the RO 1 J 1 may be provided to the client of the RO N K 1 64. Additionally in the third example since there are no subscribers to the presence state of the RO 1 1 1 that are associated with the Nth CAS the presence layer of the first CAS does not need to provide a presence state or updates for the RO 1 1 1 to the presence layer of the Nth CAS .

In the first second and third examples significant bandwidth savings can be achieved. In particular communication between the presence layers of the first and Nth CASs can be reduced since events that do not change a published presence state of a an RO does not need to be communicated over the network . For instance in the first example if the RO N K 1 were to be connected to a three way telephone call with devices A and B the presence state of the RO N K 1 could be CONNECTED WORKGROUP CALL . In this scenario if device B were to be disconnected but device A was still connected with the RO N K 1 in some examples the presence state of the RO N K 1 would remain at CONNECTED WORKGROUP CALL even though several telephone events e.g. a disconnection has occurred. Thus in this scenario of the first example the presence layer of the Nth CAS would not need to send an update message to the presence layer of the first CAS to report a change in the published presence state thereby saving bandwidth and processing time. Additionally as noted with respect to the third example the presence state for a given RO associated with a given one of the first and Nth CASs is only communicated between the presence layers of the first and Nth CAS in cases where there is at least one subscriber associated with the other of the first and Nth CASs thereby reducing bandwidth. Further still where a message characterizing the published presence state for a given RO is communicated between the presence layers of the first and Nth CAS the message can be relatively small since data such as signaling information can be omitted.

Additionally in the first second and third examples redundant processing of the presence state for each of the ROs can be reduced and or eliminated. For instance in the first example since the presence state for the RO N K 1 is determined by the presence layer of the Nth CAS and provided to the presence layer of the first CAS there is no need for the presence layer of the first CAS to repeat the determination of the presence state for the RO N K 1 .

The memory can include a communication layer that can be configured to manage a calling history for each of a plurality of instances of the RO e.g. RO of that are associated with the CAS . For example the CAS can communicate with a TMS e.g. the TMS illustrated in a switch e.g. the switch illustrated in and each RO that is connected to the switch. The communication layer can receive signaling information e.g. a telephony or other event associated with a communications session for each associated RO from the TMS via the network and generate a communication state for each associated RO based on the event information. The communication state for a given RO can include for example an identity e.g. a telephone number of each connection of the given RO a duration of the connection and a status of the RO e.g. off hook online ringing or the like . The communication layer can store a communication state for each associated RO in communication information .

The memory can also include a presence layer that can receive and process the communication information . The presence layer can include a presence calculator that can calculate a presence state for ROs associated with the CAS . Table 2 includes an example of pseudo code that could be employed by presence calculator to determine the presence state for ROs associated with the CAS .

Table 2 describes instructions corresponding to a method for calculating the presence state of a given RO. As an example in Table 2 if the given RO has exactly one call and the given RO is actively communicating with another RO the given RO would have 1 Call c in calls and the call s state would be csConnected . If none of bOffering bHeld or bParked flags are set in Table 2 the presence state for the given RO would be presConnectedCall in Table 2 which could correspond to Connected Call in Table 1. Subsequently if the given RO were to put the call on hold and activate a second call e.g. set the csConnected flag in Table 2 and a third call is ringing e.g. set the bOffering flag in Table 2 the resultant presence state for the given RO would be presRingingCall in Table 2 which could correspond to Ringing Call in Table 1.

The published presence state for each RO associated with the CAS can be updated by the presence calculator in real time such that upon detecting a change in the communication information e.g. including telephony signaling data that would result in the presence calculator calculating a different presence state for the given RO would cause a corresponding change in the published presence state. The published presence state or each RO associated with the CAS can be stored by the presence calculator in presence data .

Additionally or alternatively the presence state of a given RO can be a presence of a user that is assigned multiple devices. In one example the user e.g. the given RO can have a desktop phone and a smart phone e.g. a wireless phone . In another example the user can have multiple desktop phones in the given user s working space. In yet another example the user can have a desktop phone and an instant messaging client. The presence state for each device associated with the user can be implemented for example as a presence state included in Table 1 described with respect to . Stated differently the presence state for the given RO e.g. a user can represent an aggregate e.g. summary of presence states of the multiple devices associated with the user. In this situation the presence calculator can examine communication information of each device associated with the user e.g. the given RO to determine a published presence state that can characterize an aggregate of the communication states associated with each of the devices associated with the user. For instance if each device associated with the user is idle the published presence state for the given RO can also be set to idle. Additionally if one or more devices associated with the user indicates that the user is unavailable e.g. Ringing Call On the Phone Connected Call or the like the published presence state for the given RO can be set to such a presence state.

In other examples the presence state of a given RO can be a presence state of multiple users that share a single device e.g. a shared resource . In one example the given RO can include a conference phone that is shared by multiple users. In such a situation the presence state for the given RO can be the presence state for the plurality of users.

In yet other examples the presence state of a given RO can be an aggregate presence state of multiple users wherein each user can be assigned multiple devices or a single device such as in a group. In such a situation the presence state for the given RO can be an aggregate of the presence state for the plurality of users in the group.

Additionally in some examples the presence calculator can communicate with calendar services e.g. scheduling and or location services e.g. positing to facilitate the determination of the presence state for each RO. For example each RO or some subset thereof associated with the CAS can have a calendar that could provide scheduling information to the calendar services that can indicate a time where a respective RO is unavailable e.g. in a meeting . In such a situation the presence calculator can include such scheduling information in the calculation of the presence state for each RO associated with the CAS . Similarly the location services can provide location information that can characterize a physical location of each RO or some subset thereof associated with the CAS . The presence calculator can include such position information in the calculation of the presence state for each RO associated with the CAS .

The presence layer can include a subscription engine that can include a presence application programming interface API to receive a client subscription request from a client operating on a device e.g. a client computer or RO . In some examples the presence API can include a client presence API that can receive the client subscription request. The client subscription request can specify a request for a presence state of a given user associated with a given RO. The client subscription request can include for example an identifier e.g. an extension and or an address of the given RO and or an identifier for a given user e.g. a name or username .

The client subscription request can be analyzed by the subscription engine . The subscription engine can access an RO database RO DB to identify the given RO. The RO DB can include data characterizing an RO associated with the CAS as well as data characterizing ROs associated with different CASs. The data characterizing a specific RO can include data that identifies for example a user assigned to the specific RO capabilities of the specific RO as well as security privileges associated with the user assigned to the RO. For instance as noted the specific RO can have data stored in the RO DB which data can indicate if the specific RO is implemented as a smart phone a desktop phone or a soft phone e.g. software executing on a computer an instant messaging client or the like. If the given RO is identified the user associated with the given RO can also be identified which user can be referred to as the given user. Additionally the data can characterize privileges of the specific RO and such privileges can be based on a role of a user associated with the specific RO e.g. as defined within the enterprise system .

The client subscription request from the client of the device can be analyzed by the subscription engine to determine a CAS associated with the given RO. In some examples the client subscription request can directly identify the given RO e.g. by extension number or username associated with the given RO . In other examples the client subscription request can be a search request that includes only part of the information needed to specifically identify the given RO e.g. a partial name a partial extension number or the like . In such example the subscription engine can search the RO DB for the RO or ROs that is a closest match or matches and designate the RO that is the closest match as the given RO and or the given user. The subscription engine can examine the data associated with the given RO and or the given user to determine the associated CAS.

In some examples the given RO may be associated with the CAS . In such a situation the subscription engine can retrieve the published presence state associated with the given RO from the presence data . In other examples the given RO may be associated with another CAS that communicates with the CAS by the network . In such a situation the subscription engine can provide a CAS subscription request to the other CAS via the network . The amount of detail requested in the CAS subscription request can vary for example based on the type of client request as explained herein. In response the subscription engine can receive a published presence state that characterizes a substantially real time presence state of the given user. The subscription engine can store the published presence state in the presence data .

The subscription engine can analyze the type of the client subscription request the capabilities and the privileges associated with the client of the device and provide a message to the client of the device in response to the client subscription request. For example the message can include data that characterizes the published presence state of the given RO corresponding to such capabilities privileges and the type provided by the client subscription request. The type of client subscription request can specify for example one of any number of levels of detail. The data corresponding to the published presence state can depend on a given subscription request or it can be determined based on evaluation of multiple subscription requests for presence state information of a given RO. In some examples the level of presence state information for a given RO can be for example commensurate with the highest level e.g. most granular level of detail of presence state indicated by a subscription request for the given RO. As mentioned there can be any number of subscription requests for presence information for each RO each of which can specify a different level of presence information.

In one example the client subscription request can be a basic presence a detailed presence or an enhanced detailed presence. In an example where capabilities and or privileges of the client or device or the client subscription request indicates the client is to be provided a basic presence the subscription engine can analyze the published presence state of the given RO and provide a corresponding presence state for the client. For instance if the client of the device is to receive a basic presence and the published presence state of the given RO is Connected Call Ringing Call or Held Call the subscription engine can simply provide a presence state of On the Phone to the client of the device and if the published presence state of the given RO is Idle the subscription engine can provide a presence state of Idle to the client of the device. In other examples such as where the privileges capabilities and the type of the client subscription request indicates that the client of the device is to receive a detailed presence the subscription engine can provide the actual published presence state of the given RO such as information that can for example identify whether the given RO is Idle Offering a Call Connected Call Connected Workgroup Call or the like. In yet other examples such as where the privileges capabilities and the type of the client subscription request indicates that the client of the device is to receive an enhanced detailed presence the subscription engine can provide the detailed presence state of the given RO as well as information characterizing a number of calls that the given RO is connected to an identity e.g. an extension number to which unanswered calls are forwarded or the like.

The corresponding presence state for the client of the device can be provided to the client of the device from the presence API via the network . Data characterizing details of the subscription for the given RO can be stored in subscription data . The subscription data can include for example an identifier of the CAS associated with the given RO the type of subscription request or the like.

In another example if the CAS and the another CAS already have an existing e.g. open communication connection the presence data for the given RO can be provided via the existing communication connection. For instance if the CAS receives a first client subscription request for an enhanced detailed presence for the given RO from a client from a first device the client subscription request can be processed in the manner described to establish an open connection. In this situation if a second client subscription request for a detailed presence or a basic presence for the given RO from a client from a second device is received at the CAS the subscription engine can determine that the presence state for the given RO is already being provided to the CAS . In this situation the subscription engine can modify the presence state to accommodate the type of subscription request provided by the client of the second device and provide the modified presence state to the client of the second device without opening a second communication session.

In yet another situation if the CAS receives a first client subscription request for a basic presence for the given RO from a client from a first device the client subscription request can be processed in the manner described to establish an open connection. In this situation if a second client subscription request for a detailed presence or a enhanced detailed presence for the given RO from a client from a second device is received at the CAS the subscription engine can determine that the presence state for the given RO is already being provided to the CAS . In this situation the subscription engine can modify the CAS subscription request to the other CAS to accommodate the type of subscription request provided by the client of the second device. Moreover the CAS can modify the presence state of the given RO to be commensurate with type of subscription request provided by the client of the first device e.g. a basic presence and provide the presence state to the client of the second device corresponding to the type of subscription request provided from the client of the second device such that the subscription requests for the first and second devices can be serviced with a single communication session. Accordingly where multiple client subscription requests are provided from multiple requesting clients for a presence state the same RO the subscription engine can provide a single CAS subscription request to the appropriate CAS for a highest level of detail e.g. most detailed requested by any of requesting clients.

Additionally the presence API can be programmed to receive a CAS subscription request from another CAS via the network for a presence state for a RO associated with the CAS . In some examples the presence API can include a CAS presence API that can receive the CAS subscription request. The CAS subscription request can for example include an identifier of a given RO that is associated with the CAS . In some examples the CAS subscription request can also include an indication of a level of detail requested for the presence state e.g. basic presence detailed presence or enhanced detailed presence . In response to the CAS subscription request the subscription engine can retrieve the published presence state for the given RO from the presence data . Additionally the subscription engine can set the published presence state to a level of detail corresponding to the CAS subscription request. The presence API can provide the published presence state to the other CAS via the network . Moreover in the event that the subscription engine detects a change to the presence state of the given RO the subscription engine can employ the presence API to provide an update message to the other CAS via the network that reflects the change to the presence state of the given RO.

In another example a client of a device that is associated with the CAS can have an ongoing subscription for a presence state of a given RO that is associated with the another CAS the details of which can be stored in the subscription data . In this situation if the device is a mobile device e.g. a smartphone the device may cease association with the CAS and initiate association with a different CAS such as the another CAS or a third CAS which can be referred to as a new CAS. In such a situation in some examples the subscription engine can terminate the subscription of the client of the device such that the client of the device can provide a client subscription request to the new CAS that can be processed in the manner described herein. In other examples the subscription engine can provide the subscription data to the new CAS and a subscription engine of the new CAS can modify the subscription data to support the change from the CAS to the new CAS.

By employing the CAS bandwidth usage of the network between the CAS and the other CAS can be reduced. For example the CAS and or a corresponding DTAS does not need to transmit signaling and or event information to the other CAS that does not result in a change to a published presence state. Further the presence layer of the CAS only needs to provide the published presence state in response to subscription requests. That is the published presence state of ROs which no subscription request has been received need not be provided from the CAS to another CAS. Moreover redundant calculations of the published presence state for various RO can be reduced and or eliminated.

In view of the foregoing structural and functional features described above example methods will be better appreciated with reference to . While for purposes of simplicity of explanation the example methods of are shown and described as executing serially it is to be understood and appreciated that the presence examples are not limited by the illustrated order as some actions could in other examples occur in different orders and or concurrently from that shown and described herein. Moreover it is not necessary that all described actions be performed to implement a method. The example methods of can be implemented as instructions stored in a non transitory machine readable medium. The instructions can be accessed by a processing resource and executed to perform the methods disclosed herein.

At a subscription request for a presence state for a given RO of the ROs associated with the CAS can be received at a presence API e.g. the presence API of of the presence layer. The subscription request can include an identifier of the given RO and or an identity e.g. an extension number of the RO associated with the given RO. At a subscription engine of the presence layer can make a determination as to whether the subscription request is a client subscription request that originated from a client of a device e.g. a computer or RO . If the determination at is positive e.g. YES the method can proceed to . If the determination is negative e.g. NO the method can proceed to .

At since the determination at is negative the subscription engine can determine that the CAS is a CAS subscription request that originated from another CAS. Moreover at the subscription engine can determine a given RO associated with the subscription request. In some examples the given RO can be explicitly identified in the subscription request. In other examples the given RO can be identified by the context of the subscription request e.g. a partial name a partial extension number or the like . At a published state of the given RO can be provided to the other CAS via the presence API. In some examples the published presence state of the given RO can be based on the type of subscription request provided by the CAS e.g. basic presence detailed presence or enhanced detailed presence which can contain additional data beyond the presence state .

At the published presence state of the given RO can be updated by the presence calculator in response to the presence calculator detecting a change in the presence state of the given RO. At the presence API can provide the updated published presence state to the other CAS. In this manner a substantially real time status of the published presence state for the given RO can be maintained.

At a determination by the subscription engine can be made as to whether a given RO identified in the subscription request is associated with the CAS. If the determination at is positive e.g. YES the method can proceed to . If the determination at is negative e.g. NO the method can proceed to . At a published presence state of the given RO can be provided by the presence API to the client of the device from which the subscription request originated. The published presence state provided to the client of the device can be commensurate with the type of subscription request e.g. basic presence detailed presence or enhanced detailed presence as well as the capabilities and privileges of the client of the device from which the client subscription request is provided.

At an identity of the CAS e.g. the other CAS that is associated with the given RO can be determined by the subscription engine. At a CAS subscription request for the given RO can be generated by the presence API and provided to the other CAS. At the presence API can receive a published presence state that can characterize a substantially real time presence state for the given RO which can be updated by the other CAS in response to detecting a change in the presence state of the given RO. At the published presence state for the given RO can be provided to the client of the device via the presence API. The published presence state provided to the client of the device can be commensurate with the type of subscription request e.g. basic presence detailed presence or enhanced detailed presence as well as the capabilities and privileges of the client of the device from which the client subscription request is provided. In this manner a client subscription for the client of the device can be established.

At the presence API can receive an updated published presence state from the other CAS that can characterize a change in the presence state of the given RO. At the updated published presence state for the given RO can be provided to the client of the device via the presence API. In this manner the substantially real time status of the published presence state for the given RO can be maintained.

At a determination by the subscription engine can be made as to whether the new CAS is the given CAS. If the determination at is positive e.g. YES the method can proceed to . If the determination at is negative e.g. NO the method can proceed to . At the subscription data can be modified by the subscription engine to identify the given CAS. At a published presence state of the given RO can be provided by a presence API of the subscription engine to the client of the device. The published presence state provided to the client of the device can be commensurate with the type of subscription request e.g. basic presence detailed presence or enhanced detailed presence as well as the capabilities and privileges of the client of the device from which the client subscription request is provided.

At an identity of the CAS e.g. the new CAS that is associated with the given RO can be determined by the subscription engine. At the subscription engine can modify the subscription data to reflect the change to the CAS associated with the given RO. At a CAS subscription request for the given RO can be generated by the presence API and provided to the new CAS. At the presence API can receive a published presence state that can characterize a substantially real time presence state for the given RO which can be updated by the new CAS in response to detecting a change in the presence state of the given RO. At the published presence state for the given RO can be provided to the client of the device via the presence API. The published presence state provided to the client of the device can be commensurate with the type of subscription request e.g. basic presence detailed presence or enhanced detailed presence as well as the capabilities and privileges of the client of the device from which the client subscription request is provided.

What have been described above are examples. It is of course not possible to describe every conceivable combination of components or methodologies but one of ordinary skill in the art will recognize that many further combinations and permutations are possible. Accordingly the disclosure is intended to embrace all such alterations modifications and variations that fall within the scope of this application including the appended claims. As used herein the term includes means includes but not limited to the term including means including but not limited to. The term based on means based at least in part on. Additionally where the disclosure or claims recite a an a first or another element or the equivalent thereof it should be interpreted to include one or more than one such element neither requiring nor excluding two or more such elements.

