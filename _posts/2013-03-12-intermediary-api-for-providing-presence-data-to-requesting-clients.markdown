---

title: Intermediary API for providing presence data to requesting clients
abstract: Technologies are generally described for providing an intermediary API for intercepting and processing subscribing requests to a communications server. An intermediary API may intercept a subscribing request from a local or PIC client to receive presence status data from a presentity such as a bot executed on the communications server. The intermediary API may be configured to provide the presence data to a PIC client without consuming the communications server registered subscription limit. The intermediary API may employ a server-supported protocol-specific processing language or module to intercept the subscribing requests, to determine if the request is targeted for one or more bots executed on the communications server, and to determine if the request is for presence data for one or more bots. The intermediary API may determine if the request is non-terminating, and if all criteria are met, may provide presence data to the requesting client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09282157&OS=09282157&RS=09282157
owner: Microsoft Technology Licensing, LLC
number: 09282157
owner_city: Redmond
owner_country: US
publication_date: 20130312
---
In a communications environment a communications server associated with an entity such as an enterprise may enable communication services such as instant messaging presence and audio video conferencing as some examples. In some scenarios the communications server may employ an automated bot to provide automated centralized always on and interactive communication services. Some example automated communication services provided by the bot may include a help desk a customer service instant messaging service and a call center. The bot executed on the communications server may publish a presence status to indicate its current communication status and a user desiring to communicate with the bot may initiate a conversation with the bot based on the published presence status. A user may only be able to initiate a conversation with the bot when the presence status of the bot is online and or available. In order to receive the presence status of the bot the user may register with the communications server to receive presence data from a specified bot. The registering user may be referred to as a registered subscriber of the bot.

In order to optimize resources of the communications server the communications server may define a maximum number of registered subscribers that can concurrently be subscribed to the bot. If a number of registered subscribers attempting to subscribe to the bot exceeds the maximum number set by the communications server then the bot may appear offline unknown or unavailable to any additional registering user which may cause the additional registering user to be unable to communicate with the bot because the user cannot initiate a conversation with the bot when it is offline and or unavailable.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to exclusively identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to an intermediary application programming interface API configured to intercept and process a subscribing request for a presence entity presentity executed on a communications server. The intermediary API may be configured to intercept a subscribing request from a local client or public internet cloud PIC client to receive presence status data from a presentity such as a bot executed on the communications server. The intermediary API may provide the presence data to a PIC client in order to optimize a registered subscription limit of the communications server. The intermediary API may also determine if the request is from a PIC client determine if the request is targeted for one or more live bots executed on the communications server and determine if the request is for presence data for one or more live bots. Additionally the intermediary API may determine if the request is non terminating and if all criteria are met may provide presence data to the requesting PIC client without adding the PIC client as a registered subscriber of the bot.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory and do not restrict aspects as claimed.

As briefly described above an intermediary API may be employed by a communications server to intercept a subscribing request from a local client or PIC client to receive presence status data from a presentity such as a bot executed on the communications server. The intermediary API may provide the presence data to a PIC client without adding the PIC client as a registered subscriber of the bot to optimize a registered subscription limit of the communications server. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and comparable computing devices. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer implemented process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program that comprises instructions for causing a computer or computer system to perform example process es . The computer readable storage medium is a computer readable memory device. The computer readable storage medium can for example be implemented via one or more of a volatile computer memory a non volatile memory a hard drive a flash drive a floppy disk or a compact disk and comparable hardware media.

Throughout this specification the term platform may be a combination of software and hardware components for providing an intermediary API for intercepting and processing subscribing requests to a communications server. Examples of platforms include but are not limited to a hosted service executed over a plurality of servers an application executed on a single computing device and comparable systems. The term server generally refers to a computing device executing one or more software programs typically in a networked environment. However a server may also be implemented as a virtual server software programs executed on one or more computing devices viewed as a server on the network. More detail on these technologies and example operations is provided below.

As illustrated in diagram a communications server associated with an entity such as an enterprise may enable communication services such as providing the infrastructure for instant messaging presence VoIP ad hoc and structured conferences audio video and web conferencing and PSTN connectivity through a third party gateway or SIP trunk. These features may be available within an enterprise an organization between organizations and with external users on the public internet and or standard phones on the PSTN as well as SIP trunking . Clients may communicate with applications executed on the communications server over a network such as a cloud network and a wired or wireless network and additionally clients may communicate with other clients employing the communications services offered by the communications server . In some examples the communications server may provide communications services such as conferencing email access text message exchange and similar ones. Other example communications services provided by the communications server may include for example a contact center and a help desk that provides information and responses to an inquiry in a client or user initiated conversation.

In an example embodiment the communications server may employ a bot to provide centralized always on and interactive communication services. The bot may be an automated program designed to simulate an intelligent conversation and communication with one or more human users via auditory or textual methods. The bot may integrated into dialog systems on the communications server for various practical purposes such as offline help personalized service or information acquisition. In an example embodiment the bot may serve as a middle tier between the enterprise communications server and a client can be created and deployed to provide automated communications services. In an example scenario the bot may function as a help desk to connect a customer client to an appropriate support staff based on the customer s answers to questions from the bot . Another example is an application that provides news feeds or stock quotes that are based on direct user input. In these scenarios the bot may be a trusted server application executed on the communication server that uses a Unified Communications Managed API UCMA and the bot can be added to the contact list of a client or user accessing the bot . An additional example bot may be a shipment tracking bot for prospective recipients to check the shipping progress thorough an instant messaging like conversation or to connect to a supporting staff in a call center if human assistance is needed. Further a bot may be a call center bot that answers calls from a communications client to handle customer inquiries via instant messaging and or interactive voice response as the request arrives without forcing a caller wait on hold on a telephone or to answer a series of teleprompter commands.

In an example embodiment the bot may be referred to us a presentity indicating that the bot has presence information associated with it such as online status reachability and willingness to communicate. Presentity a combination presence and entity refers to an entity that has presence information associated with it such as status reachability and willingness to communicate. For example users of an instant messaging service may be referred to as presentities and their presence information may be their user status online offline away etc. . Presentity may also refer to a resource or role such as a conference room or help desk. Moreover presentity may also refer to a group of users for example a collection of customer service agents in a call center. The bot executed on the communications server may publish a presence state to indicate its current communications status. This published state may inform clients that wish to contact the bot about the bot s availability and willingness to communicate via a set of communication services offered by the communications server .

In a system according to embodiments when a client wishes to initiate a conversation with the bot the bot needs to be running and available on the communications server . The client such as an audio textual or video messaging application may not be able to initiate a conversation with the bot unless the client has received a presence status from the bot indicating that the bot is online running and available . Therefore the bot may be configured to provide a presence status and the client may be configured to receive the presence status and the online presence status of the bot may need to be provisioned to the client so that the client can initiate a conversation with the bot . If the client cannot connect to the bot or if the presence data indicates an offline unknown or unavailable status of the bot then the client cannot communicate with the bot .

In an example embodiment the client may receive the presence status of the bot by a subscribing to presence data published by the bot . In order to subscribe to receive the presence data for the bot the client may register with the communications server to receive specified types of presence data by a specified bot. The registered subscriber may be a PIC client such that the presence data for the bot executed on the communications server may be provided over the network to the PIC client. The communications server may continuously provide the presence data to the registered subscribers over the network .

The registered subscribers of a bot may contribute to a resource consumption of the communications server and often times the communications server may cap or limit a maximum number of registered subscribers that can concurrently subscribe to a presentity in order to conserve the communications server resources. In a scenario when the bot is oversubscribed i.e. a number of registering subscribers attempting to subscribe to the presentity exceeds the maximum number set by the communications server then the communications server may prevent clients over the subscriber limit from being included in the bot s subscription list and may not provide the presence data of the bot to the excluded registering subscribers. As a result the bot may appear as unavailable unknown or offline which may result in that the registering subscriber may not be able to communicate with the bot because the registering subscriber cannot initiate a conversation with the bot when it is offline and or unavailable. Since a bot may have a large number of registering subscribers resulting in a bot that is likely to be oversubscribed any clients beyond the maximum number permitted by the communications server configured registered subscription limit may not receive the presence data of the bot and cannot initiate communications with the bot .

In order to optimize performance to allow a greater number of clients to receive presence data for bots executed on the communications server the communications server may employ an intermediary API to intercept subscribing requests from PIC and local clients . If the subscribing request is from a local client the intermediary API may be configured to reroute the subscribing request to the communications server which may be configured to process the subscribing requests itself and may remove the local client request from the bot s contact list. If the subscribing request is from a PIC client however the intermediary API may be configured to process the subscribing request itself and may provide presence data for a requested bot without consuming the communications server registered subscription limit.

As will be discussed below in further detail in a system according to embodiments the intermediary API may intercept a subscribing request from a PIC client and the intermediary API may process the subscribing request from the PIC client and may parse the subscribing request. The intermediary API may determine a presence status of bots running on the communications server and the intermediary API may respond to the PIC client with the presence status of the bots . The intermediary API may provide the presence status for the bots without registering the PIC client as a registered subscriber of the bot enabling the subscription resource consumption of the communications server to be optimized.

In a system according to embodiments the communications server may employ the intermediary API to provide presence data for a presentity such as a bot to a registering subscriber without reaching the communications server s registered subscription limit. The intermediary API may process the request and may return the presence status of an available bot as always online. In an example scenario the intermediary API may intercept a subscribing request from a client which may be a local client executed on the communications server or may be a PIC client executed on a remote server and communicating with the communications server over a network. If the request for presence data is from a local client then the intermediary API may be passed to the communications server for handling the request. In this scenario the presence status of the bot may be cached in the local client and then any further request may be removed from the bot s subscription list so that the client may not be counted a registered subscriber of the bot . The cached presence status may then be used to show the presence status of the bots throughout the subscription session as always online and available because typically a bot is by design always online. If the subscribing request is by the PIC client then the intermediary API may handle the subscribing request to receive the presence data of the bot executed on the communications server and may process the request itself without affecting the registered subscription consumption of the communications server .

In an example embodiment the intermediary API may be executed on the communications server . The subscribing request from the PIC client may be a session initiated protocol SIP subscribing request and the intermediary API may intercept the SIP subscribing request before it processed by the communications server . The intermediary API may employ SIP processing language to intercept the SIP subscribing requests messages. The intermediary API may be configured to intercept the SIP subscribing request by creating an application manifest as an XML document specifying subscribe as the types of messages request to be intercepted. The intermediary API may also embed a script in a SIP processing language to determine if the request is for a presence data subscription for one or more bots executed on the communications server and also if the request is front a PIC client. If both conditions are true i.e. the request is for a presence data subscription for one or more bots and the requesting entity is a PIC client then the intermediary API may hold the SIP subscribing request for further processing. If the one or both are not true then the intermediary API may reroute the request to the communications server for processing. For example the request may be a subscribing request by local client executed on the communications server which may be processed by the communications server or in another example the request may be a request other than a request for presence data by a PIC client. For example the subscribing request may be a request to receive other kinds of data such as self published contact lists and roaming data to server provisioned configuration and policies as some examples. In order to determine if the request is for a presence data subscription the intermediary API may be configured to recognize an event header parameter of the SIP subscribing request. For example for a presence data subscription request the event header parameter may have a string value of presence. The above discussed scenario is for illustration purposes and does not constitute a limitation on embodiments. For example SIP is only one example communication protocol. Any other communication protocol and server configurations may be used to implement embodiments.

In an example embodiment in order to determine if the request is from a PIC client the intermediary API may be configured to recognize a parameter network value indicating a PIC client such as a public cloud parameter value for example. Additionally the intermediary API may determine if the subscribing request is a terminating or a non terminating request. A terminating subscribing request may be a request to cancel an ongoing subscription to the bot indicating the client does not wish to receive any further subscription results or presence data. A non terminating subscribing request may continue to be processed by the intermediary API while a terminating subscribing request may be sent to the communications server . In an example embodiment the intermediary API may be configured to recognize a terminating subscribing request by an expires parameter value included in the subscribing request. For example an expires parameter value of zero may indicate a terminating request and an expires parameter value of greater than zero may indicate a non terminating request.

Further the intermediary API may be configured to determine if the intercepted SIP subscribing request is targeted for a live or online bot. In an example embodiment the intermediary API may determine if the subscribing request is targeted for a live bot by parsing a to header value of the subscribing request to obtain a to URI value. The to URI value may specify the SIP URI of the requested bot. The intermediary API may compare the parsed to URI value with currently activated application endpoints which may be live or online bots having internet access. The intermediary API may be configured to continuously maintain awareness of currently installed bots on the communications server and may continuously maintain a local online or offline status of all the currently installed bots. In order to continuously maintain the knowledge of the currently installed bots the intermediary API may employ communications server cmdlets or comparable means programmatically to obtain a list of available bots running on the communications server . The intermediary API may periodically poll the communications server for trusted application endpoints because bots may be registered with the communications server as trusted application endpoints. The polling may be done concurrently with other subscribing request processing by the intermediary API .

In an example embodiment after processing the received SIP subscribing request from the PIC client if the SIP request is made by a PIC client and is targeted for an installed bot the intermediary API may return a response to acknowledge successful receipt of the SIP request. The intermediary may respond to the PIC client employing a unified communications manages API UCMA to send a presence status of the bots to the PIC client. For example the intermediary API may return a 200 OK server code to indicate successful receipt of the request. Further if the intermediary API identifies that the targeted bot of the SIP request is live and online the request is non terminating and the request is made by a PIC client then the intermediary API may return a response to the PIC client. The response may be a notify response which may indicate the online status of the targeted bot. NOTIFY needs to be sent with the dialog Id of the received SIP subscribe request and that the RecordRoute received in the received SIP subscribe request should reversed to compose the Route header that foes into the Notify. If the intermediary API identifies that the request is not targeted for a live bot the request is a terminating response and or the request is not made by a PIC client then the intermediary API may reroute the intercepted SIP request to the communications server for processing by the communications server .

The subscribing request from the PIC client may be an SIP subscribing request and the intermediary API may intercept the SIP subscribing request before it reaches the communications server . The intermediary API may employ SIP processing language to intercept the SIP subscribing requests messages and may embed a script in a SIP processing language to determine if the request is for a presence data subscription for one or more bots executed on the communications server and also if the request is from a PIC client. If the intermediary API determines the request is for presence data for one or more bots and the requesting entity is a PIC client then the intermediary API may route the subscribing request to a processing module for further processing. If the one or both are not true then the intermediary API may reroute the request to the communications server for processing.

At the processing module the intermediary API may determine if the intercepted SIP subscribing request is targeted for a live or online bot . If the intermediary API identifies that the request is not targeted for a live bot the intermediary API may reroute the request to the communications server for processing. If the subscribing request is targeted for a live or online bot the intermediary API may determine if the subscribing request is a terminating or a non terminating request . A non terminating subscribing request may continue to be processed by the intermediary API while a terminating subscribing request may be rerouted to the communications server . After processing the received SIP subscribing request from the PIC client if the SIP request is made by a PIC client and is targeted for an installed bot the intermediary API may return a response to acknowledge successful receipt of the SIP request such as a 200 OK server code to indicate successful receipt of the request . Additionally if the intermediary API identifies that the targeted bot of the SIP subscribing request is made by a PIC client the targeted bot of the SIP subscribing request is live and online subscribe and the SIP request is non terminating then the intermediary API may send a response with the presence data of the requested bot to the PIC client .

The example systems in have been described with specific servers client devices configurations applications and interactions. Embodiments are not limited to systems according to these example configurations. A platform providing an intermediary API for intercepting and processing subscribing requests to a communications server may be implemented in configurations employing fewer or additional components configurations and performing other tasks. Furthermore specific protocols and or interfaces may be implemented in a similar manner using the principles described herein.

Client applications executed on any of the client devices may facilitate communications via application s executed by servers or on individual server . An application executed on one of the servers may facilitate intercepting and processing subscribing requests to a communications server. The application may provide presence data for a bot requested by a PIC client as discussed previously. The application may retrieve relevant data from data store s directly or through database server and provide requested services e.g. document editing to the user s through client devices .

Network s may comprise any topology of servers clients Internet service providers and communication media. A system according to embodiments may have a static or dynamic topology. Network s may include secure networks such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s may also coordinate communication over other networks such as Public Switched Telephone Network PSTN or cellular networks. Furthermore network s may include short range wireless networks such as Bluetooth or similar ones. Network s provide communication between the nodes described herein. By way of example and not limitation network s may include wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources and data distribution systems may be employed to implement a platform providing an intermediary API for intercepting and processing subscribing requests to a communications server. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

Application may enable interception of a subscribing request for presence data of a bot from a PIC client. Through a processing module application may determine if the subscribing request is for a live and online bot and if the request is non terminating. If the subscribing request meets certain criteria the application may provide presence data for the bot the requesting client. Application and processing module may be separate application or integrated modules of a hosted service. This basic configuration is illustrated in by those components within dashed line .

Computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer readable storage media. Computer readable storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can he used to store the desired information and which can be accessed by computing device . Any such computer readable storage media max be part of computing device . Computing device may also base input device s such as keyboard mouse pen voice input device touch input device an optical capture device for detecting gestures and comparable input devices. Output device s such as a display speakers printer and other types of output devices may also be included. These devices are well known in the art and need not be discussed at length here.

Some embodiments may be implemented in a computing device that includes a communication module a memory device and a processor where the processor executes a method as described above or comparable ones in conjunction with instructions stored in the memory device. Other embodiments may be implemented as a computer readable memory device with instructions stored thereon for executing a method as described above or similar ones. Examples of memory devices as various implementations of hardware are discussed above.

Computing device may also contain communication connections that allow the device to communicate with other devices such as over a wired or wireless network in a distributed computing environment a satellite link a cellular link a short range network and comparable mechanism. Other devices may include computer device s that execute communication applications web servers and comparable devices. Communication connection s is one example of communication media. Communication media can include therein computer readable instructions data structures program modules or other data. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Example embodiments also include methods. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where a subscribing request may be received. The subscribing request may be an SIP subscribing request to receive presence data for a bot executed on a communications server and intermediary API may intercept the SIP subscribing request before it reaches the communications server . At operation the intermediary API may determine if the request is from a PIC client. At operation the intermediary API may determine if the intercepted SIP subscribing request is targeted for a live or online bot on the communications server. At operation the intermediary API may determine if the subscribing request is a terminating or a non terminating request. If the request is non terminating operation may be followed by operation where the intermediary API may send the presence data of the requested bot to the PIC client. The presence data for the requested bot may be provided to the PIC client without affecting the registered subscription consumption of the communications server.

The operations included in process are for illustration purposes. Providing an intermediary API for intercepting and processing subscribing requests to a communications server may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

