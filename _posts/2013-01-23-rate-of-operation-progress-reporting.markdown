---

title: Rate of operation progress reporting
abstract: According to one aspect of the present disclosure, a method and technique for rate of operation progress reporting is disclosed. The method includes: responsive to completion by an application of one or more batch operations, storing an operation count corresponding to each completed batch operation; and, responsive to being polled by a monitoring module: identifying a time reporting window for the batch operations; and reporting a rate of progress meter value for the batch operations to the monitoring module based on the operation counts and the time reporting window.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949862&OS=08949862&RS=08949862
owner: International Business Machines Corporation
number: 08949862
owner_city: Armonk
owner_country: US
publication_date: 20130123
---
In computer systems event counters are often implemented to enable monitoring of the behavior and performance of system parameters. A counter corresponding to each operation event to be monitored is incremented each time that operation event has been completed. Monitoring software polls the values of these counters producing snapshots that illustrate over time what operations events the system has completed. The monitoring software usually performs polling of these values on a set interval determined by the performance analyst or system administrator running the monitoring software. The number of operations events performed during the interval may then computed by subtracting the count returned in the previous poll from the current value and then the average rate over the interval can be computed by dividing by the length of the polling interval.

According to one aspect of the present disclosure a method and technique for rate of operation progress reporting is disclosed. The method includes responsive to completion by an application of one or more batch operations storing an operation count corresponding to each completed batch operation and responsive to being polled by a monitoring module identifying a time reporting window for the batch operations and reporting a rate of progress meter value for the batch operations to the monitoring module based on the operation counts and the time reporting window.

Embodiments of the present disclosure provide a method and technique for rate of operation progress reporting. For example in some embodiments the method and technique includes responsive to completion by an application of one or more batch operations storing an operation count corresponding to each completed batch operation and responsive to being polled by a monitoring module identifying a time reporting window for the batch operations and reporting a rate of progress meter value for the batch operations to the monitoring module based on the operation counts and the time reporting window. Embodiments of the present disclosure enable batch operations to be reported using a floating time reporting window thereby indicating a smoothed rate of progress value for the reported operations. For example an application may be instrumented with code defining a particular time reporting window to be used for a particular event operation to be monitored. The time reporting window may be varied for each particular event operation to be monitored. In response to being polled by a monitoring module for an updated event operation count value the instrumented application uses the time reporting window e.g. instead of the interval from the last poll by the monitoring module to compute a rate of progress meter value for the batch operations. Operation event counts completed at a time earlier than the current time minus the time reporting window are discarded and the remaining operation event counts are summed. The summed value is then divided by the time reporting window or the operating time of the application if less . Thus embodiments of the present disclosure may effectively form a larger fixed reporting window for batch operations than an interval used by an independent monitoring application thereby providing more consistent results for a rate at which batch operations are being processed.

As will be appreciated by one skilled in the art aspects of the present disclosure may be embodied as a system method or computer program product. Accordingly aspects of the present disclosure may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present disclosure may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer usable or computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present disclosure are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

With reference now to the Figures and in particular with reference to exemplary diagrams of data processing environments are provided in which illustrative embodiments of the present disclosure may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.

In some embodiments server and server connect to network along with data store . Server and server may be for example IBM System p servers. In addition clients and connect to network . Clients and may be for example personal computers or network computers. In the depicted example server provides data and or services such as but not limited to data files operating system images and applications to clients and . Network data processing system may include additional servers clients and other devices.

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

In some embodiments memory may be a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices. Persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable such as but not limited to a removable hard drive.

Communications unit provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Modems cable modem and Ethernet cards are just a few of the currently available types of network interface adapters. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit enables input and output of data with other devices that may be connected to data processing system . In some embodiments input output unit may provide a connection for user input through a keyboard and mouse. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system and applications or programs are located on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be in a tangible form such as for example an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . In a tangible form computer readable media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . The tangible form of computer readable media is also referred to as computer recordable storage media. In some instances computer readable media may not be removable.

Alternatively program code may be transferred to data processing system from computer readable media through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples.

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown. For example a storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of storage devices in a tangible form.

Monitoring module is configured to monitor and or report the behavior and or performance of data processing system operations. For example monitoring module may comprise and or have access to a library and or be otherwise configured to collect various types of monitored behavior data . In the illustrated embodiment monitoring module may collect and or otherwise derive counter data and meter data corresponding to monitored operations. Counter data may comprise one or more counters having values that are incremented each time a monitored operation is completed. For example monitoring module may poll a monitored application e.g. application periodically and or according to a predefined schedule interval to collect data corresponding to completed operations. The number of operations performed during the interval may then be computed by subtracting the current counter value from a previous interval counter value. An average operation rate may then be computed by dividing the resulting counter value by the time interval. Meter data may comprise a meter value representing a rate of operation processing.

Application may comprise any type of application of which its behavior and or operation s is desired to be monitored. As an example application may comprise a document management application that submits documents jobs to batch processing application e.g. an indexing engine that performs full text indexing of such documents thereby enabling such documents to text searchable. For example application may submit large transactions and or batched job transactions to processing application for processing e.g. 100 documents jobs at a time . As processing application completes operations on the job batch application may update a counter based on the batch completion e.g. incrementing a counter corresponding to completed job operations by 100 . As indicated above monitoring module may periodically poll application and or a corresponding counter library e.g. counter data to update and or report the operation monitoring data. It should be understood that application may comprise any type of application and or process having operations that are desired to be monitored. Further in the illustrated embodiment the operation that may be monitored may be performed by a different application e.g. processing application than the application that monitors and or reports such operations e.g. application . However it should be understood that the process and or functions described herein may be performed by a single application e.g. application .

As described above monitoring module may periodically poll the counter values associated with monitored operations. However if an operation begins near the end of a measurement polling interval and completes after that measurement polling interval then these work operations will be counted as having been performed in the later polling interval. Although this scenario may slightly skew the monitoring results as long as the duration of each operation is small compared to the polling interval the inaccuracy will be small. However in some applications to increase efficiency some operations are performed in large batches e.g. combining several database operations into a single round trip to the database . While such a batch of operations is in progress the initiating application will typically be waiting until such time that the batch has completed. Upon the batch completing the operation counter will be incremented by the size of the batch since that many operations have now been completed. For example suppose a batch size of 100 is being used. During such operation processing instead of incrementing an event counter one by one the counter will remain at the same value until the entire batch completes at which time the event counter will be incremented by 100 all at once. This may cause an increased monitoring inaccuracy. For example the operation event counter associated with such operations may see the following operation counts across five successive polling intervals 0 0 0 0 100. Thus even though some of these operations were being performed across all five polling intervals the resulting counter values may not reflect accurate performance monitoring.

Embodiments of the present disclosure provide a moving or floating average for the computation of a rate of progress for extended time period batched operations e.g. operations having a quantity and or processing time such that the entire completion of the batched operations may not occur until after one or more subsequent monitoring polling intervals . In the embodiment illustrated in application comprises progress logic which may comprise logic code and or instructions for reporting a rate of batch operation completion utilizing a moving or floating time reporting window. For example in the illustrated embodiment application may be instrumented with code instructions for computing and or otherwise reporting rate of progress data such as a rate of progress meter value utilizing a defined time reporting window . Reporting window may be set defined for each event operation desired to be monitored. Reporting window defines a larger fixed reporting interval for the batched operations independent of the polling interval of monitoring module . Progress logic is used to compute a number of completed events operations within the reporting window divided by the amount of time of the reporting window to thereby provide a smoothed rate of progress value to report to monitoring module .

In some embodiments progress logic is configured to log monitor and or otherwise track a number of completed events operations along with a time when such events operation completed. For example in the embodiment illustrated in progress logic may comprise and or otherwise collect operation data comprising a series of operation counts and a timestamp corresponding to each operation count. Operation count may comprise an event operation count value of the monitored events operations. In response to being polled by monitoring module progress logic may use reporting window to compute derive a rate of progress meter value for the monitored operation. In this embodiment for example in response to being polled by monitoring module for current monitored values progress logic determines the operation counts within the current reporting window sums and or aggregates the identified operation counts and divides the summed aggregated operation counts by the amount of time of the reporting window to obtain the rate of progress meter value. This derived rate of progress meter value is then reported to monitoring module for the current polled interval of the monitoring module e.g. as a number of operations per unit of time . Progress logic may also be configured to monitor track and or record minimum and or maximum rate of progress meter values over the operational duration of application e.g. comparing each current progress meter value with previous minimum maximum progress meter values .

In some embodiments the summed event operation counts that fall within the reporting window from the current or polled time may be divided by the lesser of the time reporting window or the operating time of application . For example in some embodiments to avoid misreporting of a rate of progress meter value that may otherwise be caused during early operation of application e.g. if the operating time of application is less than the time period of reporting window progress logic may divide the summed operation counts falling within the time reporting window by the lesser of the time reporting window or the operating time of application .

At decisional block a determination is made whether monitoring module has polled application for an updated monitoring report. If not the method proceeds to block where application continues logging completed operation event counts. If at decisional block it is determined that monitoring module has polled application for an updated report the method proceeds to block where the time reporting window is identified. At block the logged stored operation event counts are identified. At block operation event counts having a timestamp or occurring earlier than the current time minus the time of the reporting window are discarded. At block the remaining operation event counts falling within the time reporting window based on the current time are summed. At block the summed operation event counts are divided by the lesser of the time reporting window or the operating time of application . At block the rate of progress meter value derived at block is reported to monitoring module . The method then proceeds to block where application continues logging operations events.

Thus embodiments of the present disclosure enable batch operations to be reported using a floating time reporting window thereby indicating a smoothed rate of progress value for the reported operations. For example an application may be instrumented with code defining a particular time reporting window to be used for a particular event operation to be monitored. The time reporting window may be varied for each particular event operation to be monitored. In response to being polled by a monitoring module for an updated event operation count value the instrumented application uses the time reporting window e.g. instead of the interval from the last poll by the monitoring module to compute a rate of progress meter value for the batch operations. Operation event counts completed at a time earlier than the current time minus the time reporting window are discarded and the remaining operation event counts are summed. The summed value is then divided by the time reporting window or the operating time of the application if less . Thus embodiments of the present disclosure may effectively form a larger fixed reporting window for batch operations than an interval used by an independent monitoring application thereby providing more consistent results for a rate at which batch operations are being processed.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiment was chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

