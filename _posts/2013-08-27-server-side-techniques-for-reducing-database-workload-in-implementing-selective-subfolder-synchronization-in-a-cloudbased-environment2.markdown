---

title: Server side techniques for reducing database workload in implementing selective subfolder synchronization in a cloud-based environment
abstract: Techniques are disclosed for reducing database workload in implementing selective subfolder synchronization in a cloud-based environment. In one embodiment, a method comprises, in response to a selection, from a user, of a first synchronization state of a first folder in the workspace, synchronizing content of the first folder in the workspace with a corresponding folder on devices of a user (and collaborators) based on the first synchronization state. The workspace is shared among the user and one or more collaborators of the user. In some embodiments, the method further comprises determining the first synchronization state of the first folder based on synchronization states of one or more folders, other than the first folder, that are related to the first folder. The entries can be configured to identify hierarchical relationships between the one or more folders and the first folder on a per-user basis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09558202&OS=09558202&RS=09558202
owner: Box, Inc.
number: 09558202
owner_city: Redwood City
owner_country: US
publication_date: 20130827
---
This application claims the benefit of and or the right of priority to U.S. Provisional Application No. 61 693 521 entitled BACKEND IMPLEMENTATION OF SYNCHRONIZATION CLIENT SELECTIVE SUBFOLDER SYNCING IN A CLOUD BASED ENVIRONMENT filed Aug. 27 2012 which is hereby incorporated by reference in its entirety.

This application is related to Great Britain Patent Application No. 1306177.5 entitled METHOD AND APPARATUS FOR SELECTIVE SUBFOLDER SYNCHRONIZATION IN A CLOUD BASED ENVIRONMENT filed Apr. 5 2013 which claims priority to U.S. Utility patent application Ser. No. 13 856 607 entitled METHOD AND APPARATUS FOR SELECTIVE SUBFOLDER SYNCHRONIZATION IN A CLOUD BASED ENVIRONMENT filed Apr. 4 2013 which is entitled to the benefit of and or the right of priority to U.S. Provisional Application No. 61 620 568 entitled SYNCHRONIZATION CLIENT SELECTIVE SUBFOLDER SYNCING IN A CLOUD BASED ENVIRONMENT filed Apr. 5 2012 all of which are hereby incorporated by reference in their entireties.

With the advancements in digital technologies data proliferation and the ever increasing mobility of user platforms have created enormous amounts of information traffic over mobile and computer networks. This is particularly relevant with the increase of electronic and digital content being used in social settings or shared environments of digital content compared to traditional stand alone personal computers and mobile devices. As a result content is shared across multiple devices among multiple users.

However to date content sharing and content synchronization lacks an intuitive manner in which content or folders files in a shared space among multiple users can be accessed and or synchronized in a user friendly manner. Further the amount of data that servers have to process in order to coordinate the synchronization statuses for folders among multiple users can increase dramatically with the increasingly large amount of folders and users involved in a shared space.

The same reference numbers and any acronyms identify elements or acts with the same or similar structure or functionality throughout the drawings and specification for ease of understanding and convenience.

The following description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However in certain instances well known or conventional details are not described in order to avoid obscuring the description. References to one or an embodiment in the present disclosure can be but not necessarily are references to the same embodiment and such references mean at least one of the embodiments.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which can be exhibited by some embodiments and not by others. Similarly various requirements are described which can be requirements for some embodiments but not other embodiments.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain terms can be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that same thing can be said in more than one way.

Consequently alternative language and synonyms can be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Without intent to limit the scope of the disclosure examples of instruments apparatus methods and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles can be used in the examples for convenience of a reader which in no way should limit the scope of the disclosure. Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

Techniques are disclosed for reducing database workload in implementing selective subfolder synchronization in a cloud based environment. In one embodiment a method comprises in response to a selection from a user of a first synchronization state of a first folder in the workspace synchronizing content of the first folder in the workspace with a corresponding folder on devices of a user and collaborators based on the first synchronization state. The workspace is shared among the user and one or more collaborators of the user. In some embodiments the method further comprises determining the first synchronization state of the first folder based on synchronization states of one or more folders other than the first folder that are related to the first folder. The entries can be configured to identify hierarchical relationships between the one or more folders and the first folder on a per user basis.

Among other advantages embodiments disclosed herein provide the ability for each person of a user and his or her collaborators to select only the desired folder s subfolder s or file s in their commonly shared workspace to be synchronized on one or more devices of theirs. Additionally embodiments disclosed herein enable a database structure that reduces the amount of data that needs to be stored and processed in the database thereby increasing the database efficiency reducing the storage and processing power requirements of the database and decreasing the cost in implementing selective subfolder synchronization in a cloud based collaboration environment.

The client devices can be any system and or device and or any combination of devices systems that is able to establish a connection including wired wireless cellular connections with another device a server and or other systems such as host server . Client devices typically include a display and or other output functionalities to present information and data exchanged between among the devices and or the host server .

For example the client devices can include mobile hand held or portable devices or non portable devices and can be any of but not limited to a server desktop a desktop computer a computer cluster or portable devices including a notebook a laptop computer a handheld computer a palmtop computer a mobile phone a cell phone a PDA a smart phone e.g. a BlackBerry device such as BlackBerry Z10 Q10 an iPhone Nexus 4 etc. a Treo a handheld tablet e.g. an iPad iPad Mini a Galaxy Note Galaxy Note II Xoom Tablet Microsoft Surface Blackberry PlayBook Nexus 7 10 etc. a phablet e.g. HTC Droid DNA etc. a tablet PC a thin client a hand held console a hand held gaming device or console e.g. XBOX live Nintendo DS Sony PlayStation Portable etc. iOS powered watch Google Glass a Chromebook and or any other portable mobile hand held devices etc. running on any platform or any operating system e.g. Mac based OS OS X iOS etc. Windows based OS Windows Mobile Windows 7 Windows 8 etc. Android Blackberry OS Embedded Linux platforms Palm OS Symbian platform Google Chrome OS and the like. In one embodiment the client devices and host server are coupled via a network . In some embodiments the devices and host server can be directly connected to one another.

The input mechanism on client devices can include touch screen keypad including single touch multi touch gesture sensing in 2D or 3D etc. a physical keypad a mouse a pointer a track pad motion detector e.g. including 1 axis 2 axis 3 axis accelerometer etc. a light sensor capacitance sensor resistance sensor temperature sensor proximity sensor a piezoelectric device device orientation detector e.g. electronic compass tilt sensor rotation sensor gyroscope accelerometer or a combination of the above.

Signals received or detected indicating user activity at client devices through one or more of the above input mechanism or others can be used by various users or collaborators e.g. collaborators for accessing through network a web based collaboration environment or online collaboration platform e.g. hosted by the host server . The collaboration environment or platform can have one or more collective settings for an enterprise or an organization that the users belong and can provide an user interface for the users to access such platform under the settings .

The collaboration platform or environment hosts workspaces with work items that one or more users can access e.g. view edit update revise comment download preview tag or otherwise manipulate etc. . A work item can generally include any type of digital or electronic content that can be viewed or accessed via an electronic device e.g. device . The digital content can include .pdf files .doc slides e.g. Powerpoint slides images audio files multimedia content web pages blogs etc. A workspace can generally refer to any grouping of a set of digital content in the collaboration platform. The grouping can be created identified or specified by a user or through other means. This user can be a creator user or administrative user for example.

In general a workspace can be associated with a set of users or collaborators e.g. collaborators which have access to the content included therein. The levels of access e.g. based on permissions or rules of each user or collaborator to access the content in a given workspace can be the same or can vary among the users. Each user can have their own set of access rights to every piece of content in the workspace or each user can be different access rights to different pieces of content. Access rights can be specified by a user associated with a workspace and or a user who created uploaded a particular piece of content to the workspace or any other designated user or collaborator.

In general the collaboration platform allows multiple users or collaborators to access or collaborate efforts on work items such each user can see remotely edits revisions comments or annotations being made to specific work items through their own user devices. For example a user can upload a document to a workspace for other users to access e.g. for viewing editing commenting signing off or otherwise manipulating . The user can login to the online platform and upload the document or any other type of work item to an existing workspace or to a new workspace. The document can be shared with existing users or collaborators in a workspace.

In general network over which the client devices and the host server communicate can be a cellular network a telephonic network an open network such as the Internet or a private network such as an intranet and or the extranet or any combination or variation thereof. For example the Internet can provide file transfer remote log in email news RSS cloud based services instant messaging visual voicemail push mail VoIP and other services through any known or convenient protocol such as but is not limited to the TCP IP protocol Open System Interconnections OSI FTP UPnP iSCSI NSF ISDN PDH RS 232 SDH SONET etc.

The network can be any collection of distinct networks operating wholly or partially in conjunction to provide connectivity to the client devices and the host server and can appear as one or more networks to the serviced systems and devices. In one embodiment communications to and from the client devices can be achieved by an open network such as the Internet or a private network such as an intranet and or the extranet. In one embodiment communications can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS .

In addition communications can be achieved via one or more networks such as but are not limited to one or more of WiMax a Local Area Network LAN Wireless Local Area Network WLAN a Personal area network PAN a Campus area network CAN a Metropolitan area network MAN a Wide area network WAN a Wireless wide area network WWAN enabled with technologies such as by way of example Global System for Mobile Communications GSM Personal Communications Service PCS Digital Advanced Mobile Phone Service D Amps Bluetooth Wi Fi Fixed Wireless Data 2G 2.5G 3G 4G IMT Advanced pre 4G 3G LTE 3GPP LTE LTE Advanced mobile WiMax WiMax 2 WirelessMAN Advanced networks enhanced data rates for GSM evolution EDGE General packet radio service GPRS enhanced GPRS iBurst UMTS HSPDA HSUPA HSPA UMTS TDD 1xRTT EV DO messaging protocols such as TCP IP SMS MMS extensible messaging and presence protocol XMPP real time messaging protocol RTMP instant messaging and presence protocol IMPP instant messaging USSD IRC or any other wireless data networks or messaging protocols.

The embodiments disclosed herein recognize that with the growing prevalence of the communication networks e.g. the Internet and smart portable devices e.g. smart phones there are many instances when a user want to selectively synchronize one or more subfolders in a workspace that is associated with the user and especially when the workspace is shared among one or more collaborators of the user. Also the user can have more than one user devices that are capable of connecting to the workspace and sometimes not all data in the workspace are desirable or necessary to be shared to all devices because of nature of data e.g. confidentiality sensitivity and or necessity physical constraints of a particular device e.g. screen size computing power or storage and or network limitations or for other applicable reasons.

In particular in a large institute setting e.g. an international corporation where potentially very large folders with a high volume of files and data are shared among users and collaborators it is desirable to have the capability for a user and each of the collaborators to select only the content e.g. subfolders or files that he or she may be interested for synchronizing with one or more computing devices e.g. a smart phone or a laptop computer of his or hers while leaving the remainder of the content stored in the cloud based collaboration platform e.g. a workspace hosted by the host server .

Accordingly embodiments of the present disclosure provide systems and methods that enable selective subfolder synchronization in a cloud based environment platform services e.g. collaboration file sharing and or storage services so that a user of the cloud based environment can select individual folders for synchronizing according to his her own preference. The advantages provided by the techniques disclosed herein are particularly beneficial when a large number of files are stored in the workspace because each person of a user and his or her collaborators can select only the desired folder s subfolder s or file s in their commonly shared workspace to be synchronized on one or more devices of theirs.

In accordance with some embodiments the host server can selectively synchronize one or more subfolders in the workspace with a synchronization client e.g. on the client device . Specifically the host server can synchronize in response to a selection of a first synchronization state of a first folder in the workspace from a user e.g. of a client device content of a first folder associated with the user based on the first synchronization state regardless of a second synchronization state of a second folder in the workspace. The first folder is a subfolder of the second folder. For example the host server can selectively synchronize a folder and block synchronization for one or more subfolders within the synchronized folder. For purposes of discussion herein a workspace of a cloud based environment which is hosted by the host server is shared among the user and one or more collaborators of the user.

In one embodiment the host server also communicates relevant details to the synchronization client on the client devices for selective synchronization and the synchronization client can selectively synchronize one or more subfolders in the workspace with the host server . Specifically in some embodiments the synchronization client can receive from the host server the user s selection for the first synchronization state of the first folder in the workspace. In response to the received selection the synchronization client synchronizes content of the first folder associated with the user based on the first synchronization state regardless of a second synchronization state of a second folder in the workspace.

Further in some embodiments the user can select a folder that is stored on the client to be synchronized with the host server . The synchronization client can receive at the synchronization client on the client device the user s selection of a synchronization state of a folder on the client. In response to the selection the synchronization client synchronizes content of the folder on the client with the workspace based on the selected synchronization state regardless of another synchronization state of another folder. The folder is a subfolder of the another folder.

In addition the present embodiments also recognize that the amount of data that the host server has to process in order to coordinate the synchronization statuses for all the folders among multiple users can increase dramatically with the increasingly large amount of folders and users involved in a shared space. This can quickly overload the storage and computing power the host server in implementing the selective subfolder synchronization in certain situations for example when large amount of collaborators are subscribed to a folder that contains all the subfolders or files for all the users

Accordingly in some embodiments the host server can employ a database structure e.g. in the data repository that reduces the amount of data that needs to be stored and processed in the database in implementing selective subfolder synchronization in a cloud based collaboration environment. In accordance with one or more embodiments the host server can determine the first synchronization state of the first folder based on synchronization states of one or more folders other than the first folder that are related to the first folder. The determination can be performed on a per user basis. In some implementations the entries are configured to identify hierarchical relationships between the one or more folders and the first folder so that a number of entries in the database can be less than a total number of folders that are related to the first folder.

More implementation details on the host server the synchronization client the workspace the files and folders stored therein and the relationship between the user and the collaborators are discussed below.

The web based platform for collaborating on projects or jointly working on documents can be used by individual users and shared among collaborators. In addition the collaboration platform can be deployed in an organized setting including but not limited to a company e.g. an enterprise setting a department in a company an academic institution a department in an academic institution a class or course setting or any other types of organizations or organized setting.

When deployed in an organizational setting multiple workspaces e.g. workspace A B C can be created to support different projects or a variety of work flows. Each workspace can have its own associate work items. For example workspace A can be associated with work items workspace B can be associated with work items and workspace N can be associated with work items . The work items and can be unique to each workspace but need not be. For example a particular word document can be associated with only one workspace e.g. workspace A or it can be associated with multiple workspaces e.g. Workspace A and workspace B etc. .

In general each workspace has a set of users or collaborators associated with it. For example workspace A is associated with multiple users or collaborators . In some instances workspaces deployed in an enterprise can be department specific. For example workspace B can be associated with department and some users shown as example user A and workspace N can be associated with departments and and users shown as example user B .

Each user associated with a workspace can generally access the work items associated with the workspace. The level of access will depend on permissions associated with the specific workspace and or with a specific work item. Permissions can be set for the workspace or set individually on a per work item basis. For example the creator of a workspace e.g. one of user A who creates workspace B can set one permission setting applicable to all work items for other associated users and or users associated with the affiliate department for example. Creator user A can also set different permission settings for each work item which can be the same for different users or varying for different users.

In each workspace A B . . . N when an action is performed on a work item by a given user or any other activity is detected in the workspace other users in the same workspace can be notified e.g. in real time or in near real time or not in real time . Activities which trigger real time notifications can include by way of example but not limitation adding deleting or modifying collaborators in the workspace uploading downloading adding deleting a work item in the workspace creating a discussion topic in the workspace.

In some embodiments items or content downloaded or edited can cause notifications to be generated. Such notifications can be sent to relevant users to notify them of actions surrounding a download an edit a change a modification a new file a conflicting version an upload of an edited or modified file.

In one embodiment in a user interface to the web based collaboration platform where notifications are presented users can via the same interface create action items e.g. tasks and delegate the action items to other users including collaborators pertaining to a work item for example. The collaborators can be in the same workspace A or the user can include a newly invited collaborator. Similarly in the same user interface where discussion topics can be created in a workspace e.g. workspace A B or N etc. actionable events on work items can be created and or delegated assigned to other users such as collaborators of a given workspace or other users. Through the same user interface task status and updates from multiple users or collaborators can be indicated and reflected. In some instances the users can perform the tasks e.g. review or approve or reject etc. via the same user interface.

Each of users and can individually use multiple different devices to access and or manipulate work items in the workspace with which they are associated with. For example users can be collaborators on a project to which work items are relevant. Since the work items are hosted by the collaboration environment e.g. a cloud based environment each user can access the work items anytime and from any physical location using any device e.g. including devices they own or any shared public loaner device .

Work items to be edited or viewed can be accessed from the workspace . Users can also be notified of access edit modification and or upload related actions performed on work items by other users or any other types of activities detected in the workspace . For example if user modifies a document one or both of the other collaborators and can be notified of the modification in real time or near real time or not in real time. The notifications can be sent through any of all of the devices associated with a given user in various formats including one or more of email SMS or via a pop up window in a user interface in which the user uses to access the collaboration platform. In the event of multiple notifications each notification can be depicted preferentially e.g. ordering in the user interface based on user preferences and or relevance to the user e.g. implicit or explicit .

For example a notification of a download access read write edit or uploaded related activities can be presented in a feed stream among other notifications through a user interface on the user device according to relevancy to the user determined based on current or recent activity of the user in the web based collaboration environment.

In one embodiment the notification feed stream further enables users to create or generate actionable events e.g. as task which are or can be performed by other users or collaborators e.g. including admin users or other users not in the same workspace either in the same workspace or in some other workspace. The actionable events such as tasks can also be assigned or delegated to other users via the same user interface.

For example a given notification regarding a work item can be associated with user interface features allowing a user to assign a task related to the work item e.g. to another user admin user creator user or another user . In one embodiment a commenting user interface or a comment action associated with a notification can be used in conjunction with user interface features to enable task assignment delegation and or management of the relevant work item or work items in the relevant workspaces in the same user interface.

Work items of can be further organized into groups using one or more folders within workspace . The folders can have more than one levels of hierarchy including for example parent ascendant folder s child decedent folder s or subfolder s and or sibling folder s . A person having ordinary skill in the art will understand that terminologies describing the hierarchy of the folders are used in a relative sense. For example a parent folder can be a child folder of a grandparent folder a particular child folder can be a parent folder of a grandchild folder and so on. An example of first and second folders is illustrated on where the first folder is a subfolder of the second folder. It is noted that the illustration of the two folders are merely exemplary depending on the embodiments there can be more than one level of hierarchy e.g. the first folder is a grandchild folder of the second folder between the first and the second folders and that the second folder can be the root folder .

In accordance with some embodiments the host server provides the capability of selectively synchronizing an individual subfolder e.g. a first folder in folders in addition to synchronizing everything that is included in the entire the root folder . Additionally the host server can selectively block the first folder from being synchronized even when the first folder is within a parent folder e.g. a second folder that is synchronized. More specifically the host server can synchronize in response to a selection of a first synchronization state of the first folder in the workspace content of the first folder associated with the user based on the first synchronization state regardless of a second synchronization state of a second folder in the workspace even if the first folder is a subfolder of the second folder. The user s selection can be received from the user via the user interface e.g. in forms of webpages of the host server via a synchronization client running on the client devices or via any other suitable sources. In some embodiments the host server synchronizes in response to the selection content of other folders in the workspace based on their respective synchronization states. For purposes of discussion herein content of a respective folder e.g. a root folder of the workspace refers to files e.g. files stored in the respective folder. According to some embodiments all the files or content in the respective folder have same synchronization states as the respective folder and subfolders e.g. folders within the respective folder each has its independent synchronization state.

It is noted that the terms user and collaborator are used in a relative sense. For example a user can be whoever that is currently performing operations on the workspace and those who are sharing the same workspace are the user s collaborators which can include the user himself or herself.

In one or more embodiments in addition to synchronizing content of the first folder in the workspace with a corresponding folder on a device e.g. devices of a user e.g. creator based on the first synchronization state the host server also synchronizes content of the first folder in the workspace with a corresponding folder on a device of a respective collaborator e.g. another user based on the first synchronization state. More specifically the host server can respond to a user s selection of the first synchronization state of the first folder and synchronize accordingly content of the first folder on devices of the user and the collaborators based on the selection. This can be particularly useful when the folder being shared is owned by the user e.g. creator or administrator and therefore the collaborators e.g. a regular user who are sharing the folder have lesser control privilege over the owner user. The technique can be complementary to the techniques discussed above and is not mutually exclusive to the technique of allowing each of a user and his or her collaborators to selectively choose which content e.g. folders subfolders or files in the workspace that he or she desires to synchronize with his or her devices e.g. smart phones computers etc .

In some embodiments the host server determines the first synchronization state of the first folder before the host server synchronizes the first folder with the synchronization client s . The first synchronization state can include one or more of i synchronized ii partially synchronized or iii unsynchronized. Specifically in one or more embodiments the host server assigns the first synchronization state as synchronized if the content of the first folder and all its subfolders are all synchronized. The host server can assign the first synchronization state as unsynchronized if the content of the first folder and the subfolders are all unsynchronized and can further assign the first synchronization state as partially synchronized if the content of the first folder and the subfolders are neither all synchronized nor all unsynchronized.

One or more embodiments provide that the host server allows e.g. by providing options or checkboxes to the user via the user interface the user to select the first synchronization state based on an original synchronization state of the first folder. For example if the original synchronization state is synchronized then the host server allows the user to disable the first synchronization state to unsynchronized. If the original synchronization state is partially synchronized then the host server allows the user to either enable the first synchronization state to synchronized or to disable the first synchronization state to unsynchronized. If the original synchronization state is unsynchronized then the host server allows the user to enable the first synchronization state to synchronized.

Further after receiving the user s selection the host server can automatically assign synchronization states to the first folder and or other folders in workspace based on the user s selection. Specifically in some embodiments if the user enables the first synchronization state then the host server assigns synchronization states of all subfolders of the first folder as synchronized. If the user disables the first synchronization state then the host server assigns synchronization states of all subfolders of the first folder as unsynchronized.

Additionally in response to the user s selection the host server can automatically update the synchronization state of the second folder of which the first folder is a subfolder. For example if all subfolders of the second folder are synchronized then the host server assigns the second synchronization state as synchronized. If all subfolders of the second folder are unsynchronized then the host server assigns the second synchronization state as unsynchronized. In response to the selection if not all subfolders of the second folder are all synchronized or all unsynchronized then the host server assigns the second synchronization state as partially synchronized. In some embodiments the update is recursively performed by the server to all folders related to the first folder including ascendant and or decedent folders.

In accordance with some embodiments disclosed herein the user can select to create the first folder in the workspace if it does not exist. When the first folder is created the host server can automatically assign the first synchronization state to the first folder based on the second folder s synchronization. If the second synchronization state is synchronized then the host server assigns the first synchronization state as synchronized. If the second synchronization state is not synchronized e.g. unsynchronized or partially synchronized then the host server assigns the first synchronization state as unsynchronized. It is noted that in some embodiments the server s operations of copying a folder is similar to that of creating a folder. Specifically the original first synchronization state is ignored by the host server and the host server assigns a new synchronization state to the newly created folder based on the synchronization state of the parent folder of the newly created folder.

In another additional or alternative embodiment the user can select to move the first folder e.g. a moving folder in the workspace into another folder e.g. a destination folder in the workspace . The another folder can be any folder in the workspace including the folders and the root folder . According to some implementations upon moving the host server can update the first synchronization state based on the synchronization state of the another folder. In one embodiment the host server assigns the first synchronization state as synchronized if the synchronization state of the another folder is synchronized. In addition the host server maintains the first synchronization state as is if the third synchronization state is not synchronized e.g. unsynchronized or partially synchronized .

In yet another embodiment if the synchronization state of another folder originally is unsynchronized and if the first synchronization state originally is not unsynchronized the host server assigns the synchronization state of another folder as partially synchronized. If the another folder is the root directory of the workspace the host server can maintain the first synchronization state as is. A table which illustrates example synchronization states for moving the first folder to the destination folder is depicted in .

According to some embodiments all files or content e.g. files in the root directory of the workspace have synchronization states as synchronized and the synchronization state of the root directory is permanently set as partially synchronized.

Moreover the host server can display on the user interface of the server an icon for a respective folder that distinctively indicates a synchronization state of the respective folder. For example the host server can use a first image for the state of the respective folder being synchronized another image for the state of the respective folder being partially synchronized and yet another image for the state of the respective folder being unsynchronized.

As previously mentioned the host server synchronizes the content of the first folder in the workspace with a synchronization client on client devices the term synchronization client can refer to software hardware firmware or any suitable combination thereof that can communicate with the host server in performing the synchronization. Accordingly in some embodiments the client e.g. client devices can receive from the host server a selection from the user for the first synchronization state of the first folder in the workspace and in response to the received selection the client synchronizes content of the first folder associated with the user based on the first synchronization state regardless of a second synchronization state of a second folder in the workspace . In response to the received selection the client can additionally synchronize content of other folders in the workspace with data stored on the client based on their respective synchronization states.

The synchronization client can further maintain on the client a directory tree that corresponds to a directory structure of the first folder. The directory tree on the client includes all folders having a higher hierarchy above the first folder. For example if there is a folder named Alpha under the root folder in the workspace and inside that Alpha folder is a subfolder named Beta. Even if the user only enables the synchronization state for Beta but not for Alpha then the directory structure of the Beta folder on the client can still be maintained as Root Alpha Beta. 

Furthermore in some embodiments if the user enables the first synchronization state and if a local folder that corresponds to the first folder in the workspace does not exist on the client the client can create the local folder on the client. Also if i the user enables the first synchronization state and if the first folder is deleted in the workspace or if ii the user disables the first synchronization state of the first folder the client can delete the local folder that corresponds to the first folder from the local drive. For example if a folder in the workspace is disabled by the user from synchronization the folder is to be removed locally either immediately or at an appropriate time e.g. when a next synchronization iteration is performed . Similarly if a folder in the workspace is enabled by the user for synchronization it is to be added locally either immediately or at an appropriate time e.g. when the next synchronization iteration is performed .

Additionally or alternatively the user can use the synchronization client to selectively synchronize one or more subfolders on the client with the host server . More precisely the client can receive at the client e.g. client devices a selection from the user for a synchronization state of a folder on the client and in response to the selection the client synchronizes content of the folder on the client with the workspace based on the synchronization state of the folder regardless of a synchronization state of another folder. In some embodiments the folder is a subfolder of the another folder. In response to the selection the client can further synchronize content of other folders on the client with the workspace based on their respective synchronization states.

Also one or more embodiments provide that the client maintains a directory tree in the workspace that corresponds to a directory structure of the folder on the client. Similar to a manner described above the directory tree in the workspace can include all ascendant folders having a higher hierarchy above the folder on the client. Specifically the client communicates to the host server relevant information for the server to perform actions suitable to synchronize in the workspace the content and the directory structure of the first folder.

For instance if the user enables the synchronization state of the folder on the client and if the folder is deleted the client can communicate to the host server to delete a folder in the workspace that corresponds to the first folder on the client.

For another instance the client may in response to the user creating the first folder if a folder that corresponds to the first folder does not exist in the workspace then the client requests the host server to create the folder that corresponds to the first folder in the workspace for synchronization. On the other hand if the folder that corresponds to the first folder already exists in the workspace then the client requests the host server to create a conflicting folder in the workspace for synchronization. In this way risk of accidental overwriting data can be minimized.

A typical but less desirable method for bookkeeping each folders synchronization states in a database in order to implement the selective subfolder synchronization techniques would be storing a row in the database for every single folder and subfolder and potentially each file if a file level selective synchronization is to be implemented . However because the collaborative nature of the cloud based workspace the amount of data that the host server has to process in order to coordinate the synchronization statuses for all the folders among multiple users can increase dramatically with the increasingly large amount of folders and users involved in the workspace This can quickly consume the storage and computing power the host server in implementing the selective subfolder synchronization in certain situations for example when large amount of collaborators are subscribed to a folder that contains all the subfolders or files for all the users.

According to one or more embodiments the host server can determine the first synchronization state of the first folder based on synchronization states of one or more folders other than the first folder that are related to the first folder. The determination can be performed on a per user basis. In some implementations the entries are configured to identify hierarchical relationships between the one or more folders and the first folder so that a number of entries in the database can be less than a total number of folders that are related to the first folder.

More specifically because the workspace are shared among a number of users collaborators in a collaborative environment in some embodiments the database is configured to include a path identifier ID data structure system e.g. as illustrated in the example entries so that a reduced amount of information can be stored in database . Information of synchronization states of other folders that are not recorded in the database can be calculated or interpolated in ways that are discussed below.

In some embodiments the host server can determine a first synchronization state of a first folder based on synchronization states of one or more folders other than the first folder that are related to the first folder. For example when the host server needs to retrieve the synchronization state of a particular folder and the entries e.g. entries in database storing the synchronization states may not include the folder of interest then the host server can determine e.g. by calculation by interpolation or by other suitable means from the database what the synchronization state of the particular folder of interest.

For one example if a user wants to synchronize an entire folder tree e.g. root folder because everything below the root folder is also synchronized then only such information at the uppermost level of that tree needs to be stored in the database . For another example if a user wants to synchronize only one folder e.g. folder B that has a number of sibling folders e.g. Folder C Folder D in a tree then the database can mark just that one folder out of the set of siblings as synced. Conversely if a user wants to synchronize seven out of eight children folder in a folder tree then the database can mark all seven of those as synchronized and can keep the one that is not synchronized out of the database e.g. so that it is regarded as not synchronized .

More specifically the path ID column in the entries are configured to identify the hierarchical relationship between the folders that are related to the particular folder of interest so that the host server can determine the location and the synchronization status whether synchronized unsynchronized or partially synchronized of the folder of interest relative to other related folders in a particular user s account.

Take entry as a specific example for user A Folder B is synchronized and its directorial path back to its parental folders is A now if the host server needs to determine the synchronization state for Folder E for user A because for user A Folder E s parent Folder B is synchronized as indicated by entry the synchronization state for Folder E for user A is also synchronized.

The host server can also calculate what folders are synchronized by using an identifier e.g. a path ID of a current folder and scanning the database beneath the current folder to look for in the entries any folder that has the current folder in its path ID column. Then the host server can automatically determine that the folders found are descendants of the folder of interest and can determine synchronization states for the folder of interest based on the scanning results. In some embodiments the identifier of the folder of interest can be supplied from a client e.g. running on device of the user.

Take entry as an example for user A Folder F is synchronized and its directorial path back to its parental folders is A B E now if the host server needs to determine the synchronization state for Folder E for user A because for user A Folder E s parent Folder B s synchronization state is not yet recorded but Folder E s only child Folder F is synchronized the synchronization state for Folder E for user A is also synchronized. Contrarily if not all Folder E s children folders are all synchronized the synchronization state for Folder E for user A is partially synchronized. And assuming all Folder E s children folders are unsynchronized then the synchronization state for Folder E should be unsynchronized.

It is also noted that in entry for user A Folder F is synchronized however because user A does not have the privilege to collaborate on the root Folder A the path ID for Folder F for user A is only B E.

In this way the techniques described above can effectively represent what is synchronized with a number of entries in the database that is less than a total number of folders that are related to the first folder resulting in having fewer entries in the database which in turn decreases the time of queries the host server has to send to the repository in determining synchronization states of one or more folders of interest. After the host server determines the synchronization state for a folder of interest the host server may include as a part of a response to the client s for synchronization purposes whether or not the folder of interest in synchronized partially synchronized or unsynchronized.

Additionally because the collaboration nature of the workspace e.g. as being shared among different users the database can record the synchronization states on a per user basis. By the same token if an action takes place e.g. move delete or uncollaboration to one folder the action may affect several different users e.g. collaborators that are participating in that folder and the host server together with the database can make changes on corresponding folders on the user s and the collaborators devices to appropriately reflect the action.

Therefore in some embodiments the host server is configured to perform a delete sync function to clean up the entries in the database for users and collaborators after a synchronized folder is deleted. More specifically if the folder deleted was the only synchronized subfolder of a parent folder then the parent folder will become marked as files only synchronized e.g. or in some instances partially synchronized . Moreover if the folder synchronized deleted is the only subfolder of the parent then the parent folder will no longer have any subfolders and will get marked as fully synchronized.

In some embodiments the host server is configured to perform a delete non sync function to clean up the entries in the database for users and collaborators after a non synchronized folder is deleted. More specifically if the deleted folder had siblings that are all synced then the parent folder will become marked as synchronized and the entries for or item sync rows the sibling folders will be deleted. Moreover if the parent folder ends up becoming synchronized the entry can bubble further up the tree or the synchronization state can populate to upper level folders according to similar rules depending on the synchronization states of the parent folder s siblings.

In some embodiments the host server is configured to perform a sync folder function to synchronize a folder for a given user and to clean up the entries in the database to reflect the newly selected synchronization state. More specifically if the folder to be synchronized has siblings that are all already synchronized then a synchronization entry will be added to the parent folder and the entries for the sibling folders will be removed. It is noted that the synchronization entry can again bubble up the tree according to similar rules. Moreover any entries for descendants of the synchronized folder would have their synchronization entries deleted.

In some embodiments the host server is configured to perform a unsync folder function to unsynchronize a folder for a given user and to clean up the entries in the database to reflect the newly selected synchronization state. More specifically the host server can delete any entries for the folder being unsynchronized and any that for its descendants. If the folder being unsynchronized has no siblings then the parent folder will become marked as being files only synchronized or in some instances partially synchronized . If the folder being unsynchronized has sibling folders that are all synchronized then the entries for the parent folder will be deleted and entries for each of the siblings will be added.

In some embodiments the host server is configured to perform a update item syncs for move function to clean up the entries in the database for all users at both the source and destination of a move operation. More specifically if the folder being moved is unsynchronized at its original location and the parent folder of the destination is unsynchronized then the moved folder will remain unsynchronized. Moreover if destination parent is synchronized then the folder will be synchronized in its new location. If the destination parent is partially synchronized then the moved folder will retain its original synchronization state from the source location. If the destination parent is fully synchronized then the moved folder will be fully synchronized in its new location. The synchronization entries for the parents of the source folder may get reshuffled according to same rules as the delete sync function described above.

In some embodiments the host server is configured to perform a uncollab function to clean up the entries in the database for a collaborator he or she becomes removed from a folder.

In some embodiments the host server is configured to perform a lower collab permission function to clean up the entries in the database for a collaborator if his or her access permission changes so that the collaborator can no longer synchronize a folder.

In some embodiments the host server is configured to perform a delete user function to remove the entries in the database for a user who is deleted.

Further in some embodiments the host server is configured to perform a mark update timestamp for siblings function to change an update timestamp on a folder after its synchronization state changes.

It is noted that in implementing the functions aforementioned the host server can perform one or more of low level functions that are used to compose higher level subfolder synchronization functionalities. Examples of these low level functions are 

1. functions used to get information about a folder s parent folders ancestors or sibling folders such as 

 e get sync path returns the path to a collaborated folder as seen from the collaborator s perspective.

 a get sync state returns the current sync state for a specified folder for a specified user ie. synced unsynced partially synced .

 b get sibling sync state returns the collective sync state of all the siblings of a specified folder for a specified user ie. non synced all fully synced all partially synced no siblings mixed sync status .

 c get sync states optimal returns the sync states for a set of specified folders for a specified user.

 d make sync state array returns a mapping of folder ids to current sync states for a list of specified folders for a specified user.

 e get sync states for all users returns the sync states of a specific folder for all collaborating users individually.

3. functions used to determine the edges of where the database is storing sync information about a user s folder tree such as 

 a is in item sync table determines if the database has an item sync row for a specific folder for a specific user.

 b is parent in item sync table determines if the database has an item sync row for any ancestors parents of a specific folder for a specific user.

 c is self or descendants in item sync table determines if the given folder or any children of that folder have database rows in the item sync table for a specified folder and user.

4. Functions used to fetch the edges of where the database is storing sync information about a user s folder tree such as 

 a get item syncs at or below folder for user returns item sync rows found in the database at or below inside the specified folder for a specified user.

 b get all syncs returns all item sync rows in the database on folders that are ancestors or children of a specified folder for a specified user.

5. Functions used to change the sync states on a folder it s children or its siblings when various folder actions occur such as 

 a remove sync rows down removes all of the item sync rows in the database at or below a specified folder for a specified user.

 b make sync rows for siblings creates item sync rows in the database for all of the siblings of a specified folder for a specified user.

 c delete sync rows for siblings deletes any item sync rows in the database for all of the siblings of a specified folder for a specified user.

Additionally the following example test cases are provided so as to serve as indicators for helping one of ordinary skill in the art verify whether the selective subfolder synchronization techniques are implemented as intend. However a person having ordinary skill in the art will know that these test cases are merely exemplary that they can be modified to suit different applications and that they do not necessarily nor sufficiently guarantee the operations of the selective subfolder synchronization techniques disclosed herein.

According to one or more embodiments the host server determines a first synchronization state of a first folder e.g. one of folders . The first synchronization state can include one or more of i synchronized ii partially synchronized or iii unsynchronized. Then the host server allows the user to select the first synchronization state of the first folder based on an original synchronization state of the first folder. For example if the first folder is originally synchronized then the user can disable the first synchronization state to unsynchronized. If the first folder is originally unsynchronized then the user can enable the first synchronization state to synchronized. If the first folder is originally partially synchronized then the user can either enable or disable the first synchronization state.

Thereafter in response to the user s selection the host server synchronizes content of the first folder associated with the user based on the first synchronization state regardless of a second synchronization state of a second folder in the workspace . In some embodiments the first folder is a subfolder of the second folder. Additionally the host server synchronizes content of other folders in the workspace based on their respective synchronization states.

Furthermore in one or more embodiments the host server displays on a user interface e.g. user interface an icon for a respective folder that distinctively indicates a synchronization state of the respective folder. For example the host server can use a first image for the state of the respective folder being synchronized another image for the state of the respective folder being partially synchronized and yet another image for the state of the respective folder being unsynchronized.

In the operations are performed as described for the process . Additionally in some embodiments if the user enables the first synchronization state then the host server assigns A synchronization states of all subfolders of the first folder as synchronized. If the user disables the first synchronization state then the host server assigns B synchronization states of all subfolders of the first folder as unsynchronized.

Further in response to the user s selection the host server can automatically update the synchronization state of the second folder of which the first folder is a subfolder. For example if all subfolders of the second folder are synchronized then the host server assigns A the second synchronization state as synchronized. If all subfolders of the second folder are unsynchronized then the host server assigns B the second synchronization state as unsynchronized. In response to the selection if not all subfolders of the second folder are all synchronized or all unsynchronized then the host server assigns the second synchronization state as partially synchronized. In some embodiments the update is recursively performed by the server to all folders related to the first folder including ascendant and or decedent folders.

According to one or more embodiments the client devices can receive from the host server a selection from the user for the first synchronization state of the first folder in the workspace and in response to the received selection the client devices synchronize content of the first folder associated with the user based on the first synchronization state regardless of a second synchronization state of a second folder in the workspace . In response to the received selection the client devices can additionally synchronize content of other folders in the workspace with data stored on the client devices based on their respective synchronization states.

The client devices can further maintain on the client devices a directory tree that corresponds to a directory structure of the first folder. In some embodiments the directory tree on the client devices includes all folders having a higher hierarchy above the first folder.

According to one or more embodiments the client devices can receive at the client devices a selection from the user for a synchronization state of a folder on the client device and in response to the selection the client devices synchronize content of the folder on the client devices with the workspace based on the synchronization state of the folder regardless of a synchronization state of another folder. In some embodiments the folder is a subfolder of the another folder. In some embodiments in response to the selection the client device can further synchronize content of other folders on the client device with the workspace based on their respective synchronization states.

Also one or more embodiments provide that the client devices maintain a directory tree in the workspace that corresponds to a directory structure of the folder on the client device . The directory tree in the workspace can include all ascendant folders having a higher hierarchy above the folder on the client devices . Specifically the client devices can communicate to the host server relevant information for the server to perform actions suitable to synchronize in the workspace the content and the directory structure of the first folder.

In one implementation if the user enables the synchronization state of the folder on the client devices and if the folder is deleted the client devices can communicate to the host server to delete a folder in the workspace that corresponds to the first folder on the client devices .

For an additional or alternative implementation the client device may in response to the user creating the first folder if a folder that corresponds to the first folder does not exist in the workspace then the client devices request the host server to create the folder that corresponds to the first folder in the workspace for synchronization. On the other hand if the folder that corresponds to the first folder already exists in the workspace then the client requests the host server to create a conflicting folder in the workspace for synchronization. In this way risk of accidental overwriting data can be minimized.

Overall the techniques disclosed herein provide fine grained control to the users of a cloud collaboration environment over what folder s in their workspace is to be shared and or synchronized thereby reducing the amount of unnecessary and or inappropriate information traffic over computer networks especially in shared collaborative environments.

According to one or more embodiments the host server receives a selection from a user e.g. user of a first synchronization state of a first folder in a workspace . The workspace is shared among the user and one or more collaborators e.g. collaborators of the user . In some embodiments the selection is received from the user s device e.g. devices . In some embodiments the selection is received from a web interface e.g. user interface of the host server of the cloud based environment.

Then in some embodiments the host server searches the database for entries e.g. entries of the folders related to the first folder based on an identifier of the first folder. In some embodiments the entries are configured to identify hierarchical relationships between the one or more folders and the first folder on a per user basis. In one or more embodiments the database is configured in a way that a number of entries in the database is less than a total number of folders that are related to the first folder.

Next based on the search results the host server determines the first synchronization state of the first folder based on synchronization states of one or more folders other than the first folder that are related to the first folder.

Thereafter the host server synchronizes content of the first folder in the workspace with a corresponding folder on a device of a user based on the first synchronization state. The synchronization can be performed regardless of a second synchronization state of a second folder in the workspace. The first folder can be a subfolder of the second folder.

In additional or alternative embodiments the host server can also update in the database entries of the folders that are related to the first folder for the user and the collaborators to reflect the selected first synchronization state.

The host server in one embodiment hosts a cloud based service and or cloud based storage service which can include cloud based collaboration and or file sharing platform. The host server can include for example a network interface a synchronization request processor coupled to a user interface module a synchronization state determination engine coupled to a repository and a synchronization manager . Additional or less components modules engines can be included in the host server and each illustrated component.

The network interface can be a networking module that enables the host server to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface can include one or more of a network adaptor card a wireless network interface card e.g. SMS interface WiFi interface interfaces for various generations of mobile communication standards including but not limited to 1G 2G 3G 3.5G 4G LTE etc. Bluetooth a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

As used herein a module a manager a handler a detector an interface a processor a tracker a detector a generator a launcher a selector an updator or an engine includes a general purpose dedicated or shared processor and typically firmware or software modules that are executed by the processor. Depending upon implementation specific or other considerations the module manager hander or engine can be centralized or its functionality distributed. The module manager hander or engine can include general or special purpose hardware firmware or software embodied in a computer readable storage medium for execution by the processor. As used herein a computer readable medium or computer readable storage medium is intended to include all mediums that are statutory e.g. in the United States under 35 U.S.C. 101 and to specifically exclude all mediums that are non statutory in nature to the extent that the exclusion is necessary for a claim that includes the computer readable storage medium to be valid. Known statutory computer readable mediums include hardware e.g. registers random access memory RAM non volatile NV storage to name a few but may or may not be limited to hardware.

One embodiment of the host server includes the synchronization request processor which is able to receive synchronization requests and synchronization state selections from a synchronization request module and synchronization state selection module respectively of the user interface module . The synchronization request module can receive the users and collaborators devices synchronization requests for example when the synchronization clients e.g. an application software running on the devices receives a change notification and requests an update from the host server . When a synchronization request is received the synchronization request module passes the request to the synchronization request processor for further processes in manners described above. Similarly the synchronization state selection module can receive selections of synchronization states of selective folders in the cloud based collaboration platform from a user s or a collaborator s device e.g. via the synchronization client software or from a web interface of the host server . In some embodiments the user interface module provides application programming interface API to allow the synchronization clients as well as in some additional embodiments software applications from a third party to transmit the requests and selections to modules and .

The synchronization state determination engine is able to determine synchronization state of a folder of interest based on synchronization states of one or more folders that are related to the folder of interest in ways that are described above. The engine is coupled to the a repository which can be centralized or distributed that implements a Path ID system such as described in . The Path ID system enables the repository to store a number of entries in the database is less than a total number of folders that are related to the folder of interest. The Path ID system also facilitates the synchronization state determination engine to search the repository for entries of the folders related to the folder of interest based on an identifier of the folder of interest and to determine the synchronization state of the folder of interest based on the search results.

The synchronization manager includes a user devices update module which can update and synchronize content of the selected folder s onto the user s devices based on the synchronization selection received by module . Similarly the synchronization manager includes a collaborator devices update module which can update and synchronize content of the selected folder s onto the collaborator s devices based on the synchronization selection received by module . It is noted that the collaborator devices update module can operate on a per user or per collaborator basis. Furthermore the synchronization manager includes a privilege logic to handle all the privilege and access rights of the collaborators and the collaborator devices update module can consult the privilege logic in performing the updates and synchronization of the collaborators devices so that appropriate updates and access controls are enforced.

In alternative embodiments the machine operates as a standalone device or can be connected e.g. networked to other machines. In a networked deployment the machine can operate in the capacity of a server or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment.

The machine can be a server computer a client computer a personal computer PC a user device a tablet a phablet a laptop computer a set top box STB a personal digital assistant PDA a thin client device a cellular telephone an iPhone an iPad a Blackberry a processor a telephone a web appliance a network router switch or bridge a console a hand held console a hand held gaming device a music player any portable mobile hand held device or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine.

While the machine readable medium or machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable medium and machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium and machine readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the presently disclosed technique and innovation.

In general the routines executed to implement the embodiments of the disclosure can be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and computer systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disk drives optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

The network interface device enables the machine to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface device can include one or more of a network adaptor card a wireless network interface card a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

The network interface device can include a firewall which can in some embodiments govern and or manage permission to access proxy data in a computer network and track varying levels of trust between different machines and or applications. The firewall can be any number of modules having any combination of hardware and or software components able to enforce a predetermined set of access rights between a particular set of machines and applications machines and machines and or applications and applications for example to regulate the flow of traffic and resource sharing between these varying entities. The firewall can additionally manage and or have access to an access control list which details permissions including for example the access and operation rights of an object by an individual a machine and or an application and the circumstances under which the permission rights stand.

Other network security functions can be performed or included in the functions of the firewall can be for example but are not limited to intrusion prevention intrusion detection next generation firewall personal firewall etc. without deviating from the novel art of this disclosure.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling of connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application shall refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number can also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above detailed description of embodiments of the disclosure is not intended to be exhaustive or to limit the teachings to the precise form disclosed above. While specific embodiments of and examples for the disclosure are described above for illustrative purposes various equivalent modifications are possible within the scope of the disclosure as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments can perform routines having steps or employ systems having blocks in a different order and some processes or blocks can be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks can be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks can instead be performed in parallel or can be performed at different times. Further any specific numbers noted herein are only examples alternative implementations can employ differing values or ranges.

The teachings of the disclosure provided herein can be applied to other systems not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.

Any patents and applications and other references noted above including any that can be listed in accompanying filing papers are incorporated herein by reference. Aspects of the disclosure can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further embodiments of the disclosure.

These and other changes can be made to the disclosure in light of the above Detailed Description. While the above description describes certain embodiments of the disclosure and describes the best mode contemplated no matter how detailed the above appears in text the teachings can be practiced in many ways. Details of the system can vary considerably in its implementation details while still being encompassed by the subject matter disclosed herein. As noted above particular terminology used when describing certain features or aspects of the disclosure should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the disclosure with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the disclosure to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the disclosure encompasses not only the disclosed embodiments but also all equivalent ways of practicing or implementing the disclosure under the claims.

While certain aspects of the disclosure are presented below in certain claim forms the inventors contemplate the various aspects of the disclosure in any number of claim forms. For example while only one aspect of the disclosure is recited as a means plus function claim under 35 U.S.C. 112 6 other aspects can likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claim intended to be treated under 35 U.S.C. 112 6 begins with the words means for . Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the disclosure.

