---

title: Granting access in view of identifier in network
abstract: Discussion of content between users of social networks is described. A request from a first user to discuss content with a recipient user in a first social network is received, wherein the recipient user has a first identifier in the first social network. A request from a second user to discuss content with the recipient user in a second social network is received, wherein the recipient user has a second identifier in the second social network. A discussion is initiated between the second user and the recipient user about the content in the second social network. The recipient user is tracked in view of the first identifier in the first social network and the second identifier in the second social network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09565222&OS=09565222&RS=09565222
owner: Red Hat, Inc.
number: 09565222
owner_city: Raleigh
owner_country: US
publication_date: 20131213
---
This application is a continuation of U.S. patent application Ser. No. 11 443 112 filed May 31 2006 the entirety of which is hereby incorporated herein by reference.

The present invention relates to online services and communications tools and more particularly to link swarming in social networks.

In its short history Internet usage has been mainly driven by portals and search engines such as YAHOO and GOOGLE . Recently the rapid growth of social networking sites such as MYSPACE and FACEBOOK has revealed a new trend of Internet usage. Social networking generally relates to services and tools that help users maintain and expand their circles of friends usually by exploiting existing relationships. Social networking sites have shown potential to become the places on the Internet where many people spend most of their time thus making these sites the main entry point for online activity. Often times these social networking sites can become the focal point of sharing information such as links multimedia music and the like.

In general social networking sites and other online services of the Internet offer a mix of features and tools such as message boards games journals or web logs blogs . Many of these sites try to build communities around multi media or popular culture such as television film music etc. These sites and their features are designed to keep users clicking on advertising supported pages of the site. Thus the known social networking sites employ a closed platform of services that attempt to keep their user base captive to the site.

Unfortunately it can be difficult for users to maintain their multiplicity of accounts for their social networks. For example users can have multiple profiles at multiple sites for their music email instant messaging etc. However most users eventually do not keep up with all of their accounts. For example many users have four or five e mail addresses but essentially may use only one or two of them.

In addition the Internet is crowded with a large number of social networking sites and sharing tools. For example the recent supremacy of ITUNES has triggered a plethora of music service offerings. As another example the recent success of YOUTUBE and GOOGLE Video has sparked an explosion of video sharing sites.

Unfortunately due to their current business model the known social network sites are vulnerable to spammers and other forms of fraud. Thus many closed social networking sites will likely become abandoned or a major hassle for users to maintain.

Accordingly it may be desirable to provide methods and systems that serve as an open platform for users to maintain their personas across a plurality of social networking sites and online services. It may also be desirable to provide methods and systems that serve as an open overlay that serves as a consistent context by which users interact with social networking sites and online services.

Embodiments of the present invention provide methods and system for dynamically sharing multimedia content information. In particular embodiments of the present invention provide a live social context in which users can share multimedia content information such as a website a stream a music file and the like. Upon finding multimedia content that a user would like to share with others the user may select a share function for example by selecting a button on their browser that initiates a dialog window and permits the user to invite other users into a discussion. The invitations may then be sent to these users across different services. In addition the invitation may include content such as a text comment or file that the user has added. The recipient users receive a live notification of the invitation and may then participate in an online discussion with the user. Furthermore other users may be provided a live notification that activity has been initiated or in progress about the multimedia content. These users may then request to join in the online discussion.

Reference will now be made in detail to exemplary embodiments of the invention which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

Client provides a user interface for system . Client may be implemented using a variety of devices and software. For example client may be implemented on a personal computer workstation or terminal. In addition client may run under an operating system such as the LINUX operating system the MICROSOFT Windows operating system and the like. Client may also operate through an Internet browser application such as Firefox by MOZILLA Internet Explorer by MICROSOFT Corporation or NETSCAPE Navigator by NETSCAPE Communications Corporation.

One skilled in the art will also recognize that client may be implemented with various peripheral devices such as a display one or more speakers and other suitable devices. Client may also be implemented with various peripherals for accepting input from a user such as a keyboard a mouse and the like. Although shows a number of clients system may include any number of clients.

Services are the applications and services that users of system already use. Services may be implemented on one or more servers that are well known to those skilled in the art. Rather than recreating functionality open overlay service merely interfaces services and allows users to seamlessly continue using the services such as social networking services instant messaging etc. that they currently use. Examples of services include ITUNES YAHOO Music Engine MYSPACE AOL Instant Messenger YAHOO Messenger etc. Any sort of online service may be incorporated into the context provided by open overlay service .

Open overlay service stores manages and provides access control to the various services and social networks of clients . In general open overlay service is essentially a web site and application service that stores and forwards information shared by users as well as user profiles and social network information. Open overlay service may be hosted as a public instance similar in fashion to a service such as WIKIPEDIA . In addition open overlay service may provide various application programming interfaces that have an open specification so that anyone can create an interface.

For example open overlay service may process requests to retrieve an object document image file web page and the like. Open overlay service may be implemented using a variety of devices and software. For example open overlay service may be implemented as a web site running on one or more servers that support various application programs and stored procedures.

The components of system may be coupled together via network . Network may comprise one or more networks such as a local area network the Internet or other type of wide area network. In addition network may support a wide variety of known protocols such as the transport control protocol and Internet protocol TCP IP and hypertext transport protocol HTTP .

Operating system OS is an integrated collection of routines that service the sequencing and processing of programs and applications running in open overlay service . OS may provide many services such as resource allocation scheduling input output control and data management. OS may be predominantly software but may also comprise partial or complete hardware implementations and firmware. Well known examples of operating systems that are consistent with the principles of the present invention include the LINUX operating system the UNIX operating system. In addition OS may operate in conjunction with other software such as an application server such as JBOSS to implement various features of open overlay service .

Application server provides the logic for analyzing and managing the operations of open overlay service . As previously noted application server may be written in a variety of programming languages such as C C JAVA etc.

For example one responsibility of application server may be managing the various identities of the users of open overlay service . As noted previously a single person may have multiple identities that they use for various online services and social networks. For example a person named John Smith may use jsmith domain.com as an identity one service but use smithj domain2.com as his identity on another service.

In one embodiment in order to track the various users of open overlay service application server may assign each user a unique identifier such as a numeric identifier. Application server may then rely on the identity resources i.e. email address account names screen names etc. used by services to identify a person. In some embodiments application server generates a graph of each social network within open overlay service in terms of person s names and the identity resources from the point of view of a particular user based on what is trusted by that user.

For example given information about a person s name their unique identifier assigned by application server and associations to identity resources trusted by other users application server can generate a list of person names and identity resources i.e. email address account names etc. that should be visible to a particular user. Hence the particular user will only be allowed to see identity resources they happen to or only know about that user and identity resources that have been verified by application server . For example a user A may have a unique identifier of 2345 and email address 1 and email address 2 as identity resources. A user B may only know about email address 1 for user A. Meanwhile a user C may similarly only know about email address 2 for user A. Thus for user B application server will only allow user B to view and use email address 1 as an identity resource for user A. Likewise application server will only allow user C to view and use email address 2 as an identity resource for user A. However if user A subsequently explicitly indicates to application server that both email addresses 1 and 2 can be trusted then users B and C will then be also allowed to view both email addresses 1 and 2 as well. The primary uses of this information by open overlay service may be for sharing a link with person by addressing that person either by an email address or by a short nickname or for viewing a list of persons in open overlay service that they think they know.

Application server may also determine what information of a user should be public or private. In some embodiments application server may default to making information public but provide an option such as a checkbox that allows the user to designate information as private. Application server may also employ per page settings such as all private or all public. Other privacy policies may be implemented by application server .

Application server may further provide various search features. For example application server may allow users to search for other users based on various criteria such as age gender school etc. Application server may also allow searches for various resources such as email addresses topics links etc.

Messaging server manages communications between open overlay service and clients . For example messaging server may be configured to periodically poll clients on a regular basis and have them request information from services . Messaging server may be implemented based on well known hardware and software and utilize well known protocols such as TCP IP hypertext transport protocol etc.

Messaging server may be configured to handle a wide variety of data and may handle data that is in any format. For example information from clients may be in the form of an extensible markup language XML file or a network location such as a uniform resource locator URL on the Internet. Alternatively messaging server may be configured to obtain information from services directly in a peer to peer fashion.

Messaging agent operates in conjunction with messaging server to monitor the activity of clients . In particular messaging agent may be a relatively small and focused computer application or bot that runs continuously in the background simultaneously for each of clients as other programs are being run and responds automatically to a user s activity clients .

Messaging agent may be created by open overlay service i.e. by application server for the benefit of the users at clients . Alternatively for example messaging server may send information to clients upon request perform automated searches or monitor messages or events at services .

In one embodiment messaging server and or messaging agent may work in conjunction to perform client side data scraping on services . Client side data scraping may be desirable in some instances where services refuse or block a direct interface with open overlay service . For example MYSPACE and AOL s instant messaging service maybe implemented as one of services but is known to block proxy requests for a client.

Client side data scraping may be initiated by messaging server or using information provided by messaging server. Messaging server may poll client overlay client to trigger a request to one of services . Accordingly overlay client may cause one of service applications to interface with service and request data from that service such as web page refresh. Since the request originated from client service will provide a response. Overlay client may detect this response and forward it to messaging agent . Messaging server may then pass this response. Of course the polling may be configured at overlay client based on information provided to messaging server .

Messaging server evaluates the response and determines if a notification event is needed. If notification is needed messaging server send a message to overlay client . The notification may then be displayed to the user using for example browser or service application .

One application of client side data scraping may be used to detect when messages or postings have been entered on one of services . For example on MYSPACE users often repeatedly refresh their pages in anticipation of receiving a post or message from a friend. With client side data scraping open overlay service may automatically perform this function and more conveniently indicate when the user has received activity on their MYSPACE page. This notification may appear in the form of a pop up bubble or may be displayed as a link on the user s page in open overlay service . Of course other applications of client side data scraping are consistent with the principles of the present invention.

Web server provides a communications interface between open overlay service clients and services . For example web server may be configured to provide information that indicates the status of client . Such communications may be based on well known protocols and programming languages such as HTTP TCP IP and JAVA . Interfaces provided by web server may be implemented using well known Internet technologies such as web pages which are well known to those skilled in the art.

User database maintains information identifying users and clients . User database may be implemented using well known database technology such as relational databases or object oriented databases.

For example user database may include information indicating one or more operating systems and applications installed on clients as well as services subscribed to by users. User database may also comprise information related to authenticating a user determining the respective rights of a user relative to other users. For example a user may select various groups or channels of content in which they are interested in receiving information. User database may further include information that indicates the permissions and delivery of the information to clients . Other information that may be included in user database may comprise information such as system and individual permissions of clients on services activation keys registration information and payment information such as credit card information .

Furthermore user database may include other information related to the manner in which open overlay service communicates with clients . For example this information may relate to periodicity of notifications email addresses format of the information and the like. User database may include data structures to log the activities and transactions of its users. Activities such as recent links history of operations etc. that may be logged in user database are well known to those skilled in the art.

Operating system OS is an integrated collection of routines that service the sequencing and processing of programs and applications running in open overlay service . OS may provide many services such as resource allocation scheduling input output control and data management. OS may be predominantly software but may also comprise partial or complete hardware implementations and firmware. Well known examples of operating systems that are consistent with the principles of the present invention include by Apple Computer the family of operating systems by MICROSOFT Corporation and the LINUX operating system.

Overlay client maintains an inventory of the software and service applications installed on client and archives one or more states of activity on client . In some embodiments overlay client may be configured to periodically connect to open overlay service and perform various operations requested by open overlay service .

Browser is an application that runs on client and provides an interface to access information on network such as information on services . Browser may be implemented as well known programs such as MOZILLA Firefox MICROSOFT Internet Explorer NETSCAPE Navigator and the like.

Service applications run on client to support the services provided by services . For example service applications may be applications such as a browser an instant messaging client a music player such as ITUNES and the like that are provided from services . Other examples for applications are well known to those skilled in the art.

User data cache provides a cache that indicates the activity of a user at client . For example user data cache may include information that indicates web documents such as HTML pages images URL links web site access times and the like.

In order to illustrate some of the features of open overlay service that provide a live social context several examples will now be described with reference to . are various screen shots of the operations and services that may be provided by open overlay service and will now be further described below. One skilled in the art will recognize that the various screen shots shown in are merely exemplary and that any type of web page design and architecture may be implemented in embodiments of the present invention.

For example web server may provide the home page shown in . As shown the home page may comprise a link swarm section music radar section and a TV party section. The link swarm section provides an indication of share activity with or by a user. The music radar section provides an indication of music preferences and play list activity. The TV party section provides an indication of link swarm and chat activity for various television shows. These sections are merely exemplary and one skilled in the art will recognize that the home page may comprise different sections. For example the user may configure the home page to suit their own interests or social networks to include content of their own choosing. The home page may also be substituted with a home logged in page which are well known.

In addition web server may be configured to avoid empty pages for the users of open overlay service . For example web server may be configured to provide web site feeds or generate random content for pages that are empty. Application server may also create random groups in order to avoid empty pages.

As also shown in web server may also provide the user a list of pending invitations. These pending invitations may have been initiated by the user or by other users in the group. The list of pending invitations may be provided by web server in order to prevent redundant or conflicting multiple invitations to the same user.

In one embodiment open overlay service provides a multiple invite group feature. In one scenario for a multiple invite group open overlay service detects a new user has been invited by a user. Open overlay service may then advertise this invitation to other users such as other users that are in a group with the inviting user. Open overlay service forms a temporary group of these users. Thus when the invited user joins open overlay service notifies all the users in the temporary group.

In another scenario for a multiple invite group open overlay service detects when a new user has been invited by multiple users. Open overlay service may detect redundant invitations based on the identity resource e.g. email address used by the inviting users and based on a time interval such as 1 day 1 week 1 month etc. In response open overlay service may create a temporary placeholder account for the invited user and a temporary group for the inviting users. Until the invited user completes their registration the invited user is only visible to the temporary group by their temporary placeholder account. In some embodiments this may be highlighted to the users using colors different fonts etc. When the invited user completes their registration with open overlay service all the users in the temporary group are notified. In addition open overlay service may convert the temporary placeholder account into a permanent account that is visible to all users once the new user has completed registration. Alternatively open overlay service may require one or more conditions before allow the new user to have a permanent account. For example open overlay service may require one or more users attest to the identity of the new user. As another example open overlay service may require that a certain amount of time pass before allowing the account to become permanent. This trial or probationary period may allow the other users to determine if the new user is undesirable or ill behaved such as a spammer or fraudulent party.

In some embodiments in open overlay service each user will have one of three unidirectional relationships with each other user. In particular a user may consider another user a friend a blocked user or a stranger. Most other users will start as strangers to each other. However if two users interact then open overlay service will update the unidirectional relationships to blocked user or friend. For example a user may label another user such as a spammer as a blocked user. Alternatively a user may label another user as a friend. When this occurs the user may gain visibility to contact information and public groups that the user is a member. Of course one skilled in the art will recognize that other relationships such as degrees of friendship may be implemented in embodiments of the present invention.

In some embodiments open overlay service provides several types of groups. Public groups can be seen by any user joined by any user and posted to by any user. Friend groups may be joined by invitation only by any of the group members. However these groups may be visible to all users and may even allow postings by non members. Private groups are completely invisible to non members and only members can add new users. When a group is shared with a user that user may then become a member of the group and may receive information about posts to the group.

Application server may then trigger messaging server to send a notification to the respective client of the recipient users. The notification may appear in the form of a standard dialog box or pop up window at client .

As shown in if the other users choose to look at the web site immediately open overlay service may also enable these users to chat with each other in real time. shows an example of a link swarm as it may appear on client . This chat may be brokered through one of services . For example the users may each have an account on a particular instant messaging service. Accordingly open overlay service may then trigger overlay client to use the appropriate service application corresponding to this instant messaging service.

As individual users look at the web page or join the chat session other recipients may be identified by open overlay service to receive notifications that indicate the activity. Open overlay service may identify these additional users based on a variety of criteria. For example if the activity reaches a certain threshold open overlay service may select users from other groups that have common membership with the users participating in the swarm of activity. Users may then elect to join the activity or merely observe it.

For users who were offline during the initial share open overlay service may buffer the link comments and associated chats in user database . In some embodiments open overlay service may limit the amount of time or the number of messages that are buffered. Thus as subsequent users come online open overlay service may provide this information to them using messaging server and messaging agent alone or in combination. This may allow subsequent swarms to occur as other users come online.

As a byproduct of this sharing activity open overlay service may collect a set of web pages that were shared with a user or shared by a user. Accordingly as also shown in web server may also keep track of the sharing activity of the user. For example web server may provide sections on the web page in that are public and indicate links shared with the user i.e. inbound sharing activity and links shared by the user i.e. outbound sharing activity . Thus the web page shown in provides a rich way browsing around and allowing users to discover new groups and people. Of note due to the open architecture of open overlay service this information may be accessible to individuals even if they do not have overlay client installed on their computer.

In some embodiments for each link sharing or post application server may track which user the link was specifically sent and whether the user clicked on the link. Application server may track this information such as using a list or a history of when users joined left groups and calculating the information.

Open overlay service may record this information in user database and also pass this information to other users via messaging server and messaging agent . Accordingly as shown in the web page in web server information about songs that users are listening to currently in addition to their recent play history. Open overlay service may also provide information that indicates favorites of the various users. Users of open overlay service may elect to have this information gathered passively by overlay client as the listen to music on client . As noted this play list information may be displayed by web server in various places throughout open overlay service and on client .

In some embodiments open overlay service may enable the users to acquire the actual media files from a variety of services. For example a particular song may be available from ITUNES or from YAHOO Music Engine which are implemented on or more of services . For each media file open overlay service may interface with services and determine the relevant information for acquiring that media file. Open overlay service may then store this information in user database and provide both sets of acquisition information to the users e.g. links for both ITUNES and YAHOO Music Engine.

Accordingly if a first user Alice is playing a particular song purchased from ITUNES her friend Bob may see this activity and acquire the song using his YAHOO Music Engine service. Of course various services may be incorporated into the open architecture of open overlay service and thus encourage user choice and flexibility.

Accordingly open overlay service allows a user to indicate information about themselves across the various services that they are subscribed to. Some users may find this desirable so that new users and groups who have similar interests and preferences can easily find them.

Other embodiments of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims.

