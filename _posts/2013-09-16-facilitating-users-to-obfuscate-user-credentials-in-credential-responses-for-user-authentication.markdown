---

title: Facilitating users to obfuscate user credentials in credential responses for user authentication
abstract: A system and method for facilitating users to obfuscate user credentials in credential responses for user authentication are disclosed. A string sequence may be presented to a user for prompting the user to input credential characters sequentially but not continuously. The string sequence may comprise a set of prompt strings containing a prompt character sequence associated with the user and a set of noise strings that do not contain the prompt character sequence. The individual prompt strings in the set of prompt strings may be composed by obfuscating the prompt sequence among noise characters. A user credential response may be received and a user provided credential may be extracted from the received user credential for user authentication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09172697&OS=09172697&RS=09172697
owner: Kabam, Inc.
number: 09172697
owner_city: San Francisco
owner_country: US
publication_date: 20130916
---
This disclosure relates to user authentication the user authentication being enabled by facilitating users to obfuscate their credentials in credential responses.

Systems that enable users to provide obscured passwords by using a sequence of images during user authentication processes are known. In order to authorize an access request by a user from an untrusted domain e.g. such as a third party domain those systems present the user a sequence of images during the authorization process. The sequence of images contains images recognizable to the user such that the user is instructed to input characters in the password upon those images being presented during the authentication process and contains images not recognizable to the user such that the user is instructed to input random characters i.e. characters that are not in the password during the authentication process.

One aspect of the disclosure relates to facilitating users to obfuscate credentials in credential responses by using string sequences comprising prompt character sequences interspersed with arbitrary characters not in the prompt character sequences. A string sequence may be constructed for a user and may contain a set of prompt strings mixed with a set of noise strings such that the prompt strings are scattered in the string sequence randomly. The individual prompt strings in string sequence may be composed such that the individual prompt strings contain a prompt character sequence associated with the user. In some examples the prompt character sequence may contain alpha numerical characters. Such a prompt character sequence may be provided to the user prior to user authentication and may be updated periodically. In some exemplary implementations an individual prompt string may be composed by interspersing the prompt character sequence with noise characters without rearranging the order of prompt character sequence.

Such a string sequence may be presented on a client computer associated with the user and prompt the user to provide a credential response such that the user may input characters in his her credential sequentially upon recognizing the prompt character sequence in the prompt strings presented on the client computer and to input random characters upon presentation of noise strings in the string sequence. Accordingly the user credential response facilitated by the string sequence may comprise user provided credential obfuscated among random characters. Such a user credential response may be received and the user provided credential may be extracted from the received credential response based on the string sequence that facilitates the user to provide the credential response. Unlike the traditional systems wherein sequences of images are generated the system in accordance with the disclosure generates string sequences for facilitating users to obfuscate their credentials in credential responses with enhanced strength such that the credential responses are difficult to be hacked by intruders and the string sequences may be updated cost effectively.

In some implementations the system configured to facilitate users to obfuscate user credentials in credential responses comprises a server. The server may be configured to execute computer program modules. The computer program modules may include one or more of a user module user authentication request module prompt character sequence module noise character module prompt string module noise string module string sequence module user credential response module and or other modules.

The user module may be configured to access and or manage one or more user profiles and or user information associated with users. The user profiles and or user information may include for example information indicating user credentials for authenticating the users such as but not limited to information identifying the users e.g. a username or handle a number an organization department the users belong to an identifier and or other identifying information security login information e.g. a login code or password client computing platform identifications associated with users and or other information related to users.

The user authentication request module may be configured to receive user authentication requests for authenticating users. In some examples a user authentication request received by the user authentication request module may initiate an authentication process to authorize a user for accessing resources and or services. In some other examples such a user authentication request may request a confirmation of a user s identity for a third party entity. A given authentication request received by the user authentication request module may include user identity information information regarding the third party entity that transmits the authentication request user information regarding the user for whom the user authentication request is made and or any other information that may be included in a user authentication request received by the user authentication request module.

The prompt character sequence module may be configured to obtain prompt character sequences associated with the users for whom the user authentication requests received by the user authentication request module are made. The obtained prompt character sequences may be used for example by the prompt string module to compose prompt strings. In some examples a prompt character sequence associated with a given user may comprise alpha numerical characters ASCII characters international characters e.g. such as Kenji Big 5 GB Russian Korean and so on symbols Unicode code points and or any other types of characters. In some exemplary implementations such a prompt character sequence may be determined during user registration and stored in the user accounts managed by the user module. In some exemplary implementations the prompt character sequences may be determined dynamically by the prompt character sequence module for the users during runtime of the system. In those implementations the dynamically determined prompt character sequences may be transmitted to users periodically via any suitable communication medium such as but not limited to email wireless communications token transmission and or any other communication medium.

The noise character module may be configured to obtain for individual users noise characters which may be used by for example the prompt string module to obfuscate the prompt character sequence for composing prompt strings. In some examples the noise characters obtained by the noise character module for a given user may comprise characters that are not in the prompt character sequence associated with the given user as obtained by the prompt character sequence module. In some exemplary implementations the noise character module may be configured to obtain the noise characters for a given user by randomly generating the noise characters from a set of characters. In some exemplary implementations the noise character module may be configured to obtain characters that are similar to those appear in the prompt character sequences associated with the given user.

The prompt string module may be configured to compose prompt strings by obfuscating the prompt character sequence obtained by the prompt character sequence module. In some examples the prompt string module may compose the prompt strings by interspersing the prompt character sequences with the noise characters obtained by the noise character module without rearranging the order of the prompt character sequence such that the composed prompt strings no longer comprise continuous prompt character sequences in the corresponding prompt strings. For example for a given user a set of noise characters determined by the noise character module may be inserted in front of between and or at the end of the prompt character sequence associated with the given user randomly to form a sequence making up the prompt string. In some exemplary implementations for a given user the prompt string module may be configured to compose a set of multiple prompt strings which may be employed for example by the string sequence module to compose string sequences. In some examples individual prompt strings in a set of prompt strings composed by the prompt string module for the given user may be of identical length. In some other examples the number of prompt strings and length of individual prompt strings in a set of prompt strings composed by the prompt string module for the given user may vary as desired. In some exemplary implementations the prompt strings in the set of prompt strings composed by the prompt string module may be unique with respect to one another within the set and may not repeat across different sets of the prompt strings previously composed by the prompt string module in response to previous user authentication requests for a given user.

The noise string module may be configured to obtain noise strings which may be used by for example the string sequence module for obfuscating the prompt strings composed by the prompt string module. For such obfuscation the noise strings obtained by the noise string module may not comprise prompt character sequences associated with the users as obtained by the prompt string module. In some examples the noise string module may obtain the noise strings by composing the noise strings using noise characters determined by the noise character module. In some examples the number of noise strings for inclusion in such a noise string set may be predetermined and configured with the noise string as desired. In one example programming rules may be configured into the noise string module such that the number of the noise strings in the noise string set composed by the noise string module is three times of the number of the prompt strings in the set of prompt strings composed by the prompt string module for a given user. In some examples the noise strings composed by the noise string module in a noise string set for a given users may have the same length as that of the prompt strings in the prompt string set composed by the prompt string module for a given user. In some examples the noise strings composed by the noise string module in a noise string set for the given users may have the same length as that of the prompt strings in the prompt string set composed by the prompt string module for a given user. In some exemplary implementations the noise strings in the noise string set composed by the noise string module may not be identical within the noise string set and may not repeat across different noise string sets previously composed by the noise string module in response to different user authentication request for a given user.

The string sequence module may be configured to construct string sequences to facilitate users to provide credential responses for user authentication. For facilitating a given user to provide a credential response a string sequence constructed by the string sequence module may comprise a set of prompt strings composed by the prompt string module and a set of the noise string composed by the noise string module. In some exemplary implementations to construct such a string sequence the string sequence module may mix the noise strings with the prompt strings such that the prompt strings are scattered in the constructed string sequence randomly among the noise strings. In some examples a string sequence constructed by the string sequence module for the give user in response to a user authentication request to authenticate the given user may be unique with respect to string sequences previously constructed by the string sequence module for authenticating the given user.

The string sequences constructed by the sting sequence module may be transmitted to client computers for presentation to facilitate users providing credential responses for user authentication. Instructions may be provided to the users to provide credential responses in accordance with the string sequences presented on the client computers associated with the users such that the user may obfuscate their credentials among random characters. In some examples a given user may be instructed to submit a credential response after the given user has finished inputting the last character of his her credential despite that there may be more strings prompt strings and or noise strings in the string sequence presented on the user computer. In some examples however the user may be instructed to continue inputting random characters after the last character in his her credential has been input and submit the credential response until the last string in the string sequence has been presented.

The user credential response module may be configured to receive user credential response from the client computers. The received user credential response may include user provided credentials obfuscated among other random characters for user authentication. The user credential response module may extract user provided credentials in the received user credential response based on the corresponding string sequences in accordance with which the user provided credentials are input on the client computers. In some examples the user credential response module may be configured to authenticate the use by comparing the extracted credentials provided by the users with the user credential stored in the user account managed by the use module. In some other examples the user credential response module may relay the extracted user provided credential to an authentication server to authenticate the users.

These and other features and characteristics of the present technology as well as the methods of operation and functions of the related elements of structure and the combination of parts and economies of manufacture will become more apparent upon consideration of the following description and the appended claims with reference to the accompanying drawings all of which form a part of this specification wherein like reference numerals designate corresponding parts in the various figures. It is to be expressly understood however that the drawings are for the purpose of illustration and description only and are not intended as a definition of the limits of the invention. As used in the specification and in the claims the singular form of a an and the include plural referents unless the context clearly dictates otherwise.

The server may be configured to execute one or more computer program modules. The computer program modules may include one or more of a user module user authentication request module prompt character sequence module noise character module prompt string module noise string module string sequence module user credential response module and or other modules.

The user module may be configured to access and or manage one or more user profiles and or user information associated with users of the system . The one or more user profiles and or user information may include information stored by server one or more of the client computing platforms and or other storage locations. The user profiles and or user information may include for example information indicating user credentials for authenticating the users such as but not limited to information identifying users e.g. a username or handle a number an identifier and or other identifying information security login information e.g. a login code or password client computing platform identifications associated with users and or other information related to users. Such user credential information may be used by the server to effectuate user authentications for authorizing the users to access resources and or services provided by the system . Such user credential information may be used by the server to confirm user identities and provide user information stored in system associated with the identified users to a third party entity associated with the system e.g. a relying server .

The user authentication request module may be configured to receive user authentication requests for authenticating users. In some examples a user authentication request received by the user authentication request module may initiate an authentication process to authorize a user to access resources associated with the system . In those examples the server may interface with client computing platforms for receiving the user authentication requests as illustrated in this example. However this is not necessarily the only case. In some other examples a user authentication request received by the user authentication request module may request a confirmation of a user s identity associated with the system . For example in some instances the system may function as user identity provider facilitating third party organizations authorizing users for accessing resources and or services provided the by the third party organizations. For example a third party internet service provider may rely on system to confirm identities of users for providing services to the users. In those examples the server may interface with a server of the third party entities for receiving user authentication requests.

In any case a given authentication request received by the user authentication request module may include user identity information such as a username a real name of the user a client computing platform associated with the user a network interface card registered by the user an identification number associated with the user and or any user identity information. In some examples the authentication request received by the user authentication request module may include information such as information regarding the third party entity that transmits the authentication request to the server via system e.g. the name of the third party entity services and or resources provided by the third party entity that need user authentication by the server the location of the third party entity and or any other information regarding the third party entity information regarding the user for whom the user authentication request is made e.g. an organization the user belongs to a phone number associated with the user a mailing address associated with the user an email address associated with the user and or any other user information and or any other information that may be included in a user authentication request received by the user authentication request module .

The prompt character sequence module may be configured to obtain prompt character sequences associated with the users for whom the user authentication request received by the user authentication requests module are made. The obtained prompt character sequences may be used for example by the prompt string module to compose prompt strings for the user. In some examples a prompt character sequences associated with a given user may comprise alpha numerical characters ASCII characters international characters e.g. such as Kenji Big 5 GB Russian Korean and so on symbols Unicode code points and or any other types of characters. By way of a non limiting example a prompt character sequence associated with a given user may be made of a three character sequence such as 856 tyu Yku Z5e a3T and so on. However this is merely illustrative in some other examples the length of the prompt character sequences may vary as desired by the users administrator s provider s of the system and or any other entities that may determine prompt characters.

In some exemplary implementations such prompt character sequence may be determined during registration of a user and stored in the user profile and or information managed by the user module . For example a user may specify a prompt character sequence when the user registers with the system . In some exemplary implementations the prompt character sequences may be determined dynamically by the prompt character sequence module for the users during runtime of the system and stored in the user profile and or information managed by the user module . For example the administrator s and or provider s of the system may configure the user module to determine prompt character sequences for users via a graphical interface or at predetermined frequencies automatically. In those examples the determined prompt character sequence may be provided to the users periodically through any suitable communication medium. For example a prompt sequence dynamically determined for a given user by the prompt character sequence module may be transmitted to an email account associated with the given user. In another example the dynamically determine prompt sequence may be transmitted to the given user via a portable device e.g. a RSA token device a smart phone and so on associated with the user periodically. By way of a non limiting example as illustration the prompt character sequence module may determine random prompt character sequences every 6 hours for a user. The determined prompt character may be encrypted and communicated to the user via an email account of the user registered with system at the end of the every 6 hour period.

The noise character module may be configured to obtain noise characters which may be used by for example the prompt string module to obfuscate the prompt character sequences obtained by the prompt character sequence module for composing prompt strings. In some examples the noise characters obtained by the noise character module may comprise characters that are not in the prompt character sequences obtained by the prompt character sequence module . In some of those examples for obtaining such noise characters for an individual user the prompt character sequence module may identify characters in the prompt character sequence associated with the individual user and determine characters for inclusion as the noise characters for the user. In some examples the noise characters may be obtained from character classes corresponding to those that make up the characters in the prompt character sequence for a given user. For example in a case where the characters in the prompt character sequence for the given users are alpha numerical the noise character module may obtain noise characters for the given user that are also alpha numerical. In another case where the prompt character sequence is made of lower case characters the noise character module may obtain lower case characters that are not those characters in the prompt character sequence as noise characters.

In some exemplary implementations the noise character module may be configured to obtain the noise characters for a given user by randomly generating the noise characters from a set of characters. For example the noise character module may generate noise characters randomly from a set of alpha numerical characters that are not in the prompt sequence for the given user. In some exemplary implementations a quantity of noise characters that may be generated for the given user may be predetermined by for example the developer administrator provider of the system and or any other entities associated with system . For example the noise character module may be preconfigured to generate a number of noise characters 3 times of the number of characters in the prompt character sequence for a given user. For instance in the case where the prompt character sequence is 3 characters long the noise character module may generate 9 noise characters accordingly.

In some exemplary implementations the noise character module may be configured to obtain characters that are similar to those appearing in the prompt character sequences for a given user. For example in a case where the prompt character sequence for user is a5w the noise character module may be configured with programming rules to obtain noise characters similar to a 5 w such as without limitation A S W s and so on. This may increase the strength of a prompt string composed by the prompt string module described below.

The prompt string module may be configured to compose prompt strings by obfuscating the prompt character sequence obtained by the prompt character sequence module . In some examples the prompt string module may compose the prompt strings by interspersing the prompt character sequences with the noise characters obtained by the noise character module without rearranging the order of the prompt character sequence such that the prompt strings no longer comprise continuous prompt character sequences in the corresponding prompt strings. For example for a given user a set of noise characters determined by the noise character module may be inserted in front of between and or at the end of the prompt character sequence to form a sequence to make up the prompt string. By way of non limiting example in the case where a set of noise characters for a given user as determined by the noise character module contains 5 y t G and the prompt character sequence for the given user as obtained by the prompt character sequence module is r4D the prompt string module may obfuscate the prompt character sequence r4D by inserting y in front of r4D inserting 5 between r and 4 inserting G between 4 and D and inserting t at the end of r4D to compose a prompt string yr54GDt .

In some exemplary implementations in response to a user authentication request received by the user authentication request module the prompt string module may be configured to compose a set of multiple prompt strings which may be employed for example by the string sequence module to compose string sequences. In those implementations for composing the set of multiple prompt strings the prompt string module may obtain a size i.e. the quantity of the prompt strings for the set of multiple prompt strings. In some examples such a size may be predetermined and configured with the prompt string module by the developer s administrator s provider s and or any other entities related to the system . For instance the prompt string module may be configured to compose the set of prompt strings for a given user for no more than a maximum length that is allowed for a user credential to be within the system . As an illustration in the case where system allows a user to have a user credential e.g. user password to be at most 12 character long the prompt string module may be configured to compose 12 prompt strings for inclusion in the set of prompt strings to be used by the string sequence module .

In some examples individual prompt strings in a set of prompt strings composed by the prompt string module for a given user may be of identical length. For instance in the case where the prompt string module composes a set of 12 prompt strings for a given user the 12 prompt strings may be composed by the prompt string module such that they are all of the same length say 8 character long with 4 characters being characters in the prompt character sequence and 4 characters being the noise characters. In some other examples the number of prompt strings and length of individual prompt strings in a set of prompt strings composed by the prompt string module for the given user may vary as desired by the developer administrator provider of the system and or any other entities related to the system . For example the prompt strings in the set of prompt strings composed by the prompt string module for the given user may be of variable length.

The noise string module may be configured to obtain noise strings which may be used by for example the string sequence module for obfuscating the prompt strings composed by the prompt string module . For such obfuscation the noise strings composed by the noise string module may not comprise prompt character sequences associated with the users. In some examples the noise string module may obtain the noise strings by composing the noise strings using noise characters determined by the noise character module . For example in response to a user authentication request received by the user authentication request module the noise string module may compose a set of noise strings using noise characters determined by the noise character module . In some examples the number of noise strings for inclusion in such a noise string set may be predetermined and configured with the noise string module by the administrator developer provider and or any other entities related to the system . In one example programming rules may be configured into the noise string module such that the number of the noise strings in the set of noise strings composed by the noise string module is three times of the number of the prompt strings in the set of prompt strings composed by the prompt string module for a given user. As an illustration thus not intended to be limiting in a case where the prompt string module composes 12 prompt strings for a given user in response to a user authentication request the noise string module may be configured to compose 36 noise strings that do not comprise the prompt character sequence associated with the given user.

In some examples the noise strings composed by the noise string module in a set for a given users may have the same length as that of the prompt strings in the prompt string set composed by the prompt string module for a given user. For example in the case where the prompt string module composes 12 prompt strings with equal length of 8 characters long for a given user the noise string module may compose the set of noise strings for the given user to also be 8 characters long.

The string sequence module may be configured to construct string sequences to facilitate users providing credential responses for user authentication. For facilitating a given user providing a credential response a string sequence constructed by the string sequence module may comprise a set of prompt strings composed by the prompt string module and a set of the noise string composed by the noise string module . In some exemplary implementations to construct such a string sequence the string sequence module may mix the noise strings with the prompt strings such that the prompt strings are scattered in the constructed string sequence randomly. An example of such a string sequence is illustrated in .

The string sequences constructed by the sting sequence module may be transmitted to client computing platforms e.g. via the server and or any other intermediate server s such as a third party server associated with the system for presentation to facilitate users providing credential responses for user authentication. Instructions may be provided to the users to provide credential responses in accordance with the string sequences presented on the client computing platforms associated with the users such that the user may obfuscate the credentials among random characters. For example a given user may be instructed to input credential characters when prompt strings containing an obfuscated prompt character sequence associated with the given user are presented and recognized by the given user in the string sequence and to input random i.e. arbitrary characters when noise strings are presented in the string sequence. An example of using a string sequence to facilitate a given user providing a credential response for user authentication is illustrated in .

In some examples the user may be instructed to submit a credential response after the use has finished inputting the last character of his her credential despite that there may be more strings prompt strings and or noise strings in the string sequence presented on the user computer . For instance in the case where the string sequence contains 12 prompt strings mixed with 26 noise strings randomly and the length of the user credential is 5 characters long the user may be instructed to submit the credential response upon recognizing the 5th prompt string presented in the string sequence. In some examples however the user may be instructed to continue inputting random characters after the last character in his her credential has been input and submit the credential response until the last string in the string sequence has been presented.

The user credential response module may be configured to receive user credential response from the client computing platforms . In some examples the user credential response may be received by the user credential response module directly from the client computing platform via server . In those examples as described above the server may interface with the client computing platforms for such communication. In some other examples the user credential response may be relayed to the user credential response module from the user client computing platform via an intermediate server e.g. such as a third party server that relies on system to authenticate the users for accessing resources and or services provided by the entity associated with the third party server. In any case the received user credential response may include user provided credentials obfuscated among other random characters for user authentication. For example the user provided credential may scatter in the received credential response sequentially the but not continuously as the user input the credential characters in accordance with the string sequence presented on the client computing platform associated with the user. An example of credential response received by the user credential response module is illustrated in .

The user credential response module may be configured to extract user provided credentials in the received user credential response based on the corresponding string sequences in accordance with which the user provided credentials are input on the client computing platforms . In some exemplary implementations for extracting a user provided credential from a given user credential response the user credential response module may obtain information indicating positions of the prompt strings in the corresponding string sequence. Such position information may be employed by the user credential response module to extract the credential character from the received credential response by the user. As an illustration thus not intended to be limiting in a case where the string sequence indicates that prompt strings are located at positions in the string sequence the user credential response module may extract characters at those positions in the credential response as the credential characters. In some examples the user credential response module may be configured to authenticate the use by comparing the extracted credentials provided by the users with the user credential stored in the user account managed by the use module . In some other examples the user credential response module may relay the extracted user provided credential to an authentication server for authenticating the users.

The server client computing platforms and or external resources may be operatively linked via one or more electronic communication links. For example such electronic communication links may be established at least in part via a network such as the Internet and or other networks. It will be appreciated that this is not intended to be limiting and that the scope of this disclosure includes implementations in which servers client computing platforms and or external resources may be operatively linked via some other communication media.

A given client computing platform may include one or more processors configured to execute computer program modules. The computer program modules may be configured to enable an expert or user associated with the given client computing platform to interface with system and or external resources and or provide other functionality attributed herein to client computing platforms . By way of non limiting example the given client computing platform may include one or more of a desktop computer a laptop computer a handheld computer a tablet computing platform a NetBook a Smartphone a gaming console and or other computing platforms.

The external resources may include sources of information hosts and or providers of virtual environments outside of system external entities participating with system and or other resources. In some implementations some or all of the functionality attributed herein to external resources may be provided by resources included in system .

The server may include electronic storage one or more processors and or other components. The server may include communication lines or ports to enable the exchange of information with a network and or other computing platforms. Illustration of server in is not intended to be limiting. The server may include a plurality of hardware software and or firmware components operating together to provide the functionality attributed herein to server . For example server may be implemented by a cloud of computing platforms operating together as server .

Electronic storage may comprise electronic storage media that electronically stores information. The electronic storage media of electronic storage may include one or both of system storage that is provided integrally i.e. substantially non removable with server and or removable storage that is removably connectable to server via for example a port e.g. a USB port a firewire port etc. or a drive e.g. a disk drive etc. . Electronic storage may include one or more of optically readable storage media e.g. optical disks etc. magnetically readable storage media e.g. magnetic tape magnetic hard drive floppy drive etc. electrical charge based storage media e.g. EEPROM RAM etc. solid state storage media e.g. flash drive etc. and or other electronically readable storage media. The electronic storage may include one or more virtual storage resources e.g. cloud storage a virtual private network and or other virtual storage resources . Electronic storage may store software algorithms information determined by processor information received from server information received from client computing platforms and or other information that enables server to function as described herein.

Processor s is configured to provide information processing capabilities in server . As such processor may include one or more of a digital processor an analog processor a digital circuit designed to process information an analog circuit designed to process information a state machine and or other mechanisms for electronically processing information. Although processor is shown in as a single entity this is for illustrative purposes only. In some implementations processor may include a plurality of processing units. These processing units may be physically located within the same device or processor may represent processing functionality of a plurality of devices operating in coordination. The processor may be configured to execute modules . Processor may be configured to execute modules by software hardware firmware some combination of software hardware and or firmware and or other mechanisms for configuring processing capabilities on processor .

It should be appreciated that although modules are illustrated in as being co located within a single processing unit in implementations in which processor includes multiple processing units one or more of modules may be located remotely from the other modules. The description of the functionality provided by the different modules described below is for illustrative purposes and is not intended to be limiting as any of modules may provide more or less functionality than is described. For example one or more of modules may be eliminated and some or all of its functionality may be provided by other ones of modules . As another example processor may be configured to execute one or more additional modules that may perform some or all of the functionality attributed below to one of modules .

In some embodiments method may be implemented in one or more processing devices e.g. a digital processor an analog processor a digital circuit designed to process information an analog circuit designed to process information a state machine and or other mechanisms for electronically processing information . The one or more processing devices may include one or more devices executing some or all of the operations of method in response to instructions stored electronically on an electronic storage medium. The one or more processing devices may include one or more devices configured through hardware firmware and or software to be specifically designed for execution of one or more of the operations of method .

At an operation a user authentication request for authenticating a user may be obtained. In some examples the user authentication request received in operation may initiate an authentication process to authorize a user to access resources and or services. In some other examples the user authentication request received in operation may request a confirmation of a user s identity. In any case a given authentication request received in operation may include user identity information such as a username a real name of the user a client computing platform associated with the user a network interface card registered by the user an identification number associated with the user and or any user identity information. In some implementations operation may be performed by a user authentication request module similar to or the same as the user authentication request module shown in and as described herein .

At an operation a prompt character sequence associated with the user for whom the user authentication request received in operation was made may be obtained. The obtained prompt character sequences associated with the user may comprise alpha numerical characters ASCII characters international characters e.g. such as Kenji Big 5 GB Russian Korean and so on symbols Unicode code points and or any other types of characters. In some exemplary implementations such prompt character sequence may be determined during registration of a user and stored in the user profile and or user account associated with the user. In some implementations operation may be performed by a prompt character sequence module similar to or the same as the prompt character sequence module shown in and as described herein .

At an operation a set of noise characters may be obtained for the user for whom the user authentication request received in operation was made. The noise characters obtained in operation may comprise characters that are not in the prompt character sequences obtained in operation . In some examples the noise characters obtained in operation may be from a character class or character classes corresponding to that which make up the characters in the prompt character sequence obtained in the operation . For example in a case where the characters in the prompt character sequence obtained in operation are alpha numerical the noise characters obtained in operation may be alpha numerical. In some implementations operation may be performed by a noise character module similar to or the same as the noise character module shown in and as described herein .

At an operation a quantity of prompt strings may be composed by obfuscating the prompt character sequence obtained in operation . For composing the prompt strings a size of the quantity may be obtained. In some examples such a size may be predetermined. For example the quantity may be predetermined being no more than a maximum credential length that is allowed for a user credential. In some exemplary implementations an individual prompt string may be composed by interspersing the prompt sequence with the noise characters obtained in operation . In some examples the individual prompt strings composed in operation may be of the same length and may be unique with respect to one another. In some implementations operation may be performed by prompt string module similar to or the same as the prompt string module shown in and as described herein .

At an operation a quantity of noise strings may be composed by using the noise characters obtained in the operation . The noise strings composed in operation may not comprise the prompt character sequence obtained in operation . In some examples the noise strings composed in operation may have the same length as that of the prompt strings in the prompt string composed in operation . In some implementations operation may be performed by noise string module similar to or the same as the noise string module shown in and as described herein .

At an operation a string sequence may be constructed by scattering the prompt strings composed in operation among the noise strings composed in operation . In some implementations operation may be performed by string sequence module similar to or the same as the string sequence module shown in and as described herein .

At an operation a transmission of the string sequence to a client computing platform associated with the user may be effectuated. In some implementations operation may be performed by string sequence module similar to or the same as the string sequence module shown in and as described herein .

At an operation a credential response may be received from the client computing platform to which the string sequence was transmitted in operation . The user credential response received in operation may include user provided credentials obfuscated among other random characters for user authentication as prompted by the string sequence presented on the client computing platform associated with the user. In some examples the user credential response may be received by the user credential response module directly from the client computing platform. In some other examples the user credential response may be relayed from the user client computing platform via an intermediate server e.g. such as a third party server. In some implementations operation may be performed by user credential response module similar to or the same as user credential response module shown in and as described herein .

At an operation a user provided credential may be extracted from the credential response based on the string sequence transmitted to the client computing platform in operation . In some implementations operation may be performed by user credential response module similar to or the same as user credential response module shown in and as described herein .

At an operation user authentication using the user provided credential extracted in operation may be effectuated. In some implementations operation may be performed by user credential response module similar to or the same as user credential response module shown in and as described herein .

Although the present technology has been described in detail for the purpose of illustration based on what is currently considered to be the most practical and preferred implementations it is to be understood that such detail is solely for that purpose and that the technology is not limited to the disclosed implementations but on the contrary is intended to cover modifications and equivalent arrangements that are within the spirit and scope of the appended claims. For example it is to be understood that the present technology contemplates that to the extent possible one or more features of any implementation can be combined with one or more features of any other implementation.

