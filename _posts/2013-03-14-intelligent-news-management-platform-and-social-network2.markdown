---

title: Intelligent news management platform and social network
abstract: The present disclosure relates to computer-implemented methods, computer-readable media, and computer systems for providing an intelligent news management platform and social media platform services. One computer-implemented method includes collecting detection data, extracting event data from the collected detection data, prioritizing the extracted event data to created prioritized event data, scoring the prioritized collected event data against a newsworthiness threshold to create scored event data, associating the score with the scored event data, storing the scored event data into an event data store, determining that the scored event data is at least equal to the newsworthiness threshold, marking the scored event data as actionable, and reporting the scored event data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09569467&OS=09569467&RS=09569467
owner: Level 2 News Innovation LLC
number: 09569467
owner_city: Dallas
owner_country: US
publication_date: 20130314
---
In modern news media coverage of breaking news is inefficient and driven by human intelligence and manual information gathering analysis correlation and reporting. There is no way to efficiently and in automated manner to harvest massive volumes of information from various sources of real time data that may identify news events report and or correlate the real time data with other various available data sets and provide a near real time dynamically changing news report to the news media market institutional clients and subscribers. Without an effective and cost effective gathering analysis correlation and reporting process and system newsrooms continuously struggle to stay on top of dynamic local regional and global events and to provide necessary information to compete against other news organizations both financially and in terms of news freshness depth.

The present disclosure relates to computer implemented methods computer readable media and computer systems for providing an intelligent news management platform and social media platform services. One computer implemented method includes collecting detection data extracting event data from the collected detection data prioritizing the extracted event data to create prioritized event data scoring the prioritized collected event data against a newsworthiness threshold to create scored event data associating the score with the scored event data storing the scored event data into an event data store determining that the scored event data is at least equal to the newsworthiness threshold marking the scored event data as actionable and reporting the scored event data.

The foregoing and other implementations can each optionally include one or more of the following features 

A first aspect combinable with the general implementation further comprising identifying data related to the scored event data.

A first aspect combinable with the general implementation further comprising determining that data related to the scored event data is found.

A first aspect combinable with the general implementation further comprising enhancing the prioritized event data to create enhanced event data.

A first aspect combinable with the general implementation wherein the enhancement raises the score of the prioritized event data.

A first aspect combinable with the general implementation further comprising re scoring the enhanced event data.

The subject matter described in this specification can be implemented in particular implementations so as to realize one or more of the following advantages. First the intelligent news management platform and social media platform will provide efficient automated gathering of various available other multimedia data sets analysis of the data correlation of the data with additional available and reporting of the analyzed and correlated data as news events. Second the intelligent news management platform and social media platform will lower a news gathering organization s overall cost of producing and disseminating news. Third analyzed data can be correlated with existing multimedia data sets to create additional reportable news events potentially of interest to a customer. Third newsrooms can be streamlined due to automated and repeatable processes that gather analyze and correlate data to present to newsroom decision makers. Fourth news may be continuously and cost effectively reported with an ability to choose a level of desired news granularity at any time. Fifth correlated data provides an additional revenue stream for a news organization. Produced correlated data may be of interest to various governments organizations groups etc. Other advantages will be apparent to those skilled in the art.

The details of one or more implementations of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

The present disclosure relates to computer implemented methods computer readable media and computer systems for providing an intelligent news management platform and social media platform services.

Turning now to is a block diagram illustrating an example distributed computing system according to an implementation for providing an intelligent news management platform and social media platform services. The system includes a server clients collectively client and detection data communicably coupled through a network . In this implementation each client includes a GUI for displaying information associated with the system.

Detection data can be considered any type of multimedia data that can be accessed and processed. For example detection data may include radio scanner broadcasts radio transmissions cellular transmissions television transmissions social media messages websites web pages etc. Government weather data and emergency broadcasts weather station data Web search results competitor monitoring emails utility operations status data private organization emergency broadcasts and other suitable data. Detection data can be considered both raw data and data that is processed in some way prior to detection by the example distributed computing system . In some implementations the detection data is processed to extract subunits of data event data for further downstream processing. In some implementations the detection data may be collected in data storage as a collection of detection events . The data storage may be a file database optical storage or other suitable data storage. Although illustrated as a single component the detection data may come from multiple sources. The detection events may also be divided into one or more data storages either local or remote to the example distributed computing system .

At a high level the server includes an interface a processor and a memory . Although illustrated as a single interface in two or more interfaces may be used according to particular needs desires or particular implementations of the example distributed computing system . The interface is used by the server for communicating with other systems in a distributed environment including within the example distributed computing system connected to the network for example the client as well as other systems communicably coupled to the network not illustrated . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated example distributed computing system .

The server includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular implementations of the example distributed computing system . Generally the processor executes instructions and manipulates data to perform the operations of the server . Specifically the processor executes the functionality required to provide an intelligent news management platform and social media platform services.

The server also includes a memory that holds data for the server and various processes operating on the server . Although illustrated as a single memory in two or more memories may be used according to particular needs desires or particular implementations of the example distributed computing system . While memory is illustrated as an integral component of the server in alternative implementations memory can be external to the server and or the example distributed computing system .

The server also contains one or more instances of a priority engine a scoring engine an enhancement engine a content manager a MIHAI engine detection events historical static data and or an event data store . While illustrated as integral components of the server in alternative implementations these one or more instances can be external to the server and or the example distributed computing system .

The priority engine prioritizes event data. In some implementations the event data is prioritized based upon the source of the event data. For example event data from a Government emergency broadcast may be provided a higher priority than a local private college campus alert system event data. In other implementations the event data can be prioritized using any suitable attribute associated with the detection data and or the event data.

The scoring engine scores the prioritized event data against one or more newsworthiness thresholds. In some implementations the scoring can ensure that the prioritized event data is between two specific thresholds for example X and Y as X 

The enhancement engine is used to take an initially scored event that is below the newsworthiness threshold and to compare verify contrast etc. the event against other detection data e.g. detection events historical static public data e.g. criminal background property data calls for emergency service etc. to enhance its newsworthiness score to allow it to be considered actionable upon a re scoring action by the scoring engine . The historical static public data may be a file database optical storage or other suitable data storage. The scored event data may be shuffled among other non actionable event data store buckets. In some implementations scored re scored event data may time out after a certain period of time or number of re scoring attempts and be discarded demoted in score or other suitable action.

The content manager is any type of application that manages the flow of content within the example distributed computing system . For example in some implementations the content manager can allow the client to request view add edit and or delete content on the client and or server after obtaining content from the server in response to a received request from the client and or as result of receiving a content push from server . In some implementations the content manager allows connections to various other content providers not illustrated apart from server and enables a user to view add edit and or delete content associated with the server and or the various other content providers. In some implementations the content manager can also interface with the MIHAI engine described below to provide content associated with various newsroom social network graphical user interfaces. In some implementations the content manager can interface with any other element of the example distributed computing system in order to receive and or push content both within and or outside of the example distributed computing system .

In some implementations the content manager can use content manager data not illustrated to perform tasks associated with the server or other components of the example distributed computing system . Content manager data may include any type of data associated with and or used by the content manager including content provider locations addresses storage specifications content lists access requirements or other suitable data. For example for a database content provider the content provider manager data may include the server Internet Protocol IP address URL access permission requirements data download speed specifications etc.

The content manager can be any application program module process or other software. For example the content provider manager may be a web application a business application and or other suitable application consistent with this disclosure. Additionally a particular content manager may operate in response to and in connection with at least one request received from other content managers including a content manager associated with another server . In some implementations the content manager can be and or include a web browser. In some implementations each content manager can represent a network based application accessed and executed using the network e.g. through the Internet or using at least one cloud based service associated with the content manager . For example a portion of a particular content manager may be a web service associated with the content manager that is remotely called while another portion of the content manager may be an interface object or agent bundled for processing at a remote client . Moreover any or all of a particular content manager may be a child or sub module of another software module not illustrated without departing from the scope of this disclosure. Still further portions of the particular content manager may be executed or accessed by a user working directly at the server as well as remotely at a corresponding client .

The MIHAI engine provides functionality for a real time open closed circuit newsroom social media platform services described in greater detail below . In some implementations the social media platform is Web based. The MIHAI engine is responsible among other things for creating a graphical virtual story room with an associated graphical user interface for each actionable event relayed to it and or recovered from the actionable events event data store . For example the MIHAI engine may monitor the actionable events event data store and retrieve any actionable events for processing. In other implementations another system component for example the scoring engine can indicate to the MIHAI engine that an actionable event is present in the actionable events event data store that needs to be retrieved by the MIHAI engine .

The MIHAI engine can also permit newsroom personnel to comment on prioritize update etc. the actionable event data within a virtual story room using at least a provided graphical user interface. Actionable event data may also be used by the MIHAI engine to send alert messages to specific newsroom individuals for example on computers mobile devices etc. The MIHAI engine may also aggregate multiple virtual story rooms into a global graphical user interface view to permit newsroom personnel to make appropriate decisions based on all active actionable events.

In some implementations any and or all of components of the server both hardware and or software may interface with each other and or the interface using an application programming interface API and or a service layer . The API may include specifications for routines data structures and object classes. The API may be either computer language independent or dependent and refer to a complete interface a single function or even a set of APIs. The service layer provides software services to the example distributed computing system . The functionality of the server may be accessible for all service consumers using this service layer. Software services such as those provided by service layer provide reusable defined business functionalities through a defined interface. For example the interface may be software written in JAVA C or other suitable language providing data in extensible markup language XML format or other suitable format. While illustrated as integrated components of the server in the example distributed computing system alternative implementations may illustrate the API and or service layer as stand alone components in relation to other components of the example distributed computing system . Moreover any or all parts of the API and or service layer may be implemented as child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure.

The client may be any computing device operable to connect to or communicate with at least the server using the network . In general the client comprises a computer operable to receive transmit process and store any appropriate data associated with the example distributed computing system .

The illustrated client further includes a client application . The client application is any type of application that allows the client to request and view content on the client . In some implementations the client application can be and or include a web browser. In some implementations the client application can use parameters metadata and other information received at launch to access a particular set of data from the server . Once a particular client application is launched a user may interactively process a task event or other information associated with the server . Further although illustrated as a single client application the client application may be implemented as multiple client applications in the client .

The illustrated client further includes an interface a processor and a memory . The interface is used by the client for communicating with other systems in a distributed environment including within the example distributed computing system connected to the network for example the server as well as other systems not illustrated communicably coupled to the network . The interface may also be consistent with the above described interface of the server or other interfaces within the example distributed computing system . The processor may be consistent with the above described processor of the server or other processors within the example distributed computing system . Specifically the processor executes instructions and manipulates data to perform the operations of the client including the functionality required to send requests to the server and to receive and process responses from the server . The memory may be consistent with the above described memory of the server or other memories within the example distributed computing system but storing objects and or data associated with the purposes of the client .

Further the illustrated client includes a GUI . The GUI interfaces with at least a portion of the example distributed computing system for any suitable purpose including generating a visual representation of a web browser and or other application. Generally through the GUI an server user is provided with an efficient and user friendly presentation of data provided by or communicated within the example distributed computing system . In particular the GUI may be used to view and navigate various web pages located both internally and externally to the server and to perform exposure management functions consistent with this disclosure.

There may be any number of clients associated with or external to the example distributed computing system . For example while the illustrated example distributed computing system includes one client communicably coupled to the server using network alternative implementations of the example distributed computing system may include any number of clients suitable to the purposes of the example distributed computing system . Additionally there may also be one or more additional clients external to the illustrated portion of the example distributed computing system that are capable of interacting with the example distributed computing system using the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

The illustrated client is intended to encompass any computing device such as a desktop computer laptop notebook computer wireless data port smart phone personal data assistant PDA tablet computing device one or more processors within these devices or any other suitable processing device. For example the client may comprise a computer that includes an input device such as a keypad touch screen or other device that can accept user information and an output device that conveys information associated with the operation of the server or the client itself including digital data visual information or a GUI as shown with respect to the client .

The Intelligent News Management Platform NewsHub provides an effective and cost effective event data gathering analysis and correlation system acting on massive amounts of data. Events are gathered extracted scored analyzed for newsworthiness enhanced and indicated as actionable to the MIHAI newsroom social media platform.

The coverage of breaking news is the lifeblood of any news organization as viewers users expect aggressive attention to reporting of events critical to their lives. NewsHub combines a newsroom s traditional reliance on human intelligence with a 

NewsHub is a next generation News Service faster and more relevant than other large news organizations. NewsHub leverages real time content developed by clients who using NewsHub and creates a single robust newsfeed.

NewsHub is a multi layered system. In some implementations NewsHub may be layered. illustrates example layers of a NewsHub system according to an implementation. As will be apparent to those of skill in the art in some implementations various components associated with the illustrated layers can exist and operate wholly or partially on other layers without departing from the scope of this disclosure.

NewsHub brings science to the newsroom a workplace that has traditionally relied solely on art to report news. Proprietary algorithms run 24 7 rapidly identifying newsworthy patterns by analyzing multiple streams of data for relevancy in real time and cross checking those streams against each other.

As an example assume there s a massive tornado that ripped the roof off a fireworks factory which might explode at any minute. The NewsHub algorithms will run through these data streams for example in this order of importance 

As a result of cross checking these data streams NewsHub increases its ability to identify a news event and reduces the possibility that a live person will miss the action. Additionally as NewsHub works through its system it quickly finds and saves valuable data that pushes to the CMS vastly improving the amount of information available for a live broadcast or posting to the web.

Extract Translate Load The software searches through the above data sets looking for the following data to extract translate and load into searchable fields. For example for a Police Fire EMS scanner fields could include 

3. Event scored against a newsworthiness threshold then stored as dismissed unverified or actionable. If an event is scored as actionable it is sent to the newsroom.

4. If the initial event is below the threshold it s sent back through the detection data looking for other events that verify or enhance the original event. Initial event is also checked against static public data criminal background property values and calls for service . Initial event is then rescored until it becomes actionable.

5. Event Data Stores are rechecked on a prescribed basis with a frequency based on their score in an effort to find new data that allows that event to cross the newsworthiness threshold. Or in the case of an actionable event the algorithm runs it through the data to continually enhance it with new related data.

NewsHub vastly improves on the current state of the art by allowing a variety of newsroom workers from different disciplines reporters producers anchors managers to access collaborate fact check and improve upon the robust information identified by the NewsHub s P A.

Frequent turnover of newsroom personnel also means many newsrooms struggle to retain institutional knowledge. NewsHub helps mitigate the loss of institutional knowledge by remembering all the events it s covered their relative importance what caused them and how they were resolved. This ability to learn will continually improve NewsHub s functionality.

As an example assume the P A has identified the possibility that a major fire has broken out in an apartment complex. The CMS will 

The L2 predictive analytics are able to determine if an event is newsworthy. For the sake of this discussion L2 is analyzing police fire department radio transmissions. However it could also be analyzing police radio air traffic control radio TWITTER FACEBOOK other social media sites video government weather data government earthquake data electric grid data electric power generation data and any other suitable data source.

Turning now to is a flow chart of an example level 2 content management system workflow according to an implementation. L2.1 shows fire radio as the incoming source which is then converted from voice to text in L2.2. L2.3a shows that data is sorted for newsworthiness by L2 s predictive analytics which surfaces events shown in L2.4a which are actionable for a media news customer.

The same data same from L2.1 and converted to text in L2.2 can be sorted for non news customers. For example a fire restoration company may be interested in knowing about fires at commercial properties of a certain value. We would set up a custom filter for them seen here as L2.3b which would render actionable events pictured at L2.4b which would be different then what a news station would want in L2.4a.

Turning now to Table 1 below Table 1 generally refers to the types of information that can be collected and processed by the predictive analytics pictured in L2.3a and rendered as a newsworthy event in L2.4a. For example were L2 is set to analyze the voice to text conversion of a radio transmission in L2.1 referencing smoke coming from a building. It will collect but is not limited to some of the following key word information found in Table 1 

Based on some of this initial data L2 can already make some preliminary decisions on newsworthiness. For example Table 1 2G may indicate a major car accident Table 1 4A may indicate the location as a major freeway Table 1 6B may indicate that accident is during rush hour while Table 1 7C may indicate a first responder is out of breath a sign of a possible rescue. L2 will recognize that a major accident on a major freeway at rush hour with a possible rescue underway is very newsworthy and render it as an Actionable Event in L2.4a.

The predictive analytics of L2 may also layer additional information on top of the hard facts gathered from a radio transmission. For example L2 gathers info from Table 1 2C indicating a fire. The address of that fire is indicated in Table 1 4A and the fact that this location is a single family residence is gathered in Table 1 5b. Given that information L2 checks with local tax records database in Table 1 4a and discover the home is worth 1 million dollars. Finally a further search in Table 1 4c shows that one of the neighbors is the Mayor of Dallas. By adding value to basic facts collected L2 would again render this as news.

There are multiple possible combinations that L2 will recognize as a pattern leading to an Actionable Event in L2.4a.

The User Interface pulls in approved data from the CMS and becomes NewsHub s finished and polished work product. It s what the public sees and experiences. Better and faster breaking news information is now at the fingertips of a client s news organization. NewsHub allows for the processing of this information in two ways live television coverage and web stories written by a computer program.

1. LIVE TELEVISION DASHBOARD A news anchor tasked with sharing breaking news coverage with his audience can now interact live with a large touch screen dashboard powered by NewsHub data.

2. COMPUTER WRITTEN WEB STORIES A company called NARRATIVE SCIENCE has developed software that writes news stories based on available information. By interfacing NewsHub with NARRATIVE SCIENCE it is possible to generate instantly written and constantly updated stories. After the copy is approved by a manager it can immediately be posted to a client s website TWITTER account FACEBOOK page and sent to the news anchor who is live on the air. In addition these stories will create the backbone of the NewsHub News Service feed that can be sold to institutional clients.

As described above the MIHAI engine provides functionality for a real time open closed circuit newsroom social media platform services enhancing communication and sharing of data information inside a news organization. The MIHAI engine creates a graphical virtual story room for each piece of news content developed indicated as actionable by NewsHub and or the news organization. The virtual story rooms allow staff members with various responsibilities to interact and share critical updates with everyone at once in real time. In some implementations the staff members can share virtual story room updates to Twitter Facebook and various private and or public websites. The MIHAI engine also interfaces with and sends receives updated information to and from the organization s newsroom computer system such as NEWS or other suitable newsroom computer system. The ability of the MIHAI engine to interface with other computer systems allows the MIHAI engine and associated server components and the other computer systems to complement and update each other.

Although illustrate one or more particular graphical user interface implementations those skilled in the art will appreciate that represent only possible implementations of a multitude of possible graphical user interface implementations to accomplish similar desired functionality. This disclose anticipates other possible implementations not inconsistent with this disclosure for usability efficiency practicality cost maintenance and or or other suitable reasons.

As illustrated each local hub interfaces with one or more other local hubs and or the news service . In some implementations the news service aggregates and analyzes data received from local hubs. In some implementations the news service may instruct processing associated with one or more particular local hubs manage data streams in and out of one or more local hubs determine user access criteria for the news service and or one or more local hubs load balance operations of one or more local hubs and any other suitable network operation service related to management of the local hubs and receiving sending data from to one or more local hubs.

In some implementations the news service can contain analytics and or other suitable services apart from services present on the one or more local hubs. For example news service is illustrated as offering NARRATIVE SCIENCE analytics .

In some implementations each local hub and the news service may perform some or all of the same operations in a manner coordinated by the news service and or one or more local hubs. In some implementations the local hubs and or the news service cooperatively manage various functions of the distributed intelligent news managed platform and or newsroom social media platform services. In some implementations the operations functions performed by each of the local hubs and or news service can vary dynamically based upon various criteria including network traffic news locations weather geopolitical events bandwidth costs and or other suitable criteria.

Each local hub may receive data from various data sources. For example blogs news staff citizen application input power grid messages and any other suitable data source consistent with this disclosure whether illustrated or not.

Although illustrates particular implementations of a distributed intelligent news management platform service those skilled in the art will appreciate that this is one possible implementation of a multitude of possible distributed intelligent news management platform services to accomplish similar desired functionality. This disclose anticipates other possible implementations not inconsistent with this disclosure for usability efficiency practicality cost maintenance and or or other suitable reasons.

At scanner sources are monitored for emergency dispatches. For example radioreference.com or available scanners. From flow proceeds to

At voice to text transcription S2T occurs. The transcription results in a standardized message format created with tags for fields such as address alert type units alerted and the like. A highly reliable easily scalable customizable fault tolerant voice to text application V2TA will handle S2T and can monitor multiple police EMS fire and other suitable scanner or other multimedia data feeds in multiple cities to detect and recognize as much speech traffic between dispatchers and responders as possible in real time.

The V2TA will detect recognize speech received in a data stream from for example the Radio Reference website www.radioreference.com which captures broadcast scanner traffic and makes it available over the Internet in near real time in one or more formats quality levels etc. Speech data can be source from either quiet e.g. dispatcher side or noisy in the field type environments. The V2TA can decipher filter etc. both types of data to accurately recognize speech. The V2TA can also monitor and correlate one or multiple speech data channels to keep communications together in a usable coherent data stream. In some implementations all speech traffic will be detected but not necessarily recognized acted upon e.g. non essential words can be dropped the and etc. . A small number of keywords will always be recognized and acted upon to detect the type and severity of incidents e.g. fire burning shooting etc. . The V2TA will in some implementations minimize false alarms according to some threshold for example not more than once per hour.

In some implementations the V2TA can coordinate with other processes and or databases to identify names locations events etc. within the context of a geographic area associated with a particular scanner message. For example a fire at MAPSCO coordinate 42 B might result in a lookup of names of residents in that area local dialects businesses schools etc. Vocabulary associated with that area could be placed on a high priority list for recognition sensitivity adjusted etc.

In some implementations the V2TA can have an extensive library of words enabling detection of keywords type and severity of incidents locations such as street names addresses names of places town names parts of buildings etc. In some implementations it is possible to customize place names for each installation of the application for example at a city or metro area level. Third party databases can also be leveraged to provide additional data. Data words etc. can also be added to modified and deleted from the database to improve efficiency.

In some implementations a speech recognition confidence value for each groups of word words can be provided in order to provide a confidence threshold for speech recognition. In addition beginning and ending timestamps can also be provided as well as the origination feed location etc. In some implementations an entire vocabulary or parts of a vocabulary associated with a particular area can be active.

A keyword vocabulary includes common words and some specialized public safety vocabulary. Names of locations may include numbers letters and proper names. Some standardization of style and vocabulary will be expected and handled appropriately. Some speakers have training with public safety vocabulary and speak in a standardized way. The V2TA will process dis fluent speech as efficiently and completely as possible and can operate without speaker training for voice recognition including male female speech disabilities regional accents single multiple speakers non overlapping overlapping different languages etc. .

In some implementations the V2TA can operate on a desktop computer local server cloud based system mobile device and the like. In typical implementations speech will be recognized real time or substantially real time e.g. within one second of speech start or one second after a speech utterance ends . The V2TA can handle multiple simultaneous data streams and provide archiving of received data streams both raw and processed .

The V2TA can also provide a means for controlling essential functions configuring audio input parameters sources start and cancellation of processing callbacks for a stream of recognition result events and error messages . Other suitable functions consistent with this disclosure will be apparent to those skilled in the art. From flow proceeds to .

At the message output is sent this to a cloud service for further processing. In some implementations the message can be processed by the SRT appliance and or the cloud service other processing service. In some implementations the cloud service performs event analytics on text generated by the S2T appliance.

The cloud service can determine What is this event How important is the event How can the event be enriched All processed events are typically returned in plain English identified ranked and enriched to the On Premise Appliance of . In some implementations the processed events can be returned in any suitable usable format.

The cloud service is an external and or automated service that can spot based on a context where it received bad unusable information from S2T Appliance. The cloud service can also provide processed data back to an S2T that can help it learn to be more efficient sensitive etc. In most implementations an S2T cannot learn locally. The data return to an SRT allows a human interaction in the machine learning process as data from the cloud service can be manually updated and modified.

The cloud service can also correct the language text based on context and history making the text more useable for a cloud analytics engine correlate events with data in existing databases such as locations property values and prominent names in the community and archive raw analyzed events and facilitate continuous improvement of the entire process. From flow proceeds to .

At an on premises appliance receives the processed data. Rules that control how the processed data is interacted with and shared with various people interfaces are controlled by the on premises appliance. The on premises appliance also handles workflow and orchestration processing tasks. Executed business rules determine who is communicated with what is needed to go to the next processing step and the execution of an approval process. The on premises appliance is associated with application interfaces controlling external communication capabilities sending event information to apps interfaces and a main GUI console the MIHAI Social Media Platform allowing people in the organization to work together with processed event information and reporting including where events are archived so reports can be run efficiently and properly. From flow proceeds to and or .

At event data location and context aware information is prepared and sent to mobile devices. Based on event content ranking the sent data may be information that is interesting to a wide or narrow audience delivered over a variety of methods SMS text tweets etc. . From flow stops.

Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry in tangibly embodied computer software or firmware in computer hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on a tangible non transitory computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine readable storage device a machine readable storage substrate a random or serial access memory device or a combination of one or more of them.

The term data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can also be or further include special purpose logic circuitry e.g. a central processing unit CPU a FPGA field programmable gate array or an ASIC application specific integrated circuit . In some implementations the data processing apparatus and or special purpose logic circuitry may be hardware based and or software based. The apparatus can optionally include code that creates an execution environment for computer programs e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. The present disclosure contemplates the use of data processing apparatuses with or without conventional operating systems for example LINUX UNIX WINDOWS MAC OS ANDROID IOS or any other suitable conventional operating system.

A computer program which may also be referred to or described as a program software a software application a module a software module a script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. While portions of the programs illustrated in the various figures are shown as individual modules that implement the various features and functionality through various objects methods or other processes the programs may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. a CPU a FPGA or an ASIC.

Computers suitable for the execution of a computer program include by way of example can be based on general or special purpose microprocessors or both or any other kind of CPU. Generally a CPU will receive instructions and data from a read only memory ROM or a random access memory RAM or both. The essential elements of a computer are a CPU for performing or executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a global positioning system GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few.

Computer readable media transitory or non transitory as appropriate suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM DVD R DVD RAM and DVD ROM disks. The memory may store various objects or data including caches classes frameworks applications backup data jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto. Additionally the memory may include any other appropriate data such as logs policies security or access data reporting files as well as others. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube LCD liquid crystal display or plasma monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse trackball or trackpad by which the user can provide input to the computer. Input may also be provided to the computer using a touchscreen such as a tablet computer surface with pressure sensitivity a multi touch screen using capacitive or electric sensing or other type of touchscreen. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore a GUI may represent any graphical user interface including but not limited to a web browser a touch screen or a command line interface CLI that processes information and efficiently presents the information results to the user. In general a GUI may include a plurality of user interface UI elements some or all associated with a web browser such as interactive fields pull down lists and buttons operable by the business suite user. These and other UI elements may be related to or represent the functions of the web browser.

Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of wireline and or wireless digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN a radio access network RAN a metropolitan area network MAN a wide area network WAN Worldwide Interoperability for Microwave Access WIMAX a wireless local area network WLAN using for example 802.11 a b g n and or 802.20 all or a portion of the Internet and or any other communication system or systems at one or more locations. The network may communicate with for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and or other suitable information between network addresses.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

In some implementations any or all of the components of the computing system both hardware and or software may interface with each other and or the interface using an application programming interface API and or a service layer. The API may include specifications for routines data structures and object classes. The API may be either computer language independent or dependent and refer to a complete interface a single function or even a set of APIs. The service layer provides software services to the computing system. The functionality of the various components of the computing system may be accessible for all service consumers via this service layer. Software services provide reusable defined business functionalities through a defined interface. For example the interface may be software written in JAVA C or other suitable language providing data in extensible markup language XML format or other suitable format. The API and or service layer may be an integral and or a stand alone component in relation to other components of the computing system. Moreover any or all parts of the service layer may be implemented as child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed but rather as descriptions of features that may be specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation and or integration of various system modules and components in the implementations described above should not be understood as requiring such separation and or integration in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular implementations of the subject matter have been described. Other implementations alterations and permutations of the described implementations are within the scope of the following claims as will be apparent to those skilled in the art. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

Accordingly the above description of example implementations does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

