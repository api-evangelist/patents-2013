---

title: Datacenter border-issued analytics for monitoring federated services
abstract: Technologies are generally described for providing datacenter border-issued analytics for monitoring federated services. In some examples, a deployment manager, which manages placement of application deployment instances across a federation and thus already knows which datacenter each instance is in, may register a package trigger with a gateway at each datacenter when an application is placed in each datacenter. The datacenter gateway(s) may then search through data packets for registered package properties such as content of a packet header that indicates it is a monitoring packet, and inject additional data according to instructions from the deployment manager. For example, the deployment manager may instruct the gateway(s) to inject a datacenter identifier or a network location identifier to each monitoring data packet. The additional data may be customer-defined and the modified monitoring data including the additional data may be sent to a monitoring system to be analyzed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09515902&OS=09515902&RS=09515902
owner: Empire Technology Development LLC
number: 09515902
owner_city: Wilmington
owner_country: US
publication_date: 20130417
---
This Application is the U.S. National Stage filing under 35 U.S.C 371 of PCT Application Ser. No. PCT US13 37015 filed on Apr. 17 2013. The PCT Application is herein incorporated by reference in its entirety.

Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

A federated datacenter also called datacenter federation is the deployment and management of multiple external and internal data computing services. With the proliferation of datacenter federations employing software defined networking SDN datacenter intermediation layers may allow applications to transparently migrate and distribute among multiple private and public clouds. The trend is getting stronger with standardization of open source cloud based infrastructure. Public clouds and enterprise ready private operating distributions may allow deployments to easily span from private to public clouds. Cloud users may soon be able to launch the component instances of their deployments across private and public clouds spanning federations of clouds. When combined with SDN the process may become invisible to the applications and deployment modules can be moved and provisioned wherever desired for reasons of speed data location cost customer proximity etc.

Current datacenter analytics may include easy data transmission techniques from within programming code by sending a message containing data but the analytics typically do not have the ability to record from which datacenter the messages are originating or when messages between deployment instances pass between datacenters. Moreover datacenter analytics typically have meaning local to each datacenter. Thus applications with a federated deployment across multiple datacenters may have ambiguous erroneous or conflicting data.

The present disclosure generally describes techniques for providing datacenter border issued analytics for monitoring federated services.

According to some examples a method is provided for providing datacenter border issued analytics for monitoring federated services. The method may include receiving instructions associated with modifying monitoring data from a deployment manager. The method may also include embedding modification data into monitoring data wherein the modification data indicates one or more of a processor a server and a datacenter associated with a portion of a deployment. The method may further include receiving modified monitoring data from the portion of the deployment and providing the modified monitoring data to a monitoring system.

According to other examples a datacenter gateway operable to provide datacenter border issued analytics for monitoring federated services is described. The datacenter gateway may include one or more layers of network processors. The network processors may be configured to receive instructions associated with modifying monitoring data from a deployment manager. The network processors may also be configured to embed modification data into monitoring data wherein the modification data indicates one or more of a processor a server and a datacenter associated with an instance of a deployed application. The network processors may further be configured to receive modified monitoring data from the instance of the deployed application and provide the modified monitoring data to a monitoring server.

According to further examples a cloud based datacenter operable to provide datacenter border issued analytics for monitoring federated services is described. The cloud based datacenter may include a deployment manager server configured to manage placement of deployment instances across a federation of datacenters. The deployment manager server may also be configured to register a package trigger with a gateway at each federated datacenter when an application instance is placed at each federated datacenter. The cloud based datacenter may also include the gateway configured to receive instructions associated with modifying monitoring data from the deployment manager server and analyze received data packets for registered package properties and determine monitoring data packets. The gateway may also be configured to inject one or more additional data fields to a packet header of each monitoring data packet according to the instructions of the deployment manager server and receive modified monitoring data from deployment instances.

According to yet further examples a computer readable storage medium is described with instructions stored thereon which when executed on one or more computing devices may execute a method for providing datacenter border issued analytics for monitoring federated services. The method may include registering packet indicia to trigger modification of data packets and enabling embedding of modification data into monitoring data. The modification data may indicate one or more of a processor a server and a datacenter associated with a portion of a deployment. The method may also include receiving modified monitoring data from the portion of the deployment and providing the modified monitoring data to a monitoring server.

The foregoing summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects embodiments and features described above further aspects embodiments and features will become apparent by reference to the drawings and the following detailed description.

In the following detailed description reference is made to the accompanying drawings which form a part hereof. In the drawings similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description drawings and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented herein. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the Figures can be arranged substituted combined separated and designed in a wide variety of different configurations all of which are explicitly contemplated herein.

This disclosure is generally drawn inter alia to methods apparatus systems devices and or computer program products related to datacenter border issued analytics for monitoring federated services.

Briefly stated technologies are generally described for providing datacenter border issued analytics for monitoring federated services. In some examples a deployment manager which manages placement of application deployment instances across a federation and thus already knows which datacenter each instance is in may register a package trigger with a server at each datacenter when an application is placed in each datacenter. The datacenter server s may then search through data packets for registered package properties such as content of a packet header that indicates it is a monitoring packet and inject additional data as the data packet passes through a datacenter border or gateway according to instructions from the deployment manager. For example the deployment manager may instruct the datacenter server s to inject a datacenter identifier or a network location identifier to each monitoring data packet. The additional data may be customer defined and the modified monitoring data including the additional data may be sent to a monitoring system to be analyzed.

A datacenter as used herein refers to an entity that hosts services and applications for customers through one or more physical server installations and one or more virtual machines executed in those server installations. Customers of the datacenter also referred to as tenants may be organizations that provide access to their services for multiple users. Customers may also be internal customers of an organization for example departments with an organization that share the services of a datacenter operated by the organization e.g. company . An example configuration may include an online retail service that provides retail sale services to consumers users . The retail service may employ multiple applications e.g. presentation of retail goods purchase management shipping management inventory management etc. which may be hosted by one or more datacenters. Thus a consumer may communicate with those applications of the retail service through a client application such as a browser over one or more networks and receive the provided service without realizing where the individual applications are actually executed. This scenario contrasts with conventional configurations where each service provider would execute their applications and have their users access those applications on the retail services own servers physically located on retail service premises. One result of the networked approach as described herein is that customers like the retail service may move their hosted services applications from one datacenter to another without the users noticing a difference.

Package properties as used herein refer to data packet properties such as a protocol associated with a data packet a length of the data packet one or more tag identifiers in the data packet and similar ones. Communication between servers in a datacenter and between different datacenters is facilitated through exchange of data packets. Different types of data packets may be used for various types of purposes. For example monitoring data packets may be used between a datacenter server and a monitoring system to communicate to the monitoring system server information such as server health load situation available ports and comparable information. Monitoring packets may be identified as such through an indication in each data packet such as a destination address associated with a monitoring system or other means. A package trigger as used herein refers to data packet indicia that may trigger modification of monitoring data packets through injection of additional data as described herein. A deployment manager may register such packet indicia with a datacenter server or gateway at the border of the datacenter to trigger identification of a monitoring data packet and injection of instructed data into the monitoring data packet i.e. modify the monitoring data packet as the packets pass through one or more datacenter borders or gateways. For example a registered package trigger may be a packet header that indicates monitoring data based on a destination of the monitoring server and or format indicators. Other example package triggers may include packet contents such as XML headers tags or identification numbers. Package triggers may be optimized for efficient detection depending on the network scanning of the data center in use.

As shown in a diagram a physical datacenter may include one or more physical servers or each of which may be configured to provide one or more virtual machines . For example the physical servers and may be configured to provide four virtual machines and two virtual machines respectively. In some embodiments one or more virtual machines may be combined into one or more virtual datacenters. For example the four virtual machines provided by the physical server may be combined into a virtual datacenter . The virtual machines and or the virtual datacenter may be configured to provide cloud related data computing services such as various applications data storage data processing or comparable ones to a group of customers such as individual users or enterprise customers via a cloud . Within the physical datacenter there may also be one or more application servers that may deploy application instances to a datacenter server e.g. server or server . A datacenter server or a gateway as illustrated may reside at the border of the datacenter and perform actions associated with incoming and outgoing communications such as embedding the modification data into monitoring data packets as the packets pass through one or more datacenter borders or gateways in some examples.

When an application instance is deployed from the one or more application servers to the datacenter server or the datacenter server monitoring data may be sent from the application servers or servers to a monitoring server outside the datacenter borders through the datacenter server or acting as gateways in one or more data packets as part of regular communications between the servers. After receiving a registered package trigger from a deployment manager within a datacenter the datacenter server may analyze the one or more data packets to identify monitoring data based on one or more data packet properties defined by the registered package trigger. Once the monitoring data packets to be modified are identified additional data fields may be embedded into the monitoring data packets as the data packets pass through a datacenter border or gateway. The additional data fields may indicate specific hardware and datacenters each portion of a deployment is in for example. The additional data may include current deployment location provisioning status service level agreement SLA data a type of underlying hardware and or a proximity to one or more data repositories. The additional data fields may be defined by a customer and provided to the datacenter server based on the deployment manager s instructions. As a result a customer may have control over what data associated with the deployed application instance may be monitored through one or more datacenters and across public and private clouds spanning federations.

The above approach for implementing datacenter border issued analytics to user analysis tools for monitoring federated services may compare against log based matching which may not include information reflecting the current federated locations of the various service elements. Log based matching may also not be robust against existing software solutions that have to be installed specifically with custom configurations on each machine making them inconsistent with datacenter instance migration and file mirroring best practices. The approaches for implementing datacenter border issued analytics for monitoring federated services described herein may be a standards free and secure way to add application instance location data to federated deployment monitoring that allows customers to control the added data without need for modification of applications or monitoring systems.

To expound further the approaches described herein may be implemented at a single datacenter without standards. The approaches described herein may also be implemented at different datacenters with variations in implementation while still remaining transparent and not involving modifications to the applications or monitoring server. The variations in implementation may include different available data for injection different points in the packet flow etc. If a federated deployment is across a private cloud and multiple public clouds and one of the public clouds does not offer such a service then adequate data may still be collected because the data stream without injected labels is from that last less equipped datacenter.

A general security concern with approaches that provide current deployment location and or provisioning status may be potential cloud cartography. Cloud cartography is mapping of data center assignments in a physical hardware sense and finding ways to have a virtual machine VM assigned to a target destination. Any competing approach based on a datacenter application programming interface API that provides absolute location information even at the datacenter level may be an asset to attackers of federated clouds. Once the relevant datacenter is known the attacker may spend little effort to scatter instances of their sniffer application s around the datacenter to map the datacenter and attempt co location of their sniffer application s with legitimate customer applications in order to retrieve sensitive data such as user information. Upon determining that such an API is available instance corruption replay attacks or scripting attacks may be used to either force the instance to make the call or to extract the data from wherever the instance may store the data. Example embodiments for providing datacenter border issued analytics for monitoring federated services may not need such an API and may not need the application to have any knowledge of location or borders at all. Such information may not even be included in the network messages containing monitoring data and may be held by a gateway and deployment manager until the information is added to the modified monitoring data. Having location information in the gateway and the deployment manager may not be an additional security risk as those modules already contain such location information inherently but may be substantially more secure than application instances. The approaches described herein may also allow each customer to control how much deployment location data is collected in the modified monitoring data enabling the addition of anything from highly detailed information to just general service level agreement SLA or zone information so that the customer may design their own security levels.

As shown in a diagram one or more datacenters such as a datacenter 1 a datacenter 2 and a datacenter 3 may comprise a datacenter federation. The datacenter federation may be configured to provide cloud related data computing services such as various applications data storage data processing or comparable ones via a cloud . A deployment manager may track placement of deployment instances across the datacenter federation and may provide instructions defined by a customer to each federated datacenter when an application instance is placed at each federated datacenter. Monitoring data from the application instance may be modified according to the provided instructions and sent to a monitoring server to be analyzed. Monitoring server and deployment manager may reside in one of the datacenters shown or at another computing location.

Any of numerous datacenter native tools may be used to aggregate and process performance statistics in support of application level monitoring. The datacenter native tools may gather monitoring data and provide the data to servers where the data can be visualized acted upon by management logic or requested by other services. Such tools may operate in a message server format with instrument emitters within applications and environments that send messages to statistics servers. The message server format may be compliant with datacenter best practices and may continue to work within federated data center deployments but the message server format may be missing data that may impair management and analysis if there is no way to track which federation element a particular piece of data comes from. Conventional tools may typically assume a static deployment placement and may not detect or track migration between datacenters changes in communication topology or which datacenter a module is in.

A datacenter function offering data on instance localization may solve multi datacenter deployment problems. Such a solution may demand widespread agreement on a standard for such data. Any concerns about different levels of cloud cartography security worries among different users may need to be addressed making the standard complex. Moreover applications may have to be rewritten to collect and include the additional data in monitoring data messages.

Previous approaches addressing the above problem included placing a machine specific probe configuration at each computer which in a federated datacenter environment may need modification of each instance during deployment or migration and extensive cross datacenter standards. Embodiments may allow any single datacenter to offer the solution and different datacenters with different versions to work together. If different datacenters have different standards or lack support for the entity that needs to know the deployment manager may already perform datacenter specific tracking and management. The approach presented here may also allow customers to manage localization information as they see fit make efficient use of existing hardware work in a software defined networking SDN environment and may not need the rewriting of applications.

As shown in a diagram a datacenter may include one or more applications . Upon deployment an application instance may send monitoring data in the form of one or more data packets to a monitoring server through a gateway . In response to the deployment or migration a deployment manager may register a package trigger with the gateway allowing the gateway to analyze the data packets for registered package properties to identify monitoring data. As the data packets pass through a datacenter border or gateway the gateway may inject additional data fields according to instructions provided by the deployment manager . For example if the monitoring data is XML the monitoring server may inject additional data fields including a datacenter ID or network location ID by inserting text such as 1733302 . The modified monitoring data may then be sent to the monitoring server to be analyzed.

Upon identifying the monitoring data within a data packet the gateway may inject additional data fields into one or more monitoring data packets according to the instructions of the deployment manager which may be defined by a customer preference. The injected data fields may include a datacenter identifier and or a network location identifier to indicate current deployment location and or provisioning status. The injected data fields may also include data to indicate service level agreement SLA data infrastructure performance or state a type of underlying hardware and or a proximity to one or more data repositories to modify the monitoring data. The gateway may further map datacenter hardware to contents of the packet header of the one or more monitoring data packets into which additional data fields were injected. As a result location and other additional data now associated with a deployed application instance may be monitored spanning across a datacenter federation.

The gateway may include one or more layers of network processors. The layers of network processors may include session border controllers border gateways load balancers multiservice security gateways or other similar products. These processors may include matching engines for rapidly matching patterns in packet headers or data packets themselves. Such network processors may be used for data loss prevention packet routing software defined networking SDN and other purposes and are commonly found at a gateway or border. The gateway does not need to have a network processor but may have one and may also be implemented at the level of SDN networking border gateway session manager data loss prevention plane or even a security plane. The gateway may also be configured to port in accelerators software patches to be applied to virtual machines executing the accelerators and or a hardware map that maps different types of processors to the accelerators based on the received instructions.

The deployment manager may register packet indicia that may trigger modification of data packets. For example the registered package trigger may be a packet header that indicates monitoring data based on destination of the monitoring server and format indicators. The registered change may be the addition of a simple string at a predetermined location like the end of the packet for example adding a datacenter ID field. The string may include a datacenter identifier and or a network location identifier field.

The deployment manager may employ an application wrapper to provide instructions to the gateway via the packet indicia to trigger modification of the data packets. Application wrapping is the process of applying a management layer to an application e.g. a mobile application without requiring any changes to the underlying application. Application wrapping may allow an application management administrator to set specific policy elements that can be applied to an application or group of applications. Policy elements may include such things as whether or not user authentication is necessary for a specific application whether or not data associated with the application can be stored locally and whether or not specific application programming interfaces APIs such as copy and paste or file sharing will be allowed. In a datacenter application wrapping may allow an administrator to take an application instance associate extra security and management features with the application instance and re deploy the application instance as a single containerized program in a federation of datacenters.

As a result of application wrapping the deployment manager may provide instructions to the gateway to inject any additional data to monitoring data as the data packets pass through a datacenter border or gateway like the XML data fields example discussed above. Such data may usefully include any number of details such as current location provisioning status service level agreement SLA data if altered by provisioning types of underlying hardware proximity to various data repositories or nearly anything else that the deployment manager may want to include in modified monitoring data.

Upon injection into a packet header of one or more monitoring data packets the additional data fields may modify monitoring data which may then be provided to and analyzed by a monitoring server within a monitoring system. For many monitoring servers there may not need to be a predefined format and adding the simple string to generate modified monitoring data may add the relevant data to the data monitoring infrastructure to be analyzed. The monitoring server may analyze the modified monitoring data for information associated with a current deployment location a provisioning status SLA data a type of underlying hardware and or a proximity to one or more data repositories.

The examples in have been described using specific systems and processes in which providing datacenter border issued analytics for monitoring federated services may be implemented. Embodiments for providing datacenter border issued analytics for monitoring federated services are not limited to the systems and processes according to these examples.

For example the computing device may be used to provide datacenter border issued analytics for monitoring federated services as described herein. In an example basic configuration the computing device may include one or more processors and a system memory . A memory bus may be used for communicating between the processor and the system memory . The basic configuration is illustrated in by those components within the inner dashed line.

Depending on the desired configuration the processor may be of any type including but not limited to a microprocessor P a microcontroller C a digital signal processor DSP or any combination thereof. The processor may include one more levels of caching such as a cache memory a processor core and registers . The example processor core may include an arithmetic logic unit ALU a floating point unit FPU a digital signal processing core DSP Core or any combination thereof. An example memory controller may also be used with the processor or in some implementations the memory controller may be an internal part of the processor .

Depending on the desired configuration the system memory may be of any type including but not limited to volatile memory such as RAM non volatile memory such as ROM flash memory etc. or any combination thereof. The system memory may include an operating system a deployment manager and program data . The deployment manager may include an application wrapping module to provide instructions to a datacenter gateway to modify monitoring data of a deployed application instance. The program data may include among other data monitoring data associated with one or more federated datacenters or the like as described herein.

The computing device may have additional features or functionality and additional interfaces to facilitate communications between the basic configuration and any desired devices and interfaces. For example a bus interface controller may be used to facilitate communications between the basic configuration and one or more data storage devices via a storage interface bus . The data storage devices may be one or more removable storage devices one or more non removable storage devices or a combination thereof. Examples of the removable storage and the non removable storage devices include magnetic disk devices such as flexible disk drives and hard disk drives HDD optical disk drives such as compact disk CD drives or digital versatile disk DVD drives solid state drives SSD and tape drives to name a few. Example computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

The system memory the removable storage devices and the non removable storage devices are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD solid state drives or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be used to store the desired information and which may be accessed by the computing device . Any such computer storage media may be part of the computing device .

The computing device may also include an interface bus for facilitating communication from various interface devices for example one or more output devices one or more peripheral interfaces and one or more communication devices to the basic configuration via the bus interface controller . Some of the example output devices include a graphics processing unit and an audio processing unit which may be configured to communicate to various external devices such as a display or speakers via one or more A V ports . One or more example peripheral interfaces may include a serial interface controller or a parallel interface controller which may be configured to communicate with external devices such as input devices for example keyboard mouse pen voice input device touch input device etc. or other peripheral devices for example printer scanner etc. via one or more I O ports . An example communication device includes a network controller which may be arranged to facilitate communications with one or more other computing devices over a network communication link via one or more communication ports . The one or more other computing devices may include servers customer equipment and comparable devices.

The network communication link may be one example of a communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF microwave infrared IR and other wireless media. The term computer readable media as used herein may include both storage media and communication media.

The computing device may be implemented as a part of a general purpose or specialized server mainframe or similar computer that includes any of the above functions. The computing device may also be implemented as a personal computer including both laptop computer and non laptop computer configurations.

Example embodiments may also include methods for providing datacenter border issued analytics for monitoring federated services. These methods can be implemented in any number of ways including the structures described herein. One such way may be by machine operations of devices of the type described in the present disclosure. Another optional way may be for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some of the operations while other operations may be performed by machines. These human operators need not be collocated with each other but each can be with a machine that performs a portion of the program. In other examples the human interaction can be automated such as by pre selected criteria that may be machine automated.

Example methods may include one or more operations functions or actions as illustrated by one or more of blocks and and may in some embodiments be performed by a computing device such as the computing device in . The operations described in the blocks may also be stored as computer executable instructions in a computer readable medium such as a computer readable medium of a computing device .

An example process for providing datacenter border issued analytics for monitoring federated services may begin with block RECEIVE MONITORING DATA REGISTERED WITH PACKAGE TRIGGER where the gateway at a datacenter border may receive monitoring data destined to a monitoring system associated with an application instance has been deployed to a server within the datacenter.

Block may be followed by block DETERMINE REGISTERED PACKET PROPERTIES WITHIN DATA PACKETS where the gateway may analyze the one or more data packets to determine registered packet properties such as a packet header that may indicate the packet is a monitoring data packet.

Block may be followed by block INJECT ADDITIONAL DATA BASED ON DEPLOYMENT MANAGER INSTRUCTIONS where additional data fields may be injected into a packet header of one or more data packets indicated as a monitoring data packet as the data packets pass through the datacenter border or gateway. The additional data fields injected may be according to a deployment manager s instructions defined by a customer preference. The additional data fields may indicate which specific hardware and datacenters each portion of a deployed application instance is in for example.

Block may be followed by block PROVIDE MONITORING DATA TO MONITORING SYSTEM where the monitoring data modified with injected data fields may be provided to a monitoring system to be analyzed.

In some examples as shown in the computer program product may include a signal bearing medium that may also include one or more machine readable instructions that when executed by for example a processor may provide the functionality described herein. Thus for example referring to the processor in the deployment manager and the application wrapping module may undertake one or more of the tasks shown in in response to the instructions conveyed to the processor by the signal bearing medium to perform actions associated with providing datacenter border issued analytics for monitoring federated services as described herein. Some of those instructions may include for example receiving monitoring data registered with package trigger determining registered packet properties within data packets injecting additional data based on deployment manager instructions and providing monitoring data to monitoring system according to some embodiments described herein.

In some implementations the signal bearing medium depicted in may encompass a computer readable medium such as but not limited to a hard disk drive a solid state drive a Compact Disc CD a Digital Versatile Disk DVD a digital tape memory etc. In some implementations the signal bearing medium may encompass a recordable medium such as but not limited to memory read write R W CDs R W DVDs etc. In some implementations the signal bearing medium may encompass a communications medium such as but not limited to a digital and or an analog communication medium for example a fiber optic cable a waveguide a wired communications link a wireless communication link etc. . Thus for example the computer program product may be conveyed to one or more modules of the processor by an RF signal bearing medium where the signal bearing medium is conveyed by the wireless communications medium for example a wireless communications medium conforming with the IEEE 802.11 standard .

According to some examples a method is provided for providing datacenter border issued analytics for monitoring federated services. The method may include registering packet indicia to trigger modification of data packets and receiving monitoring data from a portion of a deployment. The method may also include enabling embedding of modification data into monitoring data where the modification data indicates one or more of a processor a server and a datacenter associated with the portion of the deployment. The method may further include providing the modified monitoring data to a monitoring server.

According to other examples embedding the modification data may include injecting the modification data into monitoring data packets as the packets pass through one or more datacenter borders or gateways. Definition of the modification data embedding may be enabled based on a user preference through the instructions. The embedded modification data may be used to collect information associated with one or more of a current deployment location and a provisioning status. The embedded modification data may be further used to collect information associated with one or more of service level agreement SLA data a type of underlying hardware and a proximity to one or more data repositories. A security level design may be enabled via definition of one or more of a type and an amount of deployment location data to be collected in the modified monitoring data.

According to further examples embedding of the modification data may be implemented into the monitoring data at a single datacenter. Embedding of the modification data may also be implemented into the monitoring data at different datacenters with one or more variations in implementation. The variations may include one or more of different available data for embedding and different points in a packet flow while embedding of the modification data into the monitoring data remains transparent to an executed application and the monitoring system. Embedding of the modification data may be implemented into the monitoring data across a private cloud and multiple public clouds wherein the portion of deployment is an instance of an executed application.

According to some embodiments a datacenter gateway operable to provide datacenter border issued analytics for monitoring federated services is described. The datacenter gateway may include one or more of network processors configured to receive instructions associated with modifying monitoring data from a deployment manager and receive monitoring data from an instance of a deployed application. The datacenter gateway may also include a general processor configured to embed modification data into the monitoring data where the modification data indicates one or more of a processor a server and a datacenter associated with an instance of the deployed application and provide the modified monitoring data to a monitoring server.

In other embodiments the gateway may be configured to analyze received data packets for registered package properties and determine monitoring data packets. The gateway may also be configured to embed the modification data by injecting one or more additional data fields to a packet header of each monitoring data packet according to the instructions of the deployment manager. The injected data fields may include one or more of a datacenter identifier and a network location identifier.

In further embodiments the gateway may be further configured to map datacenter hardware to contents of packet headers of the monitoring data packets wherein the hardware includes one of a network processor and a data loss prevention system. The network processors may include matching engines for rapidly matching patterns in monitoring data packets and or monitoring data packet headers. The gateway may be one of a session border controller a border gateway a session aware load balancer a data loss prevention gateway and a multiservice security gateway wherein the gateway is implemented at a software defined network SDN level.

According to some examples a cloud based datacenter operable to provide datacenter border issued analytics for monitoring federated services is described. The cloud based datacenter may include a deployment manager server configured to manage placement of deployment instances across a federation of datacenters and register a package trigger with a gateway at each federated datacenter when an application instance is placed at each federated datacenter. The cloud based datacenter may further include the gateway which may be configured to receive instructions associated with modifying monitoring data from the deployment manager server receive the monitoring data from the deployment instances analyze data packets in the received monitoring data for registered package properties and determine monitoring data packets and inject one or more additional data fields to a packet header of each monitoring data packet according to the instructions of the deployment manager server.

In other examples the gateway may be further configured to forward the modified monitoring data to a monitoring server. The monitoring server may be configured to receive the modified monitoring data from the gateway and analyze the modified monitoring data for information associated with one or more of a current deployment location a provisioning status service level agreement SLA data a type of underlying hardware and a proximity to one or more data repositories.

In further examples the deployment manager server may be further configured to employ an application wrapper to provide instructions to the gateway. The gateway may be further configured to port in one or more of accelerators software patches to be applied to virtual machines executing the accelerators and a hardware map that maps different types of processors to the accelerators based on the received instructions. The gateway may be one of a session border controller a border gateway a load balancer a data loss prevention gateway and a multiservice security gateway.

According to some embodiments a computer readable storage medium is described with instructions stored thereon which when executed on one or more computing devices may execute a method for providing datacenter border issued analytics for monitoring federated services. The method may include registering packet indicia to trigger modification of data packets and receiving monitoring data from a portion of a deployment. The method may also include enabling embedding of modification data into monitoring data where the modification data indicates one or more of a processor a server and a datacenter associated with the portion of the deployment. The method may further include providing the modified monitoring data to a monitoring server.

According to other embodiments registering the packet indicia to trigger the modification of the data packets may include registering a packet header that indicates monitoring data based on a destination of the monitoring server and or format indicators. The registered packet indicia may include an addition of a string at a predetermined location in each data packet wherein the predetermined location includes one of a data packet beginning and an end of a data packet and the string includes one of a datacenter identifier field and a network location identifier field.

There is little distinction left between hardware and software implementations of aspects of systems the use of hardware or software is generally but not always in that in certain contexts the choice between hardware and software may become significant a design choice representing cost vs. efficiency tradeoffs. There are various vehicles by which processes and or systems and or other technologies described herein may be effected for example hardware software and or firmware and that the preferred vehicle will vary with the context in which the processes and or systems and or other technologies are deployed. For example if an implementer determines that speed and accuracy are paramount the implementer may opt for a mainly hardware and or firmware vehicle if flexibility is paramount the implementer may opt for a mainly software implementation or yet again alternatively the implementer may opt for some combination of hardware software and or firmware.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples may be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof. In one embodiment several portions of the subject matter described herein may be implemented via Application Specific Integrated Circuits ASICs Field Programmable Gate Arrays FPGAs digital signal processors DSPs or other integrated formats. However those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part may be equivalently implemented in integrated circuits as one or more computer programs running on one or more computers for example as one or more programs running on one or more computer systems as one or more programs running on one or more processors for example as one or more programs running on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure.

The present disclosure is not to be limited in terms of the particular embodiments described in this application which are intended as illustrations of various aspects. Many modifications and variations can be made without departing from its spirit and scope as will be apparent to those skilled in the art. Functionally equivalent methods and apparatuses within the scope of the disclosure in addition to those enumerated herein will be apparent to those skilled in the art from the foregoing descriptions. Such modifications and variations are intended to fall within the scope of the appended claims. The present disclosure is to be limited only by the terms of the appended claims along with the full scope of equivalents to which such claims are entitled. It is to be understood that this disclosure is not limited to particular methods reagents compounds compositions or biological systems which can of course vary. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.

In addition those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the subject matter described herein applies regardless of the particular type of signal bearing medium used to actually carry out the distribution. Examples of a signal bearing medium include but are not limited to the following a recordable type medium such as a floppy disk a hard disk drive a Compact Disc CD a Digital Versatile Disk DVD a digital tape a computer memory a solid state drive etc. and a transmission type medium such as a digital and or an analog communication medium for example a fiber optic cable a waveguide a wired communications link a wireless communication link etc. .

Those skilled in the art will recognize that it is common within the art to describe devices and or processes in the fashion set forth herein and thereafter use engineering practices to integrate such described devices and or processes into data processing systems. That is at least a portion of the devices and or processes described herein may be integrated into a data processing system via a reasonable amount of experimentation. Those having skill in the art will recognize that a typical data processing system generally includes one or more of a system unit housing a video display device a memory such as volatile and non volatile memory processors such as microprocessors and digital signal processors computational entities such as operating systems drivers graphical user interfaces and applications programs one or more interaction devices such as a touch pad or screen and or control systems including feedback loops and control motors for example feedback for sensing position and or velocity of gantry systems control motors for moving and or adjusting components and or quantities .

A system may be implemented using any suitable commercially available components such as those typically found in data computing communication and or network computing communication systems. The herein described subject matter sometimes illustrates different components contained within or connected with different other components. It is to be understood that such depicted architectures are merely exemplary and that in fact many other architectures may be implemented which achieve the same functionality. In a conceptual sense any arrangement of components to achieve the same functionality is effectively associated such that the desired functionality is achieved. Hence any two components herein combined to achieve a particular functionality may be seen as associated with each other such that the desired functionality is achieved irrespective of architectures or intermediate components. Likewise any two components so associated may also be viewed as being operably connected or operably coupled to each other to achieve the desired functionality and any two components capable of being so associated may also be viewed as being operably couplable to each other to achieve the desired functionality. Specific examples of operably couplable include but are not limited to physically connectable and or physically interacting components and or wirelessly interactable and or wirelessly interacting components and or logically interacting and or logically interactable components.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein and especially in the appended claims for example bodies of the appended claims are generally intended as open terms for example the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. . It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to embodiments containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an for example a and or an should be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should be interpreted to mean at least the recited number for example the bare recitation of two recitations without other modifiers means at least two recitations or two or more recitations .

Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention for example a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the description claims or drawings should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

As will be understood by one skilled in the art for any and all purposes such as in terms of providing a written description all ranges disclosed herein also encompass any and all possible subranges and combinations of subranges thereof. Any listed range can be easily recognized as sufficiently describing and enabling the same range being broken down into at least equal halves thirds quarters fifths tenths etc. As a non limiting example each range discussed herein can be readily broken down into a lower third middle third and upper third etc. As will also be understood by one skilled in the art all language such as up to at least greater than less than and the like include the number recited and refer to ranges which can be subsequently broken down into subranges as discussed above. Finally as will be understood by one skilled in the art a range includes each individual member. Thus for example a group having 1 3 cells refers to groups having 1 2 or 3 cells. Similarly a group having 1 5 cells refers to groups having 1 2 3 4 or 5 cells and so forth.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope and spirit being indicated by the following claims.

