---

title: Application recommendations based on application and lifestyle fingerprinting
abstract: Disclosed are various embodiments that employ application fingerprinting and lifestyle fingerprinting. Application fingerprints are received, where each application fingerprints is associated with a corresponding application and is generated based at least in part on a static analysis, a dynamic analysis, and a behavioral analysis of the corresponding application. A selection of an application is received. Applications that are similar to the selected application are determined by comparing a particular application fingerprint that is associated with the selected application with other application fingerprints. Users are determined based at least in part on lifestyle fingerprints. In one embodiment, such users may be invited to test the selected application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09262470&OS=09262470&RS=09262470
owner: Amazon Technologies, Inc.
number: 09262470
owner_city: Seattle
owner_country: US
publication_date: 20130625
---
An application marketplace may offer a multitude of different applications such as mobile applications. For example the applications may include games email applications social networking applications mapping applications imaging applications music playing applications shopping applications and so on. Various applications may use different hardware features and may employ different software libraries. Different users may prefer to use different types of applications.

The present disclosure relates to generating profiles of applications referred to herein as application fingerprinting and generating profiles of users referred to herein as lifestyle fingerprinting. Specifically the present disclosure focuses on the intersection between application fingerprinting and lifestyle fingerprinting. An application fingerprint uniquely identifies an application based on for example what application programming interfaces API it uses what software libraries it uses individual code fragments usage by the application what hardware devices it accesses typical resource consumption patterns and or other characteristics. In some embodiments the application fingerprint may also identify typical user behavior relative to the application. The application fingerprints may have many uses including application search application categorization defect detection and so on.

Lifestyle fingerprints may incorporate various information explicitly provided by users or inferred about users from their actions. In one embodiment this information may include a listing of applications downloaded and for each application downloaded a profile of the usage of the application. For example if a user downloads an application and uses only one time this may be an indication that the user did not like the application. Suppose that a user downloads twenty applications in the same space e.g. money management applications or another category . Suppose further that the user runs nineteen of the applications once and then exits or deletes the applications but runs the other one of the applications repeatedly. Accordingly the application fingerprints of each of the twenty applications can be used in combination with this usage data as an indicator of the features that the user seeks in applications.

Continuing this example it may be determined that the application fingerprint of the application that is repeatedly used includes information indicative of a feature a usage profile a code fragment a color palette a software library a sound schema the usage or non usage of a peripheral device a configuration whether the application is adapted for a particular device or operating system connectivity privacy features a particular vendor or vendor type a rating a price point a purchasing profile any other attribute or any combination of the aforementioned attributes. As such it may be determined that the user has a preference for one or more attributes. This information can be used in any number of ways to recommend other applications to the user or to recommend that developers of applications modify their applications in one or more ways to appeal to a broader audience or to a specific target audience. The above is a general example which as described herein can be improved upon to accurately reflect the lifestyle fingerprint of the user. For example a determination similar to that above can be made for each type of application times of the day locations days of the week or in relationship to any other aspect of a user lifestyle and usage of a device.

In another example lifestyle fingerprints may be used to provide information to developers about the lifestyle usage metrics around their application. To this end the lifestyle fingerprints of the users of an application may be analyzed to determine their common characteristics. The common characteristics may then be leveraged by the developer to better monetize the application. For example it may be determined that the users of the application prefer extended trial periods before purchasing applications. Accordingly it may be recommended to the developer to extend a trial period for the application. This monetization related information may be augmented through application fingerprinting to determine lifestyle fingerprints of likely users as well as actual users. Incorporating the lifestyle fingerprints of likely users increases the data set and may improve the developer recommendations.

In still another example lifestyle fingerprints may be employed to recommend an application upgrade to a user. For example lifestyle fingerprints may indicate that users who are similar to a particular user often purchase a certain type of application upgrade. Similarly lifestyle fingerprints may be used to provide an in application item to a user. For example lifestyle fingerprints may indicate that users who are similar to a particular user are likely to buy a type of in application item if another type of in application item is provided for free.

In still another example lifestyle fingerprints may be used to target advertising to specific users. To illustrate the users of a particular application may be determined and the lifestyle fingerprints corresponding to these users may be retrieved. These lifestyle fingerprints may be correlated with the lifestyle fingerprints of other people who are not users of the particular application. In other words the non users may have lifestyle fingerprints similar to those of the users. Advertising for the particular application may then be targeted to the non users having the similar lifestyle fingerprints as the users.

Various techniques relating to application fingerprinting are described in U.S. Patent Application entitled APPLICATION FINGERPRINTING filed Jun. 25 2013 under Ser. No. 13 926 607 U.S. Patent Application entitled APPLICATION MONETIZATION BASED ON APPLICATION AND LIFESTYLE FINGERPRINTING filed Jun. 25 2013 under Ser. No. 13 926 656 U.S. Patent Application entitled DEVELOPING VERSIONS OF APPLICATIONS BASED ON APPLICATION FINGERPRINTING filed Jun. 25 2013 under Ser. No. 13 926 683 U.S. Patent Application entitled IDENTIFYING RELATIONSHIPS BETWEEN APPLICATIONS filed Jun. 25 2013 under Ser. No. 13 926 215 U.S. Patent Application entitled RECOMMENDING IMPROVEMENTS TO AND DETECTING DEFECTS WITHIN APPLICATIONS filed Jun. 25 2013 under Ser. No. 13 926 234 and U.S. Patent Application entitled ANALYZING SECURITY OF APPLICATIONS filed Jun. 25 2013 under Ser. No. 13 926 211 all of which are incorporated herein by reference in their entirety.

With reference to illustrated is an exemplary application fingerprint scenario . The exemplary application fingerprint scenario involves three applications and for which corresponding application fingerprints and have been generated. The exemplary applications are representative of the multitude of applications that may be offered by an application marketplace. In this non limiting example the application corresponds to a game the application corresponds to a music player and the application corresponds to a mapping application. Each of the applications has its own respective application fingerprint that can function to distinguish one application from another and or to identify similarities between applications .

In the non limiting example of each of the application fingerprints identifies characteristics relating to device hardware used software libraries used and resource consumption. In other examples additional or different characteristics may be represented by the application fingerprints such as usage or behavioral metrics associated with use of the application by users. Here the application fingerprint indicates that the application uses the accelerometer and touchscreen of the device and the software libraries or code fragments named Graphics Effects 1.3b and OpenRender 0.5. Also the application is associated with high processor and battery usage. The application fingerprint indicates that the application uses a sound device and the touchscreen of the device and the software libraries or code fragments named LibAudioDecode 2.0 and LibID3 1.0. The application is associated with medium processor and battery usage. The application fingerprint indicates that the application uses a global positioning system GPS device and a touchscreen while using the software library named Mapping APIs 7.0. The application is associated with high processor and battery usage.

Turning to illustrated is an exemplary lifestyle fingerprint scenario . The exemplary lifestyle fingerprint scenario involves three users and for which corresponding lifestyle fingerprints and have been generated. Each lifestyle fingerprint includes various profiling information regarding the corresponding user . In this non limiting example the lifestyle fingerprint includes information provided by a user which may include one or more of a purchasing profile favorite types of applications and a usage level for the corresponding user .

Here the lifestyle fingerprint indicates that the user Jim Kingsboro has a purchasing profile of lifestyle A. For example the user may frequently purchase applications without regard to price. The favorite types of applications for the user are finance real estate and casino applications . Such categories of applications may be discovered through analyzing the application fingerprints of applications purchased and used by the user . The user is indicated as having a usage level of 40 which may correspond for example to a relative frequency of application usage.

The lifestyle fingerprint indicates that the user Adam Butterflies has a purchasing profile of lifestyle B. For example the user may be reluctant to make purchases of applications or may prefer to purchase relatively lower priced applications . The favorite types of applications for the user are social networking word games and kids applications . The user is indicated as having a usage level of 90 . The lifestyle fingerprint indicates that the user Betty Mortiman has a purchasing profile of lifestyle C. For example the user may often make purchases from merchandizing occurring within an application to unlock additional functionality extend use obtain virtual currency obtain related applications or make other purchases. The favorite types of applications for the user are social networking word games and kids applications . The user is indicated as having a usage level of 90 . In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

Turning now to shown is a networked environment according to various embodiments. The networked environment includes a computing environment and one or more clients in data communication via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may employ a plurality of computing devices that may be arranged for example in one or more server banks or computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For example the computing environment may include a plurality of computing devices that together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include an application fingerprint generation service a lifestyle fingerprint generation service a metric collection service a hosted environment an application marketplace system and other applications services processes systems engines or functionality not discussed in detail herein. The application fingerprint generation service is executed to generate application fingerprints for applications as will be described. To this end the application fingerprint generation service may include a static analysis service a dynamic analysis service and a behavioral analysis service for performing static analysis dynamic analysis and behavioral analysis on the application . The results of the analyses may be incorporated in the resulting application fingerprint .

The lifestyle fingerprint generation service is executed to generate lifestyle fingerprints for users of the application marketplace system . The lifestyle fingerprints includes various information regarding the users such as information indicative of purchasing profiles applications of interest time periods for using applications frequency of using applications types of clients employed for using the applications demographic data geographic data and or other information. The lifestyle fingerprint generation service may be configured to generate portions of the lifestyle fingerprints based at least in part on application fingerprints . As a non limiting example the lifestyle fingerprints may include information indicative of software libraries frequently used by the user where the software libraries are identified from the application fingerprints of the applications used by the user.

In various embodiments the lifestyle fingerprint generation service may access various information that has been provided implicitly or explicitly by a user. The lifestyle fingerprint generation service may then analyze this information to extract traits or characteristics that provide a lifestyle profile of the user. As a non limiting example such traits or characteristics may reveal that a certain user is a likely in application purchaser or would likely purchase an application if a free upgrade were offered. As a non limiting example such traits or characteristics may reveal a preference for certain categories of applications or a distinctive usage patterns for each of certain categories of applications. Indications of such traits or characteristics may then be summarized within a lifestyle fingerprint for the user.

The metric collection service is executed to obtain various metrics for use by the application fingerprint generation service in generating application fingerprints . Such metrics may include resource consumption metrics behavioral usage metrics and or other types of metrics. The hosted environment is configured to execute an application instance for use in dynamic analysis and resource consumption profiling by the application fingerprint generation service . To this end the hosted environment may comprise an emulator or other virtualized environment for executing the application instance .

The application marketplace system is executed to provide functionality relating to an application marketplace where a multitude of applications may be submitted by developers and made available for purchase and or download. The application marketplace system may include functionality relating to electronic commerce e.g. shopping cart ordering and payment systems. The application marketplace system may support searching and categorization functionality so that users may easily locate applications that are of interest. The application marketplace system may include functionality relating to verification of compatibility of applications with various clients .

The data stored in the data store includes for example applications application fingerprints identified code fragments identified device resources resource consumption profiles pricing model data data behavioral usage profiles lifestyle fingerprints data relating to an application marketplace and potentially other data. The applications correspond to those applications that have been submitted by developers and or others for example for inclusion in the application marketplace . The applications may correspond to game applications email applications social network applications mapping applications and or any other type of application . In one embodiment the applications correspond to mobile applications for use on mobile devices such as for example smartphones tablets electronic book readers and or other devices.

Each application may include for example object code source code metadata and or other data. The object code corresponds to code that is executable by clients either natively by a processor or by way of a virtual machine executed by the processor. The source code corresponds to the source for the application as written in a programming language. In some cases the source code may be generated by way of decompiling the object code . The source code may be executable by clients through the use of an interpreter. The metadata may declare compatibility with various clients software libraries used by the application device resources used by the application and or other information. In one embodiment an application is distributed as a package including the object code and the metadata . In some cases the metadata may include documentation such as unified modeling language UML Javadoc documentation and or other forms of documentation for the application .

The application fingerprints each identify a respective application by its characteristics. In one embodiment an application fingerprint corresponds to a summarized numerical value. In various embodiments the application fingerprint may be stored as a string. The application fingerprint may include various unique identifiers for device resources code fragments graphical assets used by the application files accessed by the application and or characteristics of the application . The application fingerprint may indicate resource consumption profiles and or behavioral usage profiles .

The identified code fragments correspond to various code libraries and application programming interface API calls that are used by various applications . Unlike custom code that is specific to an application the identified code fragments include functionality that may be employed and reused by many different applications in either an exact or substantially similar form. As an example a code fragment may correspond to a software library. As another example a code fragment may correspond to open source reference code for performing some function. Each of the identified code fragments may have a corresponding version and multiple different versions of the software library may be employed by the applications . Unique identifiers may be associated with each identified code fragment and or various API calls within each identified code fragment . Various data may be stored indicating how the various code fragments are employed e.g. to render specific user interface elements to obtain a specific user gesture and so on.

The identified device resources correspond to the various hardware and or software requirements of the applications . For example various applications may require or request access to hardware devices on clients such as accelerometers touchscreens having a certain resolution size GPS devices network devices storage devices and so on. Additionally various applications may access application resources on clients . Such application resources may include sound files graphical assets graphical textures images buttons user interface layouts and so on. Such application resources may include data items on clients e.g. contact lists text messages browsing history etc. Identifiers for such application resources may be included in a generated application fingerprint . It is noted that the identified device resources may include static resources and runtime resources.

The resource consumption profiles correspond to profiles of resource consumption for applications that are generated from resource consumption metrics collected by the metric collection service . The resource consumption profiles may indicate processor usage memory usage battery usage network usage and or other resources that are consumed. The resource consumption profiles may indicate maximum consumption average consumption median consumption minimum consumption and or other statistics for a particular application .

The pricing model data defines various pricing models that may be employed by the applications offered in the application marketplace . For example the pricing model data may define pricing models that are purely purchase based purely advertising supported partially purchase based and partially advertising supported pay per use pay for time in application purchase supported and so on. The developer data may define various information regarding characteristics of the developers of the applications . Such characteristics may include for example longevity quantity of applications quality of applications user ratings popularity of applications and other characteristics.

The behavioral usage profiles correspond to profiles of behavioral usage for applications that are generated from behavioral usage metrics collected by the metric collection service . The behavioral usage profiles may indicate average duration that the application instances execute times of day and or locations where the application instances are executed privacy related behaviors of the application instances e.g. whether contact lists are accessed whether browsing history is accessed and so forth circumstances under which the application instances crash e.g. types of clients types of wireless carriers etc. user demographics and so on. The behavioral usage profiles may incorporate synchronization history from a synchronization service. Metrics related to synchronization may be obtained from the client and or from the synchronization service.

The lifestyle fingerprints as discussed in connection with include data profiling various characteristics of particular users of the applications based for example on data that the particular users have elected to share. In one embodiment the lifestyle fingerprints may record time periods e.g. hours of the day days of the week etc. during which the particular user typically uses certain types of applications . The lifestyle fingerprints may also record locations where the user typically users certain types of applications . As a non limiting example a user may employ a certain type of application while at the office weekdays from 8 a.m. to 5 p.m. another type of application while commuting weekdays from 7 30 a.m. to 8 a.m. and 5 p.m. to 5 30 p.m. and yet another type of application while at home on weekdays from 5 30 p.m. to 8 p.m. and on weekends. To this end the lifestyle fingerprints may be developed based at least in part on the behavioral usage metrics received from clients associated with the particular users.

As another non limiting example the lifestyle fingerprints may record whether a user frequently taps on a touchscreen of the client or engages in any other characteristic repetitive behavior. Such characteristic behaviors may be correlated with a purchasing profile. For instance frequent screen tappers may also favor advertising supported applications .

Beyond merely the types of applications that are preferred the lifestyle fingerprints may also record specific components or libraries of applications that are frequently used. Such a determination may be made through comparison with the application fingerprints . For example a user may prefer applications that use social networking functionality global positioning system GPS functionality or a flashlight functionality.

Additionally the lifestyle fingerprints may also profile user specific purchasing behavior via the application marketplace system . For example a lifestyle fingerprint for a given user may indicate whether the user is a frequent purchaser regardless of cost a reluctant cost conscious purchaser or a frequent purchaser from within an application . This information may be employed by the application marketplace system to target specific versions of applications e.g. low cost versions high cost versions freemium versions etc. and to market effectively to specific categories of users. The lifestyle fingerprint may also include information indicative of the response of a user to a particular application or class of applications for example whether the user downloaded the application and did nothing further with it whether the user purchased the application within a shorter predefined time period or whether the user purchased the application within a longer predefined time period.

Other user lifestyle aspects that may be incorporated in lifestyle fingerprint may include for example a typical amount of time spent browsing an application marketplace before making a download or purchase the typical amount spent in the application marketplace how many applications are downloaded but used only once and then deleted the average number of times an application is used before it is deleted the average length of usage sessions the propensity to leave an application on a device but never use it sound volume settings of the device when an application is executing and other aspects.

Various techniques relating to collecting behavioral usage metrics from applications are described in U.S. patent application Ser. No. 13 215 972 entitled COLLECTING APPLICATION USAGE METRICS and filed on Aug. 23 2011 which is incorporated herein by reference in its entirety. Various techniques relating to profiling user behavior are described in U.S. patent application Ser. No. 13 555 724 entitled BEHAVIOR BASED IDENTITY SYSTEM and filed on Jul. 23 2012 which is incorporated herein by reference in its entirety.

The data associated with the application marketplace includes for example download popularity information categories offerings and or other data. The download popularity information indicates the popularity either in terms of absolute number of downloads or in terms of relative popularity of the applications offered by the application marketplace . The categories correspond to groupings of applications that may indicate similar applications and may be employed by users to more easily navigate the offerings of the application marketplace . Non limiting examples of categories may include social networking applications mapping applications movie information applications shopping applications music recognition applications and so on. The offerings may define differing versions and or pricing models that may be offered in the application marketplace for various users. In some embodiments a particular offering of an application may be offered to a first user but not a second user based at least in part on lifestyle fingerprints and or other data. In one embodiment a single application may have multiple monetization versions e.g. freemium advertising supported paid subscription based etc. each corresponding to an offering . The monetization versions may be enabled or disabled depending for example on the offering and or the specific user.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display comprising for example one or more devices such as liquid crystal display LCD displays gas plasma based flat panel displays organic light emitting diode OLED displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as an application instance a metric generation service and or other applications. The application instance corresponds to an instance of an application that has been downloaded to the client from the application marketplace system . The application instance may correspond to actual use by an end user or test use on a test client . The metric generation service is configured to monitor the application instance and report data that the user of the client has elected to share with the metric collection service . Such data may include resource consumption metrics behavioral usage metrics and or other data. The client may be configured to execute applications beyond the application instance and the metric generation service such as for example browsers mobile applications email applications social networking applications and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin an application is received by the computing environment . The application fingerprint generation service then begins processing the application to generate an application fingerprint . Such initial processing may comprise a static analysis performed by the static analysis service .

To this end the static analysis service may compare the object code and or the source code against identified code fragments . In one embodiment this comparison may involve pattern matching against portions of the object code and or source code . In some cases the object code may be decompiled into source code upon which the pattern matching is performed. Additionally the static analysis service may determine which identified device resources are accessed required and or requested by the application through examination of the object code source code and or metadata .

The application fingerprint generation service may also perform a dynamic analysis of the application using the dynamic analysis service . The dynamic analysis may include executing an application instance for the application in a hosted environment and determining which code paths are taken by the object code . This may indicate which of the identified code fragments and or identified device resources are actually used by the application instance . Manual testing and or automated testing of the application instance may be performed in the hosted environment .

Meanwhile resource consumption metrics may be generated by the hosted environment and sent to the metric collection service . Resource consumption metrics may also be generated by a metric generation service executed in a client . The resource consumption metrics then may be reported back from the client to the metric collection service by way of the network . The dynamic analysis service may then process the collected resource consumption metrics to generate a resource consumption profile for the application . The resource consumption profile may for example indicate that an application is processor intensive at a certain point in execution that an application appears to have a memory leak that an application uses up battery resources quickly that an application uses the display relatively frequently and or other patterns of resource consumption.

As testing users and potentially other users download the application the application may be installed on various clients thereby allowing the behavioral analysis service to process behavioral usage metrics that reflect real world use of the application by users. The behavioral usage metrics may be generated by the metric generation service and sent to the metric collection service by way of the network . The behavioral analysis service may perform a behavioral analysis on the behavioral usage metrics in order to generate a behavioral usage profile . The behavioral usage profile may for example indicate locations of users when they use the application duration of use for the application times of day that the application is used close out points for the application as determined by a synchronization service and so on. The behavioral usage profile may be indexed by user demographic data which may include for example user language and country. Accordingly different usage patterns may be ascertained in different countries or where different languages are used.

The application fingerprint generation service then uses the results of the static analysis dynamic analysis and or behavioral analysis to generate the application fingerprint . The application fingerprint may include identifiers for each of a set of identified code fragments used by the application identifiers for each of a set of identified device resources used by the application identifiers that are correlated to various patterns of resource consumption as indicated by the resource consumption profile identifiers that are correlated to various patterns of user behavior as indicated by the behavior usage profile and or other data. If the application has previously been added to the application marketplace download popularity information generated by the application marketplace system may be available. A measure of download popularity may also be included in the application fingerprint .

In some cases an application fingerprint may inherit characteristics from other application fingerprints that are generated for previous versions of the same application or for similar applications . For example a previous version of the application may have an application fingerprint that indicates that the mean duration of execution for the application is five minutes. When a new version of the application is released insufficient behavioral usage metrics may be available to determine the mean duration of execution. Thus the application fingerprint for the new version of the application may inherit the previous mean duration of execution. As additional behavioral usage metrics become available the application fingerprint may be regenerated.

As new versions of an application are released the corresponding application fingerprint may be updated as well. In one embodiment the application fingerprint generation service is configured to detect when a new version of the application is uploaded to the application marketplace system . In response to the new version being uploaded the application fingerprint generation service may be configured to regenerate the corresponding application fingerprint .

The application fingerprint that has been generated may be used in many different ways. As an example the application fingerprint may be used in searching for applications that have certain characteristics. To illustrate suppose that a particular software library has been found to contain a significant defect. The identifier for the library could be obtained from the identified code fragments and a fast search may be performed in the application fingerprints to determine which application fingerprints show a use of the particular software library.

Further the application fingerprint may be used to determine similarities among applications based upon matching of application fingerprints . For example clustering algorithms may be employed to determine groupings of applications which may then result in categorization and assignment of categories to applications . Also a representative application may be identified and applications that are similar may be determined using the respective application fingerprints . Likewise this search may be employed as a basis of assigning a category to an application .

To illustrate a representative social networking application may be selected and the application fingerprints may be searched to determine similar applications . For example the similar applications may have application fingerprints that show long term execution in the clients access requested for contact lists access requested for sound and or vibration devices and or other similar characteristics. The applications that are determined may be assigned a category of social networking in the application marketplace .

In some embodiments the application may be added or not added to the application marketplace based at least in part on the application fingerprint . If the application fingerprint shows use of a software library associated with malware the application may be flagged restricted or disallowed in the application marketplace . If the application fingerprint shows high user interest based upon frequent user interactions documented in the behavioral usage profiles the application may be denoted as featured or otherwise given special emphasis in the application marketplace .

The lifestyle fingerprint generation service may be configured to generate lifestyle fingerprints each reflecting a profile of the behavior or lifestyle of a particular user. The lifestyle fingerprints may be generated for example based at least in part on data gathered by the application marketplace system e.g. purchasing data regarding particular users behavioral usage metrics associated with particular users and other data. In some cases the lifestyle fingerprints may be generated based at least in part on the application fingerprints generated for specific applications that used by the users.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the application fingerprint generation service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the application fingerprint generation service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the application fingerprint generation service receives an application . For example the application may be uploaded or downloaded from a developer to the computing environment . In box the static analysis service of the application fingerprint generation service performs a static analysis on the application using the object code source code and or metadata . Through the static analysis the static analysis service determines identified code fragments and or identified hardware resources that are used by the application .

In box the application fingerprint generation service executes an application instance of the application in a hosted environment . In box the application fingerprint generation service distributes the application to clients . The application may be distributed via the application marketplace system or by another approach. The application may then be executed as an application instance on each of the clients . A metric generation service which may be installed on the clients may be employed to generate various metrics.

In box the application fingerprint generation service through the metric collection service collects resource consumption metrics from the hosted environment and or the clients . In box the application fingerprint generation service uses the dynamic analysis service to perform a dynamic analysis on the application which may involve generating a resource consumption profile from the resource consumption metrics . In box the application fingerprint generation service collects behavioral usage metrics from clients . In box the behavioral analysis service of the application fingerprint generation service performs a behavioral analysis on the application and builds a behavioral usage profile .

In box the application fingerprint generation service generates an application fingerprint using the results of the static analysis dynamic analysis and or the behavioral analysis. The application fingerprint may also include download popularity information and or other data and the application fingerprint may inherit data from other application fingerprints . In box the application fingerprint generation service adds the application to the application marketplace based at least in part on information included in the application fingerprint . Thereafter the portion of the application fingerprint generation service ends.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the application marketplace system according to a first embodiment. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the application marketplace system as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the application marketplace system receives a plurality of application fingerprints where each of the application fingerprints is associated with a corresponding one of a plurality of applications . In box the application marketplace system receives a selection of a particular one of the applications . In box the application marketplace system determines a subset of the applications that are similar to the particular application based at least in part on the application fingerprints .

In box the application marketplace system receives an identification of a particular user. In box the application marketplace system determines users who are similar to the particular user based at least in part on lifestyle fingerprints . In box the application marketplace system implements an action to market the particular application to the particular user based at least in part on lifestyle fingerprints corresponding to usage data for the subset of the applications that are similar to the particular application . The usage data may pertain to usage of the subset of the applications by the similar users.

The action may take the form of a developer recommendation. The recommendation may for example include a recommended time trial period for the user a recommended pricing model for the user a recommended additional feature for the application a recommended second application to be marketed in conjunction with the application and or other recommendations. The recommendation may be sent to a developer or other party associated with the application .

In one embodiment the recommendation may be implemented automatically by the application marketplace system modifying a particular offering of the application to adjust a pricing model and or other characteristics of the offering . In some cases implementing the recommendation may involve configuring an application instance already installed by a client . As a non limiting example a current time trial period may be extended for the user according to the recommendation.

Other actions may include informing developers of preferences of a target group of users changing application versions recommending upgrades displaying certain information in an application marketplace more or less readily providing in application items or application upgrades adjusting pricing models and so on. Thereafter the portion of the application marketplace system ends.

Moving on to shown is a flowchart that provides one example of the operation of a portion of the application marketplace system according to a second embodiment. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the application marketplace system as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the application marketplace system receives application fingerprints for a plurality of applications . In box the application marketplace system receives a target user characteristic. For example the target user characteristic may be a user willingness to pay a threshold price for an application a user willingness to initiate a purchase transaction during use of an application and or other characteristics. In one embodiment the application marketplace system receives an identification of a particular user and then determines the target user characteristic based at least in part on a characteristic associated with the particular user. In box the application marketplace system identifies a subset of the applications having a user base that meets the target characteristic based at least in part on the application fingerprints and user profile data indicating usage of the applications by users and characteristics of those users.

To this end an analysis of the application fingerprints may be performed to determine whether a corresponding application is predicted to have the desired user base. The subset of the applications may be determined based at least in part on a similarity of the corresponding application fingerprints to a particular application fingerprint associated with a particular application . For example the particular application may use a certain identified code fragment of type A. The application fingerprints may be analyzed to determine other applications that also use the identified code fragment of type A and those applications may be considered similar. If the particular application also uses an identified code fragment of type B and the other similar applications also use the identified code fragment of type B such similar applications may be classified as even more similar to the particular application .

The lifestyle fingerprints for the users of the similar applications may then be retrieved and correlated to determine the characteristics and preferences of the users. The application marketplace system may provide a pricing model recommendation for the particular application based at least in part on a pricing model associated with the subset of the applications and or the preferences of the users. Thereafter the portion of the application marketplace system ends.

Continuing now to shown is a flowchart that provides one example of the operation of a portion of the application marketplace system according to a third embodiment. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the application marketplace system as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the application marketplace system receives a plurality of application fingerprints where each of the application fingerprints is associated with a corresponding one of a plurality of applications . In box the application marketplace system receives a selection of a particular one of the applications . In box the application marketplace system determines a subset of the applications that are similar to the particular application by comparing a particular one of the application fingerprints for the particular application with others of the application fingerprints .

In box the application marketplace system identifies a subset of users based at least in part on data indicating prior usage of at least one of the subset of applications by the subset of users. The subset of users may also be identified based at least in part on data indicating prior purchases of at least one of the subset of applications by the subset of users time of day of use or purchase user demographic data geographic usage data device type a characteristic associated with a developer of the particular application and or other factors.

From the subset of the users the application marketplace system may identify an underserved geography for the particular application based at least in part on geographic data associated with the subset of users. For example if many of the users who purchase the similar applications are in a particular country but not many of the users who purchase the particular application are in that country the country may be considered an underserved geography for the particular application . In one embodiment the subset of the users may be leveraged for crowd sourced testing of the particular application . Invitations may be sent to each of the subset of users inviting them to test the particular application . Thereafter the portion of the application marketplace system ends.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the application fingerprint generation service the lifestyle fingerprint generation service the metric collection service the hosted environment the application marketplace system and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the application fingerprint generation service the lifestyle fingerprint generation service the metric collection service the hosted environment the application marketplace system and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the application fingerprint generation service and the application marketplace system . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the application fingerprint generation service the lifestyle fingerprint generation service the metric collection service the hosted environment and the application marketplace system that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

