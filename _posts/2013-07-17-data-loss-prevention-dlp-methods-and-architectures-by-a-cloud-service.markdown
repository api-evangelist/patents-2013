---

title: Data loss prevention (DLP) methods and architectures by a cloud service
abstract: Embodiments of the present disclosure include data loss prevention (DLP) methods and architectures by a cloud-based service. The disclosed techniques of the cloud-based platform (e.g., collaboration platform in an enterprise environment) can detect (and may optionally prevent) violations to, e.g., corporate policies, which can be configurable by a corporate administrator, for example regarding the use, storage, or transmission of sensitive information. The types of sensitive information can include, for example, financial information—credit card and bank account numbers, Personally Identifiable Information (PII)—Social Security Number (SSN), health/healthcare information, Intellectual Property—earnings forecasts, sales pipeline, trade secrets, source code, etc.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09237170&OS=09237170&RS=09237170
owner: Box, Inc.
number: 09237170
owner_city: Los Altos
owner_country: US
publication_date: 20130717
---
This application is entitled to the benefit of and or the right of priority to U.S. Provisional Application 61 673 671 entitled DATA LOSS PREVENTION METHODS AND ARCHITECTURES IN A CLOUD SERVICE filed on Jul. 19 2012 and is hereby incorporated by reference in its entirety. This application is therefore entitled to an effective filing date of Jul. 19 2012. This application is related to U.S. application Ser. No. 13 944 241 entitled DATA LOSS PREVENTION DLP METHODS BY A CLOUD SERVICE INCLUDING THIRD PARTY INTEGRATION ARCHITECTURES filed on Jul. 17 2013 and is hereby incorporated by reference in its entirety.

Content security and sensitivity are increasingly important as the need to detect and prevent violations to policies regarding the use storage or transmission of sensitive private information has become a major area of concern. One reason is that enterprises organizations and individuals now heavily rely on cyber space utilized as a working environment to manage and share working files and documents. Existing solutions including installations on a laptop desktop and or behind a firewall are no longer sufficient when it comes to mobile based or cloud based applications.

Those skilled in the art will appreciate that the logic and process steps illustrated in the various flow diagrams discussed below may be altered in a variety of ways. For example the order of the logic may be rearranged substeps may be performed in parallel illustrated logic may be omitted other logic may be included etc. One will recognize that certain steps may be consolidated into a single step and that actions represented by a single step may be alternatively represented as a collection of substeps. The figures are designed to make the disclosed concepts more comprehensible to a human reader. Those skilled in the art will appreciate that actual data structures used to store this information may differ from the figures and or tables shown in that they for example may be organized in a different manner may contain more or less information than shown may be compressed and or encrypted etc.

The following description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However in certain instances well known or conventional details are not described in order to avoid obscuring the description. References to one or an embodiment in the present disclosure can be but not necessarily are references to the same embodiment and such references mean at least one of the embodiments.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which may be exhibited by some embodiments and not by others. Similarly various requirements are described which may be requirements for some embodiments but not other embodiments.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain terms may be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that same thing can be said in more than one way.

Consequently alternative language and synonyms may be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Without intent to limit the scope of the disclosure examples of instruments apparatus methods and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles may be used in the examples for convenience of a reader which in no way should limit the scope of the disclosure. Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

Various embodiments contemplate data loss prevention DLP systems and techniques which detect and may optionally prevent violations to e.g. corporate policies regarding the use storage and transmission of sensitive information. The types of sensitive information can include for example financial information credit card and bank account numbers Personally Identifiable Information PII Social Security Number SSN health healthcare information Intellectual Property earnings forecasts sales pipeline trade secrets source code etc.

In certain embodiments in order to support data loss prevention in the cloud system for users e.g. customers across multiple platforms and multiple and or all applications a data loss system may identify the key user customer requirements e.g. application client or customer based .

In some embodiments the data loss prevention system may detect and optionally prevent violations to corporate policies regarding e.g. the use storage and transmission of sensitive information. In some embodiments the types of sensitive information may include for example financial information such as credit card and bank account numbers Personally Identifiable Information PII Social Security Numbers health healthcare information Intellectual Property earnings forecasts sales pipelines trade secrets source code etc. Some prior art solutions include installations e.g. of software on a laptop desktop and or behind a firewall. These solutions however generally fail to address cloud or mobile devices in a suitable manner.

The disclosed data loss prevention DLP methods and systems of certain embodiments may include options for native integration within a cloud service and or additional integrations with third party providers for full featured functionality.

In a third party integration option for data loss prevention contemplated in some embodiments the system can provide application programming interfaces APIs for error handling customized messages that can appear in a native cloud based platform user interface. The system may be optimized to prevent latency and to explore temporary quarantine state in some embodiments. A specialized user interface and user experience may be designed for use when a document is not yet approved by the data loss prevention system. In some embodiments a temporary quarantine state can be leveraged for documents found to be virus infected or potentially virus infected.

In some native solution in the cloud service described in certain embodiments the system may scan for certain types of data that have a consistent formats e.g. Social Security Numbers Credit Card Numbers bank account numbers and ABA bank routing numbers etc. This can be performed in a manner that is transparent to administrators or end users in some embodiments. Policy management can be performed natively by the cloud service or deferred to a third party or performed by a combination of the cloud service and third party depending upon the embodiment.

Detection mechanisms for implementing the prevention criteria may include by way of example the following operations. In Exact Data Matching the system compares the file contents with structured data including references to a record in a database. In Indexed Document Matching the system may identify unstructured data. In some embodiments the system may also white list content e.g. the system may hash sections of a fingerprinted document. In Described Content Matching the system may identify credit card information magnetic stripe data for Payment Card Industry a Canadian social security number UK National Insurance numbers etc.

At step the data loss prevention method may determine that one or more of the rules has been triggered by a file upload attempt. Once triggered the data loss prevention system may allow the user e.g. a customer to perform various actions via various responsive rules or the system may perform the responsive rules automatically at step . The rules may be implemented directly by the user or automatically by the system or by a combination of both the system and user. The rules may include notification to a list of email addresses that the file was attempted to be uploaded a Lock Down preventing anyone except an administrator from modifying deleting or sharing the upload file the suppression of notifications to certain users or users in a group regarding the upload etc.

At step in some embodiments the data loss prevention system may implement enforce or update Service Level Agreements for rules. For example in some embodiments the rules may be active once set for all modifications updates deletions of files. In some embodiments the rules may be active within a certain service level agreements for all files within an enterprise or within a workspace shared among certain users and their collaborators.

In some embodiments the data loss prevention architecture also includes a policy builder. In some embodiments the policy builder may utilize Boolean logic and can combine different detection technologies. The policy builder may manage white list exceptions utilize pre built policy templates e.g. including an HIPAA policy template . The policy builder may also apply the policies to specific internal external groups for example via integration with corporate directory and or including consent to be monitored EU regulations .

In some embodiments the architecture may further include a policy violation response handling engine. This engine may be triggered by different conditions. For example the engine may be triggered by the severity associated with an incident the number of matching terms between a rule and uploaded file the upload endpoint s current location on off corporate network etc. In some embodiments various types of responses to detected policy violations may include for example email notification setting incident status blocking file and pop up warning to user copying or moving a file etc. The responses may be automatically performed or manually instructed e.g. by the user customer or administrator. The disclosed system of certain embodiments may include integration capability with an existing data loss prevention solution or notification system.

Embodiments of the present disclosure include systems and methods for data loss prevention in a cloud based cloud based platform service e.g. cloud based collaboration platform .

The client devices can be any system and or device and or any combination of devices systems that is able to establish a connection including wired wireless cellular connections with another device a server and or other systems such as host server and or notification server and or sync server . Client devices can include a synchronization client program to synchronize a local copy of a folder with a copy of a folder stored on the web based collaboration environment server.

Client devices may typically include a display and or other output functionalities to present information and data exchanged between or among the devices and or the host server and or notification server and or the synchronization server .

For example the client devices can include mobile hand held or portable devices or non portable devices and can be any of but not limited to a server desktop a desktop computer a computer cluster or portable devices including a notebook a laptop computer a handheld computer a palmtop computer a mobile phone a cell phone a smart phone a PDA a Blackberry device a Treo a handheld tablet e.g. an iPad a Galaxy Xoom Tablet etc. a tablet PC a thin client a hand held console a hand held gaming device or console an iPhone and or any other portable mobile hand held devices etc. In one embodiment the client devices host server notification server and synchronization server are coupled via a network . In some embodiments the devices and host server may be directly connected to one another.

The input mechanism on client devices can include touch screen keypad including single touch multi touch gesture sensing in 2D or 3D etc. a physical keypad a mouse a pointer a track pad motion detector e.g. including 1 axis 2 axis 3 axis accelerometer etc. a light sensor capacitance sensor resistance sensor temperature sensor proximity sensor a piezoelectric device device orientation detector e.g. electronic compass tilt sensor rotation sensor gyroscope accelerometer or a combination of the above.

Signals received or detected indicating user activity at client devices through one or more of the above input mechanism or others can be used in the disclosed technology by various users or collaborators e.g. collaborators for accessing through network a web based collaboration environment or online collaboration platform e.g. hosted by the host server .

The collaboration platform or environment hosts workspaces with work items that one or more users can access e.g. view edit update revise comment add to discussions download preview tag or otherwise manipulate etc. . A work item can generally include any type of digital or electronic content that can be viewed or accessed via an electronic device e.g. device . The digital content can include .PDF files .doc slides e.g. PowerPoint slides images audio files multimedia content web pages blogs etc. A workspace can generally refer to any grouping of a set of digital content in the collaboration platform. The grouping can be created identified or specified by a user or through other means. This user may be a creator user or administrative user for example. The workspace can also include an online discussion area for collaborators to enter comments linked to a particular workspace or folder.

In general a workspace can be associated with a set of users or collaborators e.g. collaborators which have access to the content included therein. The levels of access e.g. based on permissions or rules of each user or collaborator to access the content in a given workspace may be the same or may vary among the users. Each user may have their own set of access rights to every piece of content in the workspace or each user may have different access rights to different pieces of content. Access rights may be specified by a user associated with a work space and or a user who created uploaded a particular piece of content to the workspace or any other designated user or collaborator.

In general the collaboration platform allows multiple users or collaborators to access or collaborate on efforts on work items such that each user can see remotely edits revisions comments or annotations being made to specific work items through their own user devices. For example a user can upload a document to a work space for other users to access e.g. for viewing editing commenting discussing signing off or otherwise manipulating . The user can login to the online platform and upload the document or any other type of work item to an existing work space or to a new work space. The document can be shared with existing users or collaborators in a work space.

A diagrammatic illustration of the online collaboration environment and the relationships between workspaces and users collaborators are illustrated with further reference to the example of . A diagrammatic illustration of a workspace having multiple work items with which collaborators can access through multiple devices is illustrated with further reference to the example of .

In one embodiment actions performed on work items or other activities that occur in a work space can be detected in real time or in near real time. In addition users collaborators or select users can be notified in real time or near real time of these actions or activities. Various mechanisms can be used to notify users or collaborators including through the web interface to access the collaboration platform via email and or SMS for example.

In one embodiment work items in a workspace or folder within the collaboration environment can be synchronized to workspaces or folders on a collaborator s computer.

Functions and techniques disclosed for real time or near real time notification of activities that occur in the online platform on a work item or in a work space can be performed by a push enabled server e.g. the notification server coupled to the host server of the collaboration platform. Additionally functions and techniques disclosed for synchronizing workspaces or folders within the collaboration environment with workspaces or folders on a collaborator s desktop can be performed by a synchronization server . Functions and techniques performed by the host server the notification server the synchronization server and the related components therein are described respectively in detail herein.

In one embodiment client devices communicate with the host server over network . In general network over which the client devices and the host server communicate may be a cellular network a telephonic network an open network such as the Internet or a private network such as an intranet and or the extranet or any combination thereof. For example the Internet can provide file transfer remote log in email news RSS cloud based services instant messaging visual voicemail push mail VoIP and other services through any known or convenient protocol such as but is not limited to the TCP IP protocol Open System Interconnections OSI FTP UPnP iSCSI NSF ISDN PDH RS 232 SDH SONET etc.

The network can be any collection of distinct networks operating wholly or partially in conjunction to provide connectivity to the client devices and the host server and may appear as one or more networks to the serviced systems and devices. In one embodiment communications to and from the client devices can be achieved by an open network such as the Internet or a private network such as an intranet and or the extranet. In one embodiment communications can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS .

In addition communications can be achieved via one or more networks such as but are not limited to one or more of WiMax a Local Area Network LAN Wireless Local Area Network WLAN a Personal area network PAN a Campus area network CAN a Metropolitan area network MAN a Wide area network WAN a Wireless wide area network WWAN enabled with technologies such as by way of example Global System for Mobile Communications GSM Personal Communications Service PCS Digital Advanced Mobile Phone Service D Amps Bluetooth Wi Fi Fixed Wireless Data 2G 2.5G 3G 4G IMT Advanced pre 4G 3G LTE 3GPP LTE LTE Advanced mobile WiMax WiMax 2 WirelessMAN Advanced networks enhanced data rates for GSM evolution EDGE General packet radio service GPRS enhanced GPRS iBurst UMTS HSPDA HSUPA HSPA UMTS TDD 1 RTT EV DO messaging protocols such as TCP IP SMS MMS extensible messaging and presence protocol XMPP real time messaging protocol RTMP instant messaging and presence protocol IMPP instant messaging USSD IRC or any other wireless data networks or messaging protocols.

The web based platform for collaborating on projects or jointly working on documents can be used by individual users and shared among collaborators. In addition the collaboration platform can be deployed in an organized setting including but not limited to a company e.g. an enterprise setting a department in a company an academic institution a department in an academic institution a class or course setting or any other types of organizations or organized setting.

When deployed in an organizational setting multiple workspaces e.g. workspace A B C can be created to support different projects or a variety of work flows. Each workspace can have its own associated work items. For example work space A and a corresponding discussion workspace may be associated with work items work space B and a corresponding discussion workspace can be associated with work items and work space N and a corresponding discussion workspace can be associated with work items . The work items and may be unique to each work space but need not be. For example a particular word document can be associated with only one work space e.g. work space A or it may be associated with multiple work spaces e.g. Work space A and work space B etc. .

In general each work space has a set of users or collaborators associated with it. For example work space A is associated with multiple users or collaborators . In some instances work spaces deployed in an enterprise may be department specific. For example work space B may be associated with department and some users shown as example user A and workspace N can be associated with departments and and users shown as example user B .

Each user associated with a work space can generally access the work items associated with the work space. The level of access will depend on permissions associated with the specific work space and or with a specific work item. Permissions can be set for the work space or set individually on a per work item basis. For example the creator of a work space e.g. one of user A who creates work space B can set one permission setting applicable to all work items for other associated users and or users associated with the affiliate department for example. Creator user A may also set different permission settings for each work item which may be the same for different users or varying for different users.

In one embodiment a first type of permission level e.g. an editor can allow a user to have full read and write access to a workspace such that the user can view and download contents of the workspace as well as upload new content to the workspace. A second type of permission level e.g. a viewer can allow a user to have full read access to a workspace such that the user can view and download contents of the workspace but not upload or edit contents of the workspace. A third type of permission level e.g. an uploader can allow a user to have limited write access to contents of a workspace such that the user can see items in the workspace but not download or view the items while being permitted to upload new content to the workspace.

In one embodiment the ability of a user associated with a workspace to enable synchronization of the workspace with local folders on the user s computer can be tied to the permission level of the user. Alternatively separate synchronization permission can be assigned by a creator or administrator of a workspace to individuals associated with the workspace. In some instances synchronization permission can be associated with the workspace or the items in the workspace or based upon any other criteria.

In each work space A B . . . N when an action is performed on a work item by a given user or any other activity is detected in the work space other users in the same work space may be notified in real time or in near real time. Activities which trigger real time notifications can include by way of example but not limitation adding deleting or modifying collaborators in the work space adding deleting a work item in the work space creating a discussion topic in the work space.

Specifically items or content downloaded or edited in accordance with the techniques described in the present disclosure can be cause notifications to be generated. Such notifications can be sent to relevant users to notify them of actions surrounding a download an edit a change a modification a new file a conflicting version an upload of an edited or modified file.

The activity can be performed in relation to a discussion topic in the work space for example adding a response to a discussion topic deleting a response or editing a response in the work space. In addition the activity is performed on a work item in the work space by the user including by way of example but not limitation download or upload of a work item deletion of editing of the work item selecting adding deleting and modifying a tag in the work item preview of the work item or comment of the work item setting or changing permissions of the work item sharing a work item emailing a link to the work item and or embedding a link to the work item on another website.

In one embodiment in a user interface to the web based collaboration platform where notifications are presented users can via the same interface create action items e.g. tasks and delegate the action items to other users including collaborators pertaining to a work item for example. The collaborators may be in the same workspace A or the user may include a newly invited collaborator. Similarly in the same user interface where discussion topics can be created in a work space e.g. work space A B or N etc. actionable events on work items can be created and or delegated assigned to other users such as collaborators of a given work space or other users. Through the same user interface task status and updates from multiple users or collaborators can be indicated and reflected. In some instances the users can perform the tasks e.g. review or approve or reject etc. via the same user interface.

Each of users and may individually use multiple different devices to access and or manipulate work items in the work space with which they are associated with. For example users may be collaborators on a project to which work items are relevant. Since the work items are hosted by the collaboration environment e.g. a cloud based environment each user may access the work items anytime and from any physical location using any device e.g. including devices they own or any shared public loaner device .

Work items to be edited or viewed may be accessed from the workspace in accordance with the platform and or application independent mechanisms. Users may also be notified of access edit modification and or upload related actions performed on work items by other users or any other types of activities detected in the work space . For example if user modifies a document one or both of the other collaborators and can be notified of the modification in real time or near real time or not in real time. The notifications can be sent through any of all of the devices associated with a given user in various formats including one or more of email SMS or via a pop up window in a user interface in which the user uses to access the collaboration platform. In the event of multiple notifications each notification may be depicted preferentially e.g. ordering in the user interface based on user preferences and or relevance to the user e.g. implicit or explicit .

For example a notification of a download access read write edit or upload related activities may be presented in a feed stream among other notifications through a user interface on the user device according to relevancy to the user determined based on current or recent activity of the user in the web based collaboration environment.

In one embodiment a notification feed stream includes updates when an invited user accepts an invitation and or successfully creates a new account through receipt of an invitation from an existing user. The invited user upon creation of the new account receives the account having enhanced features. The new user can automatically be connected to the existing user who sent the invitation. The system can also automatically prompt both users to query they wish to be collaborators in a common work space.

Work items hosted by a collaboration environment e.g. a cloud based collaboration environment can be accessed by users e.g. users and via multiple different devices e.g. devices for viewing editing processing or performing other manipulations on work items. The devices can include applications for accessing a server hosting a cloud based platform or service or other backend web services hereinafter cloud based collaboration platform application and applications for viewing editing processing or performing other manipulations on work items. The communication between such applications are generally facilitated by a communication mechanism of the OS. For example in Android OS the communication mechanism is based on Intents . As previously described the underlying communication mechanism are generally insecure and any data passed between applications are visible to all other application on a device.

The host server of the web based or online collaboration environment can generally be a cloud based service. The host server can include for example a network interface an upload request processor having a drag drop manager an upload engine having a multi file upload manager and or a folder upload manager and a user interface module having a navigation manager and an upload content access module . The host server can also include for example an inter application transaction processor having an inter application transaction detector and an encryption key generator . One embodiment of the host server can also include an SDK provisioning module and a white list manager . Another embodiment of the host server further includes a notification engine having for example a feed stream updator and or a recipient selector . Additional or less components modules engines can be included in the host server and each illustrated component.

The network interface can be a networking module that enables the host server to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface can include one or more of a network adaptor card a wireless network interface card e.g. SMS interface WiFi interface interfaces for various generations of mobile communication standards including but not limited to 1G 2G 3G 3.5G 4G LTE etc. Bluetooth a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

One embodiment of the host server includes the upload request processor which can receive detect process identify parse translate and or determine an activity request. An upload request can be submitted by a user through a user interface of the collaboration platform to upload one or multiple items.

The user can identify the files content or work items to be uploaded to the host server one by one and queue up multiple items e.g. including but not limited to files folders documents images audio etc. to be uploaded in a single request. The user can also select all of the items to be uploaded in a single action e.g. via highlighting or otherwise selecting of icons corresponding to each of the items . In one embodiment the upload request is generated via a drag and drop action of the multiple work items to be uploaded to the host server into a portion of a user interface. Drag and drop activated uploaded requests can be detected handled received processed and or otherwise managed by the drag drop manager .

In one embodiment the upload request is generated via a drag and drop action of a single folder which includes the multiple work items to be uploaded to the host server . For example the upload request can be generated when a folder having the multiple items on a client device that is to be uploaded is identified through the user interface. In some instances the folder can include additional folders in a folder hierarchy of multiple items.

In some instances the user can generate an upload request by activating the upload feature in a tab on a user interface and initiate uploading by selecting e.g. clicking on or otherwise activating a button tab. Once selected another user interface or a pop up window may appear allowing the user to navigate through files or folders to select the items to be uploaded.

Once upload requests have been detected and processed the upload engine can upload the requested item or multiple requested items. The upload engine can in one embodiment upload a single item or multiple items e.g. sequentially or simultaneously to the host server . A multiple item upload may be initiated via a single step or multi step user request. A multi file upload request can be handled processed and executed for example through the multi file upload manager .

In one embodiment the multi file upload manager receives an identification of each of the multiple files to be uploaded e.g. from the upload request processor and sequentially prepares each individual file for uploading and uploads each file independently. For example the upload manager can compress one of the multiple files individually upload it to the host server and decompress the file when uploaded and proceed to perform the same steps with the next file. Preprocessing a file can include for example analyzing the file size and type to determine if it is acceptable valid and or to identify how best to compress the file. Post processing can include for example performing one or more of decompressing the file validating the file size and name checking permissions potentially scanning for malicious software and or moving to permanent storage. The step of moving to storage can further include one or more of adding the file metadata to the database creating thumbnails creating previews indexing for search encrypting the file and or storing in multiple locations for redundancy. Note that the above processes can occur in any order or synchronously in any combination with one another. The process continues until all items in the request have been uploaded to the host server . The upload may automatically progress from one file when completed to the next one in sequence when the user initiates a multi file upload request.

In one embodiment the upload engine uploads multiple items in a folder hierarchy based on a single request to upload a folder which has a hierarchy of folders inside for example via the folder upload manager . In one embodiment the folder upload manager compresses the multiple items in the folder hierarchy in a single process into a single item and uploads the single item in a single upload process rather than one by one to the host server . After the merged file of multiple items has been uploaded the folder upload manager can decompress and subsequently parse the single upload of the single item into the original individual files that were stored as multiple items in the folders in the hierarchy. By merging multiple files into one and performing a single compression and decompression step the uploading process can be expedited since the overhead in time to compress and decompress multiple files is mostly eliminated. Some additional benefits of bulk uploading allow the following overhead to be partially or wholly eliminated repeatedly creating TCP connections for each upload repeatedly checking the same permissions and storage quotas when processing the files on the server.

One embodiment of the host server includes a notification engine . The notification engine can for example update a feed stream to include an updated feed indicate that an item or multiple items have been uploaded for example via the feed stream updator . The users that are notified can be selected for example by the recipient selector and can include collaborators or the user or other users meeting a criterion. In some instances the feed stream is updated in real time or near real time relative to when the upload of the item completed. For real time updating the notification engine can utilize another server or another engine in the same server which provides push functionality.

The notification engine can generally notify users which can be collaborators of the user who performed the activity in the work space via one or more of many mechanisms including but not limited to email SMS voice message text based message RSS feed etc.

In one embodiment the notification is depicted through a web browser used by the other user to access the web based collaboration environment for access in real time or near real time to when the activity was performed by the user. When notifying a user in real time through a web browser the notification engine can utilize a push enabled service to ensure real time notification. In one embodiment the notification is sent by a component or another server which implements push technology e.g. the notification server shown in the example of . The push enabled service can be implemented via long poll or HTTP streaming for example by the notification server or another component device which may be internal to or external to the host server . In addition the host server could utilize other push servers including third party push servers to implement push technology including but not limited to mobile platform push systems and services e.g. via smart phones or tablets or other portable devices such as iPhone Android phones Blackberry iPad Galaxy or other tablets etc. .

One embodiment of the host server includes the user interface module which preserves or enhances user experience before during or after an upload request. For example the user interface module can allow the user to engage in other activities in the collaboration platform while an upload is in progress so as to prevent the user from having to wait for the completion to work in the platform.

In one embodiment during the upload of a single file before completion the user can generally navigate away from the user interface through which the upload request was submitted for example via the navigation manager in the user interface module . In other words while a file or item upload is in progress the user can navigate to other pages to perform other actions or initiate additional actions on the current page without interrupting stopping or pausing the in progress upload.

Similarly when a multi file or multi item upload request is in progress the user can also navigate away from the user interface which the upload request was submitted prior to completion of the uploading of each of the multiple items to the host server . Navigation between pages during an upload of multiple files can also be managed by the navigation manager . For example the upload of the multiple items can continue to proceed and is not interrupted if the user accesses a link on the user interface causing another user interface to launch in a browser. To enable bulk uploading a new browser window is opened so it operates independently of user navigation. In addition the web application for uploading and access of the collaboration environment is pageless meaning it can be updated asynchronously without a browser page refresh. This allows navigation and to start new uploads in other folders which can be added to the upload queue.

In addition during a multi file upload an item of the multiple items that has been uploaded to the host server available for access through the user interface even when some of the multiple items have not yet been uploaded to the host server via the upload content access module for example. Thus during an active upload individual files which have completed uploading can be accessed or interacted with by the user in the collaborative environment without having to wait for the full upload to complete.

In some instances the item which has been uploaded to the host server is manipulatable by the user through the user interface without a need for browser refresh. This enhances the user experience by allowing the user to work on the file or otherwise interact with it once it has been uploaded without waiting for other files to finish uploading. For example the user can view edit preview or comment on the item that has been uploaded prior to completion of uploading all of the multiple items in an upload request. In one embodiment buffer space in memory for storage of the individual work items are created in response to the upload request such that when individual items have been uploaded they can be moved into the created buffer space and subsequently permanent storage. When the file is in permanent storage the user can then access and work on the individual item while others are still being uploaded. In one embodiment metadata for the file can be created before it is fully uploaded or processed allowing faster user interaction. However to actually interact with the file content full content search download or preview the file generally needs to be processed as usual and be stored in permanent storage.

One embodiment of the host server can include an software development kit SDK provisioning module and a whitelist application manager . The SDK provisioning module can provision SDKs API keys tokens and the like to applications that have been approved for integration with the sending application. The SDK can include certain methods iconography and the like that allow inter application communication and make the inter application communication capability apparent to users of both applications. For example the SDK can recognize encoded messages broadcast by the sending application e.g. the cloud based collaboration platform application and include response to method calls to facilitate various data access and transfer scenarios discussed above.

Applications that have integrated with the sending application by implementing the SDK can be designated as a whitelisted application by the whitelist application manager . The whitelisted applications can receive automatic notifications of updates to SDKs can make API calls to the host server receive and respond to custom Intents and the like.

In one embodiment of the host server the inter application transaction processor can include an inter application transaction detector and an encryption key generator . The inter application transaction detector can detect an inter application transaction request from the sending application and or the receiving application. The transaction request may or may not involve file transfer. For example if the transaction request is for the launch of the receiving application no file transfer is involved. The inter application transaction processor may not take any further steps where no file transfer between applications is involved. However if the transaction request is to open a file in the receiving application the inter application transaction detector may detect it as such and trigger the encryption key generator to generate an encryption key for encrypting decrypting the file in transit. In one implementation the inter application transaction detector can detect the transaction request based on the encryption key request from the sending application. In one implementation the inter application transaction detector can also determine whether a transaction request requires a new encryption key and if so can trigger the encryption key generator to generate and send a new encryption key. For example in one implementation each transaction request involving a file transfer may require a new encryption key. In another implementation a new encryption key may be required for the first transaction and the next few transactions may not require a new key. In other implementations a new encryption may be required for each new session with the requesting application after expiration of a predefined time period for each receiving application involved in a transaction and the like.

In one embodiment the encryption key generator can generate and send to the requesting application an encryption key for encryption one or more files. In one implementation the encryption key may have an associated time stamp which can be used to determine the expiration date time. The encryption key in one implementation can be an auth token a hash of an auth token with or without a time stamp and the like.

Various of the disclosed embodiments contemplate data loss prevention techniques applied in a cloud based cloud based platform service e.g. cloud based collaboration platform . Some embodiments support data loss prevention for cloud based storage customers by identifying key customer requirements. In some embodiments a customer e.g. a system administrator may be able to set rules that are triggered by the detection of e.g. a. known information types such as credit card numbers SSNs Tax Ids etc. b. Keywords identified by the customer confidential or product specific names.

Once triggered consequent actions may be performed via the rule in some embodiments. For example the system may email a list of email addresses with notification regarding the file e.g. network administrators of project managers . Actions may include a Lock Down e.g. preventing anyone except an administrator from modifying deleting or sharing the file. Actions may also include the preventing delaying or omitting of an action e.g. the suppression of notifications for users or uses in a group corresponding to the file etc.

In some embodiments the rules may be active once set for all modifications updates deletions of files. In some embodiments the rule may be active within a certain service level agreement SLA between the client s organization and the cloud based platform service e.g. cloud based collaboration platform organization for all files within an enterprise.

In the topology the host server e.g. cloud based or host service providercloud based platform service e.g. cloud based collaboration platform may communicate with a third party provider of metadata when performing various of the data loss prevention techniques disclosed herein. Provider may be one of several providers communicating with the host server e.g. cloud based or host service providercloud based platform service e.g. cloud based collaboration platform and may specialize in providing information for particular classes of data loss prevention. For example one provider may specialize in banking information and may provide the host server e.g. cloud based host or service providercloud based platform service e.g. cloud based collaboration platform with updates regarding sensitive data fields. If a banking organization changed its security verification to recognize a graphic image rather than an alphanumeric pattern the provider may determine that the information is relevant to data loss prevention and notify the host server e.g. cloud based host or service providercloud based platform service e.g. cloud based collaboration platform of the change. For another example the provider may be an entity that is specialized in sensitive information identification e.g. a specialized search engine and or a specialized database and the host server e.g. cloud based host or service provider cloud based platform service e.g. cloud based collaboration platform may communicate with the provider upon receipt of a file and can receive knowledge or verification information from the provider of whether an uploaded file contains sensitive information or otherwise triggers a policy rule. In case that the host server e.g. cloud based host or service providercloud based platform service e.g. cloud based collaboration platform determines e.g. by itself such as explained in below or is informed e.g. by the provider that an file contains sensitive information actions e.g. quarantine can be taken with respect to such file as explained in more detail below .

A protocol may be established between provider and host server e.g. cloud based host service provider . In some embodiments the provider is owned by the same organization as the owner of the host server e.g. cloud based host service provider cloud based platform service e.g. cloud based collaboration platform and merely serves the dedicated functions described herein. In some embodiments the provider is associated with client and may be e.g. managed by an administrator of the organization with which client is affiliated. In some embodiments the provider is an organization associated with the sensitive metadata fields e.g. the banking institution making the change in their verification parameters.

At step the cloud based platform service e.g. cloud based collaboration platform may receive a file for upload from an uploader such as a client or end user. In some embodiments at step the system may present the uploader with a preview of their uploaded file.

At step the cloud based platform service e.g. cloud based collaboration platform may determine a corresponding policy. Policies may be determined based on the folder owner s enterprise. For example where the file is associated with a folder in a collaborative workspace the policies associated with that workspace may be applied to the file.

At step the cloud based platform service e.g. cloud based collaboration platform may determine if a violation exists under the policy as described in greater detail herein.

At step the cloud based platform service e.g. cloud based collaboration platform may prepare a quarantined version of the file. In some embodiments this may mean moving a copy of the uploaded version of the file to a designated associated with the folder in which it originated.

At step the cloud based platform service e.g. cloud based collaboration platform may notify an administrator of the quarantined file. The notification may be explicitly stated as a policy action. In some embodiments the notification may be performed independently of the specified actions.

At step the cloud based platform service e.g. cloud based collaboration platform may notify the uploader of the violation.

At step the cloud based platform service e.g. cloud based collaboration platform may provide the uploader an opportunity to modify the file to remove the violation.

In some embodiments the system may prevent a user from moving transferring ownership of folders containing quarantined items to another enterprise.

In some embodiments when a file is uploaded to the cloud based platform service e.g. cloud based collaboration platform there is a time period between upload and finding a DLP policy violation in which the file can be previewed shared downloaded Some embodiments allow enterprises e.g. customer organizations and their administrators to decide what they want to do during the time window. In some embodiments the administrator may specify to completely block access to files until they have been cleared of any DLP violation. However if the file size is large and consequently requires more time to transfer or the rules system goes down this could be a significant amount of time during which uploaded files may be inaccessible.

Accordingly the administrator may instead put all files in a not scanned for DLP state upon upload which will prevent download sharing but not block preview access to other users. The administrator may also specify to do nothing during that time window.

In some embodiments when an administrator deletes a file version from quarantine the file version may remain in storage for some time but not be visible to the end user or the administrator. The system may provide the administrator with the policy that was violated at scan time and additional information regarding the system state.

At step file is uploaded into the cloud based platform service e.g. cloud based collaboration platform . The upload may sometimes occur as part of an automated synchronization process between files on a client system and the cloud based cloud based platform service e.g. cloud based collaboration platform .

At step cloud based platform service e.g. cloud based collaboration platform scans the file and checks against the upload policy of the folder owner s enterprise.

At step the cloud based cloud based platform service e.g. cloud based collaboration platform detects a policy violation.

At step the violating version of the file may be moved to the quarantine area of a Content Manager which may be accessible only by an administrator in some embodiments. Access may be determined based on the policy in some embodiments.

At step the administrator may receive an email alert e.g. is such an alert is an action specified in the policy.

At step the system may determine whether the uploaded file is the first version of the file to be uploaded. The user may have modified the file to create a second version which also contained a violation and continued to trigger the policy.

If this is the 1st version of the file at step the uploader may see the file with a message informing the uploader that a violation has been found and is under review by the admin and any collaborators will not see the file. If this is the 1st version of the file the uploader may see the file on their desktop with a message informing the uploader that a violation has been found and is under review by the administrator. In some embodiments any collaborators associated with the file will not see the file on their desktop.

If this is the 2nd version or higher at step the uploader may see the violating version of the file with a message informing the uploader that a violation has been found and is under review by the administrator. In some embodiments any collaborators may see the latest non violating version of the file. In some embodiments the uploader will see the violating version on their desktop with a message informing the uploader that a violation has been found and any collaborators will see the latest non violating version.

The cloud based platform service e.g. cloud based host or service provider collaboration platform may originally contain an original document or other object e.g. a file directory etc. viewable to each collaborator in a group. Both User A and User B may be members of the same group and may be in possession of local copies of original document on their respective client devices.

User A may modify the file and introduce a violation e.g. inserting a social security number SSN creating Version 1A . As part of an automated synchronization event or directly by an action of User A Version 1A may be uploaded to the cloud based host or service provider platform service e.g. cloud based collaboration platform . Following application of the policy the cloud based host or service provider platform service e.g. cloud based collaboration platform may detect a violation at and provide a message to User A as discussed above. At this time User B sees only the original document on the cloud based host or service provider. User B may begin editing a local copy of the document Version 2 but has not yet uploaded it.

While User B is preparing their document User A corrects their local copy to remove the violating content thereby creating Version 1B . After uploading Version 1B the cloud based host or service provider recognizes that there is no violation and commits the version . Following this event User B will see Version 1B on the cloud based host or service provider and any edits will be made relative to that version.

Consequently the cloud based host or service provider detects the commit by User B and branches a separate quarantined storage of Version 1A . In a separate branch User A corrects Version 1A to remove the violating content thereby generating Version 1B . User A may then upload Version 1B to the server at which will be separately committed . Among other benefits this technique may prevent accidental data loss from executing DLP policies.

In some embodiments an administrator may review the quarantined file and perform one of several actions. The administrator may delete the file permanently from the cloud based platform service e.g. cloud based collaboration platform . The administrator may restore the file sends the violating version back to its original upload location to replace the dummy version. The administrator may mark the file as a false positive sends the violating version back to its original location and alerts the DLP system in the host server e.g. the host server of the cloud based platform service that the quarantine was a false positive. File owner and in some embodiments the owner s collaborators may receive an email when the file version is restored deleted marked as false positive.

Further to enhance a reader s understanding details of one or more of the functionalities and or design options of the DLP system in the host server e.g. the host server of the cloud based platform service are discussed in the following however these details may not be necessary for a person having ordinary skill in the art to practice the embodiments disclosed herein.

1. Sync Mobile embodiments When a user adds or updates a file to a folder in synchronization that gets quarantined the experience on the owners desktop as well as for the collaborators on that file may differ depending on the DLP system s implementation 

In some embodiments once a violation has been found the violating version is replaced with a dummy file for both the uploader and collaborators. In some embodiments once a violation has been found the violating version can be replaced with a dummy file because the collaboration platform is designed not to serve an older version for collaborators but the uploader still has access to the quarantined version on their desktop and receives a notification either through email or through an icon messaging delivered via a client application e.g. a sync . However it is noted that other collaborators could revert to an older version before a user corrects the violation and the user may lose the work when that s synced back down and overwritten. Also it is noted that the user is working off of a different version than other collaborators.

2. Multiple enterprise rules when a file is uploaded to a folder depending on the implementation the DLP system of the cloud based platform can apply the DLP policies of the enterprise or customer client e.g. client in the example of whose managed user is uploading the content or apply the DLP policies of the enterprise whose managed user owns the folder the content is being uploaded into.

In some embodiments the DLP system can apply the DLP policies of the enterprise whose managed user is uploading the content. However it is noted that this technique may create inconsistency with other treatment of content ownership in other places within the workspace. Also if a policy violation is found and the file is quarantined the administrator would have access to content that is owned by another enterprise.

In some embodiments the DLP system can apply the DLP policies of the enterprise who owns the folder the content is being uploaded into. However it is noted that the DLP system might not 100 allow enterprises to prevent their users from putting unwanted information into the collaborative workspace.

3. Moving quarantined files across enterprises when a user move a file from one enterprise to another and there is a quarantined version in the file. For example if there is a file with multiple versions and in which V1 is good V2 is quarantined and V3 is good and then the file is moved from Enterprise A to Enterprise B. In some embodiments the quarantined version e.g. V2 is destroyed when copy move to another enterprise.

4. Time window when a file is uploaded into the collaborative workspace there is a time period between upload and finding a DLP policy violation in which the file can be previewed shared downloaded.

In some embodiments of the DLP system the system can allow enterprises customers e.g. clients to decide what they want to do during the time window with the following options a Completely block access to files until they have been cleared of any DLP violation however it is noted that if the file size is large or the DLP system goes down this may take a significant amount of time during which uploaded files will be inaccessible b Put all files in a not scanned for DLP state upon upload which will prevent download sharing but not block preview access and c Do nothing during that time window.

In some embodiments of the DLP system of the host server the version should be completely destroyed e.g. purged from the trash and not accessible to the workspace in any way .

Various embodiments contemplate a rules system for enforcing data loss prevention policies. For example a policy may be a collection of rules. In some embodiments a rules engine may be used to perform event based automation and to allow system administrators and end users the ability to configure rules that identify events under which Box executes certain actions. Rules may provide security for the system by preventing the undesirable disclosure of sensitive information via the collaboration process. Administrators may need the ability to identify events that raise potential security concerns and create rules that direct to cloud based platform service e.g. cloud based collaboration platform to execute certain actions based upon those events being triggered.

Rules may be integrated with business processes in some embodiments. For example rules may increase engagement between administrators and end users within an organization. Administrators may need the ability to put their content into a business context and configure rules for different types of jobs or processes.

Automation may make end users more efficient but many business documents are regularly encircled by review and approval processes. The addition of task creation based on upload events as provided in some embodiments may expand use cases and drive dependencies. That is a project manager may monitor or adjust actions so that even where no violation is detected actions are taken that facilitate advancement of the project associated with the uploaded file e.g. review meeting scheduled milestone achieved etc. .

In some embodiments administrators and end users can create if then statements identifying e.g. events in an events API and actions that the in the host server e.g. the host server of the cloud based platform service may execute when the event is triggered.

In some embodiments the rules engine may execute e.g. one or more of the following actions in response to being triggered by file content a. Email alert b. File Deletion c. Quarantine d. Create and assign a task e. Review f. Approve g. Decline h. Update a field i. Move to a folder j. Rename k. Convert a file l. Block an action m. Send to n. Copy a file to a folder o. Share a link with permissions x to email address p. Run a search q. OCR a file r. Make a custom link.

Administrators may be able to satisfy the security use case of DLP and alerts for abnormal activity by creating policies to govern certain activity within the cloud based file cloud based platform service e.g. cloud based collaboration platform . An appropriate co admin role may be present to set policies in some embodiments

The policy tab may contain a plurality of features. For example administrators can add edit delete the following policies. For example an administrator may modify an Upload policy. If a file is uploaded into the cloud based platform service e.g. cloud based collaboration platform and includes for example SSN banking information health related information a specified term or other sensitive information etc. then the rule associated with the policy may send that version of the file to the administrator managed quarantine folder.

With regard to Download policies corresponding rules may specify that if a specified files are downloaded in specified time period send an email alert to specified people .

With regard to policies Sharing the corresponding rules may indicate that if a file folder is shared with specified domains then send an email alert to specified people following the detection.

In some embodiments automation may satisfy the business process use case by allowing administrators to set up automated processes when events occur within the cloud based platform service e.g. cloud based collaboration platform . The appropriate co admin role may need to be present to set up an automation.

In some embodiments administrators can set up automation steps using the following events and actions. An automation step may include one or more rules specifying condition action pairings. Events may include e.g. Upload Move Copy Assign a task Task marked as complete. Actions may include e.g. Move Copy Assign a task.

In some embodiments interfaces may be provided for administrators to create a new automation edit existing automations delete existing automations create a step in an automation by selecting from a file or task. In some embodiments an administrator can create a step in an automation by selecting from the following events variable names in brackets is uploaded to specified folder is completed. In some embodiments an administrator can create a step in an automation by selecting from the following actions Assign a task to specified users Move to specified folder .

In some embodiments an administrator can create a multi step approval process by tying together the following steps If a file is uploaded to specified folder then assign a task to specified users if a task s on a file in specified folder is are completed then move the file to specified folder . In some embodiments an administrator may view a summary of the new step they have just created after selecting an item from the drop down lists in a step. The steps may together specify a series of conditions for triggering one or more rules.

The THEN block in this example provides for a single action to be input. In some embodiments the THEN block may specify a plurality of actions or additional conditions steps to perform before taking an action.

In the THEN block the consequent action is identified as a task of the kind Approval to be delivered to a plurality of specified persons. Many of the additional fields specifying the particulars of an action of condition may appear following an initial selection of the type of action or condition. For example the field Kind may appear in the interface only after Assign a task has been selected.

In some embodiments a Policies Tab presented to an administrator may allow administrators to add a new policy selecting e.g. from the following options Upload policy Download policy Sharing policy Admins can edit an existing policy Admins can delete an existing policy etc.

In some embodiments if an administrator is adding a new upload policy the administrator may choose from the following options in some embodiments the administrator can select multiple in some embodiments for the system to detect upon upload of a file a. Social Security Number b. Credit Card Number c. Keyword e.g. confidential or privileged d. HIPAA e. IBAN f. bank account numbers e.g. and or any additional terms or metadata indicating sensitive information content from 3rd party providers etc.

If an administrator is adding a new upload policy in some embodiments the administrator may choose from the following options in some embodiments they can select multiple if a document contains one of the items selected in 2 Move the file to quarantine Notify an email or multiple emails Only track for reporting purposes.

In some embodiments once an administrator clicks the Start Policy button any version of a file that is uploaded into the cloud based cloud based platform service e.g. cloud based collaboration platform may be automatically scanned for any violations to an existing upload policy and if a violation is found that version of that file may be moved to a quarantine folder accessible only to the administrator.

In some embodiments an administrator can create a download policy or particular rule in a policy to alert the administrator when a user has downloaded an abnormal amount of content in a certain time period. If an administrator is adding a new download policy in some embodiments they can choose the number of files downloaded in a specified time period that will trigger an alert to the administrator.

Actions may include sending a notification email to one or more email addresses e.g. separated by commas track for reporting purposes if the set number of files is downloaded within the set period of time period an email alert may be triggered.

Once an administrator clicks the Start Policy button the system may begin tracking download activity for the enterprise s users to detect if a download threshold has been hit and if so may generate an email alert to the emails listed. An administrator may create a sharing policy to alert the administrator when content is shared to specific domains

If an administrator is adding a sharing policy in some embodiments the administrator may specify the following one or more domains separated by commas for the system to watch for sending a notification email to one or more email addresses separated by commas. In some embodiments once an administrator clicks Start Policy if a user sends a shared link or adds a collaborator to a file folder from one of the listed domains an email alert may be sent to the emails listed. In some embodiments the sharing policy may specify email alert templates. The interface may permit the administrator to tailor the contents of the interface.

In some embodiments when a file violates an upload policy set up in the policy center the file version may automatically be moved to a quarantine folder. The quarantine folder may only accessible by the administrator once in quarantine.

In some embodiments the administrator can view all versions of files that have been quarantined and perform the following actions on them a. Preview b. Delete c. Restore.

The administrator may be able to mark the quarantine as a false positive. The rules may use the marking to prevent future false positives. When a file version has been quarantined by the rules that version may be replaced with a dummy version.

In some embodiments an administrator can view the policies that have been violated for a specific user by clicking on the user in the left hand navigation and clicking on their quarantine folder. In some embodiments an administrator can take the following actions on a file version that has been quarantined Preview Re instate send back to the original location Designate the file violation as a False positive for the rules system and send back to original location permanently delete the file version from the cloud based platform service e.g. cloud based collaboration platform . An administrator may take actions on multiple file versions by selecting multiple checkboxes and then performing the desired action in some embodiments.

In some embodiments the system may support Internationalization different SSN equivalents from different jurisdictions National insurance numbers HIPPA data etc.

In some embodiments the system implements backwards scanning. If the system re scans a file version and a same policy violation is found as was found previously but that file had already been restored once by the admin the system may leave the new version as removed. If however the new version violates a new policy the system may mark the new version as quarantined but for a different violation. Some embodiments support regular expressions for upload policy terms.

In some embodiments the information collected by the system across many quarantine events may be logged and available to an administrator via a reports tab within an administrative interface. For example actions taken via automation may be reflected such as when an administrator requests Usage Logs. The logs may be requested based on a date range. Administrators may then be able to pull a report for all activity having to do with automation during the specified time period. The report may include information concerning Date Time Date time the action took place User User who took the action Action Created new automation Edited automation Deleted automation Item name Blank Contained in folder Blank Details etc.

The details column may list the automation name that was entered into the Automation Name field that the corresponding action was taken on. The report may also include actions taken around policies. In some embodiments when an administrator visits Reports Usage Logs Action Types and selects Policy and a date range they may be able to pull a report for all activity having to do with policy during the specified time period that includes the following pieces of information Date time Date time the action took place User User who took the action Action Created new policy Edited policy Deleted policy Item name Blank Contained in Folder Blank Details. In some embodiments the details column may list the policy name that was entered into the Policy Name field that the corresponding action was taken on.

In some embodiments when an administrator visits Reports Usage Logs Action Types and selects Quarantine and a date range the administrator may be able to pull a report for all activity having to do with quarantine during the specified time period that includes the following pieces of information Date time Date time the action took place User who took the action Details regarding the Action itself Whether the file was Previewed Whether the file was Deleted Whether the file was Restored Whether the file was Moved and where to Item name Name of the file version that an action was taken on The name of the folder in which the file is Contained whether the file is in Quarantine if it was sent to quarantine based on policy violation .

The administrator may also view the Folder name e.g. if it was restored back to the original folder location it was uploaded to . The administrator may also view if the action was item moved to quarantine then the details may state which policy was triggered. In some embodiments if the policy that was triggered was via a 3rd party DLP metadata provider the interface may list the corresponding string sent in the API call by the 3rd party DLP metadata provider for policy violation. If no policy violation is sent via the API for a 3rd party DLP provider the details may state 3rd party DLP vendor or the vendors name if that is known. If the action was previewed or deleted then the details may state the policy that was triggered when the item got moved to quarantine. If the action was restored then the details may state the policy that was triggered when the item got moved to quarantine AND would state if it was marked as a false positive . Abnormal activity actions may also be presented to the administrator.

API EVENTS that may be called by the backend may include Download policy has been violated threshold hit Sharing policy has been violated collaboration invites sent to watchlist domain Upload policy has been violated SSN CC or custom word has been detected File is uploaded to designated folder Task has been completed on a file within designated folder .

ACTIONS for the rules system to perform may include in some embodiments Send email notification to designated email addresses Move file to quarantine area Assign a task to list of users Move file to designated folder .

Success Criteria may be specified. Some examples of criteria may include 20 of enterprise admins create at least 1 security related rule in the 1st quarter of admin deployment potentially to high 15 of admins create at least 1 automation in the 1st quarter of deployment.

For example in some embodiments when an administrator visits Reports Usage Logs Action Types and selects Abnormal Activity and a date range the administrator may be able to pull a report for all abnormal activity that was flagged during the specified time period. The report may include the following pieces of information Date time the abnormal activity occurred the User who performed the abnormal activity Information about the abnormal activity Item name . If the abnormal activity was a sharing violation to an email on the domain watchlist the file that was shared may be listed.

The report may also depict the Contained in Folder e.g. the folder in which the file is contained. If the abnormal activity was a sharing violation to an email on the domain watchlist the folder that the file that was shared was contained in may be listed. If a whole folder was shared then the Item Name and Contained in Folder would both list the name of the folder that was shared.

The Details may list the abnormal activity policy that was violated Download files in time period Shared with domain on watchlist if shared with multiple domains there may be separate entries for each abnormal activity violation.

The system may provide for an abnormal activity email alert in some embodiments. When an administrator visits Reports Usage Logs Action Types and selects Email Alerts and a date range in some embodiments the administrator may be able to pull a report for all email alerts that were sent during the specified time period. In some embodiments the only email alerts that will be sent will be for abnormal activity. In some embodiments administrators may be able to specify that they want to be sent email alerts for most events. The reporting on email alerts may include the following pieces of information Date time the email alert was sent the User who violated the policy to trigger the email alert the Email alert Action and Item name . If the abnormal activity was a sharing violation to an email on the domain watchlist the file that was shared would be listed

The email alert may also depict the Contained in Folder . If the abnormal activity was a sharing violation to an email on the domain watchlist the folder that the file that was shared was contained in may be listed. If a whole folder was shared then the Item Name and Contained in Folder may both list the name of the folder that was shared.

A Details output may also be presented. The details may list the abnormal activity policy that was violated to trigger the email alert. For example the details may include Download files in time period Shared with domain on watchlist if shared with multiple domains there would be separate entries for each email sent.

System shows a diagrammatic representation of a machine in the example form of a system within which a set of instructions for causing the machine to perform any one or more of the methodologies discussed herein may be executed.

In alternative embodiments the machine operates as a standalone device or may be connected e.g. networked to other machines. In a networked deployment the machine may operate in the capacity of a server or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment.

The machine may be a server computer a client computer a personal computer PC a user device a tablet PC a laptop computer a set top box STB a personal digital assistant PDA a cellular telephone an iPhone an iPad a Blackberry a processor a telephone a web appliance a network router switch or bridge a console a hand held console a hand held gaming device a music player any portable mobile hand held device or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine.

While the machine readable medium or machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable medium and machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium and machine readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the presently disclosed technique and innovation.

In general the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disk drives optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

The network interface device enables the machine to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface device can include one or more of a network adaptor card a wireless network interface card a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

The network interface device can include a firewall which can in some embodiments govern and or manage permission to access proxy data in a computer network and track varying levels of trust between different machines and or applications. he firewall can be any number of modules having any combination of hardware and or software components able to enforce a predetermined set of access rights between a particular set of machines and applications machines and machines and or applications and applications for example to regulate the flow of traffic and resource sharing between these varying entities. The firewall may additionally manage and or have access to an access control list which details permissions including for example the access and operation rights of an object by an individual a machine and or an application and the circumstances under which the permission rights stand.

Other network security functions can be performed or included in the functions of the firewall can be for example but are not limited to intrusion prevention intrusion detection next generation firewall personal firewall etc. without deviating from the novel art of this disclosure.

In general the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disk drives optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling of connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application shall refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above detailed description of embodiments of the disclosure is not intended to be exhaustive or to limit the teachings to the precise form disclosed above. While specific embodiments of and examples for the disclosure are described above for illustrative purposes various equivalent modifications are possible within the scope of the disclosure as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed in parallel or may be performed at different times. Further any specific numbers noted herein are only examples alternative implementations may employ differing values or ranges.

The teachings of the disclosure provided herein can be applied to other systems not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.

Any patents and applications and other references noted including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the disclosure can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further embodiments of the disclosure.

These and other changes can be made to the disclosure in light of the above Detailed Description. While the above description describes certain embodiments of the disclosure and describes the best mode contemplated no matter how detailed the above appears in text the teachings can be practiced in many ways. Details of the system may vary considerably in its implementation details while still being encompassed by the subject matter disclosed herein. As noted above particular terminology used when describing certain features or aspects of the disclosure should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the disclosure with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the disclosure to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the disclosure encompasses not only the disclosed embodiments but also all equivalent ways of practicing or implementing the disclosure under the claims.

While certain aspects of the disclosure are presented below in certain claim forms the inventors contemplate the various aspects of the disclosure in any number of claim forms. For example while only one aspect of the disclosure is recited as a means plus function claim under 35 U.S.C. 112 6 other aspects may likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claims intended to be treated under 35 U.S.C. 112 6 will begin with the words means for . Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the disclosure.

