---

title: Methods and apparatus for selecting an authentication mode at time of issuance of an access token
abstract: In some embodiments, an apparatus includes an authorization module implemented in at least one of a memory or a processing device. The authorization module can receive from an application a request for an access token associated with the application that includes a scope identifier associated with a level of access to a resource module. The authorization module can select based on the scope identifier at least one authentication mode from a set of predefined authentication modes. The authorization module can also receive at least one credential assigned to at least one authentication mode. Additionally, the authorization module can send the access token to the application in response to authenticating a user of the application based on the at least one credential.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08613055&OS=08613055&RS=08613055
owner: Ping Identity Corporation
number: 08613055
owner_city: Denver
owner_country: US
publication_date: 20130222
---
Some embodiments described herein relate generally to methods and apparatus for an authorization server to authenticate a user of an application installed on a mobile communication device before issuing an access token for the application and with the appropriate scope. In particular but not by way of limitation some embodiments described herein relate to methods and apparatus of authenticating the user of the application based on a scope identifier provided by the application that is associated with a level of access to a resource server requested by the application. The authorization server selects the appropriate user authentication mode from multiple predefined authentication modes based on the scope identifier.

Open Authorization OAuth is an open standard protocol for authorization and allows a user such as an enterprise employee to grant a third party application access to information associated with that user stored at a given location e.g. on given website without sharing that user s account credentials e.g. password or the full extent of that user s data. While OAuth 2.0 defines a browser based interaction comparable to Single Sign On SSO protocols such as Security Assertion Markup Language SAML and OpenID OAuth 2.0 is not an SSO protocol. Rather OAuth 2.0 is typically used more for authorization rather than authentication.

Because OAuth 2.0 is not focused on authentication OAuth 2.0 provides no syntax by which the specifics of how a user is authenticated can be indicated by the application requesting authorization. In some instances however the strength of a user authentication step can be important if the resource for which access is being sought by an application is particularly sensitive e.g. data related to online banking stock trade health records etc. . In such instances it may be important to obtain the user s authorization for such access only after implementing a strong user authentication step.

Accordingly a need exists for methods and apparatus for an OAuth Authorization Server to authenticate the user of an application installed on a mobile communication device before issuing an access token with the appropriate scope to the application.

In some embodiments an apparatus includes an authorization module implemented in at least one of a memory or a processing device. The authorization module can receive from an application a request for an access token associated with the application that includes a scope identifier associated with a level of access to a resource module. The authorization module can select based on the scope identifier at least one authentication mode from a set of predefined authentication modes. The authorization module can also receive at least one credential assigned to at least one authentication mode. Additionally the authorization module can send the access token to the application in response to authenticating a user of the application based on the at least one credential.

In some embodiments an apparatus includes an authorization module implemented in at least one of a memory or a processing device. The authorization module can receive from an application a request for an access token associated with the application that includes a scope identifier associated with a level of access to a resource module. The authorization module can select based on the scope identifier at least one authentication mode from a set of predefined authentication modes. The authorization module can also receive at least one credential assigned to at least one authentication mode. Additionally the authorization module can send the access token to the application in response to authenticating a user of the application based on the at least one credential.

In some embodiments an apparatus includes an application implemented in at least one of a memory or a processing device. The application is configured to send to an authorization module a request for an access token associated with the application. The request includes a scope identifier associated with a level of access to a resource module such that the authorization module selects at least one authentication mode from a set of predefined authentication modes based on the scope identifier. The application is configured to receive from the authorization module an access token in response to the authorization module authenticating a user of the application using at least one authentication mode. The application is configured to send the access token to the resource module such that the resource module verifies the access token.

In some embodiments a non transitory processor readable medium includes code to cause a processor to receive from an application a request for an access token. The request includes a scope identifier associated with a level of access to a resource module. The code causes the processor to select based on the scope identifier at least one authentication mode from a set of predefined authentication modes. The code further causes the processor to authenticate a user of the application using at least one authentication mode and based on at least one credential associated with the user. The code further causes the processor to send the access token to the application in response to authenticating the user.

As used in this specification the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a device is intended to mean a single device or a combination of devices.

The device can be any mobile communication or computing device such as a laptop computer a personal digital assistant PDA a standard mobile telephone a tablet personal computer PC and or so forth. The device includes a memory and a processor . The device can be configured to generate scope identifiers associated with one or more applications e.g. application and request and receive access tokens from the authorization server . The device can also be configured to request application data from the resource server e.g. by sending access tokens with the appropriate scope to the resource server and to receive application data from the resource server via the network as described in further detail herein.

The memory can be for example a random access memory RAM a memory buffer a hard drive a database an erasable programmable read only memory EPROM an electrically erasable read only memory EEPROM a read only memory ROM and or so forth. In some embodiments the memory stores instructions to cause the processor to execute modules processes and or functions associated with such an access token issuing system .

The processor can be a general purpose processor a Field Programmable Gate Array FPGA an Application Specific Integrated Circuit ASIC a Digital Signal Processor DSP and or the like. The processor can be configured to run and or execute applications and or other modules processes and or functions including for example modules processes and functions associated with an access token issuing system . The processor includes or can access an application .

The application can be any native mobile application installed on the device or a web browser based application. The application for example can be configured to receive access token s from the authorization module with the appropriate scope and cause the processor to execute specific operations associated with particular functions. For example the application can be an accounting application a sales application a payroll application and or the like. In other configurations application can be any enterprise or third party application configured to be run and or executed at the device .

The application can send to the authorization module a signal representing a request also referred to as a request signal for an access token associated with the application . The request signal can include a scope identifier associated with a level of access to the resource module such that the authorization module can select at least one authentication mode from a set of predefined authentication modes based on the scope identifier. The application can receive from the authorization module an access token with the appropriate scope in response to the authorization module authenticating a user of the application using at least one authentication mode. The application can send the access token to the resource module such that the resource module verifies the access token and sends application data to the application via the network .

The authorization server can be for example a web server an application server a proxy server a telnet server a file transfer protocol FTP server a mail server a list server a collaboration server and or the like. The authorization server can be for example an OAuth 2.0 authorization server. OAuth 2.0 defines a standardized messaging protocol by which an application installed on a mobile communication device can obtain security tokens such as for example access tokens from an authorization server. OAuth 2.0 is described in detail in The OAuth 2.0 Authorization Framework draft ietf oauth v2 31 dated Jul. 31 2012 which is incorporated herein by reference in its entirety. These security tokens can then be included by the application on its application programming interface API calls to a resource server such as resource server to authenticate at the resource server before obtaining application data.

The authorization server can receive from an application a signal requesting for an access token associated with the application also referred to as a request signal . This request signal can include a scope identifier associated with a level of access to the resource module . The authorization module can select based on the scope identifier at least one authentication mode from a set of predefined authentication modes. The authorization module can also receive at least one credential assigned to at least one authentication mode. The credentials can include for example at least one of a user name a password an answer to a knowledge based question a short message service SMS code a telephonic communication an internet protocol IP address or a time of day. Such credentials can either be loaded into the authorization module at a pre determined time or during each authorization event.

The authorization module can authenticate a user of the application using at least one authentication mode or an authorization mode and based on at least one credential associated with the user. The authorization module can select an authentication mode by selecting an entry associated with at least one user authentication mode from for example an authentication mode or authorization mode database not shown based on the scope identifier. The credentials for a user can include for example a user name a password an answer to a knowledge based question a short message service SMS code a telephonic communication an internet protocol IP address and or a time of day. The authorization module can define or generate an access token associated with the application and send the access token with the appropriate scope to the application in response to authenticating a user of the application based on at least one credential. The access token can be for example an Open Authorization OAuth access token.

The resource server can for example be a server associated with an enterprise such as a company or an individual user that owns and or controls the authorization server . The resource server can also be or a third party server distinct from the enterprise or individual user that is associated with and or controls the authorization server . The resource server can be for example a Software as a Service SaaS host that is a web server a proxy server a telnet server a file transfer protocol FTP server a mail server a list server a collaboration server and or the like.

The resource server includes a processor and a memory . The memory can be for example a random access memory RAM a memory buffer a hard drive a database an erasable programmable read only memory EPROM an electrically erasable read only memory EEPROM a read only memory ROM and or so forth. In some configurations the memory can store instructions to cause the processor to execute modules e.g. resource module processes and or functions associated with or stored on the resource server within the access token issuing system .

The resource module can be a hardware and or software module stored in memory and or executed in a processor configured to provide application data to applications via the network . For example the application data can include results of external market analysis for a product of the enterprise and or the like. This application data can be used by the application for example to set the retail price of the product to calculate the expected profit levels for the product to determine locations for the best retail vendors available for the product and or the like. In other words the application data can be related to the type of application sales data for a sales related application financial data for a financial application etc. The resource module can receive and process an access token from the application of the device prior to providing application data to the application . Such application data can enable the application to execute modules processes and or functions associated with or stored on the device .

OAuth 2.0 typically includes a step in which a user of a device e.g. an employee of an enterprise provides consent or authorization for a given application to access a given set of resources from the resource module . In some instances when the user is not required to provide consent the user will still be authenticated so that the corresponding resources for an application can be determined. The rigor with which this authentication occurs can have a direct effect on the security characteristics of the resulting access token issuance and usage. Resources and corresponding data of high value e.g. bank statements credit card statements health records etc. sensitivity or privacy risk warrant a stronger authentication mechanism than resources of low value e.g. weekly fantasy football scores personalized sports or entertainment news etc. . Conversely requiring a strong authentication mechanism for an authorization step for resources of low value or sensitivity can become unnecessarily burdensome for the users and potentially inappropriately expensive for the enterprise organization and or an individual user.

The access token issuing system allows the authorization server to implement authorization methods of varying strengths for the resources for which access is being sought e.g. via the scope identifier associated with a level of access to the resource module sought by an application . The different authorization methods are set up according to the policies of the entity or enterprise that has tailored and or configured the authorization server . The authorization server can implement a strong user authorization method for high value resources as indicated by the scope identifier included in the request for access tokens sent by the application . The authorization server can also implement a comparatively weaker user authorization method for low value resources thus improving both overall security and usability.

At the application sends a signal representing the scope identifier e.g. a scope ID and the request for the access token to the authorization module . The scope ID is associated with a level of access to a resource module . A scope is a representation of a resource s or application data that can be granted for a particular application and a scope ID is a level of access to such a resource s or application data . Because different resources have different sensitivities and risks associated with them the corresponding scopes can indirectly identify the different sensitivities and risks. For example consider the two following scopes i urn finance stocks list and ii urn finance stocks buy the first scope refers to the application being able to display a list of the stocks a given user of the device owns the second scope refers to the application being able to make stock purchases on behalf of the user of the device . Hence the second scope is more sensitive and thus would merit authentication of the user of the device via a stronger authorization mode or method or protocol. The scope ID can be for example a string of arbitrary random or pseudo random numbers generated by the application . The scope ID can be from a group of multiple of scope ID s that are generated by the application such that each scope ID is associated with a user credential set different from a credential set associated with the remaining scope IDs from the group of scope IDs.

A particular scope ID can be representative of the scope of the application that will be used by the user of the device as described above. For example in instances where the application is a financial application that relates to the investment portfolio of a user of the device a first scope ID can be used to view stocks via the application . This first scope ID differs from a second scope ID that can be generated by the application when using the application to buy or sell stocks. The first scope ID and or the second scope ID can be added to the signal requesting the access token and is sent from the application to the authorization module via the network . To ensure that a given scope ID is used only once in some embodiments each scope ID can be made to be time variant by for example including a suitably fine grained timestamp in its value or each scope ID can be generated with enough random bits to ensure a probabilistically insignificant chance of repeating a previously generated value. In other embodiments the scope IDs are not issued in secret and the security measures described above are not implemented with the scope IDs.

At the authorization module determines the authentication mode or authorization mode based on the scope ID. The authorization module determines an authentication mode such as a first authentication mode from a group or a plurality of authentication modes. The authorization module is configured to select the first authentication mode when the scope ID is associated with a first level of access e.g. view stocks . The authorization module is configured to select the first authentication mode and a second authentication mode from the group of authentication modes when the scope ID is also associated with a second level of access e.g. view buy and sell stocks .

The authorization module can determine the appropriate authentication mode or authorization mode from a set of predefined authentication modes by selecting an entry associated with at least one authentication mode from an authentication mode or authorization mode database not shown in based on the scope ID. In some instances the appropriate authentication mode can be chosen based on additional parameters such as for example an identifier associated with the resource module that can either be derived from the scope ID or can be part of the request signal sent from the application to the authorization module step . In some instances the authentication mode or authorization mode database can be located in the memory of the authorization server . In other instances the authentication mode or authorization mode database can be located in the memory of another server or device that is operably coupled to the authorization server . The resource module identifier can include for example the internet protocol IP address and or the media access control MAC address of the resource server .

At the authorization module sends a signal to the device requesting user credentials. The device uses a user interface to obtain user credentials from a user of the device . The user can be for example any employee of an enterprise or an individual user. Such a user credential request signal can for example redirect the application or a browser within the operating system of the device to an OAuth authorization server login page where the user of the device can enter the user credential information required for authentication of the user. At the device provides user credentials to the authorization module . The user credentials can include for example at least one of a user name a password an answer to a knowledge based question a short message service SMS code a telephonic communication an internet protocol IP address a time of day a Single Sign On SSO assertion such as a Security Assertion Markup Language SAML assertion and or the like.

The authorization module receives the user credentials from the device and authenticates the user at as described above. Upon successful selection of the authentication mode the authorization module can authenticate the user of the device by matching the user credential to a specific entry in a user authentication database or a look up table stored in the memory of the authorization server not shown in . The user authentication database can include for example a list of names of employees and a corresponding employment position and security access level social security number employee personal identification number PIN employee password an answer to a knowledge based question a short message service SMS code a telephonic communication an internet protocol IP address a time of day and or the like. In other configurations the user authentication database can be stored in the memory of another device e.g. a server not shown in operatively coupled to the network . The authorization module can authenticate the user of the device using any suitable authentication protocol such as for example Secure Sockets Layer SSL Secure Shell SSH Kerberos and or the like.

Upon authenticating the user the authorization module can generate and or define an access token with the appropriate scope for the application on the device . Note that the access token can be generated at this point when the user credentials are successfully authenticated and will not be generated if the user credentials are not successfully authenticated. In some instances the access token can include an encrypted or unencrypted form of a user personal identity number PIN a user security access level a device identification number an internet protocol IP and or media access control MAC address of the device an application identity number an address of the authorization module and or the like. The access token can include additional encrypted or unencrypted application credentials such as the specific features and or resources of the application that have been approved for the user i.e. the appropriate scope of the application a duration for which the access token is valid and or the like. In some instances the access token can be for example an Open Authorization OAuth access token an OpenID Connect token a SecurID token and or the like. Upon generating the access token with the appropriate scope the authorization module can send the access token with the appropriate scope to the application via the network at .

The application can send the access token with the appropriate scope to the resource module via the network at . The resource module can receive via the network the access token from the application and can assess the validity of and or verify the attributes of the access token. In some configurations the resource module can perform this verification by querying a database or a look up table stored in the memory of the resource server for an entry that corresponds to the access token. In other configurations the database or look up table can be stored in the memory of a different server operatively coupled to the network . For example the resource module can acknowledge if an access token for an application for an authenticated user of the device has been received. In another example the resource module can acknowledge if the approved functionalities or scope of the application for the user of the device have been included in the access token. In yet another example the resource module can acknowledge if the time stamp on the access token is valid and or the like. In some embodiments as part of the access token verification process the resource module can also receive information about the specific authentication modes by which the user was authenticated during the access token issuance process. The resource module or a separate authorization module not shown in can then use the information about authentication modes used at the time of issuance of the access token in making an authorization decision with respect to the client s request.

Upon successfully receiving and verifying the access token the resource module can at send application data via the network to the application in a data package e.g. a JavaScript Object Notation JSON package for use during execution of the application on the device . For example if the application is a sales application the application data can include a representation of the price of a unit of a product the number of units sold in a month the number of units in pending orders the revenue generated from all sales in a month the profits earned in a month and or the like. In some instances the application can use the application data to populate a table for display to the user. In another example if the application is a human resource HR application the application data can include a user employee number a user social security number an employee status code an enterprise code for paid time off PTO and or the like. In this example the application can allow the user to use this data to calculate the total number of hours worked that can be charged to the enterprise in a pay cycle and or the like.

In some instances the authorization module can send refresh tokens with the appropriate scope to the application in addition to access tokens. Such refresh tokens are typically longer lasting than access tokens and can be used by the application to obtain additional access tokens from the authorization server . Such instances can occur for example when access tokens expire and the application and or the user of the device goes through the login phase again. In other instances the refresh tokens with the appropriate scope can be generated by the authorization module pro actively for example when the access token has a short time to live and the application uses a longer time to live. The increase in the time to live can be provided by for example the refresh tokens. As described above upon successful authentication the authorization module can send the access token and or refresh token with the appropriate scope to the application .

The access token issuing system described in includes the concept of an OAuth authorization server via the authorization module deciding in real time or substantially in real time given processing delays based on previously configured policy on how to authenticate a user of a device based on the scope ID provided by the application in the authorization request. The user authentication modes or user authorization modes involving scope IDs corresponding to application data with higher sensitivity can typically lead to a more rigorous user authentication or authorization .

At at least one authentication mode is selected from a set of predefined authentication modes based on the scope identifier by for example the authorization module. As described above the authorization module can select an entry associated with at least one authentication mode from an authorization mode database based on the scope identifier and an identifier associated with the resource module. The identifier associated with the resource module can be for example a MAC address an IP address and or the like. In some configurations the authorization mode database can be located in the memory of the authorization server. In other configurations the authorization mode database can be located in the memory of another device e.g. a server operatively coupled to the authorization module via the network.

At the user of the application is authenticated by for example the authorization module using at least one authentication mode based on at least one user credential associated with the user. As described above the user credential provided by the user to the authorization module can include for example at least one of a user name a password an answer to a knowledge based question a short message service SMS code a telephonic communication an internet protocol IP address a time of day a SAML SSO Assertion and or the like. In some instances the authorization module can authenticate the user by matching the user credential to a specific entry in a user authentication database or a look up table stored in the memory of the authorization server. The user authentication database can include for example a list of names of employees and their corresponding employment positions and security access level social security numbers employee personal identification numbers PIN employee passwords an answer to a knowledge based question a short message service SMS code a telephonic communication an internet protocol IP address a time of day and or the like. In other instances the user authentication database can be stored in the memory of another device e.g. a server operatively coupled to the authorization module via the network. As described above the authorization module can authenticate the user using any suitable authentication protocol such as for example Secure Sockets Layer SSL Secure Shell SSH Kerberos and or the like.

At the access token is sent to the application in response to authenticating the user by for example the authorization module. Upon successfully authenticating the user the authorization module can generate and or define an access token with the appropriate scope for the application installed on the device. Note that the access token will not be generated if the user is not successfully authenticated. As described above in some instances the access token can include an encrypted or unencrypted form of a user personal identity number PIN a user security access level a device identification number an IP and or MAC address of the device an application identity number an address of the authorization module and or the like. The access token can include additional encrypted or unencrypted application credentials such as the specific features and or resources of the application that has been approved for the user of the device i.e. the appropriate scope of the application a duration for which the access token is valid and or the like. In some instances the access token can be for example an Open Authorization OAuth access token an OpenID Connect token a SecurID token and or the like. Upon generating the access token with the appropriate scope the authorization module can send the access token with the appropriate scope to the application via the network.

If the application uses the access token to request resources or application data that are included in the allowed scope via the scope ID and the corresponding authentication mode used at time of access token issuance matches the policy requirements of the resource module the request is granted and the resource module sends the requested application data to the application. If the application uses the access token to request for resources or application data not included in or permitted by the allowed scope via the scope ID the request is denied by the resource module and no application data is sent by the resource module to the application. Hence the application token with the appropriate scope ID can implement a high level of security to a network where users not authenticated on a device are denied from receiving application data. Additionally the access token issuing system also allows an authenticated user of a device only the data approved for the user of the device.

Some embodiments described herein relate to a computer storage product with a non transitory computer readable medium also can be referred to as a non transitory processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The computer readable medium or processor readable medium is non transitory in the sense that it does not include transitory propagating signals per se e.g. a propagating electromagnetic wave carrying information on a transmission medium such as space or a cable . The media and computer code also can be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of non transitory computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks carrier wave signal processing modules and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs Read Only Memory ROM and Random Access Memory RAM devices. Other embodiments described herein relate to a computer program product which can include for example the instructions and or computer code discussed herein.

Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. For example embodiments may be implemented using imperative programming languages e.g. C Fortran etc. functional programming languages Haskell Erlang etc. logical programming languages e.g. Prolog object oriented programming languages e.g. Java C etc. or other suitable programming languages and or development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Where methods described above indicate certain events occurring in certain order the ordering of certain events may be modified. Additionally certain of the events may be performed concurrently in a parallel process when possible as well as performed sequentially as described above. For example in some instances the application can include the user credentials along with the scope ID in the access token request signal sent to the authorization module. In such instances step can be performed concurrently with step in and step and can be avoided.

