---

title: Identifying relevant messages in a conversation graph
abstract: A method and system for identifying relevant messages in a conversation graph includes identifying a context message within the conversation graph. The context message is marked as relevant and additional messages are marked as relevant based on various criteria. A plurality of authors of messages marked as relevant is identified and a plurality of unmarked messages authored by the plurality of authors is marked as relevant. In addition, a plurality of parent messages of messages marked as relevant are identified and marked as relevant. A list comprising messages marked as relevant is then provided to a user. Multiple steps can be repeated until convergence after which the list can be provided to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09143468&OS=09143468&RS=09143468
owner: Twitter, Inc.
number: 09143468
owner_city: San Francisco
owner_country: US
publication_date: 20130108
---
The present disclosure relates generally to message presentation and more particularly to conversation graph pruning.

Social networking services allow users to author and share messages with multiple users. For example a first user can author and publish a message for other users to read. The messages can be any of a variety of lengths which may be limited by a specific messaging system or protocol. For example a short messaging service protocol typically limits messages to 140 characters in length.

Users interested in viewing messages authored by a particular user can choose to follow the particular user. A first user can follow a second user by identifying the second user as a user the first user would like to follow. After the first user has indicated that they would like to follow the second user the first user will be provided with messages authored by the second user. Users can choose to follow multiple users. Users can also respond to messages and thereby have conversations with one another. Both unidirectional e.g. follower followee and bidirectional e.g. friendship relationships may exist depending on the type of network.

A conversation consists of a root message messages in reply to the root message messages in reply to the messages in reply to the root message etc. A conversation graph is a data structure which includes all messages in a conversation. Users can view an entire conversation based on messages included in the conversation graph. Messages in the conversation can be displayed to a user in a variety of ways. For example all messages in a conversation can be displayed in a list ordered based on the time each message was sent. However when a conversation comprises a large number of messages the number of messages displayed can be very large and may overwhelm the user.

In one or more embodiments a method for identifying relevant messages in a conversation graph includes identifying a context message within the conversation graph. The context message is marked as relevant and additional messages are marked as relevant based on various criteria. A plurality of authors of messages marked as relevant is identified. A plurality of unmarked messages authored by the plurality of authors is also marked as relevant. In addition a plurality of parent messages of messages marked as relevant is identified and marked as relevant. A list comprising messages marked as relevant is then provided to a user.

In one or more embodiments several of the steps described above are repeated until convergence and then the list is provided to a user.

Prolific authors can be identified and messages authored by prolific authors can be marked as relevant. Similarly credible authors can be identified and messages authored by credible authors can be marked as relevant. Users mentioned in a message but not identified as a sender can be identified as relevant users. Messages authored by relevant users can be marked as relevant.

In one or more embodiments a root message of the conversation graph is marked as relevant prior to the identification of the plurality of authors. In one or more embodiments the context message is the root message of the conversation graph. In another embodiment the context message is identified by a user via a user selection. A relevant conversation in one or more embodiments comprises marked messages from the conversation graph.

A system and computer readable medium for identifying relevant messages in a conversation graph are also described.

These and other advantages of the invention will be apparent to those of ordinary skill in the art by reference to the following detailed description and the accompanying drawings.

A messaging platform facilitates viewing of messages by users. Messages can be viewed in a variety of ways. For example all messages associated with a particular account can be viewed by a user. Messages can also be viewed based on relationships between messages. In one or more embodiments a user can view one or more messages included in a conversation graph. A conversation graph is a data structure which includes all messages in a conversation. In one or more embodiments a conversation graph is a data structure comprising a root message and one or more messages in reply directly or indirectly to the root message. A root message is a message which is identified as being not in reply to any other message. A user can also view messages related to a particular message selected by a user wherein the particular message selected is referred to as a context message. The messaging platform receives stores and delivers messages to and from users.

It should be noted that messages are associated with a particular account which may be associated with an individual user or an entity such as a business or service. For example a news service may have an account which is modified by one or more users. In this example the account is associated with the news service and not a particular user.

In one or more embodiments various criteria and algorithms are used in order to identify relevant messages in a conversation graph. A subset of the messages in the conversation graph may be marked as relevant in accordance with methods described herein based on one or more context data items e.g. a context message . For purposes of this disclosure this subset of relevant messages may be referred to as a relevant conversation. Any portion of a relevant conversation may be returned in response to a request for relevant messages.

In one or more embodiments routing module includes functionality to receive one or more messages assign a message identifier referred to as a message ID to each message and store the message s and message ID s in message repository . In one embodiment routing module also includes functionality to determine an identification of a sender of each message and transmit the identification of the sender to graph fanoutmodule .

In one or more embodiments graph fanoutmodule includes functionality to receive an identification of the sender i.e. a particular account via which a user is sending a message of a message retrieve user graph data i.e. information pertaining to a user as described in further detail below from connection graph repository and or determine which accounts should receive the message. User graph data for example can identify which accounts in the messaging platform are following the particular account and are therefore subscribed to receive messages from the particular account. User graph data may include any type of unidirectional e.g. follower subscription etc. and or bidirectional e.g. friendship etc. relationships among accounts. Connection graph repository stores user graph data and transmits information to graph fanout module including a list of accounts associated with e.g. following friends with subscribed to etc. the particular account in response to a request from graph fanout module .

In one or more embodiments delivery module includes functionality to receive the list of accounts from graph fanoutmodule and or the message identifier generated by routing module . In response to receipt of this information delivery module can insert the message identifier into stream data stored in stream repository . In one or more embodiments stream repository stores content e.g. message identifiers received from delivery module and or responds to requests for information received from for example front end module or conversation module . Stream data stored in stream repository can make up one or more streams associated with one or more accounts of the messaging platform . A stream may include a dynamic list of messages associated with one or more accounts and or can reflect any arbitrary organization of messages that is advantageous for the user of an account.

In one or more embodiments account repository includes functionality to receive store and or transmit data concerning accounts. For example account repository may be configured to store information related to accounts such as contact information location information e.g. an address and etc. Account repository as shown in is in communication with front end module and conversation module .

In one or more embodiments conversation module includes functionality to identify one or more relevant conversations based on a conversation graph. For example conversation module may be configured to perform the functions described herein in connection with and or to receive requests from a user via front end module . In one embodiment relevant conversations determined by conversation module are stored in conversation repository . Conversation repository also includes functionally to transmit relevant conversations and or a list of messages from a relevant conversation in response to requests from for example conversation module or front end module via conversation module . Semantic analysis module in one or more embodiments is included in conversation module . In other embodiments semantic analysis module may be a module separate from conversation module . Semantic analysis module includes functionality to identify one or more topics associated with messages accounts and or conversations as described in further detail below.

Front end module in one or more embodiments includes functionality to transmit and receive information from one or more clients e.g. client . Front end module includes functionality to serve message streams via interaction with various modules such as conversation module . In one embodiment the functionality described in conjunction with front end module is contained in API module . Front end module is in communication with client which in one embodiment is used an end point as described below.

An overview of the operation of messaging platform in accordance with various embodiments of the invention is as follows.

In one or more embodiments client includes functionality to compose one or more messages in response to user input. For example a user associated with a particular account can author a message to be sent from any entry point e.g. client . In general the entry point can be based on the operation of any computing device for example a mobile phone a personal computer laptop desktop or server or a specialized device having communication capability. The entry point can utilize any of a number of interfaces including a web based client a Short Messaging Service SMS interface an instant messaging interface an email based interface an API function based interface etc. The entry point may be configured to transmit the message through a communication network to messaging platform .

In one or more embodiments routing module receives the message and in response stores the message in message repository . The message is assigned an identifier referred to as a message ID which is stored along with the message in message repository . Routing module may be configured to store an identification of a sender e.g. an account ID associated with an individual or an account associated with a non human entity such as a business or service along with the message in message repository .

In one or more embodiments the identification of the sender is passed to graph fanoutmodule which in response retrieves user graph data from connection graph repository . User graph data contains information indicating which accounts are associated with e.g. following a particular account and are therefore subscribed to receive messages or indications regarding messages sent by a user via the particular account. In one embodiment the sender of the message does not specify recipients when posting the message to the messaging platform . Graph fanoutmodule uses the user graph data to determine which accounts associated with the messaging platform should receive the message. In one embodiment delivery module receives a list of accounts from graph fanoutmodule and the message identifier generated by routing module .

In one or more embodiments delivery module inserts the message identifier into one or more message streams associated with each account identified in the list of accounts. The message streams are stored in stream repository . A message stream in one or more embodiments comprises messages associated with a particular account. For example the home message stream of each account can include all messages posted by followed or friended accounts. In one or more embodiments the front end module includes functionality to create one or more message streams in response to user input. For example a user may select any number of accounts to be included in a given stream. The stream will then display only messages posted by the selected accounts. Message streams can reflect any organization of the messages that can be advantageous for a user of an account on messaging platform .

In one or more embodiments front end module uses storage modules for serving messages to a user of an account on messaging platform . In one or more embodiments stream repository is accessed by front end module to identify a particular message stream. Messages identified by a particular message stream can then be retrieved from message repository . Message streams can be constructed using information from connection graph repository and stored in stream repository .

Similar to the entry point a user can use any end point e.g. client to receive one or more messages. The end point can also be any computing device providing one or more of a number of interfaces. For example when the user uses a web based client to access their messages front end module can be used to serve one or more message streams to the client. Where the user uses a client that accesses messaging platform through an API application programming interface API module can be utilized to serve one or more message streams to the client for presentation to the user. Similarly different forms of message delivery can be handled by different modules in front end module e.g. by additional modules not shown . The user can specify particular receipt preferences which are implemented by modules in front end module .

Messages in one or more embodiments are stored in message repository . depicts an example of a message table which includes multiple records e.g. containing message data fields associated with a message identified by message ID . Author Account ID field contains an identifier indicating an account associated with an author of the message identified by message ID . In one or more embodiments each account is associated with a unique account ID. For example a user named Adam Smith may select the identifier adam. Other identifiers such as alpha numeric identifiers can be selected as well. Message content contains the content of a message identified by message ID field. Typically the content of a message consists of text. However in one or more embodiments of the invention message content can contain various media and or may include one or more references to various media e.g. a uniform resource locator URL of a video .

In one or more embodiments relevant participant s account ID field contains identifiers of one or more relevant accounts. In one embodiment the relevant participant s account ID excludes the authoring account and or the parent account i.e. the author of a message which the message is in reply to if the message is a reply message. For example message content can contain text such as johnqpublic is correct . The character string johnqpublic indicates that an account associated with the johnqpublic identifier is mentioned in the content of the message. The mentioned account identifier johnqpublic is inserted into relevant participant s field. Identified relevant participants can then be used as a factor in determining which messages in a conversation graph to surface to one or more users i.e. which messages to include in a relevant conversation .

In one or more embodiments the conversation module of includes functionality to identify relevant participants. Relevant participants may be identified based on a variety of different data. For example relevant participants may be tagged by the user during composition of the message and may be stored as metadata associated with the message i.e. not within the message content . In another example relevant participants may be explicitly tagged within the content of the message as in the example discussed above e.g. johnqpublic is correct . Lastly in yet another example relevant participants are inferred based on text or data within the content of the message e.g. facial recognition display name matching etc. In other words in one or more embodiments a relevant participant can be identified based on a character string of text which is not explicitly tagged as an account identifier e.g. not preceded by the symbol . For example a user may be identified by the user s real name. If the user s real name can be found in display name column of described in further detail below then that user s account ID can be inserted into relevant participant s Account ID field of an appropriate record.

In one or more embodiments in reply to field identifies a parent message that a particular message is in reply to. For example record identifies message ID number which is identified as being in reply to message ID number . The relationships among messages may be used to identify various messages for inclusion in a conversation graph. The reply relationships between two or more messages may be identified based on a variety of different data in accordance with various embodiments. In one or more embodiments the reply structure is identified based on metadata associated with each message which is received from a client used to compose the message. For example a user may click on a Reply link displayed below a message displayed in the user s home stream. The client may then display a message composition box for drafting a reply message. The client may submit metadata including the reply relationship i.e. a message ID of the parent message with the reply message. Conversely in another example the reply relationship may be explicitly defined by the user within the message content. In this example the reply structure may be identified by identifying one or more account IDs and or message IDs mentioned within the message content. The designation between authors of parent messages and relevant participants if any may be made based on any number of syntactical rules. Thus the message platform may require that if a message begins with an account ID e.g. john the message will be marked as being in reply to a latest message from the mentioned account ID. Thus the reply to field may be populated based on any means of identifying a reply structure of two or more messages. Lastly it should be noted that while many of the examples depicted herein include a requirement that each message can only have one parent message embodiments of the invention may be implemented in a system allowing multi parent reply structures i.e. a single message being in reply to two or more parent messages .

Connection graph data in one or more embodiments is stored in connection graph repository . Connection graph data in one embodiment reflects which accounts in messaging platform are associated with e.g. following friends with subscribed to etc. a particular account and are therefore subscribed to receive status messages from the particular account. Connection graph data can also reflect more sophisticated graph relationships between the accounts. depicts account data table which includes multiple records containing user data associated with an account identified by account ID . Account ID field contains an identifier which uniquely identifies each account of the messaging platform . In one embodiment the account ID is selected by a user. Although many users may choose to select an account ID that is a concatenation of the user s first and last name or the name of a business or service account ID can be an arbitrary alpha numeric string. Display name contains an identifier indicating a user s name. In one or more embodiments display name is a character string typically chosen by a user and comprising the user s actual name. In other embodiments display name may be a business name a pseudonym and or any other display name selected by a user of the account. Each display name is associated with a particular account ID . In one or more embodiments user names and account IDs are used to facilitate recognition of authors by readers and are used by messaging platform to perform various functions.

In one or more embodiments followed by field contains identifiers indicating accounts following an account identified by account ID . In one or more embodiments a user can choose to follow another account. A user following a particular account receives messages authored by a user associated with the particular account intended for public viewing. For example if the user associated with the particular account enters a message for public viewing all users following the particular account can view the message. In one or more embodiments users following the particular account will receive a push notification on their computing device indicating that a user associated with the particular account has posted a message. In one or more embodiments users following the particular account will receive a copy of the message the user of the particular account authored for public viewing. For example shows that account adam is followed by keith brian carrie and david . As such keith brian carrie and david are subscribed to receive messages authored by a user associated with the account adam . In one or more embodiments followed by field is implemented as a bidirectional relationship field e.g. friendship and represents a mutual connection between accounts of the messaging platform.

Message repository can be used to generate message streams comprising lists of messages for presentation to a user based on various criteria. For example a message stream can contain a list of messages from accounts that a particular account is associated with e.g. following friends with etc. .

It should be noted that messages can be categorized into various types. For example a message posted by a particular author without an indication that the message is directed to a particular account may be referred to in one embodiment as a broadcast message or simply a message. Broadcast messages are displayed to users with accounts associated with e.g. following friends with etc. the account of the broadcast message. A message in reply to another message is considered a reply message or more simply a reply. In one embodiment the category of a message determines whether the message will be designated to be displayed to another account or included in other account s message streams.

A direct message also referred to as a private message is a message that explicitly identifies one or more accounts as recipients. For example a message from a user associated with the account keith that is explicitly directed by the user authoring the message to the account carrie is considered a direct message from keith to carrie.

Although conversation graph is depicted in using a graphical format the messages depicted in in one or more embodiments are stored in message repository in any appropriate data structure. Message in this example is a root message i.e. the parent of all messages shown in . Child message is a reply message that is in reply to message as identified by the line connecting message to message . Child messages and are reply messages that are in reply to message the relationships of which are shown by the lines connecting the messages. In this example messages are reply messages under root message .

Conversation graph in one embodiment is determined based on the reply structure of messages . The reply structure may be identified based on metadata associated with each message and or reply information identified from within the message content in accordance with various embodiments. For example in one embodiment metadata stored in the In Reply to field of table is used to generate a conversation graph. More specifically the metadata maintains the reply relationships between multiple messages of a conversation. Thus in this example each message can be in reply to only one parent message and only messages which are in the reply chain of the root message are included in the conversation graph. It should be noted that displaying messages solely from accounts having a predefined graph relationship with a user s account may render the conversation incomprehensible to the user.

At step a context message is identified. A context message may be any one of the messages in a conversation graph. In one or more embodiments of the invention the context message can be used to identify a context of a request for a relevant messages. Examples of a context message may include but are not limited to a message selected by a user a message including a specified keyword or topic a message returned in response to a search request a message associated with an advertisement and or any other message included in at least one conversation graph. In one or more embodiments the context message is identified based on a user selecting a message from a message stream presented via front end module . In other embodiments the context message may be identified as a message including a specified keyword or topic a message returned in response to a search request and or a message associated with an advertisement.

At step the context message is marked as relevant. Marking a message as relevant in one or more embodiments may comprise adding a message ID of the message to a list of relevant messages. In one or more embodiments the list of relevant messages is stored as part of a relevant conversation in conversation repository shown in . Additional messages may be marked as relevant based on one or more of the following criteria and or algorithms.

In one or more embodiments the conversation graph is truncated prior to performing steps to include only 1 the root message 2 the context message 3 all messages connecting the root message to the context message and 4 all direct or indirect children of the context message. In this way the conversation graph is modified to include only a single branch of messages connecting the root message to the context message as well as any number of branches below the context message.

At step a set of authors of messages marked as relevant is identified. It should be noted that some steps of flowchart will be repeated as described below. As such although step indicates that a set of authors of messages marked as relevant is identified the first execution of step may result in only a single author being identified i.e. the author of the context message . In the first execution of step the author of the context message is identified as one of the set of authors of messages marked as relevant since the context message is marked as relevant.

At step a plurality of unmarked messages authored by the set of authors is identified. For example messages in the conversation graph authored by one of the set of authors from step are identified. At step the unmarked messages authored by the set of authors is marked as relevant.

At step parent messages of messages marked as relevant are identified. A parent message of a particular message is a message to which the particular message is in reply. For example if message depicted in is marked as relevant message would be identified as relevant as well since message is depicted as being the child of message indicating that message is in reply to message i.e. message is a parent message of message . At step the parent messages are marked as relevant.

Optionally at step additional messages are marked as relevant based on various criteria and algorithms described below. In one or more embodiments step occurs after step and thus is only performed one time. In other embodiments step is part of the iterated portion of the method and is performed multiple times.

At step it is determined whether convergence has occurred. In one or more embodiments convergence occurs when execution of steps or alternatively result in no additional messages for a particular conversation being marked as relevant. Alternatively in one or more embodiments convergence is deemed to occur after a fixed number of iterations of steps or alternatively . If convergence has not occurred the method proceeds to step . If convergence has occurred then the method proceeds to step .

At step a list comprising the messages marked e.g. identified as relevant is provided. In one or more embodiments the list is presented to a user in a web page via front end module . At step the method ends. For example the list of relevant messages can be presented to a user in an in line expansion of a message stream in response to the user expanding or otherwise engaging with a context message e.g. clicking on a view conversation hyperlink . Alternatively in another example in response to selecting an option to view the relevant messages the user may be redirected from the message stream to a separate pane page or window which includes the relevant messages. Any user interface for displaying or expanding messages may be used in accordance with various embodiments of the invention.

In one or more embodiments one or more relevant conversations are determined each time a particular user request input is received and the response to the user request input is not saved. In another embodiment relevant conversations determined by conversation module are stored in conversation repository for retrieval when messages from the same relevant conversation are requested by a user. For example a relevant conversation determined by conversation module can be stored in conversation repository in any appropriate data structure.

In one or more embodiments of the invention the list of relevant messages is sorted in chronological order of the time the relevant messages were posted to the messaging platform. The list may include an identifier designating the context message.

In one or more embodiments of the invention the list of relevant messages is smaller than the relevant conversation. Thus a predefined number of the relevant messages are returned in response to the request for relevant messages. A subset of an already calculated relevant conversation may be selected for inclusion in the list or the process of selecting relevant messages e.g. the process described in may be terminated upon identifying the predefined number of relevant messages. In one or more embodiments the relevant messages which are chronologically the closest to the context message are selected for inclusion in the list of relevant messages. Thus for example if 11 relevant messages are required for a request the list of relevant messages can include 5 messages posted prior to the context message and 5 messages posted after the context message. In one or more embodiments a first predefined number of messages can be defined for messages chronologically preceding the context message and a second predefined number of messages may be defined for messages chronologically succeeding the context message. Thus for example conversation module can be configured to return a list of relevant messages including 3 preceding messages and 5 succeeding messages. Any combination of preceding and or succeeding messages can be used in accordance with various embodiments of the invention.

In one or more embodiments the size of the list of relevant messages can be dependent on additional context data associated with a request for relevant messages. Examples of additional context data can include but are not limited to client information i.e. information regarding a client which originated the request for the relevant conversation client platform data e.g. operating system version etc. client view information e.g. identification of the pane page view in which the relevant conversation will be displayed and any other data relevant to the request for the relevant conversation. Thus for example conversation module can be configured to return a smaller number of relevant messages i.e. based on a smaller predefined number of messages for a request for requests from a particular mobile client. Thus it may be advantageous to increase or decrease the number of relevant messages based on one or more client restrictions or requirements e.g. limited display area on mobile devices .

In one or more embodiments conversation module is configured to receive a request for additional relevant messages. Conversation module then returns an additional list of relevant messages from the relevant conversation. In one or more embodiments the entire relevant conversation is stored in conversation repository and only a portion of the relevant conversation is returned depending on the given request. For example a list of 10 relevant messages may be returned in response to a request from a mobile client. In this example the relevant conversation is displayed to the user along with an option to expand the conversation upward or downward. Upon receiving a selection of the option to expand the conversation downward the client submits a request for 5 additional relevant messages and conversation module identifies and returns the additional 5 relevant messages i.e. either by identifying the messages in a cached relevant conversation or by performing the process of selecting additional messages from the conversation graph .

Various additional criteria can be used to identify relevant messages in a conversation graph as represented at step in . The additional criteria described below may be used to mark additional messages in a conversation as relevant messages based on auxiliary considerations.

In one or more embodiments relevant participants may be identified based on the current list of messages marked as relevant. Relevant participants may be identified for example based on a relevant participant s account ID field of a message table e.g. relevant participant s account ID of discussed above . In this example all messages from the newly identified relevant participants may be marked as relevant. In one or more embodiments of the invention all accounts associated with e.g. followed by friends with etc. the requesting account or another account associated with a request for relevant messages are marked as relevant. Messages by the associated accounts are then marked as relevant messages. In other embodiments only associated accounts with a minimum number of followers credibility rating or other attribute are marked as relevant.

In one or more embodiments in order to prevent gaps in the relevant conversation additional messages are identified. For example in one or more embodiments of the invention a shortest path may be identified between a particular marked message and a closest marked message in the conversation graph. In this example all messages in the shortest path up to a predefined maximum number of messages are marked. In one or more embodiments of the invention any message in the shortest path may be marked based on a predefined criteria or algorithm. For example a message at a mid point of the shortest path may be marked. In the shortest path a predefined number of the most favorited messages most rebroadcasted messages messages from authors with the highest credibility messages from the most prolific authors and or messages identified using any combination of criteria may be marked in accordance with various embodiments of the invention. In one or more embodiments of the invention a most relevant path between a marked message and a next closest marked message in the conversation graph are identified. A relevance score may be calculated for each node among one or more potential paths between the marked nodes. A path relevance score may be calculated based on the relevance scores of each node in the path. For example the path relevance score may be calculated by aggregating the relevance scores of each node in the path and then multiplying the aggregate by a factor of the total number of nodes in the path. In this example the factor will lower the path relevance score as the length of the potential path increases. Continuing the example the potential path with the highest path relevance score is then selected and the nodes in the path are all marked. In one or more embodiments of the invention the process of marking nodes may end after marking these additional nodes i.e. no other nodes may be marked or conversely additional iterations of the marking process may continue. Any other variation of calculating the node relevance scores and the path relevance scores may be used in accordance with various embodiments of the invention.

In one or more embodiments authors i.e. users and or accounts associated with users that have authored more than a particular number of messages can be identified as prolific authors. Messages authored by prolific authors can be marked as relevant. In addition messages authored by users having a credibility score above a threshold can be marked as relevant. A particular author s credibility score can be calculated algorithmically based on the particular author s relationships and or interaction with other users. For example if a particular user is followed by multiple high profile or prolific accounts the particular user will typically have a high credibility score. A credibility score can be based on a qualitative indicator i.e. low medium high or a quantitative indicator such as a value from 1 to 10.

Authors mentioned in relevant messages can be identified as relevant authors. For example a message including the character string johnqpublic is correct mentions the account johnqpublic . In one or more embodiments if the message is identified as relevant the account johnqpublic will be identified as a relevant author based on the account being mentioned in the relevant message. It should be noted that a user s name e.g. John Public may be used to identify an account mentioned in a message. For example table shown in may be used to determine that user name Keith Jones in record is associated with account ID Keith .

A particular author may also be identified as a relevant author based on the particular author identified as being associated with e.g. followed by friends with etc. an author of a context message. For example record of indicates that adam is followed by keith . In this example adam would be identified as a relevant author with respect to a context message authored by keith .

In one or more embodiments of the invention messages authored by one or more users associated with one or more accounts may be deemed relevant based on context specific data. In other words an account may be relevant with respect to one conversation and non relevant with respect to another conversation depending on the context specific data and criteria used. Examples of context specific data may include but are not limited to a topic of a message one or more keywords e.g. denoted by a hash tag identified in a message e.g. a root message or context message a conversation topic of a conversation including a message a keyword and or topic of a search request and or any other context specific data associated with a request for relevant messages. In one or more embodiments of the invention the conversation module is configured to identify a topic associated with a message e.g. a context message of a request for relevant messages . The conversation module may be configured to submit the text of the message as an input to a semantic analysis module .

In one or more embodiments of the invention semantic analysis module includes functionality to identify one or more topics associated with messages accounts and or conversations. Semantic analysis module may analyze a message based on frequency of a word density of a word connotations of a word semantic equivalents of a word sentiments associated with a word and or any other criteria for categorizing an account message or conversation. In one or more embodiments of the invention semantic analysis module includes functionality to calculate a relevance score representing a relevance of a message account or conversation to a topic. Semantic analysis module may then provide one or more relevance scores to the conversation module in response to a request. The conversation module may utilize the one or more relevance scores to determine a relevance between accounts messages and or conversations. For example the conversation module may identify a high relevance of a conversation to a predefined topic. In this example the conversation module may then identify one or more authors of messages in the conversation with high relevance scores to the same predefined topic. In other words if a conversation has a high relevance score to the topic basketball the conversation module may identify one or more professional basketball players with messages in the conversation graph by virtue of the fact that a basketball player s account may have a high relevance score to the topic basketball . In this example the conversation module then marks one or more messages authored by these high relevance authors as relevant. In one or more embodiments of the invention one or more predefined relevance threshold values may be used to determine if the relevance score is sufficient to designate the author as a high relevance author. Any amount of further relevance analysis may be performed e.g. based on relevance of individual messages of the high relevance authors in the conversation graph to further reduce the number of messages marked as relevant in accordance with various embodiments of the invention.

In one or more embodiments of the invention the conversation module includes functionality to use user graph data stored in connection graph repository to determine degrees of separation between one or more accounts. Relevant authors in a conversation graph may be identified based on a predefined threshold of degrees of separation. For example if a first account is an author of the context message and follows a second account the second account replying to a message authored by a third account can result in the third account being identified as a relevant author. In this example all messages in the conversation graph which are authored by relevant authors can be marked as relevant. Thus in one or more embodiments accounts within a predefined degrees of separation threshold with respect to a user s account and or an account of the context message are marked as relevant accounts.

A message can be marked as relevant based on information related to an author of the message i.e. the account used in authoring the message . In one or more embodiments users can rate a particular user based on various factors such as quality of messages popularity etc. A rating can be assigned to the particular user based on this input. Messages from the particular user can then be marked as relevant based on the user s rating exceeding a predefined threshold rating.

In one or more embodiments users can be verified using various criteria. For example a particular user can be identified as a verified user in response to the user providing proof of identity. Messages by verified users can then be identified as relevant messages.

In one or more embodiments a message can be identified as relevant with respect to a context message based on a higher than expected amount of engagement with the message i.e. the engagement amount exceeding a predefined threshold . For example a typical message may have one or two replies. In this example if a message is determined to have greater than two replies then the message can be marked as relevant based on this relatively higher than expected amount of engagement. In addition messages may be reposted by other users or identified as being found interesting e.g. by being favorited saved or otherwise engaged with etc. . A message which has been reposted and or identified as being found interesting may also be identified as relevant based on the number of reposts and or identifications.

It should be noted that in one or more embodiments data pertaining to users e.g. credibility prolificacy etc. can be stored in connection graph repository . For example a credibility field may be added to records of table shown in . Similarly data pertaining to a message number of replies to number of times identified as interesting etc. can be stored in message repository . For example a number of replies to field can be added to the records of table shown in .

The following section describes various examples of the invention. The examples are included to aid in the understanding of the invention but are not intended to limit the scope of the invention.

In the example of the home stream is displayed by default. Messages and are displayed in the home stream based on account Keith following the accounts brian and adam as shown in table of . Messages and are also displayed in the home stream based on account Keith additionally following the accounts bocci dylan debbie saveearth and news not shown in . The author of each message in one embodiment is identified by the author s avatar followed by the author s account ID. For example message depicts a generic avatar of the author followed by the author s account ID in this case adam . Messages and contain a view conversation link e.g. view conversation link which in this example is a hyperlink which indicates that relevant messages including the corresponding message can be viewed by selecting the hyperlink.

As depicted in message is from account adam and reads I hate football . Message is from account brian is directed towards account adam and reads How can you say that Message is from account brian and is directed to account carrie and reads I love you anyway. In this example other relevant messages which are part of the conversation are not displayed in the home stream because they are posted by accounts which are not followed by account . In addition messages which do not pertain to the conversation are also displayed in the home stream i.e. messages and .

Messages and may appear to not make sense and may not provide a user reading the messages with a complete understanding of the interaction. Further messages can further confuse a reader since these messages are interspersed between messages and and are not related to the conversation. Hyperlink in message indicates that there may be more messages in the conversation which are not included in the current stream or are dispersed throughout the stream. In this example messages and of are depicted as messages and in conversation graph of .

Continuing the example the user selects hyperlink in message in order to view relevant messages. Based on the user s selection of hyperlink message is identified as the context message. Since message corresponds to message of message is marked as relevant based on its selection as the context message.

Continuing the example a plurality of authors of messages marked as relevant are identified. In this example the account brian is identified as an author of a message marked as relevant. A plurality of unmarked messages authored by the plurality of authors is then identified. In this example message is identified as an unmarked message authored by an author of a relevant message i.e. the account brian is the author of message and is marked as relevant.

Continuing the example a plurality of parent messages of messages marked as relevant is then identified. In this example message is identified as the parent of message and message is identified as the parent of message . Since messages and are identified as parent messages of messages marked as relevant messages and are marked as relevant.

Continuing the example based on the marking of messages and it is determined that convergence has not occurred. In other words since additional messages were marked as relevant in the last iteration of the method convergence has not occurred. The process continues by identifying and marking unmarked messages by authors marked as relevant. In this example no additional messages are identified from authors marked as relevant. Next message is identified as a parent message of a message marked as relevant i.e. message is the parent of message which is marked as relevant and is thus marked as relevant.

Continuing the example it is again determined whether convergence has occurred. Since the last iteration produced a relevant message convergence has not yet occurred and the process proceeds. In the final iteration no additional messages are marked as relevant from relevant authors. Furthermore no additional messages are marked as relevant based on being a parent message of a message marked as relevant. As such it is then determined that convergence has occurred and arelevant conversation comprising messages marked as relevant is provided. In this example the relevant conversation comprises messages and of which correspond to messages and shown in .

Systems apparatus and methods described herein may be implemented using digital circuitry or using one or more computers using well known computer processors memory units storage devices computer software and other components. Typically a computer includes a processor for executing instructions and one or more memories for storing instructions and data. A computer may also include or be coupled to one or more mass storage devices such as one or more magnetic disks internal hard disks and removable disks magneto optical disks optical disks etc.

Systems apparatus and methods described herein may be implemented using computers operating in a client server relationship. Typically in such a system the client computers are located remotely from the server computer and interact via a network. The client server relationship may be defined and controlled by computer programs running on the respective client and server computers.

Systems apparatus and methods described herein may be implemented within a network based cloud computing system. In such a network based cloud computing system a server or another processor that is connected to a network communicates with one or more client computers via a network. A client computer may communicate with the server via a network browser application residing and operating on the client computer for example. A client computer may store data on the server and access the data via the network. A client computer may transmit requests for data or requests for online services to the server via the network. The server may perform requested services and provide data to the client computer s . The server may also transmit data adapted to cause a client computer to perform a specified function e.g. to perform a calculation to display specified data on a screen etc. For example the server may transmit a request adapted to cause a client computer to perform one or more of the method steps described herein including one or more of the steps of . Certain steps of the methods described herein including one or more of the steps of may be performed by a server or by another processor in a network based cloud computing system. Certain steps of the methods described herein including one or more of the steps of may be performed by a client computer in a network based cloud computing system. The steps of the methods described herein including one or more of the steps of may be performed by a server and or by a client computer in a network based cloud computing system in any combination.

Systems apparatus and methods described herein may be implemented using a computer program product tangibly embodied in an information carrier e.g. in a non transitory machine readable storage device for execution by a programmable processor and the method steps described herein including one or more of the steps of may be implemented using one or more computer programs that are executable by such a processor. A computer program is a set of computer program instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

A high level block diagram of an example computer that may be used to implement systems apparatus and methods described herein is depicted in . Computer includes a processor operatively coupled to a data storage device and a memory . Processor controls the overall operation of computer by executing computer program instructions that define such operations. The computer program instructions may be stored in data storage device or other computer readable medium and loaded into memory when execution of the computer program instructions is desired. Thus the method steps of can be defined by the computer program instructions stored in memory and or data storage device and controlled by processor executing the computer program instructions. For example the computer program instructions can be implemented as computer executable code programmed by one skilled in the art to perform the method steps of . Accordingly by executing the computer program instructions the processor executes the method steps of . Computer also includes one or more network interfaces for communicating with other devices via a network. Computer also includes one or more input output devices that enable user interaction with computer e.g. display keyboard mouse speakers buttons etc. .

Processor may include both general and special purpose microprocessors and may be the sole processor or one of multiple processors of computer . Processor may include one or more central processing units CPUs for example. Processor data storage device and or memory may include be supplemented by or incorporated in one or more application specific integrated circuits ASICs and or one or more field programmable gate arrays FPGAs .

Data storage device and memory each include a tangible non transitory computer readable storage medium. Data storage device and memory may each include high speed random access memory such as dynamic random access memory DRAM static random access memory SRAM double data rate synchronous dynamic random access memory DDR RAM or other random access solid state memory devices and may include non volatile memory such as one or more magnetic disk storage devices such as internal hard disks and removable disks magneto optical disk storage devices optical disk storage devices flash memory devices semiconductor memory devices such as erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM compact disc read only memory CD ROM digital versatile disc read only memory DVD ROM disks or other non volatile solid state storage devices.

Input output devices may include peripherals such as a printer scanner display screen etc. For example input output devices may include a display device such as a cathode ray tube CRT or liquid crystal display LCD monitor for displaying information to the user a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to computer .

Any or all of the systems and apparatus discussed herein including messaging platform may be implemented using one or more computers such as computer .

One skilled in the art will recognize that an implementation of an actual computer or computer system may have other structures and may contain other components as well and that is a high level representation of some of the components of such a computer for illustrative purposes.

The foregoing Detailed Description is to be understood as being in every respect illustrative and exemplary but not restrictive and the scope of the inventive concept disclosed herein is not to be determined from the Detailed Description but rather from the claims as interpreted according to the full breadth permitted by the patent laws. It is to be understood that the embodiments shown and described herein are only illustrative of the principles of the inventive concept and that various modifications may be implemented by those skilled in the art without departing from the scope and spirit of the inventive concept. Those skilled in the art could implement various other feature combinations without departing from the scope and spirit of the inventive concept.

