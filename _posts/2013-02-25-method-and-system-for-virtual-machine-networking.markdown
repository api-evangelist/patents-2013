---

title: Method and system for virtual machine networking
abstract: Aspects of a method and system for networking are provided. In this regard, one or more circuits and/or processors in a network adapter of a first network device may determine whether to communicate traffic between virtual machines running on the first network device via a path that resides solely within the first network device, or via a path that comprises a second network device that is external to the first network device. The determination may be based, at least in part, on characteristics of the traffic. The determination may be based, at least in part, on capabilities and/or available resources of the network adapter. The determination may be based, at least in part, on management information exchanged between the one or more circuits and/or processors and one or more of: software running on the first network device, the second network device, and a third network device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09311120&OS=09311120&RS=09311120
owner: Broadcom Corporation
number: 09311120
owner_city: Irvine
owner_country: US
publication_date: 20130225
---
This patent application is a continuation of U.S. patent application Ser. No. 12 714 680 filed Mar. 1 2010 which makes reference to claims priority to and claims benefit from U.S. Provisional Patent Application Ser. No. 61 156 186 entitled Method And System For Flexible Virtual Ethernet Bridge VEB filed on Feb. 27 2009.

Certain embodiments of the invention relate to networking. More specifically certain embodiments of the invention relate to a method and system for virtual machine networking.

As the reliance on computer networking continues to grow the need for faster and more efficient networking devices grows with it. However these two goals are often at odds with each other. For example virtualization is a technique that has become very popular for achieving increased efficiency in terms of resource utilization but often has negative impacts in terms of throughput and or latency. In an attempt to improve upon the speed and or latency of virtual machines VMs some network device architectures enable one or more virtual machines running on that network device to communicate directly with a network adapter of that device without the aid of a virtual switch running in that devices in software and without the aid of an external network switch. In this manner latencies and or bottlenecks associated with the software based virtual switch or external network switches are avoided. In this regard functionality such as Virtual Ethernet Bridging VEB enable inter VM communication without the aid of an external network switch and standards protocols such as VEPA enable intra VM communication via a specialized external network switch. However solutions such as VEB and VEPA solve some problems associated with virtualization they do not solve other problems associated with virtualization and in fact creates some additional problems.

Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of skill in the art through comparison of such systems with some aspects of the present invention as set forth in the remainder of the present application with reference to the drawings.

A system and or method is provided for virtual machine networking substantially as illustrated by and or described in connection with at least one of the figures as set forth more completely in the claims.

These and other advantages aspects and novel features of the present invention as well as details of an illustrated embodiment thereof will be more fully understood from the following description and drawings.

Certain embodiments of the invention may be found in a method and system for virtual machine networking. In various embodiments of the invention one or more circuits and or processors in a network adapter of a first network device may determine whether to communicate traffic between virtual machines running on the first network device via a path that resides solely within the first network device or via a path that comprises a second network device that is external to the first network device. The determination may be based at least in part on characteristics of the traffic. The determination may be based at least in part on capabilities and or available resources of the network adapter. The determination may be based at least in part on management information exchanged between the one or more circuits and or processors and one or more of software running on the first network device the second network device and a third network device. The second network device may participate in network management protocols on behalf of the first network device. The management information may be exchanged via an application programming interface API made available by the one or more circuits and or processors.

The traffic may be communicated via the path comprising the second network device in instances that addressing information associated with the traffic is not in an address table of the network adapter. The traffic may be communicated via the path comprising the second network device in instances that the network adapter is unable to perform one or more security functions required for handling the traffic. The traffic may be communicated via the path comprising the second network device in instances that the network adapter is unable to perform one or more management functions required for handling the traffic. In instances that the traffic is communicated via the path that comprises the second network device the second network device may process the traffic and return the processed traffic to the first network device. Processing performed by the second network device may comprise for example looking up the addressing information associated with the traffic in an address table in the second network device performing the one or more management functions required for handling the traffic and or performing the one or more security functions required for handling the traffic.

Also the one or more circuits and or processors may be operable to communicate a copy of the traffic or a report on the traffic to the second network device and the second network device may utilize the copy of the traffic for management operations. One or more tags fields and or headers of the copy of the traffic may enable the second network device to determine that the copy of the traffic is a copy. An indication from the one or more circuits and or processors may enable the second network device to determine that the copy of the traffic is a copy. The indication may be communicated out of band from the copy of the traffic.

For purposes of illustration the network device may be assumed to be a server and the network device may be assumed to be a network switch but these devices are not so limited. That is each of the network devices and could be any suitable networking device comprising a personal computer mainframe mobile device router bridge switch set top box modem and head end.

The network device may be similar in many respects to the network device . In this regard the network device may comprise suitable logic circuitry interfaces and or code for engaging in network communications and processing data in accordance with one or more networking standards. Unlike many conventional switches the network device may be operable to forward traffic via the same port such as the port on which the traffic was received. In this regard the network device may support VEPA or similar protocols. The network device may be operable to function as a management proxy for the networking device . In this regard the network device may be operable to engage in management protocols such as port mirroring spanning tree protocol transparent interconnection of lots of links TRILL and simple network management protocol SNMP on behalf of the network device . That is the network device may interact with the network management entity on behalf of the network device . Accordingly the network device may be operable to exchange management information with the network device and these exchanges may be in band or may be out of band with other traffic communicated between the network devices and .

The network device may also function as a proxy for any other management entity that may desire to manage the network device and or components thereof such as a vSwitch. Such management may comprise for example controlling the configuration of implementing security for collecting statistics pertaining to or providing tools that allow for debugging of the network device or components thereof. In some embodiments of the invention the other management entity may appear to the network device as if it is local to or part of the network device . In other embodiments of the invention the other management entity may appear to the network device as if it is a device independent from the network device and desiring to provide management functions via the network device operating as a proxy.

The network adapter may be coupled to the network device via a link . In this regard the link may enable traffic to be off device that is externally. The link may comprise for example a copper wiring fiber optic cabling one or more wireless channels and or a combination thereof.

The host processor and the host memory may comprise suitable logic circuitry interfaces and or code that may enable processing of data and or controlling of operations for the network device . The host processor may comprise for example an x86 based CPU an ARM or an application specific integrated circuit ASIC . The host memory may comprise for example SRAM and or DRAM that stores data and or instructions. The host processor utilizing the host memory may be operable to run one or more operating systems and or virtual machines VMs and may be operable to run and or be controlled by a hypervisor for managing the operating systems and or VMs. In this manner the host processor utilizing the host memory may be operable to control operation of the various components of the network device . Such components may include a software switch also referred to as a vSwitch employed by the Hypervisor in order to provide inter VM network connectivity and or connectivity between VMs and the network .

The storage may comprise for example a hard drive or solid state memory. The storage may store for example data that may be read written and or executed locally or remotely via the network adapter .

The I O subsystem may comprise suitable logic circuitry interfaces and or code that may be operable to for example communicate information between various components of the networking device . The I O subsystem may comprise one or more standardized busses and one or more bus controllers. Accordingly the I O subsystem may be operable to identify devices on the bus enumerate devices on the bus allocate and de allocate resources for various devices on the bus and or otherwise manage communications on the bus. For example the I O subsystem may be a PCIe system and may comprise a PCIe root complex and one or more PCIe switches and or bridges. In some instances the I O subsystem may be controlled by a hypervisor.

The network adapter may comprise suitable logic circuitry interfaces and or code that may be operable to transmit and receive data in adherence with one or more networking standards. With reference to the OSI model the network adapter may implement physical layer functions data link layer functions and in some instances functions associated with OSI layer and higher OSI layers. Similarly with reference to the TCP IP model the network adapter may be operable to implement network interface layer functions Internet layer functions and in some instances transport layer functions and application layer functions. The network adapter may for example communicate in adherence with one or more Ethernet standards defined in IEEE 802.3 and may communicate with other portions of the network device via the I O subsystem . The network adapter may be enabled to utilize virtualization such that it may present itself to the I O subsystem and or to external devices as multiple network adapters. For example in instances that I O subsystem is a PCIe system the network adapter may support the SR IOV specification. Accordingly the network adapter may interface to the I O subsystem via a physical function PF and or one or more virtual functions VF . In this manner the network adapter may utilize Virtual Ethernet Bridging VEB functionality also known as eSwitch to support direct communication with VMs and may support indirect communication with other VMs via a vSwitch. In this regard VEB functionality may comprise some of the functionality of an IEEE 802.1 compliant switch but may lack some features commonly available in stand alone network switches. For example the address table may be programmed rather than being learned on the fly. The vSwitch may be employed by a hypervisor running on and or controlling the network device . The direct communication with VMs may be via one or more VFs and or PFs and the communication with the vSwitch may be via one or more PFs .

With regard to communication between the VMs conventional network adapters may either handle all such traffic internally utilizing for example VEB or may handle all such traffic via an external switch utilizing protocols such as Virtual Ethernet Port Aggregation VEPA VNTag and Port Extender. In this regard various tradeoffs may factor into a determination of whether to handle inter VM traffic internally on a network adapter utilizing functionality such as VEB or to handle inter VM traffic externally utilizing protocols such as VEPA. For example as compared to a conventional network adapter an external device may have more resources to support more features e.g. support for access control lists ACLs debug functionality and capability of being supported by many standard network management tools. In this regard including such features on the network adapter would add prohibitively to the cost and complexity of the network adapter. On the other hand switching and processing traffic in an external device rather than in a network adapter consumes more network bandwidth and adds latency. The vSwitch may consume CPU cycles for its operation and may introduce more latency as compared with direct communication utilizing VEB functionality of the network adapter.

Accordingly the network adapter utilizing an entity for flexible virtual machine communications achieves an optimal balance between parameters such as latency external bandwidth CPU utilization and hardware cost complexity by being operable to implement features that are not implemented on conventional network adapters and being operable to interact with other entities such as a hypervisor or external device like the network device to implement additional features. The network adapter may be operable to handle inter VM traffic in a variety of ways and the manner in which the traffic is handled may depend on a variety of factors. In this regard traffic may be handled e.g. switched encrypted decrypted authenticated etc. internally on the network adapter handled externally on the network device handled based on resources and or capabilities of the network adapter and or handled based on an interaction between the network adapter and the external network device . The manner in which inter VM traffic is handled may for example be determined on a per packet or per dataflow basis.

Also the network adapter may be operable to in some instances or for some traffic forward inter VM traffic internally and send a copy or report of the inter VM traffic to an external device such as the network device . Copying and or reporting on inter VM traffic is discussed below with respect to .

The vSwitch may forward traffic to and from the VMs via the drivers and the vSwitch may comprise resources that are shared among the plurality of VMs . The drivers when operating in a mode supportive of vSwitch operation may not be directly coupled in hardware to the network adapter and thus processor cycles may be required for communication between the vSwitch and the VMs and scheduling delays may take place before communication is performed. As a result there may be overhead associated with traversing the vSwitch and data rates at which the VMs may communicate may be relatively limited as compared to data rates at which the VMs may communicate. Conversely dedicated resources adapted to interact directly with the network adapter for the purpose of data transfer such as drivers may be allocated to the VMs such that communications between the VMs and the network adapter may bypass the vSwitch . In this manner overhead associated with the vSwitch may be eliminated and it may appear as if there is a direct connection between the VMs and the network adapter except potentially for configuration and or some other control operations that may have to traverse the vSwitch and the network adapter PF. Such a direct data connection may be achieved by for example use of dedicated bi directional queues.

Thus the VMs may support higher data rates lower latencies and have lower host CPU overhead for communication than the VMs . However there are a variety of reasons why the network device would still want to support VMs such as which utilize a vSwitch. For example the VMs require more hardware and thus there may be a point where supporting more VMs becomes impractical in terms of cost or complexity of the network device whereas additional VMs may be supported through software. Also legacy devices and or components may lack support for the . Accordingly the network device may support both types of VMs and a particular task or function to be performed may dictate which type of communication will be available for a given VM. For convenience the VMs are referred to herein as vSwitched VMs and the VMs are referred to as direct VMs. 

The Entity for Flexible Virtual machine Communications EFVC may comprise suitable logic circuitry interfaces and or code that may enable communication of management information between the network adapter and various other entities. For example as indicated by the arrow management information may be communicated between the EFVC and internal entities which comprise entities internal to the network device such as the hypervisor and or any other internal management entity. Additionally or alternatively as indicated by the arrow management information may be communicated between the EFVC and external entities which comprise entities external to the network device such as the network device and or any other external management entity. Communication of management information may be in band with other traffic communicated to and or from the network adapter . Additionally or alternatively management information may be conveyed out of band with other traffic via a dedicated physical and or logical channel for example. For example management information may be communicated to and from the network adapter via an application programming interface API . That is an EFVC may expose an API to one or more internal and or external entities and the entities may utilize the API to configure or control the network adapter .

The EFVC may also comprise suitable logic circuitry interfaces and or code that may be operable to handle traffic to and or from the VMs and or VMs . For example the EFVC may be operable to perform packet switching and other packet processing functions such as enacting Access control lists ACLs traffic mirroring collection of statistics deciding where to perform packet switching for a given packet encryption decryption authentication etc. The manner in which the EFVC handles traffic may be configured and or controlled based on the communicated management information based on resources of the EFVC resources and or based on the how resources of the EFVC are allocated. Such information may comprise for example address table s that comprise information e.g. MAC and or VLAN addresses for forwarding unicast and or multicast traffic access control lists world wide names iSCSI qualified names Fiber Channel over Ethernet FCoE world wide names Ethertypes e.g. Ethertypes used for FCoE Initialization Protocol FIP statistics error information and or other information associated with one or more of the VMs and or VMs . The address table s may comprise information that may be utilized to determine which ports and or VMs are associated with or subscribed to various VLAN MAC IP multicast and or other network addresses and may be accessed to determine where to forward traffic.

In operation the EFVC may engage in communications of management information and may handle traffic based on the management information. In this manner another entity such as the network device or the hypervisor may act as a management proxy for the network adapter .

An exemplary sequence of steps in such management via the network device may proceed as follows. First management information may be communicated between the EFVC and the network device . Such communications may be via an API and or dedicated management channel for example. Such communications may comprise for example information to configure and or control mode of operation of the EFVC and the network device . In this regard such communications may comprise an exchange of the capabilities of the EFVC and communication of the capabilities of the network device to support the EFVC . In this manner it may be ensured that the network device and EFVC are compatibly configured. This exchange may be done in band and or out of band and may use one or more standard protocols such as extensions to LLDP and or DCBX. Second the network device may provide and or retrieve the management information in accordance with a management protocol such as link layer discovery protocol LLDP and or data center bridging exchange DCBX to the network management entity . Next the network management entity or virtualization related management entity e.g. Vcenter or SCVMM may make management decisions based on the management information. The network management entity may then generate corresponding management information based on the decisions and communicate the generated management information to the network device to configure the network device and the EFVC into compatible modes of operation for handling inter VM traffic. The communication from the network management entity to the network entity may be in accordance with a management protocol such as DCBX and or extensions to LLDP and or DCBX. The network device may then communicate the decision and or corresponding configuration information to the EFVC .

Another exemplary sequence of steps in such management via the network device may proceed as follows. First management information may be communicated between the EFVC and the network device . Such communication may be via an API and or dedicated management channel for example. Such information may comprise for example historical expected and or statistical information about inter VM traffic that has been and or may be handled in the network adapter . Second the network device may provide and or retrieve the management information in accordance with a management protocol such as DCBX SNMP to the network management entity . Next the network management entity or virtualization related management entity may make management decisions based on the management information. The network management entity may then generate corresponding management information based on the decisions and communicate the generated management information to the network device . The communication from the network management entity to the network entity may be in accordance with a management protocol such as DCBX and or some extensions to LLDP and DCBX and or SNMP. The network device may then communicate the decision to the EFVC .

The management information may be utilized by the EFVC in determining how to handle traffic. In this regard some and or certain traffic may be handled within the network device as is described with respect to for example and some of the multicast traffic described with respect to some and or certain traffic may be handled via the network device as is described with respect to for example and some of the multicast traffic described with respect to and some and or certain traffic may be handled internally while copies of the traffic and or information pertaining to the traffic may be forwarded to the network device as is described with respect to . In this regard filters and or rules established by a network administrator and or network management entity may determine how traffic is handled.

The network administrator and or network management entity may be free to select the services processing criteria desired for traffic which in turn may determine at least in part how and where traffic is handled. In this regard a manner in which particular traffic is handled may also depend on characteristics of the network adapter as well as characteristics of traffic being handled. As a result the device in which particular traffic is handled may vary depending on the traffic. For example whether switching of particular traffic takes place in the network adapter the network device or in some instances the vSwitch may vary depending on the traffic. With regard to the characteristics of the network adapter the manner in which traffic is handled may depend on for example hardware and or software resources present in the network adapter and how the resources have been allocated. With regard to characteristics of the traffic the manner in which it is handled may depend on for example a dataflow that the traffic is associated with a value in one or more fields of the traffic such as a source address field a destination address field or any other field an ACL or other security mechanism debug information associated with the traffic whether or not the traffic was mirrored or is to be mirrored latency requirements associated with the traffic and or bandwidth allocated and or required for the traffic and or admin commands for certain services such as switched port analyzer SPAN or remote SPAN RSPAN information. In some instances a user or admin could employ tools to identify the switching location of particular traffic.

As a result of the flexibility with which the network adapter can handle traffic an optimal balance may be achieved between latency network bandwidth and or network congestion on one hand and complexity of the network adapter on the other. That is the network adapter may handle a substantial portion of inter VM traffic internally thus reducing network congestion but also enable more complex services enable scaling to a larger number of VMs and or enable scaling to a larger number of services by utilizing an external device to handle some traffic.

In addition to decisions about how to handle traffic the management decisions may comprise for example determining whether to instantiate one or more VMs on the network device determining whether to migrate one or more VMs to and or from the network device to balance the load on the network determining whether to modify information in address tables or similar data structures making decisions regarding network security and other decisions working in cooperation with the hypervisor or an entity that manages the hypervisor.

The EFVC may store management information such as address tables containing for example MAC addresses and or VLAN tags including priority information access control lists other similar information and or other related information such that the EFVC is operable to appropriately forward unicast traffic. In this regard in some instances the EFVC may be operable to learn management information such as address tables on the fly in a manner which may be similar to that of a conventional network switch. However in some instances the information in the EFVC may be populated by a management entity via the hypervisor and or the network device .

In the exemplary scenario depicted in an address table of the EFVC may be sufficient to support all of the VMs and VMs . That is the EFVC may know the port through which to forward traffic destined for any of the VMs and VMs . Accordingly the EFVC may be operable to forward such unicast traffic as indicated by paths and without the need to flood the traffic onto unnecessary ports. As for traffic between VMs such traffic may be handled by the vSwitch as indicated by path .

In the path does not comprise an external device such as the network device . Consequently in order for the network management entity to be aware of the traffic on path the hypervisor may communicate management information regarding such traffic to the network management entity or another management entity. In this regard the hypervisor may provide such information directly to the network device and or may provide such information via the EFVC . In the latter case the hypervisor may communicate the management information to the EFVC and information may in turn be communicated from the EFVC to the network management entity via the network device .

In the scenario depicted in an address table of the EFVC may be sufficient to support all of VMs but may not be sufficient to support all of the VMs . That is the EFVC may not know the port through which to forward traffic destined for one or more of the VMs . However rather than flooding such traffic to all ports the EFVC may as indicated by path forward such traffic to the network device . The network device when operating in VEPA mode may know that the traffic is destined for an entity e.g. a VM on the network device and thus send back to the EFVC . Upon return of the traffic to the EFVC the EFVC may since it knows the address for all of the VMs determine that the traffic is not destined for any of the VMs and may forward the traffic only to the vSwitch thus avoiding the need for flooding the traffic onto unnecessary ports. In this regard as compared to a conventional switch which may flood all ports when it does not know the port through a destination may be reached the EFVC interacting with the network device reduces or eliminates instances when such flooding is necessary.

The EFVC may store management information such as address tables access control lists other similar information and or other related information such that the EFVC is aware of the paths and and operable to appropriately forward traffic along the paths and . In this regard in some instances the EFVC may be operable to learn management information such as address tables on the fly as a conventional network switch may do. However in some instances the information in the EFVC may be populated by the management entity via the hypervisor and or the network device .

The path does not comprise an external device such as the network device . Consequently in order for the network management entity to be aware of the traffic on path the hypervisor may communicate management information regarding such traffic to the network management entity or another management entity. In this regard the hypervisor may provide such information directly to the network device and or may provide such information via the EFVC . In the latter case the hypervisor may communicate the management information to the EFVC and information may in turn be communicated from the EFVC to the network management entity via the network device . Thus such information may be communicated along the path while the network device and the EFVC are configured into modes that utilize protocols such as VEPA VNtag and Port Extender. However it the path may also be used in instances that the EFVC runs out of resources to handle inter VM traffic internally.

For handling multicast traffic the EFVC may store management information such as address tables other similar information and or other related information such that the EFVC may be operable to appropriately forward multicast traffic. In this regard the information in the EFVC may be populated by the hypervisor and or by the network management entity via the network device . In various embodiments of the invention such address tables may be of limited capacity and thus the EFVC may be operable to take advantage of services and or functions provided by the network device to extend the capabilities of the EFVC for handling multicast traffic.

In the scenario depicted in an address table of the EFVC may be sufficient to support all of the VMs . That is the EFVC may know a port via which each of the VMs is reachable. Accordingly as shown by path for multicast traffic emanating from one of the VMs the vSwitch may forward the traffic to any one or more of the VMs to which the traffic should be forwarded and the EFVC may forward the multicast traffic to any one or more of the VMs to which the multicast traffic should be forwarded. Multicast traffic destined for devices external to the network device may be sent to the network device .

However in the scenario depicted in an address table of the EFVC may not be sufficient to support all of the VMs . For example the EFVC may not know how to reach VM . Accordingly the network device may be used to extend the capabilities of the EFVC on an as needed basis. Thus as shown by path for multicast traffic emanating from one of the VMs the vSwitch may handle forwarding the multicast traffic to any one or more of the VMs that should receive the traffic and the EFVC may send the multicast traffic destined for the VM to the network device . The network device when operating in VEPA mode may know that the traffic is destined for the network device and may thus send the traffic back to the network device . The EFVC may then send the traffic to any one or more of the VMs that it determines may have subscribed for the multicast traffic or the EFVC may flood the traffic to all of the VMS . Thus the scenario of illustrates instances in which excessive copies may be received by some of the VMs . However the EFVC may guarantee the originator of the multicast traffic is not copied by checking the source address and not sending it to the originator in instances that the originator was one of the VMs . In this manner no duplicates or feeding back to the source will occur. Furthermore the scenario described with respect to may be the only scenario in which excessive copies are received. Thus the EFVC may improve handling of multicast traffic over conventional network adapters by reducing the amount of multicast traffic sent to ports which are not supposed to receive the traffic. Moreover in some embodiments of the invention scenarios such as the one in may be reduced or eliminated by the EFVC tagging the multicast traffic prior to sending it to the network device . In this regard upon receiving the multicast traffic back from the network device the tag s will enable the EFVC to know which VMs have already received the traffic.

In some instances the corresponding traffic communicated along paths and may comprise for example a replica of each packet of the inter VM traffic replicas of selected packets of the inter VM traffic replicas of portions such as a header or payload of each packet of the inter VM traffic and or replicas of portions such as a header or payload of selected packets of the inter VM traffic. In this manner the traffic on the path or a portion thereof may be copied to the hypervisor and or the network device . In turn the hypervisor and or the network device may make information regarding inter VM traffic in the network device available to an external network management entity . In some instances the corresponding traffic may be modified or otherwise marked such that it may be differentiated from the original traffic. Additionally and or alternatively the traffic communicated along the paths and may not be a copy of traffic on the path but rather may report on the traffic communicated via the path . For example the traffic along paths and could be a summary and or simple notification messages requiring little bandwidth and or processing resources.

Copying or reporting of inter VM traffic may be for network management purposes. In this regard when the network device routes inter VM traffic internally the traffic may otherwise be unknown to the network management entity and thus the network management entity would not be able factor such traffic into network management operations where such operations comprise for example configuring how the network adapter handles inter VM traffic determining whether to instantiate and or migrate VMs to balance loads in the network collecting network statistics and debugging of network problems or provide security services such as ACL or similar.

In band and or out of band mechanisms may be utilized by an entity receiving the copied traffic e.g. the hypervisor and or the network device to determine that the traffic is copied. An in band mechanism may comprise for example flagging marking and or otherwise modifying the copied traffic to indicate that it is a copy. An exemplary out of band mechanism may comprise a signal message and or other notification sent to the entity prior to and or via a different channel than the copied traffic. For example the out of band notification may configure the network device into a VEPA mode and may configure other services e.g. ACL processing mirroring address table extensions etc. of the network device . Such configuration may allow the network device to process the traffic received from the EFVC and provide the necessary and or desired services for processing of a packet and then take appropriate action. Such appropriate action may comprise for example sending the packet back to the EFVC such that the EFVC may then need only forward the processed packet to its destination send it to another device for debug and or additional processing and or drop the packet. For example the out of band notification may configure the entity into a mode of operation in which all traffic is handled as copied traffic until a subsequent notification is received. For another example the out of band notification may configure the entity into a mode of operation in which particular traffic such as the next K packets where K is an integer is handled as copied traffic. Similarly the out of band notification may configure the entity into a mode of operation in which traffic received during a particular time interval or traffic received via a certain port is handled as copied traffic. Furthermore copied traffic may be handled in a variety of ways. For example the hypervisor and or network device may determine that the copied traffic need not be forwarded to another network device should only be forwarded to a network management entity and or that a summary of the copied traffic should be forwarded to a network management entity

Although illustrates unicast traffic between direct VMs and paths similar to paths and may also be utilized for other unicast and or multicast traffic to and or from eSwitched VMs and or direct VMS . For example for traffic between switched VMs and the hypervisor may forward copies to the EFVC and or the network device .

Additionally although illustrates the network device providing mirroring services and or functionality the invention is not so limited. In this regard any other EFVC services may be extended by use of network device or use of vSwitch and or its associated software or APIs. Similarly the EFVC may be used to extend the services provided by the vSwitch .

In step the inter VM traffic may be forwarded to the network device via port of the network device . In step the network device may process the inter VM traffic in accordance with rules established by a user and or admin and to provide services and or functionality that the EFVC was unable to provide. In step the network device may determine that the traffic is destined for a VM on the network device and may accordingly forward the traffic back to the network device via the port . Also during step the network device may generate and or update information that may be utilized for network management. For example the network device may update a table that stores statistical information regarding traffic patterns in the network. Additionally during step prior to forwarding the network device may provide services which are not implemented and or enabled on the network adapter . For example the network device may perform complex processing associated with implementing one or more security protocols. In step the traffic may be received by the network adapter and may be forwarded to the destination VM.

Returning to step in instances that the traffic is to be handled internally the exemplary steps may advance to step . In step it may be determined whether the network adapter has been configured to forward copies of or to report on the inter VM traffic. If the network adapter has not been configured to send copies and or reports then in step the traffic may be communicated to the destination VM. If the network adapter has been configured to send copies and or reports then in step the traffic may be communicated to the destination VM and a copy of the traffic or report regarding the traffic may be communicated to for example the hypervisor and or network device . The copy and or notification may be subsequently communicated to a network management entity .

In step it may be determined whether the traffic is destined for traffic destined for one or more of the VMs and . In instances that the traffic is destined for one or more of the VMs and then in exemplary steps may advance to step . Also in instances that the traffic is destined for one or more of the VMs and the EFVC may send a copy or report of the traffic to the network device and or the hypervisor . In such instances an in band and or out of band notification may be sent such that the network device and or hypervisor knows and is configured to handle the copied traffic.

Returning to step in instances that the traffic is not destined for one or more of the VMs and then in the exemplary steps may advance to step .

In step the traffic may be sent to the network device . In some embodiments of the invention an out of band notification may be sent to the network device during and or prior to step to configure the network device in a mode for handling such traffic. For example such a notification may configure the network device into a VEPA mode. Subsequent to step the exemplary steps may advance to step .

In step the network device may utilize its resources which may be greater than the network adapter to determine where to forward the traffic. In this regard it may be such that the EFVC has the addressing information for VMs but not for VMs and thus exemplary step may be reached for traffic that is destined for one of more of the VMs . In such instances the network device may forward the traffic back on the port via which it was received. Consequently the EFVC upon received the same traffic via the same port may be operable to determine that the traffic must be destined for one or more of the VMs may forward the packet to the vSwitch. Alternatively the network device may provide an out of band notification to the EFVC to update the address table of the network adapter such that the EFVC knows where to forward to. In instances that the destination is external to the network device then the network device may forward the traffic via one or more appropriate ports different from the port on which the traffic was received.

Returning to step in instances that the destination address is not found in the address table of the network adapter then the exemplary steps may advance to step .

In this manner the network adapter may more handle the traffic more efficiently than a conventional network device which may simply flood the traffic to all VMs as well as to the network device .

Similar to the above description with regard to address tables traffic may be handled in a similar manner based on an access control list ACL or other security mechanism. In this regard in instances that the EFVC has sufficient resources to implement an ACL and or other security mechanism the management entity may communicate via the network device and or hypervisor the ACL information to the EFVC and the EFVC may handle traffic e.g. determine whether to forward or drop traffic in accordance with the ACL and or other security mechanism. Alternatively when the EFVC does not have sufficient resource available to store and or implement an ACL or other security mechanism the EFVC may send the relevant traffic e.g. traffic for which the EFVC is uncertain as to the applicability of the ACL to the network device . The network device in a VEPA mode may then handle the traffic in accordance with the ACL and then return the traffic to the EFVC .

Aspects of a method and system for virtual machine networking are provided. In an exemplary embodiment of the invention an EFVC residing in the network adapter of the first network device may comprise one or more circuits and or processors that may be operable to determine whether to communicate traffic between two or more of VMs and or via a path such as paths and that resides solely within the first network device or via a path such as path that comprises the second network device . The determination may be based at least in part on characteristics of the traffic. The determination may be based at least in part on capabilities and or available resources of the network adapter . The determination may be based at least in part on management information exchanged between the EFVC and one or more of software such as hypervisor running on the first network device the second network device and or a third network device. The second network device may participate in network management protocols on behalf of the first network device . The management information may be exchanged via an application programming interface API made available by the one or more circuits and or processors.

The traffic may be communicated via the path comprising the second network device in instances that addressing information associated with the traffic is not in an address table of the network adapter . The traffic may be communicated via the path comprising the second network device in instances that the network adapter is unable to perform one or more security functions required for handling the traffic. The traffic may be communicated via the path comprising the second network device in instances that the network adapter is unable to perform one or more management functions required for the traffic. In instances that the traffic is communicated via the path that comprises the second network device the second network device may process the traffic and return the processed traffic to the first network device . Processing performed by the second network device may comprise for example looking up addressing information associated with the traffic in an address table of the second network device performing the one or more management functions required for handling the traffic and or performing the one or more security functions required for handling the traffic.

Also the EFVC may be operable to communicate a copy of the traffic or a report on the traffic to the second network device and the second network device may utilize the copy of the traffic for management operations. One or more tags fields and or headers of the copy of the traffic may enable the second network device to determine that the copy of the traffic is a copy. Additionally or alternatively an indication from the EFVC may enable the second network device to determine that the copy of the traffic is a copy. The indication may be communicated out of band from the copy of the traffic.

Another embodiment of the invention may provide a machine and or computer readable storage and or medium having stored thereon a machine code and or a computer program having at least one code section executable by a machine and or a computer thereby causing the machine and or computer to perform the steps as described herein for virtual machine networking.

Accordingly the present invention may be realized in hardware software or a combination of hardware and software. The present invention may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

The present invention may also be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

While the present invention has been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the present invention without departing from its scope. Therefore it is intended that the present invention not be limited to the particular embodiment disclosed but that the present invention will include all embodiments falling within the scope of the appended claims.

