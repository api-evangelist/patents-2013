---

title: Determining location and direction of travel using map vector constraints
abstract: Systems, methods, and computer program products for determining the location and direction of travel of a mobile device using map vector constraints is disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09429437&OS=09429437&RS=09429437
owner: Apple Inc.
number: 09429437
owner_city: Cupertino
owner_country: US
publication_date: 20130607
---
This application claims the benefit of priority of U.S. Provisional Application No. 61 657 695 for Determining Location and Direction of Travel Using Map Vector Constraints filed Jun. 8 2012 which provisional patent application is incorporated by reference herein in its entirety.

Many modern smart phones and other mobile devices e.g. electronic tablets include navigation subsystems for allowing a user to track their location or the location of others on a digital map. Satellites cell towers or network access points e.g. Wi Fi can be used to acquire position data to locate a user on a road in a map database. Using the map database the navigation system can give directions to other locations along roads also in the map database. Dead reckoning using data from sensors e.g. accelerometers gyroscopes can be used to compute position data when position data is unavailable e.g. lost satellite signals due to multipath or loss of line of sight .

A map database represents a road network and its associated features. Some examples of features include nodes links and areas. Each feature can have attributes such as location coordinates shape addresses road class speed range etc. Other information associated with the road network can also be included in the map database such as points of interest building shapes and political boundaries. Map databases can be provided in standardized file formats such as Geographic Data Files GDF .

In the map database each node can represent a point location of the surface of the Earth and can be defined on the a map by a pair of longitude and latitude coordinates. Each link in the map database can represent a stretch of road between two nodes. Links can be represented by a line segment corresponding to a straight section of road or a curve having a shape that can be described by shape points along the link. Curves in the road can be represented by a combination of centroid point or node with a radius and polar coordinates to define the boundaries of the curve. Like nodes shape points can be defined by longitude and latitude coordinates. Shape points however do not connect links. Areas can be two dimensional shapes that represent things or places such as parks cities and blocks. Areas can be defined by boundaries usually formed by a closed polygon.

Systems methods and computer program products for determining the location and direction of travel of a mobile device using map vector constraints is disclosed. In some implementations a method comprises performing particle seeding on a road network surrounding a set of measurements propagating the particles along the road network calculating relative particle weights resampling the particles computing a particle filter solution comparing the particle filter solution with an instantaneous matcher and calculating a map match given the particles.

Particular implementations disclosed herein provide one or more of the following advantages 1 activity context is used in a map matching process to better assess the hypothesis that the mobile device is on the map to adapt the process used to determine the probability of a specific snap point by potentially favoring direction of travel information when the mobile device is mounted to a vehicle and to adapt the map matching behavior based on user activity 2 Wi Fi locations are fed when available and appropriate to a Global Navigation Satellite System GNSS receiver as tightly coupled position assistance to improve the ability of the GNSS receiver to reject bad GNSS pseudorange and or Doppler measurements and 3 map matched locations that meet certain acceptability criteria are fed to the GNSS receiver as tightly coupled position assistance to improve the ability of the GNSS receiver to reject bad GNSS pseudorange and or Doppler measurements.

The details of the disclosed implementations are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

Map matching includes constraining position and velocity information to a network of road links. A road link can be described by a sequence of linear line segments. Each linear line segment can be a simple vector defined by two sets of coordinates and . Coordinates can be defined with respect to a reference frame e.g. WGS84 Earth centered Earth fixed ECEF reference frame for convenient use with a GNSS such as the Global Positioning System GPS .

Note that most GPS receiver estimation processes output a and b scaled by 2.45 to achieve a confidence region with a 95 probability level. The covariance matrix can be recovered from the parameters a b using Equation 3 given by

In the event that only horizontal distance root means square DRMS uncertainty which has a 63 68 confidence region is available from the GPS receiver the following covariance matrix should be used. 0 2 2 4 

Often the GPS velocity information is provided as speed and direction of travel rather than velocity in the east and north directions. The direction of travel can be defined as the clockwise azimuth angle from true north. This relationship is given by

The quality of an instantaneous map match can be given by the weighted combination of the distance to the road link point and the difference between the road link azimuth and the GPS direction of travel azimuth with respect to truth north . This can be expressed in probabilistic terms by evaluating the following multivariate normal distribution given by

The term may not be output by the GPS estimation process. Since is derived as a function of the GPS velocity its variance is a function of the magnitude of the GPS velocity. Hence there is an inverse exponential relationship between and GPS speed. In non driving cases is not useful below speeds of 2 to 3 m s and may likely just be an erroneous input. However in driving cases is a filtered quantity that is the propagated direction of travel and may be useful even when static. Care should be taken to make more use of when speeds are low when driving. One means of accomplishing this would be to only allow to be used when the driving context is know and the GPS speed is below 2 3 m s while the GPS position uncertainty is also below a threshold value e.g. 30 m given by . 12 

If the user s device is mounted in a vehicle and angle measurements e.g. gyro measurements are available then these angle measurements can be used in the GPS estimation process to output an enhanced course measurement. In this case the variance of the course measurement is not necessarily a function of the GPS speed. The provided by the GPS estimation process may be used.

Note that there are three special cases including two special cases case 2 and case 3 that require the application of the limit theorem. The unit for a is radians.

The relative likelihood of a map match with respect to all other considered map matches in a set can be given by Equation 16 

In some implementations process can begin by performing particle seeding on a road network surrounding a first set of measurements propagating the particles along the road network calculating relative particle weights resampling the particles computing a particle filter solution comparing the particle filter solution with an instantaneous matcher and calculating a best map match given the particles . Each of these process steps is described in more detail below.

A particle is a spatial object that is constrained to the allowable map state space and contains the following information 

The particle filter can be initialized given road map data and initial measurements from the set including position latitude and longitude direction of travel GPS course and speed. This seeding can be referred to as the calculation of the instantaneous scored method.

Road map data is comprised of linear line segments. For each of the line segments within a distance d of the position measurement the point on the line segment that is closest to the position can be evaluated using p z x given by Equation 6 . These points can be used to assign particles using the following steps 

Particles can be propagated in a one dimensional sense along road links and across intersections. This propagation is governed by Equation 17 

At the first epoch all the particles are located at distance d 0. There are 100 particles which are propagated along the link based on the following information.

At the first epoch all the particles are located at distance d 0. There are 1000 particles which are propagated along the link based on the following information.

The moving not moving indication computed by context detection using on device motion sensors e.g. accelerometers can be used to force the velocity used in the prediction step to zero and to reduce the process noise used in the prediction step. If static the following applies.

Particles are propagated along road links until they hit an intersection. Particles are propagated onto new links following the intersection using the following concepts.

The update step includes calculating the relative particle weights given a new set of measurements and resampling of the particles.

Following the prediction step particles are updated based on the set of available measurements including position by computing p z x and wfrom Equations 6 and 16 respectively.

If activity detection using motion sensors e.g. accelerometers is enabled and pedestrian motion is detected it is important that the calculation of p z x and wdo not use course information.

The above method is described in for example Simon D. Optimal State Estimation John Wiley and Sons Inc. 2006 p. 467 and in Ristic B. S. Arulampalam and N. Gordon Beyond the Kalman Filter Particle Filters for Tracking Applications Artech House 2004 p. 41. Each of these references is incorporated by reference herein in its entirety.

Every few epochs the solution should be checked for complete sample impoverishment or solution depletion. This could occur for various reasons include accumulated errors in particle prediction travel over an undocumented road link e.g. across a parking lot map errors etc. The check is accomplished by running the particle filter initialization steps in a parallel solution up to step 12 . The current particle filter solution is compared to the best and second best solutions from the initialization method using a ratio test. If the ratio test exceeds a threshold value then the particle filter is re seeded with this information.

The challenge in solution extraction is that the particles can be distributed across connected links. If single links are compared independently then an erroneous solution could be extracted. This problem is illustrated by and .

In the best solution is clearly the union of the particles across the connected links rand r. If individual links only were considered then the first moment mean of the particles on rwould be selected as the most likely solution.

In the solution is most likely within the intersection of rand r and it is clear that only using individual links does not provide the most likely solution. The concept of solution union across connected links is not quite this simple as particles could be spread far along both connected links. Thus the first and second movements of the particle distributions along two connected links are used to detect potential solution union. This concept is illustrated in . Note that solution from the union between only two links is considered. This is based on the fact that a user always moves from one link to one other link. It may be that the particles are spread amongst all the outgoing links of an intersection but it is likely that the single union between the two most likely links will be a higher relative likelihood solution than a solution that is not part of the intersection.

If the best solution is part of the union with the second best solution then special intersection logic applies. The desired behavior is to create lag in the filtered output so that the solution is biased to the intersection entry until enough information is present to leave the intersection and transition onto the correct road. These additional steps apply.

A well designed particle filter will run with a low level of solution degeneracy. A suitable measure of degeneracy is the effective sample size N which is given by

If the user is not on the road then the assumption that the solution is constrained by the road network is incorrect. This case can be handled with a state machine that has entry and exit criteria for On Road versus Off Road. The criteria to reach the Off Road state are tested first and include 

If the Off Road state is not achieved then the On Road state criteria are tested. The entrance and exit for On Road state include the following conditions 

Roads can be represented in a map database by a vector along the centerline of the road. Given an estimated position input e.g. GPS data we want to evaluate candidate road points given the input and road width information. Due to an error in position estimate e.g. GPS position estimate a position estimate can be located off the road. In these cases a candidate road point can be located on the road but not on the centerline by moving the estimated position a distance d to a point on the road. Referring to the geometry shown in assuming only cross track error the distance d is given by square root over 23 24 where r is known road width and dE and dN are changes in direction in the east and north directions respectively due to the position estimate. Roads can be classified in the system where each road has a known width e.g. a freeway road class . Cases where there is an along track error can be similarly evaluated based on geometry. This allows evaluation of candidate road points on the road rather than on the road centerline.

In most cases it may not be desirable to snap a pedestrian to a road. However there are instances when GPS data is prone to error such as in a dense urban environment. In these cases a delta value can be added to a GPS position estimate to snap the pedestrian onto the road and thus constrain the solution to be on the road. In some implementations an example delta value can be x times e.g. x 3 the road width r.

In some implementations logic can be used to assist map matching when the device is in a dense urban environment. For example a GPS receiver operating in a lower power mode could indicate that the device is in a dense urban environment. A lack of access points in a WiFi scan result could also indicate that the device is in a dense urban environment. In some implementations pattern recognition algorithms can be applied to GPS signal strength to determine when the device is in a dense urban environment. Other logic for indicating GPS error prone environments is also possible.

The processes described above can be performed by map matcher module . Map matcher can be implemented in software firmware hardware or any combination of these. Map matcher receives map network information turn by turn routing data and activity context data . Map matcher processes this information as previously described in reference to and outputs map matching results to location manager .

Location manager receives map network information WiFi location data and altitude data . Location manager communicates with GPS module which receives sensor data from motion sensors such as accelerometers and gyros for example. Location manager outputs user location data to other applications.

In some implementations devices and can communicate over one or more wired or wireless networks . For example wireless network e.g. a cellular network can communicate with a wide area network WAN e.g. the Internet by use of gateway . Likewise access device e.g. IEEE 802.11g wireless access device can provide communication access to WAN . Devices can be any device capable of displaying GUIs of the disclosed content authoring application including but not limited to portable computers smart phones and electronic tablets. In some implementations the devices do not have to be portable but can be a desktop computer television system kiosk system or the like.

In some implementations both voice and data communications can be established over wireless network and access device . For example device can place and receive phone calls e.g. using voice over Internet Protocol VoIP protocols send and receive e mail messages e.g. using SMPTP or Post Office Protocol 3 POP3 and retrieve electronic documents and or streams such as web pages photographs and videos over wireless network gateway and WAN e.g. using Transmission Control Protocol Internet Protocol TCP IP or User Datagram Protocol UDP . Likewise in some implementations device can place and receive phone calls send and receive e mail messages and retrieve electronic documents over access device and WAN . In some implementations device or can be physically connected to access device using one or more cables and access device can be a personal computer. In this configuration device or can be referred to as a tethered device.

Devices and can also establish communications by other means. For example wireless device can communicate with other wireless devices e.g. other devices or cell phones over the wireless network . Likewise devices and can establish peer to peer communications e.g. a personal area network by use of one or more communication subsystems such as the Bluetooth communication devices. Other communication protocols and topologies can also be implemented.

Devices or can communicate with service over the one or more wired and or wireless networks . For example service can be a mapping service that provides a mapping data that can be used by a client application on a device to provide the features and processes described in reference to .

Device or can also access other data and content over one or more wired and or wireless networks . For example content publishers such as news sites Really Simple Syndication RSS feeds Web sites and developer networks can be accessed by device or . Such access can be provided by invocation of a web browsing function or application e.g. a browser running on the device or

Devices and can exchange files over one or more wireless or wired networks either directly or through service .

Architecture can be implemented in any device for generating the features described in reference to including but not limited to portable or desktop computers smart phones and electronic tablets television systems game consoles kiosks and the like. Architecture can include memory interface data processor s image processor s or central processing unit s and peripherals interface . Memory interface processor s or peripherals interface can be separate components or can be integrated in one or more integrated circuits. The various components can be coupled by one or more communication buses or signal lines.

Sensors devices and subsystems can be coupled to peripherals interface to facilitate multiple functionalities. For example motion sensor light sensor and proximity sensor can be coupled to peripherals interface to facilitate orientation lighting and proximity functions of the device. For example in some implementations light sensor can be utilized to facilitate adjusting the brightness of touch surface . In some implementations motion sensor e.g. an accelerometer gyros can be utilized to detect movement and orientation of the device. Accordingly display objects or media can be presented according to a detected orientation e.g. portrait or landscape .

Other sensors can also be connected to peripherals interface such as a temperature sensor a biometric sensor or other sensing device to facilitate related functionalities.

Location processor e.g. GPS receiver can be connected to peripherals interface to provide geo positioning. Electronic magnetometer e.g. an integrated circuit chip can also be connected to peripherals interface to provide data that can be used to determine the direction of magnetic North. Thus electronic magnetometer can be used as an electronic compass.

Camera subsystem and an optical sensor e.g. a charged coupled device CCD or a complementary metal oxide semiconductor CMOS optical sensor can be utilized to facilitate camera functions such as recording photographs and video clips.

Communication functions can be facilitated through one or more communication subsystems . Communication subsystem s can include one or more wireless communication subsystems. Wireless communication subsystems can include radio frequency receivers and transmitters and or optical e.g. infrared receivers and transmitters. Wired communication system can include a port device e.g. a Universal Serial Bus USB port or some other wired port connection that can be used to establish a wired connection to other computing devices such as other communication devices network access devices a personal computer a printer a display screen or other processing devices capable of receiving or transmitting data. The specific design and implementation of the communication subsystem can depend on the communication network s or medium s over which the device is intended to operate. For example a device may include wireless communication subsystems designed to operate over a global system for mobile communications GSM network a GPRS network an enhanced data GSM environment EDGE network 802.x communication networks e.g. WiFi WiMax or 3G networks code division multiple access CDMA networks and a Bluetooth network. Communication subsystems may include hosting protocols such that the device may be configured as a base station for other wireless devices. As another example the communication subsystems can allow the device to synchronize with a host device using one or more protocols such as for example the TCP IP protocol HTTP protocol UDP protocol and any other known protocol.

Audio subsystem can be coupled to a speaker and one or more microphones to facilitate voice enabled functions such as voice recognition voice replication digital recording and telephony functions.

I O subsystem can include touch controller and or other input controller s . Touch controller can be coupled to a touch surface . Touch surface and touch controller can for example detect contact and movement or break thereof using any of a number of touch sensitivity technologies including but not limited to capacitive resistive infrared and surface acoustic wave technologies as well as other proximity sensor arrays or other elements for determining one or more points of contact with touch surface . In one implementation touch surface can display virtual or soft buttons and a virtual keyboard which can be used as an input output device by the user.

Other input controller s can be coupled to other input control devices such as one or more buttons rocker switches thumb wheel infrared port USB port and or a pointer device such as a stylus. The one or more buttons not shown can include an up down button for volume control of speaker and or microphone .

In some implementations device can present recorded audio and or video files such as MP3 AAC and MPEG files. In some implementations device can include the functionality of an MP3 player and may include a pin connector for tethering to other devices. Other input output and control devices can be used.

Memory interface can be coupled to memory . Memory can include high speed random access memory or non volatile memory such as one or more magnetic disk storage devices one or more optical storage devices or flash memory e.g. NAND NOR . Memory can store operating system such as Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks. Operating system may include instructions for handling basic system services and for performing hardware dependent tasks. In some implementations operating system can include a kernel e.g. UNIX kernel .

Memory may also store communication instructions to facilitate communicating with one or more additional devices one or more computers or servers. Communication instructions can also be used to select an operational mode or communication medium for use by the device based on a geographic location obtained by the GPS Navigation instructions of the device. Memory may include graphical user interface instructions to facilitate graphic user interface processing such as generating the GUIs shown in sensor processing instructions to facilitate sensor related processing and functions phone instructions to facilitate phone related processes and functions electronic messaging instructions to facilitate electronic messaging related processes and functions as described in reference to web browsing instructions to facilitate web browsing related processes and functions media processing instructions to facilitate media processing related processes and functions GPS Navigation instructions to facilitate GPS and navigation related processes camera instructions to facilitate camera related processes and functions and location map matching instructions which implement the processes described in reference to . The memory may also store other software instructions for facilitating other processes features and applications such as applications related to navigation social networking location based services or map displays.

Each of the above identified instructions and applications can correspond to a set of instructions for performing one or more functions described above. These instructions need not be implemented as separate software programs procedures or modules. Memory can include additional instructions or fewer instructions. Furthermore various functions of the mobile device may be implemented in hardware and or in software including in one or more signal processing and or application specific integrated circuits.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The features can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output.

The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language e.g. Objective C Java including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors or cores of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer can communicate with mass storage devices for storing data files. These mass storage devices can include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with an author the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the author and a keyboard and a pointing device such as a mouse or a trackball by which the author can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

One or more features or steps of the disclosed embodiments can be implemented using an Application Programming Interface API . An API can define on or more parameters that are passed between a calling application and other software code e.g. an operating system library routine function that provides a service that provides data or that performs an operation or a computation.

The API can be implemented as one or more calls in program code that send or receive one or more parameters through a parameter list or other structure based on a call convention defined in an API specification document. A parameter can be a constant a key a data structure an object an object class a variable a data type a pointer an array a list or another call. API calls and parameters can be implemented in any programming language. The programming language can define the vocabulary and calling convention that a programmer will employ to access functions supporting the API.

In some implementations an API call can report to an application the capabilities of a device running the application such as input capability output capability processing capability power capability communications capability etc.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made. The systems and techniques presented herein are also applicable to other electronic text such as electronic newspaper electronic magazine electronic documents etc. Elements of one or more implementations may be combined deleted modified or supplemented to form further implementations. As yet another example the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

