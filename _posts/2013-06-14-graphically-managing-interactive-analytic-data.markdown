---

title: Graphically managing interactive analytic data
abstract: Techniques for graphically managing interactive analytic data include presenting a virtual workspace to a user that includes a visual representation of a simulation analysis that includes a plurality of graphical analytic data modules, each graphical analytic data module including a plurality of variables that define a business process; identifying a change to a particular variable of a particular graphical analytic data module, the change defined by a user interface (UI) adjustment of a dimension of the particular graphical analytic data module that represents the particular variable; based on the identified change to the particular variable of the particular graphical analytic data module, adjusting at least one business process output of the simulation analysis; and presenting a revised virtual workspace to the user, the revised virtual workspace including the particular graphical analytic data module and at least one business process output of the simulation analysis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09170717&OS=09170717&RS=09170717
owner: SAP SE
number: 09170717
owner_city: Walldorf
owner_country: DE
publication_date: 20130614
---
This disclosure relates to graphically managing interactive analytic data and more particularly graphically managing interactive analytic data in a what if or sensitivity analysis.

 What if or sensitivity analysis is a useful task for performing business analysis for coming up with alternatives that optimize business decisions. For example finding the best combination of gross revenue and cost of goods sold for optimizing the gross profit is a common business problem that can be addressed with what if analysis. Generally what if analysis often uses a table to represent input variables output variables and formulae for expressing the relationship between the variables. Each time an input variable changes the output will change accordingly based on the calculation of the formula. Each of these results is known as a scenario. For example worst case and best case are two separate scenarios while current case is a special case of the scenarios representing the original value. By individually entering various values in the input variables a user may attempt to find a combination that maximizes a particular output.

The present disclosure relates to computer implemented methods computer readable media and computer systems for graphically managing interactive analytic data. One computer implemented method includes presenting a virtual workspace to a user the virtual workspace including a visual representation of a simulation analysis that includes a plurality of graphical analytic data modules each graphical analytic data module including a plurality of variables that define a business process identifying a change initiated by the user to a particular variable of a particular graphical analytic data module of the plurality of graphical analytic data modules the change defined by a user interface UI adjustment of a dimension of the particular graphical analytic data module that represents the particular variable based on the identified change to the particular variable of the particular graphical analytic data module adjusting at least one business process output of the simulation analysis and presenting a revised virtual workspace to the user the revised virtual workspace including the particular graphical analytic data module and at least one business process output of the simulation analysis.

Other implementations of this aspect include corresponding computer systems apparatuses and computer programs recorded on one or more computer storage devices each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software firmware hardware or a combination of software firmware or hardware installed on the system that in operation causes or causes the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions.

The foregoing and other implementations can each optionally include one or more of the following features alone or in combination. In a first aspect combinable with any of the implementation the change includes a first change the particular variable includes a first particular variable the dimension includes a first dimension and the UI adjustment includes a first UI adjustment.

A second aspect combinable with any of the previous aspects further includes identifying a second change initiated by the user to a second particular variable of the particular graphical analytic data module.

In a third aspect combinable with any of the previous aspects the second change defined by a second UI adjustment of a second dimension of the particular graphical analytic data module that represents the second particular variable.

In a fourth aspect combinable with any of the previous aspects the first and second UI adjustments occur substantially simultaneously.

In a fifth aspect combinable with any of the previous aspects the simulation analysis includes a what if analysis and the business process includes an opportunity pipeline simulation.

In a sixth aspect combinable with any of the previous aspects the graphical analytic data module includes a bubble that defines a business opportunity the particular variable includes a success percentage of the business opportunity and another of the plurality of variables includes an end date of the opportunity and the UI adjustment of the dimension of the particular graphical analytic data module that represents the particular variable includes a change to a circumference of the bubble.

A seventh aspect combinable with any of the previous aspects further includes identifying another change initiated by the user to another particular variable of the particular graphical analytic data module the other change defined by another UI adjustment of another dimension of the particular graphical analytic data module that represents the particular variable the other UI adjustment including a change to one or more coordinates of the particular graphical analytic data module in the virtual workspace.

In an eighth aspect combinable with any of the previous aspects the UI adjustment includes at least one of a drag and release action a drag and drop action or a resize action.

Various implementations of techniques for graphically managing interactive analytic data as described in the present disclosure may include none one some or all of the following features. For example such techniques may simplify what if analysis by providing a user one or more techniques to explicitly interact with graphical elements rather than indirectly interact with such elements through raw data e.g. input data . As another example such techniques may facilitate adjustment of raw data e.g. input data through adjustment of a graphical representation of such data such as for instance adjustment of geometrical location size or other graphical attribute. Further such techniques may enable a user to vary multiple what if analysis variable values simultaneously. As another example such techniques may facilitate instant e.g. real time or near real time update of what if analysis results as a result of varying variable values. As a result of such updates and with the help of a GUI component such as Progress Indicator the progress of the simulation analysis can be visualized or monitored in real time. On the other hand the value of an output variable such as a goal can be set either by text entry or by graphical component in reverse order to trigger a change in the values of input variables according to the formula definition involving the input and output goal variable.

The details of one or more implementations of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

The illustrated computing environment includes a server system a client system and a remote computing system communicably coupled through a network . Although illustrated as single systems each of the systems and may include more than one system and or more than one computing device e.g. computer laptop server mobile device and otherwise within a distributed computing environment. In general computing environment depicts an example configuration of a system capable of providing stateful execution of stateless applications in a substantially transparent way as well as dynamically determining the particular application s mode of operation in response to requests from its clients e.g. client appliances .

The illustrated server system includes one or more server appliances having corresponding graphical user interfaces GUIs . In general the server appliance is a server that stores one or more applications where at least a portion of the applications are executed via requests and responses sent to users or clients within and communicably coupled to the illustrated environment of . In some instances the server appliance may store a plurality of various hosted applications while in other instances the server appliance may be a dedicated server meant to store and execute only a single hosted application e.g. the contextual workspace server . In some instances the server appliance may comprise a web server where the applications such as the contextual workspace server represent one or more web based applications accessed and executed via network by the client appliances of the environment to perform the programmed tasks or operations of the hosted applications.

At a high level the server appliance comprises an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . Specifically the server appliance illustrated in is responsible for receiving application requests from one or more applications e.g. associated with the clients of environment and responding to the received requests by processing said requests in the associated hosted application and sending the appropriate response from the hosted application back to the requesting client application . In addition to requests from the external clients illustrated in requests associated with the hosted applications may also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a single server appliance environment can be implemented using two or more server appliances as well as computers other than servers including a server pool. Indeed server appliance may be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device e.g. smartphones PDAs tablets . In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further illustrated server appliance may be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system.

The illustrated server appliance is communicably coupled with a database such as in some examples an in memory database in the server system . In some embodiments server and or certain of its components may be integrated with database so that for instance processing e.g. all or partial may be performed directly on in memory data with processing results passed e.g. via a communication channel directly to a client. In alternative embodiments the in memory database may be located external to the server system and communicably coupled to one or more of the server system and or client system through the network . The illustrated in memory database may include integrated processing i.e. all business and or analytic operations done in processing memory. Moreover content from business content sources may be replicated from one or more transactional systems e.g. coupled to the network to the in memory database immediately. Thus the in memory database in some aspects may handle the analytical systems for all business data in real time as opposed to for instance computational processing systems that have separate transactional and analytical systems that connect through relational databases i.e. relational databases stored on magnetic memory that require a process e.g. ETL to transfer data from one system to another not in real time but with a delay of an hour day week or longer .

In some embodiments the in memory database may expose business data and capabilities to improve an end solution for end users e.g. the client appliances . The in memory database may reside on top of a computational engine e.g. in the server appliance or otherwise that facilitates fast manipulations on large amounts of business data and or replication of entire business suite information. Thus in some embodiments the in memory database may provide for the following design principles concepts business data in real time e.g. GUI patterns for constantly updated business data well modeled tables and data cubes e.g. in order to provide semantic services a highly parallelized computational engine e.g. for computationally intensive GUI patterns such as real time alerts and or suggestions close coupling of business logic and business data e.g. eliminating indexing and caching .

The illustrated in memory database stores one or more data objects . The data objects may include and or reference a variety of objects that store and or include business data. In some examples the data objects may be data cubes such as OLAP online analytical processing cubes. The data cubes may consist of a data structure that allows for columnar data storage rather than e.g. row data storage different types of indices compared to relational databases and in memory technology as compared to data stored in relational databases. The data cube may also allow manipulation and or analysis of the data stored in the cube from multiple perspectives e.g. by dimensions measures and or elements of the cube. A cube dimension defines a category of data stored in the cube for example a time duration of certain business data a product or service business user roles and a variety of other categories. In other words a cube dimension may be one way to slice business data stored in the cube according to some business logic e.g. logic within and or associated with the simulation analysis modules . In some instances the data cube may have three dimensions but any number of dimensions may be designed into the cube e.g. a hypercube .

A cube measure may be a fact such as a numeric fact that is categorized into one or more dimensions. Measures may include for example specific product sales data according to a set period of time. Measures may also include for example manufacturing efficiency data for a particular organizational unit of a business enterprise. In short measures may include any appropriate business data that may be manipulated according to business logic to assist or support the business enterprise.

One or more functions may be performed on a data cube. For instance the data cube may be pivoted in various ways. Each pivot provides the business user with a distinct view of particular business data stored in the cube. For instance in one view a business user may be presented with sales data of a specific data within a particular geographic region across a particular time period with a particular focus on the sales vs. geography relationship. In another view the same data e.g. the same measures and elements may be presented with a different focus e.g. the sales vs. time period relationship. In some aspects pivoting a data cube in real time may allow the business user to more efficiently analyze the business data.

Other functions performable on data cubes may be for instance slice dice drill down up and roll up. A slice operation identifies a subset of a multi dimensional array corresponding to a single value for one or more members of the cube dimensions not in the subset. A dice operation is a slice operation on more than two dimensions of a data cube or more than two consecutive slices . A drill down up operation allows the business user to navigate the data cube s levels of data to reveal levels containing the most summarized up data to the most detailed down data. A roll up operation involves computing all of the data relationships for one or more dimensions of the data cube.

The data objects may include and or store other forms of data along with or in place of data cubes. For example the data objects may represent store and or reference data from one or more content sources such as web content feeds REST services business data repositories reports status updates discussions wikis blogs and other content sources. Of course while illustrated as contained in the in memory database the data objects may also be stored for example in one or both of the memories in the remote computing system and or a separate repository communicably coupled to the network . In some embodiments the data objects may be stored in a raw compiled or compressed form or combination thereof.

The illustrated client system includes one or more client appliances having corresponding GUIs . Each client appliance may be any computing device operable to connect to or communicate with at least the server system and or via the network using a wireline or wireless connection. Further as illustrated each client appliance includes a processor an interface and a memory . In general each client appliance comprises an electronic computer device operable to receive transmit process and store any appropriate data associated with the environment of . It will be understood that there may be any number of client appliances associated with or external to environment . For example while illustrated environment illustrates three client appliances alternative implementations of environment may include a single client appliance communicably coupled to the server system or any other number suitable to the purposes of the environment .

Additionally there may also be one or more additional client appliances external to the illustrated portion of environment that are capable of interacting with the environment via the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while each client appliance is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers. As used in this disclosure client appliance is intended to encompass a tablet computing device personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each client appliance may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of the server system or the client appliance itself including digital data visual information any application or the GUI . Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of the client appliances through the display namely the GUI .

The illustrated network facilitates wireless or wireline communications between the components of the environment i.e. between the server system and the client system as well as with any other local or remote computer e.g. remote computing system such as additional clients servers or other devices communicably coupled to network but not illustrated in . The network is illustrated as a single network in but may be a continuous or discontinuous network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. The network may be all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In some instances a portion of the network may be a virtual private network VPN such as for example the connection between the client system and the server system .

Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs cellular networks all or a portion of the Internet and or any other communication system or systems at one or more locations.

The illustrated remote computing system is communicably coupled to one or both of the server system and client system through the network . In some instances as illustrated the remote computing system stores and or references third party content such as for example data objects web content electronic communications content feeds and other data sources. Although illustrated as a single appliance the remote computing system may include any number of appliances e.g. servers clients mobile devices and otherwise coupled to the network individually and or in groups. For instance in some embodiments the remote computing system may be a web content server delivering web content to one or more of the client appliances in response to a request. In some embodiments the remote computing system may be a repository storing one or more data objects such as data cubes or other form of database storing business data.

The illustrated communication interfaces shown as part of the server appliance and the client appliance facilitate communication among appliances in for example the client system the remote computing system and the server system . The interfaces may also facilitate communication among the illustrated systems and other systems in a client server or other distributed environment including within environment connected to the network. Generally the interfaces include logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interfaces may include software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

The illustrated processors shown as part of the server appliance and the client appliance may be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processors execute instructions and manipulate data to perform the operations of the respective server appliance and client appliance and specifically the simulation analysis module server and simulation analysis module client as well as any other applications. Specifically the server appliance s processor executes the functionality required to receive and respond to requests from the client appliances and their respective applications e.g. contextual workspace client as well as the functionality required to perform the other operations of the simulation analysis module server .

Regardless of the particular implementation software may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. Although illustrated as a single processor for each of the respective server appliance and client appliance in two or more processors may be used according to particular needs desires or particular embodiments of environment .

The illustrated memories shown as part of the server appliance and the client appliance may include any memory or database module and may take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. Each memory may store various objects or data including classes frameworks applications backup data business objects jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the respective server appliance and client appliance . Additionally each memory may include any other appropriate data such as VPN applications firmware logs and policies firewall policies a security or access log print or other reporting files as well as others.

As illustrated memory of the server appliance includes and or stores one or more server content objects . Memory of the client appliance includes and or stores one or more client content objects . In some embodiments the server content objects and or the client content objects may be similar to the data objects stored in the in memory database . For example the content objects and may be data cubes tables reports or other content sources such as web content electronic communications feeds and otherwise that are relevant to for example one or more what if analyses. Regardless of the form of the content objects and these objects may contain and or reference business data on which business logic may be applied in a what if or sensitivity analysis.

The illustrated computing system includes a simulation analysis module server and a simulation analysis module client . At a high level each of the simulation analysis module server and a simulation analysis module client referred to collectively as the simulation analysis modules is any application program module process or other software that may execute change delete generate or otherwise manage information according to the present disclosure particularly in response to and in connection with one or more requests received from the illustrated client appliances and their associated applications. In certain cases only one simulation analysis module server may be located at a particular server appliance . In others a plurality of related and or unrelated simulation analysis module server may be stored at a single server appliance or located across a plurality of other server appliances in the server system as well.

In certain cases the simulation analysis modules may be implemented as composite applications. For example portions of the composite application may be implemented as Enterprise Java Beans EJBs or design time components may have the ability to generate run time implementations into different platforms such as J2EE Java 2 Platform Enterprise Edition ABAP Advanced Business Application Programming objects or Microsoft s .NET among others. Additionally the simulation analysis modules may represent web based applications accessed and executed by remote client appliances or client applications via the network e.g. through the Internet .

Further while illustrated as internal to server appliance one or more processes associated with the simulation analysis module server may be stored referenced or executed remotely. For example a portion of the simulation analysis module server may be a web service associated with the application that is remotely called while another portion of the simulation analysis module server may be an interface object or agent bundled for processing at a remote client appliance via the simulation analysis module client . Moreover any or all of the simulation analysis modules may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure.

As explained more fully below one or both of the simulation analysis modules and may present or facilitate presentation of a user interface e.g. through GUI and or GUI to a business user to perform a variety of tasks. For instance the simulation analysis modules and may present one or more workspace modules containing business data relevant to the business user in a variety of forms e.g. tables graphs notes and otherwise for a simulation or what if analysis. The relevant business data may be sourced from for example the data objects or other content sources.

In some implementations the simulation analysis modules may execute one or more what if or sensitivity analysis techniques. For example one example of a what if analysis includes a profit revenue analysis in which gross revenue and cost of goods sold for optimizing the gross profit is analyzed. Input variables output variables and formula for expressing the relationship between the variables for a profit revenue analysis include respectively Gross Revenue and Cost of Goods Sold as the input variables Gross Profit as the output variable and the formula of Gross Profit Gross Revenue Cost of Goods Sold. Thus each time an input variable changes the output will change accordingly based on the calculation of the formula. Each of these results is known as a scenario. For example Worst Case and Best Case are two separate scenarios and Current Values is a special case of the scenarios representing the original value. By entering various values in the input variables a user may attempt to find a combination that maximizes the Gross Profit since an increase in revenue may incur at a disproportional higher cost or decreased cost may dramatically reduce the revenue both of which has a negative effect on the profit. In this example therefore the what if analysis comprises a simulation of a maximum Gross Profit and optimized distribution among the corresponding input variables.

In another example the what if analysis can include a spend management analysis. In this example the input variables may include Supplier Invoice Amount Discount and Holding Cost Global and the output variables may include Buy Now Amount and Buy Later Amount. The formula for defining the input output relationships may be defined as Buy Now Amount Supplier Invoice Net Amount 1 Discount 100 Holding Cost and Buy Later Amount Supplier Invoice Net Amount 1 Inflation 100 . User change to an input variable such as Holding Cost affects an output variable. Each input change may result in a new scenario in terms of Buy Now Amount and Buy Later Amount.

In another example the what if analysis can include a pipeline simulation which may narrow a deficit between values of a current pipeline and a target pipeline. A pipeline consists of a set of business opportunities. Each opportunity has a name and is represented by end date deal size e.g. in monetary terms and chance of success. In this example the inputs include End Date Chance of Success and Deal Size and the calculated result or output is Total Pipeline by End Date which is calculated as follows Total Pipeline end date sum deal size i chance of success i end date where i represents the ith opportunity in the pipeline.

Within the context of the present disclosure the example system can be used to perform the above described example simulation analyses as well as other examples. In some implementations the system may facilitate an interactive visual paradigm for a what if analysis with an efficient and intuitive interface for the analysis tasks in terms of data driven what if analysis and goal driven what if analysis as described more fully below.

In some aspects as shown in the illustrated implementation the variable editor pulls attributes from the data mapping editor the formula editor pulls attributes from the variable editor and the chart editor pulls attributes from the variable editor and formulae from the formula editor . Further in the illustrated implementation the data mapping editor loads attributes from the data model and stores editor definitions in the data model .

The data model in some implementations may be a database e.g. a relational database that includes or defines all or part of the data e.g. inputs formulas outputs used for graphically managing interactive analytic data. For instance input data provided by a user through the variable editor may be defined and or stored in the data model . Further variables and mathematical operators that define a formula provided by the user through the formula editor may be stored and or defined in the data model . Various characteristics of a chart as defined by the user through the chart editor may be stored and or defined in the data model .

Method may begin at step when a virtual workspace that includes a visual representation of a simulation e.g. what if analysis that includes graphical analytic data modules may be presented to a user. For example as shown in a virtual workspace is shown. The workspace includes a bubble graph as a visual representation of a simulation analysis. In this example the simulation analysis is a pipeline simulation analysis as described above. As shown in the bubble graph includes an y axis that describes a chance of success of an opportunity in the pipeline and an x axis that describes an end date of the opportunity in the pipeline. Multiple opportunities are represented in the graph by bubbles or circles that each have a particular dimension e.g. circumference diameter or radius and location on the graph . For example opportunity includes a deal size that is defined by its relative size e.g. circumference and an end date that is defined by its x axis location on the graph . The opportunity also includes a chance of success that is defined by its y axis location on the graph . In some aspects one or more of the deal size end date and chance of success may represent a particular adjustable variable e.g. user adjusted of the opportunity which in turn may represent a particular graphical analytic data module.

Turning briefly to another opportunity includes a deal size that is defined by its relative size e.g. circumference and an end date that is defined by its x axis location on the graph . The opportunity also includes a chance of success that is defined by its y axis location on the graph . In some aspects one or more of the deal size end date and chance of success may represent a particular adjustable variable e.g. user adjusted of the opportunity which in turn may represent a particular graphical analytic data module.

Turning briefly to a toolbar of the graph is labeled with several data instances each of which is also shown in . As illustrated the example toolbar includes a current value of all of the opportunities shown on the graph a percent of current value to target value of all of the opportunities a simulated value of all of the opportunities shown on the graph a percent of simulated value to target value of all of the opportunities a target value of all of the opportunities on the graph and a goal entry field of the value of the opportunities on the graph . In some aspects the current value may represent the original or actual value of all of the opportunities before a simulation analysis while the simulated value may represent a calculated value of all of the opportunities as a result of simulation analysis.

In step a change to a particular variable of a particular graphical analytic data module is identified. In some aspects the change can be initiated by the user on the graph for example through a UI adjustment of a particular variable of one of the opportunities shown in graph . For example turning to a user initiated adjustment is illustrated in that opportunity has been adjusted. shows the adjusted opportunity which includes a deal size that in this example matches deal size e.g. is unchanged an end date that in this example matches end date e.g. is unchanged and a chance of success that has been adjusted to 54 from the chance of success of 24 shown in . In this example therefore the user initiated UI adjustment e.g. through UI techniques such as drag and drop drag and release resize and other techniques is of the chance of success variable. In other examples the end date variable and or deal size variable may be adjusted through a user initiated UI action e.g. through UI techniques such as drag and drop drag and release resize and other techniques .

As another example with reference to two or more variables of a particular opportunity may be adjusted simultaneously or substantially simultaneously or serially in some aspects . For example as shown in both of the chance of success and end date variables of the opportunity may be adjusted to yield the adjusted opportunity . The adjusted opportunity includes a deal size that in this example matches deal size and e.g. is unchanged an end date that in this example is adjusted to Jul. 5 2013 from end date and and a chance of success that has been adjusted to 54 from the chance of success of 24 shown in . In this example therefore the user initiated UI adjustment e.g. through UI techniques such as drag and drop drag and release resize and other techniques is of two variables. In other example additional variables e.g. deal size may be adjusted simultaneously or serially.

In step one or more business attributes of the simulation analysis are adjusted based on the change to the particular variable of a particular graphical analytic data module. For instance as illustrated in adjustment of a particular variable in this example adjusting chance of success to chance of success by moving the opportunity upward on the graph may propagate e.g. automatically other changes to business variables e.g. output values shown in graph . For example as shown in the simulated value and simulated percent of simulated value to goal value are adjusted e.g. relative to the values shown in based on the adjustment to the chance of success of opportunity . As described above adjustment of the other variables e.g. output variables may be performed by recalculating the particular variables based on one or more formulas entered by the user for the particular simulation analysis e.g. through a formula editor or other input module .

In step a revised virtual workspace may be presented to the user. The revised workspace e.g. the graph as shown in may include any adjusted graphical analytic data modules as well as unadjusted graphical analytic data modules e.g. opportunities 1 10 shown in graph . The revised virtual workspace may also include the adjusted one or more business attributes in step .

In step a second change to a second variable of a particular graphical analytic data module is identified. As an example with reference to two or more variables of a particular opportunity may be adjusted simultaneously or substantially simultaneously or serially in some aspects . For example as shown in both of the chance of success and end date variables of the opportunity may be adjusted to yield the adjusted opportunity . The adjusted opportunity includes a deal size that in this example matches deal size and e.g. is unchanged an end date that in this example is adjusted from end date and and a chance of success that has been adjusted to 54 from the chance of success of 24 shown in . In this example therefore the user initiated UI adjustment e.g. through UI techniques such as drag and drop drag and release resize and other techniques is of two variables. In other example additional variables e.g. deal size may be adjusted simultaneously or serially.

In some implementations other user initiated UI adjustments may be performed. For example a user may adjust one or more of the current value of all of the opportunities shown on the graph the chance of success of all of the opportunities the simulated value of all of the opportunities shown on the graph the simulated chance of success of all of the opportunities the target value of all of the opportunities on the graph or the goal of the value of the opportunities on the graph . By adjusting one or more of such business attributes of the simulation analysis one or more variables e.g. deal size chance of success end date of one or more opportunities shown in graph may be adjusted e.g. automatically according to for example one or more business formulas of the simulation analysis provided by the user. As one example by adjusting the goal a dimension e.g. circumference of one or more of the opportunities defined by the bubbles e.g. and may be adjusted e.g. made larger or smaller to reflect the change in goal . This can be done as illustrated by the user filling in the data entry value of the goal . As another example instead of a fill in box for the goal a separate bubble or other GUI components such as a numeric slider that represents the goal size of all of the opportunities may be placed in the graph . User initiated adjustment of the bubble or other similar GUI components for the goal e.g. resize a dimension of the bubble may also initiate a change to a dimension e.g. circumference of one or more of the opportunities defined by the bubbles e.g. and .

Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry in tangibly embodied computer software or firmware in computer hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on a tangible non transitory program carrier for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine readable storage device a machine readable storage substrate a random or serial access memory device or a combination of one or more of them.

The term data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can also be or further include special purpose logic circuitry e.g. a central processing unit CPU a FPGA field programmable gate array or an ASIC application specific integrated circuit . In some implementations the data processing apparatus and or special purpose logic circuitry may be hardware based and or software based. The apparatus can optionally include code that creates an execution environment for computer programs e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. The present disclosure contemplates the use of data processing apparatuses with or without conventional operating systems for example Linux UNIX Windows Mac OS Android iOS or any other suitable conventional operating system.

A computer program which may also be referred to or described as a program software a software application a module a software module a script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. While portions of the programs illustrated in the various figures are shown as individual modules that implement the various features and functionality through various objects methods or other processes the programs may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. a central processing unit CPU a FPGA field programmable gate array or an ASIC application specific integrated circuit .

Computers suitable for the execution of a computer program include by way of example can be based on general or special purpose microprocessors or both or any other kind of central processing unit. Generally a central processing unit will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a Global Positioning System GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few.

Computer readable media transitory or non transitory as appropriate suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The memory may store various objects or data including caches classes frameworks applications backup data jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto. Additionally the memory may include any other appropriate data such as logs policies security or access data reporting files as well as others. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube LCD liquid crystal display or plasma monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore a GUI may represent any graphical user interface including but not limited to a web browser a touch screen or a command line interface CLI that processes information and efficiently presents the information results to the user. In general a GUI may include a plurality of user interface UI elements some or all associated with a web browser such as interactive fields pull down lists and buttons operable by the business suite user. These and other UI elements may be related to or represent the functions of the web browser.

Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN a wide area network WAN e.g. the Internet and a wireless local area network WLAN .

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed but rather as descriptions of features that may be specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order e.g. this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system modules and components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular implementations of the subject matter have been described. Other implementations alterations and permutations of the described implementations are within the scope of the following claims as will be apparent to those skilled in the art. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. Accordingly the above description of example implementations does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

