---

title: Delay tolerant decoder
abstract: In one implementation, a network device receives a series of video frames spanning a series time period from a network. The time period may be static of a specific duration or identified dynamically based on the timing of the video frames. The network device decodes the series of video frames and stores the decoded series of data frames in memory along with associated timestamps. A pause phenomenon in excess of expected delay is identified between two of the decoded video frames. The network device forwards or displays the series of decoded frames such that each successive pair of frames in the series of decoded frames are spaced by a resultant delay period that is less than a duration of the pause phenomenon.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09578372&OS=09578372&RS=09578372
owner: Cisco Technology, Inc.
number: 09578372
owner_city: San Jose
owner_country: US
publication_date: 20130927
---
This disclosure relates in general to the field of video decoding and more specifically to an algorithm for minimizing the perception of delay in the display of decoded video.

Various standards have been developed in recent years for video encoding and compression in applications such as videoconferencing digital storage media television broadcasting internet streaming and other network communications. Image frames are encoded and or compressed at one end of a transmission and decoded and or decompressed at the other end of the transmission. The encoded or compressed version of the image frames are easily transmitted or stored. Data streams in the transmission may suffer from various types of errors. The errors may include noise in the transmission packet loss in the network device malfunctions or delays.

Delays may be caused by the network or from hardware decoding. Delay from the network may occur when one or more video frames must be retransferred because of the errors e.g. the frames were not received or were damaged . The time necessary to decode one or more video frames may undesirably be greater than normal or as expected.

In one embodiment a series of video frames spanning a predetermined series time period are received from a network. The video frames may be network abstraction layer NAL units. The series of video frames are decoded and the decoded video frames are stored in a buffer. A time pause between two of the decoded video frames is identified and the series of decoded frames are displayed such that at least one additional pair of decoded frames in the series of decoded frames are spaced by a resultant delay period that is allocated from the time pause and less than the time pause.

Real time video applications require fluid decoding and displaying. Real time video applications include video conferences video streaming television broadcasting and other forms of communication. One example standard for the recording compression and distribution of video is H.264 MPEG 4 which is described by the International Telecommunication Union Standardization Section ITU T as T REC H.264 201304 I in April 2013 and available at http www.itu.int rec T REC H.264 201304 I H.264 . Other video coding standards may be used. The video coding standard may organize data into network abstraction layer NAL units. A NAL unit is a packet that includes a specified number of bytes. The first byte is a header which defines the type of data in the NAL unit and the remaining bytes form the payload data of that type of data. Other packet formats may be used. The NAL unit structure may be a versatile format for use in both packet transport systems and bit stream transport systems.

In any video coding standard delays may be introduced into the video stream because of abnormal decoding behavior of hardware that performs the decoding. The delays may contribute to pause phenomena such as freezing video jerking video distorted e.g. pixelated video or other disruptions in the video stream displayed to the user. In one example the abnormal decoding behavior may be attributed to the network. When the network experiences dropped packets device failures or the status of the network is bad for another reason data may be lost. As a result one or more NAL units may be delayed or retransmitted which also causes delay.

In another example the abnormal decoding behavior may be attributed to the amount of time needed to process special frames or specific types of NAL units. H.264 decoding may reach speeds of 30 frames per second or higher according to some hardware manufacturers. However in these same data streams the time interval between some adjacent decoded frames is larger than 200 milliseconds. The additional time between frames is attributed to the decoding time of hardware for some special frames or control frames. Examples include sequence parameter set SPS and the picture parameter set PPS . The SPS NAL unit and the PPS NAL unit may include specifications for the resolution and frame rate of the video. The SPS NAL unit may include data that defines the coded video sequence for a series of frames as defined by H.264. The PPS NAL unit may include parameters that define a picture with the coded video sequence for one of the frames as defined by H.264. Other special frames may be used.

Because decoding time of hardware for each frame is controlled by the hardware or the operating system manufacturer any fix or patch for the abnormal delay caused by hardware is often also made by the hardware or the operating system manufacturer. The following embodiments include a delay tolerant algorithm to improve the pausing phenomenon at the application level which is not dependent on a fix or patch from the hardware or the operating system manufacturer. The delay tolerant algorithm corrects or disguises delays in real time regardless of whether the delays are caused by the network or from hardware decoding.

In one example the local endpoint receives a video stream as a series of video frames from the remote endpoint via the network . The video stream may be analyzed in small amounts of time. The local endpoint defines a series time period for removing delay from the video stream. The series time period is the duration of the series of video frames under analysis. The series time period may be a moving window e.g. as one video frame moves out of the window another video frame moves into the window or a static window e.g. video frames for the series time period and removed all at once .

The local endpoint is configured to decode the series of video frames and store the decoded video frames in a buffer or memory. The local endpoint is configured to identify a time pause between two of the decoded video frames. The time pause may be greater than a threshold related to an expected amount of time between frames. For example in a 30 frames per second video stream the time between frames will be about 33 milliseconds with some amount of tolerance. The threshold in this example may be set to 50 milliseconds 100 milliseconds 200 milliseconds or another value. Accordingly the local endpoint compares the time between adjacent decoded video frames in the buffer to the threshold.

When any two adjacent decoded video frames are spaced apart by more than the threshold the user may be experiencing a pausing phenomenon. To minimize these effects the local endpoint is configured to spread the delay among additional frames in the video stream. For example the local endpoint may move the spaced apart video frames closer in time and move other video frames farther apart in time to compensate. Various techniques may be used to spread the delay among the decoded video frames in the buffer such that each successive pair of frames in the series of decoded frames are spaced by a resultant delay period that is less than the original time pause. Accordingly the video frames are displayed at a rate less than real time but the significant delay that causes noticeable delay for one frame is minimized. The local endpoint is configured to display the series of decoded frames using the resultant delay period between one or more pairs of adjacent video frames.

In one alternative the local endpoint is configured to identify a time pause between two of the decoded video frames by the type of frame rather than a measurement of time. For example the algorithm may assume that configuration set NAL units cause delay because of the addition processing time required for configuration set NAL units. For example video stream configuration based on the SPS or PPS require more time than the average NAL unit to decode.

Accordingly the local endpoint may be configured to parse or analyze the NAL unit to determine whether the NAL unit includes a configuration set. In response to the determination of the configuration set the local endpoint is configured to look up a corresponding time pause in a lookup table. The local endpoint is configured to allocate portions of the corresponding time pause to other NAL units to spread out the delay such that the observer will not notice the delay.

The NAL queue includes memories buffers or other logical storage elements that stores a series of NAL units as shown in . The NAL units are received from a network connection or a file . In pre detection the NAL units in the NAL queue are parsed and analyzed. The arrival time for each NAL unit is recorded and stored in memory. If there is no error in the NAL unit an arrived flag for the NAL unit is set to true or high. Potential errors for the NAL unit include syntax errors or an incomplete NAL unit. The syntax error may be a bit error or violation in the formatting of the NAL unit. An incomplete NAL may be missing a header a portion of the payload or have an inappropriate number of bits or bytes.

As each NAL unit with no errors is assigned a true arrived flag a timer is assigned to the entry. The timer records elapsed time until the next NAL unit with no errors is received and assigned a true arrived flag. The timer is compared to a timeout threshold. The timeout threshold may be assigned according to the video coding standard. The timeout threshold may be assigned according to the speed of the connection the network or the capabilities of the local server or local endpoint . Alternatively the timeout threshold may be a function of the rate or speed of the video stream. For example the timeout threshold may be 110 150 200 or another ratio of the expected time between adjacent frames. Example timeout thresholds include 10 ms 50 ms 100 ms or another time value. As the NAL units are received a new timer is set between each consecutive pair of NAL units . When the timer reaches the timeout threshold between any consecutive pair of NAL units a delay flag of entries from the first NAL unit to the entry that timed out is set to true or high. 

For example the delayed flag is set to low or false when the first NAL unit arrives in . The first NAL unit or base NAL unit is shown at the bottom of the NAL queue in . The timer increases as a function of time. The second NAL unit is received before the timeout threshold is reached. Therefore the delayed flag is also set to false. The third NAL unit is received before the timeout threshold is reached. Therefore the delayed flag is also set to false. The fourth NAL unit however does not arrive or at least the corresponding arrive flag is not set to high before the timeout threshold is reached. Therefore the delayed flag is set to high. In addition all of the other delayed flags between the first delayed flag and delayed flag are also set to high. The other delayed flags between the first delayed flag and delayed flag include delayed flag and delayed flag and any other delayed flags for intervening NAL units in the group. This indicates that all of the corresponding NAL units in the group will undergo delay tolerant decoding.

The group may be defined statically or dynamically. When the group is static a predetermined number of NAL units are included in the group. Example numbers of NAL units include 5 10 100 or any number of NAL units. When the group is dynamic the size of the group may be a function of the amount of delay between NAL units. For example the group may extend from the base NAL unit until a delay greater than the timeout threshold is detected.

Returning to the group of NAL units are decoded and stored in the decoded frame queue . The NAL units are read from the decoded frame queue in order to be displayed transmitted to another device or for further processing. The NAL units are examined to determine the status of the delayed flags. For NAL units with false delayed flags the NAL units are fetched or forwarded without any further calculation. However for NAL units with delayed flags set to true indicating that one or more gaps between adjacent NAL units in the group exceeded the timeout threshold the delay tolerant algorithm as shown by dynamic delay calculation is applied to the group of NAL units before the NAL units are forwarded further processed or presented on the display .

The callback time illustrates the delivery of the NAL units from the hardware decoder to a callback function or the callback time is when the callback function is called by the hardware decoder. The callback function provides the NAL units to another application or a user by way of an application programming interface API . In the example shown in a short delay is spaced between NAL unit Nand NAL unit N. A large delay is spaced between NAL unit Nand NAL unit N. The delay between NAL units including the short delay and the large delay may be measured from the beginning of one NAL unit to the beginning of the other NAL unit or measured from the end of one NAL unit to the beginning of the other NAL unit.

The display time illustrates that the delay has been smoothed out or shared between all of the NAL units in the group. As a result the pausing phenomenon is avoided and the base NAL unit is displayed at the same time or with a negligible delay with the original display time.

After decoding the received video frames the local endpoint monitors the time spacing between the NAL units. When consecutive decoded video frames are spaced by more than the timeout threshold a pause phenomenon delay T is identified. For example in the pause phenomenon delay occurs between NAL units nand n. The local endpoint measures the pause phenomenon delay by subtracting the arrive time of nfrom the arrive time of n.

The display time DT for each decoded NAL unit is the time interval between Tand the time when the decoded NAL unit is displayed. The receipt time RT is the time interval between Tand the callback time. The delayis the calculated delay time for displaying the decoded result for NAL unit x measured from the corresponding callback time. Equations 1 and 2 are an example calculation for determining the delay time. The values for t and k are integer counters corresponding to the sequence of video frames or NAL units that increment moving from one NAL unit to the next. Lambda is a predetermined value that may be determined through experimentation e.g. trial and error . Alternatively lambda may be selected based on user preferences. Lambda may be a value between 0 and 1 e.g. 0.3 0.5 or 0.8 . In one example lambda is a mobile device constant defined by the manufacturer of the mobile device or through measuring performance of the mobile device in various delay scenarios.

Table 1 further illustrates application of delay tolerant encoding. The first column is the label for the video frame. The second column is the display time DT . The third column is the receipt time RT . The delay time of displaying each decoded result is calculated in the fourth column Delay DT RT . If RT is equal to or larger than DT the decoded result is displayed immediately. If RT is less than DT the decoded result is delayed by DT RT before displaying.

In one example when RT Tis less than or equal to T t k 1 T the total sum of time intervals is less than the calculated delay. Accordingly the decoded NAL units or video frames are immediately displayed. When RT Tis larger than T t k 1 T then the total sum of time intervals is larger than the calculated delay. Accordingly the delay time of the display decoded result for nis RT T T t k 1 T .

Therefore the delay tolerant decoded identifies a pause phenomenon delay and divides the pause phenomenon over additional video frames in the group. The delay is smoothed so that the pausing phenomenon is less noticeable to the viewer.

The communication interface is configured to receive a series of video frames spanning a predetermined series time period. The predetermined series time period may be set based on user input. The predetermined series time period defines the amount of time over which delay is averaged or smoothed out. That is when a delayed NAL unit is received the delay is shared among the other NAL unit in the predetermined series time period.

The controller is configured to decode the series of video frames. Any decoding algorithm may be used. The controller is configured to identify a pause phenomenon or time pause in the series of decoded frames. For example each of the decoded frames may be stored in memory along with a timestamp. The controller is configured to subtract the time stamps of consecutive frames to compare the difference to a threshold. When the difference between two consecutive time frames or NAL units exceeds the threshold the controller flags the later frame or NAL unit as causing the time pause.

The controller is configured to calculate a resultant delay period based on the time pause. In one example the time pause is divided among all of the other frames or NAL units in the predetermined series time period. Other frames that would normally experience no delay are artificially delayed by some amount smaller than the time pause. The time pause may be divided evenly. For example in a predetermined series time period including M frames and M 1 frame intervals all of the intervals would be set to the duration of the time pause divided by M 1.

The display is configured to display the series of decoded frames such that each successive pair of frames is spaced by the resultant delay period. The resultant time period is a function of the time pause and an expected delay time for the series of video frames. The expected delay time is measured over an extended time period or accessed from a delay tolerance configuration.

Initially a video stream is established according to video encoding standard. NAL units are sent and received between two or more network devices. At act S the network device decodes a series of network abstraction layer NAL packets according to the video encoding standard units into decoded NAL units. The network device identifies video syntax in the NAL units and generates images based on the NAL units.

At act S the network device is configured to store the decoded NAL units and associated timestamps in memory or another type of buffer. The network device includes a timer which generates time values for each decoded NAL unit as it is stored in memory.

At act S the network device identifies a pause phenomenon between a pair of the decoded NAL units stored in the memory. The pause phenomenon is an amount of time between two adjacent NAL units that is in excess of the time defined by the frame rate of the video encoding standard. The pause phenomenon may be directly measured by the network device.

For example the network device may be configured to calculate a difference between successive timestamps and compare the difference to a timeout threshold. Alternatively the pause phenomenon may be inferred from the type of NAL unit. For example the network device may identify the pause phenomenon based on a header bit in at least one of the NAL units.

At act S the network device is configured to display the decoded NAL units such that successive pairs of the decoded NAL units are allocated a portion of the pause phenomenon. In one example the duration of the pause phenomenon is allocated to a predetermined number of NAL units adjacent to the subject NAL unit. For example a set of preceding NAL units a set of subsequent NAL units or both may be allocated portions of the pause phenomenon. Example sizes for the set of preceding NAL units the set of subsequent NAL units or both may be 5 NAL units 10 NAL units or another integer value.

The network device may calculate the portion of the pause phenomenon as a function of the pause phenomenon and an average delay time of the expected delay between pairs of successive NAL units. The allocation of the portions of the pause phenomenon to the adjacent NAL units may be done evenly or as a function of the separation to the subject NAL unit. For example more delay may be allocated to the nearest adjacent NAL units and less delay may be allocated to more distant adjacent NAL units. In one implementation the nearest preceding NAL unit and the nearest subsequent NAL units are allocated 20 of the pause phenomenon time each and the next nearest preceding NAL unit and the next nearest subsequent NAL units are allocated 10 of the pause phenomenon time each. The allocation may be 5 or another value for each iteration until all of the pause phenomenon time has been allocated or all of the frames in the group have been allocated.

The controller may include a general processor digital signal processor an application specific integrated circuit ASIC field programmable gate array FPGA analog circuit digital circuit combinations thereof or other now known or later developed processor. The controller may be a single device or combinations of devices such as associated with a network distributed processing or cloud computing.

The memory may be a volatile memory or a non volatile memory. The memory may include one or more of a read only memory ROM random access memory RAM a flash memory an electronic erasable program read only memory EEPROM or other type of memory. The memory may be removable from the network device such as a secure digital SD memory card.

The display may be a liquid crystal display LCD panel light emitting diode LED screen thin film transistor screen or another type of display. The user may specify the threshold levels average time period and lambda using an input device. The input device may be one or more buttons keypad keyboard mouse stylist pen trackball rocker switch touch pad voice recognition circuit or other device or component for inputting data to the network device. The input device and the display may be combined as a touch screen which may be capacitive or resistive.

In addition to ingress ports and egress ports the communication interface may include any operable connection. An operable connection may be one in which signals physical communications and or logical communications may be sent and or received. An operable connection may include a physical interface an electrical interface and or a data interface.

The network may include wired networks wireless networks or combinations thereof. The wireless network may be a cellular telephone network an 802.11 802.16 802.20 or WiMax network. Further the network may be a public network such as the Internet a private network such as an intranet or combinations thereof and may utilize a variety of networking protocols now available or later developed including but not limited to TCP IP based networking protocols.

While the computer readable medium e.g. memory or database is shown to be a single medium the term computer readable medium includes a single medium or multiple media such as a centralized or distributed database and or associated caches and servers that store one or more sets of instructions. The term computer readable medium shall also include any medium that is capable of storing encoding or carrying a set of instructions for execution by a processor or that cause a computer system to perform any one or more of the methods or operations disclosed herein.

In a particular non limiting exemplary embodiment the computer readable medium can include a solid state memory such as a memory card or other package that houses one or more non volatile read only memories. Further the computer readable medium can be a random access memory or other volatile re writable memory. Additionally the computer readable medium can include a magneto optical or optical medium such as a disk or tapes or other storage device to capture carrier wave signals such as a signal communicated over a transmission medium. A digital file attachment to an e mail or other self contained information archive or set of archives may be considered a distribution medium that is a tangible storage medium. Accordingly the disclosure is considered to include any one or more of a computer readable medium or a distribution medium and other equivalents and successor media in which data or instructions may be stored. The computer readable medium may be non transitory which includes all tangible computer readable media.

In an alternative embodiment dedicated hardware implementations such as application specific integrated circuits programmable logic arrays and other hardware devices can be constructed to implement one or more of the methods described herein. Applications that may include the apparatus and systems of various embodiments can broadly include a variety of electronic and computer systems. One or more embodiments described herein may implement functions using two or more specific interconnected hardware modules or devices with related control and data signals that can be communicated between and through the modules or as portions of an application specific integrated circuit. Accordingly the present system encompasses software firmware and hardware implementations.

In accordance with various embodiments of the present disclosure the methods described herein may be implemented by software programs executable by a computer system. Further in an exemplary non limited embodiment implementations can include distributed processing component object distributed processing and parallel processing. Alternatively virtual computer system processing can be constructed to implement one or more of the methods or functionality as described herein.

Although the present specification describes components and functions that may be implemented in particular embodiments with reference to particular standards and protocols the invention is not limited to such standards and protocols. For example standards for Internet and other packet switched network transmission e.g. TCP IP UDP IP HTML HTTP HTTPS represent examples of the state of the art. Such standards are periodically superseded by faster or more efficient equivalents having essentially the same functions. Accordingly replacement standards and protocols having the same or similar functions as those disclosed herein are considered equivalents thereof.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a standalone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

As used in this application the term circuitry or circuit refers to all of the following a hardware only circuit implementations such as implementations in only analog and or digital circuitry and b to combinations of circuits and software and or firmware such as as applicable i to a combination of processor s or ii to portions of processor s software including digital signal processor s software and memory ies that work together to cause an apparatus such as a mobile phone or server to perform various functions and c to circuits such as a microprocessor s or a portion of a microprocessor s that require software or firmware for operation even if the software or firmware is not physically present.

This definition of circuitry applies to all uses of this term in this application including in any claims. As a further example as used in this application the term circuitry would also cover an implementation of merely a processor or multiple processors or portion of a processor and its or their accompanying software and or firmware. The term circuitry would also cover for example and if applicable to the particular claim element a baseband integrated circuit or applications processor integrated circuit for a mobile phone or a similar integrated circuit in server a cellular network device or other network device.

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and anyone or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

The illustrations of the embodiments described herein are intended to provide a general understanding of the structure of the various embodiments. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Additionally the illustrations are merely representational and may not be drawn to scale. Certain proportions within the illustrations may be exaggerated while other proportions may be minimized. Accordingly the disclosure and the figures are to be regarded as illustrative rather than restrictive.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as descriptions of features specific to particular embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings and described herein in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

One or more embodiments of the disclosure may be referred to herein individually and or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any particular invention or inventive concept. Moreover although specific embodiments have been illustrated and described herein it should be appreciated that any subsequent arrangement designed to achieve the same or similar purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the description.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b and is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments. Thus the following claims are incorporated into the Detailed Description with each claim standing on its own as defining separately claimed subject matter.

It is intended that the foregoing detailed description be regarded as illustrative rather than limiting and that it is understood that the following claims including all equivalents are intended to define the scope of the invention. The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

