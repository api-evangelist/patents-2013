---

title: Local name resolution
abstract: Embodiments described herein relate to systems and methods for local name resolution in network communications. Particular embodiments may enable a device resolution request to include a name that identifies the user device issuing the resolution request. A proxy server may accept the resolution request, and respond with a service internet protocol address that is customized to that user device, such that compatible user devices on the same local area network will each receive a different service IP address. When the proxy server receives traffic on a particular service IP address from a local area network, the proxy server may identify the compatible device even if a network address translation device has adjusted the requesting IP address for the device. Particular implementations may enable acceleration of HTTPS communications by the proxy server, or other such benefits.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09577979&OS=09577979&RS=09577979
owner: ViaSat, Inc.
number: 09577979
owner_city: Carlsbad
owner_country: US
publication_date: 20131114
---
This application claims the benefit of and is a non provisional of U.S. Provisional Application Ser. No. 61 726 202 filed on Nov. 14 2012 entitled DIFFERENTIAL HANDLING OF HTTPS PER DEVICE which is hereby expressly incorporated by reference in its entirety for all purposes.

Many home networks and other local area networks LANs include multiple end user devices are positioned behind a network address translation NAT device such as a home router. Such NAT devices obscure the identity of devices operating in the LAN and prevent the operation of certain communication techniques with individual devices. For example if a system is attempting to use web page acceleration techniques in web communications with devices behind a NAT it is difficult to know which end user devices can be accelerated and which cannot.

The impact of NAT devices is often seen in web browsing in which a user selects web page content and receives objects which is a core part of the Internet experience for Internet users. While the experience of users is typically a single selection followed by the viewing of a web page that is presented on the screen the process of presenting the web page on the screen can involve a large number of objects and multiple request response round trip communications from the user system to a system that is providing the web page.

One method of improving the performance of web page transmission and presentation is HTTP Hypertext Transfer Protocol prefetching. HTTP prefetching typically involves pre requesting content on behalf of a client or browser before a request for that content is actually generated as a typical HTTP request and response in the course of a typical web page transaction. Certain prefetching embodiments involve pre requesting content based on predictions about a future user selection without any actual action or selection by the user. Other HTTP prefetching systems involve pre requesting content in response to a user action or selection as part of a web page transaction. In such systems when content is prefetched it may become possible to satisfy the request for that content locally with regard to the client or browser or at a location with a lower latency to the user thereby negating the need to transmit the request and wait for the response from a content server. For example in cases where there exists high latency between the client generating the request and the server which responds with the context requested each negated request response may avoid the penalty for such latency thereby potentially reducing the total time required to satisfy the entire series of requests for the client. This may result in an accelerated end user experience.

The following describes systems and methods for identifying certain individual devices on a network in an environment where the identity of individual devices may be obscured. Certain embodiments for example may involve identification of at least one user device by a proxy server when the user device is one of multiple devices in a local area network that is connected to another network such as the Internet using a NAT device and where the NAT device is located between the user device and the Internet.

Certain networking systems use a transparent proxy acting as a man in the middle MITM for a variety of different purposes such as network acceleration and caching. Such systems may attempt to improve a user experience of network responsiveness without disruptions caused by the need for regular user selections to enable the improvements. Such improvements however may require device level customization. In particular the MITM may need to receive customized information that lets the MITM know what network traffic is associated with a particular device. As described above NAT devices may obscure the identity of individual devices so that a transparent proxy is unable to identify the individual devices and is therefore unable to provide system benefits to the individual device. Embodiments herein describe systems and methods for enabling a transparent proxy to identify devices behind a particular NAT by creating device specific service IP addresses for each compatible device behind a single NAT. The service IP addresses need to be unique for each device behind a particular NAT device but need not be globally unique because each NAT device will provide the proxy server with a different IP address associated with the NAT device. Because particular IP addresses at a proxy will only be used by one compatible device per NAT and each compatible device will communicate using a different IP address at the proxy the system may identify each compatible device per NAT based on the destination IP address or unique service IP address used by the particular compatible user device.

In a system with a proxy the user device communicates a resolution request to the proxy and the proxy handles separate resolutions with any number of content servers on behalf of the user device. For example in such a system each network communication session may begin with a resolution request for proxy.networkprovider.com. This resolution only needs to occur once at the beginning of each session. The proxy may then handle opening communication with www.contentprovider.com.

Embodiments described herein however will include a device identifier in the initial resolution request to the proxy. For example continuing with the example above a request for information from www.contentprovider.com may begin with a resolution request form proxy.networkprovider.com devicename. The device name may be the network IP address a device name or some other identifier that distinguishes the device from other devices behind a particular NAT device. In other embodiments the device name may be a DNS protocol extensions and does not necessarily need to be attached to the host name as shown in the example proxy.networkprovider.com devicename. Thus any aspect of the resolution request that enables the proxy server to distinguish between different user devices behind a NAT device may enable the name that identifies a user device. Individual devices may be configured to create resolution requests with a name identifying the user device by using installed software or remote configuration techniques. One particular remote configuration technique may be to use proxy.pac or proxy auto config PAC files with web proxy autodiscovery protocols WPAD to automatically configure communication tools such as a web browser operating on a user device. A PAC file defines how web browsers and other user agents which may function as part of a user device can automatically choose an appropriate proxy server or other network communication method for initiating traffic to request particular objects or web pages. A PAC file may either be configured manually or determined automatically be the use of Web Proxy Autodiscovery WPAD protocol. Other such methods of configuring a device may be apparent to a person of ordinary skill in the art. Additionally prior to S additional steps may be performed to verify that the device is capable of sending such a resolution request or that the device or communications software operating on the device such as a web browser will respond to proxied communications. User security selections opt out or opt ins selections may also be required in various embodiments. Additional details of examples of such options are described below.

In S then the proxy server intercepts the resolution request and creates an association between the device name and a unique service IP address. This unique service IP address may simply be unique among the user devices behind a particular NAT device. Such an association may be a table a list a mapping or any other such association.

In S then the proxy server issues a name resolution response to the user device containing the unique service IP address. In S the user device then uses the unique service IP address as a destination IP for traffic from the user device. For example requests for additional objects or content from the content provider will be communicated to the content provider via the unique service IP address of the proxy. In S the proxy receives the network communications traffic from the first user device that is using the unique service IP address. In S based on the previously made association the proxy may identify that the network communications traffic is associated with the particular user device.

After the proxy identifies that traffic is associated with a particular device functionality enabled on a per device basis by the proxy may be used for the network communications traffic. For example prefetching techniques that require the particular device to be known or use of cache history information stored at a proxy for the particular device may be used to accelerate network communications presentation of a web page to a user or other such benefits.

One particular implementation of such systems and methods for differential handling of devices behind a NAT may operate to enhance systems using HTTPS. HTTPS is an obstacle to improving web performance especially in systems with high latency such as satellite systems. Certain embodiments described herein describe differential methods for handling HTTPS in order to enable acceleration of HTTPS communication for devices configured to support such acceleration. While particular examples related to HTTPS are described in detail as one potential use of differential handling of devices behind a NAT it will be apparent to a person of ordinary skill in the art that such implementations may apply to other embodiments dealing with issues such as malware detection content distribution caching security and other similar aspects of network communications with devices behind a NAT.

Just as described above some HTTPS acceleration techniques may involve terminating SSL at a User Terminal UT which is functioning as a proxy and acting as a man in the middle MITM in order to decrypt and optimize HTTPS traffic. The server certificates presented to the web browser client as part of the security of HTTPS may be dynamically generated by and signed with a certificate authority CA in the UT and may contain most of the same fields as the original webserver certificate. The subject domain name DN serial number validity dates and extensions may be preserved. However the issuer DN may now be set to the name of the UT s certificate issuing authority or CA and the public private keys of the UT CA may be used in creating a forged certificate. If the browser trusts this CA due to the UT CA having been installed in the browser s certificate database then the MITM session which involves splitting the browser to content server session into two SSL sessions split at the UT may occur in a way that is transparent to the end user.

Many end user devices such as televisions mobile phones etc. provide no mechanism for accepting such certificates on the fly and cannot be accelerated. As a result if MITM HTTPS acceleration were employed users would either experience a pop up every time they visited an HTTPS site from one of these devices or would be blocked from accessing the site if the HTTPS transaction was part of an embedded application. Since multiple end user devices are typically positioned behind a network address translation NAT device such as a home router it is difficult to know which end user devices can be accelerated and which cannot.

Each user device may include functionality for communicating via the network to content sources . This may be in the form of a web browser or any other such structure for enabling network communications. Such communication functionality will include standard communication protocols for enabling communication via network . Embodiments of differential handling of HTTPS however modify such standard communication protocols in at least some of the user devices to identify a proxy . As part of such a modification at least a first user device of user devices is modified such that HTTPS communications from the first user device will be routed to proxy . Other communications for the first user device will be sent along non HTTPS communication path . This may be the standard communication path or may be a customized path that complements the use of proxy for acceleration of network communications.

In various embodiments proxy may be a stand alone server computer in network . In alternative embodiments proxy may be a portion of a server computer proxy server a user terminal such that one or more particular sockets on the computer are specifically dedicated to HTTPS acceleration. Regardless of whether proxy is a stand alone device or integrated with other functionality proxy accepts HTTPS communication from modified user devices such as the first user device and then functions as a man in the middle MITM to identify prefetchable objects from the HTTPS communication. This enables the proxy to request the prefetchable objects from content sources before the user objects request the prefetchable object significantly reducing communication round trip times for the user device.

Certain embodiments using installer software may include the option to install the UT CA at the same time as the browser configuration is modified to send HTTPS traffic to the proxy . In other embodiments the proxy configuration may be hard coded on the user device so managing the enabling disabling of the proxy may be difficult especially if the user device is mobile and will also be used on other networks that do not require the proxy for HTTPS. In other embodiments the WPAD approach could potentially be used to optimize HTTPS for all browsers that support WPAD and all other HTTP user agents would not be affected. In other words optimization using the proxy for certain devices may only be enabled for browser software. Such software may be particularly sensitive to round trip times since a user may be making a selection and waiting for a result. Non browser communications or other particular communications methods may not have the HTTPS acceleration enabled due to implementation overhead and the lack of a need to reduce the round trip time of communications for those particular communication systems.

Users may need to be able to opt in opt out of HTTPS acceleration. Also there may be devices in the home for which the UT CA cannot be installed in the browser s certificate database even if the user has opted in. It may also be difficult to distinguish between HTTPS connections originating from supported and unsupported devices when there is a NAT firewall between the UT and the user devices. If the UT terminates an SSL connection from an unsupported device it may not recover such that the application using the connection will not function properly.

In order for an proxy to distinguish between different devices behind a NAT firewall the system for directing HTTPS communications to the proxy may have every device behind the NAT firewall communicate with a different IP of the proxy. The proxy may create a map which associates HTTPS communications with the particular device and which enables specific devices behind the NAT firewall to use HTTPS acceleration and others not to use HTTPS acceleration due to privacy or compatibility issues. One embodiment of such a mapping is shown below in Table 1 with internal IP addresses behind a NAT firewall mapped to proxy addresses.

In addition to determining whether the communications configurations for a device are compatible with use of the proxy certain embodiments may require additional checks. For example certain embodiments may require an opt in communication. Because of the secure nature of HTTPS and the need to act as a MITM with access to the secure information an opt in may be necessary. Further still a check for the CA created by the proxy to insure that it will be accepted by the user device may be necessary. If the CA is not accepted the user device may present errors pop up windows or other undesirable results that defeat the purpose of HTTPS acceleration. Table 1 below shows one potential example for a system including a plurality of user devices 

In specific embodiments particular application programming interface functions may be used to help distinguish devices behind a firewall by allowing different user devices to send proxied traffic to different destination addresses. For example in the table above traffic originating from 192.168.1.14 may be sent to a different IP address of a proxy than traffic from 192.168.1.15. The proxy may then distinguish the devices based on which address of the proxy receives the network communications traffic. An example of logic for such functionality may be written as 

 1 FindproxyForURL url host var proxyip dnsResolve proxy.serviceprovider.com myIpAddress return proxy proxyip 8080 DIRECT 

Such a function may result in a domain name server request for a host name of proxy.serviceprovider.com 192.168.1.12 when the local address for a user device is 192.168.1.12. A mapping between that address or device name and a given destination proxy address may be used to respond to the DNS host request with the particular mapped IP address. The user device or certain communication functionality such as a browser on the user device may then send traffic to the specified proxy IP address. Devices in a local network that do not include support for such functions or which have opted out of such functions may simply communicate together on a standard channel which is not unique for devices behind the NAT device in the local network. In other words some non compatible user devices may not be provided a unique service provider IP address. These devices may simply use whatever service provider IP address would have been set in the absence of the customization provided by the embodiment described herein. Alternatively a set channel may be used for all non compatible devices that are not given unique service IP addresses.

In certain embodiments private IPs are assigned via DHCP so the assignment can change over time for a given device. The PC running Chrome browser in the above table could have 192.168.1.14 one day and 192.168.1.13 the next day. For this reason whenever new proxied HTTPS traffic arrives destined for one of the allocated proxy IPs 209.77.77.12 209.77.77.13 or 209.77.77.14 in the above example after some configurable period of non use the initial connections may be bypassed without full optimization until a probe can be used to determine whether or not the device can support full HTTPS optimization. This probe HTTPS object can be injected into standard HTTP HTML for instance by adding the Javascript re determine compatibility and updating a mapping of devices behind the NAT firewall. Such a probe may cause an HTTPS request to be issued by the active web browser. Since we know the destination host for the request is a test probe host the system may safely terminate an SSL for the request initiated by the probe and attempt to use a CA generated by the proxy. If the browser accepts the generated CA then the system may assume for the current mapping that it is possible to accelerate the HTTPS communications for this device. If the browser does not accept the CA certificate then full optimization is not implemented for this mapped device. Such a probe may happen in the background of the user device and should have a minimal impact on a user experience since the probe communication is small.

S then involves identifying a first user device of the plurality of user devices that is compatible with acceleration of HTTPS communication using the proxy . This may include sending test communications to each device to identify the settings of the user device and to verify that other elements of the system such as the CA and any opt in are present. S involves configuring the first device to direct HTTPS communications to the proxy and to direct non HTTPS communications to a location separate from the proxy. In certain embodiments this may involve adjusting the configuration for HTTPS communications while making no adjustments to non HTTPS communications. Directing non HTTPS communications to a location separate from the proxy may thus simply mean making no adjustments to a standard communication. S then includes receiving at the proxy at least a portion of an HTTPS communication between the first user device of the plurality of user devices and a content server. For example in Table 1 three of the four devices are considered compatible with acceleration of HTTPS communication and configured to send HTTPS communications to the proxy the laptop the tablet and the PC. The non compatible device shown as the television will send communications via whatever path is standard in the device. This may be non HTTPS communication path or some other path. The rest of the devices shown in Table 1 send HTTPS communications to the proxy .

S includes decrypting the portion of the HTTPS communication between the first user device and the content source to create a decrypted proxy portion of the HTTPS communication. In some embodiments this may involve terminating a SSL that is part of the HTTPS communication at the proxy . In other embodiments different communication intercept implementations may be used. While certain devices may be configured to communicate HTTPS communications to the proxy not all of these HTTPS communications will be accelerated by the proxy. The requirements for acceleration may vary from system to system. In the example shown in Table 1 on one device the PC running Chrome browser is shown as actually implementing full acceleration. For the embodiment in Table 1 the decryption will not occur for the tablet because the tablet will not accept the CA created by the proxy and the laptop HTTPS communications will not be decrypted because no opt in is identified to provide permission for the proxy to override the security of the HTTPS communications. Various embodiments may include periodic checks or user initiated checks to verify that the CA functionality and opt in selections have not changed.

S includes analyzing the decrypted proxy portion of the HTTPS communication to identify at least one prefetchable object for prefetching as part of the HTTPS communication. This is part of the acceleration process which is performed for devices which meet all of the elements for HTTPS acceleration. This may include scanning the communication for references to objects that will be requested or are expected to be requested by the user device in response to the user device receiving the portion of the HTTPS communication with the reference. Such references may be container files Javascript elements that create uniform resource locators URLs tracking references identified by a communication history stored at the proxy or by another such method of identifying prefetchable references.

S then includes communicating from the proxy an HTTPS prefetch request for the at least one prefetchable object based on the analyzing of the decrypted proxy portion of the HTTPS communication. This may include communicating a CA that is generated by the proxy or may be any other such method of communicating by the proxy acting as a MITM. The server certificates presented to the web browser client may be dynamically generated by and signed with a CA in the UT and may contain most of the same fields as the original webserver certificate. The subject DN serial number validity dates and extensions may be preserved. However the issuer DN may now be set to the name of the UT s certificate issuing authority CA and the public private keys of the UT CA may be used in creating a forged certificate. If the browser trusts this CA due to the UT CA having been installed in the browser s certificate database then the MITM session which involves splitting the browser to content server session into two SSL sessions split at the UT may occur in a way that is transparent to the end user. In other embodiments this may mean that the acceleration is transparent except for an opt in indication and an address redirection implemented on the device.

In certain embodiments the initial structure of determining which HTTPS traffic to optimize may be obscured when translation is done with a NAT firewall between the user device and the proxy . For example if the proxy terminates an SSL connection from an unsupported device the proxy may not be able to recover the communication and may cause the connection not to function properly.

Embodiments of the system including proxy and the browser can be implemented in a number of ways without departing from the scope of the invention. In some embodiments the proxy is a proxy server and the browser is an executable operating system on a user device. For example a transparent intercept proxy can be used to intercept traffic in a way that is substantially transparent to users at the client side of the proxy tunnel.

Embodiments of the user system may include any component or components for providing a user with network interactivity. For example the user system may include any type of computational device network interface device communications device or other device for communicating data to and from the user. Typically the communications system facilitates communications between multiple user systems and a variety of content sources over one or more networks only one of each is shown in for the sake of clarity . The content sources are in communication with the proxy via one or more networks . The network may be any type of network and can include for example the Internet an Internet protocol IP network an intranet a wide area network WAN a local area network LAN a virtual private network VPN the Public Switched Telephone Network PSTN and or any other type of network supporting data communication between devices described herein in different embodiments. The network may also include both wired and wireless connections including optical links.

As used herein content source is intended broadly to include any source of content in which the users may be interested. For example a content source may provide website content television content file sharing multimedia serving voice over Internet protocol VoIP handling and or any other useful content. It is worth noting that in some embodiments the content sources are in direct communication with the proxy e.g. not through the network . For example the proxy may be located in a gateway that includes a content or application server. As such discussions of embodiments herein with respect to communications with content sources over the network are intended only to be illustrative and should not be construed as limiting.

In some embodiments when the user system communicates with the content source the proxy intercepts the communications for one or more purposes.

As described below the proxy may be part of a server system that includes components for server side communications e.g. base stations gateways satellite modem termination systems SMTSs digital subscriber line access multiplexers DSLAMs etc. . The proxy may act as a transparent and or intercepting proxy. For example the browser is in communication with the proxy over a client server communication link and the proxy is in communication with the content source over a content network link. The proxy may act as a transparent MITM to intercept the data as it passes between the client server communication link and the content network link. Some purposes of the interception may include filtering caching parsing and or otherwise processing the requests and responses in addition to prefetching for HTTPS acceleration. For example when the user system requests a web object from a content source the proxy may intercept and parse the request to implement prefetching as well as other types of functionality.

It is worth noting that embodiments of the client server communication link e.g. between the browser and the proxy and the content network link including content network link portions and e.g. between the proxy and the content sources via the networks can be implemented as various types of links have different and or changing link characteristics including for example differences in bandwidth latency cost per bit etc. For example while certain embodiments are described in the context of a satellite communications system where the client server communication link includes at least one satellite link other topologies and link types are possible. While the communications system illustrated in shows only one communication link embodiments may operate in the context of and take advantage of links from a variety of different user devices as shown in .

As traffic traverses the satellite communications system in multiple directions the gateway may be configured to implement multi directional communications functionality. For example the gateway may send data to and receive data from the base stations . Similarly the gateway may be configured to receive data and information directed to one or more user systems and format the data and information for delivery to the respective destination device via the satellite or receive signals from the satellite e.g. from one or more user systems directed to a destination in the network and process the received signals for transmission through the network .

In various embodiments one or more of the satellite links are capable of communicating using one or more communication schemes. In various embodiments the communication schemes may be the same or different for different links. The communication schemes may include different types of coding and modulation combinations. For example various satellite links may communicate using physical layer transmission modulation and coding techniques using adaptive coding and modulation schemes etc. The communication schemes may also use one or more different types of multiplexing schemes including Multi Frequency Time Division Multiple Access MF TDMA Time Division Multiple Access TDMA Frequency Division Multiple Access FDMA Orthogonal Frequency Division Multiple Access OFDMA Code Division Multiple Access CDMA or any number of other schemes.

The computer system is shown comprising hardware elements that can be electrically coupled via a bus or may otherwise be in communication as appropriate . The hardware elements can include one or more processors including without limitation one or more general purpose processors and or one or more special purpose processors such as digital signal processing chips graphics acceleration chips and or the like one or more input devices which can include without limitation a mouse a keyboard and or the like and one or more output devices which can include without limitation a display device a printer and or the like.

The computer system may further include and or be in communication with one or more storage devices which can comprise without limitation local and or network accessible storage and or can include without limitation a disk drive a drive array an optical storage device solid state storage device such as a random access memory RAM and or a read only memory ROM which can be programmable flash updateable and or the like. The computer system might also include a communications subsystem which can include without limitation a modem a network card wireless or wired an infrared communication device a wireless communication device and or chipset such as a Bluetooth device an 802.11 device a WiFi device a WiMax device cellular communication facilities etc. and or the like. The communications subsystem may permit data to be exchanged with a network such as the network described below to name one example and or any other devices described herein. In many embodiments the computer system will further comprise a working memory which can include a RAM or ROM device as described above.

The computer system also can comprise software elements shown as being currently located within the working memory including an operating system and or other code such as one or more application programs which may comprise computer programs of the invention and or may be designed to implement methods of the invention and or configure systems of the invention as described herein. Merely by way of example one or more procedures described with respect to the method s discussed above might be implemented as code and or instructions executable by a computer and or a processor within a computer . A set of these instructions and or code might be stored on a computer readable storage medium such as the storage device s described above. In some cases the storage medium might be incorporated within a computer system such as the system . In other embodiments the storage medium might be separate from a computer system i.e. a removable medium such as a compact disc etc. and or provided in an installation package such that the storage medium can be used to program a general purpose computer with the instructions code stored thereon. These instructions might take the form of executable code which is executable by the computer system and or might take the form of source and or installable code which upon compilation and or installation on the computer system e.g. using any of a variety of generally available compilers installation programs compression decompression utilities etc. then takes the form of executable code.

It will be apparent to those skilled in the art that substantial variations may be made in accordance with specific requirements. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets etc. or both. Further connection to other computing devices such as network input output devices may be employed.

In one aspect the invention employs a computer system such as the computer system to perform methods of the invention. According to a set of embodiments some or all of the procedures of such methods are performed by the computer system in response to processor executing one or more sequences of one or more instructions which might be incorporated into the operating system and or other code such as an application contained in the working memory . Such instructions may be read into the working memory from another machine readable medium such as one or more of the storage device s . Merely by way of example execution of the sequences of instructions contained in the working memory might cause the processor s to perform one or more procedures of the methods described herein.

The terms machine readable medium and computer readable medium as used herein refer to any medium that participates in providing data that causes a machine to operate in a specific fashion. In an embodiment implemented using the computer system various machine readable media might be involved in providing instructions code to processor s for execution and or might be used to store and or carry such instructions code e.g. as signals . In many implementations a computer readable medium is a physical and or tangible storage medium. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as the storage device s . Volatile media includes without limitation dynamic memory such as the working memory . Transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise the bus as well as the various components of the communication subsystem and or the media by which the communications subsystem provides communication with other devices . Hence transmission media can also take the form of waves including without limitation radio acoustic and or light waves such as those generated during radio wave and infrared data communications .

Common forms of physical and or tangible computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium punchcards papertape any other physical medium with patterns of holes a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave as described hereinafter or any other medium from which a computer can read instructions and or code.

Various forms of machine readable media may be involved in carrying one or more sequences of one or more instructions to the processor s for execution. Merely by way of example the instructions may initially be carried on a magnetic disk and or optical disc of a remote computer. A remote computer might load the instructions into its dynamic memory and send the instructions as signals over a transmission medium to be received and or executed by the computer system . These signals which might be in the form of electromagnetic signals acoustic signals optical signals and or the like are all examples of carrier waves on which instructions can be encoded in accordance with various embodiments of the invention.

The communications subsystem and or components thereof generally will receive the signals and the bus then might carry the signals and or the data instructions etc. carried by the signals to the working memory from which the processor s retrieves and executes the instructions. The instructions received by the working memory may optionally be stored on a storage device either before or after execution by the processor s .

Merely by way of example illustrates a schematic diagram of a network system that can be used in accordance with one set of embodiments. In various embodiments the network system may function as all or part of network of with hardware components functioning as user devices or proxy . The system can include one or more user computers . The user computers can be general purpose personal computers including merely by way of example personal computers and or laptop computers running any appropriate flavor of Microsoft Windows and or Mac OS operating systems and or workstation computers running any of a variety of commercially available UNIX or UNIX like operating systems. These user computers can also have any of a variety of applications including one or more applications configured to perform methods of the invention as well as one or more office applications database client and or server applications and web browser applications. Alternatively the user computers can be any other electronic device such as a thin client computer Internet enabled mobile telephone and or personal digital assistant PDA capable of communicating via a network e.g. the network described below and or displaying and navigating web pages or other types of electronic documents. Although the exemplary system is shown with three user computers any number of user computers can be supported.

Certain embodiments of the invention operate in a networked environment which can include a network . The network can be any type of network familiar to those skilled in the art that can support data communications using any of a variety of commercially available protocols including without limitation TCP IP SNA IPX AppleTalk and the like. Merely by way of example the network can be a local area network LAN including without limitation an Ethernet network a Token Ring network and or the like a wide area network WAN a virtual network including without limitation a virtual private network VPN the Internet an intranet an extranet a public switched telephone network PSTN an infrared network a wireless network including without limitation a network operating under any of the IEEE 802.11 suite of protocols the Bluetooth protocol known in the art and or any other wireless protocol and or any combination of these and or other networks.

Embodiments of the invention can include one or more servers . Each of the servers may be configured with an operating system including without limitation any of those discussed above as well as any commercially or freely available server operating systems. Each of the servers may also be running one or more applications which can be configured to provide services to one or more user computers and or other servers .

Merely by way of example one of the servers may be a web server which can be used merely by way of example to process requests for web pages or other electronic documents from user computers . The web server can also run a variety of server applications including HTTP servers FTP servers CGI servers database servers Java servers and the like. In some embodiments of the invention the web server may be configured to serve web pages that can be operated within a web browser on one or more of the user computers to perform methods of the invention.

The servers in some embodiments might include one or more application servers which can include one or more applications accessible by a client running on one or more of the user computers and or other servers . Merely by way of example the server s can be one or more general purpose computers capable of executing programs or scripts in response to the user computers and or other servers including without limitation web applications which might in some cases be configured to perform methods of the invention . Merely by way of example a web application can be implemented as one or more scripts or programs written in any suitable programming language such as Java C C or C and or any scripting language such as Perl Python or TCL as well as combinations of any programming scripting languages. The application server s can also include database servers including without limitation those commercially available from Oracle Microsoft Sybase IBM and the like which can process requests from clients including depending on the configurator database clients API clients web browsers etc. running on a user computer and or another server . In some embodiments an application server can create web pages dynamically for displaying the information in accordance with embodiments of the invention. Data provided by an application server may be formatted as web pages comprising HTML Javascript etc. for example and or may be forwarded to a user computer via a web server as described above for example . Similarly a web server might receive web page requests and or input data from a user computer and or forward the web page requests and or input data to an application server. In some cases a web server may be integrated with an application server.

In accordance with further embodiments one or more servers can function as a file server and or can include one or more of the files e.g. application code data files etc. necessary to implement methods of the invention incorporated by an application running on a user computer and or another server . Alternatively as those skilled in the art will appreciate a file server can include all necessary files allowing such an application to be invoked remotely by a user computer and or server . It should be noted that the functions described with respect to various servers herein e.g. application server database server web server file server etc. can be performed by a single server and or a plurality of specialized servers depending on implementation specific needs and parameters.

In certain embodiments the system can include one or more databases . The location of the database s is discretionary merely by way of example a database might reside on a storage medium local to and or resident in a server and or a user computer . Alternatively a database can be remote from any or all of the computers and servers so long as the database can be in communication e.g. via the network with one or more of these. In a particular set of embodiments a database can reside in a storage area network SAN familiar to those skilled in the art. Likewise any necessary files for performing the functions attributed to the computers and servers can be stored locally on the respective computer or server and or remotely as appropriate. In one set of embodiments the database can be a relational database such as an Oracle database that is adapted to store update and retrieve data in response to SQL formatted commands. The database might be controlled and or maintained by a database server as described above for example.

While various embodiments are described above one skilled in the art will recognize that numerous modifications are possible. For example the methods and processes described herein may be implemented using hardware components software components and or any combination thereof. Further while various methods and processes described herein may be described with respect to particular structural and or functional components for ease of description methods of the invention are not limited to any particular structural and or functional architecture but instead can be implemented on any suitable hardware firmware and or software configurator. Similarly while various functionalities are ascribed to certain system components unless the context dictates otherwise this functionality can be distributed among various other system components in accordance with different embodiments of the invention.

Moreover while the procedures comprised in the methods and processes described herein are described in a particular order for ease of description unless the context dictates otherwise various procedures may be reordered added and or omitted in accordance with various embodiments of the invention. Moreover the procedures described with respect to one method or process may be incorporated within other described methods or processes likewise system components described according to a particular structural architecture and or with respect to one system may be organized in alternative structural architectures and or incorporated within other described systems. Hence while various embodiments are described with or without certain features for ease of description and to illustrate exemplary features the various components and or features described herein with respect to a particular embodiment can be substituted added and or subtracted from among other described embodiments unless the context dictates otherwise. Consequently although the invention has been described with respect to exemplary embodiments it will be appreciated that the invention is intended to cover all modifications and equivalents within the scope of the following claims.

While the invention has been described with respect to exemplary embodiments one skilled in the art will recognize that numerous modifications are possible. For example the methods and processes described herein may be implemented using hardware components software components and or any combination thereof. Further while various methods and processes described herein may be described with respect to particular structural and or functional components for ease of description methods of the invention are not limited to any particular structural and or functional architecture but instead can be implemented on any suitable hardware firmware and or software configurator. Similarly while various functionalities are ascribed to certain system components unless the context dictates otherwise this functionality can be distributed among various other system components in accordance with different embodiments of the invention.

Moreover while the procedures comprised in the methods and processes described herein are described in a particular order for ease of description unless the context dictates otherwise various procedures may be reordered added and or omitted in accordance with various embodiments of the invention. Moreover the procedures described with respect to one method or process may be incorporated within other described methods or processes likewise system components described according to a particular structural architecture and or with respect to one system may be organized in alternative structural architectures and or incorporated within other described systems. Hence while various embodiments are described with or without certain features for ease of description and to illustrate exemplary features the various components and or features described herein with respect to a particular embodiment can be substituted added and or subtracted from among other described embodiments unless the context dictates otherwise. Consequently although the invention has been described with respect to exemplary embodiments it will be appreciated that the invention is intended to cover all modifications and equivalents within the scope of the following claims.

