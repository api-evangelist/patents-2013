---

title: Providing storage resources upon receipt of a storage service request
abstract: A mechanism is provided for providing storage resources of a storage management system. A storage service request is received comprising an indication of a service class. A determination is made of all resource managers mapped to the indicated service class according to a first mapping. For each of the determined resource managers: a determination is made of selected ones of all the storage resources controllable by the determined resource manager; monitoring data of the selected storage resources is gathered; the gathered monitoring data is compared for calculating a score for each one of the selected storage resources; and at least one function of the determined resource manager operable to control the storage resource having an optimum score is called.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342526&OS=09342526&RS=09342526
owner: International Business Machines Corporation
number: 09342526
owner_city: Armonk
owner_country: US
publication_date: 20130327
---
The invention relates to the field of data storage management and more particularly to the provision of storage resources as a service.

The demand for the automated management of an IT infrastructure in particular the management and provision of storage space has been constantly growing. The provision of storage space to a plurality of clients is typically based on a contract comprising a so called service level agreement SLA specifying the level of service a storage provider has agreed to provide to the respective client. Service level agreements can contain numerous storage capacity and or storage performance metrics which may be expressed in the form of service level objectives SLOs . Technically storage capacity may be provided by various forms of IT services e.g. by means of a cloud computing environment or other service based delivery models. An example of a cloud server environment being operable to perform data storage operations supporting a variety of clients that may connect of the system is disclosed in WO 2011 002777 A2. Another example of a storage infrastructure is described in US 2009 0182777 A1. The described storage infrastructure ensures that customer data is stored on appropriate storage components satisfying a set of SLO policies.

Current IT systems used by service providers to offer and provide storage capacity to their clients are inflexible. In case the service provider offers multiple different service levels corresponding to different sets of SLOs to the clients each of said service levels is tightly coupled to a particular set of storage resources being operable to provide their respective storage capacity in accordance with their respectively assigned service level and SLOs. For example hard discs or storage pools with very short response times which tend to be expensive may be assigned to a high quality and more expensive service level while slow storage resources e.g. tape drives may be assigned to a service level suited for doing back up jobs. Said assignment is based on a direct mapping of parameters required by the respective proprietary Application Programming Interfaces APIs of the storage resources to the service level provided. Often said mapping is specified within compiled code sections of the storage management system. Adding or removing storage resources to the storage management system or reassigning a storage resource to another service level requires a manual modification and maybe even recompilation of elements of the service management infrastructure. Due to the plurality of storage models storage types storage vendors and other factors from which an API providing access to a given storage resource may depend the configuration and assignment of the storage resources to different service levels is a time consuming task in state of the art storage management systems resulting in inflexible systems being difficult to maintain and operate.

Some other state of the art systems allow the clients to directly query and access the storage resources. However said approach does not increase the flexibility of storage resource assignment but merely shifts the problems associated with maintaining an association of service levels to proprietary storage resource APIs from the service provider to the client.

The inflexible assignment of storage resources to service levels further bears the problem that multiple requests for the same storage service might cause bottlenecks and available storage capacity may not be optimally used.

In one illustrative embodiment a computer implemented method is provided for providing storage resources of a storage management system SMS . The illustrative embodiment receives a storage service request comprising an indication of a service class the indicated service class is a data object having one or more requirements to be fulfilled by any storage service provided in accordance with the service class. The illustrative embodiment determines all resource managers mapped to the indicated service class according to a first mapping each resource manager being a runtime data object comprising a generic API providing control over one or more of the storage resources. For each of the determined resource managers the illustrative embodiment determines selected ones of all the storage resources controllable by the determined resource manager gathers monitoring data of the selected storage resources the gathered monitoring data is indicative of free capacities of the selected storage resources compares the gathered monitoring data with the one or more requirements of the indicated service class for calculating a score for each one of the selected storage resources and calls at least one function of the determined resource manager operable to control a storage resource having an optimum score via the generic API associated with the resource manager thereby configuring or initializing the storage resource to provide the storage service in accordance with the indicated service class.

In a further aspect the invention relates to a computer readable medium comprising computer readable program code embodied therewith which when executed by a processor cause the processor to perform various ones of and combinations of the operations outlined above with regard to the method illustrative embodiment.

In a further aspect the invention relates to a computer system operatively coupled to a plurality of storage resources. The computer system comprises an interface for receiving a storage service request and a SMS for managing the storage resources. The SMS is adapted for performing various ones of and combinations of the operations outlined above with regard to the method illustrative embodiment.

These and other features and advantages of the present invention will be described in or will become apparent to those of ordinary skill in the art in view of the following detailed description of the example embodiments of the present invention.

A storage management system SMS as used herein encompasses any kind of monolithic or distributed program logic being operable to receive storage service requests from one or more client devices and being operable to automatically provide storage capacity to the clients in response to said request. The program logic may be software based firmware based and or hardware based. The storage capacity is derived from one or more storage resources being controlled by the SMS. Controlling a storage resource may comprise configuring initializing and or managing of storage capacities and functions provided by a storage resource in order to provide storage capacities of said storage resources as the requested service. For example the IBM Tivoli storage productivity center may be used as the SMS.

A storage resource as used herein encompasses one or more computer readable storage devices or storage device components which are controlled in a concerted manner via a common interface. Typically said interface is specific to the vendor and or the type and or the model of the storage resource. A storage resource may be any of the following a physical storage volume a logical storage volume a physical storage device comprising one or more physical storage volumes or a storage pool comprising a plurality of physical and or logical storage volumes. A physical storage volume may be a hard disk a hard disk partition or a Logical Unit Number LUN of a storage device. The SMS may treat any one of the physical volumes as a sequence of chunks called physical extents. A logical storage volume is a storage volume whose storage blocks or blocks are mapped to one or more physical storage volumes. A physical storage device can be for example a Fiber Channel disk a Mirrored disk a RAID protected disk a SATA drive a network attached storage a short tape a WORM tape an Encryption Tape a Long tape a Flash drive solid state discs SSD Serial ATA discs SATA and various optical storage devices. A storage resource of a SMS may be physically integrated within the computer system hosting the SMS or may be connected to said computer system via a network connection typically a TCP IP connection.

A service level objective SLO as used herein is a set of one or more parameter value pairs being descriptive of e.g. the available storage capacity storage accessibility retention time the security of the stored data or performance. Said parameter value pairs may e.g. indicate the mean time between failures mean time to repair data transfer rates or similar measurable details being characteristic for a particular service level. At least some of the service level objectives may be used to specify the minimum or maximum property value s allowable for any storage capacity provided as a service of a selected service level having assigned said SLOs.

A service class as used herein is a data object representing a predefined service level of a storage service whereby said service level corresponds to a set of requirements any storage service provided in accordance with said service level has to comply to. Preferentially said requirements are represented in the form of one or more service level objectives SLOs corresponding to said service level and being stored in association with the service class representing said service level. A data object may be for example an entry in a relational database a file in particular an XML file or a binary file. It may also be an element of a file e.g. an XML element of an XML file or a line in a file comprising a table.

A resource manager as used herein is a runtime data object exposing a generic API to a SMS for allowing said SMS to control one or more storage resources controlled by said resource manager via said generic API. A runtime data object is a program logic executed by a processor. A resource manager may comprise one or more program routines executed upon receipt of a call via the generic API wherein said program routines are operable to call proprietary methods of a respectively controlled storage resource via a proprietary interface of said storage resource.

A generic API of a resource manager as used herein is an application program interface API allowing to access and call some functions of the resource manager via said generic API. The term generic denotes that the API is not specific for the vendor or model of the storage resources controlled by the resource manager. According to preferred embodiments the generic API comprises methods and attributes being specified in accordance with a non proprietary meta model of storage functions and capabilities to be provided by the SMS to a client upon request whereby the generic API abstracts from the particularities of the storage resources. Said particularities may relate to the vendor manufacturer or other property of the storage resource.

The term monitoring data indicates a computational load of a storage resource at a given moment in time. Monitoring data may comprise for example the occupied and or free storage space on a storage resource the number of input and or output operations I O operations per time executed on said storage resource the amount of data written to and or read from the storage resource a response time in respect to an I O request etc.

A storage service request as used herein is a computer interpretable request of a client e.g. a mobile phone or a computer system for being granted access to storage capacity of a particular kind and offering a particular level of service.

A mapping as used herein is a storage space comprising data assigning two or more entities to each other. The assignment may be implemented e.g. by one or more tables of a relational database or by one or more files e.g. XML files.

A storage model as used herein is an identifier of the physical device type providing or underlying the storage resource. The storage model is a manufacturer and or vendor coined category. Examples of two storage models provided by a vendor IBM are IBM DS8000 and IBM XIV .

A storage type as used herein denominates the type of access to data stored on a storage resource supported by said storage resource. For example a storage resource having organized its stored data within a file system may have the storage type file system another storage resource accessible via block based SCSI commands may have the storage type block while the data of still another storage resource may be accessible via a proprietary data I O interface such as Amazon s S3 protocol said storage resource having the storage type object .

A vendor as used herein is an identifier of the organization having sold the storage resource and or having manufactured the storage resource.

Said features may be advantageous as a highly flexible coupling of the requested service level represented by the indicated service class and the storage resources actually used for providing the requested storage capacity is provided. The coupling allows a dynamic at runtime of the SMS selection of the storage resources used for providing the service in dependence on the current load of the storage resources. Thus a better use of available storage capacity is provided and costs for additional hardware can be avoided.

The usage of resource managers as an additional instance between the individual storage resources and the service classes is advantageous as said additional mapping element increases the flexibility of the mapping and allows mapping service classes to generic storage related functions provided by the resource managers rather than directly mapping the service classes to proprietary interfaces of the storage resources. This feature may also ease maintainability because the only components which are tightly bound to the proprietary interfaces of the storage resources are the storage managers. As the resource managers expose a generic API the first mapping may allow to flexibly and generically re assign service classes to different abstract storage functions such as formatting indexing mirroring etc provided by other resource managers without burdening the operator with the requirement to dig into the details of any proprietary API of one of the storage resources.

According to preferred embodiments the first mapping between service classes and resource managers is a data structure that can be edited and becomes effective without any recompilation of source code. The first mapping may be for example a configuration file or an entry in a relational database. Said features may be advantageous as the service provider may reassign a plurality of storage resources to a different service level by editing a single entry comprising a mapping of the resource manager controlling said resources to another service level.

The storage request may be a request for storage capacity in accordance with the SLOs assigned to the requested service class. For example a storage service request for backup storage space will typically indicate a service class requiring storage space with large storage capacity whereby comparatively large response times may be considered as acceptable. A storage service request for storage to be used by an application program executing a plurality of I O operations will typically require the assignment of storage resources having short response time. According to some embodiments the storage capacity is provided in response to the service request by means of a cloud computing environment. Upon receipt of the storage service request the SMS may invoke each of the selected resource managers i.e. resource managers associated with resources able to provide the requested service class in order to obtain a score for resources managed by said the selected resource managers respectively. This score may be used by the SMS in deciding which resources to allocate storage capacity on in order to fulfill said request. Preferentially the SMS selects a score calculation algorithm from a plurality of available score calculation algorithm in dependence on the indicated service class. In dependence on the selected algorithm different input parameters may be used such as the rate of input output operations per time unit I O rate or the I O rate per capacity unit or simply the amount of unused storage capacity on the resource. Preferentially providing storage capacity is implemented as granting the client read and or write access to storage capacity provided by the one or more storage resources having assigned an optimum score value. Said features may result in a form of load balancing across resources available to fulfill a storage service request e.g. a request for a particular amount of storage capacity thereby preventing bottlenecks.

In case of a positive correlation of score value and the amount of free storage capacity and or the level of storage quality the highest calculated score value is considered as optimum score. Otherwise the lowest calculated score value is considered the optimum score. The score may be indicative of free storage capacities in respect to the requirements of all available service classes or selectively in respect to the indicated service class. According to some embodiments the score is calculated for all storage resources of the SMS by the same scoring algorithm taking as input for example the free storage space the current I O load etc. According to other embodiments the score is calculated by a scoring algorithm being particular to the service class indicated in the request. This may be advantageous as a storage service request for backup storage capacity may have different requirements SLOs than for example a request for storage space to be used by an I O intensive application program see above .

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon. Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected cloud computing nodes. It is understood in advance that although this disclosure may be used in a cloud computing environment implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed. Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics and at least three service models. Characteristics may be as follows On demand self service broad network access resource pooling rapid elasticity and measured service. Service Models may be as follows Software as a Service SaaS platform as a service PaaS Infrastructure as a Service IaaS . In the following like numbered elements in these figures are either similar elements or perform an equivalent function.

In the following an embodiment will be described in greater detail in respect to the underlying mappings. A SMS according to said embodiment may comprise or be operatively coupled to a plurality of storage resources respectively being of a particular storage type having been provided by a particular vendor and comprising at least one main functionality. For each unique combination of said property values a corresponding resource manager is created and added to the SMS for controlling the respective storage resource 

The resource managers comprise program logic for controlling i.e. managing and or configuring the functionalities of the supported storage resources in accordance with said resource s storage type and device characteristics. For example resource managers supporting storage type File implement generic interface methods for creating file systems creating shares so remote clients can access the file system deleting shares and file systems etc. Likewise resource managers supporting storage type Block implement generic interface methods for the configuration of LUN creation mapping and masking depending on the requested access details for the block device etc. The resource manager specific implementation of these methods takes care of performing any additional vendor and model specific configuration of the respective storage resource in order to cause the created storage capacity unit for instance file system or LUN to expose the functionalities advertised by the resource manager via corresponding generic method interfaces and to provide said functionalities to the client having submitted the storage service request. The type of storage capacity units is not restricted to file systems or LUNs but may also be any other type of storage capacity like object based or other types of storage. The resource managers are mapped to service classes in a first mapping . For example above resource managers may be mapped to service classes having been defined by a cloud service provider as follows 

For each of the service classes the service provider may provide a high level product agnostic description of the kind and level of service it represents. The list of service classes along with these descriptions may then be exposed to service consumers which may choose a service class from this list and reference it when requesting storage capacity in accordance with a certain class of service.

The default column represents the first parameter value being indicative if all storage resources controllable by a given storage manager should be selected for retrieving monitoring data for determining the storage capacity available for a requested service class. Depending on the configuration of the storage resources each of the resource managers may support all storage devices of the vendor and model in the provider s environment which they have been created for by default if the first parameter value equals yes implying All assigned per default . If the first parameter value has assigned the data value no implying NONE assigned per default none of the storage resources supported by a given storage manager is per default but possibly by means of the second mapping selected for calculating a score value and or determining the storage capacity available for a given service request. The assignment of service classes to storage resources may further be specified in a second mapping as exemplary depicted in table 3 wherein individual storage resources are respectively assigned to or are unassigned from one or more service classes 

The Assigned Unassigned column comprises a list of values of a second parameter being indicative of an assignment or un assignment of a given storage resource to one or more or even all service classes.

All storage resources controllable by a resource manager mapped according to the first mapping depicted by table 1 to a requested service class are selected for calculating the score and or for determining the storage capacity available for a given service class in case the first parameter value is indicative of a per default mapping. For example the resource manager SnapshotFileForIBMSONAS may have assigned according to a general mapping a plurality of storage resources controllable by said resource managers among them storage resource IBM SONAS private 12345 . According to the first mapping table 2 resource manager SnapshotFileForIBMSONAS is assigned to service class MediumAvailabilityForFiles whereby said mapping is flagged by a data value default yes . Thus per default storage capacity provided by any one of the storage resources mapped to MediumAvailabilityForFiles may be used for score calculation and capacity determination in case of a service request for class MediumAvailabilityForFiles was received. However storage resource IBM SONAS private 12345 will not be selected for said tasks as it has been unassigned from all service classes in the second mapping. No table corresponding to the general mapping is shown. The general mapping may be based on a dynamic execution of an evaluation rule etc. For example the general mapping may comprise a program routine determining all resource managers of table 1 whose name ends with SONAS and consider each SONAS storage resource as a storage resource being controllable by said resource manager.

Likewise by default all NetApp FAS2000 storage resources will be used in response to requested service classes mapped to any of the resource managers listed in table 1 whose name ends with NetApp . However the specific storage resource NetApp FAS2000 1382 will not be selected for score calculation or storage capacity allocation as said storage resource is unassigned in the second mapping from all service classes except for the service class HighPerformanceForFiles. Due to the explicit assignment in the second mapping table 3 storage resource NetApp FAS2000 1382 will only be selected in case a storage request for a HighPerformanceForFiles service class was received. Service class HighPerformanceBlock is not marked as a default service class in table 3 above but is assigned explicitly to one specific storage resource a particular storage pool. So requests for storage capacity which ask for service class HighPerformanceBlock will be handled by allocating LUNs from pool StoragePool HiPerf 2735 as specified in table 3 provided the capacity of this pool is sufficient.

Resource manager RM comprises generic API and generic API comprises method interface I and method interface II .. Resource manager RM further comprises program routines and program routines comprises call functions such as call function I and call function II. Similar to resource manager RM Resource manager RM comprises generic API and generic API comprises method interface II . and method interface III . Resource manager RM further comprises program routines and program routines comprises call functions such as call function II and call function III.

Data expiration Storage resource R differs from R in that its configuration A . causes a deactivation of the data expiration functionality F I . indicated by a dotted border while configuration B . activates said functionality F I . indicated by thick border line . By means of the first and second mapping storage capacity of storage resource R but not of storage resource R is provided in response to a request for service class while storage capacity of storage resource R but not of storage resource R is provided in response to a request for service class . Storage resource R utilizes configuration to activate deactivate functionality F II and functionality F III .

Calling storage type specific functions Storage resources R and R are controllable by resource manager RM as both share the same model and storage type and were derived from the same vendor. Accordingly their respective proprietary interfaces . and . are identical and can both be accessed by resource manager RM. Each resource manager RM RM can be called by the SMS via its generic API comprising method interfaces which have the same method signature if they relate to the same underlying storage function. For example the signature of method interfaces . and . for providing file system based data access may be identical although the underlying functionality . is provided by proprietary program routines . . Storage resources R R and R were obtained from different vendors have different models but share the same storage type. R R and R are adapted to provide file system based data access functionality F II. Each resource manager comprises program routines being adapted to call a proprietary interface . . of a storage resource. Said routines are typically not generic but need to be adapted for each kind of supported storage resource. Thus the method interfaces . and . for providing file system based data access are callable via a method interface . . having the same method signature whereby calling function F II F II . F II. . F II. via said generic method interfaces . and . results in the execution of proprietary program routines . . and called via proprietary interface methods PFI II. PF II.. Further the method interface provides file system based data access that is callable via the method interface whereby calling function F III via said generic method interface results in the execution of proprietary program routine called via proprietary interface methods PFI III.

