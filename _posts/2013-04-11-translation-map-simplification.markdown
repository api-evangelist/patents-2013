---

title: Translation map simplification
abstract: A method for translation map simplification may include determining a translation map based on a predetermined criterion in response to receiving input data. The method may also include determining if the translation map extends another map or a referenced map and determining if the translation map includes at least one map fragment. The referenced map is loaded in response to a determination that the translation map includes an extension of the referenced map. The map fragment is loaded in response to a determination that the translation map comprises the map fragment. A new map is compiled based on at least the translation map, the referenced map and the at least one map fragment, in response to the translation map not including a new map reference or a modification to the translation map. The input data is processed based on the new map to produce translated data specific to the new map.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793468&OS=08793468&RS=08793468
owner: International Business Machines Corporation
number: 08793468
owner_city: Armonk
owner_country: US
publication_date: 20130411
---
This application is a continuation application of U.S. patent application Ser. No. 13 372 686 filed Feb. 14 2012 the contents of which are incorporated herein by reference.

Aspects of the present invention relate to data mapping and translation maps to map data from one format to another format and more particularly to translation map simplification.

Data mapping may be defined as a process for creating data element mappings or defining relationships between two distinct data models or formats for representing data. Data mapping may be used as a first step for a wide variety of data integration tasks. Examples of such data integration tasks may include but is not necessarily limited to data transformation or data mediation between a data source and a destination identification of data relationships as part of data lineage analysis the discovery of hidden sensitive data such as the last four digits of a social security number hidden in another user id as part of a data masking or de identification project and consolidation of multiple databases into a single database and identifying redundant columns of data for consolidation or elimination. For example a company that would like to transmit and receive purchase orders and invoices with another company or a business partner may use data mapping to create data maps from a company s data to standardized American National Standards Institute Accredited Standards Committee X12 ANSI ASC X12 messages or similar messages for items such as purchase orders and invoices. While standards may be generic Electronic Data Interchange EDI standards are designed to allow a company to exchange data with any other company regardless of industry.

Translation maps are used to map data from one format or data model to another format or data model. Companies may generate many custom maps based on data origin and subsequent use. Often these maps are similar especially in business to business B2B scenarios where maps are based on standards such as those discussed above but partners may implement variations or may have specific content interpretations. These minor differences can cause a large number of translation maps to be created and maintained. Map reuse across partners is highly desirable but these mapping differences result in complexity and difficulties in translating the data from one company or partner to another.

According to an aspect of the present invention a method for translation map simplification may include receiving input data by a computer device and determining by the computer device a translation map based on a predetermined criterion in response to receiving the input data. The translation map determined based on the predetermined criterion may be loaded on the computer device. The method may also include determining by the computer device if the translation map extends another map. The other map may be or may include a referenced map. The method may additionally include determining by the computer device if the translation map includes at least one map fragment. The referenced map is loaded in response to a determination that the translation map comprises an extension of the referenced map and the at least one map fragment is loaded in response to a determination that the translation map comprises at least one map fragment. A new map is compiled based on at least the translation map the referenced map and the at least one map fragment in response to determining that the translation map does not include at least one of a new map reference and a modification to the translation map. The method may further include processing the input data by the computer device based on the new map to produce translated data specific to the new map.

According to another aspect of the present invention a system for translation map simplification may include a processor and a translation engine operable on the processor. The translation engine may include a module to determine a translation map based on a predetermined criterion in response to receiving input data and a module to load the translation map determined based on the predetermined criterion. The translation engine may also include a module to determine if the translation map extends another map. The other map may include a referenced map. The translation engine may also include a module to determine if the translation map includes at least one map fragment. The translation engine may additionally include a module to load the referenced map in response to a determination that the translation map includes an extension of the referenced map and a module to load the at least one map fragment in response to a determination that the translation map includes the at least one map fragment. The system may further include a compiler operable on the processor to compile a new map based on at least the translation map the referenced map and the at least one map fragment in response to the translation map not including at least one of a new map reference and a modification to the translation map. The input data may be processed based on the compiled new map to produce translated data specific to the new map.

According to a further aspect of the present invention a computer program product for translation map simplification may include a computer readable storage medium having computer readable program code embodied therewith. The computer readable program code may include computer readable program code configured to receive input data and computer readable program code configured to determine a translation map based on a predetermined criterion in response to receiving the input data. The computer readable program code may also include computer readable program code configured to load the translation map determined based on the predetermined criterion. The computer readable program code may additionally include computer readable program code configured to determine if the translation map extends another map. The other map may include a referenced map. The computer readable program code may also include computer readable program code configured to determine if the translation map includes at least one map fragment. The computer readable program code may additionally include computer readable program code configured to load the referenced map in response to a determination that the translation map comprises an extension of the referenced map and computer readable program code configured to load the at least one map fragment in response to a determination that the translation map comprises the at least one map fragment. The computer readable program code may further include computer readable program code configured to compile a new map based on at least the translation map the referenced map and the at least one map fragment in response to the translation map not including at least one of a new map reference and a modification to the translation map. The computer readable program code may further include computer readable program code configured to process the input data based on the new map to produce translated data specific to the new map.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

In block an available data map or maps may be loaded and displayed as a possible base translation map or maps. The available map or maps may be loaded by a mapping tool operating or running on a processor of a computer device or the like similar to that described herein and displayed to a user on a computer monitor or screen associated with the computer device.

In block a feature or mechanism may be presented to the user for selecting an optional base translation map from the one or more available base translation maps loaded and displayed. The feature or mechanism for selecting the optional base translation map may be presented or displayed in association with each of the available base translation maps. The feature or mechanism for selecting the base translation map may include a button icon or other feature similar to those known in the computing arts for selecting between alternatives using a computer pointing device or other tool.

In block data from the selected base translation map may be loaded and displayed. An example of a base or baseline translation map is illustrated in .

In block a feature or mechanism may be presented to the user for modifying the base translation map. The feature or mechanism for modifying the base translation map may be any sort of mechanism known in the computing arts for performing modification of content presented on a computer screen or via a programming application programming interface API . Modifications that may be made to the base translation map may include but is not necessarily limited to adding a new component overriding an existing component by importing a component from another map importing or incorporating a map fragment from another map or any other modification that may be made to the map. A component of the translation map may be a particular category or type of data entry or data field for containing a particular type or category of data in the map. A map fragment may be a portion of another map that may include several lines of data or fields for containing specific types or categories of data. The lines or fields of data may be different types or categories of data but may be related in some way. For example the fields and structure where the name and address information of a customer name and address is associated with billing or other information. An example of a map fragment is illustrated in . Each map fragment or fragment map may be a full map in it own respect and may include its own base map and fragment maps or fragment references.

In block a new translation map may be generated based on the modifications to the base translation map. The new translation map may include the base translation map with all of the modifications made to the base translation map being incorporated. An example of a new translation map is illustrated in . The new translation map in is a combination of the base translation map in and the map fragment in .

In block the new translation map including any references to other maps referenced maps and map fragments may be stored in a maps and map fragments data storage device similar to that described with reference to . The data storage device may be a database file system data source or other storage device.

In block a translation map for translating or mapping the input data to a different format or data model may be determined based on a predetermined criterion or criteria. The predetermined criterion or criteria for determining the translation map may include but is not necessarily limited to a trading partner configuration of the data or a data model used by a trading partner a nature or format of the input data a combination of the criteria and or other criteria that may determine a particular translation map of a plurality of translation maps that may be used for translating or mapping the input data to a desired data format or model.

In block the translation map determined based on the predetermined criteria may be loaded on the computer device or processor associated with the computer device.

In block a determination may be made if the translation map extends another map or includes a map fragment or fragments from another map or maps. The other map may be a referenced map associated with the translation map. The translation map may extend the other map by referencing the other map for including components of the other map. Accordingly a map may make reference to another map as a base map and in doing so may acquire the content of the referenced map. As previously described with reference to block in a new translation map may be compiled and optionally stored including references to other maps and map fragments or fragment maps. Each base map and map fragment may be a full map in its own respect and may include its own base and fragment references or fragment maps. The base and fragment maps may also reference other maps and fragment maps and so forth. As described herein maps map fragments or fragment maps which are referenced in other maps may be iteratively or recursively loaded and added to the translation map or base translation map.

In block any referenced map or maps may be loaded on the computer device or processor in response to a determination that the translation map includes an extension or a referenced map or maps. Any map fragment or fragments may also be loaded on the computer device or processor in response to a determination that the translation map includes at least one map fragment.

In block the translation map may be overlaid with the referenced map or maps including specific extensions overrides and additions to the referenced map and any map fragments may be imported into the translation map. By overlaying the translation map with the referenced map or maps the different types or categories of data or data fields associated with the referenced maps are considered or used with the selected translation map in translating or mapping the input data to the new map data format or model. Similarly importing the map fragments into the translation map utilizes the data fields in the map fragment or fragments in translating or mapping the input data to the new map data format or model. As described herein the selected translation map may be combined with the referenced map or maps and map fragments to generate a new map for translating the input data.

An object inheritance model may be used to allow the override and extension of a translation map. The object inheritance model may be similar to object inheritance in object oriented programming. The object inheritance model may be used when implementing updated versions of a standard as a way to implement just the differences between the versions. The updated version may then be tested knowing that the previous version worked since the corresponding implementation would be unaffected. Any fixes in the previous version of the translation map may also be automatically consumed by the updated version. Maps can specify overrides and inclusions based on data partner information metadata input fields and output fields. An example of an input field override may specify that a particular input field should map to the output field specified instead of what is defined in the base map. An example of an output field override may include specifying that a particular output field should map from a particular specified input field instead of what is defined in the map base.

An extension mechanism may be used to extend standard maps shipped with a product or shared in a community but still have the ability to take updates of those maps as changes are made and bugs are fixed.

In block a determination may be made if the translation map includes a new map reference or references or a dynamic map modification or modifications. If the translation map includes a new map reference or dynamic map modification the method may return to block and the method may proceed similar to that previously described. The method may loop back to block because the included map may itself have a base map or reference map fragment. As previously described each base and fragment map may be a full map in its own respect and may include its own base and fragment references. The process or method may continue as described herein until there are no additional base or fragment references or maps to be included in the new map. This process of including all base and or fragment referenced maps may be done recursively or iteratively.

If the translation map does not include a new map reference or a dynamic map modification in block the method may advance to block . In block a new map may be compiled. The new map may be compiled based on the translation map any referenced map or maps and any map fragments.

In block the input data may be processed based on or according to the new map. Translated data specific to the new map may be produced by processing the input data using the new map.

In block the translated data may be presented. The translated data may be represented in the new map or according to the new map.

The system may also include a translation engine and a map compiler which may run on the processor . The translation engine may be a business to business B2B translation engine and the map compiler may be a B2B map compiler. Both the translation engine and map compiler may be adapted for operation with IBM WebSphere Transformation Extender WTX maps and Sterling Integrator Translator SITX maps. IBM and WebSphere are trademarks of International Business Machines Corporation in the United States other countries or both. The method in may be embodied in and performed by the translation engine . The compiler may compile the new map in block of .

The system may also include a maps and map fragments data storage device to store referenced maps map fragments and new translation maps. The data storage device may be but is not necessarily limited to a database file system data source or other device. The system may additionally include a Partner Configuration data storage device to store configurations of data formats or data models for different partners business associates customers or other entities that may be used in translating and mapping data from one format or model to another format similar to that described herein.

Similar to that previously described the translation engine may receive the input data block in . The translation engines may then perform functions similar to those described with respect to method in to produce translated data or output data specific to a new map generated by the translation engine and map compiler .

The flowcharts and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems which perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of embodiments of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to embodiments of the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of embodiments of the invention. The embodiment was chosen and described in order to best explain the principles of embodiments of the invention and the practical application and to enable others of ordinary skill in the art to understand embodiments of the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Although specific embodiments have been illustrated and described herein those of ordinary skill in the art appreciate that any arrangement which is calculated to achieve the same purpose may be substituted for the specific embodiments shown and that embodiments of the invention have other applications in other environments. This application is intended to cover any adaptations or variations of the present invention. The following claims are in no way intended to limit the scope of embodiments of the invention to the specific embodiments described herein.

