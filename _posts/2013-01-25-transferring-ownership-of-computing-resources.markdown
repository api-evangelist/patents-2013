---

title: Transferring ownership of computing resources
abstract: A service provider provides instances of computing resources for customer use, such as instances of data processing resources, data storage resources, database resources, and networking resources. A customer of the service provider might create a solution that utilizes one or more instances of computing resources provided by the service provider. The customer can request to transfer control and payment responsibility for computing resources, such as those utilized in a solution, to another customer of the distributed computing environment. In response to such a request, control and payment responsibility for the resources may be transferred to the receiving customer. The request to transfer resources might be received by way of a solution marketplace or through another mechanism.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09275408&OS=09275408&RS=09275408
owner: Amazon Technologies, Inc.
number: 09275408
owner_city: Seattle
owner_country: US
publication_date: 20130125
---
Network based distributed computing environments exist that allow customers to purchase and utilize computing resources such as virtual machine instances on a permanent or as needed basis. In addition to virtual machine instances these types of services typically allow customers to purchase and utilize other types of computing resources with virtual machine instances. For example customers might be permitted to purchase access to and use of block data storage services database services networking resources and other types of computing resources. Utilizing these computing resources as building blocks customers of such a service can create custom solutions that provide various types of functionality such as application hosting backup and storage content delivery World Wide Web Web hosting enterprise information technology IT solutions database services and others. Once a customer of such a network based service has created a solution however it is not currently possible to transfer control and the responsibility to pay for computing resources that provide the solution to another customer of the service.

The following detailed description is directed to technologies for transferring ownership of instances of computing resources. Utilizing the technologies described herein a customer of a service provider that offers infrastructure as a service can create a solution that utilizes various computing resources provided by a distributed computing environment. The customer can then transfer control of the solution including all of the computing resources utilized thereby to another customer of the service provider. The customer could also transfer control of single or multiple instances or other computing resources that are not a part of a solution. Transferring control of computing resources as utilized herein refers to the transfer of the ability to manage the computing resources and potentially the responsibility for payment of charges associated with execution and or use of the computing resources in the distributed computing environment.

According to one aspect presented herein a computer implemented mechanism is disclosed for transferring control of computing resources. In one implementation the mechanism operates in conjunction with a plurality of services such as data storage services database services and an execution service in which customers can purchase configure and utilize computing resources such as virtual machine instances data storage resources networking resources and database resources on a permanent or as needed basis. The execution service may offer computing resources for purchase and use in various configurations. For example the execution service might offer virtual machine instances available for purchase and use that have many different configurations of processor capabilities main memory disk storage and operating systems. As mentioned above a customer might create configure and deploy various combinations of computing resources to create solutions that provide various types of functionality such as application hosting backup and storage content delivery Web hosting enterprise IT solutions database services and others.

In order to provide the functionality disclosed herein the execution service or a component operating in conjunction with the service provider provides a mechanism through which one customer who might be referred to herein as a seller can initiate the transfer of computing resources to another customer who might be referred to herein as the purchaser . In response to receiving a request from a seller to transfer computing resources to a purchaser the component is configured to cause control of the computing resources and payment responsibility for the operation and or use of the computing resources to be transferred from the seller to the purchaser. It should be appreciated that while the terms seller and purchaser may be used herein respectively to describe the transferor and transferee of computing resources it is not necessary that money or other consideration be received in exchange for a transfer in ownership. Additionally it should be appreciated that a purchaser might initiate the transfer of computing resources rather than the seller in some implementations.

In order to transfer control of computing resources the resources can be identified out of the various resources controlled by the seller in one embodiment. For example the computing resources such as machine images that can be launched into a virtual machine databases data stored in a data storage service etc. might be identified as those resources used by a particular solution created by the seller. In this regard the computing resources to be transferred might be explicitly identified by the seller via a console e.g. a web based console or a client console or one or more application program interface API calls that pass identifiers of the computing resources to the service provider in a programmatic manner. In one implementation a seller might indicate that a solution composed of one or more computing resources such as virtual machine instances is to be offered for sale. Subsequently any dependent and or related resources such as virtual disk volumes used by virtual machine instances databases or data storage services and or networking resources might also be identified in the manner described above. The computing resources to be transferred might be identified at the time a solution or another type of computing resources is offered for sale at the time a purchase of a solution or another type of computing resources is initiated or at another time.

Once the computing resources to be transferred to the purchaser have been identified the ability to control the operation of the resources is transferred from the seller to the purchaser. In order to transfer control of the computing resources to the purchaser various security mechanisms that govern access and control of the computing resources might be accessed and or modified. For example and without limitation one or more security groups associated with the computing resources to be transferred might be modified one or more access control policies associated with the computing resources might be modified passwords can be reset and or a public private key pair for accessing the computing resources might be changed. Other mechanisms might also be utilized to transfer control of the operation of computing resources from a seller to a purchaser.

In order to transfer payment responsibility for computing resources to a purchaser a billing system might be instructed to modify its records to indicate that the purchaser rather than the seller is responsible for charges associated with the transferred resources accruing after the transfer date. Following such a modification the purchaser will assume responsibility for the payment of charges associated with the transferred computing resources. Other operations might also be performed in order to transfer control and payment responsibility for instances of computing resources in a distributed computing environment. For example after the transfer of control is complete a billing service may use updated account information to determine that the purchaser is responsible for charges and use this information to charge the correct party.

In some implementations a solution marketplace is provided through which a seller can list one or more computing resources or an entire solution for sale. The computing resources offered for sale might include computing resources in production in that they are in use. Alternately computing resources and or a solution might be created for sale on the solution marketplace and might not include actual in production computing resources.

In order to create a new listing on the solution marketplace a seller might provide information regarding the instances or the solution offered for sale. For example the seller might provide a description of the solution a description of the computing resources utilized by the solution along with metrics regarding the solution such as the average or estimated cost to operate the solution in the distributed computing environment the number of requests received and or processed by the solution and potentially other types of metrics. The seller might also specify a price for the solution.

If a purchaser requests to purchase computing resources or a solution by way of the solution marketplace the computing resources included in the sale may be identified in the manner described above. For example any associated or dependent instances might be identified explicitly by the seller by monitoring instances explicitly identified as being for sale by the seller through an API or in another manner. Control and payment responsibility for the sold instances is also then transferred to the purchaser in the manner described above. Additionally the seller might be paid a fee for the solution. The provider of the distributed computing environment and or the solution marketplace might also charge a commission or other type of fee for facilitating the sale of a solution or individual computing resources. Additional details regarding the various components and processes described above for transferring ownership of instances of computing resources in a distributed computing environment will be presented below with regard to .

It should be appreciated that the subject matter presented herein may be implemented as a computer process a computer controlled apparatus a computing system or an article of manufacture such as a computer readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types.

Those skilled in the art will also appreciate that aspects of the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein including multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers handheld computers personal digital assistants e readers cellular telephone devices special purposed hardware devices network appliances and the like. The embodiments described herein may be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In the following detailed description references are made to the accompanying drawings that form a part hereof and that show by way of illustration specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures which may be referred to herein as a FIG. or FIGS. .

The distributed computing environment might also offer other types of computing resources for purchase and use by customers . For example the distributed computing environment might offer load balancing resources domain name service resources data storage resources networking resources database resources and other types of resources on a permanent or as needed basis. The operator of the distributed computing environment may charge a fee for operating the instances and the computing resources to the customer that creates the instances and the computing resources . Various pricing models that might be utilized to charge a customer for use of computing resources within the distributed computing environment will be described below with regard to .

As mentioned briefly above a customer such as the customer A who might be referred to below as a seller of the distributed computing environment might utilize a customer computing system A to purchase configure and deploy various instances and other computing resources provided by the distributed computing environment . For example the customer A might create configure and deploy various combinations of computing resources to create a solution that provides certain functionality. For instance as mentioned above the solution might provide functionality for application hosting backup and or storage content delivery Web hosting enterprise IT solutions database services or others. The solution might also provide other types of functionality. In the example shown in the solution utilizes one or more virtual machine instances and one or more other computing resources . It should be appreciated that the instances and the other computing resources that make up the solution might be configured and deployed within the distributed computing environment in a manner designed to provide the solution .

It should also be appreciated that the distributed computing environment might provide other facilities for implementing a solution . For instance the distributed computing environment might provide facilities for automatically scaling the instances and the other computing resources in response to fluctuations in demand various types of network functionality such as domain name services DNS services and other functionality related to the provision of a solution . The customer A might configure these various aspects of the distributed computing environment appropriately for the operation of their particular solution .

It should be appreciated that although a single solution is illustrated in the customer A of the distributed computing environment might maintain many solutions that include many different computing resources. The customer A might also maintain other virtual machine instances and other computing resources that are not a part of a solution . As will be described in greater detail below the mechanisms described herein allow the customer A to transfer instances and other computing resources in a solution to another customer B who might be referred to herein as the purchaser of the distributed computing environment . The customer A might also be permitted to transfer individual instances and other computing resources that are not a part of a solution to another customer B of the distributed computing environment . Additional details regarding these processes will be provided below.

In order to enable the transfer of instances and other computing resources from a customer A of the distributed computing environment to another customer B the distributed computing environment provides a mechanism through which the customer A can initiate a transfer of instances and other computing resources . In one implementation this mechanism is provided by a marketplace component . As will be described in greater detail below the marketplace component is configured to provide a solution marketplace through which a customer A can list a solution for sale. The solution marketplace might also allow the customer A to list individual instances collections of instances and or other computing resources that are not a part of a solution for sale. It should be appreciated however that other mechanisms might also be provided through which a customer A can sell or otherwise transfer instances and other computing resources to another customer B of the distributed computing environment . The embodiments disclosed herein therefore should not be read as being limited to use in connection with a solution marketplace . Additionally as mentioned above although the terms seller and purchaser may be used herein respectively to describe the transferor and transferee of instances of computing resources it is not necessary that money or other consideration be received in exchange for a transfer in ownership.

As described briefly above the marketplace component is configured to provide a solution marketplace through which customers of the distributed computing environment can list solutions individual instances and or other computing resources for sale to other customers of the distributed computing environment . The solution marketplace contains listings of solutions instances and or other computing resources that have been offered for sale. In this regard a customer of the distributed computing environment such as the customer B might utilize a customer computing system A to view the listings available by way of the solution marketplace . As will be described in greater detail below the customer B can then utilize the customer computing system B to initiate the purchase of a solution individual instances and or other computing resources . Details regarding this process will be provided below.

In order to create a new listing in the solution marketplace for a solution one or more individual instances or other computing resources the customer A may utilize the customer computing system A to access the marketplace component . In order to generate a listing such as for the solution for example the customer A might provide various information regarding the solution . For instance the customer A might submit a listing request that includes a description of the solution a description of the instances and other computing resources included in the solution metrics regarding the solution such as the cost to operate the solution in the distributed computing environment the number of requests received and or processed by the solution and potentially other information. The customer A might also specify a price for the solution in the listing . The customer A might also provide similar information when creating a new listing for a single instance multiple instances and or other computing resources that are not part of a solution .

In response to receiving a listing request from the customer A the marketplace component is configured to generate a new listing in the solution marketplace . For example the listing might identify a solution for sale or one or more instances or other computing resources that are not a part of a solution.

A customer B desiring to purchase a solution can browse the listings in the solution marketplace including the listing . In this way the customer B can view the information specified by the customer A regarding the solution . The customer B might also request to purchase the solution individual instances or other computing resources identified in the listing in the solution marketplace .

In response to receiving a request from a customer B to purchase a solution an individual instance or other computing resources the marketplace component is configured in one embodiment to perform various functions to transfer ownership of the purchased solution or other computing resources from the customer A to the customer B. As mentioned above transferring ownership of a solution or other computing resources refers to the transfer of control of the solution or other computing resources and responsibility for payment of charges associated with the execution and or use of the solution or other computing resources in the distributed computing environment .

Prior to transferring control and payment responsibility to the purchaser B the marketplace component is configured in one implementation to identify all of the computing resources that are associated with an instance or solution that is to be transferred. In order to identify associated computing resources the marketplace component or another component might utilize various mechanisms.

For example in one implementation the seller A might be requested to explicitly identify all of the computing resources such as instances or other computing resources which are associated with the solution or another instance that is to be transferred to the customer B. An appropriate user interface or other mechanism might be exposed to the seller A through which the seller can explicitly identify all of the computing resources to be transferred. For example if the seller A indicates that a virtual machine instance is to be transferred an appropriate user interface might be provided to the customer A through which the customer can identify other computing resources such as data storage resources which are associated with the virtual machine instances that are to be transferred. Other appropriate user interfaces might also be provided.

In another implementation the distributed computing environment is configured to identify associated computing resources through monitoring of the operation of the computing resources. For example the distributed computing environment might monitor the operation of a virtual machine instance to identify other computing resources associated therewith from logs. For example the computer system hosting the virtual machine instance can generate logs indicating the instance identifier ID the time the Internet Protocol IP address of the virtual machine the user account associated with the virtual machine etc. In addition each service can generate logs that indicate the IP address of a requestor the user account associated with the request the time the credentials used for the request etc. A resource identification module can then compare the logs to patterns that reflect relationships between computing resources to determine whether a resource should be included in a solution .

As an example the other computing resource may be a data storage resource. If the virtual machine instance accesses the data storage resource then the data storage resource or at least the data accessed by the virtual machine instance will be considered to be associated with the virtual machine instance . Other types of monitoring of instances and other computing resources might also be performed in order to identify related dependent or otherwise associated computing resources that should be sold together. For example access control policies on certain resources might specify identifiers of virtual machine instances that can access the data and identifiers associated with the account of the seller A and the resource identification module can use this information to detect computing resources that are associated with the virtual machine instances .

In the same or another embodiment the resource identification module can use tags specified by the seller A to determine whether computing resources should be associated with a solution . For example the seller A can tag e.g. associate metadata a computing resource with an arbitrary key value pair to keep track of what resources are associated with a solution e.g. project solution or color purple . The resource identification module can scan the metadata and group any computing resources tagged with the same key value pair as part of a solution .

In some implementations the distributed computing environment is also configured to provide an API that can be called with an identifier for a particular instance . In response the API will return the identities of all instances and other computing resources that are associated with the identified instance . In this way the distributed computing environment can provide a convenient mechanism through which all related dependent or otherwise associated computing resources can be identified. Additional details regarding the various processes utilized herein to identify associated instances and other computing resources will be provided below.

Once all of the instances and or other computing resources to be transferred from the seller A to the purchaser B have been identified the marketplace component operates in conjunction with other components within and potentially external to the distributed computing environment to transfer control and payment responsibility for the instances and or other computing resources . For example in order to transfer control of the instances to the purchaser B the marketplace component might interface with one or more security components executing within the distributed computing environment .

The security components provide various mechanisms that allow only authorized users to access and control instances and or other computing resources within the distributed computing environment . In this regard for example the marketplace component might cause the security components to modify one or more security groups associated with the instances and or other computing resources to be transferred to remove the ability to control the instances and or computing resources from the seller A and to permit the customer B to control the transferred instances and or other computing resources . A security group controls the traffic allowed into one or more instances.

In other embodiments the marketplace component might interact with the security components to cause one or more access control policies to be modified to permit the customer B to control the instances and or other computing resources transferred from the customer A. In other implementations the marketplace component might interact with the security components to cause a public private key pair to be provided to the customer B that is utilized to access the instances and or other computing resources to be generated and provided to the purchaser B or transferred from the customer A to the purchaser B.

It should be appreciated that the various mechanisms described above for controlling access to the instances and or other computing resources are merely illustrative and that other actions may be taken in order to transfer control from a seller A to a purchaser B. In this regard the marketplace component might interact with other components executing in the distributed computing environment that impose access restrictions on the instances and or other computing resources that exist therein.

In order to transfer payment responsibility to the purchaser B the marketplace component interacts with a billing component in one implementation. The billing component maintains records identifying the customer that has payment responsibility for instances and or other computing resources created within the distributed computing environment .

In order to transfer payment responsibility from the seller A to the purchaser B for the instances and other computing resources in a solution for example the marketplace component interacts with the billing component . In particular the marketplace component might instruct the billing component to make the purchaser B responsible for payment for instances and the other computing resources transferred from the seller A.

In this way the purchaser B can assume payment responsibility for any instances and or other computing resources purchased as part of solutions through the solution marketplace or otherwise transferred from another customer A of the distributed computing environment . It should be appreciated that in some implementations the instances and or other computing resources transferred from a customer A to a customer B are in use serving actual client requests. In this regard it should be appreciated that the instances and or other computing resources may be transferred from a customer A to a customer B without experiencing any down time or other type of interruption of service of the instances . In this way a customer A of a solution that has experienced commercial success may sell or otherwise transfer the solution to a customer B without interrupting service for customers of the solution . In other implementations however the instances and or other computing resources transferred from a customer A to a customer B might not be utilized to serve actual customer requests. For example a customer A might create a solution and transfer the solution to a customer B. The customer B might then decide whether to place the solution into service in a production environment. Other scenarios should be apparent to those skilled in the art. Additional details regarding the various components and processes described above for transferring ownership of computing resources will be presented below with regard to .

As discussed briefly above the distributed computing environment can provide computing resources on a permanent or an as needed basis. The computing resources provided by the distributed computing environment may include various types of resources such as data processing resources data storage resources networking resources data communication resources and the like. Each type of computing resource may be general purpose or may be available in a number of specific configurations. For example and as will be described in greater detail below data processing resources may be available as virtual machine instances in a number of different configurations. The virtual machine instances may be configured to execute applications including Web servers application servers media servers database servers and other types of applications. Data storage resources may include file storage devices block storage devices and the like.

Each type or configuration of a computing resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Additional details regarding the various types of computing resources offered by the distributed computing environment will be provided below with regard to .

The computing resources provided by the distributed computing environment are enabled in one implementation by one or more data centers A N which may be referred herein singularly as a data center or in the plural as the data centers . The data centers are facilities utilized to house and operate computer systems and associated components. The data centers typically include redundant and backup power communications cooling and security systems. The data centers might also be located in geographically disparate locations. One illustrative configuration for a data center that implements the concepts and technologies disclosed herein transferring ownership of computing resources will be described below with regard to .

The customers and other consumers of the distributed computing environment may access the computing resources provided by the data centers over a WAN . Although a WAN is illustrated in it should be appreciated that a local area network LAN the Internet or any other networking topology known in the art that connects the data centers to remote customers and other users may be utilized. It should also be appreciated that combinations of such networks might also be utilized.

As known in the art a virtual machine instance is an instance of a software implementation of a machine i.e. a computer that executes programs like a physical machine. Each of the servers may be configured to execute an instance manager capable of instantiating and managing virtual machine instances and potentially other types of computing resources. In the case of virtual machine instances for example the instance manager might be a hypervisor or another type of program configured to enable the execution of multiple virtual machine instances on a single server for example.

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances other types of computing resources can be utilized with the concepts and technologies disclosed herein. For example the technologies disclosed herein might be utilized with hardware resources data storage resources data communications resources networking resources database resources and with other types of computing resources.

The data center shown in also includes a server computer F reserved for executing software components for managing the operation of the data center the server computers and the instances . In particular the server computer F might execute the marketplace component the billing component and the security components . Details regarding the operation of each of these components will be provided below. In this regard it should be appreciated that while these components are illustrated as executing within the distributed computing environment computing systems that are external to the distributed computing environment might be utilized to execute some or all of these components. Other configurations might also be utilized.

In the example data center shown in an appropriate LAN is utilized to interconnect the server computers A E and the server computer F. The LAN is also connected to the WAN illustrated in . It should be appreciated that the configuration and network topology illustrated in has been greatly simplified and that many more computing systems networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate load balancing devices or software modules might also be utilized for balancing a load between each of the data centers A N between each of the server computers A F in each data center and between instances purchased by each customer of the distributed computing environment .

It should be appreciated that the data center described in is merely illustrative and that other implementations might be utilized. In particular functionality described herein as being performed by the security components the marketplace component and the billing component might be performed by one another might be performed by other components or might be performed by a combination of these or other components. Additionally it should be appreciated that the functionality provided by these components might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art.

Standard instances are instances that are configured with generally proportional amounts of CPU and memory. Standard instances may be suitable for common computing applications. Standard instances may be made available in various sizes in some embodiments. For example small medium large and extra large instances may be made available with each of these instances having greater amounts of CPU and memory while maintaining approximately similar ratios of CPU to memory.

Micro instances are instances that provide a small amount of consistent CPU resources and allow CPU capacity to be increased in short bursts when additional cycles are available. Micro instances may be suited for lower throughput applications and Web sites that require additional compute cycles periodically.

High memory instances are instances that have proportionally more random access memory RAM resources than CPU resources. High memory resources are suitable for high throughput applications including database and memory caching applications. For example various types of high memory instances might offer between 17.1 and 68.4 GB of RAM in embodiments disclosed herein. Larger main memory sizes might also be made available to customers of the distributed computing environment . In contrast high CPU virtual machine instances have proportionally more CPU resources than RAM memory resources and are well suited for compute intensive applications.

Cluster compute instances are instances that offer proportionally high CPU resources with increased network performance. Cluster compute instances are well suited for High Performance Compute HPC applications and other demanding network bound applications. Cluster GPU instances are virtual machine instances that provide general purpose GPUs with proportionally high CPU and increased network performance for applications benefitting from highly parallelized processing including HPC rendering and media processing applications. While cluster compute instances provide the ability to create clusters of instances connected by a low latency high throughput network cluster GPU instances provide an additional option for applications that can benefit from the efficiency gains of the parallel computing power of GPUs over what can be achieved with traditional processors.

High I O instances are instances that provide very high disk I O performance and are ideally suited for many high performance database workloads. High I O instances may utilize solid state drive SSD based local instance storage for high I O throughput. High I O instances might also provide high levels of CPU memory and network performance.

It should be appreciated that the various instance types described above are merely illustrative. Other instance types not described herein might be utilized with the various concepts and technologies described herein. Additionally in some embodiments virtual machine instances may be made available in various sizes having continuous ratios of CPU to memory.

It should also be appreciated that the various instance types described above might be utilized with various operating systems. For example a customer of the distributed computing environment might request to execute a high CPU virtual machine instance executing the LINUX operating system. Similarly a customer or other user of the of the distributed computing environment might request to use a cluster compute instance executing the MICROSOFT WINDOWS SERVER operating system. Other operating systems might also be utilized.

As also shown in the various instance types described above and the other instance types described herein might be priced according to various instance purchasing models . For instance in the example shown in computing resources may be priced according to an on demand model a reserved model a spot model or a standby model . Aspects of each of these purchasing models are described in greater detail below.

Computing resources priced according to the on demand model which may be referred to herein as regular instances are instances that are paid for and in active use by a customer . The on demand model allows customers of the distributed computing environment to pay for capacity per unit of time such as an instance hour without requiring a long term commitment. This may free the customer from the costs and complexities of planning purchasing and maintaining hardware and transforms what are commonly large fixed costs into much smaller variable costs.

Computing resources priced according to the reserved model which might be referred to herein as reserved instances are instances that are reserved for a customer in exchange for a payment. The reserved model provides a customer the option to make a one time payment for each instance they want to reserve. In turn the customer may receive a significant discount on the hourly usage charge for reserved instances as compared to on demand instances. After the customer makes a one time payment for reserved instances the reserved instances are reserved for the customer and the customer has no further obligation. The customer may choose to run the reserved instances for the discounted usage rate for the duration of a chosen term. If the customer does not use the reserved instances the customer will not pay usage charges on these instances.

The spot model allows customers to bid on unused capacity in the distributed computing environment . The customer can run the instances priced according to the spot model s which may be referred to herein as spot instances for as long as their bid exceeds a current market price called the spot instance market price. The spot instance market price may fluctuate based upon the supply of instances and the customer demand for the instances. Spot instances may be terminated if a customer s maximum bid no longer exceeds the current spot instance market price.

In order to obtain spot instances a customer places a request for spot instances that specifies the desired number of spot instances and the maximum price the customer is willing to pay per instance hour. If the customer s maximum price bid exceeds the current spot instance market price for the spot instances the customer s request will be fulfilled and the customer s spot instances will run until either the customer chooses to terminate them or the market price increases above the customer s maximum price whichever is sooner . Various components operating within the distributed computing environment may manage the market for the spot instances including setting the current spot instance market price for the spot instances.

Computing resources purchased according to the standby model which might be referred to as standby instances are spot instances that have been acquired on behalf of a customer and that are made ready for near immediate use by the customer in the manner described herein. The price charged for standby instances is typically less than the price charged for on demand instances since the standby instances may be terminated in the same manner as spot instances. In one embodiment standby instances are priced higher than spot instances and reserved instances but lower than on demand instances.

It should be appreciated that the various instance purchasing models described above for on demand instances reserved instances spot instances and standby instances are merely illustrative and that other mechanisms may be utilized to set the pricing for the various instance types. It should also be appreciated that the embodiments disclosed herein may be utilized with any of the instance types and purchasing models shown in and other configurations of instances and purchasing models not shown in . Additionally it should be appreciated that other types of computing resources might also be priced according to the instance purchasing models shown in or others.

As discussed above the embodiments disclosed herein might also be utilized with other types of computing resources such as data storage resources database resources networking resources and others. These resources might also be available in various configurations capacities arrangements and priced according to various pricing schemes.

The implementation of the various components described herein is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the FIGS. and described herein. These operations may also be performed in parallel or in a different order than those described herein.

The routine begins at operation where the customer A uses computing resources offered by a service provider. For example the customer A could upload a machine image and register it with the distributed computing environment or create a virtual machine using a machine image offered by the service provider. At the time the customer A starts using computing resources offered by the service provider the billing component associates payment responsibility for the used resources with the customer A. In addition the distributed computing environment can generate logs indicating that the user account for the seller A used computing resources offered by the service provider. For example a first log can be generated that indicates that the user account uploaded a machine image and a second log can indicate the user account created a virtual machine from the machine image.

From operation the routine proceeds to operation where the customer A creates and uses other computing resources offered by the service provider of the distributed computing environment . For instance and as discussed above the customer A might store data in a data storage service or a database service. The customer A may also configure networking resources such as load balancers to balance the load across multiple virtual machine instances or use other types of resources offered for purchase and use by the service provider. As in the case of the virtual machine instances the billing component associates payment responsibility for the other computing resources with the customer A. In this way the billing component might cause the customer A to be charged every month or other unit of time for use of the virtual machine instances and the other computing resources .

From operation the routine proceeds to operation where the customer A might deploy software to the newly created instances. For example the customer A might deploy application software to the virtual machine instances for providing a solution such as a website or a web based game. The routine then proceeds to operation where the customer A configures the deployed software. The customer A might also configure aspects of the operation of the instances and or other computing resources in the solution for executing the software.

From operation the routine proceeds to operation where the customer A might configure the operation of other components. For instance and as described above the customer A might configure an auto scaling service to automatically add new virtual machine instances to the solution in response to fluctuations in demand. Other types of services offered by the service provider for providing the solution might also be configured at operation .

From operation the routine proceeds to operation where the customer A configures the various security components for the instances and or other computing resources that make up the solution . For example and as described briefly above the customer A might define one or more security groups on the resources of the solution . The customer A might also define one or more access control policies for the resource of the solution . Similarly the customer A might define or be provided with a public private key pair utilized to access the resources. It should be appreciated that some or all of these security mechanisms might be implemented in an automated fashion by the security components executing in the distributed computing environment . It should also be appreciated that other security mechanisms might also be implemented that provide the customer A exclusive control over the instances and or other computing resources in the solution .

From operation the routine proceeds to operation where the customer A deploys the solution . As mentioned above the resources of the solution might be used in production to serve actual customer requests. In other cases the resources of the solution might be deployed but may not actually be made available to end users to serve customer requests. In this case it may be up to a purchaser of the solution to enable the solution to serve actual customer requests or to perform other types of processing. From operation the routine proceeds to operation where it ends.

From operation the routine then proceeds to operation where a listing request is received from a customer A to sell a solution by way of the solution marketplace . For example the customer A may submit a listing request to the marketplace component containing information identifying the solution and or the instances or other computing resources to be sold such as that described above. In a specific example embodiment the customer A can log into a web console generated by the marketplace component and select the resources he or she would like to list on the solution marketplace .

In an embodiment the customer A can manually search through all the resources associated with his or her account to determine which resources to list or the customer could search his or her resources for tags the customer previously associated with the resources. In another embodiment the customer A can submit a query to the resource identification module via the console to detect resources and the resource identification module can find resources that may be associated with the solution . The customer A can then check all of the resources he or she wants to list. The routine then proceeds from operation to operation .

At optional operation the resource identification module or another component executing within or external to the distributed computing environment identifies the computing resources utilized by or associated with the instances and or the solution to be transferred. As discussed briefly above the customer A might be required to explicitly identify all of the instances and or other computing resources to be sold such as all of the computing resources associated with a solution . In other implementations the resource identification module might identify associated resources.

As mentioned briefly above the customer A might be permitted to sell a single instance or multiple instances that are not part of a solution . For example the customer may request to sell a single virtual machine instance . In response thereto the resource identification module can execute the identification process described above to ensure that operation of the solution does not depend on necessary resources that will not be available after the transfer. If additional computing resources are identified the customer A might be requested to offer the additional instances for sale together with the identified virtual machine instance or instances.

In one implementation the resources identification module is configured to generate a confidence score. In particular for a given seed resource the module can compute a confidence score indicating how likely it is that two computing resources are related. The confidence score might then be presented to the customer A. In order to compute the confidence score the resource identification module might examine one or more computing resources owned by the customer A and utilize information in logs and or tags to establish that the computing resources are related. For example the module could relate an instance to a load balancer by looking at logs that indicate that the load balancer is routinely used to route traffic to the instance . Once confident that the load balancer is part of a solution that includes the instance the module might group other instances that connect to the load balancer and determine they are part of the solution . Other mechanisms might also be utilized in other embodiments to identify related computing resources that should be sold together.

At operation of the routine the marketplace component receives a price for the solution or individual instances or other computing resources to be sold. As discussed briefly above the sale price might be included in a listing request submitted to the marketplace component in one implementation. From operation the routine proceeds to operation where the marketplace component determines the cost to execute the solution in the distributed computing environment . For example the marketplace component might communicate with the billing component to determine a cost for executing the solution in the distributed computing environment per day week month or other time period. This information might be exposed to potential purchasers of the solution in the listing in the solution marketplace .

From operation the routine proceeds to operation where the marketplace component receives and or computes other metrics associated with the execution of the solution . For example a listing request submitted by a customer for a solution might indicate the number of requests received and or processed by a solution offered for sale metrics describing the reliability of the solution and or other information related to the actual operation of the solution within the distributed computing environment . The routine then proceeds from operation to operation .

At operation the marketplace component creates a new listing for the solution in the solution marketplace . The listing might include the information provided by the customer A such as a description of the solution or instances offered for sale a description of the instances and or other computing resources included in the solution information regarding the cost to operate the solution or instances data regarding the number of requests received and or served by the solution or instances other metrics relating to the execution of the solution of instances offered for sale and potentially other information. The marketplace component also makes the solution marketplace including the new listing available for viewing by customers of the distributed computing environment such as the customer B. The routine then proceeds from operation to operation where it ends.

In response to receiving a purchase request the routine proceeds from operation to operation where the marketplace component interacts with the security components to transfer control of the identified instances and or other computing resources to the purchaser B. For example and as described above security groups access control policies and other types of security mechanisms might be modified to transfer control of the instances and or other computing resources from the customer A to the customer B. The marketplace component might also interact with other types of security components to perform other changes in order to transfer control of the purchased instances and or other computing resources to the customer B.

From operation the routine proceeds to operation where the marketplace component interacts with the billing component to transfer payment responsibility for the transferred computing resources to the customer B. As described briefly above the marketplace component might instruct the billing component to modify its records to indicate that the purchaser B rather than the seller A is responsible for charges associated with the transferred computing resources. Following such a modification the customer B will assume responsibility for the payment of charges associated with the transferred computing resources. Other operations might also be performed in order to transfer control and payment responsibility from a customer A to a customer B of the distributed computing environment . From operation the routine proceeds to operation where it ends.

The computer includes a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment one or more central processing units CPUs operate in conjunction with a chipset . The CPUs may be standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .

The CPUs perform operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

The chipset provides an interface between the CPUs and the remainder of the components and devices on the baseboard . The chipset may provide an interface to a random access memory RAM used as the main memory in the computer . The chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that help to startup the computer and to transfer information between the various components and devices. The ROM or NVRAM may also store other software components necessary for the operation of the computer in accordance with the embodiments described herein.

The computer may operate in a networked environment using logical connections to remote computing devices and computer systems through a network such as the local area network . The chipset may include functionality for providing network connectivity through a NIC such as a gigabit Ethernet adapter. The NIC is capable of connecting the computer to other computing devices over the network . It should be appreciated that multiple NICs may be present in the computer connecting the computer to other types of networks and remote computer systems.

The computer may be connected to a mass storage device that provides non volatile storage for the computer. The mass storage device may store system programs application programs other program modules and data which have been described in greater detail herein. The mass storage device may be connected to the computer through a storage controller connected to the chipset . The mass storage device may consist of one or more physical storage units. The storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

The computer may store data on the mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether the mass storage device is characterized as primary or secondary storage and the like.

For example the computer may store information to the mass storage device by issuing instructions through the storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. The computer may further read information from the mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to the mass storage device described above the computer may have access to other computer readable storage media to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by the computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

The mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises the LINUX operating system. According to another embodiment the operating system comprises the WINDOWS SERVER operating system from MICROSOFT Corporation. According to further embodiments the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device may store other system or application programs and data utilized by the computer such as the marketplace component the billing component the security components and or any the other software components and data described above. The mass storage device might also store other programs and data not specifically identified herein.

In one embodiment the mass storage device or other computer readable storage media is encoded with computer executable instructions which when loaded into the computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform the computer by specifying how the CPUs transition between states as described above. According to one embodiment the computer has access to computer readable storage media storing computer executable instructions which when executed by the computer perform the various routines described above with regard to and .

The computer may also include one or more input output controllers for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly the input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that the computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

Based on the foregoing it should be appreciated that technologies for transferring ownership of computing resources in a distributed computing environment have been presented herein. Although the disclosure presented herein has been primarily made with reference to virtual machine instances it should be appreciated that the embodiments disclosed herein might also be utilized to transfer ownership of instances of other types of computing resources. Moreover although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

