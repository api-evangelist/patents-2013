---

title: Method and system for providing a personal video recorder utilizing network-based digital media content
abstract: An approach provides for recording and editing digital media. A digital media stream is generated from an input signal (such as a live broadcast feed). The digital media stream is transmitted to a browser application configured to concurrently record and edit the digital media stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09210482&OS=09210482&RS=09210482
owner: KNAPP INVESTMENT COMPANY LIMITED
number: 09210482
owner_city: Tortola
owner_country: VG
publication_date: 20131024
---
The present application is a continuation of U.S. patent application Ser. No. 13 271 876 filed on Oct. 12 2011 which is a continuation of U.S. patent application Ser. No. 11 517 017 filed on Sep. 7 2006 and issued as U.S. Pat. No. 8 126 313 on Feb. 28 2012 which is related to and claims the benefit of the earlier filing date under 35 U.S.C. 119 e of U.S. Provisional Patent Application Ser. No. 60 714 674 filed Sep. 7 2005 entitled Method and System for Supporting Media Services and is a continuation in part of U.S. application Ser. No. 11 475 603 filed Jun. 27 2006 entitled Database System Particularly For Multimedia Objects and issued as U.S. Pat. No. 8 572 123 on Oct. 29 2013 which is a continuation of U.S. patent application Ser. No. 10 311 903 filed Feb. 13 2003 entitled Database System Particularly for Multimedia Objects and issued as U.S. Pat. No. 7 096 226 on Aug. 22 2006 which is a national stage application of PCT GB2001 002857 filed Jun. 27 2001 the entireties of all of which are incorporated herein by reference.

The media or broadcast industry has traditionally been confined to technologies that are expensive and an inflexible with respect to editing production and delivery of media e.g. video . By contrast the communications affords great flexibility in terms of providing users with alternative networks and rich communication and entertainment services. In addition the cost of equipment from networking elements to end user equipment follows a downward trend as advancements are made for example cellular phones are ubiquitous because of their affordability. The capabilities of these devices continue to evolve at a rapid pace e.g. cellular phones are now equipped with high resolution displays and advanced processors to support sophisticated applications and services. Further broadband data communications services have enabled transmission of bandwidth intensive applications such as video broadcasts e.g. web casts . The transformation of the communications industry has in turn influenced the media industry to rethink their business models and technological approaches.

However in adopting these advances in communication technologies the media industry faces a number of challenges. For instance the issue of convergence of a broadband rich media experience and live television production and delivery needs to be addressed. Also the demands of supporting real time news video on demand user personalization and continuing creative additions to initial systems pose additional engineering challenges. Further delivery of interactive media which describe real events in the real world in real time requires the capability to quickly acquire store edit and composite live and other descriptive media by numerous users e.g. editors artists and producers.

Based on the foregoing there is a clear need for approaches that enable rapid processing and delivery of digital media.

An apparatus method and software for providing recording and editing of digital media are described. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It is apparent however to one skilled in the art that the present invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

Although the various embodiments of the present invention are described with respect to the Motion Picture Expert Group MPEG standards and Group of Pictures GOP technologies it is contemplated that these embodiments have applicability to other equivalent video encoding standards and technologies.

It is recognized that there is an increasing need for professional cost effective editing of video feeds such as television coverage of news or entertainment events wherein the edited files can be provided over different alternative networks. For example a user of a video enabled mobile cellular telephone might subscribe to a service that provides highlights of selected sporting events. Similarly a user might subscribe to a sports headlines service and receive files on a computer connected to a public data network such as the global Internet. The real time delivery of events such as sports footage interviews and edited highlights presents problems in such contexts where it is necessary to produce compressed files to reduce the bandwidth for transmission over a cellular telephone network or a data network. Video files for such purposes need to be produced in an encoded format using for instance Group of Picture GOP technology otherwise the raw digital stream would render timely transmissions and file storage impractical.

Thus a video stream is created to include a sequence of sets of frames i.e. GOP . By way of example each group typically 8 to 24 frames long has only one complete frame represented in full. This complete frame is compressed using only intraframe compression and thus is denoted as an I frame. Other frames are utilized and include temporally compressed frames representing only change data with respect to the complete frame. Specifically during encoding motion prediction techniques compare neighboring frames and pinpoint areas of movement defining vectors for how each will move from one frame to the next. By recording only these vectors the data which needs to be recorded can be substantially reduced. Predictive P frames refer to the previous frame while Bi directional B frames rely on previous and subsequent frames. This combination of compression techniques is highly effective in reducing the size of the video stream.

With GOP systems an index is required to decode a given frame. Conventionally the index is only written at the end of the file once the file has completed the encoding process. As a result no index is available until the recording is completed. The implication is that the production of an edited version of the file for example to transmit as highlights over a cellular phone network cannot commence until the recording is completed and this index file produced. The media services platform addresses this drawback by creating a separate index file which can be supplemental to the routinely generated index file during the recording and encoding process this mechanism is detailed with respect to .

Accordingly the platform in an exemplary embodiment can provide remote editing over any data network e.g. Internet Protocol IP based that can support connectivity to the proxy editor server whereby editing can commence without having to wait for completion of the recording. The proxy editor application resident on the server enables developers to build professional level desktop video editing applications using for example the Microsoft Windows Media 9 Series platform.

The platform also provides significant scalability due to decoupled storage. Conventional editing systems required direct disk access to the video file. This poses a severe scalability issue as every editing function e.g. play scrub etc. from the editing client creates disk traffic. If the storage cannot timely respond a conventional editing application often freezes or crashes such a scenario is unacceptable for real time feeds. With the media services platform the content is downloaded once on each client cache thus the centralized storage requirements are reduced by a very significant factor depending on editing type .

As seen in the media services platform utilizes a shared repository that stores media e.g. digitized video content ingested from one or more video servers . Ingesting involves obtaining content into the media services platform and can be accomplished locally or from a remote location. In one embodiment of the present invention the repository is deployed as a shared Storage Area Network SAN or NAS Network Area Storage which has the capability for high performance video ingest and playback. The shared SAN can utilize scalable Fibre Channel switch fabric to interface with a Fibre Channel disk array and nearline tape libraries. The video servers as will be more fully described in FIG. can interface any type of content sources such as a media archive a live feed or a digital feed .

The media services platform includes a workflow system which comprises a workflow engine and one or more resource servers to support editing and distribution of digital media. The automated workflow provides the ability to automate and orchestrate repetitive workflows. In particular the workflow system offers users an overview of their work and associated events that is the system supports an application that shows the status and progress of each job and links to relevant applications that enable the users to perform their tasks and advance the project towards completion. The workflow engine controls workflow jobs and dispatches them to the resource servers . Communication among the resource servers is facilitated by for example Microsoft Message Queuing.

In addition to providing individual users a central point for managing their work the workflow system is also useful as a monitoring system. For example the system can support a graphical user interface GUI on the user side such that users can quickly determine through visual indicators whether tasks have been completed or error conditions exist. The users e.g. administrators can drill down to view more detail. Also jobs can be paused restarted from any stage aborted and deleted from the workflow application. This capability provides users with full control over the priority of the jobs. Additionally the system can record timing information for every step of a task thereby enabling generation of reports on delivery turnaround etc. e.g. for Service Level Agreement SLA reporting.

According to one embodiment of the present invention the media services platform can be implemented with a pre configured standard set of common workflows. For instance these workflows can support generic delivery of files rendering of edits and delivery of content from the video server . Moreover customizable workflows are supported wherein the users can integrate new services.

As shown the media services platform comprises core servers such as an object store a media server and an application server . In an exemplary embodiment the object store contains configuration information for the workflow system . Configuration information include in an exemplary embodiment parameters of every service the capabilities of every resource server the definition of workflows and the real time status of every job. The object store supports the various applications that interface with it through an object store Application Program Interface API . According to one embodiment of the present invention the object store has an object based database schema e.g. Microsoft SQL Structured Query Language Server for example. The media server receives stream broadcasts and serves the stream on to individual user workstations using for example Microsoft Windows Media. The stream contains for example Society of Motion Picture and Television Engineers SMPTE timecode enabling the stream to be used as a frame accurate source for live logging.

The application server provides dynamic web site creation and administration functions such as a search engine and database capabilities. In an exemplary embodiment the application server executes Microsoft Internet Information Server IIS and can be configured for high availability and load balancing based on industry standard components.

The media server and the application server interface with the data network which can be a corporate network or the Internet. The application server is thus accessible by a workstation which can be any type of computing device e.g. laptop web appliance palm computer personal digital assistant PDA etc. The workstation can utilize a browser e.g. web based generally to communicate with the media services platform and a downloadable applet e.g. ActiveX controls to support distributed video editing functionality. The browser in conjunction with the applet is referred to an editing or editor interface e.g. the proxy editor player . The workstation can also be equipped with voiceover microphone and headphones to facilitate the editing process. The proxy editor player communicates with the proxy editor server to enable the viewing and editing of content including live video remotely. In addition the proxy editor player according to one embodiment of the present invention is configured as a personal video recorder as more fully described below in to capture and edit for example a live broadcast fee for personal use. Editing functionalities include immediate access to frame accurate content even while being recorded full audio and video scrubbing of source clips and edit timelines over the network and generation of Advanced Authoring Format Edit Decision List AAF EDL files for craft edit integration.

To connect to the media services platform the workstation need not require special hardware or software. As mentioned the workstation need only be configured to run a browser application e.g. Internet Explorer for communication over the data network . With this user interface changes or upgrades to the workstation are not required as all the applications are hosted centrally at the platform .

In addition to the video server within the media services platform a remote video server can be deployed to ingest content for uploading to the platform via the data network . The video servers include in an exemplary embodiment a longitudinal timecode LTC reader card as well as other video interfaces e.g. RS 422 control card Windows Media 9 Encoder and Matrox DigiServer video card . Video editing relies on the use of timecodes to ensure precise edits capturing all in in points and out points of the edits. An edited video can be characterized by an edit decision list EDL which enumerates all the edits used to produce the edited video. LTC timecodes are recorded as a longitudinal track analogous to audio tracks. With LTC each frame time is divided into 80 bit cells. LTC timecodes are transmitted serially in four bit nibbles using Manchester codes.

The video servers can be remotely controlled by the workstation . Also these servers can connect to the shared SAN via Fibre Channel and a file system by e.g. ADIC .

A syndication or distribution function can then distribute content over various channels such as a wireless network e.g. cellular wireless local area network WLAN a television network and a broadband Internet Service Provider ISP network . Depending on the capabilities supported by the wireless or wired access network e.g. networks and rich services such as presence events instant messaging IM voice telephony video games and entertainment services can be supported.

Although the video server the workflow engine the object store the media server and the application server are shown as separate components it is recognized that the functions of these servers can be combined in a variety of ways within one or more physical component. For example the object store the application server and the workflow engine can reside within a single server and the video server and the media server can be combined into a common server.

As mentioned above the media services platform enables media asset management rapid production and robust cost effective proxy editing capabilities. By way of illustration management of media assets to support broadband video on demand VOD is described. One of the first tasks involved with VOD applications is ingesting full length movies into the video servers for mastering and editing e.g. removing black stitching tapes together adding legal notices etc . The masters are then stored on the shared SAN . The content is then transcoded to a high quality media stream format such as Microsoft Windows Media 9 Series and delivered automatically with metadata to their broadband video pay per view portal e.g. any one or more of the networks and .

Additionally the media services platform can offer video archiving services. For instance customers can extend their online storage with nearline tape and manage content seamlessly across multiple storage devices using add on archive modules. Online storage can be backed up and or migrated to tape according to automated policies. Advantageously this archival approach can be transparent to the users that is the users are never aware that the master video is no longer stored on expensive disk based storage. In one embodiment a library application can be implemented with the media services platform to provide seamless integration with offline video and data tape archives. Further the media services platform provides high integration with existing production workflows through its capability to transcode and deliver any content contained in the archive to for example popular non linear editors e.g. AVID editor .

Furthermore the media services platform enables flexible cost effective content aggregation and distribution which is suitable for content service providers. Typical workflows involve aggregation of content from owners in such formats as Motion Pictures Expert Group MPEG 2 or Windows Media 9 along with metadata in eXtensible Markup Language XML files using pre configured File Transfer Protocol FTP hot folders. Hot folders are predefined folders that trigger a workflow event e.g. file conversion compression file transfer etc. upon movement of files into the folder. These owners can submit content directly to the workflow system for automatic transcoding Digital Rights Management DRM protection and syndication to multi channel operators.

According to one embodiment of the present invention the media services platform utilizes a unified user interface e.g. web browser for accessing applications supported by the platform . It is recognized that typical production and content delivery workflows often involve the use of multiple separate applications one application for logging a second application for encoding a third one for editing a fourth application for asset management and so on. Consequently the challenge of effectively managing workflows is difficult. The task is even more daunting in a multi channel production and distribution environment as greater elements need to coordinated and more applications have to be learned over traditional television environments.

The media services platform advantageously simplifies this task by permitting access to the multitude of applications via a single unified user interface as part of a coherent workflow. In this manner although various technologies are involved the user experience is that of a single user friendly suite of tools which shield non technical users from the complex integration of applications and technologies.

The applications supported by the platform include the following media asset management and search video editing video server services workflow syndication upload of media library service administration quality assurance copyright protection music cue sheet services and reporting. In addition the users can develop their own applications within the unified user interface. Asset management permits users to manage the location of content within organized folder structures and categories. This capability is more fully described with respect to . The asset search function offers a generic search capability across the entire object store .

The media services platform also provides a flexible and cost effective approach for proxy logging and editing of live and archive material. Such editing services can be in support of news and sport editing archive browsing and editing mobile broadband and IPTV production and mastering and promotion production. The editing application provides viewing and logging of live feeds frame accurate proxy logging and editing and remote proxy editing e.g. utilizing Windows Media 9 Series proxy format . In addition the editing application can support instant logging and editing while the feed is recording as well as audio and video scrubbing. This editing application includes the following capabilities edit timeline with effects voiceover while editing remotely which is ideal for translation workflows save edit projects with versions generate thumbnail and metadata from within the editing user interface and export EDL s or render finished edits ready for transcoding and delivery. With this application a user through an inexpensive workstation can efficiently master a movie for VOD distribution rough cut a documentary or create a fully finished sports highlight video with voiceover and effects.

The media services platform in an exemplary embodiment utilizes a Windows Media 9 Series codec which allows high quality video e.g. DVD quality to be logged and edited across the data network . Further the platform employs intelligent caching to ensure that the applications are as responsive as editing on a local hard drive even over low bandwidth connections the caching architecture is described below with respect to .

The syndication application automates the creation and delivery of content and metadata to very specific standards for a range of target systems without manual intervention.

The upload application allows users to ingest digital files into the media services platform and submit them to any permitted workflow. The users with administrative responsibilities can control which file types are allowed which workflows are compatible and the way in which different types of content are processed. The upload application can facilitate submission of the files to automatic workflows for hands off end to end processing as well as to manual workflows that require manual intervention.

The upload application is complemented by a hot folder system wherein workflow activities are automatically initiated upon movement of files into and out of the hot folders. The file system folders can be pre configured to behave like the upload application and pass files of particular types to the workflows. Metadata for each asset provided in accompanying XML files can be acquired and mapped directly into the object store .

The reporting application enables users to create printer friendly reports on any information stored in the object store . The reporting application is pre configured with a number of default reports for reporting on content delivery. Users can filter each report by selecting a desired property of the data e.g. subscription name or start and end date. Through the API of the media services platform users and system integrators can create new report templates and queries.

The library application offers the ability to manage physical media that contain instances of assets managed in the media services platform . Even with continuing expansion in the use of digital media traditional media continue to play an important role. Typical production environments possess a number of video tapes DVDs or other physical media for storing content and data. Some environments utilize large established archives.

In mixed media environments it is beneficial to manage digital and physical instances of content in an integrated manner. Accordingly the library application provides the following capabilities. For example the application permits the user to generate and print barcodes for the physical media and shelves with automatic naming as well as bulk naming with configurable naming conventions . Also barcodes are employed for common actions thereby allowing completely keyboard free operation for checking in out and shelving of the physical media. The library application additionally can manage items across multiple physical locations e.g. local and master libraries. Further the application supports PDA based applications with a barcode scanner for mobile checking in out and shelving. The library application advantageously simplifies management of multiple copies of the same asset on several physical media and storage of multiple assets on the same tape or DVD. The library application can further be used in conjunction with robotic tape libraries to track tapes that have been removed and shelved.

Moreover the media services platform provides an administration function to tailor system configuration for different customers. It is recognized that a one size fits all configuration for all users is non existent. That is each user department organization and customer has its own set of requirements. Therefore the media services platform supports concurrent use of multiple configurations. For example each deployment can configure to its own user groups create new workflows integrate new services support new content types and specify new output media formats. The customer can also change and add metadata structures and fields and integrate existing web based applications into the user interface. The above capabilities can be executed via the administration application with immediate effect without shutting down the platform . Additionally in a multi department deployment scenario multiple logical instances of the media services platform can be configured with their own unique configurations.

According to one embodiment of the present invention the media services platform can be implemented as a turn key system within a single box e.g. in a box flight case. Under this configuration there is no need for a costly and time consuming IT information technology integration undertaking to rack the components or integrate them into the customer s network. Under this arrangement the platform is be configured as a plug and play system connecting to the network automatically.

As noted the media services platform can also provide personal video recording PVR capability as next described.

In this example the PVR capability is provided within the proxy editor player via a personal video recording module . It is contemplated however that the PVR capability can exist as a standalone player without the editing functions. In addition a media protection module is included to implement for example the DRM mechanism as deployed by the media services platform . Accordingly an individual stream can be downloaded and managed locally by the DRM module thereby supporting concurrent transactions by the platform .

The player provides a variety of playback features through a media stream controller . For example the controller in conjunction with the caching architecture as explained in can enable functions such as seek forward jump ahead capture screen etc. As for the seek forward feature a user can utilize a slide bar within the browser to advance the display of the media stream during recording of the stream in contrast conventionally this is not possible until the entire media has been recorded. In an exemplary embodiment the player operates according to the Real Time Streaming Protocol RTSP for controlled delivery of the media stream. RTSP is detailed in IETF RFC 2326 which is incorporated herein in its entirety. RTSP coordinates with the Real Time Transport Protocol RTP to format and deliver packets in the most efficient manner when streaming. For example these protocols can select the most appropriate transport protocol User Datagram Protocol UDP or Transport Control Protocol TCP to use when streaming to the player depending on the network conditions .

The media is then edited per step . By way of example the user utilizing the proxy editor player which is the counterpart software to the proxy editor supported by the media services platform on the workstation can select and log the feed assuming a live feed which is always visible either marking in and out points manually or using an auto clip feature for rapid logging. The user can also insert commentary and assign a rating to the video for determining which segment of the content is the most compelling content thereby providing an indication of the selected clips that should be edited. During or after logging the user can select clips from the log and use the proxy editor player to trim the selection. For example the user can jog and shuttle along a timeline or utilize a mouse wheel to scroll frame by frame to the desired cut point. The user can then preview the selection before placing it on the edit timeline. Thereafter the user can manipulate the clips on the timeline reorder and trim the selections. The proxy editor player can permit the user to apply zoom and crop effects to close in on areas of interest this capability is particularly valuable for broadband or mobile outputs where detail is important. The user can record a voiceover directly onto the timeline thereby completing the edit.

The edit is then rendered as in step as part of a workflow. In an exemplary embodiment the edit is rendered using a high resolution MPEG 2 master. Alternatively an associated EDL is delivered to an integrated craft edit for completion. The media services platform can support various workflows for craft editor integration such as store and forward and instant editing. As for the store and forward approach the content can be viewed logged and edited using the proxy editor into packages for automated transcoding from master MPEG 2 and delivery to popular non linear editing systems e.g. AVID Unity and AVID Media Composer Adobe Premiere Apple Final Cut Pro Media 100 iFinish Pinnacle Liquid and Vortex . With respect to instant editing using the proxy editor player the user can execute an ingest of a live feed which can be viewed logged and edited. The user can then export an EDL to a craft editor which can be a third party craft editor e.g. Incite Editor E3 that is integrated with the media services platform . When imported into Incite the timeline is rebuilt frame accurately pointing to the MPEG 2 master on the shared SAN . Once the edit is complete the craft editor creates a new MPEG 2 digital master which is automatically re ingested back into the platform when dropped in an appropriate Hot Folder.

It is noted that the above process can occur while the video feeds are still being recorded thus enabling the quickest possible turnaround of content for broadcast programs e.g. sports and news .

In step metadata is added. The file is transcoded per step and reviewed and or approved step . Thereafter the edited filed is delivered per step . The last stage in the workflow is the delivery of content files and metadata to other systems e.g. networks and that are responsible for delivery of content to consumers. The syndication application of the media services platform provides the automated delivery of the content and metadata. The media services platform operates on a set it and forget it principle. In other words once a configuration is specified no other input is required thereafter. For instance a configuration of a new subscription is set to the required content categories the technology used to create each file as well as the specific set of parameters are specified and the file naming conventions and delivery details are indicated. Every subsequent delivery from the workflow application simply implements the subscription when the correct criteria are met. Whenever the user requires a new output format the user can specify the various configuration parameters including the codec frame rate frame size bit rate and encoder complexity.

It is noted that any technology plugged into the workflow system can be automated e.g. for pre processing transcoding DRM protection watermarking delivery or any other purpose required.

The above workflow process can be illustrated in the following example involving a sports production. Under this scenario a customer produces on a weekly basis for instance multiple fully edited football match highlights every week for mobile operators utilizing Third Generation Universal Mobile Telecommunications System 3G UMTS technologies . The customer requires a two minute voiced highlight package be delivered to the operators within 4 minutes of the end of each game for these concurrent matches. This requirement can be achieved with the media services platform whereby live broadcast feeds are recorded using the video servers . Producers edit and log the media using the proxy editor application e.g. player during recording of the matches. Once the matches are over they simply select a deliver button presented by the proxy editor player . The workflow system automatically renders the proxy edit using for instance a MPEG 2 50 Mbps I frame master before automatically transcoding the edit into the mobile formats requested by the operators and delivering the content and metadata XML to their content distribution networks. In this manner the mobile subscribers can purchase and view the video clips on their mobile handsets within minutes of the end of each game.

According to one embodiment of the present invention the media services platform can be integrated with a newsroom computer system and playout video server. The video server ingests content from live feeds or tape and journalists and producers throughout the news organization can instantly start to log and edit the live feeds from their desktop using the proxy editor player . Finished edits are rendered and transcoded direct from the proxy editor application to a gallery playout video server. Notification is automatically sent to the newsroom computer system and automation system when every new package is available.

As seen in after ingesting the media the personal video recording process as in step can be executed. The recording process operates integrally with the editing process.

After receiving the stream the player as in step can transmit accounting information to the accounting module of the media services platform to track usage of the media stream per step .

According to one embodiment of the present invention a proxy media file that corresponds to the media stream is created for editing purposes. This proxy media file is a reduced file size of the media file for example the proxy media file can be a low resolution version of the media file. The proxy media file is made available to the proxy editor player for editorial control of the ingested media.

In one embodiment the video server includes a live media stream module a media proxy file module and a video format module . The live media stream module communicates with the user interface to provide logging and monitoring functions. The media proxy file module supports the capability to perform editing functions during recording of the video. The video format module converts a raw video stream into a standardized format MPEG 2 for example. The modules and interface the repository to store the ingested contents.

As shown the server can support various input sources an LTC time code source a Serial Digital Interface SDI source and a VDCP slave source . The video server can generate multiple outputs in real time from the SDI source in contrast to conventional video servers which generate only a single output. The modules generate three types of outputs. One output is that of MPEG 2 in which the user can select between long GOP and I frame for each server ranging from DVD quality 5 Mbps long GOP to 50 Mpbs I frame only. The audio is captured at 48 kHz for instance. The live media stream module can generate a live media stream e.g. Windows Media 9 Series for broadcast over a network e.g. networks of to one or more media servers e.g. media server which serve the stream on to individual user workstations. The stream can include SMPTE timecode thereby providing a frame accurate source for live logging.

Finally the media proxy file module can produce a file e.g. Windows Media proxy file for storage in the SAN . The proxy editor permits this file according to one embodiment to be opened for viewing and editing while the file is still being written. Thus in conjunction with the proxy editor the video server supports fast turnaround production of live events without the need for dedicated high bandwidth networks and expensive edit suites and without sacrificing quality or functionality.

In addition to the robust video editing functionality the media services platform provides management of the digital assets as next explained.

The library application as earlier described provides physical asset management e.g. tape check in check out shelving and barcode printing etc. to connect physical tape content with its digital equivalent stored in the repository .

The asset manager enables frame accurate remote browsing logging and selection of thousands of hours of archive content from anywhere on the Internet or a private corporate WAN e.g. data network . The asset manager allows users to manage the location of content within organized folder structures and categories. Content can be modified deleted copied pasted and added through this application. Folders can store any asset type configured by administrators from audio and video to ringtones images and documents.

The asset manager also offers a flexible search capability for the object store . Users can search across their own work and that of others thus facilitating sharing and simple retrieval of content. Further other applications within the media services platform can utilize this asset search capability as to provide a consistent and recognizable function i.e. common dialog across these applications.

The object store enables the asset management capability of the media services platform permitting users e.g. administrators to change the fields and forms associated with an asset at any point by utilizing the proxy editor player . Under this approach adapting the platform to satisfy changing user requirements does not require expensive database administrators.

In this example the virtual digital asset manager accumulates content from a variety of content databases and and thus is considered virtual. A customer can generate its own content which can be stored in the original content database . In addition the content of one or more third party content providers can be offered by the asset manager . Accordingly the VDAM enables tying of business partners e.g. third party content providers thereby enhancing the distribution of digitized assets. In an exemplary embodiment the content owner can push content into the virtual digital asset manager over the world wide web e.g. network . The virtual digital asset manager can also provide private storage of asset data and facilitate publishing of the content. In addition to being configured as an asset manager the VDMA can act as a directory server of all the assets provided by users.

Furthermore it is contemplated that the virtual digital asset manager can provide advertisement and transaction support. That is a user can produce a video file that includes the stored content as well as advertisements the manager then tracks transactions relating to the retrieval and or viewing of the edited video file. In this manner the customer has the capability to charge or otherwise account for such services.

Effectively the VDAM supports a most needed based approach rather than a most requested based approach of convention systems. In accordance with one embodiment of the present invention the virtual digital asset manager can be implemented external to the media services platform as an independent system.

In step video signals are received by the platform namely through the video server . The video signals are then recorded and encoded as in step . In step the first index file is generated during the recording. This first index file is updated during the encoding process step . In other words while the video file is being recorded and subjected to encoding e.g. GOP encoding a separate index file is created and updated at regular intervals during the encoding process. Typically the updating of the index file can occur every half a second. If the encoding process is complete as determined in step then a second index file i.e. conventional index file is generated as in step . Otherwise the update of the first index file is continued.

If the editing application attempts to connect to a video file and cannot locate the index at the end of the file the application will look automatically for the separate index file. The index file could be assigned the same name as the basic video or media file but with a different extension although mapping to any name of file could be used. If an appropriate index file which can indicate a different file extension than the video file is found the editor uses this external index to play render the file which is still being recorded. This results in the editor being able to access content rapidly e.g. within a one second maximum of the content being recorded . Once recording stops and the conventional index is added to the end of the video file the external index file can be deleted as no longer necessary.

The architecture of the intelligent video cache system has a number of layers a video file content layer a non sequential compressed video file cache and a decompressed frame cache . The video file content layer provides for locally hosted video file content. The second layer provides for a compressed video file cache within a client player. This cache is non sequential so that only parts of the video file at GOP resolution can be cached. In one embodiment the cache is maintained in main memory e.g. Random Access Memory RAM of the workstation but can be aged by the player software to local disk. Also within the client player the decompressed frame cache is provided in video memory VRAM .

In this example the cache is filled by asynchronous proactive caching threads which follow and predict user behavior patterns as well as fill the different layers and of the cache as required to provide the best editing experience within the constraints of the local workstation resources in terms of Central Processing Unit CPU RAM disk and VRAM . The asynchronous aspect of the system is significant and provides the user with an immediate response when scrubbing throughout a file or editing. If the system has not yet cached the desired frame the player software can show the closest cached decompressed frame and display a status symbol indicating to the user that the current frame is not the correct frame. If the user waits eventually that frame will render into the correct frame. The user interface is not locked by the caching mechanism i.e. the user can always choose to scrub somewhere else play etc. Furthermore cache requests can be configured to have an expiry timeout enabling cancellation to avoid building long queues of caching requests which could no longer be relevant .

The following modes of operation of the editor player are considered idle scrubbing and playing. In idle mode when the player has not changed state within a predetermined period of time e.g. such as in the last 2 seconds a playback caching thread first ensures that it has cached the next few seconds forward and backward from the playback head position. The thread ensures that the content is cached in decompressed VRAM cache . In this manner if the user suddenly decides to play the system can respond immediately. Once the playback caching thread is satisfied that the content is cached for immediate playback the riddling thread is started.

The job of the riddling thread is to proactively download frames throughout the video in case the user starts scrubbing. The thread first downloads a GOP in the middle of the file then every third of the file then every ninth of the file etc. This continues until the VRAM is full it always leave the playback thread immediate playback content but can replace other frames which have been cached and are no longer relevant . Once the VRAM is full the thread continues but only to the compressed RAM cache and disk cache. If enough resources exist on the workstation and time is left in idle mode the full video can be cached in the compressed cache.

The scrubbing mode is triggered by fast playback head movement by a user operating an on screen editing tool when not in play mode . The playback caching thread is disabled and all resources are given to the riddling thread to provide the best scrubbing experience.

When a play button is selected by a user within the proxy editor player the playing mode is triggered. In this mode the playback caching thread and the riddling thread are disabled. A look ahead caching thread is started which decompresses into VRAM the content ahead and faster if there are sufficient system resources than the playback head.

The processes described herein for supporting distributed editing may be implemented via software hardware e.g. general processor Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.

The computer system may be coupled via the bus to a display such as a cathode ray tube CRT liquid crystal display active matrix display or plasma display for displaying information to a computer user. An input device such as a keyboard including alphanumeric and other keys is coupled to the bus for communicating information and command selections to the processor . Another type of user input device is a cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to the processor and for controlling cursor movement on the display .

According to one embodiment of the invention the processes described herein are performed by the computer system in response to the processor executing an arrangement of instructions contained in main memory . Such instructions can be read into main memory from another computer readable medium such as the storage device . Execution of the arrangement of instructions contained in main memory causes the processor to perform the process steps described herein. One or more processors in a multi processing arrangement may also be employed to execute the instructions contained in main memory . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the embodiment of the present invention. Thus embodiments of the present invention are not limited to any specific combination of hardware circuitry and software.

The computer system also includes a communication interface coupled to bus . The communication interface provides a two way data communication coupling to a network link connected to a local network . For example the communication interface may be a digital subscriber line DSL card or modem an integrated services digital network ISDN card a cable modem a telephone modem or any other communication interface to provide a data communication connection to a corresponding type of communication line. As another example communication interface may be a local area network LAN card e.g. for Ethernet or an Asynchronous Transfer Model ATM network to provide a data communication connection to a compatible LAN. Wireless links can also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information. Further the communication interface can include peripheral interface devices such as a Universal Serial Bus USB interface a PCMCIA Personal Computer Memory Card International Association interface etc. Although a single communication interface is depicted in multiple communication interfaces can also be employed.

The network link typically provides data communication through one or more networks to other data devices. For example the network link may provide a connection through local network to a host computer which has connectivity to a network e.g. a wide area network WAN or the global packet data communication network now commonly referred to as the Internet or to data equipment operated by a service provider. The local network and the network both use electrical electromagnetic or optical signals to convey information and instructions. The signals through the various networks and the signals on the network link and through the communication interface which communicate digital data with the computer system are exemplary forms of carrier waves bearing the information and instructions.

The computer system can send messages and receive data including program code through the network s the network link and the communication interface . In the Internet example a server not shown might transmit requested code belonging to an application program for implementing an embodiment of the present invention through the network the local network and the communication interface . The processor may execute the transmitted code while being received and or store the code in the storage device or other non volatile storage for later execution. In this manner the computer system may obtain application code in the form of a carrier wave.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to the processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as the storage device . Volatile media include dynamic memory such as main memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise the bus . Transmission media can also take the form of acoustic optical or electromagnetic waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read.

Various forms of computer readable media may be involved in providing instructions to a processor for execution. For example the instructions for carrying out at least part of the present invention may initially be borne on a magnetic disk of a remote computer. In such a scenario the remote computer loads the instructions into main memory and sends the instructions over a telephone line using a modem. A modem of a local computer system receives the data on the telephone line and uses an infrared transmitter to convert the data to an infrared signal and transmit the infrared signal to a portable computing device such as a personal digital assistant PDA or a laptop. An infrared detector on the portable computing device receives the information and instructions borne by the infrared signal and places the data on a bus. The bus conveys the data to main memory from which a processor retrieves and executes the instructions. The instructions received by main memory can optionally be stored on storage device either before or after execution by processor.

While the present invention has been described in connection with a number of embodiments and implementations the present invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims.

The following patent applications are incorporated herein by reference in their entireties co pending U.S. patent application Ser. No. 11 368 750 filed Mar. 6 2006 entitled Method and System for Providing Distributed Editing and Storage of Digital Media Over a Network co pending U.S. patent application Ser. No. 11 517 023 filed Sep. 7 2006 entitled Method and System for Providing Remote Digital Media Ingest with Centralized Editorial Control co pending U.S. patent application Ser. No. 11 452 851 filed Jun. 14 2006 entitled Method and System for Providing Digital Media Management Using Templates and Profiles co pending U.S. patent application Ser. No. 11 479 715 filed Jun. 30 2006 entitled Method and System for Providing End User Community Functionality for Publication and Delivery of Digital Media Content co pending U.S. patent application Ser. No. 11 517 006 filed Sep. 7 2006 entitled Method and System for Dynamic Control of Digital Media Content Playback and Advertisement Delivery co pending U.S. patent application Ser. No. 11 517 016 filed Sep. 7 2006 entitled Digital Media Asset Management System and Method for Supporting Multiple Users co pending U.S. patent application Ser. No. 11 517 015 filed Sep. 7 2006 entitled Method and System for Delivery of Digital Media Experience via Common Instant Communication Clients and co pending U.S. patent application Ser. No. 11 517 020 filed Sep. 7 2006 entitled Providing End User Community Functionality for Publication and Delivery of Digital Media Content. 

