---

title: System and method for processing image data
abstract: The PLACEMETER PLATFORM APPARATUSES, METHODS AND SYSTEMS (“PM-PLATFORM”) transform sensor data and/or feedback via PM-PLATFORM components into notifications, updates, coupons, promotions, transactions and/or activitiesnotifications, updates, coupons, promotions, transactions and/or activities. In one implementation, the PM-PLATFORM comprises a sensor, a memory, and a processor disposed in communication with the sensor and memory, the memory storing processor-issuable instructions to receive raw environment data at a sensor for at least two discrete points in time, analyze the received raw environment data locally to determine an at least one occupancy metric, store the occupancy metric, receive further raw environment data for a further point in time, process the further raw environment data to determine a further occupancy metric, compare the further occupancy metric to at least one previous occupancy metric, and issue a notification based on the comparison.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09213781&OS=09213781&RS=09213781
owner: Placemeter LLC
number: 09213781
owner_city: New York
owner_country: US
publication_date: 20130919
---
This patent for letters patent disclosure document describes inventive aspects that include various novel innovations hereinafter disclosure and contains material that is subject to copyright mask work and or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the disclosure by anyone as it appears in published Patent Office file records but otherwise reserve all rights.

The present innovations generally address apparatuses methods and systems for activity measurement and more particularly include PLACEMETER PLATFORM APPARATUSES METHODS AND SYSTEMS PM PLATFORM . In order to develop a reader s understanding of the innovations disclosures of various inventions and improvements have been compiled into a single description to illustrate and clarify how aspects of these innovations operate independently interoperate as between individual innovations and or cooperate collectively. The application goes on to further describe the interrelations and synergies as between the various innovations.

This application claims priority to U.S. Provisional Application No. 61 702 764 filed Sep. 19 2012 the entire contents of which is hereby incorporated by reference.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

The PLACEMETER PLATFORM APPARATUSES METHODS AND SYSTEMS hereinafter PM PLATFORM transform sensor data and or feedback via PM PLATFORM components into notifications updates coupons promotions transactions and or activities. The PM PLATFORM also provides real time activity data analytics and statistics predictions alerts advertisements business intelligence and the like to service providers consumers venues and or the like.

In some embodiments the PM PLATFORM may utilize optical and or other physical sensors to identify activity or status information about physical locations places. Such data information are hereinafter referred to as PM metrics . The PM PLATFORM may utilize processing components algorithms to determine or compute each PM metric via processing raw input signals. As illustrated in raw signals may be captured by PM PLATFORM sensors positioned in the location or place. Such PM PLATFORM sensors are configured to gather signals with applicable rich data such that the PM PLATFORM can compute PM metrics from raw signals but compact enough to reduce system processing and networking requirements. The signal may be transported to a computing unit component in an appropriate format which may be standardized or that varies for each raw signal type. The processing and communication of the PM PLATFORM provide lowered processor usage higher processor efficiency lowered power requirements reduced communication bandwidth usage and improved security.

According to some embodiments PM metrics and their corresponding raw signals and transport protocols may include but are not limited to the following list 

In some embodiments of the PM PLATFORM once raw signals for a given sensor get to the computing unit the PM PLATFORM may utilize various components to process the input raw signal and determine compute the corresponding PM metrics. The PM PLATFORM may utilize one or more processing components which in some embodiments may be implemented as algorithms and or sub algorithms. For example if the raw signal is a video stream and the measure is people traffic or line wait the PM PLATFORM may utilize one or more image data processing components or bricks as discussed below in greater detail.

In one embodiment the PM PLATFORM may utilize a Global Image Comparison GIC component that enables analysis comparison of multiple images. For example a GIC component may analyze two images I and I globally using a normalized mutual information measure. The two images gray levels or intensities may be linearly normalized using 5 95 percentiles over their histograms. Additionally or alternatively a histogram equalization component or algorithm may be used. Both images may then be resized to the same dimensions typically 16 16 or 32 32 and then the images may be projected into a color or gray level space with a limited number of values. The color or gray level reduction is performed for example using an elegant averaging algorithm. Then the histograms of these values for each image may be determined to estimate the color or gray level probability density functions h and h . A crossed histograms of values co occurrence may be determined so as to estimate the joint probability of occurrence of values h . Entropy for each image H and H as well as the joint entropy H may be determined computed for example using standard formulas. The mutual information may then be computed as I H H H. The normalized mutual information In is computed as a I H H I MAX H H or I H. Selecting the number of gray levels colors and the resize dimension of the image well facilitates the determination of this normalized mutual information rate well. This rate provides a good measure of the global common points of the two images that is the higher In is the closer the two images are. Although some embodiments use 16 for grey level or color values and 32 for the window size other embodiments may use 8 and 16 respectively while other values are also appropriate for some implementations.

The PM PLATFORM may utilize a Local Image Comparison Map LICM component that provides facilitates drawing a map of the differences between two images at a low resolution. For example in some embodiments if necessary the two original images may be resized into the same frame originally. Such a frame may be by way of non limiting example 256 to 1024 in each dimension. In some implementations a LICM component may utilize have two parameters the width and height of window over which local normalized mutual information is computed the processing window. The original image may be split into adjacent or slightly overlapping e.g. in some embodiments 25 max windows the size of the processing window. The normalized MI is determined computed over each window. A final comparison map image may be generated created where the dimensions are the number of horizontal and vertical processing windows that are computed on the original images. For example if a window has an index I and J over the original two images the value of the normalized MI may be assigned to pixel with coordinates I J.

Some implementations of the PM PLATFORM may utilize a Difference Mask DM component in which local image comparison maps are computed over a set of M consecutive frames. The values of each pixel of each map may be sorted and stored in an array in increasing order. The percentile P may be defined as for example 70 . A percentile threshold may be defined as the floot M P and the threshold used to compute a difference map every pixel with a value less than the threshold will be marked as 1 else 0 . Morphological closing and openings may be successively applied to clean the mask. Alternatively to the unique threshold method some embodiments may utilize a threshold map method where a threshold is determined computed for each pixel coordinate of the difference map thus adapting to images where for example there is an occlusion and some parts of the image never change.

The PM PLATFORM may then process the data as shown in for example via a Local Analysis LA component. The PM PLATFORM LA component may store a first frame e.g. as a background frame and the next frame is processed . Processing may include updating the background frame e.g. if a stretch of consecutive frames that are very close to each other consecutively and to a candidate background image has reached or exceeded a given length. In some embodiments the stretch is long enough if longer than the stretch corresponding to the current background image or to a specified value. The current mask may be determined detected as difference map between the current frame and the current background frame. In an alternative implementation a set of potential background frames may be stored.

The next mask may then be determined by the PM PLATFORM. In some implementations when determining the next mask object tracks may be defined as consecutive masks representing the same object that moves in a video with a list of current object tracks kept in memory either intermittently or at all times . In some embodiments when a new mask is created it is first split into connected components and each connected component is compared to existing objects. If their surface intersects with one of several objects latest masks and in some implementations if the PM PLATFORM determines these masks are not too old the current connected component is associated to the object that matches best. In some implementations if an object has not had added masks for more than a given duration it is considered as archived. An archived object represents an object s trajectory through the image and in some embodiments may be associated to close objects or split into several parts when analyzing its three dimensional volume that is in some implementations by stacking up all the masks into a 3D space where time is the 3dimension.

The PM PLATFORM may then analyze archived object trajectories for example to see if they may represent a person coming in and out of a place or a person making progress within a line. Once this analysis is performed a metric or measure can be generated created for example 1 or 1 when the trajectory crossed a predefined or self estimated threshold when analyzing people traffic or the time to cross the image along the line path if analyzing line wait time.

In some embodiments when a new measure is computed or available it is stored in a local database along with by way of non limiting example a time stamp the ID of the place it was measured in the ID of the sensor it originates from and a code to identify the type of PM metric it is. If information warning or error messages are produced during the processing of the raw signals into PM metrics they may be stored for example in the same database system under a different structure. Each message may be stored with a description the sensor it comes from a time stamp the level of gravity of the message and or the like. A daemon component and or software may then scans the database on a regular basis to look for new messages or PM metric samples. If a message or PM metric is found in the local database the daemon software will read it from the database transfer it to PM PLATFORM backend through a network API call and if the transfer was successful remove the message or PM metric from the local database. In some implementations network API calls may be performed in the REST standard. The API may return error messages or a success message for each call. The transmission of a measure or a message may be done through two different API calls. A detailed description of the interactions between the sensors and the backend architecture APIs etc. is discussed in greater detail below.

Once a PM metric reaches the PM PLATFORM backend it may be stored in a database and associated with a sensor and a place that were created in the database at setup to represent the place and sensor the PM metric originates from. The place may be described as a name ID address and may have a type e.g. restaurant public space take out caf and or the like. Additional information may be associated with the place such as the number of staff available at each time of the day the opening hours of the place etc. Such additional pieces of information may be used to correct erroneous PM metrics or readings when they occur for example if the location place is closed then the occupancy cannot be higher than the number of staff present at that time or the wait time at the line cannot be other than 0.

PM metrics may then be analyze processed packaged into an end user view that summarizes the information enough so that it is easily readable by end users and so that it does not divulge information the store owner wants to keep private such as the exact occupancy of his or her place or the precise wait time at the register. In some embodiments of the PM PLATFORM a business manager has the option to agree to release such information to end users through the PM PLATFORM although even in that case the raw measures may still be analyzed so as to be presented in an elegant and summarized way to the user.

Such analyses include but are not limited to color coding the measures. That is if a measure has values that range from A to B the PM PLATFORM represents the measure by N color codes or N levels that correspond to N typical ranges of the value. To do so the PM PLATFORM determines PM metrics of the values over a given period of time or number of samples generally ending at the current or latest sample. In such an embodiment such a set of metrics or values are referred to as the sample set having a size is S. In some embodiments S is a sorted set. The PM PLATFORM may determine thresholds Ti for which the value is in general present between i N and i 1 N of the time. If the I is comprised between 0 and N 1. I represents the level or color code index. If i o the PM PLATFORM identifies the value S N th value in the ordered set S. Each threshold may in some implementations be defined as the value at index i S N in the sorted set S. Once these values are determined computed the color code or level associated with each PM metric may be the index I where the value V is greater than threshold Ti and less than threshold T i i . Each index i may be represented by a specific color and logo. These logos and colors are then used to represent the value to the end user in an elegant and intelligible way.

Some embodiments of the PM PLATFORM may use historical data past example to predict how a PM metric will be in the future. For instance the PM PLATFORM may determine a predicted measure for a given future day and or time the PM PLATFORM can utilize data on how this and or a similar measure was at the same time and same day of the week in the past and can estimate over past examples biases due to the temperature the amount of rain or snow etc. on the same day of the week and hour. The PM PLATFORM can estimate another bias if a recurring local event occurred in the past e.g. school dismissal church event etc. . The PM PLATFORM may then apply these biases to the originally predicted measure to refine the prediction. A weekly or daily planner may then be created by representing for each day and hour or groups of 2 to 4 hours the predicted value using its color code as determined above. Users can choose the interval and granularity of this representation. provides an example representation of PM PLATFORM data provided to users. Depending on the implementation the color codes logos weekly or daily planners may all or variously be integrated into a portable graphic element e.g. HTML code that can be displayed on website social network pages mobile applications and or the like. Consumers may then use this data and widgets to choose when to visit the place and optimize the quality of their experience by waiting less or having a place that is more or less active depending on what they are looking for. Users can also choose to go to a different branch of the same company e.g. hospital emergency rooms chain stores etc. or institution if it is less crowded there or more like what they like e.g. if they like busy clubs bars . illustrates additional interface display elements for some implementations of the PM PLATFORM.

In some embodiments of the PM PLATFORM the measures and predictions may be represented in a much more complex granular and complete way to business owners so they can have insights on how their business is active in general how the weather impacts their traffic how local events impact their traffic. Using their sales data the PM PLATFORM may also computes how traffic wait time and other PM metrics impacts sales.

As discussed above various sensors communicate with the PM PLATFORM backend and the PM PLATFORM backend may control such sensors. Embodiments of the PM PLATFORM provide and or facilitate appropriate communication infrastructure and the following details provide non limiting examples for some implementations in particular example APIs used by devices to communicate with the PM PLATFORM backend and by the PM PLATFORM backend to communicate back to the devices. In one implementation the API is a REST API with data encoded as JSON string to string maps as an output and no object or class is used.

Devices may report the PM metrics to the PM PLATFORM backend as well as their activity reports error logs hardware status messages etc. and when specified debug data. The PM PLATFORM may communicate back to devices to update their software change their configuration like debug level log level algo parameters etc. The control API may be utilized but in some embodiments may be initiated by the devices as the server may be unable to reach devices individually e.g. if they are on a cell carrier s private network.

In some embodiments the API is thus separated in two zones report and control. Exemplary samples are provided below.

Services running on a sensor machine may include logging daemons that may send report queries on a regular basis. The frequency may in some embodiments be defined in a sensor configuration file. In some embodiments large files e.g. video debugs may be submitted to the backend through an ftp server. The ftp server configuration may be set in a sensor configuration file. The daemons may include by way of non limiting example 

Control daemons may facilitate remote administration tasks of the PM PLATFORM performed on sensor machines. Heavy administration may be performed locally e.g. using USB keyword mouse and USB portable screens plugged into a USB output visible on the box or network connection in WiFi if available on the sensor through the Ethernet port and or the like. SSH may be running on the sensor. Remote administration functions include a admin command software update e.g. send the box a URL to download and install the new version b admin getconfig get the configuration file or just one configuration c admin command execute a command the command can be for example reboot system restart software and services flush temp files execute script command as PM PLATFORM user get or set config debug mode video audio debug mode daemon frequencies etc. and or force update to check for updates now d admin command output post the output of a command.

To execute these commands a crontab based daemon e.g. pmCommandDaemon may ping an admin command execute URL at an interval determined by a config file. Another daemon to check for updates may run on a lower frequency e.g. pmSoftwareUpdateDaemon .

In some embodiments of the PM PLATFORM when a command is finished locally the results will be sent to an admin command output URL. Each command may have a unique ID for each terminal. In some implementations only one command may be sent at a time and or all commands may be taken from the database. Once a command is sent its status may be changed. Once it has completed its status is changed again and the output stored in the database.

In some embodiments while in debug mode the frequency of the command daemon will be set to 5 seconds. In regular times it will be one hour.

The following example process illustrates sensor and place setup for some embodiments of the PM PLATFORM i.e. when a new place is being installed . Each sensor may have a unique ID that is tied to its hardware. In one implementation it may be the MAC address of a local Ethernet card. The sensor may also have a configuration file where the type the version and a short description of the sensor can be entered. A command on the sensor e.g. pmRegisterSensor may be used to register the sensor on the PM PLATFORM backend. This command may send a query to the admin register API and create a sensor in the database. In some embodiments this can only happen once as the command may fail if a sensor with the same ID already exists in the PM PLATFORM backend. New places may be created on the PM PLATFORM backend. Sensors and places are connected on the PM PLATFORM backend server. A page may lists all orphan sensors e.g. sensors that are not linked to a place. For each sensor admin users can select a place and link it to the sensor.

Some implementations of the PM PLATFORM may utilize an FTP channel to facilitate transmission of larger files like videos or logs while in some implementations files are reported through HTTP POST queries. Each time an FTP channel is used a report ftp query may be made to notify the PM PLATFORM backend. Files may be uploaded to a folder e.g. named placeID incoming . Once the file is processed it may be removed. A regular flushing may be performed to remove old files. In some instances the file name will be defined by the client. The client may be responsible to not upload files with the same names.

The PM PLATFORM may utilize various input and output formats and the PM PLATFORM backend API may accept both POST and GET queries with arguments encoded into the URL or as multipart form data. The return format may be an array of JSON encoded string to string. If the return array is empty it means the query completed successfully. Errors may be encoded as elegant maps containing the following values 

Some embodiments of the PM PLATFORM may utilize a report API so that devices that need to report information to a server be it PM PLATFORM sample data or logs from the software or the system may the appropriate API. This method may be used when reporting PM PLATFORM data samples. Each sample may be linked to a sensor with a unique ID has a type a time and a value. In some embodiments sensors must be created in the database for the request to be accepted and they may have to be linked to a location as some sensors may depend on other sensors in the same location to compute the right measure. The following is example input 

In some embodiments nothing is returned if all goes well while an error is returned if not. Errors may be logged in the database. The following is a illustrative non limiting list of example errors 

Embodiments of the PM PLATFORM may utilize report log features. Such features may be used when a log is found on the sensor and needs to be reported. Once reported the log is removed from the database but not from the log files. This example API may be used to report log files also while in some implementations the FTP channel may be used to transfer files and a new type of log may be available a file log where the file is already on the server.

In some embodiments of the PM PLATFORM an admin API is generally used to administer and control sensors remotely administrators enter commands to send to the each sensors in the database each sensor pings the api admin command URL on a regular basis to get the next command and this URL takes a sensor ID a command type a name and value for the arguments. When the command is completed the sensors pings the api admin completed URL with the results. The following exemplary admin command input 

In some implementations each command has a type listed below where the name of the arguments is given in parenthesis 

In some embodiments admin completed is called to report the result of a command. The input is as below while the return is nothing unless there is a problem in which case an error object is returned .

In some embodiments of the PM PLATFORM admin register element is called to register a sensor into the PM PLATFORM backend. This command returns an error if a sensor with the same ID already exists in the database. If not it will create the sensor object into the PM PLATFORM backend and it may then be tied to a place e.g. dynamically or by an admin user . The input is as below while the return is nothing unless there is a problem in which case an error object is returned .

Typically users e.g. which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing and or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the PM PLATFORM controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices an optional cryptographic processor device and or a communications network . For example the PM PLATFORM controller may be connected to and or communicate with users e.g. operating client device s e.g. including but not limited to personal computer s server s and or various mobile device s including but not limited to cellular telephone s smartphone s e.g. iPhone Blackberry Android OS based phones etc. tablet computer s e.g. Apple iPad HP Slate Motorola Xoom etc. eBook reader s e.g. Amazon Kindle Barnes and Noble s Nook eReader etc. laptop computer s notebook s netbook s gaming console s e.g. XBOX Live Nintendo DS Sony PlayStation Portable etc. portable scanner s and or the like.

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The PM PLATFORM controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeable throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effectuate communications operations storage etc. The computer systemization may be connected to a power source e.g. optionally the power source may be internal. Optionally a cryptographic processor and or transceivers e.g. ICs may be connected to the system bus. In another embodiment the cryptographic processor and or transceivers may be connected as either internal and or external peripheral devices via the interface bus I O. In turn the transceivers may be connected to antenna s thereby effectuating wireless transmission and reception of various communication and or sensor protocols for example the antenna s may connect to a Texas Instruments WiLink WL1283 transceiver chip e.g. providing 802.11n Bluetooth 3.0 FM global positioning system GPS thereby allowing PM PLATFORM controller to determine its location Broadcom BCM4329FKUBG transceiver chip e.g. providing 802.11n Bluetooth 2.1 EDR FM etc. a Broadcom BCM4750IUB8 receiver chip e.g. GPS an Infineon Technologies X Gold 618 PMB9800 e.g. providing 2G 3G HSDPA HSUPA communications and or the like. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. It should be understood that in alternative embodiments any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to integrated system bus controllers memory management control units floating point units and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s application embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Intel s Celeron Core 2 Duo Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code according to conventional data processing techniques. Such instruction passing facilitates communication within the PM PLATFORM controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed PM PLATFORM mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller Personal Digital Assistants PDAs may be employed.

Depending on the particular implementation features of the PM PLATFORM may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS 51 i.e. 8051 microcontroller and or the like. Also to implement certain features of the PM PLATFORM some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the PM PLATFORM component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the PM PLATFORM may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example PM PLATFORM features discussed herein may be achieved through implementing FPGAs which are a semiconductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the PM PLATFORM features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the PM PLATFORM system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the operation of basic logic gates such as AND and XOR or more complex combinational operators such as decoders or simple mathematical operations. In most FPGAs the logic blocks also include memory elements which may be circuit flip flops or more complete blocks of memory. In some circumstances the PM PLATFORM may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate PM PLATFORM controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the PM PLATFORM.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the PM PLATFORM thereby providing an electric current to all subsequent components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters conventionally although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 fiber channel Small Computer Systems Interface SCSI Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the PM PLATFORM controller is accessible through remote clients e.g. computers with web browsers by users . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed PM PLATFORM architectures may similarly be employed to pool load balance and or otherwise increase the communicative bandwidth required by the PM PLATFORM controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB IEEE 1394a b serial universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antennae S Video VGA and or the like wireless transceivers 802.11a b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA high speed downlink packet access HSDPA global system for mobile communications GSM long term evolution LTE WiMax etc. and or the like. One typical output device may include a video display which typically comprises a Cathode Ray Tube CRT or Liquid Crystal Display LCD based monitor with an interface e.g. DVI circuitry and cable that accepts signals from a video interface may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accepts signals from a video interface. Typically the video interface provides the composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a DVI display cable etc. .

User input devices often are a type of peripheral device see below and may include card readers dongles finger print readers gloves graphics tablets joysticks keyboards microphones mouse mice remote controls retina readers touch screens e.g. capacitive resistive etc. trackballs trackpads sensors e.g. accelerometers ambient light GPS gyroscopes proximity etc. styluses and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces directly to the interface bus system bus the CPU and or the like. Peripheral devices may be external internal and or part of the PM PLATFORM controller. Peripheral devices may include antenna audio devices e.g. line in line out microphone input speakers etc. cameras e.g. still video webcam etc. dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added capabilities e.g. crypto devices force feedback devices e.g. vibrating motors network interfaces printers scanners storage devices transceivers e.g. cellular GPS etc. video devices e.g. goggles monitors etc. video sources visors and or the like. Peripheral devices often include types of input devices e.g. cameras .

It should be noted that although user input devices and peripheral devices may be employed the PM PLATFORM controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the PM PLATFORM controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include the Broadcom s CryptoNetX and other Security Processors nCipher s nShield SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the PM PLATFORM controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the operation of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism however such an embodiment would result in an extremely slow rate of operation. In a typical configuration memory will include ROM RAM and a storage device . A storage device may be any conventional computer system storage. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. Blueray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the PM PLATFORM component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection typically are stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the PM PLATFORM controller. Typically the operating system facilitates access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Plan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the PM PLATFORM controller to communicate with other entities through a communications network . Various communication protocols may be used by the PM PLATFORM controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the PM PLATFORM controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the PM PLATFORM database operating systems other program components user interfaces Web browsers and or the like.

Access to the PM PLATFORM database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the PM PLATFORM. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the PM PLATFORM as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access capabilities operation and display of data and computer hardware and operating system resources and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua IBM s OS 2 Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium NT XP Vista 7 i.e. Aero Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. FireFox Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Also in place of a Web browser and information server a combined application may be developed to perform similar operations of both. The combined application would similarly affect the obtaining and the provision of information to users user agents and or the like from the PM PLATFORM enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be a conventional Internet mail server such as but not limited to sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POP3 simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the PM PLATFORM.

Access to the PM PLATFORM mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a conventional mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a conventional CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash operation passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the PM PLATFORM may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the PM PLATFORM component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the PM PLATFORM and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The PM PLATFORM database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be a conventional fault tolerant relational scalable secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the PM PLATFORM database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. If the PM PLATFORM database is implemented as a data structure the use of the PM PLATFORM database may be integrated into another component such as the PM PLATFORM component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A Users table may include fields such as but not limited to user id security first name last name age state address firstline address secondline zipcode devices list contact info contact type alt contact info alt contact type provider and or the like.

A Sensor table may include fields such as but not limited to sensor ID type create date place ID status and or the like.

A Place table may include fields such as but not limited to place ID name location city ZIP address address2 state country place create date place status and or the like.

A Place Store Info table may include fields such as but not limited to place store ID type employee number place ID open close day status and or the like.

A Place Tech Info table may include fields such as but not limited to place tech ID type wifi wifi pw place ID dongleID status and or the like.

A Command table may include fields such as but not limited to command ID type value status output sensor ID and or the like.

A Log Message table may include fields such as but not limited to log ID type severity type2 message date place ID sensor ID status and or the like.

A Sample table may include fields such as but not limited to sample ID sensor ID place ID measure type value time status and or the like.

A Measure table may include fields such as but not limited to measure ID place ID timesensor ID place ID measure type ID value time status and or the like.

A Measure Type table may include fields such as but not limited to measure type ID description name and or the like.

A Market Data table may include fields such as but not limited to market data feed ID asset ID asset symbol asset name price and or the like in one embodiment the market data table is populated through a market data feed e.g. Bloomberg s PhatPipe Dun Bradstreet Reuter s Tib Triarch etc. for example through Microsoft s Active Template Library and Dealing Object Technology s real time toolkit Rtt.Multi.

In one embodiment the PM PLATFORM database may interact with other database systems. For example employing a distributed database system queries and data access by search PM PLATFORM component may treat the combination of the PM PLATFORM database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the PM PLATFORM. Also various accounts may require custom database tables depending upon the environments and the types of clients the PM PLATFORM may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The PM PLATFORM may be configured to keep track of various settings inputs and parameters via database controllers.

The PM PLATFORM database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the PM PLATFORM database communicates with the PM PLATFORM component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The PM PLATFORM component is a stored program component that is executed by a CPU. In one embodiment the PM PLATFORM component incorporates any and or all combinations of the aspects of the PM PLATFORM discussed in the previous figures. As such the PM PLATFORM affects accessing obtaining and the provision of information services transactions and or the like across various communications networks.

The PM PLATFORM component may transform sensor data and or feedback via PM PLATFORM components into notifications updates coupons promotions transactions and or activities and or the like and use of the PM PLATFORM. In one embodiment the PM PLATFORM component takes inputs e.g. raw sensor data and or the like etc. and transforms the inputs via various components e.g. GIC LICM DM LA and or the like into outputs e.g. PM metrics notifications updates coupons promotions transactions and or activities and or the like .

The PM PLATFORM component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the PM PLATFORM server employs a cryptographic server to encrypt and decrypt communications. The PM PLATFORM component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the PM PLATFORM component communicates with the PM PLATFORM database operating systems other program components and or the like. The PM PLATFORM may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the PM PLATFORM node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the PM PLATFORM controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA Jini local and remote application program interfaces JavaScript Object Notation JSON Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex yacc XML and or the like which allow for grammar generation and parsing capabilities which in turn may form the basis of communication messages within and between components.

where Value1 is discerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value1 may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file as processed by lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. JSON SOAP and or like parsers that may be employed to parse e.g. communications data. Further the parsing grammar may be used beyond message parsing but may also be used to parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

For example in some implementations the PM PLATFORM controller may be executing a PHP script implementing a Secure Sockets Layer SSL socket server via the information server which listens to incoming communications on a server port to which a client may send data e.g. data encoded in JSON format. Upon identifying an incoming communication the PHP script may read the incoming message from the client device parse the received JSON encoded text data to extract information from the JSON encoded text data into PHP script variables and store the data e.g. client identifying information etc. and or extracted information in a relational database accessible using the Structured Query Language SQL . An exemplary listing written substantially in the form of PHP SQL commands to accept JSON encoded input data from a client device via a SSL connection parse the data to extract variables and store the data to a database is provided below 

Also the following resources may be used to provide example embodiments regarding SOAP parser implementation 

In order to address various issues and advance the art the entirety of this application for PLACEMETER PLATFORM APPARATUSES METHODS AND SYSTEMS including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures Appendices and or otherwise shows by way of illustration various embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical operational organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the innovations and inapplicable to others. In addition the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations including the right to claim such innovations file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical operational organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that depending on the particular needs and or characteristics of a PM PLATFORM individual and or enterprise user database configuration and or relational model data type data transmission and or network framework syntax structure and or the like various embodiments of the PM PLATFORM may be implemented that enable a great deal of flexibility and customization. While various embodiments and discussions of the PM PLATFORM have been directed to activity measurement however it is to be understood that the embodiments described herein may be readily configured and or customized for a wide variety of other applications and or implementations.

