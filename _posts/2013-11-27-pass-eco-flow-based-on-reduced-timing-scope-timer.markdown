---

title: Pass eco flow based on reduced timing scope timer
abstract: Modifying a circuit includes: obtaining timing information of the circuit, wherein the timing information includes timing information pertaining to a critical path of the circuit; determining a scope associated with the critical path, the scope including a subset of the circuit; and performing a fix based at least in part on physical information associated with the circuit to improve timing of the scope.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09418192&OS=09418192&RS=09418192
owner: Atoptech, Inc.
number: 09418192
owner_city: Santa Clara
owner_country: US
publication_date: 20131127
---
This application claims priority to U.S. Provisional Patent Application No. 61 735 818 entitled PERFORMING A PASS TIMING ECO filed Dec. 11 2012 which is incorporated herein by reference for all purposes.

This application claims priority to U.S. Provisional Patent Application No. 61 805 790 entitled PASS ECO FLOW BASED ON REDUCED TIMING SCOPE TIMER filed Mar. 27 2013 which is incorporated herein by reference for all purposes.

Modern Very Large Scale Integration VLSI design flow typically has two major stages the implementation stage and the sign off stage. The implementation stage typically starts with a circuit design including a gate level netlist. Logic cells are placed on a layout and connected by metal lines. The logic cell placement and metal line routing are optimized based on timing analysis results. A Place and Route P R tool is usually deployed at the implementation stage. The sign off stage typically starts with final design out of P R tool. Analysis is performed to simulate circuit behavior in real silicon. RC extraction tools and static timing analyzers STAs are typically used at the sign off stage. A circuit design must be free of timing violations in its sign off timing results before it can be delivered to a semiconductor foundry for manufacture.

Timing is analyzed in both the implementation stage and the sign off stage. During a timing analysis the design operates under a set of corner cases or modes also referred to as scenarios and timing results such as delay and slack of circuit paths are determined. During the implementation stage to speed up the design cycle designers tend to apply a limited set of scenarios compared with the sign off stage. Even if the same scenario is analyzed in both stages due to different implementations of how the circuit is modeled there can be differences in timing analysis results.

In order to close the timing gap between the implementation stage and the sign off stage chip designers usually adopt an extra Engineering Change Order ECO flow during which simple optimization moves also referred to as adjustments or fixes such as buffer resizing and insertion are applied to the whole logic design to fix timing violations identified by the sign off timer. However the typical ECO flow requires a long time to run and only permits simple optimization techniques. These issues arise because physical layout information such as the wire routing pattern is usually not available during the optimization process yet the logical optimization moves can impact the wire routing pattern which in turn can impact the timing of the design thus requiring multiple iterations during which full timing analysis is performed on the entire circuit.

The invention can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer program product embodied on a computer readable storage medium and or a processor such as a processor configured to execute instructions stored on and or provided by a memory coupled to the processor. In this specification these implementations or any other form that the invention may take may be referred to as techniques. In general the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein the term processor refers to one or more devices circuits and or processing cores configured to process data such as computer program instructions.

A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.

A Physical Aware Scope based Sign off PASS ECO flow technique is described. In some embodiments during a PASS ECO flow timing information of a critical path of the circuit is obtained and a scope associated with the critical path is determined. In some embodiments the scope includes the critical path as well as a set of external components that affect the timing of the critical path. Based at least in part on physical information such as route information and placement information a fix also referred to as an optimization move is determined to improve the timing of the scope.

Processor is coupled bi directionally with memory which can include a first primary storage typically a random access memory RAM and a second primary storage area typically a read only memory ROM . As is well known in the art primary storage can be used as a general storage area and as scratch pad memory and can also be used to store input data and processed data. Primary storage can also store programming instructions and data in the form of data objects and text objects in addition to other data and instructions for processes operating on processor . Also as is well known in the art primary storage typically includes basic operating instructions program code data and objects used by the processor to perform its functions e.g. programmed instructions . For example memory can include any suitable computer readable storage media described below depending on whether for example data access needs to be bi directional or uni directional. For example processor can also directly and very rapidly retrieve and store frequently needed data in a cache memory not shown .

A removable mass storage device provides additional data storage capacity for the computer system and is coupled either bi directionally read write or uni directionally read only to processor . For example storage can also include computer readable media such as magnetic tape flash memory PC CARDS portable mass storage devices holographic storage devices and other storage devices. A fixed mass storage can also for example provide additional data storage capacity. The most common example of mass storage is a hard disk drive. Mass storage generally store additional programming instructions data and the like that typically are not in active use by the processor . It will be appreciated that the information retained within mass storage and can be incorporated if needed in standard fashion as part of memory e.g. RAM as virtual memory.

In addition to providing processor access to storage subsystems bus can also be used to provide access to other subsystems and devices. As shown these can include a display monitor a network interface a keyboard and a pointing device as well as an auxiliary input output device interface a sound card speakers and other subsystems as needed. For example the pointing device can be a mouse stylus track ball or tablet and is useful for interacting with a graphical user interface.

The network interface allows processor to be coupled to another computer computer network or telecommunications network using a network connection as shown. For example through the network interface the processor can receive information e.g. data objects or program instructions from another network or output information to another network in the course of performing method process steps. Information often represented as a sequence of instructions to be executed on a processor can be received from and outputted to another network. An interface card or similar device and appropriate software implemented by e.g. executed performed on processor can be used to connect the computer system to an external network and transfer data according to standard protocols. For example various process embodiments disclosed herein can be executed on processor or can be performed across a network such as the Internet intranet networks or local area networks in conjunction with a remote processor that shares a portion of the processing. Additional mass storage devices not shown can also be connected to processor through network interface .

An auxiliary I O device interface not shown can be used in conjunction with computer system . The auxiliary I O device interface can include general and customized interfaces that allow the processor to send and more typically receive data from other devices such as microphones touch sensitive displays transducer card readers tape readers voice or handwriting recognizers biometrics readers cameras portable mass storage devices and other computers.

In addition various embodiments disclosed herein further relate to computer storage products with a computer readable medium that includes program code for performing various computer implemented operations. The computer readable medium is any data storage device that can store data which can thereafter be read by a computer system. Examples of computer readable media include but are not limited to all the media mentioned above magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROM disks magneto optical media such as optical disks and specially configured hardware devices such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of program code include both machine code as produced for example by a compiler or files containing higher level code e.g. script that can be executed using an interpreter.

The computer system shown in is but an example of a computer system suitable for use with the various embodiments disclosed herein. Other computer systems suitable for such use can include additional or fewer subsystems. In addition bus is illustrative of any interconnection scheme serving to link the subsystems. Other computer architectures having different configurations of subsystems can also be utilized.

In this example P R engine receives as inputs logical circuit design information such as netlist files library files specification and description language SDC files as well as RC Wire description files etc. The P R engine makes physical placement and routing decisions of the logical circuit. The P R engine includes a timer configured to perform timing analysis on the circuit design and an optimizer configured to make appropriate optimization moves to the circuit design to improve timing and achieve timing closure for a selected set of scenarios. Initially during the implementation stage based on its inputs and using the selected set of scenarios the timer generates as outputs a design netlist e.g. a netlist file which includes a logical description of the circuit components and their interconnects and physical design data e.g. a Graphic Database System II GDSII file which includes physical placement data such as wiring positions and pin placements and sends the outputs to sign off timer STA . A full timing graph is generated at the initial implementation stage. As used herein a timing graph refers to an abstraction of the circuit design comprising interconnected nodes and edges. The nodes and edges in the timing diagram represent the logic gates and their interconnections in the circuit.

Sign off timer is implemented as a separate timing analysis process with respect to the P R engine and is invoked separately from the P R engine. In some embodiments sign off timer is supplied by a vendor different from that of the P R engine. After a sign off extraction tool not shown extracts parasitic resistance and capacitance from the design data sign off timer performs different timing analysis than the P R timer on the design to identify remaining timing violations. In some embodiments all possible scenarios are applied. Sign off timer outputs a timing path report that includes information about critical paths with timing violations and a Standard Delay Format SDF file that includes the scenarios and timing data. In some embodiments a full timing graph also referred to as a timing tree for all the paths and portions thereof is generated in which critical paths with timing violations are specially marked. Sign off timer can use any appropriate critical path identification techniques to determine the critical path including statistical and non statistical techniques that are well known to those skilled in the art. In some embodiments slack values of individual paths are determined and a path having a slack value that does not meet a threshold is deemed to have a timing violation and therefore a critical path. As used herein required time refers to time needed to reach the end point of a path arrival time refers to the delay from the clock source to the end point of the path and slack refers to the difference between required time and arrival time of the end point of a path.

The outputs of sign off timer is fed back to P R engine which calibrates its internal timer delay values to minimize the differences between the P R engine s internal timer results and the sign off timer s results. In some embodiments the calibration involves applying a set of adjustment ratios applied to respective portions of a critical path. For example if the P R engine s timer determines that a portion of the critical path has a delay of 0.5 ns but the sign off timer determines that the same portion of the critical path has a delay of 0.7 ns then a ratio of 7 5 is applied to the delay determined by the P R s timer to model the result that would be generated by the sign off timer.

Based on the timing path reports the calibrated timer of the P R engine performs a PASS ECO flow to modify the circuit and adjust its timing. As will be described in greater detail below during the PASS ECO flow a timing scope associated with the critical path is identified by P R engine . The timing scope includes a set of logic instances also referred to as cells or components that affect the timing of the critical path. Further optimization and analysis are performed on the timing scope rather than the entire circuit to achieve timing closure. Since the timing scope is small in size compared with the full circuit the speed of PASS ECO flow can be much faster than the full design analysis.

At timing information of the circuit is obtained. In some embodiments the timing information is obtained from the output of a sign off timer or a separate timing analysis process which exports the timing information to the P R engine as one or more files with predefined formats or transfers the timing information via predefined APIs. The timing information includes timing information e.g. delays of one or more paths of the circuit with timing violations as determined by the sign off timer. As discussed above the timing information of the timing violating paths can be output as a special timing graph with only the timing violating paths or a full timing diagram with the timing violating paths specially marked.

At a scope associated with a critical path is determined. In some embodiments the critical path is the one with the worst timing e.g. the most negative slack . As will be described in greater detail below the scope is a subset of the circuit and is comprised of the critical path itself and any additional circuit components that affect the timing of the critical path. In some embodiments a set of rules are applied to determine the scope. Detailed examples of the rules are explained in connection with below.

At one or more fixes are performed on the scope. The fixes are based at least in part on physical information associated with the circuit to improve timing e.g. to increase slack and achieve timing closure . Examples of physical information include route information and placement information of the circuit such as the locations geometry and layouts of wires pins etc. Optionally logical information associated with the circuit such as the types of logic instances and the logical connections between the logical instances is also used during optimization. Since the fixes are limited to the scope which in some cases constitute less than 5 of the overall circuit the fixes can be done efficiently. Details of how the fixes are performed are explained in connection with below.

At circuit data including the fixes is re sent to the sign off timer which again performs timing analysis to verify whether timing closure is achieved on the critical path. If timing closure is achieved at the process completes. If timing closure is still not achieved at are repeated until timing closure is achieved. Process may be repeated until all the critical paths identified by the sign off timer are fixed to achieve timing closure. In some embodiments the critical paths are processed in parallel by the P R engine and the circuit data that includes all the fixes to all the critical paths is sent to the sign off timer.

A circuit typically includes sequential cells also referred to as P cells which are cells with memory and combinational cells also referred to as D cells which are cells without memory. Examples of sequential cells include flip flops latches etc. Examples of combinational cells include buffers inverters logical gates etc.

As used herein a path that has a timing violation is deemed to be a critical path. A data path refers to a portion of the circuit between two sequential cells. A clock path refers to the portion of the circuit from the clock source to the first sequential cell. The timing of a critical path e.g. the propagation time required for a signal to travel from the beginning of the path to the end of the path is computed based on data paths and optionally on clock paths.

In this example example circuit includes multiple data paths and clock paths. Example circuit is used for purposes of illustration only and the technique is generally applicable to circuits with critical paths. Selected portions of the paths are shown for purposes of illustration and the circuit shown is not necessarily a complete circuit diagram. In this example the STA timing report indicates that path meets the timing requirement e.g. the slack of the data path is greater than or equal to 0 while path has sign off timing violation e.g. the slack of the data path between input pin and output pin is less than 0 . The slack of path is computed based on the delays of its elements using known techniques.

The timing scope is determined by identifying and grouping a set of logic instances of the circuit that affect the timing result of the critical path. In this example the following set of rules is applied to determine the timing scope 

A All the logic instances in the critical path are included in the timing scope. In the example shown all the logical instances on path that are used in the timing calculation enclosed by the circle labeled A are included in the timing scope.

B One or more additional logic instances required to correctly analyze signal propagation to guarantee the expected timing results for the critical path are also included in the timing scope. In some embodiments a set of additional logical instances is included when the set of additional logical instances contributes to a logic state that leads to a timing violation of the critical path. For example the STA timing report indicates that data path only has a sign off timing violation when switch is turned on. Since a signal propagating through logic instances in path enclosed by the circle labeled B is required to turn on switch path contributes to the timing violation of critical path and is included in the timing scope even though path is not a part of data path .

C One or more logic instances that contribute to an external load of the critical path are also included in the timing scope. As used herein an external load refers to one or more components connected to the outputs of a component of interest e.g. fanouts of a logic instance on the critical path . Since the external load impacts timing of the critical path the external load such as fanout logic instances is required to be included in timing analysis to guarantee accurate timing results for the critical path. In the example shown logic instances on path enclosed by the circle labeled C are fanouts of logic instance on critical path and are included in the timing scope.

D One or more logic instances that are coupled to the critical path through cross coupling capacitance are also included in the timing scope. Cross coupling capacitances also referred to as cross talk capacitances are parasitic capacitances between separate interconnected metal lines. The value of a cross coupling capacitance is calculated by the P R tool s internal RC extraction engine. The metal line on the critical path is referred to as the victim net. The other metal line is referred to as the aggressor net. There are external logic instances acting as drivers to the aggressor nets and the activities of these drivers change the timing of the critical path. For example when the output of an external buffer transitions from high to low the buffer injects a certain amount of current to the victim net through cross coupling capacitance and the critical path timing is impacted. Thus these external logic instances are required to guarantee accurate timing results for the critical paths. In the example shown the logic instance on path enclosed by the circle labeled D is included in the timing scope because it is coupled to critical path via a cross coupling capacitance .

In summary the scope of the critical path in includes logic instances on paths and . Once the set of logic instances included in the timing scope is determined fixes are performed on the timing scope to improve timing. In some embodiments the optimization engine accounts for physical information e.g. P R information when determining the fixes.

At scope information timing information and physical information are accessed. In this example the scope information includes information pertaining to the logic instances included in the critical path and the logic instances that affect the timing of the critical path determined using the rules described above in connection with . In some embodiments the timing information includes a timing graph with delay and or slack information associated with at least the scope and the physical information includes P R data such as layout positioning and geometry information. In some embodiments full P R data for the entire circuit is available. As will be discussed below access to full physical information makes it possible to make fixes within the scope without impacting the physical layout of the whole circuit.

At a candidate fix for the scope is determined. A number of optimization moves are possible including logical fixes such as resizing a component adding or removing a buffer replacing a component with another component with greater driving strength local area logic re synthesis etc. as well as physical fixes such as changing the location of a route to reduce crosstalk 

Various techniques of how to determine the potential fix can be applied including ones well known to those skilled in the art. In some embodiments the candidate fix is determined by applying a set of rules. For example the rules may specify that the candidate fix be made at a cell immediately before there are fanouts and that the cell be enlarged to twice its current size. Many other appropriate rules may be applied based on design preferences. In some embodiments the set of rules includes a cost or benefit function that determines locally the impact of the potential fix. For example when a cell is enlarged there is positive impact to timing but negative impact to power consumption circuit area location congestion etc. The factors are considered together to formulate a cost or benefit function that reflects the total cost or benefit of a particular fix. The fix that achieves the lowest cost value or the highest benefit value is selected as the candidate fix. In some embodiments a number of potential fixes are evaluated and ranked based on their respective scores so a next best potential fix can easily be identified at a later time. In some embodiments the scores include worst negative slack WNS total negative slack TNS design rule violation DRV etc.

At the candidate fix is checked against physical information to determine whether the fix is feasible. As discussed above in some embodiments the physical information includes the full P R information of the circuit. Thus the candidate fix can be checked against the full physical layout of the circuit to ensure that the fix is physically feasible in other words the fix meets the physical constraints of the circuit layout . If the fix involves adding or resizing a component the physical information is checked to see if there is space available to accommodate the added or resized component. Referring to as an example if the fix is to add a buffer before logic instance then the physical layout of circuit is checked to determine whether there is space to add the new buffer and if so where it should be placed. As another example if a route needs to be changed the physical information is checked to see if there may be conflicting routes in the new location. Referring again to if the route between 412 and 424 should be changed the physical layout is checked to make sure that the changed route does not interfere with other nearby routes such as the routes between 412 and the fanout instances.

If the candidate fix is not feasible it is discarded and control is transferred to where the current timing scope and physical layout information is again accessed to determine another candidate fix and are repeated. If the candidate fix is feasible at it is accepted e.g. incorporated into the circuit . Accordingly the scope is also updated. In some embodiments the update includes adding the fix to the original scope and identifying any additional logical instances that should be included in the new scope according to the rules. The updated scope with the fix is re analyzed to determine whether timing closure of the critical path is achieved. The same timing analysis techniques as those used to identify the critical path can be used. For example the slack of the path with the updated scope is computed. If timing closure is achieved the process completes for this critical path otherwise control is transferred to and are repeated until timing closure is achieved. In some embodiments the timing of the critical path with the fix is computed by the P R s timer which calibrates the computed timing results to conform to the sign off timer as described above e.g. by applying a set of adjustment ratios to the P R s timer . Other techniques for determining whether timing closure is achieved can be used.

A PASS ECO flow has been described. In some embodiments the PASS ECO is performed by a P R tool with access to the full physical data of the circuit on a scope associated with the critical path. The technique permits more efficient optimization and permits both logical and physical fixes to be made while observing the constraints of the physical layout.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.

