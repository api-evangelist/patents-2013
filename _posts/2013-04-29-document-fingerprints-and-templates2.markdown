---

title: Document fingerprints and templates
abstract: Aspects related to fingerprints and templates of documents are described. In one embodiment, the integrity of a document is checked by comparing a prior fingerprint of a document with a result of a fingerprint function applied to content of the document. When the fingerprint of the document is consistent with the result of the fingerprint function, a standard form related to the document is identified. In this context, a synopsis of the standard document may be provided. In other embodiments, when the prior fingerprint of the document is inconsistent with the result of the fingerprint function, one or more paragraphs of the document may be checked for consistency by comparing prior fingerprints of the paragraphs with results of a fingerprint function applied to the paragraphs. Common meaning statements for one or more of the paragraphs may also be identified and provided as part of the synopsis of the document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633062&OS=09633062&RS=09633062
owner: AMAZON TECHNOLOGIES, INC.
number: 09633062
owner_city: Seattle
owner_country: US
publication_date: 20130429
---
Many documents include several paragraphs and sections. Among certain types of documents some paragraphs are often reused. For example in legal documents warranty disclaimer and other boilerplate paragraphs may be generally copied among and reused between similar documents. In some cases paragraphs are not changed when reused between similar documents.

It is also noted that some documents are lengthy and include dense passages of terms and or conditions that for example may be time consuming to parse and comprehend. Similarly for lengthy documents if only one paragraph is amended or modified it may be difficult to quickly ascertain whether any changes were made and where the changes were made.

Many documents include several paragraphs and sections. Among certain types of documents some paragraphs are often reused. For example in legal documents warranty disclaimer and other boilerplate paragraphs may be generally copied among and reused between similar documents. In many cases the paragraphs are not changed when reused between similar documents.

Some legal documents include legalese that may be difficult for readers to parse and comprehend. Especially for people that are generally unfamiliar with standard legal documents a considerable amount of time may be required to read and comprehend terms of a legal document. Additionally if a standard paragraph of a document is amended or modified it may be difficult to quickly ascertain whether any changes were made especially if the paragraph contains a dense passage of terms and conditions.

In this context aspects related to fingerprints e.g. checksums hash sums etc. and templates of documents are described. The generation of documents that incorporate fingerprints i.e. fingerprint documents as described herein assists readers to identify whether changes were made to a document. Further with reference to a database of standard form documents plain term or common meaning statements associated with the standard form documents and an iterative nested analysis of fingerprint documents a synopsis of a document may be provided that identifies certain similarities and differences between the document and various standard form documents. The synopsis may present common meaning statements in connection with a document being analyzed to assist readers that may find it difficult to comprehend dense paragraphs of terms and conditions rights and responsibilities and warranties and disclaimers. The synopsis may be provided at least in part without checking the integrity of a document. For example one or more common meaning statements may be identified as part of a synopsis for a document using reference tags without checking the integrity of the document. In this case the synopsis may not provide details on whether the document was altered. Alternatively or additionally a synopsis of a document may be provided even if only the integrity of certain sections or paragraphs of the document have been checked.

In various embodiments described herein the integrity of a document is checked by comparing a fingerprint of the document with a content of the document. That is the integrity of a document may be checked by comparing a prior fingerprint embedded within the document with a result of a fingerprint function applied to content of the document. When the fingerprint of the document is consistent with the result of the fingerprint function applied to the content of the document a standard form related to the document may be identified based on a comparison of the fingerprint of the document to a database of standard documents. In this context a synopsis of the standard document may be provided with reference to the standard form. In other embodiments when the fingerprint of the document is inconsistent with the result of the fingerprint function one or more sections or paragraphs of the document are checked for consistency by comparing prior fingerprints of the sections or paragraphs with results of a fingerprint function applied to content of the sections or paragraphs. Common meaning statements for one or more of the sections or paragraphs may also be identified and provided as part of the synopsis of the document.

In the following discussion a general description of a system for document generation and integrity processing is provided followed by a discussion of the operation of the same.

The computing environment may be embodied as a computer computing device or computing system. In certain embodiments the computing environment may include one or more computing devices arranged for example in one or more server or computer banks. The computing device or devices may be located at a single installation site or distributed among different geographical locations. For example the provider computing environment may include a plurality of computing devices that together provide a hosted computing resource also known as a cloud computing resource a grid computing resource and or other distributed or hosted computing arrangement. In some cases the computing environment includes an elastic computing resource where an allotted capacity of processing network storage or other computing related resources varies over time.

The network may include the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks other suitable networks or combinations thereof. It is noted that the computing environment may communicate with the client device by various protocols such as hypertext transfer protocol HTTP simple object access protocol SOAP representational state transfer REST real time transport protocol RTP real time streaming protocol RTSP real time messaging protocol RTMP user datagram protocol UDP transmission control protocol TCP and or other suitable protocols for communicating data over the network without limitation. Similarly the third party environment and the scanner and facsimile peripherals and may communicate with the computing environment and the client device over the network using any suitable network communications protocol.

The computing environment may include various functional and or logic e.g. device or circuit elements that may be executed or directed by the computing environment according to various embodiments described in further detail below. As illustrated in the example embodiment of the computing environment includes a data store a document generator and a document integrity processor .

The data store may store various content and data forms data structures and or programs for example that are accessible to the computing environment either locally or remotely. The data store may be representative of a plurality of data stores arranged in various configurations at one or multiple geographic locations among embodiments or may be representative of a web service from which data is retrieved through an application programming interface API . In certain aspects the data stored in the data store is associated with the operation of the various applications and or functional logic elements described below.

In one embodiment the data store includes a standard document template directory and a common meaning statement directory . The standard document template directory may store standard form documents and templates of standard form documents. A standard form document as described herein may be any document that is of known form and may include one or more fingerprints associated with portions of the document as described in further detail below. The common meaning statement directory may store descriptions of various forms of standard documents in common plain English that are drafted to be easy to understand. In other words with reference to one or more paragraphs of a document such as warranty disclaimer or other boilerplate paragraphs the common meaning statement directory may store associated descriptions of the terms and term meanings of the paragraphs using language that is generally easier to parse and comprehend. It is noted that the example directories and are provided by way of example only and it should be appreciated that the data store may store additional or alternative types and or directories of data.

According to features described herein the document generator of the computing environment may generate fingerprint documents including one or more fingerprints attributed to the document itself e.g. attributed to the document in its entirety . In various embodiments the fingerprint documents may also include fingerprints attributed to one or more sections of the document and or one or more paragraphs of the document. In this context the document generator may include a fingerprint generator and a document assembler . As further described below the document assembler may generate a fingerprint document using one or more templates stored in the standard document template directory . In certain embodiments the templates include one or more term placeholders and the document assembler may insert names dates terms to be defined or other text in place of the placeholders.

As part of the generation of a fingerprint document the fingerprint generator may generate fingerprints for a document generated by the document assembler or provided to the computing environment by way of the scanner or facsimile peripherals and for example as further discussed below. A fingerprint may be any collection or string of binary or other digits that uniquely identifies a document or one or more paragraphs or sections of a document. Non limiting examples of a fingerprint may include a checksum a hash sum or the like. The fingerprint generator may generate fingerprints for one or more paragraphs or sections of the document. For example using text from a paragraph or section of a document as input to a hash function the text is mapped by the hash function to a smaller unique fingerprint of the text.

In one embodiment the fingerprint generator relies upon a Secure Hash Algorithm SHA such as the SHA 224 SHA 256 SHA 384 or SHA 512 hash functions to generate fingerprints of portions of documents generated by the document assembler . The use of keyed or digital signature hash functions is also within the scope of the embodiment described herein. In this case it may be possible to verify the integrity of a document and also verify that a certain individual or party created or modified the document. Generally the hash function or technique relied upon by the fingerprint generator transforms text within a document into a fixed length fingerprint value. It is noted that the scope of the embodiments described herein is not to be limited to any particular hash function or technique. Instead any suitable hash function or technique that generates a unique datagram from an arbitrary block of data may be relied upon. As described herein the fingerprint may be used to later verify the integrity of the original text of the document. After generating fingerprints of a document the fingerprints may be incorporated attached or associated with the document for integrity checking and comparative purposes.

In other features of the computing environment given a document for integrity processing the document integrity processor of the computing environment may check the integrity of the document identify standard form documents that may be related to the document and generate a synopsis of the document. In this context the document integrity processor may include a fingerprint result generator a fingerprint correlator a standard document identifier and a synopsis generator .

The fingerprint result generator may generate a fingerprint by applying a fingerprint function to certain portions of a document. That is the portions of the document are provided as an input to a fingerprint function such as a hash function to generate a result of the fingerprint function. In one embodiment the fingerprint result generator relies upon one or more fingerprint e.g. hash checksum etc. functions or techniques similar to those relied upon by the fingerprint generator . After the fingerprint result generator generates a fingerprint of a portion of a document the generated fingerprint or result may be compared by the fingerprint correlator with a fingerprint attached or embedded within the document itself e.g. a prior fingerprint of the document . As further described below if the fingerprint or result of the fingerprint function generated by the fingerprint result generator matches the prior fingerprint attached or embedded with the document one or more portions of the document may be verified as being free from amendments or alterations. Alternatively if the fingerprint or result of the fingerprint function generated by the fingerprint result generator does not match the prior fingerprint attached or embedded with the document one or more portions of the document may be identified by the fingerprint correlator as being amended or altered.

The standard document identifier given a document for integrity processing may identify one or more standard form documents that are the same as or similar to the document for integrity processing. To identify a standard form document the standard document identifier may reference the standard document template directory with one or more fingerprints from a document received for integrity processing. In various embodiments the standard document identifier may reference the standard document template directory only for fingerprints associated with document content free from amendments or alterations as determined by the fingerprint correlator .

The synopsis generator may compile results returned by the fingerprint correlator and or the standard document identifier to generate a synopsis of a document received for integrity processing. In various embodiments the synopsis generator may provide for a document received for integrity processing a synopsis that identifies certain similarities and differences between the document and various standard form documents. The synopsis may present common meaning statements in connection with a document received for integrity processing for reference to assist readers that may find it difficult to comprehend dense paragraphs of terms and conditions. Additionally the synopsis may include an indication as to whether one or more paragraphs of a document received for integrity processing have been altered.

The client device may be representative of one or more client devices operated by various users. The client device may include any processor or computer based device or system including those embodied in the form of a desktop or server computer tablet computing device handheld computing device or electronic book reading device among other example computing devices and systems. The client device may execute applications including the client interface which is representative of an example application that may execute on the client device .

Generally the client interface may offer an interface to services provided by the computing environment . For example after transmitting a document for integrity processing from the client device to the computing environment a user of the client device may rely upon the client interface to review results of the processing performed by the computing environment . As further described below for example the user of the client device may rely upon the client interface to review a synopsis of a document transmitted to the computing environment for integrity checking.

In various embodiments the client device may include functional and or logic e.g. device or circuit elements similar to those of the computing environment . For example the client device may include elements similar to the document generator and the document integrity processor . In such embodiments the client device performs fingerprint document generation and verification. Thus it should be appreciated that fingerprint document generation and verification by the client device is within the scope and spirit of the embodiments described herein.

The third party environment may include any processor or computer based device or system operated by or on behalf of a third party. As further described below various documents may be received by the client device or the computing environment from the third party environment . These documents may be analyzed by the document integrity processor in various embodiments to ascertain whether the documents have been altered or amended for example and to provide a synopsis of the documents for review.

To operate on or with hardcopy or physical documents the networked environment includes the scanner and facsimile peripherals and . Thus for example to generate fingerprints for a physical form document a physical copy of the document may be scanned by the scanner peripheral and electronically transmitted e.g. via e mail facsimile etc. to the computing environment the client device and or the third party environment . In various embodiments a physical copy of the document may be converted into text or various glyphs by the scanner peripheral before being electronically transmitted to the computing environment . In this context the embodiments described herein may operate on electronic documents that include text glyphs of text or a combination of text and glyphs of text. After being transferred electronically the computing environment may further process an electronic copy of the original physical document. In this manner the scanner and facsimile peripherals and assist with the electronic conversion of physical copies of documents for processing.

Next a further description of the operation of the various components of the networked environment is provided with reference to .

In one embodiment to generate the document the text or content of the document is provided to the document generator of the computing environment of . The text or content of the document may be received by the client device or the third party computing environment from another device or devices. The client device via the client interface or the third party computing environment may then instruct the document generator to assemble the document . Based on the text or content of the document the fingerprint generator may generate the fingerprints and and the document assembler may incorporate the fingerprints and into the document by attaching or embedding them into the document . It is noted that in the embodiment of the fingerprint is representative of the paragraph and was generated by the fingerprint generator using the content of the paragraph . For example the fingerprint may be generated by the fingerprint generator using the content of the paragraph as input to a suitable fingerprint or hash function as described herein. Particularly the content of the paragraph may include textual characters any punctuation marks and or whitespace characters e.g. spaces tabs etc. of the paragraph . Based on the fingerprint or hash function used to generate the fingerprint it should be appreciated that the fingerprint is unique for the content of the paragraph and cannot generally be reproduced by a variant of the content of the paragraph . Similarly the fingerprints and cannot generally be reproduced by a variant of the contents of the paragraphs and .

Each of the fingerprints and which have been attached or embedded into the document may be considered a prior fingerprint for purposes of integrity checking. Specifically a prior fingerprint may serve as the basis for a comparison with a result of a fingerprint function applied to content of the document at a later time. If the result of the fingerprint function is equivalent or substantially equivalent to the prior fingerprint it may be considered that no alterations have occurred to the content of the document .

The reference tag may include in various embodiments a direct reference to one or more standard forms stored in the standard document template directory or common meaning statements stored in the common meaning statement directory of . It should be noted here that the standard forms stored in the standard document template directory may be referenced by either fingerprints such as the and or by reference tags. As compared to the fingerprints and however the reference tag is generally not relied upon to verify the integrity of the content of the paragraphs or but is instead used to easily reference a related form or plain English description of the paragraph .

When preparing the document the document assembler may generate the reference tag attach or embed the reference tag into the document and store a copy of the paragraph in the standard document template directory in association with the reference tag . In this manner the reference tag provides an additional reference to a reference copy of the content of the paragraph . Additionally a reference copy of the paragraph may be stored along with a plain English description of the paragraph for future reference in connection with the reference tag . Use of the reference tag by the synopsis generator of is further described below.

It is noted that although the fingerprints and are illustrated in as being located adjacent or proximate to the paragraphs and the fingerprints do not necessarily need to be attached or embedded in the document at any particular location. Instead the fingerprints and may be attached or embedded within the document at any suitable location so long as each of the fingerprints is identified as being associated with its respective paragraph or content of the document .

As a further extension of the document of illustrates an example document generated by the computing environment of the networked environment of according to various embodiments of the present disclosure. As illustrated the example document includes sections and . Further the section includes various paragraphs including paragraphs and among others. Similarly the section includes various paragraphs including paragraph among others. The document itself is associated with a fingerprint . The sections of the document and are associated respectively with fingerprints and . The paragraphs and of section are associated respectively with fingerprints and . Similarly the paragraph of the section is associated with a fingerprint .

As compared to the document of the document of is organized in sections and and paragraphs and of the sections and . In this context it is noted that fingerprints are generated for various organizational levels of the document including for the document itself for the sections and of the document and for the paragraphs and of the sections of the document. As described in further detail below fingerprinting at the organizational levels of sections and paragraphs may be relied upon to quickly determine whether and where changes were made in a document.

For example referring to the document by checking the fingerprint against the content of the document the fingerprint correlator of may quickly determine whether the document has been altered or amended at least in part. That is considering the fingerprint as a prior fingerprint for the document integrity of the document may be verified by checking or comparing the fingerprint with a result of a fingerprint function applied to the content of the document . If the document has been altered or amended at some point in time after the fingerprint was generated the fingerprint correlator will identify a difference between the fingerprint and the result of the fingerprint function. Further if a difference is identified the fingerprint correlator may compare results of a fingerprint function applied to the content of the sections and with the fingerprints and . If necessary the fingerprint correlator may additionally compare results of a fingerprint function applied to the content of the paragraphs and with the fingerprints and .

Referring next to below it is noted that the flow diagrams of illustrate example processes performed by the document generator and the document integrity processor of the computing environment . It should be appreciated that the flow diagrams of provide merely one example of various functional arrangements and or operations that may be employed to implement the document generator and the document integrity processor as described herein. In certain aspects the flow diagrams of may be viewed as depicting an example of operations performed by the document generator and the document integrity processor according to one or more embodiments.

In one embodiment content retrieved from the standard document template directory includes a template page including one or more term placeholders and the document assembler may insert names dates terms to be defined or other text in place of the placeholders. In this context illustrates a template page of an example document including term placeholders relied upon by the document generator of the computing environment of according to various embodiments of the present disclosure. As illustrated in the document includes paragraph among other paragraphs and a fingerprint of the paragraph . The document also includes term placeholders and .

In certain aspects the term placeholders and may be relied upon by the document assembler to quickly insert terms to be defined within documents being generated. In various embodiments the term placeholders and may be populated with static data or one or more dynamic data fields. For example as illustrated in when generating a document the document assembler may insert a date that the document was generated at the term placeholder . Further the document assembler may insert an assignor party name at the term placeholder and insert an assignee party name at the term placeholder . The date assignor party name and assignee party name may be provided by a user of the client device via the client interface for example or by another party or reference database.

As static data entries date and party names for example may be populated in place of the term placeholders and and remain static e.g. unchanged after generation of the document. Alternatively one or more of the term placeholders and may be populated as a dynamic data field. For example a date inserted at the term placeholder may comprise a dynamic date field that changes over time according to the current date. Similarly the use of dynamic page number time or other dynamic fields is within the scope of the embodiments described herein.

It should be appreciated that the term placeholders illustrated in are provided by way of example only as other placeholders for various terms are within the scope and spirit of the embodiments described herein. Additionally it is noted that in various embodiments term placeholders may be included within any paragraph of a document being generated by the document generator . It is also noted that when generating a document based on a template including term placeholders the fingerprint generator may generate a fingerprint such as the fingerprint either before or after insertion of terms within the template in place of the term placeholders. When a dynamic data field is inserted in place of a term placeholder the fingerprint generator may generate a fingerprint either including or excluding the dynamic data field or the current data associated with the dynamic data field. Thus in the context of a dynamic date field for example the fingerprint generator may generate a fingerprint either including or excluding the dynamic date in various embodiments.

Referring back to after reference the process proceeds to reference where the fingerprint generator generates fingerprints for the document generated by the document assembler at reference . For example the fingerprint generator may generate a fingerprint for one or more paragraphs and sections of the document. Additionally the fingerprint generator may generate a fingerprint for the document itself. With reference to the document illustrated in as an example at reference the fingerprint generator may generate the fingerprints and of the paragraphs and . Similarly the fingerprint generator may generate the fingerprints and of the sections and of the document . Additionally the fingerprint generator may generate the fingerprint of the document . It is noted that in certain aspects and embodiments a fingerprint of a section of a document is determined from one or more fingerprints of paragraphs of the section. Alternatively the fingerprint of the section may be determined directly from the content of the section. Likewise a fingerprint of a document may be determined from fingerprints of sections or paragraphs of the document or determined directly from the content of the document itself.

After generating fingerprints at reference the process proceeds to reference where the document assembler generates one or more reference tags including a direct reference to one or more aspects e.g. paragraphs sections etc. of the document generated at reference . For example the reference tag may include a direct reference to a common meaning statement stored in the common meaning statement directory as described above. With reference to the example document of the reference tag may be generated at reference to easily reference a plain English description of the paragraph of the document . In certain embodiments the generation of reference tags at reference may be omitted from the process .

After generating reference tags at reference the process proceeds to reference where the document assembler attaches or embeds the fingerprints and any reference tags to the document generated at reference . As discussed above the fingerprints may be attached or embedded within the generated document at any location so long as each fingerprint remains associated with its respective section or paragraph of content. Generally reference tags may be attached or embedded within the generated document at a location proximate or adjacent to its associated section or paragraph of content to indicate to a reader of the document that the reference tag is associated with certain content.

At reference of the process the document generator provides the document including the attached or embedded fingerprints or reference tags to one or more computing devices or parties. For example the document generator may transmit the generated document to the client device or the third party environment via the network .

As further described below the fingerprints of the document generated by the document generator according to the process may be used to quickly determine whether certain portions of the document have been amended or altered. Further the reference tags of the document may be used to quickly identify common statement meanings for portions of the document provided in plain English for reference when reading the document.

At reference of the process the integrity of the document received at reference is checked by the document integrity processor . To this end at reference the fingerprint result generator calculates a fingerprint or hash function with reference to the content of the document received at reference . For example at reference the fingerprint result generator calculates a fingerprint function such as a hash function with reference to the entire content of the received document. In other words the fingerprint result generator applies a fingerprint function to the entire content of the received document. After calculating the fingerprint function the fingerprint correlator compares the result of the fingerprint function with a fingerprint attached or embedded within the document received at reference . Referring to the example document of as one example to check the integrity of the document a result of a fingerprint function applied to the document may be compared to the fingerprint of the document . Here the fingerprint of the document may be considered a prior fingerprint of the document and the result of the fingerprint function may be considered a current fingerprint of the document . If any changes were made to the content of the document the result of the fingerprint function will differ from the fingerprint . On the other hand if no changes were made to the content of the document the result of the fingerprint function will not differ from the fingerprint .

Continuing to reference of the process the integrity of one or more sections of the document received at reference is checked by the document integrity processor . To this end at reference the fingerprint result generator calculates a fingerprint function with reference to the content of one or more sections of the document received at reference . In other words the fingerprint result generator applies a fingerprint function to the content of one or more sections of the document received at reference . After calculating a fingerprint function of each of the one or more sections of the document the fingerprint correlator compares the results of the fingerprint function with associated fingerprints attached or embedded within the document received at reference . Referring to the example document of to check the integrity of the section a result of a fingerprint or hash function of the content of the section may be compared to the fingerprint . In this context the fingerprint may be considered a prior fingerprint of the section and the result of the fingerprint function applied to the section may be considered a current fingerprint of the section . If any changes were made to the content of the section the result of the fingerprint function will differ from the fingerprint . On the other hand if no changes were made the result the function will not differ from the fingerprint . In various embodiments any number of the sections of the document received at reference may be checked for alterations or amendments at reference .

It is noted that checking the integrity of document sections at reference may be based in part upon the document integrity determined at reference . For example in the case that the document received at reference is determined at reference to be free from any amendments or alterations the processes at reference may be omitted because the integrity of the entire document was confirmed. In other words if the document received at reference is determined to be free from any amendments or alterations each of the sections of the document should also be free from alterations and the processes at reference may be omitted to save time and processing costs. On the other hand in case the document received at reference is determined at reference to include amendments or alterations the processes at reference may be relied upon to determine a certain section in which the alterations appear.

Continuing to reference of the process the integrity of one or more paragraphs of the document received at reference is checked by the document integrity processor . To this end at reference the fingerprint result generator calculates a fingerprint function with reference to the content of one or more paragraphs of the document received at reference . In other words the fingerprint result generator applies a fingerprint function to the content of one or more paragraphs of the document received at reference . After calculating a fingerprint function of each of the one or more paragraphs of the document the fingerprint correlator compares the result of the fingerprint functions to fingerprints attached or embedded within the document received at reference . Referring to the example document of to check the integrity of the paragraph a result of a fingerprint function of the content of the paragraph may be compared to the fingerprint . In this context the fingerprint may be considered a prior fingerprint of the document and the result of the fingerprint function may be considered a current fingerprint of the paragraph of the document . If any changes were made to the content of the paragraph the result of the fingerprint function will differ from the fingerprint . On the other hand if no changes were made the result the function will not differ from the fingerprint . In various embodiments any number of the paragraphs of the document received at reference may be checked for alterations or amendments at reference .

Again it is noted that checking the integrity of document paragraphs at reference may be based in part upon the section integrity determined at reference . For example in the case that a section of the document received at reference is determined at reference to be free from any amendments or alterations the processes at reference may be omitted for any paragraphs of the section because the integrity of the entire section was confirmed. In other words if the section is determined to be free from any amendments or alterations each of the paragraphs of the section should also be free from alterations and the processes at reference may be omitted to save time and processing costs. On the other hand in case the section is determined at reference to include amendments or alterations the processes at reference may be relied upon to determine a certain paragraph among the section in which the alterations appear.

Based on the description above it should be appreciated that a general location of alterations in a document may be identified at least at document section and paragraph levels by relying upon the iterative nature of checking integrity at references and . In various embodiments one or more of the algorithms relied upon at references and may include the ability to detect not only that an alteration has been identified in a document section or paragraph for example but also the nature and or location of the change within the document section or paragraph. However because the ability to identify the exact nature and or location of changes generally requires reference fingerprints of larger size a suitable checksum algorithm may be selected for use at references and to balance the size of reference fingerprints with the ability to more accurately identify what and where alterations were made.

At reference of the process the standard document identifier of the document integrity processor identifies any standard form documents related to the document received at reference among those stored in the standard document template directory . In one embodiment the identification of any standard form documents is performed by the standard document identifier by referencing the standard document template directory with one or more fingerprints of the document received at reference . In exemplary embodiments only fingerprints determined to be consistent with the content of the received document at one of references or are relied upon by the standard document identifier to identify related standard form documents.

As one example if the content of a document received at reference is determined at reference to be consistent with the fingerprint of the document the fingerprint of the document may be relied upon by the standard document identifier to identify any standard forms related to the document. As further described below the synopsis generator may rely upon standard forms to provide a synopsis of the document received at reference . Even in a case in which the integrity of the document e.g. in its entirety received at reference is not confirmed at reference fingerprints of sections or paragraphs confirmed at either references or for example may be relied upon to determine standard section or paragraph forms related to the document received at reference . These standard section or paragraph forms may also be determined by the standard document identifier by referencing the standard document template directory the fingerprints of the document received at reference .

At reference of the process the standard document identifier further identifies any common meaning statements for consistent sections or paragraphs of the document received at reference among those stored in the common meaning statement directory . In one embodiment the identification of any common meaning statement is performed by the standard document identifier by referencing the common meaning statement directory with one or more reference tags of the document received at reference . In some embodiments only fingerprints determined to be consistent with the content of the received document at one of references or are relied upon by the standard document identifier to identify related common meaning statements.

As one example if the content of a document received at reference is determined at reference to be consistent with the fingerprint of the document the fingerprint of the document may be relied upon by the standard document identifier to identify any common meaning statements related to the document. As further described below the synopsis generator may rely upon the common meaning statements to provide a synopsis of the document received at reference . Even in a case in which the integrity of the document e.g. in its entirety received at reference is not confirmed at reference fingerprints of sections or paragraphs confirmed at either references or for example may be relied upon to determine section or paragraph common meaning statements.

Proceeding to reference of the process the synopsis generator provides a synopsis of the document received at reference based on the integrity checks performed at references and and any standard form documents and common meaning statements identified at references and .

In the context of reference of illustrates an example synopsis of a document received by the document integrity processor of the computing environment of according to various embodiments of the present disclosure. In the example of a synopsis is illustrated for an example document XYZ received at reference of . As part of the synopsis of the document XYZ an overall synopsis indicates that the document XYZ includes several paragraphs generally related to a certain context or field of use or business e.g. certain business forms sales forms types of licenses contracts lease agreements etc. without limitation . The synopsis identifies that the standard form document ABC is a standard form related to the document XYZ. For example even if the fingerprint of the document XYZ may not be identical to the fingerprint of the document ABC if a substantial number of the paragraphs of the documents XYZ and ABC are found to correlate with each other the synopsis generator may identify them as being related.

The synopsis identifies however that the document XYZ differs from the standard form document ABC at certain paragraphs and sections where the document XYZ has been modified amended or altered. Among embodiments the overall synopsis may include one or more common meaning statements directed to one or more plain English explanations of the overall substance of the document.

In addition to the overall synopsis the synopsis further includes a synopsis of a first section of the document received at reference of . In the synopsis of the first section an indication of the integrity of each of the paragraphs in the first section is provided. Particularly the context of paragraph of the first section is identified in the synopsis as being consistent with the content of that paragraph while paragraphs and of the first section are identified as being modified amended or altered. As described above amendments or alterations to certain sections or paragraphs may be identified by the document integrity processor based on a comparison of fingerprints of the document with a result of a fingerprint function applied to the content of the document.

In the synopsis a general description of the first section of the document is provided with reference to the standard form document ABC . It is also noted in the synopsis however that paragraphs and do not conform to any known standard paragraphs of the document ABC due to a mismatch between a result of a fingerprint function applied to content of those paragraphs and the prior fingerprints associated with those paragraphs for example. Thus if any common meaning statements associated with the first section are provided as part of the synopsis they may not be provided for paragraphs and because those paragraphs are identified as being altered.

In certain aspects although paragraphs and of section do not conform to any known standard paragraphs of the document ABC the synopsis generator may be able to identify or suggest a most likely standard form of paragraphs and with reference to the document ABC or other standard form documents in the standard document directory . Such an identification or suggestion of a most likely standard paragraph may be based on for example relative locations of other paragraphs in the document XYZ that correlate with the standard form document ABC. In certain embodiments the synopsis may display one or more most likely standard paragraphs and offer the ability to replace paragraphs of the document XYZ with the most likely standard paragraphs.

As further illustrated the synopsis further includes a synopsis of a second section of the document received at reference of . In the synopsis of the second section an indication of the integrity of each of the paragraphs is also provided. Particularly each of the paragraphs in the second section is identified as being consistent with its content. In the synopsis a general description of the second section of the document is provided with reference to the standard form document ABC as an example. Further in the synopsis one or more common meaning statements may be provided if available in the common meaning statement directory because the paragraphs are identified as being consistent with their content.

In connection with it should be appreciated that the synopsis may be provided at least in part without checking the integrity of a document. For example one or more common meaning statements may be identified as part of a synopsis for a document using reference tags without checking the integrity of the document. In this case the synopsis may not provide details on whether the document was altered. Alternatively or additionally a synopsis of a document may be provided even if only the integrity of certain sections or paragraphs of the document have been checked.

It is noted that the synopsis is provided by way of example only. That is other arrangements or presentations for a synopsis of a received document are within the scope and spirit of the embodiments described herein. Additionally it is noted that the synopsis may include additional statements related to the integrity of a document as described or suggested herein or omit certain features of the analysis illustrated in . For example the synopsis may include various statements regarding one or more reference tags included within a received document. In one embodiment the synopsis may be presented at the client interface of the client device . In other embodiments the synopsis may be presented at any other suitable interface of any computing device.

As described herein documents including fingerprints may be relied upon to determine the integrity of a document quickly and easily. Further certain aspects of the document may be analyzed and presented to a reader of the document. To facilitate a clear understanding of the document various statements related to the terms and conditions of a document for example may be provided in a synopsis form that is relatively simple to comprehend.

In various embodiments the memory stores data and software or executable code components executable by the processor . For example the memory may store executable code components associated the document generator the document integrity processor and the logical elements thereof for execution by the processor . The memory may also store data such as that stored in the data store among other data.

It should be understood and appreciated that the memory may store other executable code components for execution by the processor . For example an operating system may be stored in the memory for execution by the processor . Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

As discussed above in various embodiments the memory stores software for execution by the processor . In this respect the terms executable or for execution refer to software forms that can ultimately be run or executed by the processor whether in source object machine or other form. Examples of executable programs include for example a compiled program that can be translated into a machine code format and loaded into a random access portion of the memory and executed by the processor source code that can be expressed in an object code format and loaded into a random access portion of the memory and executed by the processor or source code that can be interpreted by another executable program to generate instructions in a random access portion of the memory and executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example a random access memory RAM read only memory ROM magnetic or other hard disk drive solid state semiconductor or similar drive USB flash drive memory card optical disc e.g. compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory component.

In various embodiments the memory may include both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may include for example a random access memory RAM read only memory ROM magnetic or other hard disk drive solid state semiconductor or similar drive USB flash drive memory card accessed via a memory card reader floppy disk accessed via an associated floppy disk drive optical disc accessed via an optical disc drive magnetic tape accessed via an appropriate tape drive and or other memory component or any combination thereof. In addition the RAM may include for example a static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and or other similar memory device. The ROM may include for example a programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM or other similar memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel respectively or in combination. Thus the local interface may be an appropriate network or bus that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may include additional systems designed to coordinate this communication including for example a load balancer that performs load balancing. The processor may be of electrical or of some other available construction.

As discussed above the document generator the document integrity processor and the logical elements thereof may be embodied in part by software or executable code components for execution by general purpose hardware. Alternatively the same may be embodied in dedicated hardware or a combination of software general specific and or dedicated purpose hardware. If embodied in such hardware each can be implemented as a circuit or state machine for example that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts or process diagrams of are representative of certain processes functionality and operations of embodiments discussed herein. Each block may represent one or a combination of steps or executions in a process. Alternatively or additionally each block may represent a module segment or portion of code that includes program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that includes human readable statements written in a programming language or machine code that includes numerical instructions recognizable by a suitable execution system such as the processor . The machine code may be converted from the source code etc. Further each block may represent or be connected with a circuit or a number of interconnected circuits to implement a certain logical function or process step.

Although the flowcharts or process diagrams of illustrate a specific order it is understood that the order may differ from that which is depicted. For example an order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the document generator the document integrity processor and the logical elements thereof that include software or executable code components can be embodied or stored in any tangible or non transitory computer readable medium or device for execution by an instruction execution system such as a general purpose processor. In this sense the logic may include for example software or executable code components that can be fetched from the computer readable medium and executed by the instruction execution system. Thus the instruction execution system may be directed by execution of the instructions to perform certain processes such as those illustrated in . In the context of the present disclosure a computer readable medium can be any tangible medium that can contain store or maintain any logic application software or executable code component described herein for use by or in connection with an instruction execution system.

The computer readable medium can include any physical media such as for example magnetic optical or semiconductor media. More specific examples of suitable computer readable media include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may include a random access memory RAM including for example a static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may include a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other similar memory device.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

Although embodiments have been described herein in detail the descriptions are by way of example. The features of the embodiments described herein are representative and in alternative embodiments certain features and elements may be added or omitted. Additionally modifications to aspects of the embodiments described herein may be made by those skilled in the art without departing from the spirit and scope of the present invention defined in the following claims the scope of which are to be accorded the broadest interpretation so as to encompass modifications and equivalent structures.

