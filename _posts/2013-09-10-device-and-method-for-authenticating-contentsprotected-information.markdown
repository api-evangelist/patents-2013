---

title: Device and method for authenticating contents-protected information
abstract: Provided are an authentication method that includes connecting an optical disc drive (ODD) for driving a medium and a host device for reproducing contents stored in the medium using an interface. An authentication for reproducing the contents is performed by mutually exchanging data between the host device and the ODD via the authentication area of the ODD for storing the data. Accordingly, the ODD may convert a file from the optical disc, which is in an intrinsic format, into a format that is recognizable by a host device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09087186&OS=09087186&RS=09087186
owner: Toshiba Samsung Storage Technology Korea Corporation
number: 09087186
owner_city: Suwon-si
owner_country: KR
publication_date: 20130910
---
This application claims the benefit under 35 USC 119 a of Korean Patent Application No. 10 2012 0100662 filed on Sep. 11 2012 in the Korean Intellectual Property Office the entire disclosure of which is incorporated herein by reference for all purposes.

The following description relates to a device and method for authenticating contents protected information and more particularly to an authentication method for a reproduction system having no authentication system.

Optical disc drives ODDs are an example of optical media devices. An ODD is a typical content storing and reproducing device. An optical disc may have a format such as a compact disc CD and a digital versatile disc DVD . Recently optical media devices compatible with CDs DVDs and Bluray discs BDs have been introduced.

A typical information display device is a general purpose device such as a computer. Recently image reproduction devices such as smart TVs and personal portable terminals such as smart phones or tablet PCs have been developed. These more recent image reproduction devices may be used as A V hosts for reproducing various contents in various ways.

The image display devices have the ability to display various contents stored in peripheral devices that are connected thereto. However unlike general purpose PCs devices capable of reproducing contents such as smart TVs smart phones and tablet PCs hereinafter referred to reproduction devices allow for limited connectivity and thus lack compatibility with various types of media. While having various host functions provided via an interface such as universal serial bus USB WiFi Bluetooth and the like these reproduction devices typically only support a file allocation table FAT file system defined by the International Standard Organization ISO 9293 and thus are not capable of directly reproducing contents from optical discs such as CDs or DVDs which use a compact disc file system CDFS or a universal disc format UDF as a file system.

To reproduce CD DVD contents using a reproduction device having no connectivity to an ODD a CD DVD intrinsic format must be converted to a FAT system. In this case an authentication process should be performed to protect copy protected contents for example a DVD title. For example to perform an authentication process a player application accesses a small computer system interface SCSI device driver to issue an advanced technology attachment packet interface ATAPI command directly to the ODD. However a reproduction device that does not have an ODD device driver is not able to perform the authentication process with the ODD.

In an aspect there is provided an authentication method for an optical disc drive ODD for driving a medium and a host device for reproducing contents stored in the medium the method including connecting the optical disc drive ODD and the host device through an interface device allocating in the ODD an authentication area for storing query data for authenticating contents and result data thereof and performing an authentication for reproducing contents by mutually exchanging data between the host device and the ODD via the authentication area.

The host device and the ODD may be connected to each other via a universal serial bus USB method or a WiFi method.

The exchanging of data may comprise the ODD recording information in the authentication area using a file allocation table FAT system format.

In an aspect there is provided a contents reproduction apparatus including an optical disc drive ODD configured to drive a medium containing contents the ODD comprising a memory device including an authentication area for storing data for authentication of the contents a host device connected to the ODD and configured to generate a command packet for the authentication of the contents and data including parameters a file system driver configured to store the data in the authentication area of the ODD and an interface device configured to provide a connection between the host device and the ODD.

The host device and the ODD may be connected to each other via a file allocation table FAT file system and the authentication area comprises a virtual file according to the FAT file system.

The interface device may enable the host device and the ODD to be connected to each other via a universal serial bus USB method or a WiFi method.

The ODD may further comprise an authentication area manager configured to process the data in the authentication area execute a command for the authentication of the contents and store a result in the authentication area.

In an aspect there is provided an apparatus for reading content from an optical disc the apparatus including a controller configured to convert a file from the optical disc which is in an intrinsic format into a file allocation table FAT format that is compatible with a host device and a storage device configured to store the converted file in an authentication area that is accessible by the host device.

In response to the apparatus being connected to the host device via a universal serial bus USB connection the controller may be further configured to change a USB descriptor of the apparatus into a subclass that is recognizable by the host device.

The controller may be further configured to change a command set of the apparatus into a command set that is recognizable by the host device.

Other features and aspects may be apparent from the following detailed description the drawings and the claims.

Throughout the drawings and the detailed description unless otherwise described the same drawing reference numerals will be understood to refer to the same elements features and structures. The relative size and depiction of these elements may be exaggerated for clarity illustration and convenience.

The following detailed description is provided to assist the reader in gaining a comprehensive understanding of the methods apparatuses and or systems described herein. Accordingly various changes modifications and equivalents of the methods apparatuses and or systems described herein will be suggested to those of ordinary skill in the art. Also descriptions of well known functions and constructions may be omitted for increased clarity and conciseness.

According to various aspects there is provided an authentication method that may be used to authenticate copy protected contents such as a DVD title. According to various aspects the method is an indirect authentication method that does not rely on a direct exchange of advanced technology attachment packet interface ATAPI small computer system interface SCSI commands between a host device and an optical disc drive ODD . Instead information is exchanged between the host device and ODD and thus a substantial authentication process is performed using ATAPI SCSI commands based on the exchanged information.

Referring to an ODD is a slave device that is connected via an interface to a host device . Here the host device is a reproduction device such as a personal portable terminal and is capable of reproducing digital contents. The reproduction device may be capable of reproducing digital contents without any direct connectivity to the ODD for example a smart TV a digital photo frame a tablet PC a smartphone and the like.

The interface may include at least a pair of USB ports that are provided at interface parts and corresponding to the host device and the slave device. Accordingly the interface including the USB ports includes a USB cable as an intercable . The ODD and the host device may exchange information via the intercable . As another example the interface may be configured to communicate via a wireless protocol. The wireless protocol may include a variety of methods such as a wireless wave connection method such as Bluetooth or an ad hoc method or a wireless optical connection method using an infrared ray. In this example the intercable is not used for the wireless method.

The host device supports a file system of a limited range due to a structural limit thereof. A typical file system that the host device supports is a file allocation table FAT file system. The FAT file system is applied not only to a hard disk drive HDD but also to various types of memory cards such as compact flash CF secure digital SD multi media card MMC a memory stick and the like. Although there are various file systems in addition to the above file system the host device may not support all of the file systems. That is the host device may support only one file system or a portion of the generally widely used files systems. When a slave device that is not compatible with the host device is connected to the host device the slave device is classified by the host device as an unknown device. For example when an ODD with a compact disc file system CDFS universal disc format UDF file system is connected to a host device supporting only a FAT file system the host device will classify the ODD as an unknown device.

According to various aspects herein a file system conversion algorithm is applied to the ODD and thus the host device may recognize the ODD . For example the conversion may be performed by a file system conversion algorithm and the conversion algorithm may be mounted on a conversion unit or a converter included in the interface of the ODD .

According to various aspects a CDFS UDF file system may be converted to a FAT file system. The conversion algorithm allows the host device to recognize the ODD as an acceptable slave device to obtain recognizable file system information from the ODD . Accordingly the ODD may be recognized by the host device as a specific known device and a compatible command set and file system may be used between the ODD and the host device .

Table 1 shows definitions of command set information as subclass codes of a USB device that may be used as an interface device in a device according to various aspects.

In the USB specification an ODD has a device class code 08h in an interface descriptor and belongs to a mass storage. A subclass code of the ODD is 02h and an MMC 5 ATAPI command set is used for the ODD.

However a device that has a subclass code 02h is not recognized as a device that the host device supports. In this case a subclass code 06h that uses the most popular SCSI block commands SBCs is transmitted to the host device so that the host device may recognize the ODD as a usable device. In the alternative when the host device supports the device having the subclass code 02h the subclass code 02h is transmitted without being changed.

As defined in Table 2 below the ODD such as a CD or a DVD is defined to have a periphery device code 05h that uses the MMC commands set. When the host device does not accept the MMC commands set the periphery device code 05h may be converted to 00h which is a device code that corresponds to a device that has an acceptable commands set for example the SBC commands set. The device using an acceptable commands set may be a direct access block device such as a magnetic disk capable of directly recording data. As a result the ODD changes a device class with the host device and thus the host device recognizes the ODD as another device which is accessible for example an HDD which is recognizable by a host group.

When the ODD is recognized as a magnetic disk drive with respect to the host device and directory entry information is requested from the host device the ODD converts file system information from an intrinsic format of an optical disc into a FAT file system format that is recognizable by the host device and transmits the converted file system information to the host device . In other words the ODD which internally has intrinsic file system information in CDFS UDF formats converts the file system information from CDFS UDF formats into file system information in a FAT format upon a request by the host device and transmits the converted file system information to the host device . The conversion may be performed by a converter or a conversion unit included in the interface . The FAT format includes a FAT16 format formed of 16 bits and a FAT32 format formed of 32 bits.

Accordingly the host device may recognize file information including an address of contents stored on an optical disc and thus the host device may access and reproduce a particular content.

When the host device requests directory entry again the ODD transfers the directory entry information in a FAT format to the host device . Accordingly the host device that obtained the directory entry information is in a reproducible state in which the location address of data contents of the ODD may be identified and the data may be read through the address. The MBR BPB and directory entry information transferred from the ODD to the host device are in the FAT format but they are obtained by internally converting the CDFS UDF format to the FAT format by the conversion unit.

Table 3 below shows pseudo codes of an algorithm for converting a CDFS UDF format to a FAT format. In this example the algorithm is a MakeFAT function which is a FAT conversion program function.

In the above pseudo codes clus start index and clust end index respectively denote a start index and an end index of a cluster. The above algorithm may be operated when the host device requests a FAT. A FAT offset fat offset is received as a factor or a parameter. A FAT is generated by organizing a FAT entry corresponding to fat offset using file information stored in a FATB buffer into a FATT buffer.

A FATT buffer second buffer memory is an allocated area of the memory and is a buffer for organizing FAT entry using the file information from the FATB buffer through a function of the algorithm and storing the organized FAT entry. A FAT generator generates a FAT from an offset requested by the host device using file information from the FATB buffer and stores the generated FAT in the FATT buffer. The data stored in the FATT buffer may be transferred to the host device via a data transmitter included in the interface . In this example the FAT generation and transfer may be operated in parallel in independent blocks and thus an efficiency of the generation and transfer of a FAT may be improved.

In this case clus start and clus end are set by reading data corresponding to the start position and the end position of a file from a FATB buffer Operation . The FATB buffer may store a file start position and a file end position of all files on a disc. Whenever a loop is repeated the start position and the end position of a next file may be read and stored in clus start and clus end in units of 4 bytes. When a value of clus start is 0x0FFFFFFF while the loop is repeated it may be determined that no more file information exists and the algorithm that generates a FAT is terminated.

According to various aspects the generation of a FAT for example records a FAT entry in the FATT buffer having a 2048 byte size. In the previous example if the size of a FAT entry cluster number is 4 bytes a 2048 bytes FATT may represent 512 FAT entries. In order to transfer a FAT requested by the host device the clus start and clus end of a file read from the FATB buffer are compared with cur tbl start . If cur tbl start is greater than clus start and less than or equal to clus end Operation is performed. Otherwise Operation is performed.

In Operation an instance variable buf idx for storing a buffer index to determine a record position in the FATT buffer that is greater than a file start is set to 0 clear and a cluster number to be recorded in a corresponding buf idx is stored in an instance variable clus idx s that is a temporary counter. A 1 is added to clus idx s until clus idx s is greater than clus end Operation . When clus idx s is greater than clus end Operation 0x0FFFFFFF indicating the last of a cluster chain is put into clus idx s Operation . Next clus idx s is recorded at the position buf idx of the FATT buffer and the value of buf idx is increased by 1 Operation . The process of setting clus idx s and recording clus idx s at the position buf idx of the FATT buffer is continuously repeated until buf idx is greater than 512. In other words if buf idx is less than 512 after Operation the process returns to Operation . Otherwise the process goes to Operation .

Since in Operation cur tbl start is a start cluster number of a FAT corresponding to a requested fat offset if clus start is equal to or greater than cur tbl start and less than cur tbl start sector size 512 the process goes to Operation . In Operation clus start cur tbl start 4 is substituted in buf idx to set the start position to record in the FATT buffer and clust start is substituted in clus idx s to set the start value to record in buf idx and then the process goes to Operation .

The above description relates to a FAT file system recognition and operation process and the conversion from the CDFS UDF format to the FAT format is performed in real time by the conversion unit at the request of the host device.

Referring to the power of the ODD is turned on while an optical disc device is connected to the host device Operation . In response subclass 02h of a USB interface descriptor is changed to subclass 06h that the host device recognizes Operation . After the change of subclass the ODD is changed to a device type having a command set that the host device recognizes. For example a device type 05h corresponding to a multi media logical unit is changed to 00h corresponding to a direct access block device e.g. magnetic disk using an SBC command set Operation refer to Table 2 and the above description .

Whether an optical disc exists on a disc tray is checked Operation . When an optical disc exists the process goes to a next filed system checking operation. Otherwise the process ends. After searching the files on the optical disc the above described file system converter stores a start position an end position and a file type of a corresponding file in the FATB buffer.

In the first file system checking operation whether an optical disc is a FAT format disc is determined Operation . For example a DVD RAM may be formatted with a UDF or FAT file system. If the DVD RAM is formatted with the FAT format the process ends because the host device supports the FAT format Operation . If the DVD RAM is formatted with a format other than the FAT format whether the optical disc is in a CDFS format is determined Operation . If the optical disc is a CDFS format disc the file system of the ODD is changed from the CDFS format to the FAT format to be recognized by the host device Operation . If the optical disc is not a CDFS format disc it is determined in a next Operation whether the optical disc is a UDF format disc. If the optical disc is a UDF format disc the UDF file system is changed to the FAT file system to be recognized by the host device Operation .

After the above process the host device may take FAT file system information such as a directory entry FAT etc. from the ODD and thus contents may be uploaded from the ODD and then reproduced.

The ODD with a CDFS UDF format may be connected to the host device for use by the above described method. However copy protected contents such as a DVD title should pass an authentication process to be used. However as described above a host device that does not have an ODD device drive is not able to perform the authentication process. According to various aspects there is provided an authentication method that enables an authentication process even when the host device which is an electronic device such as a smart TV a tablet PC a digital photo frame and a smart phone has no ODD and a device using the authentication method.

According to various aspects the host device and the ODD are recognized using an SBC command set for example a magnetic disk drive using an MMC command set. The authentication process is performed on copy protected contents using the FAT file system.

According to the authentication process a direct authentication process using by an ATAPI command set as in the conventional method may be impossible. To overcome this problem information may be transferred from the host device to the ODD using the SBC command set that is the FAT file system. The ODD may obtain an authentication related return value based on the information from the host device using an internal ATAPI command set and return the obtained value using the FAT file system. The FAT file system used in the authentication process may be stored in an area in an internal memory of the ODD which is referred to as the authentication area. For example the authentication area may exist in a form of a virtual file to be accessed by the FAT file system.

According to various aspects authentication related query data from the host device is stored in the authentication area or virtual file hereinafter referred to as the virtual file using the FAT file system. The ODD parses or interprets the authentication related query stored in the virtual file and reconfigures an ATAPI command corresponding to the authentication related query and executes the reconfigured ATAPI command. A return value obtained from the execution of the ATAPI command is stored in the virtual file in the internal memory. The host device reads the return value from the virtual file. Accordingly a plurality of steps of challenges and reports for authentication of a DVD tile may be performed through the above processes.

As it is well known in disc authentication for a content scrambling system CSS the steps of challenges and reports are performed through the ATAPI SCSI commands based on a DVD encryption standard and a bus key is obtained an example of which is illustrated in . A sequence begins as authentication grant ID AGID for CSS is requested when the ODD is initialized. In the repeated steps of challenges and reports during the sequence the host device and the ODD perform mutual information exchange through writing and reading information with respect to the authentication area on the internal memory of the ODD . When authentication succeeds a bus key may be obtained.

According to various aspects herein corresponding data may be recorded in an authentication area in the process of exchanging a send key and a report key exchanged between the host device and the ODD . Then a receiving side may read the recorded data and perform an operation for authentication.

The system of includes a host device and a mobile terminal that is used as a reproduction apparatus. The mobile terminal may be connected to an ODD via a wired or wireless interface such as USB or WiFi to enable mutual information exchange. The host recognizes the ODD as a magnetic disk drive such as a hard disk drive HDD that may be directly accessed by using the above described algorithm. The exchange of information is performed by recording information in the authentication area using a FAT system. Thus the authentication area for read and write of information in the FAT system may exist as a virtual file in the memory.

Referring to the mobile terminal includes a DVD reproduction unit for example a DVD player app in the form of an application a file application programming interface API for a mobile terminal a file system driver and an interface device driver such as a USB device drive . The ODD additionally includes a virtual file stored in an authentication area or a buffer memory area included in a memory such as DRAM. The ODD also includes an authentication area manager that issues an ATAPI SCSI command for driving the ODD by parsing the data recorded in the virtual file and storing a report value in the virtual file as a result of a command execution.

An example of the authentication method is further described herein. illustrates an example of a method of generating a virtual file on the ODD. Referring to after the ODD is driven Operation whether a medium exists is detected Operation . If the detected medium is in a UDF format the UDF format is converted to the FAT file system by the above described method Operation . If the medium includes copy protected contents and thus an authentication process is to be performed Operation an authentication area that is a virtual file is generated in the memory of the ODD Operation and the preparing step for a subsequent authentication process is performed .

After the virtual file is generated by the ODD the DVD reproduction unit of the host for example a mobile terminal performs the authentication process. For example an ATAPI command process flow using the API of may be used in the authentication process.

Referring to the mobile terminal performs authentication through the file API of a corresponding OS platform through the write and read process of data with respect to a virtual file. First SEND KEY calls a file write function of the file API and the interface driver transfers data to a corresponding address of the virtual file or the authentication area of the ODD using the ATAPI command Operation . The transferred data includes an ATAPI command packet and parameter data. The virtual file manager parses data of the virtual file converts the parsed data to the ATAPI command and executes a command routine according thereto Operation .

Then a command routine execution result value REPORT KEY is stored in the virtual file and one step of processing a command is completed Operation . The DVD reproduction unit of the mobile terminal calls a file read function to check a result of the ATAPI command execution and reads the data stored in the virtual file Operation . The file write and read operations correspond to an operation of processing one ATAPI command. Thus in the steps of a CSS authentication process the above write and read operations may be repeated several times. Accordingly an authentication process of a content protected medium may be successfully performed and thus copy protected contents may be reproduced.

A file device driver issues a write command to the virtual file using the file API Operation . If the virtual file is invalid Operation that is a particular address is ineffective or does not exist in a memory area of the ODD the process returns an error Operation . If the virtual file is valid the process goes to the next parsing process. The virtual file manager analyzes data in the authentication area Operation . If the data is an ATAPI command Operation the process goes to the next ATAPI command routine Operation . Otherwise the process returns an error Operation . In the ATAPI command routine the command parsed from the data is executed and a result value is stored in the virtual file Operation thereby allowing a one time write process to be completed Operation 

The device and method according to various aspects may be used when a connection to an ODD is not allowed or when the connection is allowed an intrinsic file system of the ODD is not recognized. For example when the ODD is not compatible with a particular host device for example device information compatible with the host device and a function and operation of converting to a FAT system are provided to the ODD thereby increasing a range of use. Also according to various aspects a device that does not have a driver for directly driving an ODD for example a smart TV a smartphone a digital photo frame and the like may reproduce copy protected contents.

Program instructions to perform a method described herein or one or more operations thereof may be recorded stored or fixed in one or more computer readable storage media. The program instructions may be implemented by a computer. For example the computer may cause a processor to execute the program instructions. The media may include alone or in combination with the program instructions data files data structures and the like. Examples of computer readable storage media include magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROM disks and DVDs magneto optical media such as optical disks and hardware devices that are specially configured to store and perform program instructions such as read only memory ROM random access memory RAM flash memory and the like. Examples of program instructions include machine code such as produced by a compiler and files containing higher level code that may be executed by the computer using an interpreter. The program instructions that is software may be distributed over network coupled computer systems so that the software is stored and executed in a distributed fashion. For example the software and data may be stored by one or more computer readable storage mediums. Also functional programs codes and code segments for accomplishing the example embodiments disclosed herein can be easily construed by programmers skilled in the art to which the embodiments pertain based on and using the flow diagrams and block diagrams of the figures and their corresponding descriptions as provided herein. Also the described unit to perform an operation or a method may be hardware software or some combination of hardware and software. For example the unit may be a software package running on a computer or the computer on which that software is running.

A number of examples have been described above. Nevertheless it will be understood that various modifications may be made. For example suitable results may be achieved if the described techniques are performed in a different order and or if components in a described system architecture device or circuit are combined in a different manner and or replaced or supplemented by other components or their equivalents. Accordingly other implementations are within the scope of the following claims.

