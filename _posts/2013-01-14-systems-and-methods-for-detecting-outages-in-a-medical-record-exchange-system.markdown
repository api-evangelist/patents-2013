---

title: Systems and methods for detecting outages in a medical record exchange system
abstract: Systems and methods for detecting an issue with a message flow between two or more data systems. In an embodiment, at a first time, a number of first request messages and a number of first response messages transmitted or received during a first look-back period are determined. A first ratio is calculated based on these numbers and compared to an alerting threshold. If the first ratio is less than the alerting threshold, an alert is generated. Then, at a second time, a number of second request messages and a number of second response messages transmitted or received during a second look-back period are determined. A second ratio is calculated based on these numbers and compared to a clearing threshold. Based on this comparison, it is determined whether to maintain or clear the alert.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09047183&OS=09047183&RS=09047183
owner: DEPARTMENT OF VETERANS AFFAIRS
number: 09047183
owner_city: Washington
owner_country: US
publication_date: 20130114
---
The invention is generally directed to detecting outages between two or more communicating systems and more particularly to detecting outages within a medical record exchange system using flow analysis.

In some data systems there is a need to exchange information with a separate distinct data system over one or more communication channels. These data systems may be managed by two or more independent entities and the exchange of information may comprise the communication of information between separate repositories maintained by these independent entities.

For example the Clinical Health Data Repository CHDR of the Department of Veteran Affairs VA must frequently exchange information with a CHDR system of the Department of Defense DoD . At its core the CHDR of the VA is a medical record exchange system that maintains synchronization of a certain set of patients medical records i.e. records marked as Active Dual Consumer ADC . These records are synchronized between the DoD s Clinical Data Repository CDR system and the VA s Health Data Repository HDR through interactions with and between the agencies separate CHDR systems. Once a patient is marked as ADC the patient s medical records are synchronized between the two agencies. Consequently whenever the patient s medical records are updated in the repository of one agency the medical records must also be updated in the repository of the other agency.

Seven message types are utilized for the exchange of information between the two distinct CHDR systems of the VA and DoD. The messages termed Z messages allow for the marking of a patient as ADC and provide for the exchange of clinical data related to ADC marked patients. Specifically Z01 and Z02 messages provide for the marking of a patient for clinical data sharing Z05 Z06 and Z07 messages provide for a batch exchange of marked patients past medical data and Z03 and Z04 messages provide for the continual exchange of current medical data going forward. Each of these messages is exchanged in the form of an eXtensible Markup Language XML Health Level 7 HL7 message which is the standard message format for medical record data. Each Z message may be described as follows 

Z01 message The ADC process for each patient is initiated within either agency e.g. VA and or DoD or more specifically the CHDR system of either agency via transmission of a Z01 message to the other CHDR system. This message comprises a payload which includes a patient s traits information such as name date of birth Social Security number and the like. This traits information can be used by the receiving system to verify the existence of the patient in its respective medical data system. For example the receiving system may utilize at least a portion of the traits information to generate a query for a respective data repository e.g. one or more databases . If the patient exists within the data repository an indication of the patient s existence and status or non existence is returned in response to the query in the form of a Z02 message.

Z02 message This message is transmitted in response to a Z01 message received by either CHDR system. Based on the query results using the traits information passed in the corresponding Z01 message the ADC status of the patient is determined. If a patient was identified by the query the patient may be marked as ADC active. The Z02 response is then returned to the initiating CHDR system i.e. the system which transmitted the Z01 message to notify the initiating CHDR system that information exchange and synchronization may commence for this patient. However if an ADC match is not found a Z02 response is returned notifying the initiating CHDR system of a no match condition.

Z03 message This message may be transmitted from one CHDR system to the other CHDR system to initiate an update of an ADC patient s medical record at the other system. As ADC patients receive care at either agency s medical facilities their clinical data is updated within the treating agency s repository. These updates are sent from the treating agency s repository or CHDR to the other agency s CHDR. For example the payload of the Z03 message may comprise patient information e.g. to facilitate identification of the patient within the receiving system s repository as well as the updates to the patient information such as pharmacy data allergy data laboratory data and the like. Thus the Z03 message represents a clinical update with data being exchanged between the agencies CHDR systems.

Z04 message This message is transmitted in response to a Z03 clinical update message and verifies receipt and processing of the Z03 message by the system which received the Z03 message.

Z05 message This message may be transmitted from one CHDR system to the other CHDR system to initiate a one time batch exchange of clinical data. The initiating system sends the Z05 message to the other system to request a patient s medical data. The message payload may comprise a synchronization flag indicating that the receiving system should send a corresponding Z05 message to the initiating system in order to complete the batch exchange of data for the patient. Upon receiving the Z05 message the receiving system may verify the existence of the ADC patient e.g. by querying a respective data repository in order to package the patient s clinical data in a Z06 response message described below.

Z06 message This message is transmitted in response to a Z05 message received by either CHDR system. The message payload may comprise all or a portion of the patient s clinical data contained in a data repository of the transmitting system. Due to the potential amount of clinical data for a patient the size of a message comprising all such data may be too large according to some policy implementation or limitation of the system or a network between the two systems. Thus in such a case multiple Z06 messages may be sent in response to a single Z05 batch exchange request in order to transmit the patient s full medical record.

Z07 message This message may be transmitted by a system which previously transmitted a Z05 message once all Z06 messages have been received and processed by the system. Accordingly the Z07 message indicates that the complete medical record of an ADC patient has been received and completes a batch exchange of clinical data for the patient.

Historically information technology centers have hunted for outages by checking for down servers hung processes or network traffic. While these techniques are capable of detecting some issues they are incapable of detecting outages in message flow for example during exchange of the Z messages described above or during exchange of other types of response request messages. For example if a first system is initiating requests for data to a remote separately operated second system and the second system is not returning responses there are no standard information technology techniques available to the first system to determine the issue at the second system.

Accordingly systems and methods are disclosed for a system health alert monitoring utility which automates the detection of potential outages for two or more distinct systems and generates reports that enable analysis of traffic flow between the systems. These reports may take the form of e mail based and or web based alerts as well as real time graphical charts and other displays. Advantageously the disclosed systems and methods automate the monitoring of overall system health provide a real time view into electronic messages as they are exchanged and passed through the system and assist in outage detection verification of the termination of outages verification that upgrades have been successfully installed and the like.

In an embodiment a method for detecting an issue with a message flow between two or more data systems is disclosed. The method comprises by at least one hardware processor of a first data system at a first time determining a number of first request messages transmitted during a first look back period determining a number of first response messages received during the first look back period calculating a first ratio of the number of first response messages to the number of first request messages comparing the first ratio to an alerting threshold and generating a first alert based on the comparison of the first ratio to the alerting threshold and at a second time after the first time and after the alert has been generated determining a number of second request messages transmitted during a second look back period determining a number of second response messages received during the second look back period calculating a second ratio of the number of second response messages to the number of second request messages comparing the second ratio to a clearing threshold and determining whether to maintain or clear the alert based on the comparison of the second ratio to the clearing threshold.

In an additional embodiment a system for detecting an issue with a message flow between two or more data systems is disclosed. The system comprises at least one hardware processor and at least one executable software module that when executed by the at least one hardware processor at a first time determines a number of first request messages transmitted during a first look back period determines a number of first response messages received during the first look back period calculates a first ratio of the number of first response messages to the number of first request messages compares the first ratio to an alerting threshold and generates a first alert based on the comparison of the first ratio to the alerting threshold and at a second time after the first time and after the alert has been generated determines a number of second request messages transmitted during a second look back period determines a number of second response messages received during the second look back period calculates a second ratio of the number of second response messages to the number of second request messages compares the second ratio to a clearing threshold and determines whether to maintain or clear the alert based on the comparison of the second ratio to the clearing threshold.

In an embodiment systems and methods are disclosed for detecting outages within an information exchange system using flow analysis. While embodiments will primarily be described herein in the context of communications between the two clinical health data repositories discussed above it should be understood that these and other embodiments are not limited to any single context. Rather the embodiments described herein may be easily extended for any system which exchanges information with a separate distinct system. For example systems and processes described in the context of Z01 Z02 and or Z03 Z04 message exchanges may be generalized for any pair of request and response messages. The names of the various Z messages are merely being retained throughout the disclosure for the purposes of clarity and simplified understanding. Furthermore while the embodiments described herein are primarily discussed in the context of two systems it should be understood that the disclosed systems and methods may be generalized for message flows between three or more systems.

In addition data systems and are communicatively connected to each other via one or more network s . Network s may comprise the Internet and data systems and may communicate with each other through the Internet using standard transmission protocols such as HyperText Transfer Protocol HTTP Secure HTTP HTTPS File Transfer Protocol FTP and the like. In an embodiment one or more server s of data systems and or may not be dedicated servers and may instead be cloud instances which utilize shared resources of one or more servers. While only two data systems and are illustrated it should be understood that the network may comprise any number of data systems including a Data System C Data System D and so on.

Data systems and or may comprise web servers which host one or more internally accessible e.g. accessible via an intranet and or externally accessible e.g. accessible via the Internet websites or web services. In embodiments in which a website is provided the website may comprise one or more user interfaces including for example web pages generated in HyperText Markup Language HTML or other language. The data system s may transmit or serve these user interfaces in response to requests from user systems not shown . In some embodiments these user interfaces may be served in the form of a wizard in which case two or more user interfaces may be served in a sequential manner and one or more of the sequential user interfaces may depend on an interaction of the user or user system with one or more preceding user interfaces. The requests to the data system s and the responses from the data system s including the user interfaces may both be communicated through network s which may include the Internet using standard communication protocols e.g. HTTP HTTPS and or through one or more intranets not shown . These user interfaces or web pages may comprise a combination of content and elements such as text images videos animations charts references e.g. hyperlinks frames inputs e.g. textboxes text areas checkboxes radio buttons drop down menus buttons forms etc. scripts e.g. JavaScript and the like. The data system s may also respond to other requests from user systems. For example a user system may submit data e.g. user data form data etc. to be stored in one or more databases locally and or remotely accessible to the data system s such as repositories and or . Any suitable database may be utilized including without limitation MySQL Oracle IBM Microsoft SQL Sybase Access and the like including cloud based database instances. Data may be sent to the data system s for instance using the well known POST request supported by HTTP. This data as well as other requests may be handled for example by server side web technology such as a servlet executed by the data system s 

In embodiments in which a web service is provided Data System A and or Data System B may receive requests from another data system or user system s and provide responses in XML and or any other suitable or desired format. In such embodiments the data system s may provide an application programming interface API which defines the manner in which other systems may interact with the web service. Thus the other systems which may themselves comprise one or more servers can define their own user interfaces and rely on the web service to implement one or more backend processes functionality data exchanges etc. described herein.

One embodiment of a system that can generate an alert for an outage or other issue will now be described. In a situation where medical records or other types of data are automatically synchronized between two systems the systems generally must exchange a plurality of messages. For example in the two CHDR system described above the DoD CHDR will transmit a plurality of Z01 messages to the VA CHDR. If the DoD CHDR sends too few messages this may indicate an outage and an alert should be generated. Conversely if the DoD CHDR sends too many messages this may indicate a different issue and an alert should be generated. However neither of these issues can be reliably detected via conventional network checks since other clinical traffic may be on the network. Nor can these issues be detected by a baby sitting process at the VA CHDR since the DoD CHDR is responsible for its own ADC automation processes. Accordingly in an embodiment an alert may be configured as a software or hardware module job that executes upon a user defined schedule. For example the job may run every ten minutes or other time interval to check for outages. Additionally or alternatively the job may be executed in response to a user interaction within a user interface to the CHDR monitoring subsystem.

The job may be at least partially defined by a configuration file which defines a value for one or more environment variables or other parameters. These parameter values may be user definable through one or more user interfaces with or without default values and or may be system defined. For example in some embodiments the system may automatically define the parameter values based on statistical analysis of historical message flow metrics. The statistical analysis may be performed using any number of conventional methods or algorithms. In alternative embodiments the parameter values may be set by a user e.g. business analyst based on the user s statistical analysis of historical message flows or using some other method of determining appropriate parameter values. Table 1 illustrates some example parameters with example values 

In this illustrative non limiting example the job is configured to alert if after the time period specified by the look back parameter i.e. sixty minutes and examining all message traffic for that period e.g. all Z01 message traffic from the DoD CHDR within the last sixty minutes the number of messages received is below the value specified by the low water mark parameter i.e. two . For example if the number of messages e.g. Z01 messages over the last sixty minutes was less than two the job will generate an alert.

This generated alert will not clear until the job detects a look back period during which a number of messages received exceeds the value specified by the low water mark clearing count i.e. twenty five . For example the job will look back during a subsequent sixty minute period and examine all message traffic for that period. If the number of messages e.g. Z01 messages over that sixty minute period exceeds twenty five the job will clear the alert. Otherwise if the number of messages is less than or equal to twenty five the alert will be regenerated or maintained.

The illustrated job is also configured to alert if after the time period specified by the look back parameter i.e. sixty minutes and examining all message traffic for that period e.g. all Z01 message traffic from the DoD CHDR within the last sixty minutes the number of messages received is above the value specified by the high water mark parameter i.e. two hundred thirty five . For example if the number of messages e.g. Z01 messages over the last sixty minutes was greater than two hundred thirty five the job will generate an alert.

This generated alert will not clear until the job detects a look back period during which a number of messages received is less than the value specified by the high water mark clearing count i.e. two hundred . For example the job will look back during a subsequent sixty minute period and examine all message traffic for that period. If the number of messages e.g. Z01 messages over that sixty minute period is less than two hundred the job will clear the alert. Otherwise if the number of messages is greater than or equal to two hundred the alert will be regenerated or maintained.

Clearing parameters such as the low water mark clearing count and high water mark clearing count parameters provide stability in the alarming system. For example in the absence of the low water mark clearing count parameter if the number of messages received during consecutive look back periods hovers between one and two the system may switch between an alarm condition and a clearing condition with each job run. The use of clearing parameters mitigates this ping pong effect.

It should be understood that the values for the various parameters described in this embodiment and other embodiments e.g. embodiment described below may represent inclusive values relative to an alert condition rather than inclusive values relative to the non alert condition. In other words as an example the alert may be triggered when the number of messages is less than or equal to the low water mark value rather than just when the number of messages is less than the low water mark value. Similarly the alert may be triggered when the number of messages is greater than or equal to the high water mark value rather than just when the number of messages is greater than the high water mark value. It should also be understood that the job described in this embodiment may be utilized for any type of message such as any of the Z messages described above or any other message type which a system expects to receive.

In an embodiment as messages are received e.g. by a CHDR an indication of the message may be stored in a log file or a relational database management system RDBMS and is associated with a timestamp. Alternatively a counter may be maintained which is incremented each time a message is received. Separate counters may be maintained for different types of messages. When a job executes e.g. according to a predetermined schedule or in response to a user interaction it may review the logs to count the number of messages for a particular message type received during the look back period or it may retrieve the value of the counter and reset the counter for the next job execution. Alternatively the job could be a continuously executing thread or other continuously executing module which itself counts the number of messages received for each message type.

In an embodiment the state of the message traffic may be shared between job executions. For example the state from one job execution may be passed to the next job execution. The potential states may comprise normal above high water mark below low water mark between low water mark and low water mark clearing count and or between high water mark clearing count and high water mark. This enables the subsequent job to determine whether or not it should clear any previously generated alarms.

In an embodiment the alert comprises updating a status associated with the system and or the message type s being monitored. For example in the event that an alert is generated or present a status of the system or message type s may be set to RED and when the alert is cleared or not present the status of the system or message type s may be set to GREEN. In addition generation of the alert and or maintenance of the alert from one execution of the job to another execution of the job may generate the transmission of a notification e.g. e mail Short Message Service SMS message etc. or other message to one or more personnel or interfaces of an internal or external system responsible for managing such alerts. In an embodiment the result of each job execution may be transmitted to one or more personnel or interfaces regardless of whether an alert is present.

In step the state of the last job execution is retrieved. If the last job execution determined that the number of messages received during the former look back period was below the low water mark i.e. an alert was generated for the preceding look back period the number of messages of the current look back period is compared to the low water mark clearing count in step . If the number of messages exceeds the low water mark clearing count the job clears the alert in step . Otherwise an alert is generated or maintained in step .

In step the state of the last job execution is retrieved. If the last job execution determined that the number of messages received during the former look back period was above the high water mark i.e. an alert was generated for the preceding look back period the number of messages of the current look back period is compared to the high water mark clearing count in step . Otherwise no alert is generated as illustrated by step . In step if the number of messages is less than the high water mark clearing count the job clears the alert in step . Otherwise an alert is generated or maintained in step .

It should be understood that steps and are not limited to the particular order illustrated in and may be performed in any order. Furthermore steps and may be performed in any order. Similarly steps and may also be performed in any order. Other combinations of steps and orders of steps are also possible.

A second embodiment of a system that can generate an alert for an outage or other issue using message flow analysis will now be described in the context of the Z03 and Z04 messages described above. In this embodiment an alert makes use of a handshake paradigm to set expectations for message flow. If these expectations are not met then an alert is generated.

For ease of illustration the system will be described in the context of Data System A e.g. the VA s CHDR initiating a handshake with Data System B e.g. the DoD s CHDR with Data System A performing the issue detection process. However it should be understood that the disclosed embodiment can be identically applied to Data System B initiating a handshake with Data System A with Data System B performing the issue detection process. The disclosed embodiment can also be identically applied to Data System B initiating a handshake with Data System A with Data System A performing the issue detection process and to Data System A initiating a handshake with Data System B with Data System B performing the issue detection process. In each case the handshake comprises a request message and a response message. For purposes of simplified illustration embodiments will be described herein in the context of the Z messages discussed above. Specifically the Z03 message is the request message the Z04 is the response message and the combination of the Z03 message and the Z04 message comprises a handshake. It should be understood that the embodiments described herein may be equally applied to other request response message pairs including Z01 Z02 message pairs Z05 Z06 message pairs Z06 Z07 message pairs and other request response message pairs known in the art or used in the future.

The issue detection process may take the form of a software module job executing on one of the data systems. In the described case it is assumed that the job is being executed by Data System A . This job may be executed continuously e.g. as a thread may be executed periodically on a user defined or system defined schedule and or may be executed manually in response to a user interaction with a user interface of Data System A . As discussed above the job may be at least partially defined by a configuration file which defines a value for one or more environment variables or other parameters. Table 2 illustrates some example parameters with example values 

As before the look back parameter defines the amount of time through which the job should look back to collect message metrics such as the number of messages received and or transmitted. In this example the job will look back over the preceding ten minutes and determine the number of Z03 messages transmitted by the system and the number of Z04 messages received by the system during that preceding ten minutes.

In an embodiment the objective is to pick a look back parameter value that represents a sufficient amount of time to gather a statistically significant amount of messages for analysis. For instance a Poisson distribution may be assumed. The Poisson distribution is a discrete probability distribution that expresses the probability of a given number of events occurring in a fixed interval of time and or space if these events occur with a known average rate and independently of the time since the last event. The Poisson distribution can be used to illustrate how a larger look back period makes false alerts less likely. For example suppose ten Z03 messages per minute are expected. In ten minutes one hundred Z03 messages would be expected. Since each of these messages expects at least one response i.e. Z04 message in near real time a false alert can happen if the majority of Z04 messages are received at the end of the sampling interval. Thus increasing the look back period decreases the number of false alerts. However increasing the look back period also increases how long it takes for the system to detect an outage or other issue. One goal may be to select a look back parameter value that appropriately balances these countervailing interests.

Continuing with the example in Table 2 the low water mark parameter is one. Thus if the job detects that zero i.e. less than one Z03 messages have been transmitted by Data System A during the look back period defined in the look back parameter a no traffic alert can be generated. In an embodiment if the low water mark parameter is set to a value of zero then the no traffic alert is effectively disabled. In other words no alert would be generated solely because a job detects that no Z03 messages have been transmitted by Data System A during the look back period. However the job may still generate an alert due to other conditions being satisfied as discussed below or another independently executing job may be configured to generate a no traffic alert or similar alert.

The percentage parameter defines the ratio as a percentage that must be met to prevent an alarm condition from occurring. For example in this case the percentage parameter is defined as ten percent. Thus in the context of Z03 and Z04 messages if one hundred Z03 messages i.e. request messages were transmitted during the look back period eleven or more Z04 messages i.e. response messages must be received during the same look back period to avoid the occurrence of an alarm condition. In other words the ratio of Z04 messages received to Z03 messages transmitted must be greater than ten percent otherwise an alert will be generated.

The clearing percentage parameter defines the ratio as a percentage that must be met to clear an alarm e.g. set by a previous job execution over a prior look back period . For example in this case the clearing percentage parameter is defined as twenty percent. Thus in the context of Z03 and Z04 messages if the last job execution resulted in an alarm and if one hundred Z03 messages i.e. request messages were transmitted during the look back period twenty one or more Z04 messages i.e. response messages must be received during the same look back period to clear the prior alarm condition. In other words the ratio of Z04 messages received to Z03 messages transmitted must be greater than twenty percent otherwise a previously set alert will be regenerated or maintained.

The message minimum parameter defines the minimum number of messages that must be detected during the look back period to trigger the alarming conditions. In other words the message minimum parameter can be used to restrict when the percentage parameter is checked. For example in this case the message minimum parameter value is forty. Thus if the number of Z03 messages transmitted by Data System A during the look back period is less than forty the job does not compare the ratio of Z04 messages to Z03 messages. For example if thirty Z03 messages were transmitted and two Z04 messages were received no alert would be generated by the job although the job may maintain a previous alert even though the ratio of Z04 messages to Z03 messages is less than ten percent since fewer than forty Z03 messages i.e. the value of the message minimum parameter were transmitted. In this case the prior status may be maintained. That is if the prior status was an alert status then the status remains an alert status and if the prior status was a non alert status then the status remains a non alert status.

In an embodiment the message minimum parameter value may represent a statistically significant number of messages relative to the applicable look back period. In other words if the number of messages is less than the message minimum parameter value the number is not statistically adequate relative to the look back period to motivate an alert condition based on the applicable ratios e.g. percentage parameter value . For example in the present example if thirty Z03 request messages were transmitted during the look back period the number of Z04 response messages received during the look back period is irrelevant since a statistically significant number of Z03 request messages was not transmitted during the look back period.

The minimum statistically significant number of messages may be determined using conventional statistical analysis methods or algorithms and may be computed automatically by Data System A or manually by a business analyst. In either case the minimum may be calculated based on historical message flow metrics. Generally the message minimum parameter value should be greater than zero and as large as possible to avoid false alerts caused by violations of the request response message ratio. In addition generally as the look back period increases the message minimum parameter value should also increase.

In an embodiment the requirement for a statistically significant number of messages as defined by the message minimum parameter may be ignored in the case of clearing an alert. This may be a user defined or system setting e.g. defined by a Boolean or other binary data type and may be modifiable. In the case that the message minimum parameter is to be ignored in the case of clearing an alert an alert can be cleared if the ratio of Z04 messages received to Z03 messages transmitted exceeds the clearing percentage parameter value regardless of the number of Z03 messages received i.e. even if less than the number of Z03 messages defined by the message minimum parameter were transmitted during the applicable look back period . Using the present example if the last job execution resulted in an alert condition and the current job execution determines that thirty Z03 messages were transmitted in the current look back period and that fifteen Z04 messages were received in the current look back period i.e. a ratio of fifty percent the alert would be cleared. This is the case even though the thirty Z03 messages may not be a statistically significant number of messages for the purposes of determining an alert condition.

In an embodiment the configuration file may also comprise a direction parameter which defines the direction of the message flow or handshakes being monitored. For example this parameter may be a Boolean or other binary data type. If the parameter value is set to one value e.g. true or one the job monitors Z03 messages transmitted by Data System A to Data System B and or Z04 messages received by Data System A from Data System B . On the other hand if the parameter value is set to the other value e.g. false or zero the job monitors Z03 messages received by Data System A from Data System B and or Z04 messages transmitted by Data System A to Data System B .

In step the number of Z03 messages N1 is compared to the low water mark e.g. low water mark parameter . If N1 exceeds the low water mark an alert is generated in step . Otherwise in step the number of Z03 messages N1 is compared to a minimum or threshold number of messages e.g. message minimum parameter required to trigger a ratio based alert. As discussed above this threshold may represent a number which permits a statistically significant comparison with a ratio value.

If N1 is not less than the minimum threshold then in step the ratio of Z04 messages to Z03 messages i.e. N2 divided by N1 is compared to a ratio threshold e.g. percentage parameter . This ratio threshold may be in the form of a decimal number or an integer e.g. an integer percentage . It should be understood that the ratio of N2 to N1 may be in or converted to the same form as the ratio threshold. Thus if the ratio threshold is a percentage N2 may be divided by N1 and then multiplied by one hundred to convert the value to a percentage for comparison with the ratio threshold.

If in step the ratio of N2 to N1 is less than the ratio threshold an alert is generated in . However if the ratio of N2 to N1 is greater than or equal to the ratio threshold or if in step it is determined that N1 is less than the minimum threshold then the state or result of the last execution of the job is retrieved in step . If the last job execution determined that the ratio of Z04 messages to Z03 messages during the former look back period was below the ratio threshold i.e. an alert was generated for the preceding look back period the ratio of Z04 messages to Z03 messages i.e. N2 N1 during the current look back period is compared to the clearing threshold e.g. clear percentage parameter in step . Otherwise no alert is generated as shown in step .

If in step it is determined that the ratio of N2 to N1 is greater than the clearing threshold the job clears the alert in step . Otherwise an alert is generated or maintained in step .

It should be understood that steps are not limited to the particular order illustrated in and may be performed in any order. Furthermore steps and may be performed in any order. Similarly steps and may also be performed in any order. Other combinations of steps and orders of steps are also possible. In addition the process illustrated in is implemented so as to ignore the minimum message requirement e.g. defined by the message minimum parameter for purposes of clearing an alert. It should be understood that in an alternative embodiment the process may be slightly modified to require a minimum number of messages prior to clearing an alert.

It should be understood that other types of ratios may be used with little to no deviation from the above described implementation. For instance in an embodiment instead of determining the ratio of Z04 messages to Z03 messages the job may instead determine the ratio of duplicate Z03 messages Z04 messages or both Z03 and Z04 messages to total Z03 and or Z04 messages received. For instance if the number of Z04 messages received during a look back period exceeds a minimum e.g. one hundred and the number of duplicate Z04 messages within the total number of Z04 messages received during the look back period exceeds a certain ratio or percentage e.g. sixty percent the job may generate an alert. This alert may be maintained until the percentage of duplicate Z04 messages drops to a certain clearing threshold e.g. forty percent .

Example pseudo code will now be described to illustrate how processes described herein may be implemented in the context of the Z messages described above according to an embodiment. The pseudo code may be implemented as a software module written using any suitable programming language including without limitation C C Java Visual Basic Perl and the like. Alternatively the pseudo code may be implemented as a hardware module or as a combination of software and hardware.

direction this parameter defines the direction of the message. For example this parameter may comprise a binary data type. A first value may indicate that the process should monitor message flows e.g. handshakes initiated by the system e.g. Data System A whereas a second value may indicate that the process should monitor message flows initiated by another system e.g. Data System B . If the direction is set to the first value the module may analyze Z01 messages transmitted relative to Z02 messages received Z03 messages transmitted relative to Z04 messages received Z05 messages transmitted relative to Z06 messages received and Z06 messages transmitted relative to Z07 messages received. If the direction is set to the second value the module may instead analyze Z01 messages received relative to Z02 messages transmitted Z03 messages received relative to Z04 messages transmitted Z05 messages received relative to Z06 messages transmitted and Z06 messages received relative to Z07 messages transmitted.

z01 z02 pct this parameter defines the percentage of Z02 responses that must be received transmitted relative to Z01 requests transmitted received during the look back period in order for the message flow to remain within specification i.e. remain in a non alert state .

z03 z04 pct this parameter defines the percentage of Z04 responses that must be received transmitted relative to Z03 requests transmitted received during the look back period in order for the message flow to remain within specification.

z05 z06 pct this parameter defines the percentage of Z06 responses that must be received transmitted relative to Z05 requests transmitted received during the look back period in order for the message flow to remain within specification.

z06 z07 pct this parameter defines the percentage of Z07 responses that must be received transmitted relative to Z06 requests transmitted received during the look back period in order for the message flow to remain within specification.

z01 lwm this parameter defines the number of Z01 messages that must be transmitted received during the look back period in order for the message flow to remain within specification.

z03 lwm this parameter defines the number of Z03 messages that must be transmitted received during the look back period in order for the message flow to remain within specification.

z05 lwm this parameter defines the number of Z05 messages that must be transmitted received during the look back period in order for the message flow to remain within specification.

z06 lwm this parameter defines the number of Z06 messages that must be transmitted received during the look back period in order for the message flow to remain within specification.

z01 min this parameter defines the number of Z01 messages that must be transmitted received during the look back period in order for the module to evaluate the Z02 to Z01 ratio to determine whether the message flow remains within specification.

z03 min this parameter defines the number of Z03 messages that must be transmitted received during the look back period in order for the module to evaluate the Z04 to Z03 ratio to determine whether the message flow remains within specification.

z05 min this parameter defines the number of Z05 messages that must be transmitted received during the look back period in order for the module to evaluate the Z06 to Z05 ratio to determine whether the message flow remains within specification.

z06 min this parameter defines the number of Z06 messages that must be transmitted received during the look back period in order for the module to evaluate the Z06 to Z05 ratio to determine whether the message flow remains within specification. The z01 min z03 min z05 min and or z06 min parameter values may each represent a minimum number of messages required to allow a statistically significant ratio comparison and may be set manually by a business analyst or other user or may be determined automatically by the system using statistical analysis of historical message flow patterns.

z01 clear pct this parameter defines the percentage of Z02 responses that must be received transmitted relative to Z01 requests transmitted received during the look back period in order for a previous alert to be cleared e.g. in order to switch from a RED or alert state to a GREEN or non alert state .

z03 clear pct this parameter defines the percentage of Z04 responses that must be received transmitted relative to Z03 requests transmitted received during the look back period in order for a previous alert to be cleared.

z05 clear pct this parameter defines the percentage of Z06 responses that must be received transmitted relative to Z05 requests transmitted received during the look back period in order for a previous alert to be cleared.

z06 clear pct this parameter defines the percentage of Z07 responses that must be received transmitted relative to Z06 requests transmitted received during the look back period in order for a previous alert to be cleared.

z01 run status this variable indicates the last known status for the Z01 Z02 request response pairing i.e. the status resulting from the last prior execution of the module s evaluation of the Z01 Z02 request response pairing.

z03 run status this variable indicates the last known status for the Z03 Z04 request response pairing i.e. the status resulting from the last prior execution of the module s evaluation of the Z03 Z04 request response pairing.

z05 run status this variable indicates the last known status for the Z05 Z06 request response pairing i.e. the status resulting from the last prior execution of the module s evaluation of the Z05 Z06 request response pairing.

z06 run status this variable indicates the last known status for the Z06 Z07 request response pairing i.e. the status resulting from the last prior execution of the module s evaluation of the Z06 Z07 request response pairing.

z01 ignore min on clear this parameter indicates whether or not to permit an alert resulting from an out of specification Z02 to Z01 percentage to clear even though the minimum number of Z01 requests as defined by z01 min have not been received transmitted. This parameter may be defined using a binary data type e.g. Boolean wherein a value of true or one permits clearing of an alert regardless of whether or not the threshold defined by z01 min is met and a value of false or zero prevents clearing unless the threshold defined by z01 min is met.

z03 ignore min on clear this parameter indicates whether or not to permit an alert resulting from an out of specification Z04 to Z03 percentage to clear even though the minimum number of Z03 requests as defined by z03 min have not been received transmitted. This parameter may be defined using a binary data type e.g. Boolean wherein a value of true or one permits clearing of an alert regardless of whether or not the threshold defined by z03 min is met and a value of false or zero prevents clearing unless the threshold defined by z03 min is met.

z05 ignore min on clear this parameter indicates whether or not to permit an alert resulting from an out of specification Z06 to Z05 percentage to clear even though the minimum number of Z05 requests as defined by z05 min have not been received transmitted. This parameter may be defined using a binary data type e.g. Boolean wherein a value of true or one permits clearing of an alert regardless of whether or not the threshold defined by z05 min is met and a value of false or zero prevents clearing unless the threshold defined by z05 min is met.

z06 ignore min on clear this parameter indicates whether or not to permit an alert resulting from an out of specification Z07 to Z06 percentage to clear even though the minimum number of Z06 requests as defined by z06 min have not been received transmitted. This parameter may be defined using a binary data type e.g. Boolean wherein a value of true or one permits clearing of an alert regardless of whether or not the threshold defined by z06 min is met and a value of false or zero prevents clearing unless the threshold defined by z06 min is met.

It should be understood that where a parameter or variable defines a threshold the threshold may be inclusive of a non alert condition or inclusive of an alert condition. These parameters and variables may be passed to or defined within the module and may be manually or automatically and or dynamically configurable or modifiable. When executed the module counts receives retrieves or otherwise determines the number Z messages transmitted and or received depending on the direction defined by the direction parameter during the look back period defined by the lookback parameter. Using these determined numbers the module may determine the alert condition for each request response pairing i.e. Z01 Z02 Z03 Z04 Z05 Z06 and or Z06 Z07 based on an algorithm. An example of such an algorithm as applied to the Z01 Z02 request response pairing is described below 

 1 Determine the last known status for the Z01 Z02 request response pairing based on the value of z01 run status.

 2 If the number of Z01 messages is greater than zero calculate the response percentage of Z02 messages to Z01 messages. Otherwise if the number of Z01 messages is equal to zero set the response percentage to one hundred.

 3 If the number of Z01 messages is less than z01 lwm then set z01 run status to an alert indication e.g. RED .

 4 If the number of Z01 messages is greater than or equal to z01 min and the response percentage calculated in step 2 is less than or equal to z01 z02 pct then set z01 run status to an alert indication. In an embodiment the alert indications may comprise granularity to distinguish between alerts based on a number of messages falling below a low water mark e.g. z01 lwm and alerts based on a ratio of response messages to request messages falling below a threshold e.g. z01 z02 pct . For example the alert indication set in step 3 may be distinguished as a low water mark based alert whereas the alert indications set in this step and the following steps may be distinguished as a ratio based alert.

 5 If the number of Z01 messages is greater than or equal to z01 min and the last known status determined in step 1 was a non alert indication and the response percentage calculated in step 2 is greater than z01 z02 pct then set z01 run status to a non alert indication.

 6 If the number of Z01 messages is greater than or equal to z01 min and the response percentage calculated in step 2 is greater than z01 clear pct then set z01 run status to a non alert indication e.g. GREEN .

 7 If the number of Z01 messages is less than z01 min and z01 ignore min on clear is set to true e.g. one and the response percentage calculated in step 2 is greater than or equal to z01 clear pct then set z01 run status to a non alert indication.

 8 If the number of Z01 messages is greater than or equal to z01 min and the last known status determined in step 1 was an alert indication e.g. ratio based alert indication and the response percentage calculated in step 2 is less than z01 clear pct then set z01 run status to an alert indication.

 9 If none of the conditions in steps 3 8 are met then set z01 run status to the last known status determined in step 1 .

It should be understood that the algorithm illustrated above may be similarly applied to the Z03 Z04 Z05 Z06 and or Z06 Z07 request response pairings. In an embodiment steps 1 9 are repeated for each Z message request response pairing and an individual run status e.g. z01 run status z03 run status z05 run status and z06 run status is determined for each pairing. If all run statuses are set to a non alert indication then a run status for the entire module may be set to a non alert indication. Otherwise if any of the run statuses are set to an alert indication the run status for the entire module may be set to an alert indication triggering alert notifications based on an alert configuration.

The data systems and may provide a variety of administrative configuration and reporting functions as well as user interfaces associated with those functions. These user interfaces may comprise job logs real time charts reports and the like and can help an administrator or other user determine where a problem lies e.g. an inbound or outbound queue to a repository an interface engine an outage of or within the data system etc. In addition access to one or more of these user interfaces may be restricted using roles and or permissions which provide different levels of access to different users based on for example credentials e.g. username and password digital certificate IP address etc. submitted using a conventional authentication interface. Systems and methods for registration and authentication are well known in the art and will not be described in detail herein.

The list may also provide for modification of specific jobs and or selection of an additional user interface or interfaces for modifying a job. Modification of a job may comprise editing parameters or variables scheduling the job or specifying that the job should only be run manually setting the number of minutes that a job should wait before refreshing data setting metadata associated with a job e.g. name description etc. changing how alerts are managed and or to whom or what email addresses or other destinations alerts are sent suspending execution of a job setting limits on execution time of a job editing permissions required for executing a job and or viewing its results and the like.

In an embodiment jobs may be segregated into two or more types of jobs used to monitor overall health of a data system. For instance each job may be run as a manual service executed at any time to verify traffic flow or as an automatic service executed at predetermined and configurable times or time intervals. For example job types may include 

Alert or Trackable Jobs These jobs run regularly throughout the day e.g. every 10 minutes every 30 minutes etc. to verify that services are online and that messages are flowing between data systems e.g. between Data System A and Data System B . If not the jobs can alert e.g. using email or other communication appropriate support personnel and or an interface of another system or module.

Report or Results Jobs These jobs run at particular times collect data for message traffic flow and generate a report. The report may be viewed online and or viewed in an email or other message e.g. SMS text message .

Table 3 describes some example jobs according to one illustrative non limiting implementation that is specific to the VA system discussed above 

The system preferably includes one or more processors such as processor . Additional processors may be provided such as an auxiliary processor to manage input output an auxiliary processor to perform floating point mathematical operations a special purpose microprocessor having an architecture suitable for fast execution of signal processing algorithms e.g. digital signal processor a slave processor subordinate to the main processing system e.g. back end processor an additional microprocessor or controller for dual or multiple processor systems or a coprocessor. Such auxiliary processors may be discrete processors or may be integrated with the processor . Examples of processors which may be used with system include without limitation the Pentium processor Core i7 processor and Xeon processor all of which are available from Intel Corporation of Santa Clara Calif.

The processor is preferably connected to a communication bus . The communication bus may include a data channel for facilitating information transfer between storage and other peripheral components of the system . The communication bus further may provide a set of signals used for communication with the processor including a data bus address bus and control bus not shown . The communication bus may comprise any standard or non standard bus architecture such as for example bus architectures compliant with industry standard architecture ISA extended industry standard architecture EISA Micro Channel Architecture MCA peripheral component interconnect PCI local bus or standards promulgated by the Institute of Electrical and Electronics Engineers IEEE including IEEE 488 general purpose interface bus GPIB IEEE 696 S 100 and the like.

System preferably includes a main memory and may also include a secondary memory . The main memory provides storage of instructions and data for programs executing on the processor such as one or more of the functions and or modules discussed above. It should be understood that programs stored in the memory and executed by processor may be written and or compiled according to any suitable language s including without limitation Ruby C C Java JavaScript Perl Visual Basic .NET and the like. The main memory is typically semiconductor based memory such as dynamic random access memory DRAM and or static random access memory SRAM . Other semiconductor based memory types include for example synchronous dynamic random access memory SDRAM Rambus dynamic random access memory RDRAM ferroelectric random access memory FRAM and the like including read only memory ROM .

The secondary memory may optionally include an internal memory and or a removable medium for example a floppy disk drive a magnetic tape drive a compact disc CD drive a digital versatile disc DVD drive other optical drive a flash memory drive etc. The removable medium is read from and or written to in a well known manner. Removable storage medium may be for example a floppy disk magnetic tape CD DVD SD card etc.

The removable storage medium is a non transitory computer readable medium having stored thereon computer executable code i.e. software and or data. The computer software or data stored on the removable storage medium is read into the system for execution by the processor .

In alternative embodiments secondary memory may include other similar means for allowing computer programs or other data or instructions to be loaded into the system . Such means may include for example an external storage medium and an interface . Examples of external storage medium may include an external hard disk drive or an external optical drive or and external magneto optical drive.

Other examples of secondary memory may include semiconductor based memory such as programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable read only memory EEPROM or flash memory block oriented memory similar to EEPROM . Also included are any other removable storage media and communication interface which allow software and data to be transferred from an external medium to the system .

System may include a communication interface . The communication interface allows software and data to be transferred between system and external devices e.g. printers networks or information sources. For example computer software or executable code may be transferred to system from a network server via communication interface . Examples of communication interface include a built in network adapter network interface card NIC Personal Computer Memory Card International Association PCMCIA network card card bus network adapter wireless network adapter Universal Serial Bus USB network adapter modem a network interface card NIC a wireless data card a communications port an infrared interface an IEEE 1394 fire wire or any other device capable of interfacing system with a network or another computing device.

Communication interface preferably implements industry promulgated protocol standards such as Ethernet IEEE 802 standards Fiber Channel digital subscriber line DSL asynchronous digital subscriber line ADSL frame relay asynchronous transfer mode ATM integrated digital services network ISDN personal communications services PCS transmission control protocol Internet protocol TCP IP serial line Internet protocol point to point protocol SLIP PPP and so on but may also implement customized or non standard interface protocols as well.

Software and data transferred via communication interface are generally in the form of electrical communication signals . These signals are preferably provided to communication interface via a communication channel . In one embodiment the communication channel may be a wired or wireless network or any variety of other communication links. Communication channel carries signals and can be implemented using a variety of wired or wireless communication means including wire or cable fiber optics conventional phone line cellular phone link wireless data communication link radio frequency RF link or infrared link just to name a few.

Computer executable code i.e. computer programs or software is stored in the main memory and or the secondary memory . Computer programs can also be received via communication interface and stored in the main memory and or the secondary memory . Such computer programs when executed enable the system to perform the various functions of the present invention as previously described.

In this description the term computer readable medium is used to refer to any non transitory computer readable storage media used to provide computer executable code e.g. software and computer programs to the system . Examples of these media include main memory secondary memory including internal memory removable medium and external storage medium and any peripheral device communicatively coupled with communication interface including a network information server or other network device . These non transitory computer readable mediums are means for providing executable code programming instructions and software to the system .

In an embodiment that is implemented using software the software may be stored on a computer readable medium and loaded into the system by way of removable medium I O interface or communication interface . In such an embodiment the software is loaded into the system in the form of electrical communication signals . The software when executed by the processor preferably causes the processor to perform the inventive features and functions previously described herein.

In an embodiment I O interface provides an interface between one or more components of system and one or more input and or output devices. Example input devices include without limitation keyboards touch screens or other touch sensitive devices biometric sensing devices computer mice trackballs pen based pointing devices and the like. Examples of output devices include without limitation cathode ray tubes CRTs plasma displays light emitting diode LED displays liquid crystal displays LCDs printers vacuum florescent displays VFDs surface conduction electron emitter displays SEDs field emission displays FEDs and the like.

The system also includes optional wireless communication components that facilitate wireless communication over a voice and over a data network. The wireless communication components comprise an antenna system a radio system and a baseband system . In the system radio frequency RF signals are transmitted and received over the air by the antenna system under the management of the radio system .

In one embodiment the antenna system may comprise one or more antennae and one or more multiplexors not shown that perform a switching function to provide the antenna system with transmit and receive signal paths. In the receive path received RF signals can be coupled from a multiplexor to a low noise amplifier not shown that amplifies the received RF signal and sends the amplified signal to the radio system .

In alternative embodiments the radio system may comprise one or more radios that are configured to communicate over various frequencies. In one embodiment the radio system may combine a demodulator not shown and modulator not shown in one integrated circuit IC . The demodulator and modulator can also be separate components. In the incoming path the demodulator strips away the RF carrier signal leaving a baseband receive audio signal which is sent from the radio system to the baseband system .

If the received signal contains audio information then baseband system decodes the signal and converts it to an analog signal. Then the signal is amplified and sent to a speaker. The baseband system also receives analog audio signals from a microphone. These analog audio signals are converted to digital signals and encoded by the baseband system . The baseband system also codes the digital signals for transmission and generates a baseband transmit audio signal that is routed to the modulator portion of the radio system . The modulator mixes the baseband transmit audio signal with an RF carrier signal generating an RF transmit signal that is routed to the antenna system and may pass through a power amplifier not shown . The power amplifier amplifies the RF transmit signal and routes it to the antenna system where the signal is switched to the antenna port for transmission.

The baseband system is also communicatively coupled with the processor . The central processing unit has access to data storage areas and . The central processing unit is preferably configured to execute instructions i.e. computer programs or software that can be stored in the memory or the secondary memory . Computer programs can also be received from the baseband processor and stored in the data storage area or in secondary memory or executed upon receipt. Such computer programs when executed enable the system to perform the various functions of the present invention as previously described. For example data storage areas may include various software modules not shown .

Various embodiments may also be implemented primarily in hardware using for example components such as application specific integrated circuits ASICs or field programmable gate arrays FPGAs . Implementation of a hardware state machine capable of performing the functions described herein will also be apparent to those skilled in the relevant art. Various embodiments may also be implemented using a combination of both hardware and software.

Furthermore those of skill in the art will appreciate that the various illustrative logical blocks modules circuits and method steps described in connection with the above described figures and the embodiments disclosed herein can often be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled persons can implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the invention. In addition the grouping of functions within a module block circuit or step is for ease of description. Specific functions or steps can be moved from one module block or circuit to another without departing from the invention.

Moreover the various illustrative logical blocks modules functions and methods described in connection with the embodiments disclosed herein can be implemented or performed with a general purpose processor a digital signal processor DSP an ASIC FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor can be a microprocessor but in the alternative the processor can be any processor controller microcontroller or state machine. A processor can also be implemented as a combination of computing devices for example a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

Additionally the steps of a method or algorithm described in connection with the embodiments disclosed herein can be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module can reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium including a network storage medium. An exemplary storage medium can be coupled to the processor such the processor can read information from and write information to the storage medium. In the alternative the storage medium can be integral to the processor. The processor and the storage medium can also reside in an ASIC.

Any of the software components described herein may take a variety of forms. For example a component may be a stand alone software package or it may be a software package incorporated as a tool in a larger software product. It may be downloadable from a network for example a website as a stand alone product or as an add in package for installation in an existing software application. It may also be available as a client server software application as a web enabled software application and or as a mobile application.

The above description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the invention. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles described herein can be applied to other embodiments without departing from the spirit or scope of the invention. Thus it is to be understood that the description and drawings presented herein represent a presently preferred embodiment of the invention and are therefore representative of the subject matter which is broadly contemplated by the present invention. It is further understood that the scope of the present invention fully encompasses other embodiments that may become obvious to those skilled in the art and that the scope of the present invention is accordingly not limited.

