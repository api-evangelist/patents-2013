---

title: Methods, systems, and computer readable mediums for updating components in a converged infrastructure system
abstract: Methods, systems, and computer readable mediums for updating components in a converged infrastructure system are disclosed. According to one method, the method includes identifying components in a converged infrastructure system that require remediation in order to comply with a defined converged infrastructure configuration and determining remediation content to enable each of the identified components to be compliant with the defined converged infrastructure configuration. The method further includes retrieving the remediation content for the identified components from a repository and utilizing the remediation content to update the identified components on the converged infrastructure system in accordance with the defined converged infrastructure configuration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483281&OS=09483281&RS=09483281
owner: VCE IP Holding Company LLC
number: 09483281
owner_city: Richardson
owner_country: US
publication_date: 20131230
---
This application relates and claims priority to U.S. Provisional Patent Application Ser. No. 61 878 325 filed on Sep. 16 2013 the disclosure of which is incorporated herein by reference in its entirety.

The subject matter described herein relates to updating hardware and software system components. More specifically the subject matter relates to methods systems and computer readable mediums for updating components in a converged infrastructure system.

In the converged infrastructure system CIS industry CIS models may be validated to run very specific versions of firmware and software that have been thoroughly tested and verified to function properly. This validation process enables customers i.e. system operators to avoid spending a significant amount of time conducting their own validations to locate versions of compatible CIS component software. Notably the aforementioned validation process results in a Release Certification Matrix RCM or some other type of defined converged infrastructure configuration model for a specific CIS model.

Prior to delivery to a customer site a CIS unit is provisioned with an initial converged infrastructure configuration version. Over time new converged infrastructure configuration versions are released and the system operator may decide to migrate to the new defined converged infrastructure configuration version. To perform this migration process system operators must read documentation from the CIS manufacturer that addresses the firmware and software versions. Afterwards the system operator must locate the correct firmware and software updates and installation instructions for each of the hardware and software components in the CIS from one or more manufacturers. In addition to the considerable amount of time required to plan an RCM update the actual converged infrastructure configuration update process can span several weeks and takes a considerable amount of manual effort to implement.

Methods systems and computer readable mediums for updating components in a converged infrastructure system are disclosed. According to one method the method includes identifying components in a converged infrastructure system that require remediation in order to comply with a defined converged infrastructure configuration and determining remediation content to enable each of the identified components to be compliant with the defined converged infrastructure configuration. The method further includes retrieving the remediation content for the identified components from a repository and utilizing the remediation content to update the identified components on the converged infrastructure system in accordance with the defined converged infrastructure configuration.

The subject matter described herein discloses methods systems and computer readable mediums for updating components in a converged infrastructure system CIS . As used herein converged infrastructure systems such as Vblock Systems from VCE Company LLC can comprise multiple components or elements in a preconfigured or prepackaged computing platform. For example a CIS unit can comprise a computing platform associated with racks of physical components and related software for performing virtualization and or other functions. In some embodiments each component associated with a converged infrastructure system can comprise multiple components that include one or more computing components software components networking components storage components hardware component and or firmware components. For example a converged infrastructure system unit can comprise data storage devices servers networking equipment and software for managing physical resources and or virtualized resources e.g. virtual servers .

The disclosed subject matter facilitates a remediation feature that enables an authorized end user e.g. a system operator to determine if a CIS unit is configured in a manner that complies with a supported CIS configuration. If the CIS unit is not in a supported configuration e.g. outdated firmware BIOS software etc. the user is enabled to remediate one or more of the components within the CIS unit so that the components are compliant with a supported CIS configuration. In the event an authorized user wants to remediate a component contained in a CIS unit the user does not need to provide any additional information. For example a CIS management module can instead be configured to access each component with the CIS unit and return relevant information to the user. In addition the CIS management module may have access to binary software needed to remediate each CIS component. Specifically the disclosed subject matter allows for remediating a CIS component in an automated matter that requires little or no additional interaction by the authorized user. Reference will now be made in detail to exemplary embodiments of the subject matter described herein examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

In some embodiments each of CIS CIS CIS and CIS may be configured to provide data center functionality cloud service functionality and or other functionality. In some embodiments each of CIS CIS CIS and CIS can comprise similar components and may be located at one or more physical locations or sites. Each of CIS CIS CIS and CIS may be capable of communicating with each other and may communicate with various other entities such as network nodes and users. For example user e.g. a human operator or an automated system may use an application programming interface API or web based graphical user interface GUI to login to CIS and or a related component for conducting an converged infrastructure CI configuration update. In some embodiments user may establish communication directly to CIS without use of network .

CIS can comprise CIS manager e.g. a CIS management module a repository virtualized infrastructure and or physical infrastructure . CIS manager may be any suitable entity for managing aspects of CIS . CIS manager may be configured to communicate with various CIS components such as virtual resources physical resources and or software for managing various components. For example CIS manager may be configured to manage performance resource utilization levels and other aspects associated with virtualized infrastructure and or physical infrastructure . In some embodiments CIS manager comprises VCE Vision Intelligent Operations software and or firmware. In some embodiments CIS manager may have access to remediation content such as remediation software content that comprises binary software needed to remediate and update each CIS component in one or more of CIS CIS CIS and CIS .

Virtualized infrastructure can comprise a virtualization environment configured to simulate components of a computing device e.g. a processor system memory and a storage device for executing one or more virtual machines VMs e.g. VM VM and VM . Each of VM VM and VM may be configured to perform various functions and or services such as web server functions or cloud application services and may interact with various nodes components and or users.

In some embodiments virtualized infrastructure may be associated with one or more virtual entities. Each virtual entity can comprise one or more CIS or portions therein e.g. resources from one or more CISs. In some embodiments virtualization manager may allow logical entities to be created deleted or modified using an API and or GUI. Virtualization manager may be any suitable entity e.g. software executing in a virtual machine for managing aspects associated with virtualized infrastructure . In some embodiments virtualization manager may be configured to provide data center management through one or more communications interfaces. For example virtualization manager may communicate with one or more third party management tools using APIs.

Physical infrastructure can comprise hardware resources such as network components servers sometimes referred to as hosts and at least one storage area network SAN . Hardware resources may be communicatively connected to various other components in CIS and other entities. Hardware resources can be configured to be used by one or more virtual entities. In some embodiments network components e.g. network switches may be configured to enable communication between the components in CIS . For example server and SAN may be used in implementing VM and VM and server and SAN may be used in implementing VM and virtualization manager . In some embodiments one or more file share storage FSS systems not shown can be utilized to provide file system level access to a CIS across a local area network LAN .

Physical resource manager may be any suitable entity e.g. software executing in a virtual machine for managing aspects associated with physical infrastructure . In some embodiments physical resource manager may be configured to provision hardware resources via one or more communications interfaces. For example physical resource manager may provision hardware resources for implementing one or more virtual entities in virtualized infrastructure . In some embodiments physical resource manager may comprise any management element or entity such as a unified infrastructure manager UIM or a unified computing system UCS director entity which is configured to provision the physical hardware of a CIS.

Repository may include any data storage unit e.g. a database or plurality of databases that may be configured to store remediation software content e.g. CI configuration update content used to update CIS components. In some embodiments the remediation software content or CI configuration update content can comprise such as a firmware package a BIOS package or a software package or any other package configured to contain binary software content. Although depicts repository as a local data storage unit residing on CIS repository can also be embodied as a data storage unit located at a public distributed content site on a local proxy server in a customer s environment or on a different CIS unit without departing from the scope of the disclosed subject matter. In some embodiments repository may be provisioned with remediation software content that is sourced from a known online location e.g. hosted by creators of the software content . In some embodiments repository can be provisioned with remediation software content sourced from a second repository e.g. from a second CIS or an online location . For example the provisioning of remediation software content copied from a second repository may be conducted using any form of transportable media such as a compact disc CD universal serial bus USB device and the like. Similarly the remediation software content may be copied from an online site online repository or any other online location over a network using secure copy SCP protocol file transfer protocol FTP or any like protocol. In some embodiments CIS and a second CIS not shown may be located at a common site and can be communicatively connected by a wired connection. In such a configuration repository may be provisioned with remediation software content from the second CIS via the wired connection. It is understood that the provisioning of repository with remediation software content with the exemplary methods described above may be conducted via any automated or automatic manner. Furthermore repository may be provisioned with remediation software content prior to CIS manager determining the defined CI configuration to be applied and or the identification of CIS components identified to require remediation by the defined CI configuration. Additional description and functionality of repository is included below.

It will be appreciated that is for illustrative purposes and that various nodes their locations and or their functions as described above in relation to may be changed altered added or removed.

In some embodiments CI configuration update module may comprise an update framework module or any suitable entity e.g. software executing on a processor for implementing a CI configuration update e.g. an RCM update . For example to implement an CI configuration update within CIS or portion therein CI configuration update module may be configured to conduct authorization and authentication processes with access control module create update tasks with task manager provide task updates to task manager queue obtain update content data from repository delegate logic resources with logical update module and perform any additional actions required to conduct a CI configuration update.

In some embodiments CI configuration update module can interact with access control module . Access control module can comprise any suitable entity e.g. hardware firmware or software in combination with hardware and or firmware for configuring and or implementing access authentication and or authorization functions. Access control module can comprise or provide one or more communications interfaces for interacting with user virtualized infrastructure physical infrastructure and or other entities such as nodes in network CIS CIS and CIS as depicted in . In some embodiments access control module can be configured to perform and or can utilize user authentication. For example access control module can use central authentication service CAS or another authentication mechanism for authenticating a user. After user authentication access control module can allow the authorized user to view and or modify RBAC related settings e.g. via a GUI. In some embodiments role based access policy utilized by module can comprise one or more permissions to utilize a service a resource or a component associated with performing a particular role.

In some embodiments CI configuration update module may include a compliance check module that is configured to identify the CIS components that require remediation and or updating in order to comply with a designated CI configuration e.g. as selected by a system administrator or operator . For example upon being notified of the designated CI configuration version to be applied to a CIS compliance check module may be configured to compare the revision identifiers of the CIS components e.g. the revision version number of the associated CIS component firmware BIOS software drivers etc. associated with the designated CI configuration version to the revision identifiers of the CIS components currently utilized by the CIS. Notably the revision identifiers may comprise any number of letters numbers and or symbols.

In some embodiments CI configuration update module can interact with a task manager to conduct CI configuration updates for each CIS component via the creation of a task. Namely task manager can comprise a component that facilitates the creation of a task. For example a task can be created by providing a name for the task e.g. updating VNX 5500 at 127.0.0.1 to firmware x.y.z the object of the task e.g. schedule with key the action the task is performing e.g. Component Update and the context for the component creating the task e.g. CI configuration Update Framework arguments a b c . In some embodiments the task can also be updated using either an API call e.g. a representational state transfer REST API call or alternatively a non REST API or by pushing a message onto task manager queue e.g. an advanced message queuing protocol AMQP queue that task manager is monitoring e.g. listening on . In either scenario the update can be stored in a TaskHistory object and one or more attributes can be stored at a TaskDetail level.

Creation of a new task via task manager generates a task object. In some embodiments a task object is a reference identifier ID for the task itself. For example the task object is expected to be exchanged between processes and used as a common reference ID for event correlation by registering the task ID with log messages. In some embodiments task manager can be configured to create a static persistent message queue such as task manager queue . Messages that arrive on task manager queue may contain the task and the identity of a user initiating an update or change. The message can also contain at least one of TaskStatus percentage complete or a message.

In some embodiments a task may contain additional sub tasks. In such scenarios a caller thread in CIS manager can create a TaskGroup instead of a task. After a TaskGroup is generated tasks can each be subsequently added as a member to the TaskGroup. In addition this process allows for updates to be performed at both the sub task level as well as the overall TaskGroup level. In some embodiments individual tasks can be cancelled by a user via task manager . Likewise TaskGroups can be stopped or cancelled by the user. For example cancelling a TaskGroup will cancel all running tasks within the TaskGroup. Similarly stopping a TaskGroup will allow currently running tasks to complete but will future tasks will be prevented from starting. A stopped TaskGroup can be restarted which in turn will cause any non complete tasks to start. In some embodiments the stop and resume features of TaskGroup are optional features.

In some embodiments CIS manager can comprise or interact with notification service module . In some embodiments notification service module can comprise an API e.g. a REST API that facilitates the sending of a direct notification. In some embodiments a notification may include an email sent via a simple mail transfer protocol SMTP server. Notification service module enables CIS manager to send any number of notifications in an asynchronous manner. Notification service module can persist and queue the notification to support the remote destination being unavailable for some time. When a notification is sent log messages can be used to document and detail the type of message sent or failed to send and requeueing the manner in which the message was sent to whom the message was sent and who requested the message to be sent. In some embodiments notification service module may support notifications over email and over protocols like SNMP and IRC.

In some embodiments notification service module can be configured to monitor for task updates using task manager queue . For example notification service module can provide an API to register the notification to a task and the type of task updates in which to notify. Therefore when notification service module reads an appropriate update for a task to notify on the configured notification for that task will be queued and sent.

Notification service module can also be configured to maintain a library of templates for notifications. Notification service module can be configured to determine the reason a notification is being sent and determine how to send the notification. Based on this information notification service module may be configured to ascertain and load an appropriate template to use for the notification. Additionally the templates may be stored locally in such a way that system operators can modify a template to accommodate any need e.g. add branding information to an email .

In some embodiments CIS manager can comprise or interact with a scheduler i.e. scheduling module . In some embodiments scheduler may be configured to schedule a retrieval of update data stored in a repository. Scheduler may also be configured to schedule when to initiate a CI configuration update through CIS manager . Notably scheduler can be configured to create a new task from task manager module . If scheduler has a notification for the schedule scheduler may also inform notification service module whom to notify and under what conditions to notify e.g. notify over email to address when the task completes success or failure .

In some embodiments notification service module can subsequently send a request to the code that was registered with the scheduled job. For example in the case of a repository update schedule repository can be notified over any potential API by notification service module such as using a hypertext transfer protocol HTTP POST request method. Scheduler can supply all of the metadata stored in the schedule as well as a task that scheduler has created for the particular CI configuration update. Repository can then utilize the task to send messages to task manager module that pertain to the current status for the repository update.

After repository has completed the update a final task message can be sent with a status of success. This message is used to update task manager module . In addition notification service module can also read the task update message and determine that the task has completed and if related conditions were met. Notification service module can determine whom to notify and how to send the appropriate message e.g. email .

Specifically the sequence diagram of depicts an exemplary flow process conducted in response to a user e.g. CIS operator initiating an update a CIS component. Although illustrates an exemplary embodiment of a CI configuration update procedure performed by a CIS manager that utilizes tasks it is understood that the aforementioned CI configuration update may be conducted by the CIS manager via one or more alternate methods e.g. without keeping track of the completion of the tasks or without utilizing tasks at all .

Referring to CI configuration update module can be configured to perform a number of actions each time a component update procedure is conducted. For example after receiving a CIS update request from a user e.g. via a vCenter plugin CI configuration update module may be configured to send a validation message to access control module in order to authenticate the user and to determine if the user is authorized to conduct the update for a specific CIS component. In one embodiment a caller thread in CI configuration update module thread utilizes logic to verify that the user has the appropriate rights to invoke the update process. In some embodiments authentication of a user may require the utilization of a known and or configured service level account by CI configuration update module . Similarly authorization of a user may be conducted via CI configuration update module . For example CI configuration update module may communicate with access control module to determine the user s permissions.

Upon conducting the requested authentication and authorization checks access control module can respond to CI configuration update module by sending a validation response message which may include the user s permissions. CI configuration update module may then check the indicated permissions to determine if the user has access to the update the given component.

After receiving response message CI configuration update module may send a task creation request message to task manager . Task manager may then be configured to generate a task for the update procedure and respond back to CI configuration update module with a task message . Upon receiving message CI configuration update module may send a task update message e.g. an AMQP message to task manager queue to indicate that the task is currently being run. In some embodiments CI configuration update module may subsequently send a content request message to a repository such as repository . The repository in response to received message may provide the required update content information for the specific CI configuration version e.g. an RCM version and component to CI configuration update module via message .

In some embodiments CI configuration update module can be configured to delegate the update logic required to perform the update implementation. For example CI configuration update module can send a message that contains logic delegation information. Upon receiving message CIS logical update module sends a response message comprising a polling identifier to CI configuration update module . For example a caller thread in CI configuration update module receives an identifier that the caller thread can use to poll for the status of the update.

In some embodiments CI configuration update module may be configured to query for update status information and results from CIS logical update module . For example CI configuration update module can send a polling query message containing a polling identifier to logical update module . In addition CI configuration update module can also be configured to send progress messages e.g. AMQP progress messages to task manager queue containing data obtained from status polling. CI configuration update module may also store the results from the update procedure including all input and output data associated with the update procedure.

After CIS logical update module completes the update procedure see block CI configuration update module can send a task update message e.g. an AMQP message indicating the completed task to task manager queue . Task manager queue in turn generates and sends a message instructing task manager to process the task update.

In step remediation content such as remediation software content is determined. In some embodiments the remediation content that enables each of the identified CIS components to be compliant with the defined CI configuration is determined by the CIS manager.

In step remediation content is retrieved. In some embodiments the CIS manager retrieves the remediation content for the identified components from a repository.

In step the remediation content is utilized. In some embodiments the remediation content is used to update the identified components on the CIS unit in accordance with the defined CI configuration e.g. an RCM .

To help resolve the CI configuration update problem for customers the CIS manager may be configured to enable system operators to view a UI displaying the CIS components that need to be updated in order to migrate to a particular CI configuration update such as an RCM update. In addition the CIS manager may also be configured to guide the system operator through the update process and ensure that the components are updated in the correct order. The system operator may be required to plan out a set of maintenance windows associated with the RCM update.

For example depicts an exemplary UI display that presents compliance RCM result information i.e. data indicating how close a current CIS version is to a particular RCM to a user. UI display comprises a certification matrix tab that visually presents compliance RCM information e.g. UI column indicating the CIS components that require updating to a user. Similarly UI element e.g. a dropdown menu provides a user the ability to select one of a plurality of RCM versions that may be used to update the CIS unit. UI display also affords a user the ability to execute a new compliance RCM scan e.g. UI element . In such a scenario UI display will update when the new results are available. UI element e.g. UI button on UI display allows a user to initiate the RCM update process. Although UI display presents an exemplary interface compatible with an RCM it is understood that there are other exemplary embodiments in which UI display may be compatible with other CI configurations without departing from the scope of the disclosed subject matter.

In the event a user selects UI element to perform the RCM update an exemplary UI display shown in may be displayed as an overlay window. Notably each CIS component that requires an update will be listed and enabled. Likewise components that have been previously updated to the correct version for the CI configuration may be listed but not enabled. In some embodiments the user may be presented with an option via UI display to perform the update in any desired order. In alternate embodiments the listed order of components may be the same as a defined order presented in an update guide i.e. the suggested order . Although UI display depicts an exemplary implementation in which a number of separate individual components e.g. an individual compute server an individual virtualization host etc. are selected for updating it is understood that UI display may be configured to select a plurality of similar components e.g. a plurality of compute servers a plurality of virtualization hosts etc. or a plurality of different updates in other embodiments without departing from the scope of the disclosed subject matter. Furthermore although UI display presents an exemplary interface compatible with an RCM it is understood that there are other exemplary embodiments in which UI display may be compatible with other CI configurations without departing from the scope of the disclosed subject matter.

In some embodiments a user has the ability to select the update content to be downloaded to a local CIS repository. For example illustrates an exemplary UI display that presents the various CIS units at a particular source i.e. source location . Notably UI display can be useful for users that operate a series of CIS models in a datacenter but wish to download update content to a single location prior to distribution throughout the datacenter. The user can also utilize UI display to delete update content that is no longer needed. Although UI display presents an exemplary interface compatible with an RCM it is understood that there are other exemplary embodiments in which UI display may be compatible with other CI configurations without departing from the scope of the disclosed subject matter.

As indicated above the subject matter disclosed herein can be implemented in software in combination with hardware and or firmware. For example the subject matter described herein can be implemented in software executed by a processor. In one exemplary implementation the subject matter described herein can be implemented using a computer readable medium having stored thereon computer executable instructions that when executed by a processor of a computer control the computer to perform steps. Exemplary computer readable mediums suitable for implementing the subject matter described herein include non transitory devices such as disk memory devices chip memory devices programmable logic devices and application specific integrated circuits. In addition a computer readable medium that implements the subject matter described herein can be located on a single device or computing platform or can be distributed across multiple devices or computing platforms. As used in the present disclosure the terms function or module refer to hardware firmware or software in combination with hardware and or firmware for implementing features described herein.

It will be understood that various details of the subject matter described herein may be changed without departing from the scope of the subject matter described herein. Furthermore the foregoing description is for the purpose of illustration only and not for the purpose of limitation as the subject matter described herein is defined by the claims as set forth hereinafter.

