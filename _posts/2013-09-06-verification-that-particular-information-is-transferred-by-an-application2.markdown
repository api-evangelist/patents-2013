---

title: Verification that particular information is transferred by an application
abstract: The technology includes a method to test what information an application transfers to an external computing device. A user's consent is explicitly obtained before the application transfers certain types of information, such as sensitive information. When a determination is made that an application is transferring sensitive information, a prompt for consent from a user may be provided that is accurate and detailed. In pre-production environments, technology can be used to detect whether this sensitive information is being transferred, and to validate whether a prompt for consent is necessary or unnecessary. To determine this, shimming is used to intercept application calls to APIs that return sensitive information. Requested sensitive information may be substituted with recorded or forged information from those APIs to produce a sentinel or canary. Similarly, network traffic of the application may be analyzed by another shim to determine when the substitute information is present.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09645860&OS=09645860&RS=09645860
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09645860
owner_city: Redmond
owner_country: US
publication_date: 20130906
---
Computing devices may obtain information from a user that may not be intended by the user to be disseminated to others. A user may make a choice about allowing dissemination of such information to others. The computing device may subsequently disseminate the information based on the user s choice. However such a query about a choice often interrupts and or distracts from a user s experience and may not be necessary.

Alternatively legal notices may be posted before or during the user s experience that indicate how the information may or may not be disseminated. However such legal notice posting also may interrupt and distract from a user s experience as well as not provide the information in the legal notice that is important or understandable in making an informed decision by a user.

Applications for computing devices typically are not written or coded by computing device manufacturers. Accordingly computing device manufacturers don t know what an application does with requested information. Even when a computer device manufacturer knows that an application communicates on a network a computer manufacturer does not know what information is transferred on the network.

The technology includes a method to test whether an application transfers particular information to an external computing device. A verification or certification that an application is not transferring particular information to an external computing device reduces interruptions to a user to ask for consent to transfer such information since the verification indicates no transfer occurs. Fewer prompts to a user for consent may enhance a user s experience. When a determination is made that an application is transferring particular information a prompt for consent from a user may be provided that is accurate as well as detailed as to what particular information may be transferred and to where. In an embodiment a user would consent to the transfer of sensitive information such as a video signal off the computing device before any transfer occurs. In an embodiment sensitive information may be a user s video clip or may be metadata containing personally identifiable information such as address information or telephone number or other information not intended by a user to be disseminated

When an application such as a game is loaded into a computing device a Network Security Authorization list NSAL is read from the application to determine whether the application will communicate or connect with an external computing device. A NSAL may include authorized network addresses that an application may communicate with when executing on a computing device. When the NSAL does not include any network addresses there is no need to obtain consent from a user regarding transferring the sensitive information externally because the application does not have the capability to do so. Even with a NSAL an application may be tested or verified that sensitive information is not be transferred to an external computer. Further when a NSAL indicates that a computing device has connectivity a verification of what particular sensitive information is transferred and to what network address may be made.

When an application is tested and or in a verification or certification process shimming is used to intercept application calls to application programming interfaces APIs that return information such as a video signal. In embodiments a shim or shimming refers to a small library that transparently intercepts an API and changes the parameters passed handles the operation itself or redirects the computing operation elsewhere. In an embodiment an application verifier may also be used. Requested sensitive information may be replaced or substituted with recorded or forged information from those APIs to produce a sentinel or canary. For example when an application calls a GetUserID API the application would typically receive a user ID such as DavidChr. Using shimming a substituted information such as XYZZY may be returned to the application instead. Alternatively an application may request a picture of a user from a camera in the computing device. Instead of a picture of the user a photo of a coffee can may be provided to the requesting application.

During the testing and or verifying network traffic of the application may be analyzed by another shim to determine when the canary sentinel is present in an embodiment. When the canary sentinel is present the APIs and the sockets handles passed to them identify to what network address the canary was transmitted.

Whether false recorded information sentinel capture or forged information canary forgery is used for substituting sensitive information depends on the API and the application. Some applications may parse the sensitive information. For example an application such as an electronic interactive game game might perform image processing on the video signal returned from the camera to do their own skeletal tracking. In an embodiment providing a video signal will allow the game to behave normally so false recorded information such as a video signal may have to be recorded and searched for in the traffic.

In embodiments false recorded information such as videos of unmoving objects which can be easily searched for in the traffic may be provided. In an embodiment a shim can detect in real time whether and where an application is exfiltrating. This allows for diagnostics to be performed on an application. For example a crash dump may be generated and sent to an application developer for analysis.

A method to test an application includes receiving a request from the application for information. Substitute information is provided as the information to the application. A request from the application to output application information to an external computing device is received. The application information is inspected to determine whether the substitute information is included in the application information. The application information is outputted to the external computing device.

An apparatus embodiment comprises at least one camera to obtain a video signal at least one processor and at least one processor readable memory to store an application having processor readable instructions and a network address to a computing device. The at least one processor readable memory also may store an operating system that may allow the application to transfer at least a portion of the video signal to the external computing device at the network address. The processor executes the processor readable instructions of the operating system and the application to receive by the operating system a request from the application for the video signal. The operating system provides a substitute video signal to the application. A request from the application to output application information to an external computing device is also received by the operating system. The operating system inspects the application information to determine whether the substitute video signal is included in the application information. The operating system outputs the application information to the external computing device.

In another embodiment one or more processor readable memories include instructions which when executed cause one or more processors to perform a method. The method includes receiving information and a request for the information from an application. The information is replaced with substitute information. The substitute information is provided as the information to the application. A request from the application to output application information to a computing device at a network address is received. The application information is searched to determine whether the substitute information is included in the application information. The application information is outputted to the external computing device at the network address.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

The technology includes a method to test what information such as sensitive information an application transfers to an external computing device. A verification or certification that an application is not transferring sensitive information to an external computing device reduces interruptions to a user to ask for consent to transfer such information since the verification indicates no transfer occurs Fewer prompts to a user for consent may enhance a user s experience. When a determination is made that an application is transferring sensitive information a prompt for consent from a user may be provided that is accurate as well as detailed in what sensitive information may be transferred and to where.

Shimming is used to intercept application calls to APIs that return sensitive information. Requested sensitive information may be replaced with substitute information such as false recorded information or forged information from those APIs to produce a sentinel or canary. Similarly network traffic of the application may be analyzed by another shim to determine when the substitute information is present in the outgoing traffic of the application. When the substitute information is present the API identifies where the application information including the substitute information is intended to be sent.

By using shimming network traffic may be analyzed before possible encryption that would make it difficult to find sensitive information. For example an application could uses Hypertext Transfer Protocol Secure HTTPS to communicate with an external computing device. Embodiments circumvent this by intercepting the APIs that request Secure Sockets Layer Transport Layer Security SSL TLS to encrypt information.

A computing device may store or have available sensitive information that an application may request. For example a live video signal from a camera in a console may be sensitive information requested by an application. An application such as a game may want to transfer the video signal to an external computing device for processing such as overlaying a user s face in the video signal onto a character in the game.

A console may ask for a user s consent before making the sensitive information available to the game because the game may transmit the sensitive information to an external computing device contrary to a user s intentions. However a user may not want to have to make a choice in consenting to transferring the sensitive information because it interferes with the fun aspect of gameplay.

The technology provides sensitive information to an application without risking the application calling home transferring the sensitive information to an external computing device without the consent of the user. Using NSAL a computing device can identify classes of applications that do not have an ability to transfer sensitive information to an external computing device. A NSAL may include one or more network addresses to external computing devices stored in an application that may be accessed by an operating system. A NSAL is an agreed upon list or plurality of network addresses between the computing device developer and application developer in an embodiment. Those applications having a NSAL which may include no network addresses may be trusted which may provide an ease of use advantage for a computing device that wants to expose sensitive information to an application. Many applications may not include multiplayer gaming or advertising so those applications do not need to access an external computing device.

In general when an application loads a computing device reads the NSAL to determine what connectivity the application has with the outside world. When the NSAL is empty no connectivity the application can be declared safe as the application cannot communicate a user s sensitive information to the rest of the world and there is no need to interrupt a user in obtaining consent. Even when a NSAL is empty or includes network addresses computing device manufacturers may need to test the application to verify or certify that particular sensitive information is or is not being transferred by a particular application to an external computing device.

Alternatively a test may be performed during the execution of application on a computing device such as a console before sensitive information is transferred to computing device . In this embodiment sensitive information is not transferred unless an indication of consent from a user to transfer the information is obtained after a test indicates that application intends to transfer sensitive information . In an embodiment computing device includes software components such as application including NSAL consent substitute and network inspector stored in memory of computing device as described herein.

Sensitive information is also stored as digital information in a memory of computing device . In an alternate embodiment sensitive information may be available during operation of computing device such as a video signal from camera when computing device is powered on. In an embodiment sensitive information may be pictures or video of one or more users. In other embodiments sensitive information may be a user s video clip or may be metadata containing personally identifiable information such as address information or telephone number or other information not intended by a user to be disseminated from computing device singly or in combination. For example sensitive information may be a video signal from camera in computing device . The video signal may include frames or pictures of one or more users such as video of a user while playing a game application on computing device .

In an embodiment sensitive information is not obtained from a user without explicit consent from a user. Sensitive information may also be viewable by a user and may be edited by a user. In an embodiment sensitive information may also be secured by storing an encrypted version of sensitive information in memory as well as allowing access to sensitive information by password.

In an embodiment computing device communicates with computing device located at a remote physical location by way of network as described herein. Computing device is considered external to computing device in an embodiment. In an embodiment application may want to transfer sensitive information to computing device that may provide a service. Application may be a game that wants to transfer the video signal or frame of video to a computing device for a service from application server . For example application server may provide a graphics overlay service or function such as overlaying a user s face in the video signal onto a character in the game.

In an embodiment computing device also provides sensitive information to computing device in response to an indication of consent by a user to allow application to transfer sensitive information to an external computing device such as computing device . When a user explicitly communicates a consent to computing device in response to query an indication of that consent may be stored as a digital value at an address of memory in computing device .

In an embodiment computing device may be a server having server software components and computing device may be a client of computing device . In another embodiment computing devices and are peers. In a peer to peer P2P embodiment of computing devices and each computing device may act as a client or a server of the other.

Computing devices and may communicate by way of network as described herein. In further embodiments computing device communicates with computing devices and by way of network . In an embodiment network may be the Internet a Wide Area Network WAN or a Local Area Network LAN singly or in combination. In embodiments computing devices and or use one or more protocols to transfer information such as Transmission Control Protocol Internet Protocol TCP IP . In embodiments computing device is included in another network. Information may be transferred by wire and or wirelessly in network .

In alternate embodiments apparatus includes many more or less computing devices and or servers to provide and receive information. In embodiments computing device computing device and or computing device corresponds to computing device having exemplary hardware components illustrated in and as described herein.

In an embodiment computing device is included in a console as described herein and illustrated in . In an alternate embodiment computing device and or is a computing device as illustrated in and described herein. In alternate embodiments computing device may be included in at least a cell phone mobile device embedded system laptop computer desktop computer server and or datacenter. In an embodiment computing device is a server and or datacenter.

In embodiments computing devices and include one or more processor readable memories to store digital information and or software components having processor readable instructions as described herein. In embodiments computing device and include one or more processors to execute or read the processor readable instructions and read the digital information.

In an embodiment network management reads a NSAL of application in order to determine whether application may receive sensitive information .

Substitute replaces requested sensitive information from application with substitute information as illustrated in .

Network inspector then inspects or searches application information to be transferred to an external computing device for substitute information . When the substitute information is found a user s consent to transfer sensitive information is obtained before a transfer may occur.

In an embodiment consent in UI obtains and stores an indication of consent as a digital value from a user to transfer sensitive information from application to an external computing device. In embodiments an indication of consent may include a consent to transfer the sensitive information from an application or a denial of consent to transfer the sensitive information from an application . In an embodiment applications may include one or more electronic interactive games.

In an embodiment OS and applications includes one or more of software components. In an embodiment a software component may include a software program software object software function software subroutine software method software instance script and or a code fragment singly or in combination. For example OS includes one or more of user interface UI process management memory management input output I O device management file management network management and protection . One or more exemplary functions that may be performed by the various OS software components are described below. In alternate embodiment more or less software components and or functions of the software components described below may be used. In an alternate embodiment consent substitute and network inspector may be included in other software components.

In embodiments at least portions of OS are stored in one or more processor readable memories. In an embodiment at least portions of OS are stored in processor readable memories of computing device illustrated in .

Processes management is responsible for creating and deleting user and system processes. Process management may also be responsible for suspension and resumption of processes. Process management is also responsible for synchronization and communication of processes. Process management is also responsible for deadlock handling. In an embodiment substitute is included in process management . As described herein substitute may also be included in other software components.

Memory management is responsible for keeping track of which part of memory in the different types of memory is currently being used by a particular software component or application. Memory management also decides which processes are loaded into memory when memory space becomes available. Memory management also allocates and deallocates memory space as needed.

Input output I O device management is responsible for managing I O devices. For example I O device management manages camera that provides a video signal. In an embodiment the peculiarities of specific hardware are hidden from users. In an embodiment device drivers know the peculiarities of the specific device. For example I O device management may be responsible for disk management functions such as free space management memory allocation fragmentation removal and head scheduling.

File management is responsible for creating and deleting files and directories. File management may support a hierarchical file system. File management may also back up files onto secondary memory.

Network management is responsible for communication with networks including providing connection routing methods. Network management may also be responsible for data process migration to other computing devices. In an embodiment network management includes network inspector that inspects or searches a traffic buffer temporarily storing application information to be sent to one or more external computing devices as described herein.

Protection is responsible for controlling access of software components processes and or users to resources of the computing device. For example protection is responsible for controlling access to resources such as central processing unit CPU cycles memory files and or I O devices. Protection is also responsible for user authentication and communication.

User interface UI provides a speech natural language character and or graphics user interface to a user and is responsible for receiving input and providing output to a user. In an embodiment UI includes consent that is responsible for obtaining and storing an indication of consent from a user as a digital value at an address of a memory in computing device .

In a console embodiment as illustrated in a user may enter input to console by way of gesture touch or voice. In an embodiment optical I O interface receives and translates gestures of a user. In an embodiment console includes a natural user interface NUI as user interface to receive and translate voice and or gesture inputs from a user. In an embodiment front panel subassembly includes a touch surface and a microphone for receiving and translating a user s touch or voice such as a user s consent as described in detail herein. In an embodiment user interface translates spoken consent from a user provided to a microphone of console from one or more users. In an embodiment UI includes a NUI that outputs a voice asking for consent from a user and interprets a spoken answer from the user such as consent or denial. The spoken answer such as consent may then be stored in memory as an indication of consent.

Similarly application may transfer application information to an external computing device by providing a request and application information to OS . OS then may transfer application information as outputted application information to an external computing device at a network address provided by application . In an embodiment request and application information may include a network address of an external computing device and a video signal sensitive information or substitute information . In an embodiment request and application information may include calling a second API such as a transmit API by application .

Substitute includes substitute information that replaces sensitive information such as video signal when application is being tested in an embodiment. Substitute information may include information as described herein which later may be searched or inspected by network management and in particular network inspector . In an embodiment substitute information includes video of a non moving object. In an embodiment substitute acts as a shim for a call of an API to provide sensitive information by application . In an embodiment substitute is included in process management . In alternate embodiments substitute is included in I O device management as a false device driver. In other embodiments substitute is included in application using shimmable Dynamic Link Libraries DLLs provided to application by OS .

Network inspector in network management searches or inspects application information in request and application information for substitute information in order to determine whether application is attempting to transfer sensitive information to an external computing device. In an embodiment network inspector searches a traffic buffer that stores application information for substitute information . In an embodiment network inspector acts as a shim for a call of an API to transmit application information to an external computing device by application .

In an embodiment network inspector searches for sensitive information such as video data that has been encoded in a particular format by application . In an embodiment application may encode sensitive information such as raw video data before transferring to an external computing device due to bandwidth constraints. In an embodiment OS provides shimming or APIs to perform encoding of information for application so that network inspector may observe any substitute information in the encoded information.

In an embodiment network inspector may be able to observe substitute information when application attempts to hide or encode substitute information .

Step illustrates receiving a request from an application for information such as sensitive information. In an embodiment OS receives a request by way of API from application for to sensitive information as illustrated in

Step illustrates providing substitute information as the information to the application. In an embodiment substitute obtains and replaces the information with substitute information and then returns the substitute information as sensitive information to application as described herein.

Step illustrates receiving a request from the application to output application information to an external computing device. In an embodiment OS and in particular network manager receives the request from application .

Step illustrates inspecting the application information to determine whether the substitute information is included in the application information. In an embodiment network inspector performs step by searching a buffer such as traffic buffer for the substitute information.

Step illustrates outputting the application information to the external computing device. In an embodiment network manager at least partially performs step .

In other embodiments steps are performed by at least exemplary software components and hardware shown in . For example method may be performed by console illustrated in or computing device illustrated in .

Step illustrates receiving by the operating system a request from an application for the video signal. In an embodiment an application uses a first API to request a video signal from operating system illustrated in .

Step illustrates providing a substitute video signal by the operating system to the application. In an embodiment substitute performs step to replace the requested video signal with a substitute video signal such as a video signal of a non moving object.

Step illustrates receiving by the operating system a request from the application to output application information to an external computing device. In an embodiment an application uses a second API to request outputting application information by operating system illustrated in .

Step illustrates inspecting by the operating system the application information to determine whether the substitute video signal is included in the application information. In an embodiment network inspector performs step by searching a buffer such as traffic buffer for the substitute video signal.

Step illustrates outputting by the operating system the application information to the external computing device. In an embodiment network manager at least partially performs step .

In other embodiments steps are performed by at least exemplary software components and hardware shown in . For example method may be performed by console illustrated in or computing device illustrated in .

Step illustrates receiving information such as sensitive information illustrated in and described herein. In an embodiment an operating system such as OS accesses receives or controls the sensitive information until releasing or transferring the sensitive information to a requesting application such as application . In an embodiment a camera provides a video signal that is received by computing device as illustrated in .

Step illustrates receiving a request for the sensitive information from an application. In an embodiment an application uses a first API to request sensitive information from operating system illustrated in .

Step illustrates replacing the sensitive information with substitute information. In an embodiment substitute performs step to replace the requested sensitive information with substitute information as described herein.

Step illustrates providing the substitute information as the sensitive information to the application. In an embodiment an application uses a second API to request outputting application information by operating system illustrated in .

Step illustrates receiving a request from the application to output application information to a network address. In an embodiment an application uses a second API to request outputting application information by operating system illustrated in .

Step illustrates searching the application information to determine whether the substitute information is included in the application information. In an embodiment network inspector performs step by searching a buffer such as traffic buffer for the substitute information.

Step illustrates obtaining an indication of consent before outputting the application information. In an embodiment consent obtains an indication of consent from a user. In an embodiment an application may be notified by the operating system to request sensitive information again and also request an output of application information again so that substitute information will not be used after receiving a user s consent.

Step outputting the application information without the substitute information to the external address. In an embodiment network manager at least partially performs step .

In other embodiments steps are performed by at least exemplary software components and hardware shown in . For example method may be performed by console illustrated in or computing device illustrated in .

In an embodiment computing device may be but is not limited to a video game and or media console. In an embodiment computing device tests an application such as a game before sensitive information is transferred to an external computing device. When sensitive information is to be transferred computing device as a video game and or media console obtains an indication of consent from a user before the sensitive information is transferred.

In an embodiment will now be used to describe an exemplary video game and media console or more generally will be used to describe an exemplary gaming and media system that includes a game and media console. The following discussion of is intended to provide a brief general description of a suitable computing device with which concepts presented herein may be implemented. It is understood that the system of is by way of example only. In further examples embodiments describe herein may be implemented using a variety of client computing devices either via a browser application or a software application resident on and executed by the client computing device. As shown in a gaming and media system includes a game and media console hereinafter console . In general the console is one type of client computing device. The console is configured to accommodate one or more wireless controllers as represented by controllers and . The console is equipped with an internal hard disk drive and a portable media drive that support various forms of portable storage media as represented by an optical storage disc . Examples of suitable portable storage media include DVD CD ROM game discs and so forth. The console also includes two memory unit card receptacles and for receiving removable flash type memory units . A command button on the console enables and disables wireless peripheral support.

As depicted in the console also includes an optical port for communicating wirelessly with one or more devices and two USB ports and to support a wired connection for additional controllers or other peripherals. In some implementations the number and arrangement of additional ports may be modified. A power button and an eject button are also positioned on the front face of the console . The power button is selected to apply power to the game console and can also provide access to other features and controls and the eject button alternately opens and closes the tray of a portable media drive to enable insertion and extraction of an optical storage disc .

The console connects to a television or other display such as display via A V interfacing cables . In one implementation the console is equipped with a dedicated A V port configured for content secured digital communication using A V cables e.g. A V cables suitable for coupling to a High Definition Multimedia Interface HDMI port on a high definition display or other display device . A power cable provides power to the console . Console may be further configured with broadband capabilities as represented by a cable or modem connector to facilitate access to a network such as the Internet. The broadband capabilities can also be provided wirelessly through a broadband network such as a wireless fidelity Wi Fi network.

Each controller is coupled to the console via a wired or wireless interface. In the illustrated implementation the controllers are USB compatible and are coupled to the console via a wireless or USB port . The console may be equipped with any of a wide variety of user interaction mechanisms. In an example illustrated in each controller is equipped with two thumb sticks and a D pad buttons and two triggers . These controllers are merely representative and other known gaming controllers may be substituted for or added to those shown in .

In an embodiment a user may enter input to console by way of gesture touch or voice. In an embodiment optical I O interface receives and translates gestures of a user. In an embodiment optical I O interface includes a camera to obtain a video signal of for example users. In another embodiment console includes a NUI to receive and translate voice and gesture inputs from a user. In an alternate embodiment front panel subassembly includes a touch surface and a microphone for receiving and translating a touch or voice such as consent of a user. In an embodiment front panel subassembly includes a speaker to ask a user for an indication of consent or denial to allow sensitive information to be communicated to external computing devices.

In an embodiment multiple microphones may be plugged into a USB port to provide a four channel signal representing a user s speech. In alternate embodiments a single microphone may be used. In an embodiment four 16 kHz 24 bit audio signals are provided from multiple microphones to USB port and at least one audio pipeline. In an embodiment the at least one audio pipeline reduces noise associated with the at least one audio signal such as other users speaking or audio from an electronic interactive game application.

In one implementation a memory unit MU may also be inserted into the controller to provide additional and portable storage. Portable MUs enable users to store game parameters for use when playing on other consoles. In this implementation each controller is configured to accommodate two MUs although more or less than two MUs may also be employed.

The gaming and media system is generally configured for playing games stored on a memory medium as well as for downloading and playing games and reproducing pre recorded music and videos from both electronic and hard media sources. With the different storage offerings titles or applications can be played from the hard disk drive from an optical storage disc media e.g. from an online source or from MU . Samples of the types of media that gaming and media system is capable of playing include 

Game titles or applications played from CD DVD or higher capacity discs from the hard disk drive or from an online source.

Digital music played from a CD in portable media drive from a file on the hard disk drive or solid state disk e.g. music in a media format or from online streaming sources.

Digital audio video played from a DVD disc in portable media drive from a file on the hard disk drive e.g. Active Streaming Format or from online streaming sources.

During operation the console is configured to receive input from controllers and display information on the display . For example the console can display a user interface on the display to allow a user to select an electronic interactive game using the controller and display state solvability information. In an embodiment console provides a menu to display to enable a selection of consent or denial by controllers to allow sensitive information to be communicated to external computing devices. In embodiments a menu may be very broad such as not consenting or consenting to transferring any sensitive information from any application. Alternatively the menu may allow a user to select or consent to particular information that may be transferred by a particular application. For example a menu may allow a user to consent to a video signal to be transferred from a game but the game may not transfer credit card information.

In an embodiment a menu to obtain consent for a user is provided after a test certification or verification process for an application. In an alternate embodiment a menu to obtain consent for a user is provided during the execution of the application and before sensitive information is transferred to an external computing device.

The CPU the memory controller and various memories are interconnected via one or more buses. The details of the bus that is used in this implementation are not particularly relevant to understanding the subject matter of interest being discussed herein. However it will be understood that such a bus might include one or more of serial and parallel buses a memory bus a peripheral bus and a processor or local bus using any of a variety of bus architectures. By way of example such architectures can include an Industry Standard Architecture ISA bus a Micro Channel Architecture MCA bus an Enhanced ISA EISA bus a Video Electronics Standards Association VESA local bus and a Peripheral Component Interconnects PCI bus also known as a Mezzanine bus.

In one implementation the CPU the memory controller the ROM and the RAM are integrated onto a common module . In this implementation the ROM is configured as a flash ROM that is connected to the memory controller via a PCI bus and a ROM bus neither of which are shown . The RAM is configured as multiple Double Data Rate Synchronous Dynamic RAM DDR SDRAM or faster data rate DRAM modules that are independently controlled by the memory controller via separate buses. The hard disk drive and the portable media drive are shown connected to the memory controller via the PCI bus and an AT Attachment ATA bus . However in other implementations dedicated data bus structures of different types can also be applied in the alternative.

In another embodiment at least CPU level 1 cache level 2 cache memory controller and RAM memory are included in a System on a Chip SoC . In an embodiment CPU is replaced with processor cores. In an embodiment RAM memory is replaced with high performance memory such as Wide I O DRAM and the function of memory controller is performed by processor cores. Another type of memory that is not high performance memory such as LPDDR3 DRAM may be coupled to a SoC in an embodiment.

A SoC a.k.a. SOC is an integrated circuit IC that integrates electronic components and or subsystems of a computing device or other electronic system into a single semiconductor substrate and or single chip housed within a single package. For example memory that was previously in a memory module subsystem in a personal computer PC may now be included in a SoC. Similarly memory control logic may be included in a processor of a SoC rather than in a separately packaged memory controller.

As one of ordinary skill in the art would appreciate other electronic components may be included in a SoC. A SoC may include digital analog mixed signal and or radio frequency circuits one or more on a single semiconductor substrate. A SoC may include oscillators phase locked loops counter timers real time timers power on reset generators external interfaces for example Universal Serial Bus USB IEEE 1394 interface FireWire Ethernet Universal Asynchronous Receiver Transmitter USART and Serial Peripheral Bus SPI analog interfaces voltage regulators and or power management circuits.

In alternate embodiments a SoC may be replaced with a system in package SiP or package on package PoP . In a SiP multiple chips or semiconductor substrates are housed in a single package. In a SiP embodiment processor cores would be on one semiconductor substrate and high performance memory would be on a second semiconductor substrate both housed in a single package. In an embodiment the first semiconductor substrate would be coupled to the second semiconductor substrate by wire bonding.

In a PoP embodiment processor cores would be on one semiconductor die housed in a first package and high performance memory would be on a second semiconductor die housed in a second different package. The first and second packages could then be stacked with a standard interface to route signals between the packages in particular the semiconductor dies. The stacked packages then may be coupled to a printed circuit board having memory additional memory as a component in an embodiment.

In embodiments processor cores includes multiple processors that executes or reads processor or machine readable instructions stored in processor readable memory. An example of processor readable instructions may include an OS and or an application for computing device such as OS and applications shown in . Processor cores may use high performance memory and additional memory in response to executing processor readable instructions of an OS and application. In an embodiment processor cores may include a processor and memory controller or alternatively a processor that also performs memory management functions similarly performed by a memory controller. Processor cores may also include a controller graphics processing unit GPU digital signal processor DSP and or a field programmable gate array FPGA . In an embodiment high performance memory is positioned on top of a processor cores.

In embodiments high performance memory and additional memory are include in one or more arrays of memory cells in an IC disposed on separate semiconductor substrates. In an embodiment high performance memory and additional memory are included in respective integrated monolithic circuits housed in separately packaged devices. In embodiments high performance memory and additional memory may include volatile and or non volatile memory.

Types of volatile memory include but are not limited to dynamic random access memory DRAM molecular charge based ZettaCore DRAM floating body DRAM and static random access memory SRAM . Particular types of DRAM include double data rate SDRAM DDR or later generation SDRAM e.g. DDRn .

Types of non volatile memory include but are not limited to types of electrically erasable program read only memory EEPROM FLASH including NAND and NOR FLASH ONO FLASH magneto resistive or magnetic RAM MRAM ferroelectric RAM FRAM holographic media Ovonic phase change Nano crystals Nanotube RAM NRAM Nantero MEMS scanning probe systems MEMS cantilever switch polymer molecular nano floating gate and single electron.

A three dimensional graphics processing unit and a video encoder form a video processing pipeline for high speed and high resolution e.g. High Definition graphics processing. Data are carried from the graphics processing unit to the video encoder via a digital video bus. An audio processing unit and an audio codec coder decoder form a corresponding audio processing pipeline for multi channel audio processing of various digital audio formats. Audio data are carried between the audio processing unit and the audio codec via a communication link. The video and audio processing pipelines output data to an A V audio video port for transmission to a television or other display.

In the implementation depicted in the console includes a controller support subassembly for supporting the four controllers . The controller support subassembly includes any hardware and software components to support wired and wireless operation with an external control device such as for example a media and game controller. A front panel I O subassembly supports the multiple functionalities of power button the eject button as well as any LEDs light emitting diodes or other indicators exposed on the outer surface of console . Subassemblies and are in communication with the module via one or more cable assemblies . In other implementations the console can include additional controller subassemblies. The illustrated implementation also shows an optical I O interface that is configured to send and receive signals that can be communicated to the module .

The MUs and are illustrated as being connectable to MU ports A and B respectively. Additional MUs e.g. MUs are illustrated as being connectable to the controllers and i.e. two MUs for each controller. The controllers and can also be configured to receive MUs. Each MU offers additional storage on which electronic interactive games game parameters and other data may be stored. In some implementations the other data can include any of a digital game component an executable gaming application an instruction set for expanding a gaming application and a media file. When inserted into the console or a controller the MU can be accessed by the memory controller .

A system power supply module provides power to the components of the gaming system . A fan cools the circuitry within the console .

An application comprising processor readable instructions is stored on the hard disk drive . When the console is powered on various portions of the application are loaded into RAM and or caches and for execution on the CPU wherein the application is one such example. Various applications can be stored on the hard disk drive for execution on CPU . In an embodiment application corresponds to one of applications shown in as described herein.

The console is also shown as including a communication subsystem configured to communicatively couple the console with one or more other computing devices e.g. other consoles . The communication subsystem may include wired and or wireless communication devices compatible with one or more different communication protocols. As non limiting examples the communication subsystem may be configured for communication via a wireless telephone network or a wired or wireless local or wide area network. In some embodiments the communication subsystem may allow the console to send and or receive messages to and or from other devices via a network such as the Internet. In specific embodiments the communication subsystem can be used to communicate with a coordinator and or other computing devices for sending download requests and for effecting downloading and uploading of digital content. More generally the communication subsystem can enable the console to participate on peer to peer communications.

The gaming and media system may be operated as a standalone system by simply connecting the system to display a television a video projector or other display device. In this standalone mode the gaming and media system enables one or more players to play electronic interactive games or enjoy digital media e.g. by watching movies or listening to music. However with the integration of broadband connectivity made available through network interface or more generally the communication subsystem the gaming and media system may further be operated as a participant in a larger network gaming community such as a peer to peer network.

The above described console is just one example of a computing device discussed above with reference to and various other Figures. As was explained above there are various other types of computing devices with which embodiments described herein can be used.

In an embodiment computing device is used in testing whether an application transfers sensitive information to an external computing device. In an embodiment computing device is used during a certification or verification processes of an application. In an embodiment software components as described herein are stored in system memory and executed by processing unit s core s 

Computing device may also contain communications connection s such as one or more network interfaces and transceivers that allow the device to communicate with other devices. Computing device may also have input device s such as keyboard mouse pen voice input device touch input device gesture input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art so they are not discussed at length here.

In embodiments illustrated and described signal paths are media that transfers a signal such as an interconnect conducting element contact pin region in a semiconductor substrate wire metal trace signal line or photoelectric conductor singly or in combination. In an embodiment multiple signal paths may replace a single signal path illustrated in the figures and a single signal path may replace multiple signal paths illustrated in the figures. In embodiments a signal path may include a bus and or point to point connection. In an embodiment a signal path includes control and data signal lines. In still other embodiments signal paths are unidirectional signals that travel in one direction or bidirectional signals that travel in two directions or combinations of both unidirectional signal lines and bidirectional signal lines.

The foregoing detailed description of the inventive system has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the inventive system to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. The described embodiments were chosen in order to best explain the principles of the inventive system and its practical application to thereby enable others skilled in the art to best utilize the inventive system in various embodiments and with various modifications as are suited to the particular use contemplated. It is intended that the scope of the inventive system be defined by the claims appended hereto.

