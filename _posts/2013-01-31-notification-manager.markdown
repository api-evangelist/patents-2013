---

title: Notification manager
abstract: A method to provide notifications to a user. The method includes using a software notification manager in the background to listens, according to user subscriptions, for notification messages sent through one or more messaging networks from multiple network applications. Accordingly, the notification manager gathers notifications and displays them in one place. As a result, the user is no longer required to sift through lots of notifications from his/her email folders or other message windows.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09118614&OS=09118614&RS=09118614
owner: Intuit Inc.
number: 09118614
owner_city: Mountain View
owner_country: US
publication_date: 20130131
---
Small business owners who use network applications are constantly bombarded with email notifications regarding various status or events of the network applications. Some examples include You ve received an invoice request for payment Someone has paid you and You need to update your account information. These notifications may also be sent via various messaging schemes with inconsistent user interfaces. When there are too many notifications they become distractions from important business activities. Sometimes these notifications are overlooked or get stuck in spam filters. At these times the notifications fail to serve their intended purpose which is to notify the network application users about something that needs their attention.

In general in one aspect the invention relates to a method to provide notifications to a user. The method includes receiving by a computer processor notification subscription information comprising user selections made by the user indicating a first request to receive the notifications from at least a first network application and a second network application and a second request to access a website of a third network application upon detecting a notification from the third network application obtaining based on the notification subscription information a first notification that is generated and sent by the first network application wherein the first notification notifies the user regarding a first status of the first network application obtaining based on the notification subscription information a second notification that is generated and sent by the second network application wherein the second notification notifies the user regarding a second status of the second network application obtaining based on the notification subscription information a third notification that is generated and sent by the third network application wherein the third notification notifies the user regarding a third status of the third network application aggregating by the computer processor at least the first notification and the second notification to generate a plurality of aggregate notifications presenting by the computer processor and to the user the plurality of aggregate notifications as an aggregate notification list within a single user interface and redirecting in response to obtaining the third notification and based on the notification subscription information the user to the website of the third network application.

In general in one aspect the invention relates to a system to provide notifications to a user. The system includes a first computer server configured to execute a first network application a second computer server configured to execute a second network application a third computer server configured to execute a third network application a notification management application executing on a notification server and comprises an input module configured to receive notification subscription information comprising user selections made by the user indicating a first request to receive the notifications from at least the first network application and the second network application and a second request to access a website of the third network application upon detecting a notification from the third network application obtain based on the notification subscription information a first notification that is generated and sent by the first network application wherein the first notification notifies the user regarding a first status of the first network application obtain based on the notification subscription information a second notification that is generated and sent by the second network application wherein the second notification notifies the user regarding a second status of the second network application and obtain based on the notification subscription information a third notification that is generated and sent by the third network application wherein the third notification notifies the user regarding a third status of the third network application an aggregation module configured to aggregate at least the first notification and the second notification to generate a plurality of aggregate notifications and an output module configured to present to the user the plurality of aggregate notifications as a list within a single user interface and redirect in response to obtaining the third notification and based on the notification subscription information the user to the website of the third network application and a repository configured to store the first notification the second notification the third notification and the plurality of aggregate notifications wherein the first computer server the second computer server and the notification server are coupled via a messaging network.

In general in one aspect the invention relates to a non transitory computer readable medium storing instructions to provide notifications to a user when executed by a computer processor comprising functionality for receiving notification subscription information comprising user selections made by the user indicating a first request to receive the notifications from at least a first network application and a second network application and a second request to access a website of a third network application upon detecting a notification from the third network application obtaining based on the notification subscription information a first notification that is generated and sent by the first network application wherein the first notification notifies the user regarding a first status of the first network application obtaining based on the notification subscription information a second notification that is generated and sent by the second network application wherein the second notification notifies the user regarding a second status of the second network application obtaining based on the notification subscription information a third notification that is generated and sent by the third network application wherein the third notification notifies the user regarding a third status of the third network application aggregating at least the first notification and the second notification to generate a plurality of aggregate notifications presenting to the user the plurality of aggregate notifications as an aggregate notification list within a single user interface and redirecting in response to obtaining the third notification and based on the notification subscription information the user to the website of the third network application.

Other aspects of the invention will be apparent from the following detailed description and the appended claims.

Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency.

In the following detailed description of embodiments of the invention numerous specific details are set forth in order to provide a more thorough understanding of the invention. However it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in detail to avoid unnecessarily complicating the description.

Embodiments of the invention provides a method system and computer readable medium for managing notifications that are generated and sent from network applications. Throughout this disclosure the term network application refers to a software application that is capable of sending notifications to the user via a messaging network e.g. a network supporting email protocols text messaging protocols or any other software messaging protocol . In one or more embodiments the network application may run on a mobile phone tablet computer desktop computer gaming console or any device equipped with computing and communication capabilities. In one or more embodiments a software application referred to as a notification manager runs in the background and listens according to user subscriptions for notification messages sent through one or more messaging networks from multiple network applications. Accordingly the notification manager gathers notifications and displays them in one place. As a result the user is no longer required to sift through lots of notifications from his her email folders or other message windows.

As shown in the system includes a user computer of a user computer servers e.g. computer server A computer server B etc. message repositories e.g. message repository A message repository X etc. and a notification server . In one or more embodiments the user is an individual who uses various network applications such as the network application A executing on the computer server A the network application B executing on the computer server B and the network application C executing on the user computer . In one or more embodiments the user computer may be a mobile phone tablet computer desktop computer gaming console or any device equipped with computing and communication capabilities. From time to time the network application A network application B and network application C send notifications e.g. network application A notifications network application B notifications etc. to the user regarding various status and or event of the network applications. For example the network application A network application B and network application C may include an accounting application a tax preparation application a personal productivity application etc.

The network application A notifications network application B notifications and other notifications not shown of the network application C may notify the user that an invoice has been received by the accounting application a tax filing deadline is approaching or a tax agency rule update has been received by the tax preparation application a friend s birthday alert has been triggered in the personal productivity application etc. Throughout this disclosure the term status refers to a condition of the network application that triggers a notification to be sent by the network application. For example the status may be related to an invoice that is generated by the merchant and sent to a customer for payment. The invoice was paid by the customer and the network application is notified of said payment. In another example the status may be related to a customer who wants to pay an invoice via a different payment application and a notification is sent to inform the merchant that a customer is ready to pay now. In yet another example the status relates to an application sending a notification to the merchant regarding a yearly invoice tax statement.

In one or more embodiments the network application A notifications are generated and sent by the network application A as email messages that are stored on the message repository A which is part of an email server. In such embodiments the user may view the network application A notifications using the email client installed on the user computer . For example the user may consider notifications of the network application A as critical to his business and view any single email notification immediately when it is available to view. In another example the user may be on vacation and only views the network application A notifications once a day as a batch.

In one or more embodiments the network application A notifications are generated and sent by the network application A as text messages such as Short Message Service SMS Multimedia Messaging Service MMS or other text based messages. For example the message repository X may be part of a gateway for the text message transmission. In such embodiments the user may view the network application A notifications using a text message application not shown installed on the user computer .

In one or more embodiments the network application B notifications are generated and sent by the network application B to a corresponding client module installed on the user computer . In particular the network application B and the client module communicate with each other using a pre determined software messaging protocol. For example the software messaging protocol may be the Representation State Transfer REST protocol and the network application B notifications are stored in the message repository X which is part of a gateway for the REST message transmission. In such embodiments the network application B notifications are presented to the user by the client module using a user interface of the client module . For example the client module may display the network application B notifications in a pop up window using the display device of the user computer . In another example the client module may present the network application B notifications as voice messages using a speaker not shown of the user computer .

In one or more embodiments the network application C may generate and present its notifications to the user using a user interface of the network application C . For example the network application C may display its notifications as a local message in a local pop up window using the display device . In another example the network application C may present its notifications as voice messages using a speaker not shown of the user computer .

Further as shown in the system includes a notification server executing a software application referred to as the notification manager that includes an input module aggregation module output module and a publish subscribe API application programming interface 125 . In one or more embodiments the notification manager is configured to consolidate notifications of the network application A network application B and network application C for delivery to the user . For example these notifications may be consolidated into the aggregate notifications based on notification subscription information specified by the user . The notification server also includes a repository storing information related to the notification consolidation such as the publish subscribe notifications e.g. publish subscribe notifications A publish subscribe notifications B etc. aggregate notifications and notification subscription information . For example the publish subscribe notifications A publish subscribe notifications B aggregate notifications and or notification subscription information may be stored in the repository as a list a file a database or other suitable data structures.

The message repository A message repository X and or repository may include a disk drive storage device a semiconductor storage device other suitable computer data storage device or combinations thereof. In one or more embodiments the message repository A message repository X and or repository may be located in a single device or distributed across multiple devices. Various components of the system are coupled via a messaging network . As noted above the messaging network supports one or more of email protocols text messaging protocols or any other software messaging protocol. In one or more embodiments the messaging network includes wired and or wireless portions of public and or private data network such as wide area networks WANs local area networks LANs Internet etc.

In one or more embodiments the notification manager includes the input module and output module that are configured to collectively present a single notification subscribing and receiving user interface to the user for subscribing and receiving notifications from multiple network applications. In one or more embodiments the input module is configured to present a notification subscription menu not shown to the user . In one or more embodiments the user uses a browser installed on the user computer to view the subscription menu as one or more webpages not shown hosted by the notification server .

In one or more embodiments the notification subscription menu is presented to the user by a notification client of the notification manager . In particular the notification client is installed on the user computer and is in communication with modules of the notification manager . In one or more embodiments the subscription menu not shown allows the user to select one or more of the network application A network application B network application C etc. for receiving notifications through the notification manager . These network applications selected by the user to receive notification through the notification manager are referred to as subscribed network applications. Whether the notification subscription menu not shown is webpage based or presented using the notification client notifications of multiple network applications are subscribed by the user all in one single user interface of the notification manager referred to as the notification subscribing user interface .

The notifications generated by multiple subscribed network applications are referred to as subscribed notifications. As will be further described in reference to the aggregation module the subscribed notifications from multiple subscribed network applications are consolidated into the aggregate notifications . In one or more embodiments the output module is configured to present the aggregate notifications to the user using the aforementioned webpage or notification client . Whether the aggregate notifications is webpage based or presented using the notification client notifications of multiple network applications are presented to the user all in this single user interface of the notification manager referred to as the notification receiving user interface .

In one or more embodiments both the notification subscription menu not shown and the aggregate notifications are webpage based. In other words both the notification subscribing user interface and the notification receiving user interface are accessed and manipulated via a webpage. In one or more embodiments both the notification subscription menu not shown and the aggregate notifications are presented using the notification client . In other words both the notification subscribing user interface and the notification receiving user interface are presented using the notification client . Whether webpage based or presented using the notification client notifications of multiple network applications are all subscribed by and presented to the user in one single user interface of the notification manager referred to as the notification subscribing and receiving user interface .

More particularly the user may select via this single notification subscribing and receiving user interface using text input checkbox selection voice input or other suitable user input format supported by the user computer any network application for notification subscription. These user selections are then stored in the repository as part of the notification subscription information . In response the user may receive via this single notification subscribing and receiving user interface the subscribed notifications in the form of the aggregate notifications as a displayed list narrated voice message or other suitable output format supported by the user computer .

Throughout this disclosure the term single user interface may refer to the single notification subscribing user interface the single notification receiving user interface or the single notification subscribing and receiving user interface interchangeably depending on the context. An example of this single notification subscribing and receiving user interface is shown in and described below.

In one or more embodiments the notification subscription menu not shown further allows the user to limit the subscribed notification from a subscribed network application to a particular type of notification. For a tax preparation software the user may elect to receive only tax agency rule update notifications in the aggregate notifications without including any other routine tax filing deadline reminder notifications. Such user specified criterion for each subscribed network application is also included in the notification subscription information .

In one or more embodiments in addition to the option of including the notification in the aggregate notifications or not the notification subscription menu further provides additional options allowing the user to assign other action task to a network application or to a particular type of notification from the network application. In response the output module is further configured to cause the assigned action task to be performed with respect to the corresponding network application or the particular type of notification thereof. For example these additional options may allow the user to specify the action of accessing a website of a subscribed network application upon detecting any notification or a specified type of notification from this subscribed network application.

Accordingly the output module will redirect or cause to redirect the user to the website of the subscribed network application when such notification is detected. For example user credentials may be stored in the notification subscription information to allow automatic login once redirected to the website. Other types of assigned action task available to the user for any network application or a particular type of notification thereof may include activating a client module of the network application dismissing the notification disabling the network application from sending any further notification etc.

As noted above the network application A network application B etc. may send a notification in an email text message or using other software message protocol such as a Representational State Transfer REST protocol. In one or more embodiments the input module is further configured to intercept based on the notification subscription information an email message text message or REST message sent to the user or the client module from the network application A network application B etc. For example originator recipient information and or user credential authentication information associated with these network applications and their notifications may be stored in the notification subscription information . Accordingly the notification subscription information may be used by the input module to intercept these messages en route to the user computer via the message repository A or message repository X .

Once intercepted the messages are analyzed by the input module to extract the embedded notification and identify a type of the notification. Based on the aforementioned assigned action task specified in the notification subscription information the input module may either pass the extracted notification to the aggregation module discard the extracted notification or initiate other actions in collaboration with the output module e.g. redirecting to the network application website activating the network application client disable any further notification from the network application etc. .

In one or more embodiments in lieu of the aforementioned email text message REST message and or local message the network application A network application B and or network application C may send the network application A notifications network application B notifications and or notifications of the network application C based on the publish subscribe framework. Publish subscribe is a messaging framework where senders of messages referred to as publishers do not specify the messages to be sent to specific receivers referred to as subscribers. Instead publish subscribe messages are published without knowledge of what if any subscribers there may be. Similarly subscribers express interest in one or more class of publish subscribe messages and only receive messages that are of interest without knowledge of what if any publishers there are.

In one or more embodiments in addition to the aforementioned email text message REST message and or local message the network application A network application B and or network application C may send at least a portion of the network application A notifications network application B notifications and or notifications of the network application C in a duplicate form based on the publish subscribe framework.

In contrast to typical use of the publish subscribe framework where the publisher has no knowledge of the subscribers and vice versa the publish subscribe notifications e.g. publish subscribe notifications A publish subscribe notifications B etc. from the network application A network application B and or network application C do specify the intended recipient i.e. user . Further the notification manager keeps track of the sender publisher of these publish subscribe notifications so that the user is not confused as to where each notification comes from. For example the notification manager tags the publish subscribe notifications A as being published by the network application A publish subscribe notifications B as being published by the network application B etc.

In one or more embodiments these publish subscribe notifications are sent using the publish subscribe API of the notification manager based on the publish subscribe framework. In one or more embodiments the publish subscribe API specifies the repository as the message repository where the network application A network application B and or network application C publish their notifications into. For example the network application A may publish its notifications into the repository as publish subscribe notifications A the network application B may publish its notifications into the repository as publish subscribe notifications B and so on and so forth. Accordingly the input module may retrieve subscribed notifications from these publish subscribe notifications in the repository according to the notification subscription information . For example and email address or username information associated with the publisher and subscriber may be stored in the notification subscription information . Accordingly they may be used by the input module to properly retrieve and organize these messages from the repository .

Specifically notifications from multiple network applications are published into and subscribed from a message repository i.e. repository controlled by a single software application i.e. the notification manager . In contrast with typical use of the publish subscribe framework all notifications from multiple network applications published into this message repository can only be subscribed by a single software application i.e. the notification manager .

In one or more embodiments the notification manager includes the aggregation module that is configured to aggregate the aforementioned subscribed notifications to generate a collection of aggregate notifications referred to as the aggregate notifications . In one or more embodiments the aggregate notifications include a combination of subscribed notifications obtained by the input module in different manners. The combination may include notifications published into the repository as well as notifications intercepted from email transmission text message transmission REST message transmission etc.

In one or more embodiments the aggregate notifications also includes attributes of the subscribed notifications such as time stamps network application IDs notification recipient IDs notification types assigned actions tasks directly published or indirectly intercepted etc. Accordingly the aggregate notifications may be presented to the user in various different orders e.g. based on time stamps network application types notification types etc. or combinations thereof as specified by the user based on such attributes. For example notifications from the network application A may be placed chronologically ahead of the notifications from the network application B within a same time period e.g. within the same week within the same day within the same hour etc. based on user specified network application priority. In addition each notification in the aggregate notifications may be annotated with associated attributes to highlight certain aspects as specified by the user based on such attributes. For example tax filing or account payable overdue notifications may be highlighted in red while routine reminders may not be highlighted. Further multiple collections of aggregate notifications including the aggregate notifications may exist in the repository when multiple users including the user use the notification manager simultaneously. Each of these multiple collections of aggregate notifications may be presented to the intended user among these multiple users based on the attributes of the subscribed notifications.

In one or more embodiments the method described in reference to may be practiced using one or more components of the system . Specifically the method described herein allows a user to subscribe notifications from multiple network applications that are delivered to the user as an aggregate notification list. For example the network applications may include an accounting application used by a business entity associated with the user a tax preparation application used by the business entity associated with the user a personal productivity application used by the user him herself etc. The notifications from these example network applications may notify the user regarding a status related to a business financial transaction tracked by the accounting application e.g. an invoice has been received a status related to a tax filing or a tax agency update tracked by the tax preparation application e.g. a tax filing deadline is approaching or a tax agency update has been received a status related to a personal event tracked by the personal productivity management application e.g. a friend s birthday alert etc.

Initially in Step notification subscription information is received from a user regarding a first network application a second network application and a third network application. In one or more embodiments notification subscription information is received using a notification subscription menu presented to the user within a single user interface. For example the notification subscription menu and the single user interface described in reference to may be used.

Specifically the notification subscription menu includes entries for each of the first second and third network applications. Selection entries for each network application allow the user to select one or more actions tasks to be performed upon detecting any notification or a particular type of notification from the network application. The action task may include whether i to include the notification in the aggregate notifications list ii to exclude the notification from the aggregate notifications list iii to direct the user to a website of the network application iv to activate a client module of the network application to run on a device of the user v to dismiss the notification vi to disable any future notification from the network application etc. For example the user s selection may indicate a request to a add from the first network application into the aggregate notifications list only payment or filing overdue notifications b add from the second network application into the aggregate notifications list all reminder notifications that are not monthly recurring and c redirect the user to a website of the third network application upon detecting any notification from the third network application.

In Step based on the notification subscription information notifications generated and sent by the first second and third network applications are obtained. In particular a first notification from the first network application notifies the user regarding a first status of the first network application a second notification from the second network application notifies the user regarding a second status of the second network application a third notification from the third network application notifies the user regarding a third status of the first network application.

In one or more embodiments one or more of these network applications use the publish subscribe framework to deliver notifications to the user. For example the first notification may be extracted from a publish subscribe message generated and published by the first network application. In one or more embodiments the publish subscribe API described in reference to above is used to publish the publish subscribe message containing the first notification. In particular the publish subscribe message is retrieved from a message repository specified by the publish subscribe API.

In one or more embodiments one or more of these network applications use the email or text message e.g. SMS MMS etc. network to deliver notifications to the user. For example the second notification may be extracted from an email or text message sent by the second network application to the user.

In one or more embodiments one or more of these network applications use a software messaging protocol e.g. REST etc. to deliver notifications to the user via respective client module s of the corresponding network application s . For example the third notification may be extracted from a REST message sent by the third network application to a client module thereof executing on a computing device of the user.

In one or more embodiments originator recipient information user credential authentication information and or any other relevant information associated with these network applications and their notifications are stored in the notification subscription information for detecting and obtaining the notifications.

As noted above in one or more embodiments the user may have specified particular types of notification as a filter. Based on the example described in Step the first notification and the second notification are analyzed to determine that the first status and the second status match the user specified criterion in the notification subscription information. For example the first status is determined as an payment overdue notification and the second status is determined as an annual filing reminder. Since these status match the user specified criteria the first notification and the second notification are considered as subscribed notifications and are to be included in the aggregate notification list.

In Step the first notification and the second notification among other subscribed notifications are aggregated to generate a collection of aggregate notifications. In one or more embodiments the notifications in the collection may be tagged with attributes of the subscribed notifications such as time stamps network application IDs notification recipient IDs notification types assigned actions tasks directly published or indirectly intercepted etc.

In Step the collection of aggregate notifications are presented to the user as an aggregate notification list within a single user interface on the user s computing device. In one or more embodiments the single user interface is web based. In other words the user uses a browser on his her computing device to access webpage where the aggregate notification list is presented. For example the webpage may be hosted by a notification management server operated by a third party notification management service to perform these method steps. In one or more embodiments the single user interface is associated with an application installed on the user s computing device. For example the local application may be a client module of a remote notification management application hosted by a third party notification management service to perform these method steps. In another example the local application is the notification management application that performs these method steps. Accordingly the aggregate notification list is presented to the user by this local application. In one or more embodiments whether using a web based user interface or a user interface of a local application the aggregate notification list may be displayed in a window or delivered as a voice message. In one or more embodiments the subscribed notifications in the aggregate notification list may be presented in an order based on the attributes of the subscribed notifications such as time stamps network application IDs notification recipient IDs notification types assigned actions tasks directly published or indirectly intercepted etc.

In Step based on the notification subscription information an additional task is performed upon detecting one or more of the first second and third notifications. In addition to including or excluding a notification in the aggregate notifications list additional task may include directing the user to a website of the network application activating a client module of the network application dismissing the notification disabling the network application from sending any further notification etc. Using the examples described in Step and Step the user specifies in the notification subscription information that the task to be performed upon detecting any notification from the third network application is to automatically re direct the user to a website of the third network application. Accordingly when the third notification is extracted from a REST message and checked against the notification subscription information to identify the assigned action task a browser is launched if not running already on the user s computing device to access a homepage of the third network application.

As shown in the screenshot A shows a title SUBSCRIBED NOTIFICATIONS FOR ALICE and includes the aggregate notification list which contains subscribed notifications recently received from multiple network applications that Alice has subscribed to receive notifications. The subscribed notifications are labeled in the aggregate notification list by the network applications i.e. network applications that generated them. Each network application label in the network applications has a text portion typically the name of the network application describing the network application and optionally a graphic portion not shown e.g. a logo or other icon representing various attributes of the network application annotating the network application. The screenshot A also includes action buttons that can be activated by Alice to add additional network application to her subscription list edit the profiles of the currently subscribed network application configure the notification settings and expand each entry of the subscribed notifications to read more information or use the network application by visiting a website of the network application or launching a local client application of the network application. For example when Alice clicks on one of the action buttons to add an additional subscription her mobile phone or desktop computer switches to a different screen represented by the screenshot B shown in .

As shown in the screenshot B shows a title Add Notification Subscriptions and includes three drop down menus. Specifically the drop down menu A shows currently subscribed network applications and allows Alice to type in the name or other identifier of a new network application to subscribe the drop down menu B allows Alice to select a particular type of notification she wished to receive for the new subscription the drop down menu C allows Alice to select additional actions tasks to perform other than including notifications in or excluding notifications from the aggregate notifications list .

Embodiments of the invention may be implemented on virtually any type of computer regardless of the platform being used. For example as shown in a computer system includes one or more computer processor s such as a central processing unit CPU integrated circuit or other hardware processor associated memory e.g. random access memory RAM cache memory flash memory etc. a storage device e.g. a hard disk an optical drive such as a compact disk drive or digital video disk DVD drive a flash memory stick etc. and numerous other elements and functionalities typical of today s computers not shown . The computer system may also include input means such as a keyboard a mouse or a microphone not shown . Further the computer system may include output means such as a monitor e.g. a liquid crystal display LCD a plasma display or cathode ray tube CRT monitor . The computer system may be connected to a network e.g. a local area network LAN a wide area network WAN such as the Internet or any other similar type of network with wired and or wireless segments via a network interface connection . Those skilled in the art will appreciate that many different types of computer systems exist and the aforementioned input and output means may take other forms. Generally speaking the computer system includes at least the minimal processing input and or output means necessary to practice embodiments of the invention.

Further those skilled in the art will appreciate that one or more elements of the aforementioned computer system may be located at a remote location and connected to the other elements over a network. Further embodiments of the invention may be implemented on a distributed system having a plurality of nodes where each portion of the invention may be located on a different node within the distributed system. In one embodiment of the invention the node corresponds to a computer system. Alternatively the node may correspond to a processor with associated physical memory. The node may alternatively correspond to a processor with shared memory and or resources. Further software instructions for performing embodiments of the invention may be stored on a non transitory computer readable storage medium such as a compact disc CD a diskette a tape or any other computer readable storage device.

While the invention has been described with respect to a limited number of embodiments those skilled in the art having benefit of this disclosure will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly the scope of the invention should be limited only by the attached claims.

