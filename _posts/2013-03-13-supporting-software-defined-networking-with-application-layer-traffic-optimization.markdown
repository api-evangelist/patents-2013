---

title: Supporting software defined networking with application layer traffic optimization
abstract: A network node for managing the control plane functions for a plurality of nodes within a software defined networking (SDN) domain, comprising a processor configured to collect a plurality of network information from the nodes, forward the network information based on a plurality of domain-specific policies, receive traffic optimization information based on the network information, and compute forwarding decisions for the nodes based on the traffic optimization information. In another embodiment, an Application Layer Traffic Optimization (ALTO) node, comprising a processor configured to import a first set of network information from one or more SDN nodes, aggregate the network information received from the SDN nodes, calculate a plurality of traffic optimization decisions based on the aggregated network information, and forward the traffic optimization decisions to the SDN nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09350671&OS=09350671&RS=09350671
owner: Futurewei Technologies, Inc.
number: 09350671
owner_city: Plano
owner_country: US
publication_date: 20130313
---
The present application claims priority to U.S. Provisional Patent Application No. 61 614 349 filed Mar. 22 2012 by Ting Zou et al. and entitled Supporting Software Defined Networking With Application Layer Traffic Optimization which is incorporated herein by reference as if reproduced in its entirety.

Modern communication and data networks comprise network nodes such as routers switches bridges and other devices that transport data through the network. Over the years the telecommunication industry has made significant improvements to the network nodes to support an increasing number of protocols and specifications standardized by the Internet Engineering Task Force IETF . Creating and coupling the complex network nodes to form networks that support and implement the various IETF standards e.g. virtual private networks requirements has inadvertently cause modern networks to become labyrinth like and difficult to manage. As a result vendors and third party operators continually struggle to customize optimize and improve the performance of the interwoven web of network nodes.

Software defined networking SDN is an emerging network technology that addresses customization and optimization concerns within convoluted networks. SDN simplifies modern networks by decoupling the data forwarding capability e.g. the data plane from routing resource and other management functionality e.g. the control plane previously performed in the network nodes. Network nodes that support SDN e.g. that are SDN compliant may be configured to implement the data plane functions while the control plane functions may be provided by a SDN controller. Open Application Programming Interface API services such as the OpenFlow protocol may manage the interactions between the data plane and control plane and allow for the implementation of non vendor specific combinations of networking nodes and SDN controllers within a network. As a result SDN in conjunction with an Open API service may provide numerous benefits to modern networks that include increased network virtualization flexible control and utilization of the network and customization of networks for scenarios with specific requirements.

Modern networks such as data center networks enterprise networks and carrier networks may gradually adopt SDN because of the numerous potential benefits. The deployment of SDN into large scale distributed networks may be implemented incrementally. In other words a network administrator for a large scale network may partition the entire network into multiple smaller sub networks. Some of the sub networks may be SDN compatible while other sub networks may not be SDN compatible. Unfortunately network services such as application layer traffic optimization ALTO may encounter integration problems when implementing SDN within a large scale network. More specifically integrating SDN with ALTO may produce problems that include but are limited to privacy preservation granularity of information collection and exchange and redundant processing. Therefore properly integrating SDN with different network services is important in maintaining and improving network performance.

One method to integrate ALTO and SDN is to have an ALTO node directly collect network information from network nodes within a network. As discussed above SDN controllers may perform control plane functions that include collecting information for network topology and providing routing information. As a result the network may inadvertently use both the SDN controllers and an ALTO node to collect redundant network information. Moreover the network may comprise a substantial number of network nodes. To avoid having network nodes maintain a long history of network information the ALTO node may frequently collect network information from the network nodes. The frequent collection of network information may generate a massive amount of network information that may overload the ALTO node. Therefore configuring the ALTO node to directly collect network information from network nodes may cause processing bottlenecks and network inefficiencies.

From a security standpoint privacy concerns may also arise when the ALTO node directly collects network information from network nodes. When a network is partitioned into sub networks one or more sub networks may be owned by third party content providers or virtual network providers. In such a case the third party content providers or virtual network providers may set privacy policies that prevent internal network information regarding the sub networks from being exported to external entities such as an ALTO node. As such the ALTO node may be unable to extract network information directly from the network nodes unless the ALTO node violates the privacy policies. For the ALTO node to receive network information sub networks may need to aggregate and filter out private network information before sending the network information to the ALTO node. Thus the ALTO node may need to communicate with SDN controllers that manage the sub networks to receive aggregated and filtered network information. Unfortunately the current SDN and ALTO environment does not provide a mechanism to facilitate the transfer of aggregated and filtered network information between the SDN controllers and the ALTO node. Hence a solution is needed to efficiently integrate SDN and ALTO within a network.

In one embodiment the disclosure includes a network node for managing the control plane functions for a plurality of nodes within a SDN domain comprising a processor configured to collect a plurality of network information from the nodes forward the network information based on a plurality of domain specific policies receive traffic optimization information based on the network information and compute forwarding decisions for the nodes based on the traffic optimization information.

In yet another embodiment the disclosure includes an ALTO node comprising a processor configured to import a first set of network information from one or more SDN nodes aggregate the network information received from the SDN nodes calculate a plurality of traffic optimization decisions based on the aggregated network information and forward the traffic optimization decisions to the SDN nodes.

In yet another embodiment the disclosure includes a method for optimizing traffic using a SDN node and an ALTO node wherein the method comprises receiving a request for network resources from a node obtaining a plurality of traffic optimization information from the ALTO node negotiating one or more paths with a second SDN node using the traffic optimization information received from the ALTO node constructing the paths and sending a response to the node that indicates the node may forward packets via one of the paths.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques described below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

Disclosed herein are a method an apparatus and a system that supports SDN with ALTO. A network may be separated into three logical layers 1 the network node logical layer 2 the SDN controller logical layer and 3 the ALTO node logical layer. Network nodes within the network typically participate in the network node logical layers. The SDN controller logical layer may comprise one or more SDN controllers. Each SDN controller may manage a group of networking nodes and or be responsible for collecting network information from the network nodes. The SDN controller may define a set of aggregation and or filtering policies which may be applied to network information collected from network nodes. After aggregating and or filtering network information the SDN controller may export the network information to the ALTO node logical layer via a push model or a pull model. The ALTO node logical layer may comprise one or more ALTO nodes. The ALTO nodes may aggregate network information exported from the SDN controllers and perform traffic optimization decisions for the network. The ALTO nodes may then feedback the traffic optimization decisions to the SDN controller logic layer where the SDN controllers may optimize traffic based on the traffic optimization decisions calculated by the ALTO nodes.

As shown in network may comprise network nodes e.g. SDN compliant network nodes located within a plurality of SDN domains an ALTO node one or more non SDN compliant network nodes and a plurality of links . Links may be used to interconnect nodes within network such as network nodes ALTO node SDN controllers and non SDN compliant network nodes . Links may couple the different nodes directly using fiber optic links electrical links wireless links or indirectly using a logical connection or physical links with intervening nodes. Links may comprise a single link a series of parallel links a plurality of interconnected nodes or various combinations thereof used to transport data within network .

Network may be configured to support a variety of network applications such as network virtualization peer to peer file sharing client server file sharing real time communication and on demand media streaming. Network may use the ALTO node and SDN controllers to construct traffic optimized paths to support the network applications. Some of these network applications may be SDN compliant applications that locate and directly communicate with SDN controllers . Other network applications may be non SDN compliant network applications that indirectly communicate with SDN controllers via application protocol datagrams e.g. user datagram protocol UDP . The application protocol diagrams may specify requirements for network resources e.g. video data audio data and text data for the non SDN compliant network applications. The application protocol datagrams may be encoded such that the application protocol datagrams indicate that the packets are SDN specific requests. The application protocol datagrams may be transmitted to one or more network nodes which may subsequently forward the application protocol datagrams to SDN controllers . Once a SDN controller receives the application protocol datagram the SDN controllers calculate data paths for the non SDN compliant network applications as discussed in . Packets transmitted for non SDN compliant network applications may be transmitted in a best effort fashion e.g. as best effort packets .

Network may be partitioned into a plurality of sub networks to reduce the complexity of managing network . To reduce the complexity of managing network each of the sub networks may be managed independently to some degree. Some or all of the sub networks may be managed by SDN controllers located within SDN domains . The SDN domains may generally be referred to as SDN domains throughout this disclosure. A SDN domain may be a sub network of network that comprise a plurality of network nodes coupled to a SDN controller . The SDN domain may span across a large geographical area or encompass a large number of network nodes . The SDN domain may be further divided into two or more sub networks to reduce the complexity of managing the SDN domain . In another embodiment the SDN domain may be one or more data center networks. As shown in SDN domain may be connected to other SDN domains and or non SDN compliant network nodes via links .

Within each SDN domain a SDN controller may be configured to oversee the routing and other management functions e.g. the control plane for network nodes within the SDN domain . The SDN controller may not perform data plane functions such as forwarding data traffic to a selected destination. The SDN controller may be a generalized network controller configured to control the network nodes by performing control path or control plane functionality such as drawing a network map for the SDN domain and performing resource management functions. Moreover the SDN controller may be able to produce routing tables and or flow tables that defines how to route incoming packets within the SDN domain . In one embodiment the SDN controller may be integrated within a network operating system.

As part of the control plane functionality the SDN controller may be configured to collect fine grain network information from network nodes within the SDN domain . Fine grain network information may pertain to any of the information within the SDN domain which may include but are not limited to the SDN domain topology link capacity within the SDN domain available bandwidth on each link with the SDN domain and status of links that belong to the SDN domain but are connected to network nodes and or non SDN compliant network nodes external to the SDN domain . In one embodiment the fine grain network information may be information collected at the packet level e.g. Open System Interconnection OSI layer 3 . SDN controllers may collect fine grain network information via a southbound API service such as the OpenFlow protocol. SDN controllers may use the fine grain network information to implement data forwarding decisions such as calculating flow tables within the SDN domain .

When a network administrator and or operator divides network into multiple SDN domains the network administrator and or operator may choose to implement different privacy policies within each SDN domain . For example a network administrator may dedicate an SDN domain to a customer to manage network resources for the customer. Specific fine grain network information such as the customer s network topology may not be disclosed to an external node such as an ALTO node . A SDN controller may be further configured to define domain specific policies for network information imported from network nodes aggregate the fine grain network information collected from network nodes and export the aggregated network information to external nodes that avoid privacy violations. The domain specific policies managed by a SDN controller may not be made public and other SDN controllers within other SDN domains and or external nodes e.g. ALTO node may not be aware of the existence of the domain specific policies. The domain specific policies managed by a SDN controller may include but are not limited to policies for allocating resources aggregating and presenting network information controlling the granularity of network information exported to the ALTO node and determining which external nodes may receive the aggregated network information.

A SDN controller may be configured to directly communicate with network nodes via a southbound Open API service such as the OpenFlow protocol. Network nodes may be any physical and or virtual network device that receives and transmits data through the SDN domain . Network nodes may comprise switches routers bridges or any other devices compatible with the Open API services. For example network nodes may be configured according to the OpenFlow protocols as defined in Rev. 1.2 for the OpenFlow specification of the OpenFlow Organization published December 2011 which is incorporated herein as if reproduced in its entirety. Furthermore network nodes may also include network devices that are compliant with other versions of the OpenFlow protocols e.g. Rev. 1.0 and Rev. 1.1 . In one embodiment network nodes may be incompatible with other versions of the OpenFlow protocols. For example one network node may support the OpenFlow protocol version 1.0 but not later versions while another network node may support the OpenFlow protocol version 1.2 but not earlier versions. Typically network nodes within network may be under the control of one SDN controller .

As discussed above implementing SDN within networks may be done incrementally and thus a portion of network may not be SDN capable. illustrates that network may comprise at least one non compliant SDN network node . Non compliant SDN network nodes may be substantially similar to network nodes except that the non compliant SDN network nodes may not be able to communicate with an SDN controller using a southbound Open API service. The non compliant SDN network nodes may be located outside the SDN domains and may not be managed by a SDN controller . illustrates that the non compliant SDN network nodes may be coupled to ALTO node . The non compliant SDN network nodes may be configured to communicate and provide network information directly to an ALTO node for traffic optimization.

The ALTO node may be any network device such as an ALTO server configured to implement the ALTO protocol as defined in the IETF publication draft ietf alto protocol 13 published Sep. 7 2012 which is incorporated herein as if reproduced in its entirety. illustrates that the ALTO node may communicate with SDN controllers and non compliant SDN network nodes . The ALTO node may communicate with SDN controllers via a northbound Open API protocol to collect network information and or transmit traffic optimization decisions. The northbound Open API protocol may be a SDN ALTO protocol that accommodates message exchanges between the ALTO node and the SDN controllers . The ALTO node may collect network information from SDN controllers using a pull model and or push model. The pull and push model will be discussed in more detail in .

The ALTO node may be responsible for calculating traffic optimization decisions for network when supporting network applications. The traffic optimization decisions may be for some or all of the sub networks within network . For example the ALTO node may calculate traffic optimization decisions for some of the SDN domains or for all of the SDN domains within network . The ALTO node may calculate traffic optimization decisions pursuant to requests by SDN controllers network nodes that operate as network path end points and or non compliant SDN network nodes that operate as network path end points. The traffic optimization decisions may modify network resource consumption patterns while maintaining and improving network performance. The traffic optimization decisions may produce network maps and or cost maps as defined in the IETF publication draft ietf alto protocol 13. For instance cost maps may indicate the path costs transport data for a path that spans across multiple SDN domains.

The ALTO node may also be responsible for aggregating network information exported from the SDN controllers as well as non compliant SDN network nodes . As discussed above the SDN controller may export filtered and or aggregated network information based on domain specific policies. The ALTO node may be configured to obtain the filtered and or aggregated network information from the SDN controllers and obtain unfiltered and or un aggregated network information from non compliant SDN network nodes . In one embodiment the unfiltered and or un aggregated network information from non compliant SDN network nodes may be located in a network operation center. After obtaining network information from the SDN controllers and non compliant SDN network nodes the ALTO node may aggregate the network information to form a complete view of network . In other words the ALTO node may combine the received network information to generate network maps and cost maps for network . SDN controllers may obtain the cost maps from ALTO and apply the cost maps when making data forwarding decisions.

As discussed above the SDN controllers may determine the granularity of the network information exported to the ALTO node . For example the ALTO node may receive coarse grain network information e.g. aggregated network information that pertains to network information that generally describes the SDN domain e.g. at the SDN logical layer level . Coarse grain network information may include large scale network topology network information connectivity between SDN domains bandwidth capacity of SDN domains and aggregated volume network information for SDN domains . Alternatively the ALTO node may receive fine grain network information e.g. un aggregated network information that pertains to network information within the SDN domain e.g. at the network node logical layer level . After the SDN controller obtains the cost maps from the ALTO node SDN controllers could leverage the cost maps with greater detail about their own domains and use the more detailed cost maps to generate more detailed traffic optimization decisions when compared to exporting coarse grain network information to the ALTO node . Exporting coarse grain network information rather that fine grain network information may prevent the overloading of the ALTO node with network information.

Recall that SDN controllers may be responsible for managing a specific SDN domain . Although a SDN controller may receive network information within a specific SDN domain the SDN controller may not receive network information that pertains to other SDN domains. Thus a SDN controller may not be aware of the status of other SDN domains . However in order to allocate the resources to satisfy certain network services e.g. on demand bandwidth quality of services requirements an SDN controller may involve other SDN controllers to create network paths that traverse multiple SDN domains . Using as an example one network path end point may be located in SDN domain while the other network path end point may be located in SDN domain . The path for the network path end points may span across multiple SDN domains . The ALTO node may use the exported network information to calculate optimal paths across the multiple SDN domains . In another embodiment SDN interconnection protocols may be used between SDN controllers to obtain network information that relates to other SDN domains .

Prior to transmitting data messages from the SDN logical layer to the ALTO node logical layer each of the SDN controllers may communicate with the ALTO node to negotiate the types of network information that may be provided to the ALTO node . The types of network information that may be provided may include but are not limited to network node network information network topology network information network link network information network routing network information and path network information. The network node network information may include network and or geographical location of the network nodes within a SDN domain. Network topology network information may include a SDN domain level e.g. fine grain network information topology and or an SDN intra domain topology e.g. coarse grain network information . The domain specific policies within SDN controllers may aggregate and export detailed intra domain topology to the ALTO node . The network link network information may include network information such as link usages state link congestion delay and path costs within an SDN domain. The network routing network information may provide routing for flows defined in flow tables generated by SDN controllers . The path network information may provide path initiation and status managed by SDN controllers . The granularity of the different types of network information exported to the ALTO node may be specified using domain specific policies within SDN controllers .

SDN controllers and ALTO node may also negotiate services that the ALTO node may provide to SDN controllers . The ALTO node may generate network maps and cost maps at the granularity of SDN domains e.g. coarse grain decisions and transmit the information using control message . Another service that may be negotiated may be the selection of one or multiple paths among a set of paths at the granularity of SDN domains e.g. coarse grain decisions to forward packets. Using as an example multiple paths may span across SDN domains . The ALTO node may select one or more of the paths when calculating traffic optimization decisions to route traffic from network node within SDN domain to a network node within SDN domain . In one embodiment the selected paths may have a defined priority and or failover definitions.

After negotiating the ALTO services and the types of network information provided to the ALTO nodes data messages may be extracted from the SDN logical layer via the pull model and or the push model. The pull model and or push model may be subject to the aggregation and privacy policies defined for each SDN domain. In a pull model an ALTO node may proactively query one or more SDN controllers to obtain network information. For example the ALTO node may send a request message to one or more SDN controllers that requests for network information. The ALTO node may send the request message in time intervals ranging from minutes to hours. In one embodiment a pull model may be used when no privacy policies are implemented in a sub network of network . Using as an example an SDN domain could be dedicated to a certain customer where usage of the SDN domain may be provided through privileged client access. In such a case the ALTO node for the network may be unable to collect network information because of privacy policies. Even if the ALTO node is configured to automatically pull network information directly from network nodes the SDN domain may disallow the ALTO node because customers who own and manage the SDN domain may enforce stringent privacy policies that disallow exporting network information externally.

ALTO nodes within the ALTO logic layer may also use a push model to extract data messages from the SDN logical layer . For a push model SDN controllers may proactively update one or more ALTO nodes with aggregated and filtered network information. For example the SDN controllers may automatically push the network information to ALTO nodes after aggregating and filtering network information. The SDN may push the current network information after a certain amount of time has elapsed. The time intervals may be in the range of minutes to hours. The SDN controllers may push the current network information to the ALTO nodes without receiving a request message from the ALTO nodes. The push model may be used when privacy policies are implemented in a sub network of network . Both the pulling and or pushing of data messages may be implemented automatically and without intervention from network administrators and or operators.

As soon as the ALTO node logical layer receives the data messages ALTO nodes may use the network information from data messages to calculate and produce traffic optimization information such as network maps and cost maps using the ALTO protocol as described in the IETF publication draft ietf alto protocol 13. Afterwards the ALTO nodes may transmit routing and traffic optimization information e.g. SDN specific network maps and cost maps that pertains to a specific SDN controller and or a specific SDN domain. For example in the SDN controller for SDN domain may be interested in obtaining internal network information of other SDN domains and . The ALTO node may tailor the routing and traffic optimization information sent to the SDN controller for SDN domain to include internal network information of the SDN domains and . Once the SDN controllers receive control messages the routing path may not be finalized until SDN controllers propagate flow tables for flows that pertain to control messages .

Method may start at block and collect network information from managed network nodes. The collected network information may be fine grain network information that pertains to an SDN domain. After collecting the network information method may move to block . At block method may implement domain specific policies to filter out private network information collected from managed network nodes. When SDN domains are owned by third party content providers or virtual network providers private network information may not be exported to external entities. The third party content providers or virtual network providers may create domain specific policies to filter out private network information. Method may then progress to block and aggregate the network information collected from managed network nodes based on domain specific policies. Method may vary the granularity of information exported to an ALTO node based on the domain specific policies. Method may continue to block and forward the network information based on domain specific policies. Method may forward the network information to an ALTO node and then continue to block . At block method may receive cost maps and other traffic optimization information from the ALTO node. The cost maps and other traffic optimization information may be specific to the SDN controller and or SDN domain. Method may then continue to block and calculate paths based on the received cost maps and other traffic optimization information. Method may produce flow tables and implement other data forwarding decisions based on the received cost maps and other traffic optimization information. Afterwards method stops.

Method may start at block and receive a traffic optimization request for network resource from a managed network node. The traffic optimization request may include one or more destination node and network requirements e.g. bandwidth for the network resources. The managed network node may be a network node managed by the SDN controller and may be designated the source node for a network application. After receiving a traffic optimization request method may move to block and obtain SDN specific cost maps and other traffic optimization information from an ALTO node. The SDN specific cost maps may provide network information of other SDN domains. Method may then move to block and negotiate one or more paths with other SDN controllers using the SDN specific cost map and other traffic optimization information. Negotiating amongst SDN controllers may occur when the paths span across multiple SDN domains. Method may then progress to block and send a traffic optimization response to the managed network node. The traffic optimization response may provide the forwarding information for the managed network node that sent the traffic optimization request. The managed network node may subsequently forward data to the destination node. After method completes block method stops.

The schemes described above may be implemented on any general purpose computer system such as a computer or network component with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. illustrates a schematic diagram of a general purpose computer system suitable for implementing one or more embodiments of the methods disclosed herein such as the SDN controller the network node and the non SDN compliant network nodes . The computer system includes a processor which may be referred to as a central processing unit or CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM transmitter receiver and input output I O device . Although illustrated as a single processor the processor is not so limited and may comprise multiple processors. The processor may be implemented as one or more CPU chips cores e.g. a multi core processor field programmable gate arrays FPGAs application specific integrated circuits ASICs and or digital signal processors DSPs and or may be part of one or more ASICs. The processor may be configured to implement any of the schemes described herein such as method and method .

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if the RAM is not large enough to hold all working data. The secondary storage may be used to store programs that are loaded into the RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. The ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of the secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both the ROM and the RAM is typically faster than to the secondary storage . The secondary storage ROM and or RAM may be non transitory computer readable mediums and may not include transitory propagating signals. Any one of the secondary storage ROM or RAM may be referred to as a memory or these modules may be collectively referred to as a memory. Any of the secondary storage ROM or RAM may be used to store forwarding information network information and traffic optimization information as described herein. The processor may generate forwarding decisions and traffic optimization information in memory and or retrieve the forwarding decisions and traffic optimization information from memory.

The transmitter receiver may serve as an output and or input device of the SDN controller the network node and the non SDN compliant network nodes . For example if the transmitter receiver is acting as a transmitter it may transmit data out of the computer system . If the transmitter receiver is acting as a receiver it may receive data into the computer system . The transmitter receiver may take the form of modems modem banks Ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA global system for mobile communications GSM long term evolution LTE worldwide interoperability for microwave access WiMAX and or other air interface protocol radio transceiver cards and other well known network devices. The transmitter receiver may enable the processor to communicate with an Internet or one or more intranets. I O devices may include a video monitor liquid crystal display LCD touch screen display or other type of video display for displaying video and may also include a video recording device for capturing video. I O devices may also include one or more keyboards mice or track balls or other well known input devices.

It is understood that by programming and or loading executable instructions onto the computer system at least one of the processor the RAM and the ROM are changed transforming the computer system in part into a particular machine or apparatus having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality can be implemented by loading executable software into a computer which can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an application specific integrated circuit ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 7 percent . . . 70 percent 71 percent 72 percent . . . 97 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

