---

title: Caching electronic document resources in a client device having an electronic resource database
abstract: An electronic document references one or more electronic document resources stored on a host device. The host device may indicate in the electronic document that an electronic document is cacheable by a client device. When an electronic document resource is identified as cacheable by the client device, the client device caches the electronic document resource in a database stored in a computer-readable medium of the client device. The client device may also generate an electronic document resource catalog that identifies those electronic document resources that are cached in the database. When the client device next requests the electronic document from the host device, the client device may transmit the electronic document resource catalog to the host device. Upon receiving the electronic document resource catalog, the host device may modify the electronic document so that the electronic document references the electronic document resources cached in the database of the client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09086978&OS=09086978&RS=09086978
owner: Google Inc.
number: 09086978
owner_city: Mountain View
owner_country: US
publication_date: 20130924
---
This application claims the benefit of priority to U.S. Provisional Patent Application No. 61 332 435 entitled CACHING ELECTRONIC DOCUMENT RESOURCES IN A CLIENT DEVICE HAVING AN ELECTRONIC RESOURCE DATABASE and filed May 7 2010 the entire disclosure of which is incorporated herein by reference. This application claims the benefit of priority to U.S. patent application Ser. No. 13 102 405 entitled CACHING ELECTRONIC DOCUMENT RESOURCES IN A CLIENT DEVICE HAVING AN ELECTRONIC RESOURCE DATABASE and filed May 6 2011 the entire disclosure of which is incorporated herein by reference.

An electronic document such as a webpage for a website generally refers to one or more external resources which may be quite large for displaying the electronic document. For example the electronic document may refer to image files audio files video files formatting files or other electronic document resources. Moreover an electronic document may refer to another electronic document as an electronic document resource. In addition a host device such as a web server may store the electronic document resources and when a client device requests the electronic document the host device may transmit the electronic document and the electronic document resources to the client device.

As transmitting the electronic resources to a client device each time the electronic document is requested may be time consuming and resource expensive a host device may request that the client device cache the electronic resources temporarily on a computer readable medium local to the client device. Examples of electronic document resources that may be cached by the client device include Javascript files Cascading Style Sheets CSS files image files or other types of files. In general the host device may request that the client device cache the electronic document resources by declaring the electronic document resources as external resources and using special commands in the response to the client device. For example in the Hypertext Transfer Protocol HTTP a block of data at the beginning of the response to the client device called a header may provide several functions for controlling the caching of an electronic document resource. This header is known in the art as the Cache Control header and may have several different elements called directives that may specify the caching behavior. For example the cache control directives may specify which electronic document resources should be cached the duration of the cached electronic document resource whether to validate the cache for the electronic document resource and other cache control directives.

However there are several problems with the traditional mechanism of simply declaring an electronic document resource as an external resource and relying on the use of the Cache Control header and cache control directives. Moreover these problems are especially exacerbated when the client device is a mobile device such as a cellular phone personal digital assistant smartphone or other mobile device. One problem is that the cache on a mobile device is typically very limited in capacity. Because a mobile device is often capacity constrained available storage capacity is highly guarded and mobile devices often devote few resources to transient objects like a cache. Hence on a mobile device having a typical cache a cached electronic resource may be replaced or removed flushed within minutes simply through use of the web browser to view electronic documents such as web pages requiring a high number of electronic document resources to display the electronic document or in viewing electronic documents relying on electronic document resources that each need a large amount of the cache of the mobile device. In addition a traditional cache may be shared among websites or web pages and a web page or a website may inadvertently or even intentionally flush one or more cached electronic document resources for other websites or web pages from the cache.

Another problem is that the communication channels that a mobile device may use to communicate with a host device often have a limited amount of space bandwidth by which to transmit electronic documents and electronic document resources. Moreover where an electronic document relies on a large number of electronic document resources the client device and the host device may transmit a large volume of requests and responses. Because there is a delay between the time the client device requests an electronic document resource and the time the host device transmits the electronic document resource called latency a large number of requests and responses can lead to a high latency. A high latency is undesirable because it degrades the user experience of viewing the electronic document on the mobile device. Hence a reduced latency between the mobile device and the host device would be desirable.

A system for caching previously identified electronic document resources is provided. The system may include a non transitory computer readable memory and one or more processors coupled to the memory. The one or more processors may be configured to receive an electronic document the electronic document identifying a plurality of electronic document resources and a plurality of cache identifiers. Each cache identifier may be unique for a corresponding electronic document resource from the plurality of electronic document resources and each cache identifier may identify whether the corresponding electronic document resource is cacheable.

In addition the one or more processors may be configured to cache one or more electronic document resources selected from the plurality of electronic document resources in the memory based on the corresponding cache identifier of the selected one or more electronic document resources.

In another aspect of the disclosed system the one or more processors are further configured to generate an electronic resource catalog based on the one or more cached electronic document resources.

In a further aspect of the disclosed system the one or more processors are further configured to provide the electronic resource catalog to identify which of the electronic document resources have been cached from the plurality of electronic document resources.

In yet another aspect of the disclosed system the one or more processors are further configured to transmit a request for the electronic document the request including the electronic resource catalog receive a response including the electronic document and retrieve a cached electronic document resource from the one or more cached electronic document resources to display the electronic document based on the response.

In yet a further aspect of the disclosed system a cached electronic document resource is cached for a predetermined period of time.

In another aspect of the disclosed system a cache identifier from the plurality of cache identifiers is generated based on its corresponding electronic document resource.

This disclosure also provides for a method for caching previously identified electronic document resources. In one embodiment the method may include receiving with one or more processors an electronic document the electronic document identifying a plurality of electronic document resources and a plurality of cache identifiers. Each cache identifier for the plurality of cache identifiers may be unique for a corresponding electronic document resource from the plurality of electronic document resources and each cache identifier may identify whether the corresponding electronic document resource is cacheable. The method may further include caching with the one or more processors one or more of the electronic document resources selected from the plurality of electronic document resources in a memory based on the corresponding cache identifier of the selected one or more electronic document resources.

In another aspect of the disclosed method the method may include generating an electronic resource catalog based on the one or more cached electronic document resources.

In a further aspect of the disclosed method the method may include the electronic resource catalog to identify which of the electronic document resources from the plurality of electronic document resources have been cached.

In yet another aspect of the disclosed method the method may include transmitting a request for the electronic document the request including the electronic resource catalog receiving a response including the electronic document and retrieving a cached electronic document resource from the one or more cached electronic document resources to display the electronic document based on the response.

In yet a further aspect of the disclosed method a cached electronic document resource is cached for a predetermined period of time.

In another aspect of the disclosed method a cache identifier from the plurality of cache identifiers is generated based on its corresponding electronic document resource.

This disclosure also provides for a system for establishing a cache of electronic document resources. The system may include a non transitory computer readable medium storing an electronic document for display by a client device the electronic document identifying a plurality of electronic document resources used in the electronic document. The system may also include one or more processors in communication with the non transitory computer readable medium the one or more processors being configured to generate a plurality of cache identifiers. Each cache identifier of the plurality of cache identifiers may be unique for a corresponding electronic document resource from the plurality of electronic document resources and each cache identifier is based on its corresponding electronic document resource. The one or more processors may be further configured to insert the plurality of cache identifiers into the electronic document and transmit the electronic document and the plurality of electronic document resources to the client device.

In another aspect of the disclosed system the one or more processors may be further configured to receive a request for the electronic document wherein the request comprises an electronic resource catalog that identifies whether a given electronic document resource from the plurality of electronic document resources has been cached by the client device determine whether the given electronic document resource has been cached by referring to the electronic resource catalog and modify the electronic document to refer to the given electronic document resource that has been cached when the given electronic document resource is determined as having been cached by the client device.

In a further aspect of the disclosed system the one or more processors may be further configured to receive a request for the electronic document wherein the request comprises an electronic resource catalog that identifies whether a given electronic document resource from the plurality of electronic document resources has been cached by the client device determine whether the given electronic document resource has been cached by referring to the electronic resource catalog and transmit the given electronic document resource when the electronic document resource is determined as not having been cached by the client device.

In yet another aspect of the disclosed system the one or more processors may be further configured to receive a replacement electronic document resource to replace a selected electronic document resource from the plurality of electronic document resources generate a replacement cache identifier for the replacement electronic document resource the replacement cache identifier uniquely identifying the replacement electronic document resource and replace a cache identifier selected from the plurality of cache identifiers with the replacement cache identifier.

In yet a further aspect of the disclosed system the one or more processors may be further configured to receive a request for the electronic document wherein the request comprises an electronic resource catalog that identifies whether the replacement electronic document resource has been cached and transmit the replacement document resource when the electronic resource catalog identifies that the replacement electronic document resource has not been cached.

In another aspect of the disclosed system the electronic resource catalog comprises a cache identifier from the plurality of cache identifiers.

This disclosure further provides for a method for establishing a cache of electronic document resources. The disclosed method may include storing in a non transitory computer readable medium an electronic document for display by a client device the electronic document identifying a plurality of electronic document resources used in the electronic document and generating with one or more processors a plurality of cache identifiers. Each cache identifier of the plurality of cache identifiers may be unique for a corresponding electronic document resource from the plurality of electronic document resources and each cache identifier may be based on its corresponding electronic document resource. The method may further include inserting with the one or more processors the plurality of cache identifiers into the electronic document and transmitting with the one or more processors the electronic document and the plurality of electronic document resources to the client device.

In another aspect of the disclosed method the method may include receiving with the one or more processors a request for an electronic document wherein the request comprises an electronic resource catalog that identifies whether a given electronic document resource from the plurality of electronic document resources has been cached by the client device determining with the one or more processors whether the given electronic document resource has been cached by referring to the electronic resource catalog and modifying with the one or more processors the electronic document to refer to the given electronic document resource that has been cached when the given electronic document resource is determined as having been cached by the client device.

In a further aspect of the disclosed method the method may include receiving with the one or more processors a request for an electronic document wherein the request comprises an electronic resource catalog that identifies whether a given electronic document resource from the plurality of electronic document resources has been cached by the client device determining with the one or more processors whether the given electronic document resource has been cached by referring to the electronic resource catalog and transmitting with the one or more processors the given electronic document resource when the given electronic document resource is determined as not having been cached by the client device.

In yet another aspect of the disclosed method the method may include receiving with the one or more processors a replacement electronic document resource to replace a selected electronic document resource from the plurality of electronic document resources generating with the one or more processors a replacement cache identifier for the replacement electronic document resource the replacement cache identifier uniquely identifying the replacement electronic document resource and replacing with the one or more processors a selected cache identifier from the plurality of cache identifiers with the replacement cache identifier.

In yet a further aspect of the disclosed method the method may include receiving a request for the electronic document wherein the request comprises an electronic resource catalog that identifies whether the replacement electronic document resource has been cached and transmitting the replacement document resource when the electronic resource catalog identifies that the replacement electronic document resource has not been cached.

In another aspect of the disclosed method the electronic resource catalog comprises a cache identifier from the plurality of cache identifiers.

The client devices may request one or more electronic documents from the host device . The electronic documents may be any type of electronic documents such as word processing document spreadsheet documents multimedia documents or any other type of electronic document now known or later developed. Moreover the electronic documents may be Internet related documents such as Hypertext Markup Language HTML documents Javascript documents CSS documents Extensible Markup Language XML documents or any other Internet related documents.

In one implementation the host device may be a search engine provider operative to provide a website for a search engine for access by the client devices . In another implementation the host device may be an online shopping provider operative to provide a website for an online shopping forum for access by the client devices . Other implementations are also possible such as a website for a beverage vendor a website for a clothing vendor or other type of website. The host device may also provide an internal website such as an intranet website for a corporation or other employer for access by employees. In any implementation the website for the host device may refer to one or more electronic document resources such as multimedia files Internet related files or any other type of electronic document resources for displaying the one or more electronic documents hosted by the host device .

The host device and the client devices may communicate through a network . For example one or more client devices may transmit a request for one or more electronic documents to the host device . In response the host device may transmit the one or more electronic documents to the client devices . Moreover the host device may transmit one or more electronic document resources to the client devices for displaying the one or more electronic documents. As explained below the client devices may also transmit an electronic document resource catalog such as a cookie to the host device via the network . Based on the contents of the electronic document resource catalog the host device may limit the electronic document resources that it transmits to the one or more client devices . The contents of the electronic document resource catalog and the manner in which the host device may limit the electronic document resources that are transmitted to the client devices is explained with reference to .

Although illustrates that the client devices are in communication with a single host device the client devices may be in communication with multiple host devices not shown via the network . Furthermore the client devices may be in communication with each other. In one implementation a client device may be a host device . Similarly in another implementation a host device may be a client device . In addition a single host device may include multiple host devices and a single client device such as a client device may include multiple client devices.

In one implementation the server resource database may include multiple electronic document resources and multiple electronic documents . The electronic document or the electronic document may refer to any one or none of the electronic document resources . As discussed with reference to the electronic documents may contain formatting or text that references the electronic document resources .

The processor is operative to prepare a cache identifier for one or more of the electronic document resources for embedding in the one or more electronic documents . The cache identifier may be operative to identify whether an electronic document resource is cacheable by the client device . Moreover the cache identifier may be operative to uniquely identify the electronic document resource and distinguish a first electronic document resource from a second electronic document resource. Furthermore depending on how the processor generates the cache identifier the cache identifier may identify whether an electronic document resource has been updated or revised since the last time the processor generated a cache identifier for the electronic document resource.

The processor may prepare a cache identifier for an electronic document resource based on whether the electronic document resource is considered static or dynamic content. For example static content may include content that is not expected to change over a predetermined period of time or is not expected to change frequently and dynamic content may include content that is expected to change over a predetermined of time or is expected to change frequently. Moreover the processor may receive a selection or other instruction to prepare a cache identifier for a particular type of electronic document resource or a selection or other instruction to prepare a cache identifier for a particular electronic document resource. The host device may employ other selection criteria for preparing cache identifiers for the one or more electronic document resources .

A cache identifier may be any type of identifier that identifies an electronic document resource. In one implementation the processor may generate a cache identifier in the form of r ID fingerprint for each of the electronic document resources . In another implementation each of the electronic document resources may have a unique cache identifier. In yet another alternative implementation the processor may generate a single cache identifier for all of the electronic document resources that are cacheable by the client device . Furthermore the processor may generate a cache identifier for each of the electronic document resources referred to by one or more of the electronic documents .

The cache identifier may comprise several cache identifier components such as a cache identifier prefix a cache identifier body and a cache identifier suffix. However it is also possible that the cache identifier includes any combination of prefixes bodies and suffixes. In addition the cache identifier may include only a single component such as only a cache identifier prefix only a cache identifier body or only a cache identifier suffix.

In the implementation where the cache identifier is r ID fingerprint the r cache identifier prefix may indicate that an electronic document resource is cacheable by the client device the ID cache identifier body may identify the specific electronic document resource to be cached by the client device and the fingerprint cache identifier suffix may be used to detect changes to the electronic document resource.

The cache identifier prefix cache identifier body and cache identifier suffix may be any series of alphanumeric characters. With regard to the cache identifier prefix one implementation is to use the alphanumeric characters r however other alphanumeric characters may also be used such as 5c 4 prefix or any other series of alphanumeric characters.

With regard to the cache identifier body one implementation is to use a series of alphanumeric characters that is unique for the electronic document resource. For example where an electronic document refers to a first electronic document resource and a second electronic document resource the cache identifiers for each of the electronic document resources may each be assigned a cache identifier where each cache identifier body is unique. In another implementation each cache identifier for each of the electronic document resources is unique including the cache identifier body. In yet other alternative implementations the cache identifier body may be identical for the same type of electronic document resources identical for all electronic document resources different for only some of the electronic document resources or any combination or derivative thereof.

Finally with regard to the cache identifier suffix one implementation is to use a series of alphanumeric characters that is unique to the content of the electronic document resource. In other words the cache identifier suffix may be based on the electronic document resource. For example the processor may use a hash algorithm such as the MD5 hash algorithm to generate a cache identifier suffix for the electronic document resource . Hence when the content of the electronic document resource changes the processor may prepare a different cache identifier suffix for the updated electronic document resource .

As an example suppose that the electronic document has a first cache identifier that refers to a first electronic document resource and that the processor receives a replacement electronic document resource to replace the electronic document resource . The processor may generate a second cache identifier for the replacement electronic document resource wherein the second cache identifier is operative to distinguish the replacement electronic document resource from the electronic document resource . The processor may then replace the first cache identifier in the electronic document with the second cache identifier.

The network interface is operative to communicate with the processor and to transmit requests for electronic documents from the client device to the processor . The network interface may be any type of wired network interface wireless network interface or a combination of wired and wireless network interfaces.

The processor may then communicate the request to an electronic document server operative to provide the electronic documents and or electronic document resources to the client device . In one implementation the electronic document server may be a web server such as the Apache HTTP Server available from the Apache Software Foundation located in Forest Hill Md. In the implementation where the electronic document server is a web server the electronic documents may be web pages or other Internet related electronic documents and the electronic document resources may be multimedia files or other type of Internet related or audiovisual files. However the electronic document server may be any type of server such as a File Transfer Protocol FTP server a Remote Desktop Protocol RDP server a Virtual Network Computing VNC server or any other type of electronic document server now known or later developed.

Referring back to the host device provides the electronic documents to a client device based on a request from the client device for the electronic documents . In one implementation the client device includes a computer readable medium a network interface a processor a display and an input interface . The client device may also include any of the components shown in the host device . Similarly the host device may include any of the components shown in the client device . In fact in one implementation the client device and the host device may share a set of components.

The client device may include an input interface operative to receive an input that the client device is to request an electronic document from the host device . The input interface may be any type of input interface such as a keyboard a mouse a trackball an interface with another system or component or any other input interface now known or later developed.

The processor may be operative to transmit the request for the electronic document to the host device . In one implementation the processor may transmit the requests through the network interface . The network interface may be a wired network interface a wireless network interface or a combination of wired and wireless network interfaces. In addition the processor may be further operative to receive a response from the host device that includes the requested electronic document.

When the client device receives the electronic document from the host device the client device may analyze the electronic document to determine whether the electronic document references cacheable electronic document resources. For example the processor may parse the electronic document to identify an electronic document resource that has been tagged with a cache identifier. As discussed above the processor may identify that an electronic document resource is to be cached when the electronic document resource is tagged with a cache identifier in the format of r ID fingerprint. 

In one implementation the electronic document may contain logic or a module to facilitate the identification of cacheable electronic document resources referenced in the electronic document. In another implementation the processor may retrieve logic or a module from the computer readable medium to identify cacheable electronic document resources referenced in the electronic document.

After identifying the cacheable electronic document resources the processor may be operative to store the cacheable electronic document resources in one or more client resource databases . The client resource databases may be any type of database such as a flat file database relational database hierarchical database object oriented database or any other database now known or later developed. In one implementation the client resource databases are HTML5 Structured Query Language SQL databases. The computer readable medium may also include an application programming interface API such as the HTML5 Web Storage API for accessing or modifying the client resource databases . Accessing or modifying the client resource databases may include reading from the client resource databases editing the client resource databases adding to the client resource databases or removing from the client resource databases .

Each of the client resource databases may be assigned to an electronic document server. For example the client resource database may be assigned to the electronic document server for storing the cacheable electronic document resources provided by the electronic document server . As another example suppose that the host device is configured with a first electronic document server located at the Uniform Resource Locator URL of www.google.com and that the host device is also configured with a second electronic document server located at the URL of mail.google.com . When the client device accesses the URL of www.google.com the processor may establish or assign a first client resource database to the first electronic document server. Similarly when the client device accesses the URL of mail.google.com the processor may establish or assign a second client resource database to the second electronic document server. Hence each of the client resource databases may be assigned to different electronic document servers. However in a first alternative implementation the processor is operative to assign or establish a single client resource database to one or more electronic document servers. In another alternative implementation the processor is operative to assign or establish a single client resource database to all of the electronic document servers accessed by the client device .

The client resource databases may include one or more electronic resource records . The electronic resource records are operative to store the electronic document resources identified as being cacheable by the electronic document. Accordingly the processor may cache the electronic document resources identified as cacheable in the electronic document in the one or more electronic resource records . In one implementation the electronic resource records may be formatted as key value pairs. The key for an electronic resource record may be a resource record identifier operative to identify the electronic resource record. The value for an electronic resource record may be the resource record content of the resource record.

However the electronic resource records may be formatted with other values or keys depending on the implementation of the client resource databases .

As discussed above the processor may use logic to identify and cache cacheable electronic document resources in the client resource databases . One example of logic written in pseudo code form based on the HTML5 Web Storage API to identify and cache cacheable electronic document resources is below 

In the pseudo code above the processor may identify an electronic document resource to be cached and may then create an electronic resource record in a resource database for storing the electronic document resource. Moreover the electronic resource records may contain characteristics relating to the electronic document resource such as the date on which the electronic document resource was accessed the fingerprint of the electronic document resource or other characteristics relating to the electronic document resource. In the example above the processor creates a first electronic resource record having the content of the electronic document resource a second electronic resource record having the current date when the client device accessed the electronic document resource and a third electronic resource record having the fingerprint assigned to the electronic document resource.

As shown in each of the electronic resource records are structured as key value pairs. With reference to the exemplary logic discussed above for identifying and storing electronic document resources identified as being cacheable the first electronic resource record has a key of r UTILS content and a value of the contents of the electronic document resource. Similarly the second electronic resource record has a key of r UTILS timestamp and a value of May 5 2010 . Finally the third electronic resource record has a key of r UTILS fingerprint and value of 28f2a3bc1e4d . Although the electronic resource record set has three electronic resource records additional electronic resource records are also possible.

Although not shown the processor may be operative to store additional resource record sets for the second cache identifier the third cache identifier and the fourth cache identifier . In other words in the example shown in for each of the cache identifiers identified in the electronic document the processor may be operative to prepare an electronic resource record set having electronic resource records storing the electronic document resource and related characteristics such as the date when the client device accessed the electronic document resource and the fingerprint of the electronic document resource.

In addition the processor may use logic or a module to manage the electronic resource records of the client resource databases . For example the processor may be operative to update or modify the client resource databases after a predetermined amount of time has passed since storing an electronic document resource in the client resource databases . In one implementation the processor may be operative to remove an electronic resource record after a period of one year has passed since the corresponding electronic document resource was stored in the client resource database. However the processor may use other predetermined periods of time to determine whether to remove an electronic resource record such as seconds minutes months years or other amounts of time. In another implementation the processor may be operative to update or modify the client resource databases based on a predetermined number of most recently or most frequently accessed electronic document resources. For example the processor may be operative to update or modify the client resource databases to maintain or keep the ten most recently or most frequently accessed electronic document resources. In this implementation the predetermined number of most recently or most frequently accessed electronic document resources may be cached indefinitely. However in an alternative implementation the predetermined number of most recently or most frequently accessed electronic document resources may be removed based on a storage capacity of the computer readable medium the client resource databases or combinations thereof.

Referring back to the computer readable medium may also include one or more electronic resource catalogs operative to catalog the electronic document resources stored in the client resource databases . A first electronic resource catalog may be assigned to a first client resource database that catalogs the electronic document resources stored in the first client resource database and a second electronic resource catalog may be assigned to a second client resource database that catalogs the electronic document resources stored in the second client resource database . As additional client resource databases not shown are assigned or established in the computer readable medium the processor may be operative to generate or establish additional electronic resource catalogs for each assigned or established client resource databases. However in alternative implementations the processor may generate or establish varying arrangements of electronic resource catalogs such as generating or establishing a single electronic resource catalog for all of the client resource databases or generating or establishing an electronic resource catalog for a specific set of client resource databases. One example of an electronic resource catalog that the processor may generate or establish is a cookie which may be a text string comprising one or more name value pairs. An example of a cookie is discussed with reference to .

The processor may use logic or a module to generate or establish the electronic resource catalogs . In one implementation the electronic document may contain the logic or the module to facilitate the generation or establishment of the electronic resource catalogs . In another implementation the processor may retrieve the logic or the module from the computer readable medium to generate or establish the electronic resource catalogs .

One example of logic written in pseudo code form based on the HTML5 Web Storage API to generate the electronic resource catalogs is below. The logic below also includes pseudo code directed to managing the electronic resource records after a predetermined period of time has expired.

In the pseudo code above the logic instructs the processor to first determine whether the client device has cached an electronic document resource for an electronic document by analyzing whether an electronic resource record has a key in the format of r ID.timestamp . With reference to one example of a key in this format is the key for the electronic resource record .

If the processor determines that the client device has cached an electronic document resource and that the electronic resource record has a key in the format of r ID.timestamp the processor then compares the date indicated in the value portion of the electronic resource record with the predetermined time period. For example the processor may compare the value of the electronic resource record with a predetermined time period such as one year. Where the date indicated in the value portion of the electronic resource record is older than the predetermined time period the processor may then remove the electronic resource records corresponding to the electronic document resource that corresponds to the electronic resource record having the date value older than the predetermined time period. By removing the electronic resource records from the electronic resource database the processor coerces the client device into using the electronic document resources stored on the host device .

However the processor may not remove the electronic resource records from the electronic resource database. For example the processor may not remove the electronic resource records from the electronic resource database when the date value is not older than the predetermined time period. The date value may not be older than the predetermined time period when the client device first accesses the electronic document server since the client device has not previously accessed the electronic document server and the processor has just created the electronic resource record in the client resource database or when the client device next accesses the electronic document server within the predetermined time period. Where the date value of the electronic resource record is not older than the predetermined time period the processor may then add the cache identifier body the ID of the electronic document resource and the cache identifier suffix the fingerprint of the electronic document source to the electronic resource catalog. Hence by checking the date on which the client device cached an electronic document resource the processor may ensure that the electronic document resource listed in the electronic resource catalog is not older than the prescribed predetermined time period.

Referring back to and after or while caching the electronic document resources the client device may display the requested one or more electronic documents on the display . The display may be any type of display such as a video display e.g. a computer monitor an audio display e.g. audio speakers or a combination of audio and video displays.

When the client device requests the electronic document from the host device the client device may also transmit one or more electronic resource catalogs to the host device . By transmitting the one or more electronic resource catalogs with the request for the electronic document the client device may inform the host device as to which electronic document resources the client device has cached in one or more client resource databases . Accordingly the transfer of the one or more electronic resource catalogs reduces latency in receiving and or displaying the electronic document since the client device and host device do not have to continuously communicate for the host device or the client device to determine which electronic document resources the client device has cached and whether those cached electronic document resources are different or outdated from the electronic document resources residing on the host device .

When the host device next transmits the electronic document to the client device the host device may modify the electronic document for display by the client device to include a reference to a cached electronic document resource residing on the client device . The pseudo code below is one example of logic that the host device may use to determine whether to modify the electronic document sent to the client device 

Using the pseudo code above the processor of the host device may first determine whether the electronic resource catalog e.g. the cookie sent with the request for the electronic document contains a resource identifier such as the cache identifier body for an electronic document resource referenced by the requested electronic document. As an example and with reference to and the processor may determine whether the pair of the electronic resource catalog has a cache identifier body in this example HEADER that matches a cache identifier body of the cache identifier of the electronic document .

When the cache identifier body of the pair matches the cache identifier body of the cache identifier the processor modifies the electronic document to instruct the processor of the client device to retrieve the cached electronic document resource from the client resource database . Moreover with regard to an electronic document resource that the host device has updated or replaced the host device transmits updated or replaced electronic document resources to the client device since the cache identifier suffix e.g. the fingerprint of the cache identifier for the updated or replacement electronic document resource is different from the cache identifier suffix e.g. the fingerprint for the replaced electronic document resource.

The pseudo code above instructs the processor to first determine whether the client resource database has cached an electronic document resource identified in the electronic resource catalog. If so the pseudo code instructs the processor to retrieve the electronic document resource from the client resource database for displaying the electronic document. In addition the pseudo code above instructs the processor to determine whether the electronic resource catalog incorrectly refers to an electronic document resource that the client device has not previously cached. In this circumstance the processor may attempt to correct for the incorrectly catalogued electronic document resource. For example the processor may delete the contents of the electronic resource catalog or remove the electronic resource catalog and then re request the electronic document from the host device . In response the host device may transmit the electronic document resources to the client device since the re request did not include the electronic resource catalog or included an electronic resource catalog with removed contents.

The host device may then receive a request for the one or more electronic documents Block . When the host device receives the request for the one or more electronic documents the host device may determine whether the request includes one or more electronic resource catalogs Block . Should the request not include one or more electronic resource catalogs the host device may transmit the requested one or more electronic documents along with one or more electronic document resources referenced by the electronic documents Block .

However the host device may determine that the request for the one or more electronic documents includes one or more electronic resource catalogs . The host device may then determine whether the one or more electronic resource catalogs include a cache identifier for the one or more electronic document resources references by the one or more electronic documents Block .

In one scenario the one or more electronic catalogs do not include a cache identifier for an electronic document resource since the electronic document resource has been added to the electronic document since the last time that the client device requested the electronic document. In another scenario the one or more electronic catalogs do not include a cache identifier for an electronic document resource since the electronic document resource was replaced or updated since the last time that the client device requested the electronic document. Where the one or more electronic catalogs do not include a cache identifier for an electronic document resource referenced by the requested one or more electronic documents the host device may transmit the electronic document resource to the client device Block . However where the one or more electronic catalogs do include a cache identifier for an electronic document resource referenced by the requested one or more electronic documents the host device may modify the requested one or more electronic documents to refer to the cached electronic document resource cached in the one or more client resource databases Block .

The host device may then receive a request for the one or more electronic documents Block . When the host device receives the request for the one or more electronic documents the host device may determine whether the request includes one or more electronic resource catalogs Block . Should the request not include one or more electronic resource catalogs the host device may transmit the requested one or more electronic documents along with one or more electronic document resources referenced by the electronic documents including the updated additional or replacement electronic document resources Block .

However the host device may determine that the request for the one or more electronic documents includes one or more electronic resource catalogs . The host device may then determine whether the one or more electronic resource catalogs include a cache identifier for the replacement electronic document resource referenced by the one or more electronic documents Block .

In one scenario the one or more electronic catalogs do not include the replacement cache identifier for the replacement electronic document resource. Where the one or more electronic catalogs do not include the replacement cache identifier for the replacement electronic document resource referenced by the requested one or more electronic documents the host device may transmit the replacement electronic document resource to the client device Block . However in another scenario the one or more electronic catalogs may include the replacement cache identifier where the generation of the replacement cache identifier by the host device did not generate a replacement cache identifier different than the cache identifier for the electronic document resource to be replaced. In other words the replacement cache identifier and the cache identifier are identical and hence the cache identifier stored by the client device matches the replacement cache identifier. Accordingly the host device may analyze the timestamp or other characteristic of the cached electronic resource to determine whether to transmit the replacement electronic document resource. Where the host device determines that a characteristic of the cached electronic document resource is different from a characteristic of the replacement electronic document resource the host device may transmit the replacement electronic document resource to the client device Block .

Where the processor determines to not include one or more electronic resource catalogs with the request for the one or more electronic documents such as where the client device has not previously accessed the electronic document server the processor transmits the requests and waits for a response from the host device . The processor then receives the one or more requested electronic documents and the one or more electronic document resources referenced by the one or more requested electronic documents Block .

The processor parses the one or more requested electronic documents to identify the referenced electronic document resources and their corresponding cache identifiers Block . As the processor recognizes the cache identifiers in the one or more electronic documents the processor may create one or more electronic resource records in one or more client resource databases for caching the one or more electronic document resources identified as being cacheable Block . In one implementation the processor may also create or establish one or more of the client resource databases .

The processor may then cache the one or more electronic document resources in the one or more client resource records and generate an electronic resource catalog that identifies the electronic document resources cached in the one or more client resource databases Block .

However the processor may determine to include one or more electronic resource catalogs with the request for the one or more electronic documents . For example the processor may determine to include one or more electronic resource catalogs with the request for the one or more electronic documents where the client device has previously accessed the electronic document server . Where the processor determines to include one or more electronic resource catalogs with the request for the one or more electronic documents the processor transmits the one or more electronic resource catalogs along with the request for the one or more electronic documents Block .

After transmitting the request and the one or more electronic catalogs the processor may then receive the one or more electronic documents Block . In one scenario the processor may also receive electronic document resources where those electronic document resources were not previously cached by the client device .

When the processor receives the electronic documents the processor identifies the modifications to the one or more electronic documents and retrieves the one or more cached electronic document resources from the one or more electronic resource records Block . The processor may then display the requested one or more electronic documents using the cached electronic resources Block .

The systems components and logic described above may be implemented in many different ways including a combination of hardware and software or as software for installation on any desired operating system including Linux UNIX or Windows. The functionality may be implemented in a single system or functionally partitioned across multiple systems. As another example the components systems and logic may be implemented as computer executable instructions or as data structures in memory and may be stored on distributed across or read from many different types of machine readable media. The machine readable media may include RAM ROM hard disks floppy disks CD ROMs flash memory or other machine readable medium. The components systems and logic may also be encoded in a signal such as a signal received from a network or partitioned into sections and received in multiple packets communicated across a network.

The systems may be implemented in software hardware or a combination of software and hardware. The systems logic and or modules may be implemented in a computer programming language such as C or Java or any other computer programming language now known or later developed. The systems logic and or modules may also be implemented in a computer scripting language such as Javascript PHP ASP or any other computer scripting language now known or later developed. Furthermore one or more of the systems logic and or modules may be implemented using a combination of computer programming languages and computer scripting languages.

Furthermore the systems may be implemented with additional different or fewer components. As one example a processor or any other logic or component may be implemented with a microprocessor a microcontroller a DSP an application specific integrated circuit ASIC program instructions discrete analog or digital logic or a combination of other types of circuits or logic. As another example memories may be DRAM SRAM Flash or any other type of memory. The systems may be distributed among multiple components such as among multiple processors and memories optionally including multiple distributed processing systems.

Logic such as programs or circuitry may be combined or split among multiple programs distributed across several memories and processors and may be implemented in or as a function library such as a dynamic link library DLL or other shared library. The DLL for example may store code that implements functionality for a specific module as noted above. As another example the DLL may itself provide all or some of the functionality of the system.

Interfaces between the systems and the logic and modules within systems may be implemented in numerous ways. For example interfaces between systems may be Web Services Simple Object Access Protocol or Enterprise Service Bus interfaces. Other examples of interfaces include message passing such as publish subscribe messaging shared memory and remote procedure calls.

Although aspects of the invention herein have been described with reference to particular embodiments it is to be understood that these embodiments are merely illustrative of the principles and applications of the present invention. It is therefore to be understood that numerous modifications may be made to the illustrative embodiments and that other arrangements may be devised without departing from the spirit and scope of the invention as defined by the appended claims. Furthermore while certain operations and functions are shown in a specific order they may be performed in a different order unless it is expressly stated otherwise.

