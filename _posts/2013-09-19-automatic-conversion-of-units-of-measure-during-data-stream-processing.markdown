---

title: Automatic conversion of units of measure during data stream processing
abstract: Data streams are received for processing by a query. The query is associated with expected input data stream types and expected output data stream types. The received data streams are evaluated to determine if they correspond to the expected data stream types. If the received data stream types define data for a physical quantity that is defined in a unit of measure that is not the expected unit of measure, then unit conversion is required. Predefined mappings are utilized for performing required unit conversions and an optimal solution for conversion is determined. The unit conversions are performed automatically by unit conversion operators that are integrated within the process of generating of a runnable query. The runnable query is deployed and executed to generate result output streams that match the expected output stream type.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09471640&OS=09471640&RS=09471640
owner: SAP SE
number: 09471640
owner_city: Walldorf
owner_country: DE
publication_date: 20130919
---
The definition and practical use of units of measure play a significant role in human business and commercial activities. Units of measure define magnitude of physical quantities. They are adopted by different conventions as a standard form for measurement of the same physical quantity. There are different systems that provide their own definitions for units of measure for example the Imperial System of Units the Metric System or the International System of Units SI . The Unified Code for Units of Measure UCUM is a system of codes for unambiguous presentation of units of measure which may be used by humans and machines. The UCUM includes all units of measures that are used in international science engineering and business. The usage of such systems may facilitate the unambiguous communication of quantities together with their units. Most importantly this communication may be an electronic communication between machines computers . Units of measure may be used when defining length temperature energy time pressure currencies etc. The variety of units is a challenge for both systems that process data containing units and users of such systems since the wrong usage of data e.g. mixing metric and imperial units for calculation can lead to wrong results and critical errors.

Embodiments of techniques for conversion of units of measure during data stream processing are described herein. In the following description numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

Data stream processing is a paradigm where data streams are processed by utilizing data stream operators. An orchestration of streams and operators is called a data stream query. If streams which are processed by one query represent different units of measure a conversion of the stream values may be required before or during the data stream processing. For example when comparing two temperature signals where one signal is provided in C. while the second one is F. For a proper comparison at least one of the two signals needs to be converted. Another example is when one calculates an average temperature for a given region and the information regarding the temperature is not provided in a common unit of measurement for all of the regions. Then a conversion is required to calculate the average temperature. In one embodiment the result average temperature may be requested to be defined in F.

The query may be associated with expected input stream types and expected output stream types. In one embodiment the type of the expected output stream types may be defined according to user preferences with respect to a specific use case and may be defined by the user through a graphical user interface GUI . The input stream input stream  to input stream N may be converted to match the expected input by conversion operators such as conversion operator  till conversion operator N . The conversion operators and may transform the units of measure of the input streams so that the input streams may be processed by the query . The conversion operators and may be integrated during the process of generating the query . When the query is generated in a runnable form it may be executed to consume the defined input streams and to generate a result stream. The conversion operators may be automatically inserted to provide the input streams in a desired stream type to the query so that the execution of the query is performed correctly.

The input stream  may have a stream type K and for example input  from the input may expect a stream type X. If the input streams provide information for the same physical quantity as the expected from the query then a conversion may be required. For example the type K may be converted to type X by the conversion operator  . The query processes the converted input streams in the expected stream types according to operators . A result output stream may be generated based on the executed query . The result output stream may be in type Z which is based on the expected stream types by the query type X to XN. In one embodiment a user may have further defined that the expected type of the output stream is type Y. The definition of the expected output streams by the query may be defined in section output . The result output stream may have a different stream type than the expected stream type for the result output stream by the query . A conversion from type Z to type Y may be possible and accomplished through conversion operator M . After the conversion the result output stream is transformed to an output stream which is of type Y.

In one embodiment for performing conversion operations such as the operations defined in the conversion operator  conversion operator N conversion operator M etc. predefined unit mappings may be used. The conversion operations aim to transform physical quantity values defined in a certain unit of measure into another unit of measure. For example such operations may transform length defined in meters into length defined in kilometers or vice versa. Unit mappings are mappings that present relations between units. Each physical quantity may have its own mapping. For a given physical quantity a number of different representations mapping formats of such mappings may be defined including a list of units of measure. A mapping is a formula for conversion of one unit of measure to another. For example a mapping may depict only 3 units of measure for a given physical quantity. Another mapping defined for the same physical quantity may define formulas for conversion between different numbers of units of measure e.g. 5 units. The other mapping may not contradict to the formulas defined for conversion in the first mapping but may extend the defined formulas by incorporating additional units of measure and formulas for conversion between them and the already present units. In one embodiment there are different mapping formats to present a mapping for a physical quantity e.g. base unit mapping full mapping partial mapping ring mapping and chain mapping etc. The number of such mapping formats is not limited to the listed examples.

In one embodiment if an input stream is defined using a unit of measure mile and if we have the base mapping for the physical quality length we may convert miles to inches. The mapping helps when converting a value in miles into a value in other unit of measure by defined formulas for conversion. The base mapping may be defined such that the base unit is meter and the base mapping for length may allow converting from miles to meter and then from miles to inches. In another embodiment the base unit of the base mapping may be different than meter which means that miles may be converted to the other base unit and then from that base unit to the required unit inches.

In one embodiment full mappings define a different schema for conversion between units. The full mapping defines a graph that determines relations between units U U U U and U. Mapping table presents the relationships between the units that exist in the graph . For example unit U may be converted to unit U directly. Also unit U may be converted to unit U. In another example unit U may be converted to unit U by firstly converting the unit U to unit U and then converting unit U to unit U. Other alternative combinations between the units are possible as defined with the edges of the graph . Full mappings allow direct conversion of each of the units from a given set of units of measure to any of the rest of the units from the set.

In one embodiment ring mapping is a mapping where each unit of measure may be converted to one other unit in a ring topology. A graph presents an embodiment of the ring mapping that includes five units of measure. U U U U and U are nodes from the graph that are positioned in such manner that form a cycle which means that there is a sequence of nodes that starts and ends at the same node and each two consecutive nodes in the sequence are connected to each other in the graph . The graph has five nodes and five edges that connect each two consecutive nodes in a uni directional form. In graph units U and U U and U U and U U and U U and U are connected. Mapping table presents the mappings defined with the edges from the graph . In another embodiment the ring mapping may be defined in a bi directional form. If the ring mapping is defined in a bi directional form then for example U may be converted to U and vice versa U may be converted to U. Therefore the mapping table may be extended with five more rows to present all the possibilities for conversion between the five nodes in the ring mapping. In another embodiment the presentation of all of the conversions may be accomplished through marking that the mapping type is bi directional as defined for other mappings e.g. the partial mapping.

In another embodiment three data streams that are processed by an operator may not match the expected stream types by the operator . For example the three data streams may be defined in different units of measure than the expected units of measure by the operator . For example the three data streams may be defined in units of measure U U and U and the expected input stream types by the operator may be U U and U. Therefore conversion of the data stream defined in unit of measure U to generate a value that is in unit of measure U is required. Also conversion for the third data stream is also required. The conversion of the data stream is required according to the expected units of measure. The operator may further define an expected unit of measure for the output data stream such as U. The operator may generate an output stream defined in unit of measure U. Therefore a conversion of the generated result output stream based on the operations on the three data streams is required to generate an expected output stream having a unit of measure U. The conversions of the three data streams to match the expected unit of measure and of the result output stream to match the expected unit of measure for the output data stream may be accomplished through unit conversions . The unit conversions may incorporate operations for converting data defined in a given unit of measure into a converted value in a different unit of measure. The operations for conversion accomplished by the unit conversions may implement the logic of mappings for conversion such as the mappings described on . The unit conversions may be performed by automatically integrated unit conversion operators that are inserted during the process of generating an instance of operator that is runnable and may be executed. In one embodiment the operator may be transformed into a runnable operator such as the runnable query by a query manager such as the query manager . The operator may be deployed on an execution system such as the data stream processing system . During the execution of the operator the input data streams may be seamlessly converted to match the expected stream types defined by the operator and a result output stream may be generated. The result output stream may also be automatically converted if needed to match the expected output stream type.

The operator defines input requirements for the received data streams for example the expected stream types by operator define a physical quantity defined in unit of measure U. For example a base mapping a full mapping and a ring mapping are pre defined for that physical quantity which is described by the three data streams . The logic of the base mapping the full mapping and the ring mapping may be stored in a repository and may be invoked when needed. In an embodiment the base mapping is used for accomplishing required conversions of the input and output streams. The base mapping may be presented in form of a graph having 5 nodes. A first data stream from the three data stream is defined in unit U and the expected unit is U therefore a conversion between U and U is required. For accomplishing the conversion the logic of the base mapping may be used and depicted from the graph . There is a direct conversion between U and U presented with an edge and thus one step conversion is enough to accomplish the required transformation before the data processing. Also one step conversion is enough to accomplish the required post conversion. The post conversion is defined for the produced output stream to match the defined expected output stream type U. In one embodiment a conversion operator used for the post conversion may be used also for a conversion of the input data streams. Accordingly unit conversions are defined with the use of the base mapping. As a result four unit conversions part of the unit conversions are performed with the use of the preexisting base mapping.

In another embodiment a full mapping definition for that physical quantity may also be defined and stored so that the logic of such unit mapping can be used for the unit conversions . The full mapping and the defined logic within the full mapping may be used to accomplish conversions of the three data streams to match the expected input stream types by operator and to accomplish required conversion to generate a result output stream defined in the expected output stream type. Unit conversions are defined with the use of the logic within the full mapping . From the graph representation of the full mapping a path of sequential conversions may be found that accomplishes a conversion from U to U which may be applied for the pre conversion operations. The pre conversion operations are accomplished over received data streams that required conversion of the input data stream type to match the expected input stream type defined by the operator . Afterwards for the post conversion operations a one step conversion may be found within the graph that allows conversion from U to U as U is the expected unit of measure for the result output stream from the operator .

In yet another embodiment the ring mapping may be used for accomplishing required unit conversions for processing the three data streams by the operator . Unit conversions are defined with the use of the logic within the ring mapping that is presented in a graph format. The ring mapping is a bi directional ring mapping. From the graph representation of the ring mapping a path of sequential conversions may be found that accomplishes a conversion from U to U. There is an edge in the graph between U and U so a one step conversion can be performed for the transformation of the first two data streams which are defined in U unit of measure. For the third data stream which is defined in U unit of measure the following path within the graph for possible conversion may be determined. The node U is not directly connected to node U but node U is connected to U and U. If we choose the path from U to U then we may choose the next node to be U and then U. Therefore there is a path from U to U which starts with U then U U and lastly U. This path may be used for the unit conversions . However there is an alternative option for determining a path for conversion of the third data stream before processing by the operator . This path defines a different combination of edges existing in the graph which may be visited in order to come to node U. The alternative path starts again with U goes through node U and then from node U to node U. The alternative path visits only one intermediate node before accomplishing the goal node U. The first path and the alternative path are two options that may be used for the unit conversions . When determining which one to choose it may be defined that the shortest path is the preferable one. For example such logic may be implemented in a query manager such as the query manager . If such conditions are set forth when determining a path then the alternative path is the preferred one. Accomplishing conversion with a minimum number of intermediate conversions may optimize the process of unit conversion. The ring mapping may also be used for determining the conversion from U to U which may be accomplished with one step conversion as there is an edge between node U and U in the graph representation of the ring mapping .

There may be prefixes such as n m c d k M T etc. used with values describing physical quantities. When converting the two input data streams before processing them by the operator the metric prefixes may also be converted. In one embodiment metric prefixes may be included in the unit mappings or according to another embodiment separate mappings may be built. Including metric prefixes in unit mappings for example as part of base mapping full mapping etc. may be realized in different approaches. In one aspect the prefixes may be separately modeled e.g. as separate mappings. The prefix mapping may be handled similarly to the suggested mapping formats discussed in . For instance with full mapping such as the full mapping only one additional operator is required. With chain mapping such as the chain mapping the mappings between the prefixes may be modeled sequentially e.g. . . . nano micro milli . . . . In another aspect the prefixes may be included into the unit mapping models. The mapping formats may include all units with metric prefixes. However this may require a higher effort when creating and maintaining the mappings. Consequently unit mapping models may become complex. The advantage of the first case is that when a new prefix is added just the prefix mapping has to be updated. In one embodiment the metric prefix and the physical quantity may be stored in the stream metadata. For instance the metric prefix and the physical quantity may be stored separately. Alternatively a mechanism that separates prefixes from the stored couple of a value and a prefix may be utilized. Such mechanism may be required in order to select a proper conversion when processing data streams with data describing physical quantities.

In one embodiment the query manager analyzes the metadata of the data streams and accomplishes conversions of the units of measure of the data streams when needed. For the conversion of units of measure the query manager may take predefined mappings from the mappings stored in the repository . The mappings may be defined for different physical quantities and in different format such as the discussed alternatives in . The conversions accomplished by the query manager may be such as the suggested solutions for conversion discussed in . The query manager may determine a predefined mapping from the mappings that best suits the required conversion. For example the query manager may choose between two different formats of mappings defined for a given quantity. From the selected mapping format that defines a set of conversions e.g. the full mapping the query manager may determine a combination of conversions between a unit of measure of an input stream and the expected unit of measure. The combination may be a path comprising edges from a graph describing the mapping. In one embodiment the path may be the shortest path that allows transformations between the unit of measure of the received input stream and the expected unit of measure. The query manager may determine a path with minimum number of conversions that may complete the conversion task of the units of measure. In another embodiment the query manager may determine the shortest path for conversion within different mappings defined for a given physical quantity. The query manager is also connected to an executing module . The executing module may execute the created queries by the query manager by consuming the received data streams and producing an output data stream.

Some embodiments may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components maybe implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. A computer readable storage medium may be a non transitory computer readable storage medium. Examples of a non transitory computer readable storage media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment may be implemented using Java C or other object oriented programming language and development tools. Another embodiment may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open DataBase Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in details.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments including what is described in the Abstract is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments of and examples for the invention are described herein for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. These modifications can be made in light of the above detailed description. Rather the scope is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

