---

title: Reporting performance capabilities of a computer resource service
abstract: To assess the performance of a computer resource service in real time, a request can be sent to a resource monitoring tool to provide performance metrics for the computer resource service. To receive the desired metrics, the request can include one or more filters that specify the performance metrics desired. In response, the resource monitoring tool can provide the set of performance metrics that match the filters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584364&OS=09584364&RS=09584364
owner: Amazon Technologies, Inc.
number: 09584364
owner_city: Reno
owner_country: US
publication_date: 20130521
---
This is related to U.S. patent application Ser. No. 13 899 407 filed May 21 2013 entitled DETERMINING AND MONITORING PERFORMANCE CAPABILITIES OF A COMPUTER RESOURCE SERVICE to Simon Jeremy Elisha the disclosure of which is incorporated by reference herein in its entirety.

Presently network accessible computing services sometimes referred to as cloud computing services or remote computing services offer flexibly to customers in their computing choices. When customers instantiate new virtual machine instances within a computer resource service or migrate instances to the computer resource service the customers may evaluate the resource characteristics of the instance executing in the computer resource service. This can include among other possibilities processor type and performance memory size and performance input output capabilities ephemeral storage size and network capabilities.

Each instance type can have a different performance profile providing a degree of choice to the customer. However it can be difficult to select between different instance types in terms of performance at a given time and location e.g. a particular datacenter due to various inconsistencies. For example the instances may be hosted on differing underlying physical hardware which may alter the actual performance of the instances e.g. older hardware may perform differently than newer hardware . Also instances which are implemented in busy locations in the computer resource service e.g. noisy neighbors may provide reduced performance than in a less subscribed area. Accordingly it can be challenging to understand the performance profile of the instances in the computer resource service.

Implementations of the present disclosure are directed to systems and methods for determining and monitoring the performance of a computer resource service. To determine and monitor the performance of a computer resource service in real time a resource monitoring tool can initiate test virtual machines on the computer systems of the computer resource service. The resource monitoring tool can then monitor various metrics that indicated the performance of the test virtual machines over time such as processor performance memory performance input output I O performance and network performance. The resource monitoring tool can store the monitored performance metrics provide select performance metrics to users and use the performance metrics to manage the computer resource service.

Accordingly to accurately gauge the performance the resource monitoring tool can select computer systems for testing that are representative of the computer resource service and the computer resources of the computer resource service. For example if the computer systems are dispersed at various locations the resource monitoring tool can select computer systems at the various locations so that the performance at each location can be monitored and compared. Likewise for example if the computer systems contain different computing resources different types and ages of processors memory storage etc. the resource monitoring tool can select computer systems that represent the different computing resources. Accordingly the resource monitoring tool can determine and compare the performance of differently located and configured computer systems.

In implementations the resource monitoring tool can provide an interface e.g. a Web Service API that allows a user or a software agent of a user to request the performance metrics. The user whether local to or remote from the resource monitoring tool can utilize the performance metrics to evaluate the computing services provided by the computer resource service. For example the user can in real time evaluate and compare the performance of the computer systems of the computer resource service in different locations the computer systems having different configurations and how different configurations of instances perform on the computer systems. By evaluating the performance metrics the user can select computer systems that deliver computing resources adequate for the user s needs as well as select a configuration of the instances that best fits the user s needs. Accordingly the performance metrics can be provided to a user to allow the user to make accurate decisions when selecting computing resources and configuration of instances in the computer resource service.

In implementations the resource monitoring tool can be configured to determine and monitor the performance of the computer resource service . The computer resource service can be configured to deliver computing resources to users over one or more networks as a service. For example users may be able to provision computing resources on a pay per use basis such as on an hourly basis. As illustrated in the computer resource service can include a number of computer systems such as a set of computer systems a set of computer systems and a set of computer systems . To provide computer resources as a service the computer resource service can be configured to execute one or more machine instances MIs on any of the computer systems the computer systems and the computer systems .

A MI can correspond to one or more of the computer systems computer systems or computer systems . Likewise a MI can correspond to a virtual machine VM hosted by one or more of the computer systems the computer systems and the computer systems . A VM can be a virtualized computer system or a software implementation of a computer system layered on top of any of the computer systems computer systems and computer systems . The VM s access to the underlying computer system can be controlled through a hypervisor or virtual machine monitor. The VMs can provide for multiple and or different operating system environments to run concurrently on a single computer system.

In the computer resource service each MI can be controlled by different users who can have administrative access only to their own MIs and no access to the instances of other users. Multiple MIs can execute concurrently on a computer system including parallel processors although multiple instances can appear to execute concurrently on a multithreaded computer system with fewer processors than instances. In some cases different MIs which execute on a computer system are controlled by two or more different users while in other cases all of the MIs are controlled by a single user.

The computer resource service can also include one or more management systems . The one or more management systems can be configured to control the operation and configuration of the computer resource service . The one or more management systems can be configured to initiate execution of the MIs on the computer systems the computer systems and the computer systems configure the MIs in the computer resource service terminate the MIs executing on the computer systems the computer systems and the computer systems and migrate existing MIs between the computer systems the computer systems and the computer systems . The one or more management systems can also be configured to provide an interface to users requesting the computer services from the computer resource service . The one or more management systems can be implemented as physical computer systems such as one or more of the computer systems the computer systems and the computer systems . Likewise the one or more management systems can be implemented as one or more MIs executing in the computer resource service .

In implementations the resource monitoring tool can be configured to determine and monitor the performance of the computer resources provided by the computer resource service by testing the operation of the computer systems the computer systems and the computer systems . In operation the performance of the computer systems the computer systems and the computer systems can be affected by the number of MIs executing on the computer systems the usage of MIs executing on the computer systems the physical hardware and software supporting the computer systems and other similar factors. To test the operation of the computer systems the computer systems and the computer systems the resource monitoring tool can be configured to utilize one or more test VMs . The resource monitoring tool can be configured to initiate the test VMs on the computer systems the computer systems and the computer systems and test the performance of the test VMs .

To accurately represent the computer resource service the resource monitoring tool can be configured to select the number and placement of the test VMs based on the configuration of the computer resource service . In the computer resource service the computer systems the computer systems and the computer systems can be placed in different locations. The locations of the computer systems the computer systems and the computer systems can include any granularity of separation within the computer resource service . For example the locations can include specific computer systems in data center different servers in a rack of servers different data centers different geographic location or regions and the like. Accordingly in order to test the different locations the resource monitoring tool can be configured to select a number of computer systems to test from each location of the computer systems the computer systems and the computer systems .

Likewise the computer systems at the different location can offer different computer resources. For example the computer systems the computer systems and the computer systems can include different configurations of hardware resources and or software resources. Also the computer systems the computer systems and the computer systems can include hardware resources and or software resources of different ages. For example one or more of the computer systems the computer systems and the computer systems can include older computer systems which typically employ older hardware resources and software resources and provide reduced computing resources. Accordingly the resource monitoring tool can be configured to select a number of computer systems from each location that represents different configurations and ages.

When selecting the number of computer systems the resource monitoring tool can select sufficient numbers of computer systems from each of the different locations different configuration different ages and the like to accurately represent the computer systems. That is the resource monitoring tool can be configured to select a number of computer systems from each of the different locations different configuration different ages and the like that is statistically significant. For example for a particular location configuration or age the resource monitoring tool can select a number of computer systems that is statistically representative of all the computer systems of the particular location configuration or age. This number of computer systems can be a percentage of the total number of computer systems of the particular location configuration or age e.g. 10 5 1 etc. . When selecting the computer systems from a particular location configuration or age the resource monitoring tool can randomly select computer systems from the particular location configuration or age.

In implementation when testing the computer resources the resource monitoring tool can be configured to utilize different configurations of the test VMs . In particular the resource monitoring tool can select test VMs that utilize different amounts of the computer resources offered by the computer resource service . The resource monitoring tool can be configured to select preconfigured test VMs that are offered by the computer resource service . Likewise the resource monitoring tool can be configured to determine various configurations of the test VMs that represent different levels of computer resources.

In implementations the resource monitoring tool can be configured as a software program that is capable of being stored on and executed by a computer system whether part of the computer resource service or external to the computer resource service . Likewise the resource monitoring tool can be configured as a software module that is part of other application programs. In any example the resource monitoring tool can be written in a variety of programming languages such as JAVA C Python code Visual Basic HTML XML and the like to accommodate a variety of operating systems computer system architectures etc. As illustrated in the resource monitoring tool can include a monitoring module a performance data store and an interface . While illustrated as being part of a single application program any one of the components of the resource monitoring tool can be implemented as a separate software programs or modules.

In implementations the monitoring module can be configured to test the performance of the test VMs and monitor performance metrics of the test VMs . As the test VMs execute in the computer resource service the monitoring module can be configured test the performance of the test VMs . In particular the monitoring module can be configured to perform one or more benchmarking tests that measure the performance of the test VMs . The benchmarking tests can include any types of conventional tests that measure processor performance e.g. score based on software execution instruction execution etc. memory performance e.g. latency read speed write speed etc. input output I O performance e.g. I O per second I O bandwidth etc. network performance e.g. network bandwidth network packets per second etc. and the like.

From the benchmarking tests the monitoring module can be configured to collect performance metrics. The performance metrics include the results of the benchmarking tests. Once collected the resource monitoring tool can be configured to store the performance metrics in the performance data store . The performance data store can be implemented as one or more data structures that can store the performance metrics. The performance data store can also store details of computer resource service details of the computer systems the computer systems and the computer systems details of the test VMs details of the performance tests and the like.

The performance data store can be configured to store the performance metrics and the other data in a manner that allows relevant information to be linked and correlated. For example for a particular set of performance metrics the performance data store can associate the details of the particular test VMs that produced the particular set of performance metrics details of the particular computer systems on which the particular test VMs executed the locations of the particular computer systems details of the performance test that were performed on the particular test VMs and the like.

In implementations the resource monitoring tool can be configured to utilize a monitoring agent to assist in testing and monitoring the test VMs . The monitoring agent can be implemented as a software program that is configured to execute on the test VMs and perform one or more of the performance test. To collect the performance metrics the monitoring agent can be configured to transmit the performance to the resource monitoring tool . The monitoring agent can transmit the performance metrics in real time at periodic intervals on demand and combination thereof. Likewise the resource monitoring tool for example via the monitoring module can be configured to communicate with the monitoring agent and retrieve the performance metrics from the monitoring agent. The resource monitoring tool can retrieve the performance metrics in real time at periodic intervals on demand and combination thereof.

In addition to collecting the performance metrics the resource monitoring tool can be configured to perform statistical analysis on the performance metrics. The resource monitoring tool can perform the statistical analysis in order to analyze and compare the performance of the computer systems the performance of the different configurations of the test VMs and combination thereof. The statistical analysis can be any type of procedure that produces statistical values that aid in analyzing and comparing the performance of the computer systems the performance of the different configurations of the test VMs and combination thereof such as median mean standard deviation statistical ranking based on the relationship statistical modeling and the like. Once determined the resource monitoring tool can store the statistical values in the performance data store .

For example the resource monitoring tool can compare the performance metrics of a particular configuration of a test VM operating on a computer system over time. For instance the resource monitoring tool can determine the median mean and standard deviation of the performance metrics collected over time to evaluate the performance over time. Additionally for instance the resource monitoring tool can determine a particular time that the performance metrics fall within a certain percentage relative to performance metrics at other times.

Likewise for example the resource monitoring tool can determine statistical values for the performance metrics of different computing systems hosting a particular configuration of a test VM whether in the same location different location or both. In this example the resource monitoring tool can compare the statistical values to determine the performance of computing systems relative to each other. Additionally the resource monitoring tool can determine statistical values for the performance metrics of different configurations of test virtual machines whether executing on the same computer systems different computer systems or both. The resource monitoring tool can compare the statistical values to determine the performance of different configurations of the test virtual machines relative to each other.

The resource monitoring tool can also include the interface to allow the user device to communicate via one or more networks with the resource monitoring tool and access the performance metrics. The user device can include computer devices such as desktops laptops servers etc. or mobile devices such as smart telephones tablet computers cellular telephones personal digital assistants etc. The user device can include hardware resources e.g. processors memory storage network interface I O devices etc. and software resource e.g. operating systems application programs mobile apps etc. that are found in conventional computer devices.

In implementations the interface can be any type of interface that allows a user to communicate locally and remotely with the resource monitoring tool . For example the interface can include a graphical user interface GUI or command line interface that allows a user to interact with the resource monitoring tool via the computer system on which the resource monitoring tool is executing. Also for example the interface can include a web based interface that allows the user device to remotely communicate with the resource monitoring tool using a web based application such as a web browser. Likewise for example the interface can include an application programming interface API that allows applications on the user device to communicate with the resource monitoring tool . In some implementation the interface can be a Web Service API.

In implementations a user of the user device can desire to evaluate the performance of the computer resource service . For instance the user can desire to determine the best location computer systems and configuration of MIs to be initiated in the computer resource service. To achieve this the user device can send a request to the resource monitoring tool to provide a set of the performance metrics. In response the resource monitoring tool can be configured to search the performance data store and retrieve a set of the performance metrics that match the request of the user device . The resource monitoring tool can be configured to send the set of performance metrics to the user device .

To provide meaningful information to the user device the resource monitoring tool can be configured to utilize filters when determining the set of performance metrics to retrieve for the user device . In particular the resource monitoring tool can utilize the filters to determine the particular performance metrics to retrieve for the user device. The filters can include one or more parameters that specify which of the performance metrics is desired by the user device .

For example the filters can include one or more parameters related to the computer systems in the computer resource service . These can include an identification of a particular locations or regions where the computer systems are located an identification of a particular configurations of the computer systems and the like. Additionally for example the filters can include one or more parameters related to the test VMs or the tests performed on the test VMs . These parameters can include an identification of a particular type or configuration of a test VMs an identification of a location or region the test VMs where initiated an identification of a benchmarking test a date or time range that tests were performed and the like. Also for example the filters can include one or more parameters around the performance metrics themselves. These parameters can include a particular type of performance metric e.g. processor performance memory performance I O performance network performance etc. a particular value for the performance metrics particular statistics of the performance metrics e.g. average values median values certain percentile etc. and the like.

As illustrated in the user device can include a web browser for communicating with the resource monitoring tool . In this example the interface can be configured to communicate with the web browser utilizing web based protocols e.g. hypertext markup language HTML . The interface can include one or more web pages one or more web applications and the like that allow the user device to request a set of performance metrics. The interface can include one or more web pages one or more web applications and the like that also allow the user device to provide or select one or more of the filters. Likewise the interface can include one or more web pages one or more web applications and the like that allow the resource monitoring tool to provide the set of performance metrics to the user device .

Additionally as illustrated in the user device can include a client application for requesting performance metrics. The interface can include an API that allows the client application to communicate with the resource monitoring tool . The client application and the interface can communicate using any appropriate type of messaging such as by using messages in extensible markup language XML format and exchanged using an appropriate protocol such as SOAP derived from the Simple Object Access Protocol . The processes provided by the resource monitoring tool via the interface can be written in any appropriate language such as the Web Services Description Language WSDL . The client application can communicate with the resource monitoring tool under the control of a user. Likewise the client application can automatically communicate with the resource monitoring tool .

In implementations other types of computer systems and MIs can communicate with the resource monitoring tool via the interface to acquire the performance metrics. A computer system can communicate with the resource monitoring tool via the interface . For example the computer system can be the computer system of a third party that is not utilizing the computer resource service but desires to monitor the performance of the computer resource service . For instance the third party can be a service that provides performance information and statistics for the computer resource service . The computer system can be configured to communicate with the resource monitoring tool via the interface under the control of an operator. Likewise the computer system can be configured to automatically communicate with the resource monitoring tool via the interface to acquire the performance metrics.

Additionally for example a VM can be configured to communicate with the resource monitoring tool via the interface . For example The VM can acquire the performance metrics in order to determine computer resources hosting itself or other VMs. The VM can be hosted by the computer resource service any other type of computer resource service or any type of computer systems. The VM can be configured to communicate with the resource monitoring tool via the interface under the control of an operator. Likewise the VM can be configured to automatically communicate with the resource monitoring tool via the interface to acquire the performance metrics.

In the resource monitoring tool can monitor performance metrics for the computer resource service . Below is a general description of monitoring the performance metrics by the resource monitoring tool . A detailed description of the process can be found in related application U.S. patent application Ser. No. 13 899 407 filed May 21 2013 entitled DETERMINING AND MONITORING PERFORMANCE CAPABILITIES OF A COMPUER RESOURCE SERVICE to Simon Jeremy Elisha the disclosure of which is incorporated by reference herein in its entirety.

In general the resource monitoring tool can determine identification information for the computing systems computer systems and computer systems such as the location of the computer systems the names of the computer systems the network addresses of the computer systems access information for the computing systems and the like. Additionally the resource monitoring tool can determine details of the computing systems computer systems and computer systems such as hardware and software components of the computing systems. Additionally the locations and configurations of the computer systems can also be preprogrammed in the resource monitoring tool .

Then the resource monitoring tool can determine a set of the computer systems that is representative of the location distributions of the computing systems and the computing resources of the computing systems. That is the resource monitoring tool can select computer systems that represent different locations of the computing systems and different computer resource configurations of the computing systems. The number of computer systems selected can be statistically significant so that an accurate measure of the performance can be determined.

For example if the computer systems are located at a first location and the computer systems are located at a second location the resource monitoring tool can select a number of the computer systems and a number of the computer systems that are representative of each location and yield reliable performance metrics e.g. 5 of the computer systems and 5 of the computer systems . Likewise in this example the computer systems can have two computer resource configurations e.g. a first group of computer systems have the same processors memory and network bandwidth and a second group of the computer systems have the same processor memory and network bandwidth but different from the first group. When selecting computer systems from the computer systems the resource monitoring tool can select a statistically significant number from both the first group and the second group.

Next the resource monitoring tool can initiate test VMs on the set of computer systems. The resource monitoring tool can select the same configuration for each of the test VMs so that the performance can be compared and correlated between the computer systems. For example the resource monitoring tool can select a test VM that is configured to offer particular computer resources e.g. processing power memory I O resources network bandwidth etc. . The resource monitoring tool can configure the test VMs . Likewise the resource monitoring tool can select a preconfigured virtual machine to initiate on the computer systems.

Once initiated the resource monitoring tool can monitor performance metrics of the test VMs on the set of computer systems. The resource monitoring tool can remotely monitor the performance metrics via a network connection. The resource monitoring tool and or the monitoring agent can run various benchmarking test on the test VMs . The benchmarking tests can include any types of conventional tests that measure processor performance e.g. score based on software execution instruction execution etc. memory performance e.g. latency read speed write speed etc. input output I O performance e.g. I O per second I O bandwidth etc. network performance e.g. network bandwidth network packets per second etc. and the like. The resource monitoring tool can monitor the performance metrics over time.

In the resource monitoring tool can store the performance metrics monitored for the computer resource service . The resource monitoring tool can store the performance metrics in one or more data structures such as the performance data store . The resource monitoring tool can store the performance metrics as well as other information. The other information can include for example the information collected in .

During the monitoring of the performance by the resource monitoring tool a user of the user device can desire to determine the performance of the computer resource service . Accordingly in the user device can establish communications with the resource monitoring tool . The user device can establish communications with resource monitoring tool via the network . For example the user device can utilize a web browser to communicate with the resource monitoring tool . Likewise for example the user device can utilize a client application to communicate with the resource monitoring tool .

In the user device can send a request to the resource monitoring tool for a set of the performance metrics. To acquire the set of performance metrics the user device can include filters in the request for the set of performance metrics. The filters can include one or more parameters that specify which of the performance metrics is desired by the user device .

For example the filters can include one or more parameters related to the computer systems in the computer resource service . These can include an identification of a particular locations or regions where the computer systems are located an identification of a particular configurations of the computer systems and the like. Additionally for example the filters can include one or more parameters related to the test VMs or the tests performed on the test VMs . These parameters can include an identification of a particular type or configuration of a test VMs an identification of a location or region the test VMs where initiated an identification of a benchmarking test a date or time range that tests were performed and the like. Also for example the filters can include one or more parameters around the performance metrics themselves. These parameters can include a particular type of performance metric e.g. processor performance memory performance I O performance network performance etc. a particular value for the performance metrics particular statistics of the performance metrics e.g. average values median values certain percentile etc. and the like.

In in response to receiving the request the resource monitoring tool can retrieve the set of performance metrics. The resource monitoring tool can search the performance data store to identify the performance metrics that meet the filters in the request. From the search the resource monitoring tool can retrieve the set of performance metrics that meet the filters in the request.

For example if the request includes filters that specified a particular location in the computer resource service and a particular date range the resource monitoring tool can search the performance data store and retrieve all the performance metrics that were monitored in that particular location during that date range. In another example if the request includes filters that specified a particular location a particular benchmark test and a particular date range the resource monitoring tool can search the performance data store and retrieve all the performance metrics that were monitored in that particular location for the particular benchmark test during that date range. In another example if the request includes filters that specified a particular configuration of a test VM the resource monitoring tool can search the performance data store and retrieve all the performance metrics that were monitored for that particular configuration of the test VM .

In the resource monitoring tool can send the set of performance metrics to the user device . The resource monitoring tool can send the set of performance metrics via the network . For example if the user device is communicating via the web browser the resource monitoring tool can provide the set of performance metrics in a web page to be used by the web browser . Likewise for example if the user device is communicating via the client application the resource monitoring tool can provide the set of performance metrics in data structure with a format that is accessible by the client application .

In the user device can perform one or more actions based on the set of performance metrics. For example the user device can output the set of performance metrics. For example the user device can display the set of performance metrics on an I O device e.g. display of the user device .

Likewise the user device can utilize the performance metrics to assist in any process that requires determination of the performance of the computer resources of the computer resource service . For example performance metrics can be utilized to determine a particular computer system or location of computer systems on which to initiate new MIs. For instance if a particular computer system or particular location of computer systems shows good performance metrics for the test VMs the user device can be initiate or request initiation of new MIs on the particular computer system or in a the particular location. Likewise for example if the user device receives a set of performance metrics for different configurations of test VMs the user device can utilize the set of performance metrics in selecting a configuration for MIs to be initiated in the computer resource service. Additionally for example the performance metrics can be utilized to balance the MIs currently hosted in the computer resource service . For instance if a particular computer system shows poor performance metrics for the test VMs one or more MIs hosted by the particular computer system can be migrated to a different computer system that shows better performance metrics.

In implementations the computer resource service can provide computing resources as a service to users that are located in regionally and geographically distinct locations. In provide services to the regionally and geographically distinct locations the computer systems of the computer resource service can be dispersed among the various geographic locations and regional locations. As illustrated in the computer resource service can be divided into several geographic locations or regions for example geographic location and geographic location . That is the various computer systems supporting the computer resource service can be located in different geographic locations to support computer resources offered in the different geographic locations.

For example the computer resource service can include a number of data centers for example a data center A a data center B a data center C a data center D and a data center E . As illustrated in the data center A and the data center B can be located in the geographic location . The data center C data center D and the data center E can be located in the geographic location . The data centers within a particular geographic location can also be dispersed in sub regions of the particular geographic location.

As illustrated in the data center A can include a number of computer systems such as computer systems computer systems and computer systems . Likewise the data center B the data center C the data center D and the data center E can include a number of computer systems. To determine and monitor the performance of the data the resource monitoring tool can be configured to initiate test VMs and on the computer systems computer systems and computer systems respectively. As described below the resource monitoring tool can be configured to select the computer systems so as to accurately represent the computer resources of the data center A of the computer resource service .

When determining where to host MIs in the computer resource service the computer resource service can desire to determine the performance of the computer systems across all the geographic and regional locations. Likewise when utilizing the computer resource service users can desire to determine the computer systems that will provide computing resources that best fits the users needs. For example users can desire to determine the performance of computer systems within their geographic location as well as computer systems in other geographic locations. Accordingly the resource monitoring tool can monitor and determine the performance metrics that are representative of the locations of the computer system and the configurations of the computer systems.

In implementations the process described above can be utilized to report the performance metrics of the computer resource service . For example the filters utilized in requested the set of performance metrics can be tailored for the computer resource service . For instance the filters can include a filter for the geographic location of the computer resource service e.g. geographic location and geographic location . Also the filters can include a filter for the data centers of the computer resource service e.g. a data center A a data center B a data center C a data center D and a data center E .

In addition the filters can include filters around the specific computer systems of the computer resource service e.g. computer systems computer systems and computer systems of the data center A . These filters can include one or more parameters associated with the configurations of the computer systems. Likewise these filters can include one or more parameters associated with the test VMs e.g. test VMs and such as configurations of the test VMs benchmark tests performed by the test VMs and the like.

The user device can utilize the performance metrics to assist in any process that requires determination of the performance of the computer resources of the computer resource service .

As described above the resource monitoring tool can be located with the computer resource service or on an external computer system to monitor the performance of the computer resource service . In implementations a copy of the resource monitoring tool can be located on the user device . The user device can utilize the copy of the resource monitoring tool to monitor the performance and determine the set of performance metrics as described above.

In implementation the copy of the resource monitoring tool can be configured to output a user interface e.g. a graphic user interface or command line interface . A user of the copy of the resource monitoring tool can utilize the user interface to control the copy of the resource monitoring tool . For example the filters can be input via the user interface and the set of performance metrics can be output via the user interface.

As illustrated in the computing device can include one or more processors of varying core configurations and clock frequencies. The computing device can also include one or more memory devices that serve as a main memory during the operation of the computing device . For example during operation a copy of the resource monitoring tool can be stored in the one or more memory devices . The computing device can also include one or more peripheral interfaces such as keyboards mice touchpads computer screens touchscreens etc. for enabling human interaction with and manipulation of the computing device .

The computing device can also include one or more network interfaces for communicating via one or more networks such as Ethernet adapters wireless transceivers or serial network components for communicating over wired or wireless media using protocols. The computing device can also include one or more storage device of varying physical dimensions and storage capacities such as flash drives hard drives random access memory etc. for storing data such as images files and program instructions for execution by the one or more processors .

Additionally the computing device can include one or more software programs such as the resource monitoring tool . The one or more software programs can include instructions that cause the one or more processors to perform the processes described herein. Copies of the one or more software programs can be stored in the one or more memory devices and or on in the one or more storage devices . Likewise the data for example the performance data store utilized by one or more software programs can be stored in the one or more memory devices and or on in the one or more storage devices .

In implementations the computing device can communicate with one or more remote user devices and the computer resource service via a network . The one or more remote user devices can be any types of conventional computing devices. For example the one or more user devices can include desktops laptops servers etc. or mobile devices such as smart telephones tablet computers cellular telephones personal digital assistants etc. The network can be any type of network such as a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof. The network can support communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In implementations the computing device can exchange data with the one or more user devices and the computer resource service over the network . For example the computing device can receive requests for the one or more of the performance metrics from the one or more user devices .

The computing device and the resource monitoring tool can be implemented as part of at least one service or Web service such as may be part of a service oriented architecture. As described above the resource monitoring tool can implement an interface for example a Web Services API. The computing device can exchange data with the one or more user devices via the Web Services API during operation of the at least one service or Web service. Services such as Web services can communicate using any appropriate type of messaging such as by using messages in extensible markup language XML format and exchanged using an appropriate protocol such as SOAP derived from the Simple Object Access Protocol . Processes provided or executed by such services can be written in any appropriate language such as the Web Services Description Language WSDL . Using a language such as WSDL allows for functionality such as the automated generation of client side code in various SOAP frameworks.

In implementations the computing device can be utilized as part of a Web server architecture. In the Web server architecture the computing device can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The computing device also can be capable of executing programs or scripts in response requests from the one or more remote user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The computing device can also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The computing device can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In some implementations information can reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate.

In implementations the components of the computing device as described above need not be enclosed within a single enclosure or even located in close proximity to one another. Those skilled in the art will appreciate that the above described componentry are examples only as the computing device can include any type of hardware componentry including any necessary accompanying firmware or software for performing the disclosed implementations. The computing device can also be implemented in part or in whole by electronic circuit components or processors such as application specific integrated circuits ASICs or field programmable gate arrays FPGAs .

Certain implementations described above can be performed as a computer applications or programs. The computer program can exist in a variety of forms both active and inactive. For example the computer program can exist as one or more software programs software modules or both that can be comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include non transitory computer readable storage devices and media and signals in compressed or uncompressed form. Examples of non transitory computer readable storage devices and media include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Examples of computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present teachings can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program s of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the teachings have been described with reference to examples of the implementations thereof those skilled in the art will be able to make various modifications to the described implementations without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular although the method has been described by examples the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the terms one or more of and at least one of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Further unless specified otherwise the term set should be interpreted as one or more. Also the term couple or couples is intended to mean either an indirect or direct connection. Thus if a first device couples to a second device that connection may be through a direct connection or through an indirect connection via other devices components and connections.

For simplicity and illustrative purposes the principles of the present teachings are described above by referring mainly to examples of various implementations thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in many different types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the preceding detailed description references are made to the accompanying figures which illustrate specific examples of various implementations. Electrical mechanical logical and structural changes can be made to the examples of the various implementations without departing from the spirit and scope of the present teachings. The preceding detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

