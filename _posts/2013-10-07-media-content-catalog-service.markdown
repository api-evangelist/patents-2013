---

title: Media content catalog service
abstract: Aggregating media content catalog data from a plurality of content providers. The catalog data is merged according to rules and provided to a user on a scheduled basis or on demand. In an embodiment, the merged catalog data represents an incremental update to previously delivered catalog data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09055317&OS=09055317&RS=09055317
owner: Microsoft Technology Licensing, LLC
number: 09055317
owner_city: Redmond
owner_country: US
publication_date: 20131007
---
This application is a continuation of U.S. patent application Ser. No. 13 099 914 filed May 3 2011 issued on Oct. 8 2013 as U.S. Pat. No. 8 555 317 which is a continuation of U.S. patent application Ser. No. 11 461 589 filed Aug. 1 2006 issued on Jun. 14 2011 as U.S. Pat. No. 7 962 937 the entire contents of which are incorporated herein by reference.

Consumers have been benefiting from additional freedom and control over the consumption of digital media content. One example is the proliferation of personal video recorder systems PVRs that allow consumers to record television shows for later viewing. The adoption of PVRs has furthered interest in on demand consumer driven experiences with content consumption. Examples of existing systems include on demand digital cable internet video streaming services and peer to peer distribution networks. Other existing systems include music and video stores providing consumers with content that may be purchased and subsequently viewed on personal video or audio players.

Video catalog services list the programming available through existing video services. Such video catalog services are typically developed based on the music service or video blog service associated therewith. As a result there are certain design limitations. For instance the existing video catalogs are derived from a music or video blog catalog which lacks support for concepts particular to the video space such as channel and series . In addition there is no support for offline video catalog browsing. Users must be online to browse the video catalog in the existing systems. Further there is no support for ad sponsored free video downloads. Existing systems also typically rely on a single source for catalog content.

Embodiments of the invention provide a catalog of media items to a user. In an embodiment the invention aggregates catalog data received from a plurality of content providers. The catalog data is associated with a plurality of media items available from each of the content providers. The aggregation occurs based on rules to create a user catalog in a pre defined catalog format for consumption by a user.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

In an embodiment the invention includes a media content catalog service such as illustrated in . While illustrates an exemplary operating environment for the media content catalog service aspects of the invention are not limited to such an environment. The media content catalog service is operable in other operating environments such as a video game console embodiment a streaming media system a traditional cable television system an audio file catalog embodiment a pay download embodiment an ad sponsored free download embodiment a subscription embodiment and the like.

Further although described primarily in the context of video media files aspects of the invention may be applied to various forms of digital media including video and multimedia files e.g. movies movie trailers television shows etc. audio files e.g. music tracks news reports audio web logs audio books speeches comedy routines etc. media broadcasts e.g. webcasts podcasts audiocasts videocasts video blogs blogcasts etc. and images.

Aspects of the invention support both online and offline catalog browsing with a hybrid catalog request model. Alternatively or in addition to viewing the catalog online the hybrid catalog request model enables catalog data to be downloaded by a client for offline catalog browsing and enables catalog data to be requested on demand.

In one embodiment the invention interlinks merges aggregates or otherwise combines catalog data from multiple content providers to create an integrated catalog with metadata from the content providers based on rules. The integrated catalog contributes to a consistent user experience. The rules are configurable and may be updated without recompiling the aggregation engine. Exemplary rules are shown in Appendix A. While the combination of the catalog data may be referred to as interlinking and or merging in particular embodiments aspects of the invention are operable with any process to combine the catalog data.

Referring again to an exemplary block diagram illustrates a media content download system. In one embodiment the media content download system of is an Internet on demand video service that offers a large catalog of program content that may be downloaded by users free of charge e.g. no subscription fee on a subscription basis or on a pay per download basis. The program content and ads e.g. content items are always available. For example the content items may be stored on a computing device local to the user such as media service client or archived on a server e.g. such as owned by content owners . The content items may be organized in a hierarchy of seasons each having series with each series having episodes. Revenue is generated by dynamically associating ads with the program content at playback time. The ads are inserted into the program content at playback time and as such may change from viewing to viewing.

The content owners or providers supply program content e.g. video and or audio files with associated metadata. Exemplary video fundamentals provided by the content owners are shown in Appendix B. The example in Appendix B is merely exemplary. Other embodiments of the video fundamentals e.g. markup language files are contemplated. This metadata also includes the locations in the video at which ads can be inserted e.g. ad breaks and which ads provider is responsible for running the ad campaigns. One or more ads providers or advertisers sell ads against the ad breaks. The ads providers supply ad content . The ads providers also run an ad engine and report collection service for collecting the reports of which ads have been played. Furthermore the ads providers make available ad manifest files via an ad manifest service . The ad manifests may be distributed via database stream file or the like. The ad manifests include information about the current ad campaigns including which ads or groups of ads should be associated with which types of program content. The ad manifests also specify when the advertising may be shown and on what devices formats. The ad manifests further include the definition of tracking events for reporting on the advertising playback e.g. a video ad was played thus it can be billed .

Content ingestion servers receive the program content supplied by the content owners together with the location of the ad manifests. Content delivery networks interface with the media service client or other computing device associated with the user to deliver the content items including program content and advertisements to the user .

The user interfaces with the media service client application computing device or the like that provides functionality such as browsing searching downloading managing and consuming the content items. The media service client downloads catalog data from a catalog service and allows the user to browse it in search of content items. Once an item is selected for download the corresponding ad manifest is retrieved by the media service client and stored. The ad manifest for each item of program content includes the information for determining which ads should be downloaded together with the program content. The media service client downloads the selected program content and associated ads. Downloading includes retrieving the program content and associated ads. Downloading may also include receiving the program content and associated ads pushed from another computing device e.g. pushed from a server at regular intervals .

The catalog service includes or has access to a memory area . The memory area stores a plurality of interlinking rules . The interlinking rules define the processing of input data. The processing may include interlinking merging or any other combination of the catalog data . The memory area further stores the catalog data from the content owners . The catalog data is associated with a plurality of media items available from each of the content owners . The catalog data includes metadata items describing the media items. Exemplary metadata items describe aspects of the media item such as category genre contributor ratings and roles e.g. actors actresses .

In one embodiment one or more computer readable media or other memory areas such as memory area associated with the catalog service have computer executable components comprising a rules component an interface component an aggregation engine component and a front end component . The rules component enables configuration by the user of interlinking rules for combining catalog data such as catalog data from the content providers or owners . The interface component receives from the content owners the catalog data including a plurality of metadata items. Each of the plurality of metadata items includes channel metadata and group metadata. The channel metadata and group metadata describe a media item associated with the metadata item. The aggregation engine component combines the catalog data received by the interface component at least by comparing the channel metadata and group metadata from the received catalog data to identify similar media items. The front end component provides the combined catalog data to the user . In an embodiment the rules component updates the interlinking rules based on input from the user without recompiling the aggregation engine component .

In an embodiment of the invention a computer computing device or other general purpose computing device is suitable for use as the catalog service in the figures illustrated and described herein. The computer has one or more processors or processing units and access to a memory area such as memory area .

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer. By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

In operation a computing device executes computer executable instructions such as those illustrated in the figures to implement aspects of the invention.

Referring next to an exemplary flow chart illustrates operation of a video catalog service. At the catalog format is defined according to a multi field schema or other catalog format such as described in Appendix C. The catalog format stores metadata in fields such as a virtual channels data field a video data field a video group data field a video series data field a contributor data field a poster data field a trailer data field and a supplementary data field. Each provider may create a virtual channel of content. The virtual channels data field stores metadata corresponding to a video list defining one or more video elements and a contributor list defining one or more contributor elements. Each of the video elements has an identifier and a title associated therewith. Each of the contributor elements identifies a contributor to the media content. The video group concept allows grouping of similar or related media content items together e.g. by series actor movies or television award . The catalog format also includes an action type for each of the received catalogs. The action type includes one or more of the following add edit and delete. Interlinking and or merging rules are configured at . The interlinking rules may be configured based on input from the user or automatically adjusted as a result of previous interlinking operations e.g. a feedback system . The flow loops until catalog data is received from the content providers at . The catalog data being associated with a plurality of media items available from each of the content providers. In an embodiment receiving the catalog data includes importing and loading a data feed from each of the content providers. The content providers format their catalog data according to the multi field schema supported by aspects of the invention. Alternatively or in addition a tool e.g. a web tool receives the catalog data from the content providers as input and outputs data in conformance with the schema.

The received catalog data is aggregated or merged at based on the configured interlinking and or merging rules. In an embodiment interlinking comprises comparing the metadata items from the catalog data to identify similar media items. Aspects of the invention are operable with a plurality of techniques for identifying similar media items or other forms of metadata matching including for example fuzzy matching techniques. Merging and aggregating the catalog data includes parsing the catalog data received from the plurality of content providers and assigning the parsed catalog data to one or more fields of the multi field schema.

The user catalog is generated at or formatted from the aggregated catalog data based on the pre defined catalog format for consumption by the user. In an embodiment generating the user catalog includes propagating the user catalog to a front end database for access by the network interface. The generated user catalog is provided to the user at for example by a network interface on a scheduled basis or on demand.

Aspects of the invention further include transmitting a portion of the generated user catalog to the user. The portion of the generated user catalog may represent an incremental update to a previously transmitted user catalog. Transmission of the incremental update reduces download time and conserves bandwidth. The incremental updates reflect the changes made to the catalog since the last download. Such options may be based on user preferences or system defined preferences. Exemplary preferences may direct for example the download of a full catalog if the user is operating from a personal computer or download incremental updates if the user is operating from a mobile device.

In one embodiment one or more computer readable media have computer executable instructions for performing the method illustrated in .

Referring next to an exemplary block diagram illustrates a video catalog system. In this exemplary embodiment International Standard Audiovisual Number ISAN data import is supported. Metadata is interlinked and merged at the ISAN identifier level. Aspects of the invention map the IDs across the content providers.

Referring next to an exemplary block diagram illustrates the import interlinking and merging of metadata from content providers. Data interlinking merges metadata items based on a set of business rules. One outcome of this process is to generate a mapping table with mapping between elements.

Referring next to an exemplary flow chart illustrates receipt of catalogs from content providers. Referring next to an exemplary flow chart illustrates metadata aggregation.

Referring next to an exemplary flow chart illustrating rule based catalog interlinking. Each rule includes one or more of the following parameters attribute name e.g. attribute collection name to match weight e.g. weight for this rule and a similarity threshold score e.g. a minimum similarity score threshold for this rule to link the metadata item .

Referring next to and an exemplary flow chart illustrating a similarity analysis during rule based metadata interlinking. Metadata interlinking is a multi step process. Each rule may have a different significance to a step therefore rules are weighted in one embodiment. To control the quality of the interlinking each rule has a minimum similarity. If the similarity is less then the minimum it is not considered. The summation of the weighted similarity of all rules defines the similarity of a step which then may be compared to the step s minimum similarity to generate a match. An exemplary summation is shown below in equation 1 .

In one embodiment the fuzzy matching algorithm works on two tables at a time e.g. source and destination tables . Multiple columns of each table are considered for the fuzzy look up. Each column may have a different significance to the rule therefore columns are weighted. To control the quality of the interlinking each column has a minimum similarity. If the similarity is less then the minimum it is not considered. The summation of the weighted similarity of all columns defines the similarity of the rule. An exemplary summation is shown below in equation 2 

Data normalization is performed at the column level. In one embodiment multiple normalization processes are defined for each column and executed in a predefined order.

In row level interlinking the names birth dates birth places etc. of two people may be compared. These attributes are stored in a single row because of their one to one relationship with the people. A result row is built from multiple source rows. In collection level interlinking the peoples works e.g. songs they ve sang movies they have starred in etc. are compared. A result collection is built from multiple source collections. To perform collection level interlinking each item of the collection is compared as with row level interlinking. Treated as a collection the collection level similarity may be calculated and compared to a predefined minimum collection similarity. There are many ways of defining collection similarity as shown in equations 3 4 and 5 . CS MC SCC 3 CS MC DCC 4 CS MC SCC DCC MC 5 where SCC represents a source collection count DCC represents a destination collection count MC represents a match count and CS represents a collection similarity. Alternatively or in addition to a calculated relevant number collection similarity may also be defined as a fixed number.

In one embodiment the collection level interlinking is performed after the row level interlinking. In an embodiment the fuzzy matching algorithm uses a set of pre defined working tables as the input and output at runtime.

To differentiate columns from different sources in a row merge or to differentiate collections from different sources in a collection merge a priority is assigned to each of column collection. There are two types of priority static e.g. predefined and dynamic e.g. content based . A static priority is a predefined fixed value which does not change based on the content of the data. A dynamic priority is based on the content of the data. For example for a row merge the priority may be based on the value of the content or the string length of the content. For a collection merge the priority may be based on the collection item count and a maximum and or minimum value of a column.

In an embodiment the priorities are the same from different sources. There are multiple different ways of handling such a conflict including selecting one of the sources or concatenating or summing the content from the conflicting sources. When performing a row merge selecting one of the sources includes selecting one of the source column contents as the result column content. Concatenating the content comprises concatenating the string type data from the source columns for use as the result column content. Summing the content comprises summing the numerical data in the source column content as the result column content.

When performing a collection merge selecting one of the sources includes selecting one of the collections as the result collection. Concatenating the content comprises adding the source collections items to the result collection.

Aspects of the invention may be implemented as a class of application programming interface routines. In an embodiment MergeWorkerBase is the base abstract class and different types of merges are implemented as different sub classes thereof. A RowMergeWorker class implements the logic of row merge. A CollectionMergeWorker class implements the logic of collection merge.

Although described in connection with an exemplary computing system environment embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment illustrated in is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes PoP devices gaming consoles programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The following examples further illustrate embodiments of the invention. The figures description and examples herein as well as elements not specifically described herein but within the scope of aspects of the invention constitute means for aggregating the metadata items from the catalog data into the merged catalog data.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

The following are exemplary business rules for aggregating content from multiple providers and from a single provider.

Partner A and Partner B have Movie A in their inventory and they both provide the cover art and metadata for the movie. Even though the movie can be purchased downloaded from the two content providers aspects of the invention provide a consistent experience to users for browsing the movie in the catalog described herein. For example the cover art and its movie metadata only show up once the initial catalog browsing experience. When the user decides to purchase or download Movie A the service presents the offers from both Partner A and Partner B and allows the user to choose from which partner to purchase.

Partner A provides two similar law related television shows. To help the user find the desired show the service displays all episodes for both shows. The business rules to implement these actions are based on the following pattern the video title starts with Law and the video type is either a series mini series limited series or movie.

VideoFile element contains information of the physical video file e.g. missionimpossible.wmv for downloading streaming. Generally each VideoInstance will have only one VideoFile element however in cases when the file size for a given VideoInstance is too big e.g. Titanic HD version might break into multiple small files result in multiple VideoFile element. For details on data relationship please refer to the Video Catalog Data Relationship Diagram.

