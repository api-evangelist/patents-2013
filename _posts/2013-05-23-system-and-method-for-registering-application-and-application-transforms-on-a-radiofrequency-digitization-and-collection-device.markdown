---

title: System and method for registering application and application transforms on a radiofrequency digitization and collection device
abstract: An RF digitization and collection system (RFDCS) and methods for implementing the RF digitization and collection system to manage an application storage and retrieval space (App Space), wherein the App Space includes apps that may perform various offline and/or real-time transforms of RF signals received, stored, or played back on the RFDCS. Also, in the various embodiments, the RFDCS may govern the system resources available to these apps while ensuring that the RFDCS's core system functions are not impacted by the execution of one or more of these apps in the App Space. Thus, the RFDCS may enable users to utilize real-time signal processing by running various specialized apps without compromising the RFDCS's core system function, thereby promoting dynamic “on-the-fly” transformation of raw RF signals without compromising the user's overall experience.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09348608&OS=09348608&RS=09348608
owner: QRC, INC.
number: 09348608
owner_city: Fredericksburg
owner_country: US
publication_date: 20130523
---
This application claims the benefit of priority to U.S. Provisional Application No. 61 815 434 entitled App Space for RF Digitization System and Other Test Equipment filed Apr. 24 2013 the entire contents of which are hereby incorporated by reference.

Radiofrequency digitization and collection systems i.e. RFDCSs collect and store radiofrequency RF signals. Generally the raw RF signals that the RFDCS captures may be of limited use to a user of the system. Often the user may desire to manipulate the raw RF signal data or perform other transformations to convert the raw RF signal data into a more useful form such as reducing noise or amplifying a desired signal. However digital signal processing especially when done in real time or on the fly can place a substantial burden on or even completely overwhelm system resources. Thus real time digital signal processing risks overloading system resources and the loss or corruption of desired RF signal data.

Because of the complexity and risk of data loss RFDCSs may not offer users the ability to perform real time online digital signal processing. Such limitations restrict users to offline digital signal processing thereby greatly increasing the user s effort to transform the raw RF signal data into a suitable form. This may also limit the immediate usefulness of collected RF data especially in some instances in which the RF signal data is collected in the field.

The various embodiments describe an RF digitization and collection system RFDCS and methods for implementing the RF digitization and collection system to manage an application storage and retrieval space App Space wherein the App Space includes applications apps that may perform various offline and or real time transforms of RF signals received stored or played back on the RFDCS. Also in the various embodiments the RFDCS may govern the system resources available to these apps while ensuring that the RFDCS s core system functions are not impacted by the execution of one or more of these apps in the App Space. Thus the RFDCS may enable users to utilize real time signal processing by running various specialized apps without compromising the RFDCS s core system function thereby promoting dynamic on the fly transformation of raw RF signals without compromising the user s overall experience.

The various embodiments may also describe methods of presenting various apps to a user via customized displays. In an embodiment a customized display may be specifically tailored to a particular application app and may include various user interface features to enable a user to utilize the app s transform functionalities through an app specific user interface. In another embodiment the customized display may display visualizations or other representations of data the app generates on the RFDCS s display panel using the RFDCS s graphical output and control software.

The various embodiments will be described in detail with reference to the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes and are not intended to limit the scope of the invention or the claims.

As used herein the terms transform s or transformation s are used interchangeably and refer to the modification manipulation or various other types of processing performed on a signal that changes the RF signal into a new form. For example noise reduction desired signal amplification normalization and various filters may be used to perform a transform on a signal to change the signal into a new form. In the various embodiments transforms may be performed using various hardware and software components.

As used herein the terms app s or application s are used interchangeably and refer to programs code processes or operations stored on the RFDCS that among other things implement transforms on RF signals during any of the reception of the RF signals storage of the RF signals and playback of the RF signals. Also as used herein the term App Space refers to a collection of apps stored on the RFDCS that may be used to perform transforms of RF signals.

The various embodiments may be implemented in various RFDCSs an example of which is illustrated in . For example the RFDCS may include a processor coupled to internal memory . Internal memory may be volatile or non volatile memory and may also be secure and or encrypted memory or unsecure and or unencrypted memory or any combination thereof. The processor may also be coupled to a touch screen display panel such as a resistive sensing touch screen capacitive sensing touch screen infrared sensing touch screen or the like. Additionally the display of the RFDCS need not have touch screen capability. Additionally the RFDCS may have one or more antenna for sending and receiving electromagnetic radiation e.g. RF signals that may be connected to a wireless data link and or cellular telephone transceiver coupled to the processor . In another embodiment the RFDCS may also receive and send RF signals over a wired RF connection such as via a coaxial cable or other RF input output feature. The RFDCS may also include physical buttons and for receiving user inputs. The RFDCS may also include a power button for turning the RFDCS on and off. Additionally the RFDCS may include a microphone for receiving sound. The RFDCS may also include a speaker for converting audio signals into audible sound.

In an embodiment a collection system may receive RF signals. The collection system may also include various components such as a filters amplifiers unit a downconverter an analog to digital converter i.e. A D converter and a processing unit . The one or more antennas may wirelessly receive an analog RF signal such as a radio wave. In another embodiment not shown the collection system may receive RF signals directly through a wired RF connection such as a coaxial cable. The filters amplifiers unit e.g. a high pass filter unit may filter and or amplifying the captured analog RF signal . The filtered RF signal may be passed to a downconverter and then to the A D converter . The A D converter may use various techniques to convert the analog signal into a digital signal. After finishing converting the analog RF signal the A D converter may pass the converted digital signal to a processing unit for additional processing before the digital signal is sent for storage in the data storage system .

In an embodiment any combination of the filters amplifiers unit the downconverter the A D converter and the processing unit may optionally implement transforms from an app included in the App Space. In other words the app may operate on the RFDCS and cause any of the components and to apply various transforms to the analog RF signal as it is converted from analog to digital. For example the app may cause the A D converter to apply various offsets and skewing algorithms that among other things may adjust the sampling rate of converted digital signals. In another example the app may decimate the analog RF signal for easier processing and storage using the processing unit . In yet another example the app may configure the downconverter and or the filters amplifiers unit to control frequencies of a received analog RF signal . Thus various apps in the App Space may be utilized to apply transforms to signals throughout the collection process by directly modifying the behavior of any combination of the various components and of the collection system .

In an embodiment the data storage system may include a hard drive . Further the hard drive may maintain processed digital signals in the form of RF digital information RDI files . RDI files may contain digital representations of received RF signal information. In an embodiment the contents of a RF Digital Information RDI file may be in many formats but may generally include an in phase amplitude measurement of the signal I and generally but not necessarily also a 90 degree phase shifted amplitude measurement of the signal Q . Additional meta data that specifics pertinent information about the RDI files construct may also be present in RDI files .

In another embodiment an app included in the App Space may optionally perform transformations on the digital signal stored in the RDI files . For example the app may increase the signal s gain or may apply other filters effects and other transforms. In another embodiment the app may combine multiple RDI Files into a resulting RDI File for use by adding the signals together with or without additional signal manipulation. In another embodiment the app may apply other transforms typical of offline signal processing i.e. computationally intensive signal processing that may not be practical to implement in real time . The hard drive may send the digital signal stored in the RDI files to the transmission system for playback.

The transmission system may include a processing unit a digital to analog converter DAC an upconverter a filters amplifiers unit and one or more antennas for transmitting an analog signal . In preparation for playback a processing unit may process the digital signal received from the hard drive using various known techniques. In one embodiment the processing unit and the processing unit may be the same processing unit e.g. a central processing unit CPU or a digital signal processor DSP . In another embodiment the processing units may be separate components e.g. the processing unit may be a DSP and the processing unit may be a CPU . In yet another embodiment the processing units may be one or more cores in one or more multi core processing units such as a quad or dual core DSP.

The processing unit may send the processed digital signal to the DAC . The DAC may convert the digital signal into an analog signal. After converting the digital signal the DAC may send the converted digital signal to an upconverter which may apply various other transforms to the converted analog signal before sending the converted analog signal to a filters amplifiers unit . The filters amplifiers unit may apply additional transforms to the converted analog signal and may send the converted analog signal to the antennas for transmission as an analog signal . In another embodiment not shown the transmission system may transmit the converted analog signal through a wired RF connection such as a coaxial cable.

In an embodiment similar to the one discussed above with reference to the collection system any combination of the processing unit DAC upconverter and filters amplifiers unit may optionally implement transforms using an app included in the App Space. The transforms stored in the app employed may be varied and may change various characteristics of the analog signal processed by any combination of the processing unit DAC upconverter and filters amplifiers unit in the transmission system .

Thus in the various embodiments apps included in the App Space may perform various transforms during the various stages of signal processing. Particularly the apps may respectively apply transforms in the systems that manage particular aspects of the signal processing such as the collection system the data storage system and the transmission system . In some embodiments the apps may perform transforms on the RF signals without affecting the raw or original RF signal data. In other embodiments the apps may not preserve the original RF signal data when applying transforms.

In an embodiment the system area may also include a system controller that may coordinate and manage the operations of a collection system a data storage system and a transmission system . The system controller may send various signals to the collection system including command and control signals. The collection system may function similarly to the collection system described above with reference to and may include a raw in phase quadrature phase signal generator for converting an analog signal to a digital signal.

In a further embodiment the system controller may include one or more processing cores not shown . The system controller may utilize the one or more processing cores to implement apps within the App Space or to control and or transform various aspects of the RFDCS such as RF signal collection storage and playback. The system controller may allocate specific resources such as specific processing units cores and or other resources to one or more apps in the App Space. For example at least one core may be dedicated to an app performing transforms on i.e. processing RF signals being collected with the collection system while the core system functions utilize the other cores to ensure consist and reliable performance of various other components of the RFDCS. Thus in an embodiment the system controller may leverage the one or more cores to perform real time processing in a non real time system.

In another embodiment the collection system may send raw IQ data to the system controller which may send a signal that includes the raw IQ data to the data storage system . The signal may also be sent using the VITA Radio Transport VRT standard.

In yet another embodiment the data storage system may be similar to the data storage system described above with reference to . The data storage system may store the signal as an RDI file in various storage devices such as a hard drive or solid state drive. Additionally the data storage system may include larger data storage space via eSATA USB or other high data rate bus storage. The data storage system may also send the stored signal back to the system controller in a signal .

In another embodiment the system controller may send a signal to a transmission system which may be analogous to the transmission system described above with reference to . The signal may also include raw IQ data and command and control signals. The transmission system may include a raw IQ transmitter for transmitting signals.

In another embodiment the system controller may be in communication with the display controller . The system controller may send various instructions to the display controller to affect what is displayed on a display screen . For example the display controller may send a signal including an instruction to draw a particular image and the display screen may send a return signal that includes a user s command control i.e. a user s input when the display screen implements touchscreen capabilities .

In the various embodiments as illustrated in a RFDCS may include components in additions to those described above with reference to . These additional components may facilitate the incorporation of an App Space in communication with the system area and the implementation of apps in the App Space to perform various transforms on signals in various systems operating on the RFDCS.

In an embodiment the App Space may have a lower security priority than the system area in order to protect the core system functions performed in the system area . In other words the App Space may be held in a separate and secure area that cannot interfere with the core system functions in the system area thus protecting the integrity and security of the core system functions. Any apps executing on the RFDCS may also be confined to this separate and secure space for similar reasons.

The App Space may include a record of one or more executing apps privileges. For example the App Space may maintain that a particular app has collection system control access privileges thereby allowing the particular app to apply transforms during the RF signal collection process in the collection system . The App Space may also include a record of the App Space allotment. The record may indicate where the apps are stored i.e. the app location the memory available to the apps i.e. allocated RAM and the MIPS allocated to the apps i.e. allocated MIPS . Thus in an embodiment the App Space may manage apps and their available resources.

In another embodiment the system controller may include an app application programming interface i.e. app API . The app API may include various libraries functions system calls etc. that may allow the apps in the App Space to perform transforms in various systems or various stages of signal processing. In a further embodiment the app API may enable an app to perform transforms of signals that the collection system obtains i.e. Rx transforms for example by allowing the app to affect how the A D converter operates in . In another embodiment using the app API the app may apply data transforms in the data storage system by performing offline post processing of the signal while the signal is stored in an RDI file. Similarly the app may perform transforms to signals during play back i.e. Tx transforms .

In another embodiment the app may use the app API to communicate with the display controller to perform various display transforms . Display transforms may include displaying various app specific items on the display screen such as customized user interfaces overlays etc. For example an app may cause an app specific user interface to be displayed on the display screen for use by the user.

In yet another embodiment the App Space may use the app API to display a navigable interactive display on the display screen. Such a display may feature the one or more apps included in the App Space and may enable a user to browse and select the apps included in the App Space for execution on the RFDCS.

A display panel of an RFDCS may include various app specific user interfaces. In an embodiment when an app in the App Space is successfully launched an app specific user interface associated with the launched app may be displayed on the display panel . For example if a noise reducing app i.e. APP is successfully launched the display panel may display the app specific user interface associated with the noise reducing app. The app specific user interface may include various visualizations displays graphics texts and other imagery. The app specific user interface may also include features with which the user may interact such as real or virtual knobs buttons sliders radio buttons scroll bars etc. For example the app specific user interface may display a record button that the user may select to begin recording RF signals. The app specific user interface may also include other buttons or features such as an apply transform button which in this example may apply noise reducing filtering of an RF signal being recorded.

In another embodiment the display panel may include a navigation bar or other feature e.g. the Show All APPs tab that enables a user to browse and select various apps included in the App Space. In one embodiment multiple apps may be operating on the RFDCS simultaneously but only one app may be featured on the display panel . As illustrated in APP is featured as evidenced by its tab being highlighted in the navigation bar. In yet another embodiment the display panel may enable the user to switch which app is featured i.e. which app s app specific user interface is displayed . For example the user may select any one of the other apps in the navigation bar by selecting for example the APP tab the APP tab or the APP tab

Thus in various embodiments an app may utilize the app API as discussed above with reference to to present a fully customizable user interface on the display panel for displaying features specific to that app.

In block the app may respond to system requests for resource requirements. In an embodiment the system may request various types of information about the app including description information and the app s resource and privileges requirements. Responding to the system s requests is described below with reference to .

In block the app may request privileges and resources the app may need to operate in response to being launched. In an embodiment the app may request certain allocations of memory and other system resources as well as privileges to access control other components of the RFDCS such as the transmission system or the collection system. In another embodiment the app may be launched locally e.g. a local operator may select the app on the RFDCS to launch or the app may be launched remotely e.g. a remote operator at a home base may send a remote signal to the RFDCS to launch the app . In determination block the app may determine whether the system granted the app s privileges and resources request. Requesting privileges and resources from the system is described below with reference to .

If the app determines that the system did not grant the privileges and resources request i.e. determination block No the app may wait until resources and privileges become available in block . The app may continue performing in determination block . Otherwise if the app determines that the system granted the privileges and resources request i.e. determination block Yes the app may register its transforms in block . Registering the app s transformations is described in detail below with reference to .

In block the app may perform the registered transforms. In various embodiments the app may perform registered transforms by altering RF signal data during various stages of handling the RF signal data e.g. during its collection storage or playback . Performing transformations is described below in further detail with reference to .

In determination block the app may determine whether it is finished performing transforms. For example the user may have closed the app or the app may have traveled outside of the geographic area in which it was designated to operate. If the app determines that it is not finished performing transforms i.e. determination block No the app may continue performing in determination block . Otherwise if the app determines that it is finished performing transforms i.e. determination block Yes the app may release its privileges and resources back to the system in block . For example the app may release its privileges to the transmission system and release its access to memory. Releasing privileges and resources back to the system is described below with reference to . The app may continue performing in block .

After registering with the system the app may enter Info Mode in block . In an embodiment an app in Info Mode may be limited to responding to requests from the system for various types of information as discussed with reference to . In other words an app in Info Mode may operate in a reduced capacity during which time the system may determine the operating requirements and privileges the app may need to operate minimally and or ideally on the RFDCS.

In determination block the app may determine whether it has received a description request from the system. In an embodiment the system may request information from the app in which the system may use to describe the app. For example the system may request the app s name and the app s intended purposes which the system may later display on the RFDCS s display in the app s app specific user interface for the user to see. If the app determines that it has received a description request from the system i.e. determination block Yes the app may send a description response to the system in block . In an embodiment the description may be a Unicode string and or XML string with one or more of the app s title description purpose etc. The app may continue operating in determination block . However if the app determines that it has not received a description request from the system i.e. determination block No the app may continue performing in determination block .

In determination block the app may determine whether it has received a needed minimum resources request from the system. If the app determines that it has received a needed minimum resources response from the system i.e. determination block Yes the app may send a needed minimum resources response to the system in block . In an embodiment the app may inform the system about the minimum system resources that would allow the app to function on the RFDCS such as the minimum amount of memory the app will need when running at its lowest capacity. The app may also inform the system of the minimum privileges it will need to operate at its lowest capacity such as the hardware on the RFDCS that the app may need for its base functions. The app may continue performing in determination block .

However if the app determines that it has not received a needed minimum resources request i.e. determination block No the app may determine whether it has received a maximum resources request in determination block . In an embodiment the maximum resources request may include requests asking for the systems resources the app would need to operate at peak or full capacity. For example the app may have additional functionalities that it may employ when it has access to a sufficient amount of system resources e.g. more complicated transforms when more memory is available . If the app determines that it has received a maximum resources request i.e. determination block Yes the app may provide a maximum resources response to the system. In an embodiment this response may include the various system resources the app requires to operate fully or to use all of its capabilities. The app may continue performing in determination block .

Otherwise if the app determines that it has not received a maximum resources request i.e. determination block No the app may determine whether it is being launched in determination block . In an embodiment the app may be launched in response to receiving user input on the user interface instructing the RFDCS to launch the app. For example the user may click or touch an icon displayed on the RFDCS s display that represents the app. In another embodiment the app may be launched via a remote interface. For example from a home base an administrative device operated by an engineering supervisor may launch the app remotely on an RFDCS in the field. In yet another embodiment the app may be launched based on a schedule or at startup of the RFDCS. The app may also be launched based on a global positioning satellite position GPS location. For example the app may utilize geo fencing.

If the app determines that it is being launched i.e. determination block Yes the app may request privileges it needs to start as further described with reference to block in .

Otherwise if the app determines that it is not being launched i.e. determination block No the app may continue performing in determination block . In other words the app may remain in Info Mode and may continue responding to requests from the system until the app detects that it is being launched.

In block the app may request privileges from the system that the app needs to start operating. In an embodiment these privileges may include collection system control privileges transmission system control privileges data storage access privileges display access privileges hardware access privileges and various transform privileges. For example an app designed to perform frequency sweeping operations may request hardware access privileges to change the frequency monitored on the RFDCS s transceiver.

In determination block the app may determine whether the system granted the app s privilege requests. In an embodiment the system may grant the app s privilege requests when resources e.g. hardware resources are available. The system may use various other criteria to determine whether to grant the app s privileges requests. If the app determines that the system did not grant its privilege requests i.e. determination block No the app may continue performing by entering Info Mode in block as described with reference to . In other words even after receiving a launch attempt the app may not enter Startup Mode unless the system grants privileges to the app that the app needs to operate.

Otherwise if the app determines that the system did grant the app s privilege requests i.e. determination block Yes the app may enter Startup Mode in block . In an embodiment entering Startup Mode may cause the app to begin attempting to obtain the resources it needs to begin operating on the RFDCS. In block the app may request resources required for it to start from the system. These resources may include memory MIPS and various other system resources allotments that the app may require to operate.

In determination block the app may determine whether it has received the requested resources. In an embodiment the system may allocate the requested resources to the app when there are sufficient system resources. If the app determines that it has received the requested resources i.e. determination block Yes the app may continue performing in Starting Mode by determining whether it has registered all of its transforms in determination block in . Otherwise i.e. determination block No the app may continue performing in Suspended Mode by indicating its required resources in block in .

In block the app may indicate its required resources to the system. In an embodiment by indicating its required resources to the system the app may alert the system to what system resources must become available before the app will be able to operate. For example if the app needs 256 megabytes of system memory to function in a minimum capacity the app may inform the system that it is waiting for 256 megabytes of memory to be freed before it can operate.

In determination block the app may determine whether a reattempt timer has expired. In an embodiment the reattempt timer may be a measure of time in which the app must wait before it reattempts to acquire the system resources it needs to function. If the app determines that the reattempt timer has not expired i.e. determination block No the app may continue performing in determination block . Otherwise if the app determines that the reattempt timer has expired i.e. determination block Yes the app may continue performing by entering Startup Mode in block in . In an embodiment the app may continue to cycle from Startup Mode to Suspended Mode until the resources the app needs to operate are available e.g. after the user closes other apps thereby freeing system resources .

In determination block the app may determine whether it has registered all of its transforms. In an embodiment the app s transforms may include various mechanisms for transforming or processing RF signal data. If the app determines that it has not registered all of its transforms i.e. determination block No the app may determine in determination block whether a reattempt timer has expired. In an embodiment the app may only attempt to register unregistered transforms for a certain period of time. If the app determines that the reattempt time has expired i.e. determination block Yes the app may optionally determine whether to continue without registering all of its transforms in optional determination block . If the app optionally determines to continue without registering all of its transforms i.e. optional determination block Yes the app may enter Running Mode and begin performing transformations in block of method as described below with reference to . Otherwise if the app optionally determines not to continue without registering all its transforms i.e. optional determination block No the app may free all of its registered transforms and privileges in optional block . The app may also alert the system to its failure to register all of its transforms in optional block . The app may continue performing by entering Info Mode in block of method as described above with reference to .

If the app determines that the reattempt timer has not expired i.e. determination block No the app may attempt to register its unregistered transforms with the system in block . The app may continue performing in determination block . In other words the app may continue attempting to register its unregistered transform until the reattempt timer has expired.

Otherwise if the app determines that all of its transforms have been registered with the system i.e. determination block Yes the app may continue performing in Running Mode by performing transformations in block in .

In block the app may perform transformations and other intended functions. In an embodiment transforms may include call back functionality. In such an embodiment the app may provide call backs functions to the system in response to receiving one or more event notifications such as a notification that new RF signal data is being received. In an example the call back functions may cause one or more components of the RFDCS to transform a specific number of bytes of new RF signal data. In another example the call back function may redirect memory pointers to a buffer that the app fills with modified data thereby causing other system components to access the app s buffer instead of the original memory location. In this example the app may cause other components to use transformed RF signal data in the app s buffer rather than the raw RF signal data stored in the original memory location.

In an embodiment the system may begin all initially registered transforms at the same time. In a further embodiment while in Running Mode the app may perform transformations and may respond to a user s inputs. For example an app in Running Mode designed to serve as a software AM FM radio may display various knobs tuners volume slides etc. on the display of the RFDCS and respond to the user s inputs e.g. adjusting the tuner to a different FM channel or increasing the volume .

In determination block the app may determine whether to request additional resources from the system or registration of an additional transform. For example the app may have received its minimum required allotment of resources and may subsequently determine that its performance could be improved with additional resources. In another example in response to various created transient data or the user s inputs the app may determine to register a new transform according to the app s design and purpose such as an additional smoothing noise reduction transform to be applied to the input feed. The app s determination may factor in the app s current resources the availability of additional system resources and the way in which the user is using the app e.g. the user may only be using the app to perform low complexity transforms . Also as described above the app may request additional resources or registration of an additional transform inter alia to improve its performance and or capabilities. If the app determines not to request additional resources or registration of an additional transform i.e. determination block No the app may continue performing in determination block .

However if the app determines to request additional resources or registration of an additional transform i.e. determination block Yes the app may request additional resources or registration of an additional transform from the system in block . The app may determine whether the system has granted the app the requested additional resources or the request additional transform registration in determination block . In an embodiment the app may dynamically adjust its performance based on whether additional resources or additional transform registrations requests are granted. If the app determines that additional resources or additional transform registrations requests were not granted to the app i.e. determination block No the app may continue performing in determination block .

Otherwise if the app determines that additional resources or additional transform registrations requests were granted i.e. determination block Yes the app may utilize the additional resources and or additional registered transforms in block . For example if the app receives additional resources that would enable the app to perform additional transforms or otherwise enhance its capabilities the app may begin utilizing those additional resources to perform enhanced operations. In another embodiment not shown the app may determine whether to utilize the additional resources once obtained from the system. In this embodiment the app may not be designed to adjust its performance dynamically based on the resources it has available. In another embodiment in which the app s request for registration of an additional transform is granted the app may apply the additional transform to the data as soon as the additional transform is registered and the app may utilize the additional transform as specified by the app s purpose. Further the app may be responsible for handling any transient data periods based upon the app s design and purpose.

The app may also determine whether to release extra resources or deregister additional transforms in determination block . In an embodiment after a period of time the app may determine that its operations do not require the amount of system resources or the number of transforms that the system has allocated or registered to the app. For instance the app may have been allocated a maximum or ideal amount of resources but in practice the app does not require a maximum amount of system resources. In another example the app may determine to deregister a transform that is no longer need and to resume normal operation. If the app determines not to release extra resources or deregister additional transforms i.e. determination block No the app may continue operating in determination block .

Otherwise i.e. determination block Yes the app may cleanly exit the extra resources or deregister the additional transform in block . In an embodiment the system may not release the extra resources until the app cleanly exits those resources. The app may return the extra resources to the system in block .

In determination block the app may determine whether the user has closed the app. For example the user may have finished using the app to perform certain transformations on RF data and may close the app to free up resources for other apps operating on the RFDCS. If the app determines that the user has not closed the app i.e. determination block No the app may continue performing in block by continuing to perform transformations and other intended functions. In other words the app may continue in Running Mode until the user or the system closes the app. If the app determines that the user has closed the app i.e. determination block Yes the app may continue performing in Stopping Mode in block in .

In block the app may deregister filters. The app may also deregister all transforms in block . In an embodiment all transforms may be stopped at the same time. The app may also free memory the system had allocated to the app in block . For example the system may have allocated 512 megabytes of memory for the app s use and the app may release this memory for use by other entities operating on the RFDCS. In another embodiment the app may optionally free other areas such as pointers data structures etc. in optional block .

The app may continue performing by entering Info Mode in block in . Thus in the various embodiments once an app has finished operating it may return to Info Mode where it may operate in a reduced capacity until it is launched again.

In block the system may register the app. In an embodiment registering an app may include adding the app to a list of apps approved to operate on the RFDCS. In some embodiments the system may perform various scans checks or other verification methods to ensure that the app does not contain harmful content e.g. malware viruses worms etc. and or that the app is compatible with the RFDCS. For example the system may determine whether the app utilizes an App Space application programming interface API which may define various mandatory and optional interfaces the app must implement to be used on the RFDCS. Registering an app is further discussed below with reference to block in .

The system may also add the registered app to the user interface UI in optional block . In an embodiment an app may include a corresponding app specific user interface for use with the application as discussed above with reference to . For instance the app may include a display and various buttons sliders or other user interaction elements for receiving input from a user. In another embodiment the system may display multiple app specific user interfaces e.g. as tabs or as in a selectable list and provide the user with the ability to scroll through or switch which UI is featured on the RFDCS s display.

The system may put the app into Info Mode in block . Thus in an embodiment the RFDCS may allow the app to operate only to the extent necessary to retrieve resource requirement information performance specifications and other information the RFDCS may need to manage the app s operation. Info Mode is further discussed above with reference to block in .

In determination block the system may determine whether there is a request from the app for privileges. In an embodiment the system may receive input from the user to start the app. For example while collecting raw RF signals a user may select an icon representing the app on the RFDCS s display panel thereby issuing a request to the RFDCS to begin that app. After being selected for launch the app may request privileges from the system that the app may require to perform correctly. If the system does not receive a request for privileges from the app i.e. determination block No the system may continue monitoring for a request to launch the app. In other words the app may remain in Info Mode until there is a request to launch that app. Otherwise if the system does receive a request for privileges i.e. determination block Yes the system may receive a request from the app for privileges in determination block .

In various embodiments the system may manage various privileges among one or more apps. Such privileges may include a collection system control privilege a transmission system control privilege a data storage access privilege and a display access privilege receiver Rx transform privileges transmitter Tx transform privileges data transform privileges hardware access privileges and persistent storage access privilege among others. In an embodiment the collection system control privilege may be an exclusive privilege i.e. granted to only one app at a time and may allow the app to control the RFDCS s collection reception hardware e.g. tuners bandwidth data rates etc. . The transmission system control privilege may be another exclusive privilege that enables one app to control the RFDCS s transmission hardware. Similarly the data storage access privilege may authorize an app to request read write or read write access to the RFDCS s data storage e.g. hard drives flash drives non volatile memory etc. . The display access privilege may enable an app to have its own display tab to communicate with users such as a marker on the main display or as its own display area e.g. an app specific tab and display accessible through the main display .

If the system determines not to grant required privileges to the app i.e. determination block No the system may continue performing in determination block . In an embodiment when the system determines not to grant required privileges to the app because for example the app is requesting an exclusive privilege currently held by another app the system may continue to monitor for subsequent privilege requests from the app and may make subsequent determination as to whether the app will receive the privileges requested. However if the system determines to granted the privileges to the app i.e. determination block Yes the system may put the app into Startup Mode in block .

In an embodiment after entering Startup Mode an app may request a certain allotment of system resources such as certain amount of memory and MIPS i.e. millions of instructions per second the app to operate. In determination block the system may determine whether to grant resources to the app. In an embodiment the system may not grant resources to an app when there are insufficient resources to meet the app s resource requirements. If the RF does not grant the resources to the app i.e. determination block No the system may put the app into a Suspended Mode in block .

In an embodiment an app in Suspended Mode may not operate and instead must wait for system resources to become available. In an example when an app is launched and requires more memory and or MIPS than the system can allocate because the core system functions and other apps have already been allocated the available system resources the app must wait until the system resources it requires is freed. In one embodiment the system may determine whether a reattempt timer has expired in optional determination block . The reattempt timer may cause the system to keep the app in Suspended Mode for a certain amount of time before re determining whether system resources are available for the app. Thus if the system determines that the reattempt timer has not expired i.e. optional determination block No the system may continue waiting until the reattempt timer does expire. When the reattempt timer expires i.e. optional determination block Yes the system may put the app back into Startup Mode in block . This cycle of checking for available resource and putting the app into Suspended Mode may continue until sufficient system resources become available.

However if the system does grant resources to the app i.e. determination block Yes the system may put the app into Starting Mode in block . In an embodiment an app in Starting Mode may retrieve resource and prepare to begin executing on the RFDCS. Starting Mode is described in further detail with reference to . After putting the app into Starting Mode the system may put the app into Running Mode in block . While in Running Mode the app may execute on the RFDCS. Running Mode is described in further detail with reference to .

In another embodiment the system may determine whether the app is finished running in determination block . For example the app may only run for a certain amount of time to perform a particular transform e.g. an offline transform of existing data or the system may receive input from the user locally or via a remote interface to terminate the app such as when the user no longer desires to perform the app s transform or when the user has finished collecting RF data. In another example the system may determine that the app has finished running when the RFDCS exits the geographic region where the app was scheduled to run e.g. geo fencing or the system may determine that the time in which the app was scheduled to run has expired. Regardless of reason when the system determines that the app has finished running i.e. determination block Yes the system may put the app into Stopping Mode in block . In an embodiment the system may free the system resources allocated to an app in Stopping Mode. The system may also return the app to Info Mode in block .

Otherwise the system may determines that the app is not finished running i.e. determination block No and the system may continue performing in determination block .

In block the system may access the app. For example the system may access the app by accessing the app s source code stored in memory on the RFDCS or in memory stored on a network.

In block the system may implement a checksum algorithm to check the app s integrity using known methods. In an embodiment the checksum procedure may reveal whether the app includes errors that may have been introduced when being loaded on the RFDCS. The system may also determine if the checksum indicates errors in determination block .

If the system determines that the checksum indicates errors i.e. determination block Yes the system may not add the app to the App Space in block . The system may conclude performing the method . If the system determines that the checksum does not indicate errors i.e. determination block No the system may run a compatibility check on the app in block . For example the system may determine whether the app is compatible with the RFDCS s operating system e.g. Linux .

If the system determines that the app is not compatible with the RFDCS i.e. determination block No the system may not add the app to the App Space in block . The system may conclude performing the method . Otherwise if the system determines that the app is compatible with the RFDCS i.e. determination block Yes the system may optionally determine whether the app is licensed in optional determination block . In an embodiment an app may be licensed when the app is purchased from an authorized software dealer. In an embodiment the only licensed apps are permitted to operate on the RFDCS.

If the system optionally determines that the app is not licensed i.e. optional determination block No the system may not add the app to the App Space in . The system may also conclude performing method . Otherwise if the system optionally determines that the app is licensed i.e. optional determination block Yes the system may optionally determine whether the app is signed in optional determination block . In an embodiment an app may be signed when it has some indicia of authenticity or a signature. For example an app may include credentials that verify that the app comes from a particular entity.

If the system determines that the app is not signed i.e. optional determination block No the system may not add the app to the App Space in block . The system may also conclude performing method . Otherwise if the system determines that the app is signed i.e. optional determination block Yes the system may add the app to the App Space in block . In one embodiment adding the app to the App Store may include making the app available for selection by a user by selecting an icon representing the app displayed on the RFDCS s display panel.

The system may begin performing method by sending a description request to the app in block . In an embodiment the request may require the app to send the system a description of the app that may be displayed to the user e.g. a Unicode string including the description . The description may include the app s purpose and features such as An application for decimating raw RF data. The system may receive the description response from the app in block and the system may convert the description response into a readable form for the user in block .

The system may also send a needed minimum resources request to the app in block . In an embodiment a needed minimum resources request may prompt the app to send a list of required system resources the app needs to operate. For example the app may send a structure including the memory MIPS and privileges the app creator has determined are required for the app to function correctly. The system may receive the needed minimum resources response from the app in block . The system may also associate the needed minimum resource specifications included in the needed minimum resources response with the app in block . In an embodiment the system may reference the app s minimum resource requirements when determining whether to grant system resources to the app as discussed with reference to determination block in .

In block the system may send a maximum resources request to the app. In an embodiment the maximum resources request may prompt the app to send a list of resources the app may use under optimal conditions i.e. if there were no limit to the system resources . In an embodiment the app may have tiered modes of operation in which each tier requires more resources. For example the app may perform simple transforms when limited system resources are available i.e. a minimum resources situation and may perform complex transforms when ample system resources are available i.e. a maximum resources situation . The system may receive the app s maximum resource response in block . The system may also associate the maximum resources specifications in the maximum resources response with the app in block . In an embodiment the system may reference the app s minimum resource requirements when putting the app in Running Mode as described with reference to block in . In other words the system may reference the app s maximum specifications to determine whether to allocate more resources to the app than what the app minimally requires.

The system may then determine whether it has received a request from the app for privileges in determination block in .

The system may create a virtual machine for the app in block . In various embodiments the system may function as a virtual machine manager a VMM or a hypervisor wherein the system creates a secure environment also known as a sandbox in which the app operates and wherein the system serves as an intermediary between the app and other processes or components of the RFDCS. Within the virtual machine the app may be unable to access system resources that the system does not explicitly allocated to the app and the app may be unaware of other processes or components operating on the RFDCS. For example the system may assign the app one or more dedicated cores within a multi core multi chip processor. In another example the system may assign the app a logical artificial environment generated by another component on the RFDCS in which part of the app s allocated memory and resources are partitioned via the operating system or other software constructs. Thus by making a virtual machine for the app the system may securely separate the app s functions from the core system functions thus protecting the stability and security of the core system functions in the event that the app contains unwanted or malicious code for example. In block the system may execute the app in the virtual machine.

In determination block the system may determine whether the app is finished executing. If the system determines that the app has not finished executing i.e. determination block No the system may continue performing in determination block by continuing to determine whether the app has finished executing. In other words the system may wait until the app has finished executing.

Otherwise if the system determines that the app has finished executing i.e. determination block Yes the system may perform virtual machine teardown for the app s virtual machine in block . For example the system may perform virtual machine teardown by freeing the system resource allocated to the app. The system may continue performing in block in by putting the app into Info Mode. 

In block the system may monitor one or more apps running on the RFDCS. In an embodiment the system may monitor each app operating on the RFDCS as well as the transforms those apps perform. In an embodiment the system may be monitoring the one or more apps for various bad behaviors that may include memory leaks crashes security breaches watchdog monitoring etc.

In determination block the system may determine whether any app is performing poorly. For example the system may determine that a particular application has a memory leak that is negatively impacting its performance. If the system determines that no app is performing poorly i.e. determination block No the system may continue monitoring the one or more apps in block .

Otherwise if the system determines that an app is performing poorly i.e. determination block Yes the system may terminate the app performing poorly i.e. the bad app in block . As part of the termination process the system may also force the bad app into a cleanup mode in block whereby the bad app may be forced to free the memory and other system resources allocated to it. In block the system may also de allocate and deregister the bad app s privileges thereby preventing the bad app from accessing various aspects of the RFDCS. The system may continue performing in block by continuing to monitor the remaining apps running on the RFDCS.

In determination block the system may determine whether the core system functions have sufficient resources. For example the system may determine whether the RFDCS s high level operating system e.g. a Linux operating system has sufficient resources to continue operating effectively. If the system determines that the core system functions have sufficient resources i.e. determination block Yes the system may continue monitoring the core system functions in block .

Otherwise if the system determines that that the core system functions do not have sufficient resources i.e. determination block No the system may determine whether one or more apps is using system resources in determination block . If the system determines that one or more apps is not using system resources i.e. determination block No the system may continue monitoring the core system functions in block .

Otherwise if the system determines that one or more apps is using system resources i.e. determination block Yes the system may force one or more apps into Stopping Mode. In other words the system may select one or more of the apps running on the RFDCS and may force one or more of those apps to terminate thereby freeing up resources for the core system functions. In another embodiment the system may select which of the one or more apps will be terminated using various criteria including selecting for termination the apps with the lowest priority idle apps i.e. apps that the user may have launched but has not used for a given period of time or apps using the most system resources. The system may also continue operating in block by continuing to monitor the core system functions.

In determination block the system may determine whether new resources are available. In an embodiment new resource may have been made available after the user terminates another app thereby freeing the resources allocated to that app. If the system determines that no new resources are available i.e. determination block No the system may continue performing in block b monitoring the system resources.

Otherwise if the system determines that new resource are available i.e. determination block Yes the system may select an app in Suspended Mode to receive the resources in block . As discussed above with reference to an app in Suspended Mode may operate at a reduced capacity until its required amount of system resources is available.

In an embodiment the system may implement various methods when selecting an app in Suspended Mode to receive resources. For example each app may have a priority assigned from the system during registration and the system may select the app that has the highest priority. In another example the system in an attempt to most efficiently utilize system resources may select the app that has a minimum resources requirement closest to the amount of resources currently available. In yet another example the system may select an app based on a first in first out queue strategy wherein the app that has been in Suspended Mode the longest may be selected to receive the resources. In a further embodiment the system may only select an app to receive resources if those resources are minimally sufficient for the app to operate.

The system may allocate the newly available resources to the selected app in block . The system may continue operating in block by continuing to monitor the system resources.

In the various embodiments the RFDCS may host apps with various functionalities and capabilities. The following list includes examples of apps and their respective functionalities that may be included in the App Space on the RFDCS according to various embodiments 

The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various embodiments must be performed in the order presented. As will be appreciated by one of skill in the art the order of steps in the foregoing embodiments may be performed in any order. Words such as thereafter then next etc. are not intended to limit the order of the steps these words are simply used to guide the reader through the description of the methods. Further any reference to claim elements in the singular for example using the articles a an or the is not to be construed as limiting the element to the singular.

The various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The hardware used to implement the various illustrative logics logical blocks modules and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. Alternatively some steps or methods may be performed by circuitry that is specific to a given function.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored as one or more instructions or code on a non transitory computer readable storage medium or non transitory processor readable storage medium. The steps of a method or algorithm disclosed herein may be embodied in a processor executable software module which may reside on a non transitory computer readable or processor readable storage medium. Non transitory computer readable or processor readable storage media may be any storage media that may be accessed by a computer or a processor. By way of example but not limitation such non transitory computer readable or processor readable storage media may include RAM ROM EEPROM FLASH memory CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that may be used to store desired program code in the form of instructions or data structures and that may be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above are also included within the scope of non transitory computer readable and processor readable media. Additionally the operations of a method or algorithm may reside as one or any combination or set of codes and or instructions on a non transitory processor readable storage medium and or computer readable storage medium which may be incorporated into a computer program product.

The preceding description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus the present invention is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein.

