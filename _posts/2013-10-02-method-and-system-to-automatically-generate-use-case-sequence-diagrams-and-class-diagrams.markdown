---

title: Method and system to automatically generate use case sequence diagrams and class diagrams
abstract: A system and computer-executed method automatically generate a sequence diagram from Class-Responsibility-Collaborator (CRC) information. The CRC information identifies objects, responsibility information for each object, and collaborator information for each object, and the CRC information corresponds with each activity in an activity diagram. The method includes storing, in a storage device, the objects and corresponding class types of the objects according to the CRC information and associating, by a processor, each of the objects with one or more other objects according to the collaborator information of the CRC information. The method also includes determining, by the processor, messages from each of the objects to associated objects according to the responsibility information, and the processor automatically generating the sequence diagram including the objects and the messages among the objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09158504&OS=09158504&RS=09158504
owner: Baker Hughes Incorporated
number: 09158504
owner_city: Houston
owner_country: US
publication_date: 20131002
---
This application is a Non Provisional of U.S. Provisional Patent Application No. 61 713 144 filed Oct. 12 2012 the disclosure of which is incorporated by reference herein in its entirety.

The development of a software system to process well log data obtained in a downhole environment for example typically entails multiple software programmers developing multiple elements that must eventually be integrated together. Thus tools that allow modeling and top level visualization of systems are employed in software design. For example Unified Modeling Language UML provides a common design language to model computer applications. UML provides several types of diagrams that facilitate ease of understanding of an application under development. System requirements can be decomposed into a model that includes diagrams depicting system behavior. Major behavioral aspects are decomposed into Use Cases to help analyze system functionality. Sequence diagrams are a UML notation and one way in which to capture behavior within each Use Case. However because sequence diagrams are cumbersome to generate and maintain they tend to become out of date as a software development project progresses and therefore less useful in validating a design. Accordingly a system and method to efficiently construct and maintain sequence diagrams and class diagrams would be appreciated in the software development industry.

According to one aspect of the invention a computer executed method of automatically generating a sequence diagram from Class Responsibility Collaborator CRC information the CRC information identifying objects responsibility information for each object and collaborator information for each object and the CRC information corresponding with each activity in an activity diagram includes storing in a storage device the objects and corresponding class types of the objects according to the CRC information associating by a processor each of the objects with one or more other objects according to the collaborator information of the CRC information determining by the processor messages from each of the objects to associated objects according to the responsibility information and the processor automatically generating the sequence diagram including the objects and the messages among the objects.

According to another aspect of the invention a computer executed method of automatically generating a class diagram from Class Responsibility Collaborator CRC information the CRC information identifying an object responsibility information for the object and collaborator information for the object and the CRC information corresponding with each activity in an activity diagram includes storing in a storage device the objects and corresponding class types of the objects according to the CRC information associating by a processor each of the objects with one or more other objects according to the collaborator information of the CRC information determining by the processor dependencies among the objects according to the responsibility information associated with each object and the processor automatically generating the class diagram including the objects and the dependencies among the objects.

According to yet another aspect a system to automatically generate a sequence diagram and a class diagram from Class Responsibility Collaborator CRC information the CRC information identifying an object responsibility information for the object and collaborator information for the object and the CRC information corresponding with each activity in an activity diagram includes a storage device to store the CRC information and instructions for deriving information from the CRC information a processor to execute the instructions to generate the sequence diagram and the class diagram based on the information derived from the CRC information and an output device configured to output the sequence diagram or the class diagram.

While one or more embodiments have been shown and described modifications and substitutions may be made thereto without departing from the spirit and scope of the invention. Accordingly it is to be understood that the present invention has been described by way of illustrations and not limitation.

As noted above maintaining up to date sequence diagrams throughout a software development process becomes a cumbersome and often neglected task. Embodiments detailed below include a system and method to automatically generate and update a sequence diagram and a class diagram. One or more Class Responsibility Collaboration CRC cards detailed below with reference to are associated with each activity in an activity diagram detailed with reference to . In alternate embodiments activity level sequence diagrams as shown in are manually built to represent the CRC information additionally or instead. Based on the CRC information a sequence diagram and a class diagram are automatically generated. The software development process and many of the aspects of the embodiments described herein involve one or more processors working in conjunction with one or more memory devices that store operation commands and data.

In the wellbore data processing example the exemplary activity diagram may include an activity of receiving data collected by one or more sensors downhole. At a decision may be made whether all the expected data was telemetered from sensors in the borehole to a processing system on the surface. The processing system a computer for example may include one or more processors and one or more memory devices and the processing system alone or in combination with other processing systems in a network would be implementing the software system described by the activity diagram . If the decision at were that all the data is not received activity may include collecting the remaining data. Upon completion of activity or if the decision at were that all the data was available activity may include pre processing the collected data. Based on a decision regarding the pre processing at the activities may end in this Use Case or a split may lead to parallel processing of activities and to separately process and display results of sensor data processing. The end of the parallel processing also leads to the end of the activities in the exemplary Use Case.

In the exemplary wellbore data processing system discussed with reference to activity receiving data collected by one or more processors downhole would be associated with CRC information for an object in a class of Entity type for example. The responsibilities of the receiver class include collecting and buffering data telemetered or otherwise provided by downhole sensors. The collaborators of the receiver class would be each of the sensors and any additional system involved in providing the sensor data. As a software design team adds to and modifies the activity diagram during development of the software system the CRC information associated with each new or modified activity is also added to or modified to maintain an accurate association between the CRC information and each activity . As discussed below the CRC information is used to create and update the sequence diagram and class diagram associated with the software system.

It is considered that these teachings may be but need not be implemented in conjunction with a set of computer executable instructions stored on a non transitory computer readable medium including memory ROMs RAMs optical CD ROMs or magnetic disks hard drives or any other type that when executed causes a computer to implement the method of the present invention. These instructions may provide for equipment operation control data collection and analysis and other functions deemed relevant by a system designer owner user or other such personnel in addition to the functions described in this disclosure.

Elements of the embodiments have been introduced with either the articles a or an. The articles are intended to mean that there are one or more of the elements. The terms including and having are intended to be inclusive such that there may be additional elements other than the elements listed.

It will be recognized that the various components or technologies may provide certain necessary or beneficial functionality or features. Accordingly these functions and features as may be needed in support of the appended claims and variations thereof are recognized as being inherently included as a part of the teachings herein and a part of the invention disclosed.

While the invention has been described with reference to exemplary embodiments it will be understood that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition many modifications will be appreciated to adapt a particular instrument situation or material to the teachings of the invention without departing from the essential scope thereof. Therefore it is intended that the invention not be limited to the particular embodiment disclosed as the best mode contemplated for carrying out this invention but that the invention will include all embodiments falling within the scope of the appended claims.

